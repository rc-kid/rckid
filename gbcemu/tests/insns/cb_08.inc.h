    TEST(gbcemu, opcode_cb_08) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 08 0000
        gbc.setState(0xca47, 0x768f, 0xf2c0, 0x9294, 0x72f3, 0xf715, 0x1, 0x0);
        gbc.writeMem(0xca47, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x768f, gbc.sp());
        EXPECT(0xca49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca47));
        EXPECT(0x8, gbc.readMem(0xca48));
        // CB 08 0001
        gbc.setState(0x16b5, 0xe1f, 0x72b0, 0x4662, 0x88af, 0xdffb, 0x0, 0x0);
        gbc.writeMem(0x16b5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe1f, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0002
        gbc.setState(0xe90f, 0x6d3c, 0x8b00, 0x8ee9, 0xb371, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0xe90f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6d3c, gbc.sp());
        EXPECT(0xe911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90f));
        EXPECT(0x8, gbc.readMem(0xe910));
        // CB 08 0003
        gbc.setState(0xdbc8, 0x18d7, 0xb7b0, 0x9cc2, 0xb67d, 0xedc4, 0x0, 0x0);
        gbc.writeMem(0xdbc8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc8));
        EXPECT(0x8, gbc.readMem(0xdbc9));
        // CB 08 0004
        gbc.setState(0xcc39, 0x749, 0xceb0, 0xa8a, 0x16dc, 0x6cc9, 0x0, 0x0);
        gbc.writeMem(0xcc39, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0xcc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc39));
        EXPECT(0x8, gbc.readMem(0xcc3a));
        // CB 08 0005
        gbc.setState(0x9b46, 0x1517, 0xef90, 0x840d, 0xed47, 0x8a08, 0x0, 0x1);
        gbc.writeMem(0x9b46, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1517, gbc.sp());
        EXPECT(0x9b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b46));
        EXPECT(0x8, gbc.readMem(0x9b47));
        // CB 08 0006
        gbc.setState(0x2d72, 0x41d8, 0xd630, 0xe5ff, 0x266a, 0x4106, 0x0, 0x1);
        gbc.writeMem(0x2d72, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x41d8, gbc.sp());
        EXPECT(0x2d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0007
        gbc.setState(0x477, 0x5951, 0x9610, 0xa8a, 0x146b, 0x6f58, 0x1, 0x1);
        gbc.writeMem(0x477, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5951, gbc.sp());
        EXPECT(0x479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0008
        gbc.setState(0xab97, 0xc137, 0xcc60, 0xd4c7, 0x10eb, 0x9734, 0x1, 0x0);
        gbc.writeMem(0xab97, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc137, gbc.sp());
        EXPECT(0xab99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab97));
        EXPECT(0x8, gbc.readMem(0xab98));
        // CB 08 0009
        gbc.setState(0xb4f6, 0xbfde, 0x2570, 0x917d, 0xbd4c, 0xf471, 0x1, 0x0);
        gbc.writeMem(0xb4f6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f6));
        EXPECT(0x8, gbc.readMem(0xb4f7));
        // CB 08 000A
        gbc.setState(0xb09e, 0x74cf, 0xaa60, 0x6bf4, 0x6fc0, 0x136f, 0x1, 0x1);
        gbc.writeMem(0xb09e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x74cf, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09e));
        EXPECT(0x8, gbc.readMem(0xb09f));
        // CB 08 000B
        gbc.setState(0xecb6, 0x6bb0, 0xce70, 0xf2b2, 0x5a66, 0xaf6e, 0x1, 0x1);
        gbc.writeMem(0xecb6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0xecb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb6));
        EXPECT(0x8, gbc.readMem(0xecb7));
        // CB 08 000C
        gbc.setState(0xa6d4, 0xc7b6, 0x9fb0, 0x4448, 0xdb72, 0xf89a, 0x0, 0x1);
        gbc.writeMem(0xa6d4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc7b6, gbc.sp());
        EXPECT(0xa6d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d4));
        EXPECT(0x8, gbc.readMem(0xa6d5));
        // CB 08 000D
        gbc.setState(0xc3aa, 0x632a, 0xd750, 0x61b6, 0x24e9, 0x9480, 0x0, 0x0);
        gbc.writeMem(0xc3aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x632a, gbc.sp());
        EXPECT(0xc3ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3aa));
        EXPECT(0x8, gbc.readMem(0xc3ab));
        // CB 08 000E
        gbc.setState(0x185f, 0x47b, 0xb290, 0xaa62, 0x53c0, 0xfcb8, 0x0, 0x1);
        gbc.writeMem(0x185f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x47b, gbc.sp());
        EXPECT(0x1861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 000F
        gbc.setState(0x1170, 0x1e6a, 0x72a0, 0x68c9, 0xfeae, 0xbf89, 0x0, 0x1);
        gbc.writeMem(0x1170, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1e6a, gbc.sp());
        EXPECT(0x1172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0010
        gbc.setState(0xa178, 0x7e7b, 0x3080, 0xed59, 0xabdd, 0x3779, 0x0, 0x0);
        gbc.writeMem(0xa178, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7e7b, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa178));
        EXPECT(0x8, gbc.readMem(0xa179));
        // CB 08 0011
        gbc.setState(0xb54b, 0x5b17, 0x4af0, 0x5c1, 0xf303, 0x14a2, 0x1, 0x1);
        gbc.writeMem(0xb54b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5b17, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54b));
        EXPECT(0x8, gbc.readMem(0xb54c));
        // CB 08 0012
        gbc.setState(0x7282, 0xf744, 0x880, 0x30e3, 0x7c7c, 0x21c9, 0x1, 0x0);
        gbc.writeMem(0x7282, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf744, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0014
        gbc.setState(0x55fc, 0x5fbe, 0x4b20, 0xe032, 0xb179, 0xf22c, 0x1, 0x0);
        gbc.writeMem(0x55fc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0x55fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0015
        gbc.setState(0x8147, 0x2e59, 0x2880, 0x6aff, 0x50bc, 0xea5c, 0x0, 0x0);
        gbc.writeMem(0x8147, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x8149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8147));
        EXPECT(0x8, gbc.readMem(0x8148));
        // CB 08 0016
        gbc.setState(0x684, 0xaa8f, 0xe600, 0x38c4, 0x9983, 0x7bbc, 0x0, 0x0);
        gbc.writeMem(0x684, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa8f, gbc.sp());
        EXPECT(0x686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0017
        gbc.setState(0x5a51, 0xf030, 0xf530, 0xc2b3, 0x3c1b, 0xbeb4, 0x1, 0x1);
        gbc.writeMem(0x5a51, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf030, gbc.sp());
        EXPECT(0x5a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0018
        gbc.setState(0x34f7, 0x2f16, 0x8c50, 0x9861, 0x8c81, 0x4c94, 0x0, 0x0);
        gbc.writeMem(0x34f7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2f16, gbc.sp());
        EXPECT(0x34f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0019
        gbc.setState(0xd43c, 0xb873, 0xf760, 0xebe, 0x5d23, 0xeede, 0x1, 0x0);
        gbc.writeMem(0xd43c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43c));
        EXPECT(0x8, gbc.readMem(0xd43d));
        // CB 08 001A
        gbc.setState(0x8fe4, 0x4095, 0x2f0, 0x7151, 0xda4e, 0x20fc, 0x0, 0x1);
        gbc.writeMem(0x8fe4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4095, gbc.sp());
        EXPECT(0x8fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fe4));
        EXPECT(0x8, gbc.readMem(0x8fe5));
        // CB 08 001B
        gbc.setState(0xbade, 0x6e04, 0x9630, 0x24d9, 0xc4b9, 0x26c3, 0x1, 0x0);
        gbc.writeMem(0xbade, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0xbae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbade));
        EXPECT(0x8, gbc.readMem(0xbadf));
        // CB 08 001C
        gbc.setState(0x6bd3, 0x51fc, 0xa950, 0x3975, 0x3ae1, 0x4aa, 0x0, 0x1);
        gbc.writeMem(0x6bd3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x51fc, gbc.sp());
        EXPECT(0x6bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 001D
        gbc.setState(0x71b5, 0xc9bf, 0xd070, 0x157f, 0x44, 0xdc1, 0x1, 0x1);
        gbc.writeMem(0x71b5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc9bf, gbc.sp());
        EXPECT(0x71b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 001E
        gbc.setState(0xbc68, 0x1c5a, 0xa4d0, 0x2137, 0xeb73, 0x752c, 0x0, 0x0);
        gbc.writeMem(0xbc68, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1c5a, gbc.sp());
        EXPECT(0xbc6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc68));
        EXPECT(0x8, gbc.readMem(0xbc69));
        // CB 08 001F
        gbc.setState(0x9ba4, 0xd9fb, 0x35b0, 0x3117, 0xaff0, 0xf11f, 0x0, 0x1);
        gbc.writeMem(0x9ba4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd9fb, gbc.sp());
        EXPECT(0x9ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba4));
        EXPECT(0x8, gbc.readMem(0x9ba5));
        // CB 08 0020
        gbc.setState(0x9894, 0xccc1, 0x9210, 0x9ca4, 0x1415, 0xa223, 0x0, 0x1);
        gbc.writeMem(0x9894, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xccc1, gbc.sp());
        EXPECT(0x9896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9894));
        EXPECT(0x8, gbc.readMem(0x9895));
        // CB 08 0022
        gbc.setState(0x2800, 0x67b8, 0x2240, 0x6fe8, 0x3f4c, 0xe041, 0x0, 0x0);
        gbc.writeMem(0x2800, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x67b8, gbc.sp());
        EXPECT(0x2802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0023
        gbc.setState(0x243, 0x1b2, 0xb690, 0x1c0e, 0x37bb, 0x4e4f, 0x1, 0x1);
        gbc.writeMem(0x243, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b2, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0024
        gbc.setState(0x9858, 0x6e7d, 0x2ac0, 0xf0dc, 0x2634, 0x7cff, 0x0, 0x0);
        gbc.writeMem(0x9858, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6e7d, gbc.sp());
        EXPECT(0x985a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9858));
        EXPECT(0x8, gbc.readMem(0x9859));
        // CB 08 0025
        gbc.setState(0x9e1, 0x8890, 0xce40, 0x53b4, 0xf3eb, 0xf26b, 0x0, 0x1);
        gbc.writeMem(0x9e1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0026
        gbc.setState(0xd17, 0x6890, 0x7490, 0xf065, 0xfdfc, 0x9e4f, 0x1, 0x0);
        gbc.writeMem(0xd17, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6890, gbc.sp());
        EXPECT(0xd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0027
        gbc.setState(0x441, 0xed0f, 0x4f70, 0xc4a3, 0xc20e, 0x891a, 0x0, 0x1);
        gbc.writeMem(0x441, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xed0f, gbc.sp());
        EXPECT(0x443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0028
        gbc.setState(0x5ca, 0x1d51, 0xe5a0, 0x20e5, 0xf463, 0xe90d, 0x0, 0x1);
        gbc.writeMem(0x5ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1d51, gbc.sp());
        EXPECT(0x5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0029
        gbc.setState(0x4335, 0xafd5, 0x10d0, 0x1a01, 0xb11, 0x4b9b, 0x0, 0x1);
        gbc.writeMem(0x4335, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xafd5, gbc.sp());
        EXPECT(0x4337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 002A
        gbc.setState(0x4dcb, 0x3cbf, 0x56a0, 0xd4dc, 0xe0be, 0x6878, 0x0, 0x0);
        gbc.writeMem(0x4dcb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x4dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 002B
        gbc.setState(0xdf1c, 0xb6c8, 0x5240, 0x8400, 0xbc47, 0x5de2, 0x0, 0x0);
        gbc.writeMem(0xdf1c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb6c8, gbc.sp());
        EXPECT(0xdf1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf1c));
        EXPECT(0x8, gbc.readMem(0xdf1d));
        // CB 08 002C
        gbc.setState(0x7cfb, 0x23a2, 0xf860, 0xd990, 0x6d4e, 0x312f, 0x0, 0x1);
        gbc.writeMem(0x7cfb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x23a2, gbc.sp());
        EXPECT(0x7cfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 002D
        gbc.setState(0xb855, 0xc09e, 0x3630, 0xd60b, 0x8543, 0x51ce, 0x1, 0x0);
        gbc.writeMem(0xb855, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc09e, gbc.sp());
        EXPECT(0xb857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb855));
        EXPECT(0x8, gbc.readMem(0xb856));
        // CB 08 002E
        gbc.setState(0x82bf, 0x342a, 0x2cb0, 0xee94, 0x83c7, 0x56ee, 0x0, 0x0);
        gbc.writeMem(0x82bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x342a, gbc.sp());
        EXPECT(0x82c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82bf));
        EXPECT(0x8, gbc.readMem(0x82c0));
        // CB 08 002F
        gbc.setState(0x3c48, 0xd18c, 0xd8d0, 0xc84a, 0xc344, 0xdefd, 0x0, 0x0);
        gbc.writeMem(0x3c48, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0x3c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0030
        gbc.setState(0x1bb5, 0xaf67, 0xc9e0, 0x5922, 0x3e2b, 0xd55f, 0x0, 0x1);
        gbc.writeMem(0x1bb5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xaf67, gbc.sp());
        EXPECT(0x1bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0031
        gbc.setState(0xb33a, 0x3e75, 0x1b90, 0xc0e4, 0xb3ba, 0x724e, 0x0, 0x1);
        gbc.writeMem(0xb33a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0xb33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33a));
        EXPECT(0x8, gbc.readMem(0xb33b));
        // CB 08 0032
        gbc.setState(0xe504, 0x9e4e, 0x8700, 0x79de, 0xe147, 0x3fed, 0x0, 0x0);
        gbc.writeMem(0xe504, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9e4e, gbc.sp());
        EXPECT(0xe506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe504));
        EXPECT(0x8, gbc.readMem(0xe505));
        // CB 08 0033
        gbc.setState(0x6004, 0x940e, 0xe0c0, 0x104, 0xaf76, 0xb46c, 0x1, 0x1);
        gbc.writeMem(0x6004, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x940e, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0034
        gbc.setState(0x37af, 0x8c20, 0xb0a0, 0x9dd5, 0x76c0, 0xc77d, 0x0, 0x1);
        gbc.writeMem(0x37af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8c20, gbc.sp());
        EXPECT(0x37b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0035
        gbc.setState(0xe816, 0xb491, 0xe020, 0x25c2, 0x2e88, 0xa284, 0x1, 0x1);
        gbc.writeMem(0xe816, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb491, gbc.sp());
        EXPECT(0xe818, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe816));
        EXPECT(0x8, gbc.readMem(0xe817));
        // CB 08 0036
        gbc.setState(0x82c4, 0xb0fc, 0xa1a0, 0x4e9, 0x2374, 0x2dc, 0x1, 0x1);
        gbc.writeMem(0x82c4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c4));
        EXPECT(0x8, gbc.readMem(0x82c5));
        // CB 08 0037
        gbc.setState(0xcc34, 0x41f4, 0x66b0, 0x6e6e, 0x70b1, 0xedd0, 0x0, 0x1);
        gbc.writeMem(0xcc34, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x41f4, gbc.sp());
        EXPECT(0xcc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc34));
        EXPECT(0x8, gbc.readMem(0xcc35));
        // CB 08 0038
        gbc.setState(0xa983, 0x7975, 0x62d0, 0xadb9, 0xf11a, 0xe6c8, 0x0, 0x0);
        gbc.writeMem(0xa983, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0xa985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa983));
        EXPECT(0x8, gbc.readMem(0xa984));
        // CB 08 003A
        gbc.setState(0x5bc4, 0x8e1a, 0x7980, 0xa1c7, 0xc0ff, 0x6c7, 0x1, 0x1);
        gbc.writeMem(0x5bc4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0x5bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 003B
        gbc.setState(0x8c26, 0x9ef5, 0xd770, 0x81e9, 0xa74d, 0x9498, 0x1, 0x0);
        gbc.writeMem(0x8c26, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0x8c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c26));
        EXPECT(0x8, gbc.readMem(0x8c27));
        // CB 08 003C
        gbc.setState(0x4d01, 0xbc00, 0x9b80, 0x6117, 0x9c82, 0x7571, 0x0, 0x1);
        gbc.writeMem(0x4d01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbc00, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 003D
        gbc.setState(0x523d, 0x86f7, 0x7180, 0x9508, 0xa017, 0x2b8c, 0x0, 0x1);
        gbc.writeMem(0x523d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x86f7, gbc.sp());
        EXPECT(0x523f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 003E
        gbc.setState(0xaa00, 0x2e64, 0x9f90, 0x3c1c, 0x23a7, 0xddc6, 0x0, 0x1);
        gbc.writeMem(0xaa00, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0xaa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa00));
        EXPECT(0x8, gbc.readMem(0xaa01));
        // CB 08 003F
        gbc.setState(0xda17, 0xd70a, 0x6470, 0x3c6e, 0xa4b9, 0xc134, 0x1, 0x1);
        gbc.writeMem(0xda17, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0xda19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda17));
        EXPECT(0x8, gbc.readMem(0xda18));
        // CB 08 0040
        gbc.setState(0x5e30, 0xba6d, 0xf3e0, 0xcd1a, 0x6d91, 0x88ac, 0x0, 0x1);
        gbc.writeMem(0x5e30, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xba6d, gbc.sp());
        EXPECT(0x5e32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0041
        gbc.setState(0x1942, 0x6ec8, 0x5730, 0x136b, 0xdf1c, 0x1d4d, 0x0, 0x0);
        gbc.writeMem(0x1942, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6ec8, gbc.sp());
        EXPECT(0x1944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0043
        gbc.setState(0xe3b2, 0xb88f, 0x4b50, 0xa81e, 0x4b85, 0x3a3b, 0x1, 0x1);
        gbc.writeMem(0xe3b2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb88f, gbc.sp());
        EXPECT(0xe3b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b2));
        EXPECT(0x8, gbc.readMem(0xe3b3));
        // CB 08 0044
        gbc.setState(0x6f81, 0x287c, 0xd070, 0x8df8, 0x54ca, 0x19a, 0x1, 0x1);
        gbc.writeMem(0x6f81, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0045
        gbc.setState(0xdfa7, 0x8500, 0xf310, 0x8101, 0x7965, 0xb32c, 0x0, 0x1);
        gbc.writeMem(0xdfa7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8500, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa7));
        EXPECT(0x8, gbc.readMem(0xdfa8));
        // CB 08 0046
        gbc.setState(0x212c, 0xf303, 0x900, 0x4425, 0x4c72, 0x746d, 0x1, 0x0);
        gbc.writeMem(0x212c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf303, gbc.sp());
        EXPECT(0x212e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0047
        gbc.setState(0x164c, 0xb1ee, 0x3de0, 0x88b5, 0xe492, 0x9976, 0x1, 0x0);
        gbc.writeMem(0x164c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x164e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0048
        gbc.setState(0xbc04, 0xdf48, 0x35e0, 0xede3, 0x46f5, 0xb65, 0x1, 0x0);
        gbc.writeMem(0xbc04, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdf48, gbc.sp());
        EXPECT(0xbc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc04));
        EXPECT(0x8, gbc.readMem(0xbc05));
        // CB 08 0049
        gbc.setState(0x42ab, 0x9ee2, 0xced0, 0x259b, 0xb1be, 0xa582, 0x1, 0x0);
        gbc.writeMem(0x42ab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9ee2, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 004A
        gbc.setState(0xb409, 0xa676, 0xbb40, 0x298f, 0x2495, 0xa56c, 0x0, 0x1);
        gbc.writeMem(0xb409, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa676, gbc.sp());
        EXPECT(0xb40b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb409));
        EXPECT(0x8, gbc.readMem(0xb40a));
        // CB 08 004B
        gbc.setState(0xbbdc, 0x9dc9, 0x2860, 0x7676, 0x7fa9, 0xea53, 0x0, 0x0);
        gbc.writeMem(0xbbdc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9dc9, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdc));
        EXPECT(0x8, gbc.readMem(0xbbdd));
        // CB 08 004E
        gbc.setState(0x7eaa, 0x3e96, 0xd60, 0x7156, 0x3fab, 0xf436, 0x1, 0x1);
        gbc.writeMem(0x7eaa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3e96, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 004F
        gbc.setState(0x4711, 0x6a18, 0x73e0, 0xa533, 0x57ce, 0x52ef, 0x0, 0x0);
        gbc.writeMem(0x4711, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6a18, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0050
        gbc.setState(0xd04a, 0xa8b, 0x1790, 0x6c7c, 0x37de, 0x9e5, 0x0, 0x0);
        gbc.writeMem(0xd04a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa8b, gbc.sp());
        EXPECT(0xd04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04a));
        EXPECT(0x8, gbc.readMem(0xd04b));
        // CB 08 0051
        gbc.setState(0x3596, 0x3325, 0xb7d0, 0xebec, 0x61d7, 0xf174, 0x0, 0x1);
        gbc.writeMem(0x3596, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3325, gbc.sp());
        EXPECT(0x3598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0052
        gbc.setState(0x4e4c, 0x4d1b, 0x9bb0, 0x62b9, 0x4fb0, 0x9a44, 0x0, 0x1);
        gbc.writeMem(0x4e4c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4d1b, gbc.sp());
        EXPECT(0x4e4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0053
        gbc.setState(0x9838, 0xb9d4, 0x9370, 0x585a, 0x9274, 0x143d, 0x0, 0x0);
        gbc.writeMem(0x9838, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x983a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9838));
        EXPECT(0x8, gbc.readMem(0x9839));
        // CB 08 0054
        gbc.setState(0x546f, 0x86dc, 0x90c0, 0xb0c8, 0xf2cd, 0xe1d8, 0x0, 0x1);
        gbc.writeMem(0x546f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x86dc, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0055
        gbc.setState(0xdb69, 0xb965, 0xe2b0, 0x162e, 0x63fc, 0xdb01, 0x0, 0x0);
        gbc.writeMem(0xdb69, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb965, gbc.sp());
        EXPECT(0xdb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb69));
        EXPECT(0x8, gbc.readMem(0xdb6a));
        // CB 08 0056
        gbc.setState(0x9b06, 0x17b4, 0xbc50, 0x68fb, 0xcc62, 0xc1d8, 0x1, 0x1);
        gbc.writeMem(0x9b06, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17b4, gbc.sp());
        EXPECT(0x9b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b06));
        EXPECT(0x8, gbc.readMem(0x9b07));
        // CB 08 0057
        gbc.setState(0x6e7f, 0xf887, 0x91e0, 0xee40, 0x2bfb, 0x7947, 0x1, 0x1);
        gbc.writeMem(0x6e7f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf887, gbc.sp());
        EXPECT(0x6e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0058
        gbc.setState(0x8afb, 0xb68d, 0x990, 0x544b, 0xa67e, 0x56f9, 0x1, 0x1);
        gbc.writeMem(0x8afb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb68d, gbc.sp());
        EXPECT(0x8afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afb));
        EXPECT(0x8, gbc.readMem(0x8afc));
        // CB 08 0059
        gbc.setState(0x1fe3, 0x355e, 0x3b20, 0x30bb, 0x8ac4, 0xe129, 0x1, 0x1);
        gbc.writeMem(0x1fe3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x355e, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 005A
        gbc.setState(0xdf7e, 0x20ad, 0x4650, 0x1c2, 0xdc1b, 0x1777, 0x0, 0x0);
        gbc.writeMem(0xdf7e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x20ad, gbc.sp());
        EXPECT(0xdf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7e));
        EXPECT(0x8, gbc.readMem(0xdf7f));
        // CB 08 005B
        gbc.setState(0xd92d, 0x4b5d, 0x1b50, 0x3d4f, 0x62f2, 0x6a09, 0x1, 0x0);
        gbc.writeMem(0xd92d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4b5d, gbc.sp());
        EXPECT(0xd92f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd92d));
        EXPECT(0x8, gbc.readMem(0xd92e));
        // CB 08 005C
        gbc.setState(0x7878, 0x80a2, 0xce80, 0x884c, 0x1fcf, 0x930, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x80a2, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 005D
        gbc.setState(0x55fd, 0xa7e1, 0x5780, 0x236b, 0xfa29, 0x4942, 0x1, 0x1);
        gbc.writeMem(0x55fd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x55ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 005E
        gbc.setState(0x7b19, 0x46c6, 0xa1a0, 0xc251, 0x4b00, 0x4c06, 0x0, 0x0);
        gbc.writeMem(0x7b19, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 005F
        gbc.setState(0xc96c, 0xad68, 0x99f0, 0xf137, 0x396b, 0xf46c, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0xc96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96c));
        EXPECT(0x8, gbc.readMem(0xc96d));
        // CB 08 0060
        gbc.setState(0x9103, 0xd496, 0x1b30, 0xfc39, 0xb68f, 0xf3c5, 0x0, 0x0);
        gbc.writeMem(0x9103, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd496, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9103));
        EXPECT(0x8, gbc.readMem(0x9104));
        // CB 08 0061
        gbc.setState(0xd004, 0x64b4, 0x6430, 0xc0a2, 0x1536, 0x8c15, 0x0, 0x1);
        gbc.writeMem(0xd004, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x64b4, gbc.sp());
        EXPECT(0xd006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd004));
        EXPECT(0x8, gbc.readMem(0xd005));
        // CB 08 0062
        gbc.setState(0x9fe7, 0x3e93, 0xe5c0, 0x4e04, 0x86cd, 0x4d5a, 0x1, 0x1);
        gbc.writeMem(0x9fe7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3e93, gbc.sp());
        EXPECT(0x9fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe7));
        EXPECT(0x8, gbc.readMem(0x9fe8));
        // CB 08 0063
        gbc.setState(0xd86f, 0x6b39, 0xa690, 0x8d16, 0xf554, 0x8925, 0x1, 0x0);
        gbc.writeMem(0xd86f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6b39, gbc.sp());
        EXPECT(0xd871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86f));
        EXPECT(0x8, gbc.readMem(0xd870));
        // CB 08 0064
        gbc.setState(0x4a10, 0x20c3, 0xab00, 0xcc39, 0xb0d2, 0x2bd4, 0x1, 0x0);
        gbc.writeMem(0x4a10, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0x4a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0065
        gbc.setState(0x57a7, 0x9196, 0x8650, 0x40a6, 0x293c, 0x82c4, 0x0, 0x0);
        gbc.writeMem(0x57a7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9196, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0066
        gbc.setState(0x5888, 0x9365, 0xda40, 0x7fb7, 0x2956, 0x7cff, 0x0, 0x1);
        gbc.writeMem(0x5888, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9365, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0067
        gbc.setState(0x2d8e, 0xc1a3, 0xbbe0, 0x3940, 0x5bc1, 0xa1ff, 0x1, 0x1);
        gbc.writeMem(0x2d8e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc1a3, gbc.sp());
        EXPECT(0x2d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0068
        gbc.setState(0x6beb, 0x14bc, 0xa350, 0xdc00, 0x68e3, 0x32e8, 0x1, 0x1);
        gbc.writeMem(0x6beb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x14bc, gbc.sp());
        EXPECT(0x6bed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0069
        gbc.setState(0x685b, 0xf3b8, 0x7130, 0x8598, 0xcd2b, 0x3f86, 0x0, 0x0);
        gbc.writeMem(0x685b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf3b8, gbc.sp());
        EXPECT(0x685d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 006A
        gbc.setState(0x88ec, 0xf0a3, 0x7060, 0xdd33, 0xabb4, 0xab4a, 0x1, 0x0);
        gbc.writeMem(0x88ec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf0a3, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ec));
        EXPECT(0x8, gbc.readMem(0x88ed));
        // CB 08 006B
        gbc.setState(0xc75f, 0x44cf, 0xc4d0, 0xa5a0, 0xafc2, 0x2e5a, 0x0, 0x1);
        gbc.writeMem(0xc75f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x44cf, gbc.sp());
        EXPECT(0xc761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75f));
        EXPECT(0x8, gbc.readMem(0xc760));
        // CB 08 006C
        gbc.setState(0xcbf0, 0xe2dd, 0xb150, 0x235, 0x6a09, 0x9a95, 0x0, 0x0);
        gbc.writeMem(0xcbf0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe2dd, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbf0));
        EXPECT(0x8, gbc.readMem(0xcbf1));
        // CB 08 006D
        gbc.setState(0x778c, 0xbd41, 0xa190, 0x16a8, 0x28ba, 0x363f, 0x1, 0x0);
        gbc.writeMem(0x778c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbd41, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 006E
        gbc.setState(0x166a, 0x353c, 0xb0c0, 0x7215, 0x9327, 0x380b, 0x0, 0x1);
        gbc.writeMem(0x166a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x353c, gbc.sp());
        EXPECT(0x166c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 006F
        gbc.setState(0x4874, 0xed58, 0xfb90, 0xb0dc, 0x9db4, 0x9099, 0x0, 0x1);
        gbc.writeMem(0x4874, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xed58, gbc.sp());
        EXPECT(0x4876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0070
        gbc.setState(0x4088, 0xa283, 0x19c0, 0xdfdc, 0xb456, 0xdc62, 0x1, 0x0);
        gbc.writeMem(0x4088, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa283, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0071
        gbc.setState(0x4e80, 0x61be, 0x6fd0, 0xc29f, 0xe052, 0x1fe5, 0x0, 0x1);
        gbc.writeMem(0x4e80, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0x4e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0073
        gbc.setState(0xeda6, 0x128e, 0x3190, 0x61b6, 0x926d, 0x599, 0x0, 0x0);
        gbc.writeMem(0xeda6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0xeda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda6));
        EXPECT(0x8, gbc.readMem(0xeda7));
        // CB 08 0074
        gbc.setState(0x8e26, 0x67b6, 0x5e70, 0xb899, 0x4868, 0x8dad, 0x1, 0x0);
        gbc.writeMem(0x8e26, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x67b6, gbc.sp());
        EXPECT(0x8e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e26));
        EXPECT(0x8, gbc.readMem(0x8e27));
        // CB 08 0075
        gbc.setState(0x1618, 0x7dc9, 0x2200, 0xec0a, 0x7c4a, 0x97f5, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7dc9, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0076
        gbc.setState(0x4275, 0x326d, 0x60c0, 0x162c, 0xa1dd, 0xbb5a, 0x1, 0x0);
        gbc.writeMem(0x4275, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x326d, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0077
        gbc.setState(0xbf24, 0x85c8, 0x9410, 0xc976, 0x4d3f, 0x5d2f, 0x0, 0x0);
        gbc.writeMem(0xbf24, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x85c8, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0x8, gbc.readMem(0xbf25));
        // CB 08 0078
        gbc.setState(0xc649, 0x2f27, 0x5440, 0xb020, 0xaad4, 0x7ba1, 0x1, 0x1);
        gbc.writeMem(0xc649, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2f27, gbc.sp());
        EXPECT(0xc64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc649));
        EXPECT(0x8, gbc.readMem(0xc64a));
        // CB 08 0079
        gbc.setState(0xe57b, 0x33d1, 0xeba0, 0xeda2, 0xd511, 0xdd0e, 0x0, 0x0);
        gbc.writeMem(0xe57b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x33d1, gbc.sp());
        EXPECT(0xe57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57b));
        EXPECT(0x8, gbc.readMem(0xe57c));
        // CB 08 007A
        gbc.setState(0xc2ab, 0x88ec, 0xed70, 0xd90f, 0x68d3, 0x95cc, 0x1, 0x1);
        gbc.writeMem(0xc2ab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x88ec, gbc.sp());
        EXPECT(0xc2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ab));
        EXPECT(0x8, gbc.readMem(0xc2ac));
        // CB 08 007B
        gbc.setState(0x5554, 0x9d6f, 0xfbc0, 0x1cbe, 0xe580, 0x9fc6, 0x1, 0x0);
        gbc.writeMem(0x5554, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x5556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 007C
        gbc.setState(0x1b5e, 0xe619, 0x1a30, 0xaa75, 0x693f, 0xd378, 0x0, 0x1);
        gbc.writeMem(0x1b5e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe619, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 007D
        gbc.setState(0x7f53, 0xa582, 0x8b80, 0x1e1b, 0xb40d, 0xc745, 0x1, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa582, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 007E
        gbc.setState(0xa2d, 0xe9b9, 0x67a0, 0x3310, 0xea0e, 0x7815, 0x1, 0x1);
        gbc.writeMem(0xa2d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe9b9, gbc.sp());
        EXPECT(0xa2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 007F
        gbc.setState(0x9265, 0x23fb, 0x6740, 0x4fe8, 0xee61, 0xfcf9, 0x1, 0x0);
        gbc.writeMem(0x9265, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x23fb, gbc.sp());
        EXPECT(0x9267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9265));
        EXPECT(0x8, gbc.readMem(0x9266));
        // CB 08 0080
        gbc.setState(0xb4d5, 0x6ee, 0x9d80, 0xcd00, 0xe436, 0xeb7c, 0x0, 0x0);
        gbc.writeMem(0xb4d5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6ee, gbc.sp());
        EXPECT(0xb4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d5));
        EXPECT(0x8, gbc.readMem(0xb4d6));
        // CB 08 0081
        gbc.setState(0x128c, 0xa64b, 0x1650, 0x6340, 0x8537, 0xceaa, 0x0, 0x1);
        gbc.writeMem(0x128c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa64b, gbc.sp());
        EXPECT(0x128e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0082
        gbc.setState(0x2e8d, 0x5a2, 0xe0f0, 0xcc91, 0xc88d, 0xe98f, 0x0, 0x0);
        gbc.writeMem(0x2e8d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5a2, gbc.sp());
        EXPECT(0x2e8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0083
        gbc.setState(0x4a2a, 0x14cf, 0xf520, 0x924d, 0x9fe4, 0xe410, 0x0, 0x1);
        gbc.writeMem(0x4a2a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x14cf, gbc.sp());
        EXPECT(0x4a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0084
        gbc.setState(0x927e, 0xd86b, 0x5cb0, 0xceb3, 0xff53, 0xe8ac, 0x0, 0x1);
        gbc.writeMem(0x927e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd86b, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927e));
        EXPECT(0x8, gbc.readMem(0x927f));
        // CB 08 0085
        gbc.setState(0x6e6b, 0x4c6d, 0x8940, 0x5292, 0x2620, 0x89c5, 0x1, 0x1);
        gbc.writeMem(0x6e6b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4c6d, gbc.sp());
        EXPECT(0x6e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0086
        gbc.setState(0xe25e, 0x8e6f, 0x7d30, 0x121e, 0x48d0, 0xb990, 0x1, 0x1);
        gbc.writeMem(0xe25e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0xe260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25e));
        EXPECT(0x8, gbc.readMem(0xe25f));
        // CB 08 0087
        gbc.setState(0xc175, 0xbf62, 0xdb30, 0x3236, 0xf78c, 0x10b, 0x0, 0x1);
        gbc.writeMem(0xc175, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbf62, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc175));
        EXPECT(0x8, gbc.readMem(0xc176));
        // CB 08 0088
        gbc.setState(0x1a68, 0xa1ea, 0xa1b0, 0x88d9, 0xe0df, 0x3296, 0x1, 0x1);
        gbc.writeMem(0x1a68, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa1ea, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0089
        gbc.setState(0xb639, 0xa68b, 0xe40, 0xc3e4, 0xb91, 0xa635, 0x0, 0x0);
        gbc.writeMem(0xb639, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa68b, gbc.sp());
        EXPECT(0xb63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb639));
        EXPECT(0x8, gbc.readMem(0xb63a));
        // CB 08 008A
        gbc.setState(0x4342, 0x5d45, 0x8360, 0xb64f, 0x4ed2, 0xc0ec, 0x1, 0x0);
        gbc.writeMem(0x4342, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5d45, gbc.sp());
        EXPECT(0x4344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 008C
        gbc.setState(0xc26, 0x2cef, 0x8c40, 0xfde6, 0x29c7, 0xcb62, 0x0, 0x1);
        gbc.writeMem(0xc26, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2cef, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 008D
        gbc.setState(0x13bf, 0xaf95, 0x5060, 0xe8e6, 0x7d00, 0x3767, 0x0, 0x0);
        gbc.writeMem(0x13bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaf95, gbc.sp());
        EXPECT(0x13c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 008F
        gbc.setState(0x7e87, 0x300, 0x2f10, 0xf075, 0x9e91, 0x98a6, 0x0, 0x0);
        gbc.writeMem(0x7e87, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x300, gbc.sp());
        EXPECT(0x7e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0090
        gbc.setState(0x20de, 0x4897, 0xcbf0, 0xd6cc, 0x26cb, 0x85f0, 0x0, 0x1);
        gbc.writeMem(0x20de, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4897, gbc.sp());
        EXPECT(0x20e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0091
        gbc.setState(0x6067, 0xaa98, 0xca00, 0xcc14, 0x3721, 0x6718, 0x0, 0x0);
        gbc.writeMem(0x6067, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0x6069, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0092
        gbc.setState(0x4a82, 0xe166, 0xef20, 0xf349, 0xc581, 0x48a2, 0x0, 0x0);
        gbc.writeMem(0x4a82, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe166, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0093
        gbc.setState(0x1500, 0x9524, 0x2140, 0xed1b, 0x8035, 0xcde3, 0x0, 0x0);
        gbc.writeMem(0x1500, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9524, gbc.sp());
        EXPECT(0x1502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0094
        gbc.setState(0xf10, 0x8d10, 0x9d20, 0xb3c3, 0x2e8a, 0xaa89, 0x0, 0x1);
        gbc.writeMem(0xf10, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0xf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0095
        gbc.setState(0xe5d5, 0xee3b, 0x86d0, 0x894c, 0x1990, 0x3b28, 0x1, 0x1);
        gbc.writeMem(0xe5d5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee3b, gbc.sp());
        EXPECT(0xe5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d5));
        EXPECT(0x8, gbc.readMem(0xe5d6));
        // CB 08 0096
        gbc.setState(0x642c, 0x5cfc, 0xa690, 0xeca7, 0x4b5e, 0x682b, 0x1, 0x1);
        gbc.writeMem(0x642c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0x642e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0097
        gbc.setState(0x34d2, 0xd224, 0x5170, 0x590f, 0xa161, 0x1fd7, 0x0, 0x0);
        gbc.writeMem(0x34d2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd224, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0098
        gbc.setState(0xe105, 0xe9d1, 0xc9c0, 0xe4ce, 0x1f00, 0xa415, 0x1, 0x0);
        gbc.writeMem(0xe105, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe9d1, gbc.sp());
        EXPECT(0xe107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe105));
        EXPECT(0x8, gbc.readMem(0xe106));
        // CB 08 0099
        gbc.setState(0x19e4, 0xf7b, 0xa5c0, 0xd45, 0x8bd9, 0xe49f, 0x0, 0x0);
        gbc.writeMem(0x19e4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf7b, gbc.sp());
        EXPECT(0x19e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 009A
        gbc.setState(0xc2dd, 0xb13a, 0xaca0, 0xaa73, 0x12d, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0xc2dd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0xc2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2dd));
        EXPECT(0x8, gbc.readMem(0xc2de));
        // CB 08 009B
        gbc.setState(0x8d01, 0x34c1, 0x43d0, 0xe27e, 0x5a44, 0x813a, 0x0, 0x1);
        gbc.writeMem(0x8d01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x34c1, gbc.sp());
        EXPECT(0x8d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d01));
        EXPECT(0x8, gbc.readMem(0x8d02));
        // CB 08 009D
        gbc.setState(0x2d3e, 0xc294, 0xe920, 0xebce, 0x31ec, 0xff3e, 0x0, 0x1);
        gbc.writeMem(0x2d3e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc294, gbc.sp());
        EXPECT(0x2d40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 009E
        gbc.setState(0xb891, 0x705b, 0xdfa0, 0x9147, 0x5ba4, 0x9306, 0x0, 0x0);
        gbc.writeMem(0xb891, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x705b, gbc.sp());
        EXPECT(0xb893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb891));
        EXPECT(0x8, gbc.readMem(0xb892));
        // CB 08 009F
        gbc.setState(0x25ed, 0x5e84, 0x5f90, 0xbfc2, 0x4bf, 0x82, 0x1, 0x1);
        gbc.writeMem(0x25ed, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5e84, gbc.sp());
        EXPECT(0x25ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00A0
        gbc.setState(0x228d, 0x1844, 0x8540, 0xb9f9, 0xbead, 0xa766, 0x1, 0x0);
        gbc.writeMem(0x228d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1844, gbc.sp());
        EXPECT(0x228f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00A1
        gbc.setState(0xc5f6, 0xd2ca, 0x4a60, 0x8b02, 0x9db9, 0x3164, 0x0, 0x1);
        gbc.writeMem(0xc5f6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd2ca, gbc.sp());
        EXPECT(0xc5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5f6));
        EXPECT(0x8, gbc.readMem(0xc5f7));
        // CB 08 00A2
        gbc.setState(0x6bf0, 0x280b, 0xa140, 0x33f7, 0x4627, 0xdebd, 0x1, 0x0);
        gbc.writeMem(0x6bf0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x280b, gbc.sp());
        EXPECT(0x6bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00A5
        gbc.setState(0xb5f6, 0xc38f, 0x10c0, 0x22d6, 0x483d, 0x6949, 0x1, 0x0);
        gbc.writeMem(0xb5f6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc38f, gbc.sp());
        EXPECT(0xb5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f6));
        EXPECT(0x8, gbc.readMem(0xb5f7));
        // CB 08 00A6
        gbc.setState(0x4d38, 0x2ac3, 0x950, 0xc542, 0x26a5, 0x6d7c, 0x1, 0x0);
        gbc.writeMem(0x4d38, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2ac3, gbc.sp());
        EXPECT(0x4d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00A7
        gbc.setState(0xc78e, 0x5844, 0x8fc0, 0x722e, 0x1b0a, 0x5081, 0x0, 0x0);
        gbc.writeMem(0xc78e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5844, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78e));
        EXPECT(0x8, gbc.readMem(0xc78f));
        // CB 08 00A8
        gbc.setState(0x9fe, 0x41f6, 0x2b60, 0x1d0a, 0xfdb6, 0xdddd, 0x1, 0x0);
        gbc.writeMem(0x9fe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x41f6, gbc.sp());
        EXPECT(0xa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00A9
        gbc.setState(0x3ed3, 0xe0e8, 0x42b0, 0x6383, 0xe261, 0xb6b1, 0x0, 0x1);
        gbc.writeMem(0x3ed3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x3ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00AA
        gbc.setState(0xd19a, 0xd4be, 0x7740, 0x7eb3, 0xf8af, 0xbcd4, 0x1, 0x1);
        gbc.writeMem(0xd19a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0xd19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd19a));
        EXPECT(0x8, gbc.readMem(0xd19b));
        // CB 08 00AB
        gbc.setState(0x27e5, 0xe161, 0xbab0, 0x24fa, 0x69a1, 0xa72c, 0x1, 0x1);
        gbc.writeMem(0x27e5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe161, gbc.sp());
        EXPECT(0x27e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00AC
        gbc.setState(0x38ec, 0xa0c9, 0xe8c0, 0xdd9a, 0xac9d, 0xba45, 0x0, 0x0);
        gbc.writeMem(0x38ec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00AD
        gbc.setState(0x6cab, 0x37af, 0xd930, 0xa56e, 0xeb30, 0xb9ef, 0x0, 0x1);
        gbc.writeMem(0x6cab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x37af, gbc.sp());
        EXPECT(0x6cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00AE
        gbc.setState(0xce06, 0xa549, 0x6640, 0x1637, 0x6fa4, 0x6d7e, 0x0, 0x1);
        gbc.writeMem(0xce06, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa549, gbc.sp());
        EXPECT(0xce08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce06));
        EXPECT(0x8, gbc.readMem(0xce07));
        // CB 08 00AF
        gbc.setState(0xd5f, 0x594c, 0xe060, 0xf3b2, 0xfb10, 0x8864, 0x0, 0x1);
        gbc.writeMem(0xd5f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x594c, gbc.sp());
        EXPECT(0xd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00B0
        gbc.setState(0x6b89, 0x1d10, 0xf240, 0x682f, 0x126b, 0x4799, 0x0, 0x1);
        gbc.writeMem(0x6b89, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1d10, gbc.sp());
        EXPECT(0x6b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00B1
        gbc.setState(0xcd6c, 0x2bca, 0x1de0, 0x841e, 0x16e1, 0x3a94, 0x1, 0x0);
        gbc.writeMem(0xcd6c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2bca, gbc.sp());
        EXPECT(0xcd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd6c));
        EXPECT(0x8, gbc.readMem(0xcd6d));
        // CB 08 00B2
        gbc.setState(0x8e4c, 0x43f3, 0x98d0, 0xaad0, 0x9f3d, 0x1918, 0x1, 0x0);
        gbc.writeMem(0x8e4c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x43f3, gbc.sp());
        EXPECT(0x8e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e4c));
        EXPECT(0x8, gbc.readMem(0x8e4d));
        // CB 08 00B3
        gbc.setState(0xe8e6, 0x33a6, 0x97d0, 0xdded, 0x4d4d, 0xd2f7, 0x0, 0x1);
        gbc.writeMem(0xe8e6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0xe8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e6));
        EXPECT(0x8, gbc.readMem(0xe8e7));
        // CB 08 00B4
        gbc.setState(0x1356, 0xf999, 0x5170, 0x18b4, 0x69da, 0x86f5, 0x0, 0x1);
        gbc.writeMem(0x1356, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf999, gbc.sp());
        EXPECT(0x1358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00B5
        gbc.setState(0x7930, 0x6b9f, 0x3020, 0x21f1, 0x9d3d, 0x3013, 0x1, 0x0);
        gbc.writeMem(0x7930, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0x7932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00B6
        gbc.setState(0xdb37, 0xb52d, 0xfb30, 0xce39, 0xdd11, 0xc71b, 0x0, 0x1);
        gbc.writeMem(0xdb37, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb52d, gbc.sp());
        EXPECT(0xdb39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb37));
        EXPECT(0x8, gbc.readMem(0xdb38));
        // CB 08 00B7
        gbc.setState(0xb126, 0x3100, 0x3270, 0x6b09, 0xc9fa, 0xad0a, 0x1, 0x1);
        gbc.writeMem(0xb126, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0xb128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb126));
        EXPECT(0x8, gbc.readMem(0xb127));
        // CB 08 00B8
        gbc.setState(0xa8e4, 0x6dcc, 0xece0, 0x79d7, 0xd16, 0x4167, 0x0, 0x0);
        gbc.writeMem(0xa8e4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6dcc, gbc.sp());
        EXPECT(0xa8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e4));
        EXPECT(0x8, gbc.readMem(0xa8e5));
        // CB 08 00B9
        gbc.setState(0x6cf, 0xadeb, 0xc030, 0xc03a, 0x5feb, 0x1f6, 0x0, 0x1);
        gbc.writeMem(0x6cf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xadeb, gbc.sp());
        EXPECT(0x6d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00BA
        gbc.setState(0x8f4a, 0xcedd, 0xee70, 0x7375, 0xa6ab, 0x2b71, 0x1, 0x1);
        gbc.writeMem(0x8f4a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcedd, gbc.sp());
        EXPECT(0x8f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4a));
        EXPECT(0x8, gbc.readMem(0x8f4b));
        // CB 08 00BB
        gbc.setState(0xed17, 0x11, 0xfd80, 0xe533, 0xbb6b, 0x2ed, 0x0, 0x1);
        gbc.writeMem(0xed17, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x11, gbc.sp());
        EXPECT(0xed19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed17));
        EXPECT(0x8, gbc.readMem(0xed18));
        // CB 08 00BC
        gbc.setState(0x442, 0xfc94, 0x58a0, 0xe93b, 0x4967, 0x8b28, 0x1, 0x1);
        gbc.writeMem(0x442, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfc94, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00BD
        gbc.setState(0x52a5, 0x59d5, 0x24e0, 0x5b51, 0x2075, 0x69c3, 0x1, 0x1);
        gbc.writeMem(0x52a5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x59d5, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00BE
        gbc.setState(0x8006, 0x5d3, 0xaad0, 0x998c, 0xe317, 0x4b43, 0x1, 0x0);
        gbc.writeMem(0x8006, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x5d3, gbc.sp());
        EXPECT(0x8008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8006));
        EXPECT(0x8, gbc.readMem(0x8007));
        // CB 08 00BF
        gbc.setState(0x6c4f, 0x7483, 0x9900, 0x34da, 0xb0ca, 0x3075, 0x0, 0x0);
        gbc.writeMem(0x6c4f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x7483, gbc.sp());
        EXPECT(0x6c51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00C0
        gbc.setState(0x3aa4, 0x54bf, 0xf810, 0x352f, 0x5271, 0x8b36, 0x0, 0x1);
        gbc.writeMem(0x3aa4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00C1
        gbc.setState(0xbfdd, 0x3407, 0xae30, 0xfe67, 0xdef3, 0x23d3, 0x1, 0x0);
        gbc.writeMem(0xbfdd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3407, gbc.sp());
        EXPECT(0xbfdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdd));
        EXPECT(0x8, gbc.readMem(0xbfde));
        // CB 08 00C2
        gbc.setState(0x3d56, 0xce6b, 0xd490, 0x588, 0x5d1f, 0xd89f, 0x1, 0x1);
        gbc.writeMem(0x3d56, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xce6b, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00C3
        gbc.setState(0x9319, 0xced, 0xa840, 0x6a1d, 0x12f9, 0x8864, 0x0, 0x0);
        gbc.writeMem(0x9319, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0x931b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9319));
        EXPECT(0x8, gbc.readMem(0x931a));
        // CB 08 00C4
        gbc.setState(0xe905, 0xb3e5, 0xb720, 0x1b69, 0xdf46, 0x5a09, 0x0, 0x0);
        gbc.writeMem(0xe905, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0xe907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe905));
        EXPECT(0x8, gbc.readMem(0xe906));
        // CB 08 00C5
        gbc.setState(0x2542, 0x6582, 0xdbb0, 0x3bb8, 0x9986, 0xb307, 0x0, 0x1);
        gbc.writeMem(0x2542, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6582, gbc.sp());
        EXPECT(0x2544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00C6
        gbc.setState(0x2917, 0x13d7, 0x2bc0, 0x6679, 0x1e19, 0x58f, 0x1, 0x1);
        gbc.writeMem(0x2917, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0x2919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00C7
        gbc.setState(0xe5b3, 0x4dd9, 0x990, 0xbca7, 0xc37c, 0xc419, 0x1, 0x1);
        gbc.writeMem(0xe5b3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4dd9, gbc.sp());
        EXPECT(0xe5b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b3));
        EXPECT(0x8, gbc.readMem(0xe5b4));
        // CB 08 00C8
        gbc.setState(0xe031, 0xebbc, 0x4540, 0xed85, 0x6097, 0x47b9, 0x0, 0x1);
        gbc.writeMem(0xe031, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xebbc, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe031));
        EXPECT(0x8, gbc.readMem(0xe032));
        // CB 08 00C9
        gbc.setState(0xf4d, 0xd888, 0xd7d0, 0x4d32, 0x69cb, 0xa385, 0x0, 0x0);
        gbc.writeMem(0xf4d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd888, gbc.sp());
        EXPECT(0xf4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00CA
        gbc.setState(0x12b3, 0xa821, 0xbc70, 0x570b, 0xd16, 0x4ff5, 0x1, 0x1);
        gbc.writeMem(0x12b3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa821, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00CC
        gbc.setState(0x695, 0xe46, 0x9a90, 0xfb58, 0x5739, 0x8bc7, 0x1, 0x1);
        gbc.writeMem(0x695, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe46, gbc.sp());
        EXPECT(0x697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00CD
        gbc.setState(0xa35e, 0xfaf6, 0x1840, 0xd56c, 0xe71d, 0x2cc9, 0x1, 0x0);
        gbc.writeMem(0xa35e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xfaf6, gbc.sp());
        EXPECT(0xa360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa35e));
        EXPECT(0x8, gbc.readMem(0xa35f));
        // CB 08 00CE
        gbc.setState(0x74ff, 0xe2d, 0xa660, 0xf2c7, 0x666e, 0xe44f, 0x0, 0x1);
        gbc.writeMem(0x74ff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x7501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00CF
        gbc.setState(0x7df7, 0xf1a6, 0x2f00, 0x8322, 0x8ae3, 0x4f97, 0x1, 0x1);
        gbc.writeMem(0x7df7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf1a6, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00D0
        gbc.setState(0xfa1, 0x9691, 0xa670, 0x10b6, 0xcf54, 0x3962, 0x0, 0x0);
        gbc.writeMem(0xfa1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9691, gbc.sp());
        EXPECT(0xfa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00D1
        gbc.setState(0x2ba2, 0x9063, 0xf960, 0x7ece, 0x5b7c, 0x3b56, 0x1, 0x0);
        gbc.writeMem(0x2ba2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9063, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00D2
        gbc.setState(0xb537, 0xf38c, 0xe020, 0x2fe5, 0x2ead, 0x6118, 0x1, 0x1);
        gbc.writeMem(0xb537, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf38c, gbc.sp());
        EXPECT(0xb539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb537));
        EXPECT(0x8, gbc.readMem(0xb538));
        // CB 08 00D3
        gbc.setState(0x3ff8, 0x7002, 0xbf10, 0x77a0, 0xe839, 0x5c1, 0x1, 0x1);
        gbc.writeMem(0x3ff8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7002, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00D4
        gbc.setState(0xb69, 0x3e64, 0xc430, 0x4009, 0x839f, 0xe4f5, 0x0, 0x0);
        gbc.writeMem(0xb69, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3e64, gbc.sp());
        EXPECT(0xb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00D5
        gbc.setState(0x6591, 0x556f, 0x96b0, 0xd229, 0x76ae, 0x7f90, 0x0, 0x1);
        gbc.writeMem(0x6591, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x556f, gbc.sp());
        EXPECT(0x6593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00D6
        gbc.setState(0xde46, 0xfd5d, 0xa960, 0x1277, 0xc9ea, 0x5f, 0x0, 0x1);
        gbc.writeMem(0xde46, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfd5d, gbc.sp());
        EXPECT(0xde48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde46));
        EXPECT(0x8, gbc.readMem(0xde47));
        // CB 08 00D7
        gbc.setState(0xb94e, 0xabb9, 0x9a70, 0xc86f, 0xa17b, 0xb33b, 0x1, 0x0);
        gbc.writeMem(0xb94e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xabb9, gbc.sp());
        EXPECT(0xb950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb94e));
        EXPECT(0x8, gbc.readMem(0xb94f));
        // CB 08 00D8
        gbc.setState(0x8059, 0x3f2f, 0x71f0, 0x6b6f, 0x262e, 0xcd5a, 0x0, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x805b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8059));
        EXPECT(0x8, gbc.readMem(0x805a));
        // CB 08 00D9
        gbc.setState(0x4ca1, 0x6875, 0x7560, 0x2f91, 0x2b58, 0x56bf, 0x0, 0x1);
        gbc.writeMem(0x4ca1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0x4ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00DB
        gbc.setState(0x1b70, 0x8a49, 0x5cd0, 0xba8f, 0xe1cc, 0x7060, 0x0, 0x1);
        gbc.writeMem(0x1b70, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8a49, gbc.sp());
        EXPECT(0x1b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00DC
        gbc.setState(0xdad4, 0x9cf5, 0x8d10, 0xd648, 0xeb3b, 0x57dd, 0x0, 0x0);
        gbc.writeMem(0xdad4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9cf5, gbc.sp());
        EXPECT(0xdad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad4));
        EXPECT(0x8, gbc.readMem(0xdad5));
        // CB 08 00DD
        gbc.setState(0xd7ae, 0x519, 0xfd80, 0x6811, 0x5f07, 0xa40e, 0x0, 0x1);
        gbc.writeMem(0xd7ae, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0xd7b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ae));
        EXPECT(0x8, gbc.readMem(0xd7af));
        // CB 08 00DE
        gbc.setState(0x6c4c, 0xf67b, 0x9440, 0x8dcb, 0x681d, 0x6776, 0x1, 0x1);
        gbc.writeMem(0x6c4c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf67b, gbc.sp());
        EXPECT(0x6c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00DF
        gbc.setState(0x7437, 0xff28, 0x21f0, 0xffa3, 0x2d77, 0x5793, 0x1, 0x0);
        gbc.writeMem(0x7437, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xff28, gbc.sp());
        EXPECT(0x7439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00E0
        gbc.setState(0x15ca, 0x9b23, 0x53b0, 0x921, 0xdc64, 0xe81, 0x1, 0x1);
        gbc.writeMem(0x15ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9b23, gbc.sp());
        EXPECT(0x15cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00E1
        gbc.setState(0x2aac, 0x2a73, 0x1f30, 0xfcdd, 0xf9d4, 0xcb70, 0x0, 0x1);
        gbc.writeMem(0x2aac, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2a73, gbc.sp());
        EXPECT(0x2aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00E2
        gbc.setState(0x4e9e, 0xe785, 0xe90, 0x16fc, 0x7fa1, 0xe555, 0x1, 0x0);
        gbc.writeMem(0x4e9e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe785, gbc.sp());
        EXPECT(0x4ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00E3
        gbc.setState(0x54ac, 0x2c82, 0xf000, 0xa56e, 0x9ffa, 0x541, 0x1, 0x1);
        gbc.writeMem(0x54ac, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2c82, gbc.sp());
        EXPECT(0x54ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00E4
        gbc.setState(0x640b, 0xf88b, 0xfef0, 0x303b, 0x2f10, 0xc2f1, 0x0, 0x0);
        gbc.writeMem(0x640b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x640d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00E5
        gbc.setState(0xb819, 0x8376, 0x3e50, 0xc9f7, 0xd473, 0x66c9, 0x1, 0x0);
        gbc.writeMem(0xb819, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0xb81b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb819));
        EXPECT(0x8, gbc.readMem(0xb81a));
        // CB 08 00E7
        gbc.setState(0xbf34, 0x1ff4, 0x1220, 0xb4b5, 0x1100, 0x66ae, 0x1, 0x1);
        gbc.writeMem(0xbf34, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0xbf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf34));
        EXPECT(0x8, gbc.readMem(0xbf35));
        // CB 08 00E9
        gbc.setState(0xcef1, 0x70b9, 0xd470, 0x4701, 0xf20c, 0x4650, 0x1, 0x0);
        gbc.writeMem(0xcef1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xcef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef1));
        EXPECT(0x8, gbc.readMem(0xcef2));
        // CB 08 00EA
        gbc.setState(0x449e, 0x7f7f, 0x9ca0, 0xd3b4, 0xc596, 0xffeb, 0x0, 0x0);
        gbc.writeMem(0x449e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7f7f, gbc.sp());
        EXPECT(0x44a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00EB
        gbc.setState(0xc6de, 0xb7a, 0x9cc0, 0x56ce, 0xbe56, 0x2257, 0x1, 0x0);
        gbc.writeMem(0xc6de, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb7a, gbc.sp());
        EXPECT(0xc6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6de));
        EXPECT(0x8, gbc.readMem(0xc6df));
        // CB 08 00EC
        gbc.setState(0xce42, 0xc5b4, 0x6ee0, 0x2b2d, 0x7bc, 0x52d7, 0x0, 0x0);
        gbc.writeMem(0xce42, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc5b4, gbc.sp());
        EXPECT(0xce44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce42));
        EXPECT(0x8, gbc.readMem(0xce43));
        // CB 08 00ED
        gbc.setState(0xa57, 0xb67f, 0xeac0, 0xb244, 0x1e26, 0xf595, 0x1, 0x1);
        gbc.writeMem(0xa57, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb67f, gbc.sp());
        EXPECT(0xa59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00EE
        gbc.setState(0x8b4a, 0x68ce, 0x5b30, 0x406e, 0xa7ef, 0x4b8e, 0x0, 0x1);
        gbc.writeMem(0x8b4a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4a));
        EXPECT(0x8, gbc.readMem(0x8b4b));
        // CB 08 00EF
        gbc.setState(0x3a61, 0x4e5a, 0x5150, 0x36b4, 0x2cfb, 0x403a, 0x1, 0x1);
        gbc.writeMem(0x3a61, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0x3a63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00F0
        gbc.setState(0xc5fe, 0x1f33, 0x6930, 0xcc57, 0x3593, 0x85f5, 0x1, 0x1);
        gbc.writeMem(0xc5fe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1f33, gbc.sp());
        EXPECT(0xc600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fe));
        EXPECT(0x8, gbc.readMem(0xc5ff));
        // CB 08 00F1
        gbc.setState(0x72d5, 0xeab0, 0x1290, 0xf84b, 0x585b, 0x5f6a, 0x0, 0x1);
        gbc.writeMem(0x72d5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xeab0, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00F2
        gbc.setState(0x5a05, 0x7282, 0x62a0, 0x939f, 0x4acb, 0x1e3b, 0x0, 0x0);
        gbc.writeMem(0x5a05, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7282, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00F3
        gbc.setState(0x2f35, 0xb41d, 0x8110, 0x9721, 0x18f4, 0x7b4f, 0x1, 0x1);
        gbc.writeMem(0x2f35, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb41d, gbc.sp());
        EXPECT(0x2f37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00F4
        gbc.setState(0x1ef5, 0xe013, 0x5e90, 0xbd39, 0x2a1b, 0xa809, 0x1, 0x0);
        gbc.writeMem(0x1ef5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe013, gbc.sp());
        EXPECT(0x1ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00F5
        gbc.setState(0x3949, 0x739f, 0x3860, 0xb2ce, 0x5d55, 0xcdd4, 0x0, 0x1);
        gbc.writeMem(0x3949, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x739f, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00F6
        gbc.setState(0xcc97, 0x51a, 0x1bd0, 0x9699, 0xbb0c, 0x8b48, 0x1, 0x0);
        gbc.writeMem(0xcc97, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x51a, gbc.sp());
        EXPECT(0xcc99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc97));
        EXPECT(0x8, gbc.readMem(0xcc98));
        // CB 08 00F7
        gbc.setState(0x6928, 0x9eb5, 0xe430, 0xeb59, 0x310e, 0x502e, 0x1, 0x0);
        gbc.writeMem(0x6928, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x692a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00F8
        gbc.setState(0x4d87, 0xc172, 0x50f0, 0x7b21, 0xd232, 0xc303, 0x0, 0x0);
        gbc.writeMem(0x4d87, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc172, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00F9
        gbc.setState(0x197e, 0xc0b4, 0x9e50, 0xad26, 0x65d8, 0xf481, 0x1, 0x1);
        gbc.writeMem(0x197e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc0b4, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00FA
        gbc.setState(0x4f4f, 0x7a78, 0xb770, 0x2a66, 0x8072, 0x98d6, 0x0, 0x1);
        gbc.writeMem(0x4f4f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7a78, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 00FB
        gbc.setState(0x1ed5, 0x71b4, 0x50f0, 0xd721, 0x821b, 0xd7d4, 0x0, 0x1);
        gbc.writeMem(0x1ed5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x71b4, gbc.sp());
        EXPECT(0x1ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00FC
        gbc.setState(0xef18, 0xdecd, 0x6d0, 0x6da7, 0xe419, 0x9af1, 0x1, 0x1);
        gbc.writeMem(0xef18, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdecd, gbc.sp());
        EXPECT(0xef1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef18));
        EXPECT(0x8, gbc.readMem(0xef19));
        // CB 08 00FD
        gbc.setState(0x76d7, 0x8b0b, 0x57c0, 0xffe5, 0xaec, 0xce44, 0x1, 0x0);
        gbc.writeMem(0x76d7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x76d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 00FE
        gbc.setState(0xb9a8, 0x8ede, 0x6580, 0x95c5, 0xd9c8, 0x94f9, 0x0, 0x0);
        gbc.writeMem(0xb9a8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8ede, gbc.sp());
        EXPECT(0xb9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a8));
        EXPECT(0x8, gbc.readMem(0xb9a9));
        // CB 08 00FF
        gbc.setState(0x5a0f, 0xcecd, 0xcfe0, 0xc25c, 0x16ac, 0x257d, 0x0, 0x0);
        gbc.writeMem(0x5a0f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xcecd, gbc.sp());
        EXPECT(0x5a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0100
        gbc.setState(0xbd1c, 0x975a, 0x14d0, 0x34d2, 0xdf3b, 0x6e23, 0x1, 0x0);
        gbc.writeMem(0xbd1c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x975a, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1c));
        EXPECT(0x8, gbc.readMem(0xbd1d));
        // CB 08 0101
        gbc.setState(0xed7e, 0x37eb, 0x390, 0xd0a3, 0x84f2, 0x405b, 0x0, 0x1);
        gbc.writeMem(0xed7e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0xed80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7e));
        EXPECT(0x8, gbc.readMem(0xed7f));
        // CB 08 0102
        gbc.setState(0x43d9, 0x493a, 0x5570, 0x68a8, 0x12e9, 0x4710, 0x1, 0x1);
        gbc.writeMem(0x43d9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0x43db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0103
        gbc.setState(0x369f, 0x5781, 0xe9f0, 0xa630, 0x4365, 0x1a9e, 0x1, 0x0);
        gbc.writeMem(0x369f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5781, gbc.sp());
        EXPECT(0x36a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0104
        gbc.setState(0x1885, 0x5d26, 0x69a0, 0x8b39, 0xb599, 0x8406, 0x0, 0x1);
        gbc.writeMem(0x1885, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5d26, gbc.sp());
        EXPECT(0x1887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0105
        gbc.setState(0x1a3, 0x119b, 0x7ee0, 0xcd04, 0xa602, 0x7c9c, 0x0, 0x0);
        gbc.writeMem(0x1a3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x119b, gbc.sp());
        EXPECT(0x1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0106
        gbc.setState(0x6192, 0xf85, 0x2e30, 0xbf8e, 0x6b82, 0x710c, 0x1, 0x0);
        gbc.writeMem(0x6192, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf85, gbc.sp());
        EXPECT(0x6194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0107
        gbc.setState(0x1f75, 0x12cc, 0x9b10, 0xfe3d, 0xddae, 0x3c90, 0x1, 0x1);
        gbc.writeMem(0x1f75, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x12cc, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0108
        gbc.setState(0x74d, 0xc6cc, 0xed60, 0x291c, 0xf3f4, 0x691c, 0x1, 0x1);
        gbc.writeMem(0x74d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc6cc, gbc.sp());
        EXPECT(0x74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0109
        gbc.setState(0x1217, 0xfcae, 0x82e0, 0xe14a, 0xb85c, 0xc468, 0x0, 0x0);
        gbc.writeMem(0x1217, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfcae, gbc.sp());
        EXPECT(0x1219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 010A
        gbc.setState(0xb669, 0xe902, 0x6e80, 0xed37, 0x3cfa, 0xbc1b, 0x0, 0x1);
        gbc.writeMem(0xb669, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0xb66b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb669));
        EXPECT(0x8, gbc.readMem(0xb66a));
        // CB 08 010B
        gbc.setState(0x688f, 0xca5b, 0x40d0, 0x3dbf, 0x3d09, 0xc3b7, 0x1, 0x0);
        gbc.writeMem(0x688f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xca5b, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 010C
        gbc.setState(0xe5ca, 0x5ffd, 0x700, 0x37ec, 0x57f3, 0xd480, 0x1, 0x1);
        gbc.writeMem(0xe5ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5ffd, gbc.sp());
        EXPECT(0xe5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ca));
        EXPECT(0x8, gbc.readMem(0xe5cb));
        // CB 08 010D
        gbc.setState(0x29ab, 0x3f60, 0xc100, 0xf28f, 0xf083, 0x10ba, 0x0, 0x0);
        gbc.writeMem(0x29ab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3f60, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 010E
        gbc.setState(0xc043, 0xcb57, 0x2f30, 0x36a, 0x6969, 0xde64, 0x0, 0x1);
        gbc.writeMem(0xc043, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcb57, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc043));
        EXPECT(0x8, gbc.readMem(0xc044));
        // CB 08 010F
        gbc.setState(0x979f, 0x9542, 0xd6a0, 0x20d, 0x8312, 0xe61a, 0x0, 0x0);
        gbc.writeMem(0x979f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0x97a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979f));
        EXPECT(0x8, gbc.readMem(0x97a0));
        // CB 08 0110
        gbc.setState(0x9ff, 0x5b6f, 0xeac0, 0x8b2a, 0x921a, 0x8bbe, 0x1, 0x1);
        gbc.writeMem(0x9ff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5b6f, gbc.sp());
        EXPECT(0xa01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0111
        gbc.setState(0x8560, 0x4f67, 0x6970, 0xc06f, 0x3e50, 0x9a8a, 0x1, 0x1);
        gbc.writeMem(0x8560, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x8562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8560));
        EXPECT(0x8, gbc.readMem(0x8561));
        // CB 08 0112
        gbc.setState(0xd406, 0x9acd, 0xfd30, 0x9461, 0xa563, 0x169, 0x1, 0x0);
        gbc.writeMem(0xd406, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9acd, gbc.sp());
        EXPECT(0xd408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd406));
        EXPECT(0x8, gbc.readMem(0xd407));
        // CB 08 0113
        gbc.setState(0x2831, 0xb8ba, 0x91d0, 0x83e1, 0xc44f, 0x3452, 0x1, 0x1);
        gbc.writeMem(0x2831, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0x2833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0114
        gbc.setState(0xe9e0, 0x5406, 0x96d0, 0x53a7, 0xf017, 0xe382, 0x1, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5406, gbc.sp());
        EXPECT(0xe9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e0));
        EXPECT(0x8, gbc.readMem(0xe9e1));
        // CB 08 0115
        gbc.setState(0x5682, 0x5faf, 0x9ca0, 0x1cf2, 0x2c0, 0x79e7, 0x0, 0x0);
        gbc.writeMem(0x5682, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0x5684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0116
        gbc.setState(0xb76a, 0x3b85, 0x7850, 0x5ffd, 0x8183, 0x67a3, 0x0, 0x0);
        gbc.writeMem(0xb76a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3b85, gbc.sp());
        EXPECT(0xb76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76a));
        EXPECT(0x8, gbc.readMem(0xb76b));
        // CB 08 0117
        gbc.setState(0x1a27, 0x3557, 0xf980, 0xf3b7, 0x6cc1, 0x9817, 0x0, 0x1);
        gbc.writeMem(0x1a27, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x1a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0118
        gbc.setState(0xe112, 0x6b6c, 0x160, 0x7602, 0x2a1c, 0xfa66, 0x1, 0x1);
        gbc.writeMem(0xe112, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0xe114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe112));
        EXPECT(0x8, gbc.readMem(0xe113));
        // CB 08 0119
        gbc.setState(0x1a39, 0xf490, 0xe750, 0xef12, 0x36cb, 0xa66f, 0x0, 0x1);
        gbc.writeMem(0x1a39, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf490, gbc.sp());
        EXPECT(0x1a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 011A
        gbc.setState(0x6811, 0x3f36, 0x65a0, 0xe4c, 0x3327, 0x781c, 0x0, 0x0);
        gbc.writeMem(0x6811, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0x6813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 011B
        gbc.setState(0x316a, 0x5645, 0x7190, 0x512, 0xd9ea, 0x5d25, 0x1, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5645, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 011C
        gbc.setState(0xc5dc, 0xead2, 0x5d00, 0xbaaa, 0x8050, 0x607d, 0x1, 0x0);
        gbc.writeMem(0xc5dc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0xc5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5dc));
        EXPECT(0x8, gbc.readMem(0xc5dd));
        // CB 08 011D
        gbc.setState(0x8df4, 0x74f8, 0x7c90, 0x1f3c, 0xa7d7, 0x7512, 0x0, 0x0);
        gbc.writeMem(0x8df4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x74f8, gbc.sp());
        EXPECT(0x8df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df4));
        EXPECT(0x8, gbc.readMem(0x8df5));
        // CB 08 011E
        gbc.setState(0xed56, 0x8fae, 0x4ee0, 0x6b2e, 0x207f, 0x7f0f, 0x0, 0x0);
        gbc.writeMem(0xed56, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0xed58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed56));
        EXPECT(0x8, gbc.readMem(0xed57));
        // CB 08 011F
        gbc.setState(0x60aa, 0xeab4, 0xac50, 0x8946, 0xdbc3, 0x55a, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeab4, gbc.sp());
        EXPECT(0x60ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0120
        gbc.setState(0x91ea, 0x4982, 0xd340, 0x9d8c, 0x6440, 0xef21, 0x1, 0x0);
        gbc.writeMem(0x91ea, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4982, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ea));
        EXPECT(0x8, gbc.readMem(0x91eb));
        // CB 08 0121
        gbc.setState(0x1dd0, 0x1776, 0x4d60, 0x3010, 0xe9aa, 0xd235, 0x0, 0x1);
        gbc.writeMem(0x1dd0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1776, gbc.sp());
        EXPECT(0x1dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0122
        gbc.setState(0xb63e, 0xb66d, 0xd7d0, 0xa65c, 0x554d, 0x41b9, 0x1, 0x0);
        gbc.writeMem(0xb63e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb66d, gbc.sp());
        EXPECT(0xb640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63e));
        EXPECT(0x8, gbc.readMem(0xb63f));
        // CB 08 0123
        gbc.setState(0x3ade, 0x28b3, 0xc770, 0xaea0, 0xbed4, 0x3596, 0x1, 0x0);
        gbc.writeMem(0x3ade, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x28b3, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0124
        gbc.setState(0xd12d, 0x5b1, 0xf9e0, 0x44ee, 0xb6f4, 0x2990, 0x1, 0x0);
        gbc.writeMem(0xd12d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5b1, gbc.sp());
        EXPECT(0xd12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12d));
        EXPECT(0x8, gbc.readMem(0xd12e));
        // CB 08 0126
        gbc.setState(0xed8d, 0xdefa, 0x45a0, 0xe7b3, 0x10c4, 0x93d6, 0x0, 0x1);
        gbc.writeMem(0xed8d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0xed8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8d));
        EXPECT(0x8, gbc.readMem(0xed8e));
        // CB 08 0127
        gbc.setState(0x42ca, 0x2a06, 0xf440, 0x5088, 0x1f32, 0xc42e, 0x0, 0x0);
        gbc.writeMem(0x42ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2a06, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0128
        gbc.setState(0x26b9, 0x8615, 0x6070, 0x60e7, 0xb38b, 0xace7, 0x0, 0x1);
        gbc.writeMem(0x26b9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8615, gbc.sp());
        EXPECT(0x26bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0129
        gbc.setState(0x3cc, 0x47ca, 0x9860, 0xa8e9, 0x6b8d, 0x8b2b, 0x1, 0x0);
        gbc.writeMem(0x3cc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x47ca, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 012A
        gbc.setState(0x4a13, 0x38c4, 0x90, 0x55ff, 0xf7ab, 0x8689, 0x1, 0x1);
        gbc.writeMem(0x4a13, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x38c4, gbc.sp());
        EXPECT(0x4a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 012B
        gbc.setState(0x5e47, 0x9b06, 0x7830, 0x2bc0, 0xcdd1, 0x9168, 0x1, 0x0);
        gbc.writeMem(0x5e47, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0x5e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 012C
        gbc.setState(0x2003, 0x1f29, 0x6090, 0x4c0e, 0x1d0e, 0xd15, 0x0, 0x0);
        gbc.writeMem(0x2003, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 012D
        gbc.setState(0x2d59, 0x9a39, 0x8b40, 0xf98e, 0xad6f, 0xd1f2, 0x1, 0x0);
        gbc.writeMem(0x2d59, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9a39, gbc.sp());
        EXPECT(0x2d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 012E
        gbc.setState(0x3242, 0x8d28, 0x7d00, 0xdd0a, 0x1af5, 0xe2ab, 0x0, 0x1);
        gbc.writeMem(0x3242, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8d28, gbc.sp());
        EXPECT(0x3244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 012F
        gbc.setState(0x99e5, 0x3073, 0xb120, 0x9d1d, 0x5aa6, 0xf346, 0x1, 0x0);
        gbc.writeMem(0x99e5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3073, gbc.sp());
        EXPECT(0x99e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e5));
        EXPECT(0x8, gbc.readMem(0x99e6));
        // CB 08 0130
        gbc.setState(0xecb7, 0x4e19, 0x5f90, 0x7520, 0xd3fd, 0x9351, 0x1, 0x0);
        gbc.writeMem(0xecb7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4e19, gbc.sp());
        EXPECT(0xecb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb7));
        EXPECT(0x8, gbc.readMem(0xecb8));
        // CB 08 0131
        gbc.setState(0x79bb, 0x45ed, 0xed60, 0x491f, 0xb685, 0xd382, 0x0, 0x0);
        gbc.writeMem(0x79bb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x45ed, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0132
        gbc.setState(0xc8d6, 0xf951, 0xce10, 0xa467, 0x5118, 0x8154, 0x0, 0x0);
        gbc.writeMem(0xc8d6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf951, gbc.sp());
        EXPECT(0xc8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8d6));
        EXPECT(0x8, gbc.readMem(0xc8d7));
        // CB 08 0133
        gbc.setState(0x2538, 0xa518, 0x3940, 0x4aa3, 0x33a6, 0xc437, 0x0, 0x1);
        gbc.writeMem(0x2538, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa518, gbc.sp());
        EXPECT(0x253a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0134
        gbc.setState(0xd30f, 0xd877, 0xbea0, 0x30f3, 0x4f86, 0x9d14, 0x0, 0x1);
        gbc.writeMem(0xd30f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd877, gbc.sp());
        EXPECT(0xd311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30f));
        EXPECT(0x8, gbc.readMem(0xd310));
        // CB 08 0135
        gbc.setState(0x4327, 0x9e8d, 0xb0e0, 0x3012, 0x9620, 0x5d7a, 0x1, 0x0);
        gbc.writeMem(0x4327, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9e8d, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0136
        gbc.setState(0xca11, 0xc81c, 0xad50, 0xef67, 0x4bd1, 0xcd52, 0x1, 0x1);
        gbc.writeMem(0xca11, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc81c, gbc.sp());
        EXPECT(0xca13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca11));
        EXPECT(0x8, gbc.readMem(0xca12));
        // CB 08 0137
        gbc.setState(0x75e8, 0xa036, 0xc2f0, 0x328c, 0xad23, 0x1cf1, 0x0, 0x1);
        gbc.writeMem(0x75e8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa036, gbc.sp());
        EXPECT(0x75ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0138
        gbc.setState(0x1c20, 0xf96a, 0x8200, 0x3a0a, 0xe34b, 0x747c, 0x1, 0x0);
        gbc.writeMem(0x1c20, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf96a, gbc.sp());
        EXPECT(0x1c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0139
        gbc.setState(0x5b15, 0x32dd, 0x31b0, 0x6af2, 0xc638, 0xf0b9, 0x0, 0x1);
        gbc.writeMem(0x5b15, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x32dd, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 013A
        gbc.setState(0xa0af, 0xdac7, 0xddf0, 0x4e70, 0xffce, 0x5f4, 0x0, 0x0);
        gbc.writeMem(0xa0af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdac7, gbc.sp());
        EXPECT(0xa0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0af));
        EXPECT(0x8, gbc.readMem(0xa0b0));
        // CB 08 013B
        gbc.setState(0x4d5b, 0xc302, 0xb9b0, 0xd79d, 0xa078, 0xc42c, 0x0, 0x0);
        gbc.writeMem(0x4d5b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 013C
        gbc.setState(0x7a45, 0xfb0a, 0x1340, 0x5bd2, 0x5adf, 0x85c, 0x1, 0x1);
        gbc.writeMem(0x7a45, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0x7a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 013D
        gbc.setState(0x9dc7, 0xf50f, 0xf50, 0xfa1b, 0x11c1, 0x1895, 0x1, 0x1);
        gbc.writeMem(0x9dc7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf50f, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc7));
        EXPECT(0x8, gbc.readMem(0x9dc8));
        // CB 08 013E
        gbc.setState(0x2037, 0x9625, 0xc7c0, 0x7b0, 0x88ce, 0x291a, 0x1, 0x0);
        gbc.writeMem(0x2037, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 013F
        gbc.setState(0xa86d, 0x4c79, 0xba90, 0xe71a, 0xe476, 0x97f9, 0x1, 0x0);
        gbc.writeMem(0xa86d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4c79, gbc.sp());
        EXPECT(0xa86f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86d));
        EXPECT(0x8, gbc.readMem(0xa86e));
        // CB 08 0140
        gbc.setState(0x62eb, 0xc5b9, 0xd8a0, 0x2678, 0xfd38, 0xdfd8, 0x0, 0x1);
        gbc.writeMem(0x62eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc5b9, gbc.sp());
        EXPECT(0x62ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0141
        gbc.setState(0x64b7, 0xeb54, 0xf270, 0xdbc2, 0x1505, 0x3976, 0x0, 0x1);
        gbc.writeMem(0x64b7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeb54, gbc.sp());
        EXPECT(0x64b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0142
        gbc.setState(0x98bf, 0x21ab, 0x8ca0, 0xadde, 0x3991, 0xa23e, 0x1, 0x0);
        gbc.writeMem(0x98bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x21ab, gbc.sp());
        EXPECT(0x98c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bf));
        EXPECT(0x8, gbc.readMem(0x98c0));
        // CB 08 0143
        gbc.setState(0x7a9e, 0x8608, 0x7dc0, 0xfdae, 0x8d99, 0xc5b5, 0x0, 0x1);
        gbc.writeMem(0x7a9e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8608, gbc.sp());
        EXPECT(0x7aa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0144
        gbc.setState(0xcf6b, 0xe021, 0x18a0, 0xa299, 0x8f13, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0xcf6b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe021, gbc.sp());
        EXPECT(0xcf6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf6b));
        EXPECT(0x8, gbc.readMem(0xcf6c));
        // CB 08 0145
        gbc.setState(0x8a81, 0x4fb1, 0xe120, 0xb4cc, 0x8dc3, 0xd535, 0x1, 0x0);
        gbc.writeMem(0x8a81, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4fb1, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a81));
        EXPECT(0x8, gbc.readMem(0x8a82));
        // CB 08 0146
        gbc.setState(0x132b, 0xb9e0, 0x83f0, 0xa258, 0x22f0, 0x42c2, 0x0, 0x1);
        gbc.writeMem(0x132b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb9e0, gbc.sp());
        EXPECT(0x132d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0147
        gbc.setState(0xbcd3, 0x2148, 0x32e0, 0x3001, 0x38ed, 0x8882, 0x0, 0x0);
        gbc.writeMem(0xbcd3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0xbcd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd3));
        EXPECT(0x8, gbc.readMem(0xbcd4));
        // CB 08 0148
        gbc.setState(0xbaf4, 0x7544, 0x46a0, 0x9f55, 0x8d54, 0xf68a, 0x1, 0x1);
        gbc.writeMem(0xbaf4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7544, gbc.sp());
        EXPECT(0xbaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf4));
        EXPECT(0x8, gbc.readMem(0xbaf5));
        // CB 08 0149
        gbc.setState(0xa81e, 0xfab0, 0x1970, 0xa405, 0xebb4, 0xd149, 0x0, 0x1);
        gbc.writeMem(0xa81e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfab0, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa81e));
        EXPECT(0x8, gbc.readMem(0xa81f));
        // CB 08 014A
        gbc.setState(0xb8d5, 0x1935, 0x4300, 0x9c65, 0x3c68, 0x619d, 0x1, 0x0);
        gbc.writeMem(0xb8d5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1935, gbc.sp());
        EXPECT(0xb8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d5));
        EXPECT(0x8, gbc.readMem(0xb8d6));
        // CB 08 014B
        gbc.setState(0x49df, 0xe3ce, 0xc530, 0x9c35, 0xc0dc, 0x6220, 0x1, 0x0);
        gbc.writeMem(0x49df, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe3ce, gbc.sp());
        EXPECT(0x49e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 014C
        gbc.setState(0x2767, 0xba41, 0x3cb0, 0x273c, 0x466e, 0xb53e, 0x0, 0x0);
        gbc.writeMem(0x2767, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba41, gbc.sp());
        EXPECT(0x2769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 014D
        gbc.setState(0xea34, 0xeb47, 0x3680, 0xe2cd, 0xcf12, 0x5c, 0x1, 0x0);
        gbc.writeMem(0xea34, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeb47, gbc.sp());
        EXPECT(0xea36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea34));
        EXPECT(0x8, gbc.readMem(0xea35));
        // CB 08 014E
        gbc.setState(0x265a, 0xdc78, 0x22c0, 0xb5d3, 0x344f, 0x63a0, 0x1, 0x1);
        gbc.writeMem(0x265a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdc78, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 014F
        gbc.setState(0x7a5a, 0x86e0, 0xa7f0, 0x84e7, 0x2449, 0xd26d, 0x1, 0x1);
        gbc.writeMem(0x7a5a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x86e0, gbc.sp());
        EXPECT(0x7a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0150
        gbc.setState(0xbc0b, 0xa500, 0xd250, 0x9ab0, 0x6897, 0x8406, 0x0, 0x0);
        gbc.writeMem(0xbc0b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0xbc0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0b));
        EXPECT(0x8, gbc.readMem(0xbc0c));
        // CB 08 0151
        gbc.setState(0xb50e, 0x78e0, 0xc930, 0x2d64, 0x8852, 0x1630, 0x0, 0x1);
        gbc.writeMem(0xb50e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x78e0, gbc.sp());
        EXPECT(0xb510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50e));
        EXPECT(0x8, gbc.readMem(0xb50f));
        // CB 08 0152
        gbc.setState(0xcce, 0x2f64, 0x1460, 0x8d07, 0x53a8, 0x1cd9, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0xcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0153
        gbc.setState(0x6ba, 0xf0c5, 0xb360, 0xcc4f, 0x364b, 0x24ad, 0x1, 0x1);
        gbc.writeMem(0x6ba, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0x6bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0154
        gbc.setState(0x43a, 0xbdb9, 0x2530, 0x90b2, 0x64b4, 0x4b3, 0x0, 0x1);
        gbc.writeMem(0x43a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbdb9, gbc.sp());
        EXPECT(0x43c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0155
        gbc.setState(0xa4f3, 0xc16, 0xbd40, 0x274d, 0x9f2b, 0x4786, 0x0, 0x0);
        gbc.writeMem(0xa4f3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0xa4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4f3));
        EXPECT(0x8, gbc.readMem(0xa4f4));
        // CB 08 0156
        gbc.setState(0xeb2, 0x3905, 0xa040, 0xdbd4, 0xa299, 0xeec5, 0x0, 0x1);
        gbc.writeMem(0xeb2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3905, gbc.sp());
        EXPECT(0xeb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0157
        gbc.setState(0x326f, 0xd805, 0x76a0, 0x55ba, 0xc3e5, 0x191b, 0x0, 0x0);
        gbc.writeMem(0x326f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd805, gbc.sp());
        EXPECT(0x3271, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0158
        gbc.setState(0x5d8f, 0x7d7f, 0x7d50, 0x93b5, 0xfad7, 0xc4c8, 0x0, 0x0);
        gbc.writeMem(0x5d8f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0x5d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0159
        gbc.setState(0x929b, 0xf173, 0xd640, 0x4322, 0x6908, 0x8dea, 0x0, 0x0);
        gbc.writeMem(0x929b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf173, gbc.sp());
        EXPECT(0x929d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929b));
        EXPECT(0x8, gbc.readMem(0x929c));
        // CB 08 015A
        gbc.setState(0xbcc1, 0x7aad, 0xbf60, 0xf645, 0x3ff0, 0x1c65, 0x1, 0x1);
        gbc.writeMem(0xbcc1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7aad, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        EXPECT(0x8, gbc.readMem(0xbcc2));
        // CB 08 015B
        gbc.setState(0xda3a, 0xf48e, 0x6a90, 0xf130, 0x275e, 0xe32f, 0x1, 0x0);
        gbc.writeMem(0xda3a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf48e, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3a));
        EXPECT(0x8, gbc.readMem(0xda3b));
        // CB 08 015C
        gbc.setState(0xbc8b, 0xb59f, 0x98b0, 0xce3b, 0x5318, 0x75c2, 0x1, 0x1);
        gbc.writeMem(0xbc8b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb59f, gbc.sp());
        EXPECT(0xbc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8b));
        EXPECT(0x8, gbc.readMem(0xbc8c));
        // CB 08 015D
        gbc.setState(0x1803, 0x4bb6, 0x7350, 0x1ae, 0xf65c, 0x1f07, 0x0, 0x1);
        gbc.writeMem(0x1803, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4bb6, gbc.sp());
        EXPECT(0x1805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 015E
        gbc.setState(0x347c, 0xbc23, 0xaf00, 0x95de, 0x1ee6, 0x97cf, 0x0, 0x0);
        gbc.writeMem(0x347c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbc23, gbc.sp());
        EXPECT(0x347e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0160
        gbc.setState(0x917e, 0x599b, 0x85c0, 0xe4ae, 0xcb4a, 0x5d30, 0x1, 0x1);
        gbc.writeMem(0x917e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x599b, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x917e));
        EXPECT(0x8, gbc.readMem(0x917f));
        // CB 08 0161
        gbc.setState(0x510f, 0xa468, 0x8240, 0x8a4a, 0x6717, 0xecdb, 0x0, 0x0);
        gbc.writeMem(0x510f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa468, gbc.sp());
        EXPECT(0x5111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0162
        gbc.setState(0x2769, 0xc2c8, 0x9c20, 0x2a46, 0xc6fb, 0x1153, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0163
        gbc.setState(0xe06, 0xc517, 0x6030, 0x92a5, 0x755, 0x9699, 0x1, 0x0);
        gbc.writeMem(0xe06, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0xe08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0164
        gbc.setState(0xd801, 0x947, 0x6ce0, 0x6319, 0xef09, 0xcb49, 0x0, 0x1);
        gbc.writeMem(0xd801, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x947, gbc.sp());
        EXPECT(0xd803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd801));
        EXPECT(0x8, gbc.readMem(0xd802));
        // CB 08 0165
        gbc.setState(0xb69b, 0x1971, 0x750, 0x3a6c, 0xa873, 0x3e9, 0x0, 0x0);
        gbc.writeMem(0xb69b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1971, gbc.sp());
        EXPECT(0xb69d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69b));
        EXPECT(0x8, gbc.readMem(0xb69c));
        // CB 08 0166
        gbc.setState(0xb848, 0xc389, 0xb520, 0xc0bb, 0x24f3, 0x90eb, 0x1, 0x1);
        gbc.writeMem(0xb848, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc389, gbc.sp());
        EXPECT(0xb84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb848));
        EXPECT(0x8, gbc.readMem(0xb849));
        // CB 08 0167
        gbc.setState(0x72bc, 0x6862, 0x2ba0, 0x303a, 0x706a, 0x1c63, 0x1, 0x1);
        gbc.writeMem(0x72bc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6862, gbc.sp());
        EXPECT(0x72be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0168
        gbc.setState(0x9bb5, 0xe1c0, 0x48c0, 0x28c9, 0x52c1, 0x5f, 0x1, 0x0);
        gbc.writeMem(0x9bb5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0x9bb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb5));
        EXPECT(0x8, gbc.readMem(0x9bb6));
        // CB 08 0169
        gbc.setState(0x2792, 0xc0ed, 0x8460, 0x64bd, 0x655c, 0x97f, 0x1, 0x1);
        gbc.writeMem(0x2792, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc0ed, gbc.sp());
        EXPECT(0x2794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 016A
        gbc.setState(0x8c16, 0xdb54, 0x32d0, 0xdd09, 0x17e9, 0x21cd, 0x1, 0x0);
        gbc.writeMem(0x8c16, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdb54, gbc.sp());
        EXPECT(0x8c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c16));
        EXPECT(0x8, gbc.readMem(0x8c17));
        // CB 08 016B
        gbc.setState(0x7bc6, 0x7b63, 0x5560, 0xa331, 0xf473, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0x7bc6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b63, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 016C
        gbc.setState(0x8cd9, 0x8ae9, 0xc70, 0x248e, 0x29e6, 0xfdf1, 0x0, 0x1);
        gbc.writeMem(0x8cd9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8ae9, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd9));
        EXPECT(0x8, gbc.readMem(0x8cda));
        // CB 08 016D
        gbc.setState(0xf18, 0x499f, 0xb090, 0xfc62, 0x22f8, 0xb091, 0x1, 0x1);
        gbc.writeMem(0xf18, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 016E
        gbc.setState(0x7464, 0xaee7, 0x7510, 0x6bec, 0x9e8a, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x7464, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaee7, gbc.sp());
        EXPECT(0x7466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 016F
        gbc.setState(0xcca8, 0x7631, 0xec80, 0x66b9, 0x5c60, 0x512f, 0x1, 0x0);
        gbc.writeMem(0xcca8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0xccaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca8));
        EXPECT(0x8, gbc.readMem(0xcca9));
        // CB 08 0170
        gbc.setState(0xc1dd, 0xbc60, 0x5230, 0xac55, 0x19d5, 0x9272, 0x0, 0x0);
        gbc.writeMem(0xc1dd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbc60, gbc.sp());
        EXPECT(0xc1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1dd));
        EXPECT(0x8, gbc.readMem(0xc1de));
        // CB 08 0171
        gbc.setState(0xd6fc, 0x7930, 0x8b60, 0x84a6, 0x1848, 0x6bec, 0x1, 0x1);
        gbc.writeMem(0xd6fc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7930, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fc));
        EXPECT(0x8, gbc.readMem(0xd6fd));
        // CB 08 0172
        gbc.setState(0x1d0f, 0x399, 0x2440, 0x271, 0xb2a5, 0x3cd6, 0x0, 0x0);
        gbc.writeMem(0x1d0f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x399, gbc.sp());
        EXPECT(0x1d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0173
        gbc.setState(0x5a81, 0xfaf8, 0x2a30, 0x641d, 0xf024, 0x8931, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfaf8, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0174
        gbc.setState(0x5369, 0x957c, 0x4520, 0xd506, 0xea41, 0x8265, 0x1, 0x0);
        gbc.writeMem(0x5369, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x957c, gbc.sp());
        EXPECT(0x536b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0175
        gbc.setState(0x680b, 0x855, 0x8c90, 0x99ff, 0x6abc, 0xf9b0, 0x0, 0x0);
        gbc.writeMem(0x680b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x855, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0176
        gbc.setState(0xcf88, 0xe86a, 0x3c90, 0x44ac, 0x62a4, 0x9c98, 0x1, 0x0);
        gbc.writeMem(0xcf88, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe86a, gbc.sp());
        EXPECT(0xcf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf88));
        EXPECT(0x8, gbc.readMem(0xcf89));
        // CB 08 0177
        gbc.setState(0x5a7b, 0x9c2c, 0xf280, 0x1401, 0xfd82, 0x84a1, 0x0, 0x0);
        gbc.writeMem(0x5a7b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9c2c, gbc.sp());
        EXPECT(0x5a7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0178
        gbc.setState(0x525e, 0x7a7c, 0x1430, 0xb4c5, 0x33af, 0x5e58, 0x1, 0x1);
        gbc.writeMem(0x525e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a7c, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0179
        gbc.setState(0x54ee, 0x9196, 0x97b0, 0x4b89, 0xfe41, 0x5a6b, 0x1, 0x0);
        gbc.writeMem(0x54ee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9196, gbc.sp());
        EXPECT(0x54f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 017A
        gbc.setState(0x7a95, 0xdc1b, 0x68e0, 0xb390, 0xf5af, 0x1c6d, 0x1, 0x0);
        gbc.writeMem(0x7a95, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdc1b, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 017B
        gbc.setState(0x9d07, 0x34cd, 0x90d0, 0x684b, 0xa8d1, 0x886a, 0x1, 0x1);
        gbc.writeMem(0x9d07, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x34cd, gbc.sp());
        EXPECT(0x9d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d07));
        EXPECT(0x8, gbc.readMem(0x9d08));
        // CB 08 017C
        gbc.setState(0x7872, 0x7956, 0xf940, 0xce2d, 0xd415, 0x896e, 0x1, 0x1);
        gbc.writeMem(0x7872, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7956, gbc.sp());
        EXPECT(0x7874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 017D
        gbc.setState(0x63cf, 0xc7fb, 0x6130, 0xa9b2, 0x29ea, 0xc712, 0x1, 0x1);
        gbc.writeMem(0x63cf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc7fb, gbc.sp());
        EXPECT(0x63d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 017E
        gbc.setState(0xb116, 0x54b7, 0xb770, 0xc5da, 0xf90d, 0x6fe0, 0x1, 0x1);
        gbc.writeMem(0xb116, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x54b7, gbc.sp());
        EXPECT(0xb118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb116));
        EXPECT(0x8, gbc.readMem(0xb117));
        // CB 08 017F
        gbc.setState(0xdd62, 0x2d23, 0x9730, 0xc169, 0x5d86, 0x3720, 0x0, 0x0);
        gbc.writeMem(0xdd62, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2d23, gbc.sp());
        EXPECT(0xdd64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd62));
        EXPECT(0x8, gbc.readMem(0xdd63));
        // CB 08 0180
        gbc.setState(0x8f95, 0x6da1, 0x13a0, 0xbda5, 0x1b54, 0x196e, 0x0, 0x1);
        gbc.writeMem(0x8f95, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f95));
        EXPECT(0x8, gbc.readMem(0x8f96));
        // CB 08 0181
        gbc.setState(0xc6cb, 0x57a, 0x2280, 0x833c, 0xc9d9, 0xa89d, 0x1, 0x1);
        gbc.writeMem(0xc6cb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x57a, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6cb));
        EXPECT(0x8, gbc.readMem(0xc6cc));
        // CB 08 0182
        gbc.setState(0x8a4a, 0x90b7, 0xade0, 0x6ec4, 0x543e, 0x8cb, 0x0, 0x1);
        gbc.writeMem(0x8a4a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x90b7, gbc.sp());
        EXPECT(0x8a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4a));
        EXPECT(0x8, gbc.readMem(0x8a4b));
        // CB 08 0183
        gbc.setState(0x358a, 0x564a, 0x9090, 0x576f, 0xdb0e, 0xee81, 0x0, 0x0);
        gbc.writeMem(0x358a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x564a, gbc.sp());
        EXPECT(0x358c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0184
        gbc.setState(0xd76, 0x87ea, 0xc630, 0x444e, 0x347, 0x8ba0, 0x0, 0x1);
        gbc.writeMem(0xd76, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x87ea, gbc.sp());
        EXPECT(0xd78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0185
        gbc.setState(0x2244, 0x4a38, 0x8a20, 0x316, 0xcf62, 0xffb0, 0x0, 0x0);
        gbc.writeMem(0x2244, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4a38, gbc.sp());
        EXPECT(0x2246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0186
        gbc.setState(0xc6db, 0x2550, 0x2a50, 0x65bc, 0x1003, 0x8c74, 0x0, 0x1);
        gbc.writeMem(0xc6db, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2550, gbc.sp());
        EXPECT(0xc6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6db));
        EXPECT(0x8, gbc.readMem(0xc6dc));
        // CB 08 0187
        gbc.setState(0x843, 0x11da, 0xb9c0, 0x28b2, 0x46dd, 0x19af, 0x0, 0x0);
        gbc.writeMem(0x843, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x11da, gbc.sp());
        EXPECT(0x845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0188
        gbc.setState(0x66ca, 0x8832, 0x3ad0, 0x7e64, 0x44b8, 0x8271, 0x0, 0x0);
        gbc.writeMem(0x66ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0x66cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0189
        gbc.setState(0x5a6d, 0xc3a9, 0x9360, 0xa048, 0x4aae, 0x3f86, 0x1, 0x1);
        gbc.writeMem(0x5a6d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc3a9, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 018A
        gbc.setState(0x42e8, 0x9ddb, 0x3910, 0xeca8, 0x404b, 0x5300, 0x1, 0x1);
        gbc.writeMem(0x42e8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9ddb, gbc.sp());
        EXPECT(0x42ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 018B
        gbc.setState(0x52a9, 0x5e1d, 0xddd0, 0x9943, 0x491b, 0xdb5b, 0x1, 0x0);
        gbc.writeMem(0x52a9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5e1d, gbc.sp());
        EXPECT(0x52ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 018D
        gbc.setState(0x34ba, 0x6363, 0x54e0, 0xc9b9, 0x8bc1, 0xa7f8, 0x0, 0x0);
        gbc.writeMem(0x34ba, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6363, gbc.sp());
        EXPECT(0x34bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 018E
        gbc.setState(0x9add, 0xad67, 0xc190, 0x6f8c, 0x6b62, 0x5838, 0x1, 0x1);
        gbc.writeMem(0x9add, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xad67, gbc.sp());
        EXPECT(0x9adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9add));
        EXPECT(0x8, gbc.readMem(0x9ade));
        // CB 08 018F
        gbc.setState(0x228e, 0xad6f, 0xdc50, 0xcfb2, 0x7d61, 0xe409, 0x0, 0x0);
        gbc.writeMem(0x228e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0x2290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0190
        gbc.setState(0xe546, 0x26f8, 0xe10, 0x4f83, 0xa15a, 0xc94b, 0x0, 0x0);
        gbc.writeMem(0xe546, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x26f8, gbc.sp());
        EXPECT(0xe548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe546));
        EXPECT(0x8, gbc.readMem(0xe547));
        // CB 08 0191
        gbc.setState(0x80e1, 0x162e, 0x8bc0, 0xabf3, 0xee3a, 0xe647, 0x1, 0x1);
        gbc.writeMem(0x80e1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x162e, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0x8, gbc.readMem(0x80e2));
        // CB 08 0192
        gbc.setState(0x3b2e, 0xe82c, 0x6040, 0x9db7, 0xaaf0, 0xa9a8, 0x1, 0x0);
        gbc.writeMem(0x3b2e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe82c, gbc.sp());
        EXPECT(0x3b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0193
        gbc.setState(0xa9aa, 0xa86b, 0xe9f0, 0x4068, 0x2d1e, 0x1ac0, 0x1, 0x0);
        gbc.writeMem(0xa9aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa86b, gbc.sp());
        EXPECT(0xa9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9aa));
        EXPECT(0x8, gbc.readMem(0xa9ab));
        // CB 08 0194
        gbc.setState(0x5ce2, 0x765f, 0x4ad0, 0xf477, 0xed53, 0x6ed7, 0x1, 0x1);
        gbc.writeMem(0x5ce2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x765f, gbc.sp());
        EXPECT(0x5ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0195
        gbc.setState(0x7beb, 0x9c1d, 0xd210, 0x7a84, 0x1e57, 0x2883, 0x0, 0x1);
        gbc.writeMem(0x7beb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9c1d, gbc.sp());
        EXPECT(0x7bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0196
        gbc.setState(0x45d1, 0x3792, 0x71b0, 0x7b41, 0x9c2a, 0x8fed, 0x1, 0x0);
        gbc.writeMem(0x45d1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3792, gbc.sp());
        EXPECT(0x45d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0197
        gbc.setState(0x7a6, 0xe560, 0x9390, 0x86f8, 0xbab6, 0x545a, 0x0, 0x0);
        gbc.writeMem(0x7a6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe560, gbc.sp());
        EXPECT(0x7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0198
        gbc.setState(0xb609, 0x7c4d, 0x3640, 0xc912, 0x7adc, 0xbe8, 0x1, 0x0);
        gbc.writeMem(0xb609, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7c4d, gbc.sp());
        EXPECT(0xb60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb609));
        EXPECT(0x8, gbc.readMem(0xb60a));
        // CB 08 0199
        gbc.setState(0xa39d, 0xc1a, 0x8920, 0x50c2, 0x38f2, 0x1ceb, 0x1, 0x0);
        gbc.writeMem(0xa39d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc1a, gbc.sp());
        EXPECT(0xa39f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa39d));
        EXPECT(0x8, gbc.readMem(0xa39e));
        // CB 08 019A
        gbc.setState(0x83b5, 0x4c31, 0x2170, 0xd48b, 0xd5a8, 0xbbb4, 0x1, 0x0);
        gbc.writeMem(0x83b5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4c31, gbc.sp());
        EXPECT(0x83b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b5));
        EXPECT(0x8, gbc.readMem(0x83b6));
        // CB 08 019B
        gbc.setState(0xb3ee, 0xa674, 0x8710, 0x8acc, 0xa355, 0x9ede, 0x0, 0x1);
        gbc.writeMem(0xb3ee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0xb3f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ee));
        EXPECT(0x8, gbc.readMem(0xb3ef));
        // CB 08 019C
        gbc.setState(0xe3af, 0xbc2b, 0x8470, 0x47a, 0x6a0c, 0x6e08, 0x1, 0x1);
        gbc.writeMem(0xe3af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbc2b, gbc.sp());
        EXPECT(0xe3b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3af));
        EXPECT(0x8, gbc.readMem(0xe3b0));
        // CB 08 019D
        gbc.setState(0x644b, 0x2661, 0x7eb0, 0x84ae, 0x45a4, 0xa8fa, 0x0, 0x1);
        gbc.writeMem(0x644b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 019E
        gbc.setState(0xbdd7, 0x756e, 0xd320, 0x4588, 0x8316, 0xd131, 0x0, 0x1);
        gbc.writeMem(0xbdd7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x756e, gbc.sp());
        EXPECT(0xbdd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd7));
        EXPECT(0x8, gbc.readMem(0xbdd8));
        // CB 08 019F
        gbc.setState(0x8452, 0xa834, 0xc630, 0x6e7b, 0xf60a, 0xed36, 0x1, 0x1);
        gbc.writeMem(0x8452, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa834, gbc.sp());
        EXPECT(0x8454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8452));
        EXPECT(0x8, gbc.readMem(0x8453));
        // CB 08 01A0
        gbc.setState(0xd492, 0x1c1c, 0xe5f0, 0xe6d8, 0x1220, 0x5378, 0x0, 0x0);
        gbc.writeMem(0xd492, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1c1c, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd492));
        EXPECT(0x8, gbc.readMem(0xd493));
        // CB 08 01A1
        gbc.setState(0xd8ad, 0x24e3, 0xff30, 0x3315, 0xc97, 0x307, 0x0, 0x0);
        gbc.writeMem(0xd8ad, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x24e3, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ad));
        EXPECT(0x8, gbc.readMem(0xd8ae));
        // CB 08 01A2
        gbc.setState(0x1679, 0x54cb, 0xe360, 0x4058, 0xb256, 0x5321, 0x0, 0x0);
        gbc.writeMem(0x1679, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x54cb, gbc.sp());
        EXPECT(0x167b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01A3
        gbc.setState(0x6897, 0x7eb, 0xa800, 0xb99a, 0xb9c3, 0x603e, 0x0, 0x0);
        gbc.writeMem(0x6897, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7eb, gbc.sp());
        EXPECT(0x6899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01A4
        gbc.setState(0x54c9, 0x678b, 0xe740, 0x4102, 0x777, 0x39a9, 0x0, 0x1);
        gbc.writeMem(0x54c9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x678b, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01A5
        gbc.setState(0xb6e0, 0x8fe1, 0xd150, 0xb12f, 0x2d4e, 0xf037, 0x1, 0x0);
        gbc.writeMem(0xb6e0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0xb6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e0));
        EXPECT(0x8, gbc.readMem(0xb6e1));
        // CB 08 01A6
        gbc.setState(0x1db4, 0x6f02, 0xe260, 0xd379, 0xf7a3, 0xbb4d, 0x1, 0x0);
        gbc.writeMem(0x1db4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6f02, gbc.sp());
        EXPECT(0x1db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01A7
        gbc.setState(0x7939, 0xb8dd, 0x27c0, 0xfd41, 0xf42a, 0x5de8, 0x1, 0x1);
        gbc.writeMem(0x7939, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb8dd, gbc.sp());
        EXPECT(0x793b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01A8
        gbc.setState(0x2843, 0xbacd, 0x2b30, 0x4526, 0x64b, 0xba97, 0x0, 0x0);
        gbc.writeMem(0x2843, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbacd, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01A9
        gbc.setState(0x2a35, 0x5f63, 0x11c0, 0x8a05, 0x8fe9, 0x5862, 0x1, 0x1);
        gbc.writeMem(0x2a35, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0x2a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01AA
        gbc.setState(0x304b, 0x60ab, 0x6a40, 0xcca5, 0xb9e, 0x66eb, 0x1, 0x1);
        gbc.writeMem(0x304b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x60ab, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01AB
        gbc.setState(0xea00, 0x174, 0xea60, 0xb40d, 0x3abb, 0xc0fb, 0x1, 0x1);
        gbc.writeMem(0xea00, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x174, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea00));
        EXPECT(0x8, gbc.readMem(0xea01));
        // CB 08 01AC
        gbc.setState(0xa602, 0x24f4, 0x8810, 0x61f6, 0x5f24, 0x6084, 0x1, 0x0);
        gbc.writeMem(0xa602, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x24f4, gbc.sp());
        EXPECT(0xa604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa602));
        EXPECT(0x8, gbc.readMem(0xa603));
        // CB 08 01AD
        gbc.setState(0xc351, 0xcb63, 0xe6e0, 0x72bb, 0x7e46, 0x4218, 0x0, 0x1);
        gbc.writeMem(0xc351, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xcb63, gbc.sp());
        EXPECT(0xc353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc351));
        EXPECT(0x8, gbc.readMem(0xc352));
        // CB 08 01AE
        gbc.setState(0xcb50, 0xbef4, 0x6fd0, 0xf02d, 0xe834, 0x820f, 0x1, 0x1);
        gbc.writeMem(0xcb50, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbef4, gbc.sp());
        EXPECT(0xcb52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb50));
        EXPECT(0x8, gbc.readMem(0xcb51));
        // CB 08 01AF
        gbc.setState(0x259c, 0x9cd9, 0xec50, 0x5305, 0xf80b, 0x4437, 0x0, 0x1);
        gbc.writeMem(0x259c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9cd9, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01B0
        gbc.setState(0x476b, 0x603d, 0x51a0, 0x4561, 0x8a96, 0x6a4e, 0x0, 0x0);
        gbc.writeMem(0x476b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x603d, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01B1
        gbc.setState(0xb6eb, 0x5808, 0xf420, 0x31bb, 0xa25d, 0xe8a8, 0x0, 0x0);
        gbc.writeMem(0xb6eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0xb6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6eb));
        EXPECT(0x8, gbc.readMem(0xb6ec));
        // CB 08 01B2
        gbc.setState(0xbd0e, 0x1b83, 0xcde0, 0x142d, 0xb805, 0x29c4, 0x1, 0x1);
        gbc.writeMem(0xbd0e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1b83, gbc.sp());
        EXPECT(0xbd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0e));
        EXPECT(0x8, gbc.readMem(0xbd0f));
        // CB 08 01B3
        gbc.setState(0x1ec5, 0xa705, 0x4900, 0xc24, 0xa638, 0x9d30, 0x0, 0x1);
        gbc.writeMem(0x1ec5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01B4
        gbc.setState(0x40b2, 0xfc11, 0x50b0, 0x1e3b, 0x3843, 0x7309, 0x1, 0x0);
        gbc.writeMem(0x40b2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfc11, gbc.sp());
        EXPECT(0x40b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01B5
        gbc.setState(0x8877, 0x5dfc, 0x69d0, 0xb2a8, 0xcc58, 0xfa42, 0x0, 0x1);
        gbc.writeMem(0x8877, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5dfc, gbc.sp());
        EXPECT(0x8879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8877));
        EXPECT(0x8, gbc.readMem(0x8878));
        // CB 08 01B6
        gbc.setState(0xad9f, 0x4ffc, 0x6810, 0xa1b3, 0x6817, 0xd891, 0x1, 0x1);
        gbc.writeMem(0xad9f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4ffc, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9f));
        EXPECT(0x8, gbc.readMem(0xada0));
        // CB 08 01B7
        gbc.setState(0xa348, 0xa981, 0x4f00, 0x9ce, 0x42d9, 0x761d, 0x0, 0x1);
        gbc.writeMem(0xa348, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0xa34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa348));
        EXPECT(0x8, gbc.readMem(0xa349));
        // CB 08 01B8
        gbc.setState(0xc910, 0x59d3, 0xeba0, 0xd6c5, 0x8fec, 0xf7e1, 0x1, 0x0);
        gbc.writeMem(0xc910, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0xc912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc910));
        EXPECT(0x8, gbc.readMem(0xc911));
        // CB 08 01B9
        gbc.setState(0x6c0f, 0x5f72, 0xb5b0, 0xca80, 0x6d61, 0xe17b, 0x0, 0x1);
        gbc.writeMem(0x6c0f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5f72, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01BA
        gbc.setState(0x233f, 0xbce7, 0x4d90, 0xe701, 0x2da0, 0xe8fa, 0x1, 0x0);
        gbc.writeMem(0x233f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbce7, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01BB
        gbc.setState(0xef07, 0x46c3, 0x6040, 0xfb89, 0xdfe0, 0x35dc, 0x0, 0x1);
        gbc.writeMem(0xef07, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x46c3, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef07));
        EXPECT(0x8, gbc.readMem(0xef08));
        // CB 08 01BC
        gbc.setState(0xad8e, 0xf894, 0x36a0, 0x5787, 0x533, 0xa3f8, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0xad90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad8e));
        EXPECT(0x8, gbc.readMem(0xad8f));
        // CB 08 01BD
        gbc.setState(0x7e2f, 0x6f99, 0xe250, 0xb171, 0x15a8, 0x278, 0x0, 0x1);
        gbc.writeMem(0x7e2f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6f99, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01BE
        gbc.setState(0x1287, 0x7b83, 0xbd80, 0xfedd, 0x906f, 0x9709, 0x1, 0x0);
        gbc.writeMem(0x1287, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7b83, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01BF
        gbc.setState(0xb2eb, 0xc789, 0x3df0, 0x5d92, 0x3c0a, 0xbefe, 0x0, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc789, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0x8, gbc.readMem(0xb2ec));
        // CB 08 01C0
        gbc.setState(0x647d, 0x3f34, 0xcbb0, 0x5fc7, 0x3f03, 0xe4f1, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3f34, gbc.sp());
        EXPECT(0x647f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01C1
        gbc.setState(0x7782, 0xe30d, 0xdd40, 0x7dc4, 0xabbd, 0x57d4, 0x1, 0x0);
        gbc.writeMem(0x7782, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0x7784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01C2
        gbc.setState(0x79c2, 0xf32f, 0x1090, 0xdc3f, 0x742d, 0x3c1d, 0x0, 0x1);
        gbc.writeMem(0x79c2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf32f, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01C3
        gbc.setState(0xa318, 0x120d, 0x4550, 0xde02, 0x1624, 0xabdd, 0x0, 0x1);
        gbc.writeMem(0xa318, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x120d, gbc.sp());
        EXPECT(0xa31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa318));
        EXPECT(0x8, gbc.readMem(0xa319));
        // CB 08 01C4
        gbc.setState(0x3afc, 0xbe1, 0x3ed0, 0xedb9, 0x2e52, 0x5c83, 0x0, 0x1);
        gbc.writeMem(0x3afc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbe1, gbc.sp());
        EXPECT(0x3afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01C5
        gbc.setState(0xeaf1, 0x378f, 0xe7e0, 0xd89e, 0x9400, 0x2f04, 0x0, 0x1);
        gbc.writeMem(0xeaf1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x378f, gbc.sp());
        EXPECT(0xeaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaf1));
        EXPECT(0x8, gbc.readMem(0xeaf2));
        // CB 08 01C6
        gbc.setState(0x58a, 0xfc12, 0x8e40, 0x26fd, 0xd519, 0xfd75, 0x1, 0x1);
        gbc.writeMem(0x58a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x58c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01C7
        gbc.setState(0x9d70, 0x509a, 0x35f0, 0x4853, 0xc05, 0x7d38, 0x1, 0x0);
        gbc.writeMem(0x9d70, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x509a, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0x8, gbc.readMem(0x9d71));
        // CB 08 01C8
        gbc.setState(0x9bf2, 0x3d58, 0xe640, 0x8aac, 0xf487, 0xf600, 0x0, 0x0);
        gbc.writeMem(0x9bf2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3d58, gbc.sp());
        EXPECT(0x9bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf2));
        EXPECT(0x8, gbc.readMem(0x9bf3));
        // CB 08 01C9
        gbc.setState(0xd3af, 0x2f85, 0xbf90, 0x35cd, 0xae6c, 0x1e1, 0x0, 0x0);
        gbc.writeMem(0xd3af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2f85, gbc.sp());
        EXPECT(0xd3b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3af));
        EXPECT(0x8, gbc.readMem(0xd3b0));
        // CB 08 01CA
        gbc.setState(0xa244, 0x2460, 0x7c60, 0xcc88, 0x21eb, 0x5044, 0x1, 0x1);
        gbc.writeMem(0xa244, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0xa246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa244));
        EXPECT(0x8, gbc.readMem(0xa245));
        // CB 08 01CB
        gbc.setState(0x73f8, 0xb45b, 0x2c80, 0x87d4, 0x290d, 0x57cc, 0x0, 0x0);
        gbc.writeMem(0x73f8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb45b, gbc.sp());
        EXPECT(0x73fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01CC
        gbc.setState(0x1093, 0x5c59, 0x16e0, 0x7e39, 0x8180, 0x703e, 0x0, 0x0);
        gbc.writeMem(0x1093, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5c59, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01CD
        gbc.setState(0x2f82, 0x212, 0xa020, 0x6fe1, 0x8188, 0x2661, 0x0, 0x0);
        gbc.writeMem(0x2f82, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x212, gbc.sp());
        EXPECT(0x2f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01CE
        gbc.setState(0x1203, 0x479e, 0x4a40, 0x86e7, 0xfa90, 0x1552, 0x0, 0x1);
        gbc.writeMem(0x1203, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0x1205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01CF
        gbc.setState(0x4114, 0x30d5, 0x5370, 0x439a, 0x5646, 0x126a, 0x1, 0x0);
        gbc.writeMem(0x4114, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x30d5, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01D0
        gbc.setState(0xec32, 0xb370, 0x70c0, 0xad4d, 0x90b5, 0x96a7, 0x0, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb370, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec32));
        EXPECT(0x8, gbc.readMem(0xec33));
        // CB 08 01D2
        gbc.setState(0xd251, 0x370f, 0x3d00, 0x65a8, 0x14b8, 0x5eec, 0x1, 0x1);
        gbc.writeMem(0xd251, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0xd253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd251));
        EXPECT(0x8, gbc.readMem(0xd252));
        // CB 08 01D3
        gbc.setState(0x97be, 0xf9a5, 0xcbe0, 0xc001, 0xb6c3, 0xd852, 0x0, 0x0);
        gbc.writeMem(0x97be, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf9a5, gbc.sp());
        EXPECT(0x97c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97be));
        EXPECT(0x8, gbc.readMem(0x97bf));
        // CB 08 01D5
        gbc.setState(0x4c75, 0x20b2, 0xe520, 0x9a34, 0x3e11, 0x66e5, 0x0, 0x1);
        gbc.writeMem(0x4c75, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x20b2, gbc.sp());
        EXPECT(0x4c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01D6
        gbc.setState(0xe1b1, 0x2f97, 0x8ef0, 0x994d, 0x2c50, 0xade3, 0x1, 0x0);
        gbc.writeMem(0xe1b1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2f97, gbc.sp());
        EXPECT(0xe1b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b1));
        EXPECT(0x8, gbc.readMem(0xe1b2));
        // CB 08 01D7
        gbc.setState(0xeeb1, 0xbb41, 0xb70, 0xc8f6, 0xb051, 0x55fe, 0x0, 0x0);
        gbc.writeMem(0xeeb1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbb41, gbc.sp());
        EXPECT(0xeeb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb1));
        EXPECT(0x8, gbc.readMem(0xeeb2));
        // CB 08 01D9
        gbc.setState(0xb942, 0x1185, 0xad10, 0x4522, 0xba11, 0x39d7, 0x1, 0x0);
        gbc.writeMem(0xb942, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1185, gbc.sp());
        EXPECT(0xb944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb942));
        EXPECT(0x8, gbc.readMem(0xb943));
        // CB 08 01DA
        gbc.setState(0x6140, 0xff60, 0xf0f0, 0xe316, 0xe0c8, 0x43d4, 0x1, 0x1);
        gbc.writeMem(0x6140, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0x6142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01DB
        gbc.setState(0xd233, 0xbe16, 0x3cf0, 0xa0d1, 0xad37, 0xfa8d, 0x1, 0x1);
        gbc.writeMem(0xd233, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0xd235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd233));
        EXPECT(0x8, gbc.readMem(0xd234));
        // CB 08 01DC
        gbc.setState(0x20bb, 0x7b7c, 0x43a0, 0x4e6b, 0xed, 0xe461, 0x0, 0x1);
        gbc.writeMem(0x20bb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0x20bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01DD
        gbc.setState(0x636b, 0x3bd4, 0xc1a0, 0xce53, 0x7d98, 0x2f10, 0x0, 0x0);
        gbc.writeMem(0x636b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3bd4, gbc.sp());
        EXPECT(0x636d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01DE
        gbc.setState(0xd8aa, 0x359d, 0x8350, 0x7fd3, 0x15f7, 0xc806, 0x0, 0x1);
        gbc.writeMem(0xd8aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x359d, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8aa));
        EXPECT(0x8, gbc.readMem(0xd8ab));
        // CB 08 01DF
        gbc.setState(0x1e99, 0x59c2, 0xa50, 0x703d, 0x20cf, 0xb11f, 0x1, 0x1);
        gbc.writeMem(0x1e99, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x59c2, gbc.sp());
        EXPECT(0x1e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01E0
        gbc.setState(0xa788, 0xd711, 0x9010, 0xa516, 0x84f1, 0xc7c5, 0x1, 0x0);
        gbc.writeMem(0xa788, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd711, gbc.sp());
        EXPECT(0xa78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa788));
        EXPECT(0x8, gbc.readMem(0xa789));
        // CB 08 01E1
        gbc.setState(0x9522, 0x64df, 0x5740, 0xe4bc, 0xd948, 0x6e4f, 0x1, 0x1);
        gbc.writeMem(0x9522, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x64df, gbc.sp());
        EXPECT(0x9524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9522));
        EXPECT(0x8, gbc.readMem(0x9523));
        // CB 08 01E2
        gbc.setState(0xd760, 0xfaeb, 0xf590, 0x3eef, 0xf64d, 0x8db8, 0x0, 0x1);
        gbc.writeMem(0xd760, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfaeb, gbc.sp());
        EXPECT(0xd762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd760));
        EXPECT(0x8, gbc.readMem(0xd761));
        // CB 08 01E3
        gbc.setState(0x81aa, 0x212e, 0x4c10, 0xebb9, 0xe3db, 0x4c68, 0x0, 0x1);
        gbc.writeMem(0x81aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x212e, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81aa));
        EXPECT(0x8, gbc.readMem(0x81ab));
        // CB 08 01E4
        gbc.setState(0x76e, 0xa1c5, 0xc300, 0xaa9f, 0x5393, 0x486d, 0x0, 0x0);
        gbc.writeMem(0x76e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0x770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01E5
        gbc.setState(0x55ab, 0x2713, 0xab60, 0xb509, 0x455d, 0xdff2, 0x1, 0x1);
        gbc.writeMem(0x55ab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2713, gbc.sp());
        EXPECT(0x55ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01E6
        gbc.setState(0x6ad7, 0x3bc6, 0x4300, 0x5392, 0xdc50, 0xfd4a, 0x1, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3bc6, gbc.sp());
        EXPECT(0x6ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01E7
        gbc.setState(0x87ca, 0xe3b0, 0x5ca0, 0xf6b, 0x667d, 0x579, 0x0, 0x0);
        gbc.writeMem(0x87ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe3b0, gbc.sp());
        EXPECT(0x87cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ca));
        EXPECT(0x8, gbc.readMem(0x87cb));
        // CB 08 01E8
        gbc.setState(0x2a4f, 0x51c2, 0xb0a0, 0x81f7, 0x58c5, 0xc0a6, 0x1, 0x1);
        gbc.writeMem(0x2a4f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x51c2, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01E9
        gbc.setState(0xc84f, 0xea04, 0xc2e0, 0xbe0f, 0xbf1a, 0xe29b, 0x1, 0x0);
        gbc.writeMem(0xc84f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xea04, gbc.sp());
        EXPECT(0xc851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84f));
        EXPECT(0x8, gbc.readMem(0xc850));
        // CB 08 01EA
        gbc.setState(0xe32f, 0x2ba0, 0x3ab0, 0x6334, 0x7f06, 0x2469, 0x1, 0x1);
        gbc.writeMem(0xe32f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2ba0, gbc.sp());
        EXPECT(0xe331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32f));
        EXPECT(0x8, gbc.readMem(0xe330));
        // CB 08 01EB
        gbc.setState(0x109b, 0x7419, 0x5810, 0xcceb, 0x2757, 0xbca1, 0x0, 0x0);
        gbc.writeMem(0x109b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7419, gbc.sp());
        EXPECT(0x109d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01EC
        gbc.setState(0xc323, 0x9905, 0x7490, 0xef5f, 0x8998, 0xb560, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9905, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0x8, gbc.readMem(0xc324));
        // CB 08 01ED
        gbc.setState(0x5fe3, 0x8d3c, 0x6330, 0x10f3, 0x4f9, 0x99d0, 0x0, 0x1);
        gbc.writeMem(0x5fe3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8d3c, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01EE
        gbc.setState(0x8e83, 0xe193, 0xba00, 0xa07e, 0xdbfc, 0x12dd, 0x1, 0x0);
        gbc.writeMem(0x8e83, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe193, gbc.sp());
        EXPECT(0x8e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e83));
        EXPECT(0x8, gbc.readMem(0x8e84));
        // CB 08 01EF
        gbc.setState(0x850d, 0x1cbf, 0x5780, 0xa02, 0x5295, 0x565e, 0x0, 0x0);
        gbc.writeMem(0x850d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850d));
        EXPECT(0x8, gbc.readMem(0x850e));
        // CB 08 01F0
        gbc.setState(0x764b, 0x592c, 0x4d10, 0x1950, 0xf132, 0x1c5a, 0x0, 0x0);
        gbc.writeMem(0x764b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0x764d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01F1
        gbc.setState(0x4dc0, 0x4e9d, 0x6fe0, 0xebe3, 0x3285, 0x554e, 0x1, 0x1);
        gbc.writeMem(0x4dc0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0x4dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01F2
        gbc.setState(0xee32, 0x7399, 0x2590, 0xe882, 0x4e1e, 0xd618, 0x1, 0x1);
        gbc.writeMem(0xee32, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7399, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee32));
        EXPECT(0x8, gbc.readMem(0xee33));
        // CB 08 01F3
        gbc.setState(0xbdff, 0xc8b1, 0xdb60, 0x9d3, 0x87b3, 0xa9c6, 0x0, 0x0);
        gbc.writeMem(0xbdff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc8b1, gbc.sp());
        EXPECT(0xbe01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdff));
        EXPECT(0x8, gbc.readMem(0xbe00));
        // CB 08 01F4
        gbc.setState(0x9eee, 0x4aaa, 0x1160, 0x96f4, 0xce5f, 0x8b24, 0x1, 0x1);
        gbc.writeMem(0x9eee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4aaa, gbc.sp());
        EXPECT(0x9ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eee));
        EXPECT(0x8, gbc.readMem(0x9eef));
        // CB 08 01F6
        gbc.setState(0x6088, 0xb44a, 0x87e0, 0x328d, 0x625, 0x7091, 0x0, 0x1);
        gbc.writeMem(0x6088, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01F7
        gbc.setState(0x30a4, 0x160, 0xf7e0, 0xc050, 0xdcc0, 0xba32, 0x0, 0x1);
        gbc.writeMem(0x30a4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01F9
        gbc.setState(0x4f34, 0xafb3, 0x83e0, 0x68a4, 0x84a4, 0xa087, 0x1, 0x1);
        gbc.writeMem(0x4f34, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xafb3, gbc.sp());
        EXPECT(0x4f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 01FA
        gbc.setState(0xca00, 0xb273, 0x40e0, 0x76ba, 0xaa45, 0x92e5, 0x1, 0x0);
        gbc.writeMem(0xca00, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb273, gbc.sp());
        EXPECT(0xca02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca00));
        EXPECT(0x8, gbc.readMem(0xca01));
        // CB 08 01FB
        gbc.setState(0xc758, 0x2970, 0x9d40, 0xe0, 0x5bb4, 0x651e, 0x1, 0x0);
        gbc.writeMem(0xc758, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2970, gbc.sp());
        EXPECT(0xc75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc758));
        EXPECT(0x8, gbc.readMem(0xc759));
        // CB 08 01FC
        gbc.setState(0x66f7, 0x6b64, 0x53b0, 0x3b98, 0xd5d5, 0x6de0, 0x0, 0x1);
        gbc.writeMem(0x66f7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6b64, gbc.sp());
        EXPECT(0x66f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01FD
        gbc.setState(0xaf5b, 0xe0ed, 0xf700, 0xf2c0, 0xdb43, 0x7fc2, 0x0, 0x0);
        gbc.writeMem(0xaf5b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe0ed, gbc.sp());
        EXPECT(0xaf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5b));
        EXPECT(0x8, gbc.readMem(0xaf5c));
        // CB 08 01FE
        gbc.setState(0x72b, 0x68de, 0xb2f0, 0xcd53, 0xbcd5, 0xb4d5, 0x0, 0x1);
        gbc.writeMem(0x72b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x68de, gbc.sp());
        EXPECT(0x72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 01FF
        gbc.setState(0x918e, 0xc57, 0xdf90, 0x74cb, 0x4f9c, 0xf75b, 0x1, 0x1);
        gbc.writeMem(0x918e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0x9190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x918e));
        EXPECT(0x8, gbc.readMem(0x918f));
        // CB 08 0200
        gbc.setState(0x9f4f, 0xd595, 0xa540, 0xda81, 0x103a, 0xde13, 0x1, 0x0);
        gbc.writeMem(0x9f4f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0x8, gbc.readMem(0x9f50));
        // CB 08 0201
        gbc.setState(0x3a08, 0x7b75, 0xb440, 0x43b5, 0xb13e, 0x51ed, 0x0, 0x1);
        gbc.writeMem(0x3a08, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7b75, gbc.sp());
        EXPECT(0x3a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0202
        gbc.setState(0x9def, 0xee5c, 0x4ba0, 0x6d40, 0xb37e, 0xd79c, 0x1, 0x1);
        gbc.writeMem(0x9def, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xee5c, gbc.sp());
        EXPECT(0x9df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9def));
        EXPECT(0x8, gbc.readMem(0x9df0));
        // CB 08 0203
        gbc.setState(0x6945, 0x7749, 0x7b80, 0xea92, 0x4496, 0x9283, 0x0, 0x1);
        gbc.writeMem(0x6945, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0x6947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0204
        gbc.setState(0xb4a7, 0xc786, 0x5750, 0xe2e1, 0x704a, 0x70ce, 0x0, 0x0);
        gbc.writeMem(0xb4a7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc786, gbc.sp());
        EXPECT(0xb4a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a7));
        EXPECT(0x8, gbc.readMem(0xb4a8));
        // CB 08 0205
        gbc.setState(0xdbde, 0x4f39, 0xa020, 0x82, 0xefc0, 0x185b, 0x1, 0x0);
        gbc.writeMem(0xdbde, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4f39, gbc.sp());
        EXPECT(0xdbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbde));
        EXPECT(0x8, gbc.readMem(0xdbdf));
        // CB 08 0206
        gbc.setState(0x3de6, 0x802, 0x8720, 0x19e9, 0xbb5f, 0x8156, 0x0, 0x0);
        gbc.writeMem(0x3de6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x802, gbc.sp());
        EXPECT(0x3de8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0207
        gbc.setState(0x19b4, 0xc73, 0x1c40, 0xa551, 0x99d4, 0xe57a, 0x1, 0x0);
        gbc.writeMem(0x19b4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0x19b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0208
        gbc.setState(0xbaa2, 0x3695, 0xc020, 0x9299, 0x45be, 0xfae8, 0x1, 0x0);
        gbc.writeMem(0xbaa2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0xbaa4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa2));
        EXPECT(0x8, gbc.readMem(0xbaa3));
        // CB 08 0209
        gbc.setState(0x7cdc, 0x30c8, 0xf110, 0x89dc, 0xbe9f, 0x614, 0x1, 0x0);
        gbc.writeMem(0x7cdc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x30c8, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 020A
        gbc.setState(0x6d40, 0xbd96, 0xf0f0, 0xb9c9, 0x4d6e, 0xcd97, 0x1, 0x1);
        gbc.writeMem(0x6d40, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbd96, gbc.sp());
        EXPECT(0x6d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 020B
        gbc.setState(0xde8e, 0xb97c, 0xf50, 0xe186, 0x22a1, 0x6831, 0x1, 0x1);
        gbc.writeMem(0xde8e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb97c, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8e));
        EXPECT(0x8, gbc.readMem(0xde8f));
        // CB 08 020C
        gbc.setState(0x8f2c, 0x49b7, 0x51e0, 0x7ade, 0x10c5, 0x89a0, 0x0, 0x0);
        gbc.writeMem(0x8f2c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x49b7, gbc.sp());
        EXPECT(0x8f2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2c));
        EXPECT(0x8, gbc.readMem(0x8f2d));
        // CB 08 020D
        gbc.setState(0x8cec, 0x153d, 0xd120, 0xf6cc, 0x666b, 0x1eae, 0x1, 0x0);
        gbc.writeMem(0x8cec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x153d, gbc.sp());
        EXPECT(0x8cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cec));
        EXPECT(0x8, gbc.readMem(0x8ced));
        // CB 08 020E
        gbc.setState(0xde44, 0x28c9, 0xdf20, 0x85a4, 0x1ba6, 0x3761, 0x1, 0x1);
        gbc.writeMem(0xde44, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x28c9, gbc.sp());
        EXPECT(0xde46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde44));
        EXPECT(0x8, gbc.readMem(0xde45));
        // CB 08 0210
        gbc.setState(0x532, 0x89b2, 0xaae0, 0x52ac, 0x3fa5, 0xc5a8, 0x0, 0x0);
        gbc.writeMem(0x532, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x89b2, gbc.sp());
        EXPECT(0x534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0211
        gbc.setState(0x4022, 0xc464, 0x99b0, 0x3995, 0xb6f7, 0xb505, 0x0, 0x1);
        gbc.writeMem(0x4022, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc464, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0212
        gbc.setState(0x1d1c, 0xd26e, 0x8a30, 0x6037, 0x2a96, 0xdd99, 0x1, 0x0);
        gbc.writeMem(0x1d1c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd26e, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0213
        gbc.setState(0x686c, 0x620, 0x8520, 0x5528, 0xb98c, 0xa504, 0x0, 0x1);
        gbc.writeMem(0x686c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x620, gbc.sp());
        EXPECT(0x686e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0214
        gbc.setState(0x6772, 0x896a, 0x7f20, 0x4a3b, 0x917a, 0x71f8, 0x0, 0x0);
        gbc.writeMem(0x6772, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x896a, gbc.sp());
        EXPECT(0x6774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0215
        gbc.setState(0xeb1e, 0x4427, 0xdd10, 0xfa3f, 0xdab4, 0xf664, 0x0, 0x1);
        gbc.writeMem(0xeb1e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4427, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0x8, gbc.readMem(0xeb1f));
        // CB 08 0216
        gbc.setState(0x93a1, 0x8b32, 0x6f80, 0xa7aa, 0x8e93, 0xa957, 0x1, 0x0);
        gbc.writeMem(0x93a1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x93a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a1));
        EXPECT(0x8, gbc.readMem(0x93a2));
        // CB 08 0217
        gbc.setState(0x1c07, 0x28ea, 0xa4d0, 0x8c6c, 0x7549, 0x788a, 0x0, 0x1);
        gbc.writeMem(0x1c07, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x28ea, gbc.sp());
        EXPECT(0x1c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0218
        gbc.setState(0x76eb, 0xdce1, 0xb260, 0xc74a, 0x208e, 0x9f9a, 0x0, 0x1);
        gbc.writeMem(0x76eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdce1, gbc.sp());
        EXPECT(0x76ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0219
        gbc.setState(0xeeda, 0xbb61, 0x4920, 0xb630, 0xb39, 0x948c, 0x1, 0x0);
        gbc.writeMem(0xeeda, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb61, gbc.sp());
        EXPECT(0xeedc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeda));
        EXPECT(0x8, gbc.readMem(0xeedb));
        // CB 08 021A
        gbc.setState(0x2b32, 0xf766, 0xf050, 0x1a8d, 0x856a, 0xb2c9, 0x1, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf766, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 021B
        gbc.setState(0x16b4, 0x9625, 0x6e70, 0xfb6d, 0x4aee, 0x34a8, 0x0, 0x0);
        gbc.writeMem(0x16b4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9625, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 021C
        gbc.setState(0x72e, 0xacc, 0xf660, 0x5557, 0xc3ce, 0xc74b, 0x0, 0x0);
        gbc.writeMem(0x72e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xacc, gbc.sp());
        EXPECT(0x730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 021E
        gbc.setState(0x850f, 0x12c1, 0xbe0, 0xc6a2, 0x6cab, 0xdf61, 0x1, 0x0);
        gbc.writeMem(0x850f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x12c1, gbc.sp());
        EXPECT(0x8511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850f));
        EXPECT(0x8, gbc.readMem(0x8510));
        // CB 08 021F
        gbc.setState(0x77d2, 0xb7c5, 0xf330, 0x211b, 0xa530, 0x5671, 0x1, 0x1);
        gbc.writeMem(0x77d2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb7c5, gbc.sp());
        EXPECT(0x77d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0220
        gbc.setState(0x742f, 0x6330, 0x6a50, 0xb2f5, 0xf196, 0x4563, 0x1, 0x0);
        gbc.writeMem(0x742f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6330, gbc.sp());
        EXPECT(0x7431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0221
        gbc.setState(0xde3b, 0x90a1, 0xabf0, 0x953, 0x7abc, 0x79b6, 0x0, 0x1);
        gbc.writeMem(0xde3b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x90a1, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3b));
        EXPECT(0x8, gbc.readMem(0xde3c));
        // CB 08 0222
        gbc.setState(0xef25, 0xf60c, 0x6ec0, 0x2219, 0x61fb, 0xb3, 0x0, 0x0);
        gbc.writeMem(0xef25, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf60c, gbc.sp());
        EXPECT(0xef27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef25));
        EXPECT(0x8, gbc.readMem(0xef26));
        // CB 08 0223
        gbc.setState(0x68ff, 0x31bd, 0xf8c0, 0xc4b3, 0xc3b3, 0x8130, 0x0, 0x1);
        gbc.writeMem(0x68ff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x31bd, gbc.sp());
        EXPECT(0x6901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0224
        gbc.setState(0x7d0a, 0xab96, 0xcb0, 0xfc10, 0x9dfa, 0xd696, 0x0, 0x1);
        gbc.writeMem(0x7d0a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xab96, gbc.sp());
        EXPECT(0x7d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0225
        gbc.setState(0x3382, 0x6732, 0xa900, 0xc9fb, 0x7c01, 0x591e, 0x0, 0x0);
        gbc.writeMem(0x3382, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x3384, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0226
        gbc.setState(0xbfe0, 0x1063, 0x9600, 0x7908, 0x4189, 0x12bb, 0x1, 0x0);
        gbc.writeMem(0xbfe0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1063, gbc.sp());
        EXPECT(0xbfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe0));
        EXPECT(0x8, gbc.readMem(0xbfe1));
        // CB 08 0227
        gbc.setState(0xcf25, 0x827, 0xd3c0, 0xbd6c, 0x8ca3, 0x5fb4, 0x0, 0x0);
        gbc.writeMem(0xcf25, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x827, gbc.sp());
        EXPECT(0xcf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf25));
        EXPECT(0x8, gbc.readMem(0xcf26));
        // CB 08 0228
        gbc.setState(0x4e7d, 0x9893, 0x8780, 0x677b, 0xa855, 0xfd21, 0x0, 0x0);
        gbc.writeMem(0x4e7d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9893, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0229
        gbc.setState(0xd30a, 0xf56, 0xba50, 0xabf2, 0x477b, 0xe50d, 0x0, 0x0);
        gbc.writeMem(0xd30a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf56, gbc.sp());
        EXPECT(0xd30c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd30a));
        EXPECT(0x8, gbc.readMem(0xd30b));
        // CB 08 022A
        gbc.setState(0xb3f, 0x6d43, 0x73e0, 0x3d3e, 0x7779, 0xd5bf, 0x0, 0x1);
        gbc.writeMem(0xb3f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 022B
        gbc.setState(0x1be3, 0xe547, 0x59e0, 0x3395, 0x8192, 0x8389, 0x0, 0x1);
        gbc.writeMem(0x1be3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe547, gbc.sp());
        EXPECT(0x1be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 022C
        gbc.setState(0x7394, 0xe905, 0x8570, 0x458e, 0xda8d, 0x2a5b, 0x0, 0x0);
        gbc.writeMem(0x7394, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe905, gbc.sp());
        EXPECT(0x7396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 022D
        gbc.setState(0x68a9, 0xf79b, 0x8ee0, 0x9c04, 0xc673, 0x24af, 0x1, 0x1);
        gbc.writeMem(0x68a9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf79b, gbc.sp());
        EXPECT(0x68ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 022E
        gbc.setState(0x32d4, 0xeae8, 0xce80, 0x6ecc, 0x99ce, 0x564d, 0x0, 0x0);
        gbc.writeMem(0x32d4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xeae8, gbc.sp());
        EXPECT(0x32d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 022F
        gbc.setState(0x84c6, 0xc0fa, 0x8f10, 0x4af, 0xb52c, 0xaf94, 0x1, 0x0);
        gbc.writeMem(0x84c6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc0fa, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c6));
        EXPECT(0x8, gbc.readMem(0x84c7));
        // CB 08 0231
        gbc.setState(0x684b, 0x3e0b, 0x500, 0x21d3, 0xeec7, 0x4168, 0x1, 0x1);
        gbc.writeMem(0x684b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0x684d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0232
        gbc.setState(0x35f5, 0x26f8, 0x5d30, 0xbf3f, 0xf88c, 0x412e, 0x1, 0x1);
        gbc.writeMem(0x35f5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x26f8, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0233
        gbc.setState(0xb897, 0x3bbb, 0x3c70, 0xe4c1, 0x1cba, 0x4108, 0x0, 0x0);
        gbc.writeMem(0xb897, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3bbb, gbc.sp());
        EXPECT(0xb899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb897));
        EXPECT(0x8, gbc.readMem(0xb898));
        // CB 08 0234
        gbc.setState(0xb4c0, 0x585f, 0x1f70, 0x4fae, 0x46f4, 0xe8c6, 0x1, 0x1);
        gbc.writeMem(0xb4c0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0xb4c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c0));
        EXPECT(0x8, gbc.readMem(0xb4c1));
        // CB 08 0235
        gbc.setState(0x4be6, 0x7cf, 0xe5c0, 0xaea8, 0xc85b, 0x92bd, 0x0, 0x1);
        gbc.writeMem(0x4be6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7cf, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0236
        gbc.setState(0xa20a, 0x9f72, 0x5300, 0x7ed7, 0xa28c, 0x7efe, 0x1, 0x0);
        gbc.writeMem(0xa20a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9f72, gbc.sp());
        EXPECT(0xa20c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20a));
        EXPECT(0x8, gbc.readMem(0xa20b));
        // CB 08 0238
        gbc.setState(0x42fe, 0x9d40, 0xa170, 0xa05f, 0x673c, 0x3a57, 0x0, 0x0);
        gbc.writeMem(0x42fe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9d40, gbc.sp());
        EXPECT(0x4300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0239
        gbc.setState(0xb593, 0x7cd1, 0x9960, 0xf9e0, 0xfbea, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0xb593, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7cd1, gbc.sp());
        EXPECT(0xb595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb593));
        EXPECT(0x8, gbc.readMem(0xb594));
        // CB 08 023A
        gbc.setState(0xa2ff, 0x9551, 0x9470, 0x5080, 0x4981, 0x514c, 0x1, 0x1);
        gbc.writeMem(0xa2ff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9551, gbc.sp());
        EXPECT(0xa301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ff));
        EXPECT(0x8, gbc.readMem(0xa300));
        // CB 08 023B
        gbc.setState(0x6be6, 0xad68, 0xcd60, 0xc70f, 0x27b3, 0x4552, 0x0, 0x0);
        gbc.writeMem(0x6be6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xad68, gbc.sp());
        EXPECT(0x6be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 023C
        gbc.setState(0xafad, 0x6c60, 0xabf0, 0xaf1b, 0x9fd0, 0x6531, 0x1, 0x1);
        gbc.writeMem(0xafad, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0xafaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafad));
        EXPECT(0x8, gbc.readMem(0xafae));
        // CB 08 023D
        gbc.setState(0xd9a6, 0xd478, 0xc070, 0x25d7, 0xe084, 0x4571, 0x1, 0x1);
        gbc.writeMem(0xd9a6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd478, gbc.sp());
        EXPECT(0xd9a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9a6));
        EXPECT(0x8, gbc.readMem(0xd9a7));
        // CB 08 023E
        gbc.setState(0xdc78, 0x9e8c, 0x1070, 0x7383, 0xac66, 0xa656, 0x0, 0x1);
        gbc.writeMem(0xdc78, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9e8c, gbc.sp());
        EXPECT(0xdc7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc78));
        EXPECT(0x8, gbc.readMem(0xdc79));
        // CB 08 023F
        gbc.setState(0x18e7, 0x66f5, 0x21d0, 0x541d, 0x609, 0x8c09, 0x1, 0x1);
        gbc.writeMem(0x18e7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x66f5, gbc.sp());
        EXPECT(0x18e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0240
        gbc.setState(0x9045, 0x5127, 0x5b80, 0x6924, 0xef03, 0xc227, 0x0, 0x1);
        gbc.writeMem(0x9045, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5127, gbc.sp());
        EXPECT(0x9047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9045));
        EXPECT(0x8, gbc.readMem(0x9046));
        // CB 08 0241
        gbc.setState(0x7eec, 0x1a89, 0xecc0, 0x602f, 0x9297, 0xe8fa, 0x0, 0x1);
        gbc.writeMem(0x7eec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0x7eee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0242
        gbc.setState(0xe36a, 0xf3cf, 0xb250, 0xc0f9, 0x385d, 0xe41, 0x0, 0x0);
        gbc.writeMem(0xe36a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf3cf, gbc.sp());
        EXPECT(0xe36c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36a));
        EXPECT(0x8, gbc.readMem(0xe36b));
        // CB 08 0243
        gbc.setState(0xc05d, 0x7286, 0xe6d0, 0x76d1, 0x2dad, 0x3a30, 0x1, 0x1);
        gbc.writeMem(0xc05d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7286, gbc.sp());
        EXPECT(0xc05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05d));
        EXPECT(0x8, gbc.readMem(0xc05e));
        // CB 08 0244
        gbc.setState(0x9cce, 0xbc4e, 0x5c40, 0x380a, 0x5e9c, 0x29af, 0x0, 0x0);
        gbc.writeMem(0x9cce, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbc4e, gbc.sp());
        EXPECT(0x9cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cce));
        EXPECT(0x8, gbc.readMem(0x9ccf));
        // CB 08 0245
        gbc.setState(0x80ea, 0xde80, 0xaf60, 0x1941, 0x361, 0x9990, 0x0, 0x1);
        gbc.writeMem(0x80ea, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ea));
        EXPECT(0x8, gbc.readMem(0x80eb));
        // CB 08 0246
        gbc.setState(0x8086, 0xb7e, 0x4c10, 0xc16a, 0xddaf, 0x31ba, 0x0, 0x1);
        gbc.writeMem(0x8086, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb7e, gbc.sp());
        EXPECT(0x8088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8086));
        EXPECT(0x8, gbc.readMem(0x8087));
        // CB 08 0247
        gbc.setState(0x340d, 0x5295, 0xe740, 0x9cd2, 0x57f3, 0x7db7, 0x0, 0x1);
        gbc.writeMem(0x340d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5295, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0248
        gbc.setState(0xcba3, 0xacaf, 0x6760, 0x7697, 0xeaf4, 0x582e, 0x1, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xacaf, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0x8, gbc.readMem(0xcba4));
        // CB 08 0249
        gbc.setState(0x5e00, 0xf561, 0xa9b0, 0xacb0, 0x194f, 0x4072, 0x0, 0x0);
        gbc.writeMem(0x5e00, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf561, gbc.sp());
        EXPECT(0x5e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 024A
        gbc.setState(0xd943, 0x880b, 0x65b0, 0xd005, 0x8c92, 0x9b1c, 0x0, 0x0);
        gbc.writeMem(0xd943, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0xd945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd943));
        EXPECT(0x8, gbc.readMem(0xd944));
        // CB 08 024B
        gbc.setState(0xebee, 0xe4a7, 0x410, 0x506, 0xa1d8, 0x682d, 0x1, 0x0);
        gbc.writeMem(0xebee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe4a7, gbc.sp());
        EXPECT(0xebf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebee));
        EXPECT(0x8, gbc.readMem(0xebef));
        // CB 08 024C
        gbc.setState(0x53db, 0x89a2, 0x4ee0, 0xb337, 0x2049, 0x992e, 0x1, 0x0);
        gbc.writeMem(0x53db, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x89a2, gbc.sp());
        EXPECT(0x53dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 024D
        gbc.setState(0xec0, 0x5aaa, 0xb150, 0xa7f7, 0x43ec, 0x9d75, 0x0, 0x0);
        gbc.writeMem(0xec0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 024E
        gbc.setState(0x210b, 0xfc59, 0x9990, 0x7c42, 0x3851, 0x899d, 0x1, 0x0);
        gbc.writeMem(0x210b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfc59, gbc.sp());
        EXPECT(0x210d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 024F
        gbc.setState(0xcdb5, 0x5c7e, 0x95e0, 0x35b8, 0xe243, 0xe3db, 0x0, 0x1);
        gbc.writeMem(0xcdb5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5c7e, gbc.sp());
        EXPECT(0xcdb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb5));
        EXPECT(0x8, gbc.readMem(0xcdb6));
        // CB 08 0250
        gbc.setState(0xda33, 0x3876, 0xb20, 0x5d5d, 0xdad7, 0xf9b0, 0x0, 0x0);
        gbc.writeMem(0xda33, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3876, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda33));
        EXPECT(0x8, gbc.readMem(0xda34));
        // CB 08 0252
        gbc.setState(0xa0a0, 0x2ef6, 0xa7b0, 0x56ab, 0x31a0, 0xe070, 0x1, 0x1);
        gbc.writeMem(0xa0a0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0xa0a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a0));
        EXPECT(0x8, gbc.readMem(0xa0a1));
        // CB 08 0253
        gbc.setState(0xdb51, 0x75a1, 0x51f0, 0x5ef2, 0xf73, 0x6420, 0x0, 0x0);
        gbc.writeMem(0xdb51, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0xdb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb51));
        EXPECT(0x8, gbc.readMem(0xdb52));
        // CB 08 0254
        gbc.setState(0xda57, 0xeb57, 0xf320, 0x4c5b, 0xb609, 0xb531, 0x0, 0x1);
        gbc.writeMem(0xda57, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeb57, gbc.sp());
        EXPECT(0xda59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda57));
        EXPECT(0x8, gbc.readMem(0xda58));
        // CB 08 0255
        gbc.setState(0xa766, 0x2d43, 0x74d0, 0x8811, 0x2a8d, 0xcedf, 0x1, 0x0);
        gbc.writeMem(0xa766, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xa768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa766));
        EXPECT(0x8, gbc.readMem(0xa767));
        // CB 08 0257
        gbc.setState(0xdbbd, 0xc34d, 0xc590, 0xb59, 0x9724, 0x634c, 0x1, 0x1);
        gbc.writeMem(0xdbbd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc34d, gbc.sp());
        EXPECT(0xdbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbd));
        EXPECT(0x8, gbc.readMem(0xdbbe));
        // CB 08 0258
        gbc.setState(0x196f, 0x842f, 0xb4c0, 0xf07a, 0x1a9a, 0x3a9f, 0x0, 0x1);
        gbc.writeMem(0x196f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x842f, gbc.sp());
        EXPECT(0x1971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0259
        gbc.setState(0x9f08, 0xf459, 0xee30, 0xeb6d, 0x4bde, 0x4e52, 0x1, 0x0);
        gbc.writeMem(0x9f08, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf459, gbc.sp());
        EXPECT(0x9f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f08));
        EXPECT(0x8, gbc.readMem(0x9f09));
        // CB 08 025A
        gbc.setState(0xa45c, 0xd83e, 0x5c70, 0xfac3, 0x731a, 0x66b8, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0x8, gbc.readMem(0xa45d));
        // CB 08 025B
        gbc.setState(0x5e75, 0x1d0e, 0xd250, 0x8db4, 0xb34f, 0x4631, 0x0, 0x1);
        gbc.writeMem(0x5e75, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1d0e, gbc.sp());
        EXPECT(0x5e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 025C
        gbc.setState(0x282c, 0xa3ca, 0xd680, 0xdb75, 0xd6a5, 0x916c, 0x0, 0x1);
        gbc.writeMem(0x282c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa3ca, gbc.sp());
        EXPECT(0x282e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 025D
        gbc.setState(0xa380, 0x9381, 0x5130, 0xa6fc, 0xca6, 0x85db, 0x1, 0x1);
        gbc.writeMem(0xa380, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9381, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa380));
        EXPECT(0x8, gbc.readMem(0xa381));
        // CB 08 025E
        gbc.setState(0x79b0, 0x321f, 0x11f0, 0xd335, 0x819d, 0x8a4, 0x0, 0x1);
        gbc.writeMem(0x79b0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x321f, gbc.sp());
        EXPECT(0x79b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 025F
        gbc.setState(0xbc9c, 0x908d, 0xa1e0, 0xfbb9, 0xeecd, 0x4d54, 0x0, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0x8, gbc.readMem(0xbc9d));
        // CB 08 0260
        gbc.setState(0xc5c5, 0xb52a, 0x2d80, 0xce1, 0xd6d2, 0x2de3, 0x0, 0x0);
        gbc.writeMem(0xc5c5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb52a, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c5));
        EXPECT(0x8, gbc.readMem(0xc5c6));
        // CB 08 0261
        gbc.setState(0x1bcb, 0xcaa7, 0x37e0, 0xcce7, 0x3073, 0x46b1, 0x1, 0x0);
        gbc.writeMem(0x1bcb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcaa7, gbc.sp());
        EXPECT(0x1bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0262
        gbc.setState(0x3c1f, 0x3c76, 0xa620, 0xf147, 0x7a1f, 0xfe5c, 0x0, 0x1);
        gbc.writeMem(0x3c1f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3c76, gbc.sp());
        EXPECT(0x3c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0263
        gbc.setState(0xc8dc, 0x1fa8, 0xb70, 0x9515, 0x3b78, 0xe530, 0x1, 0x0);
        gbc.writeMem(0xc8dc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0xc8de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8dc));
        EXPECT(0x8, gbc.readMem(0xc8dd));
        // CB 08 0264
        gbc.setState(0xed22, 0x508f, 0x2a80, 0x1cc8, 0x75e5, 0x6f3c, 0x0, 0x0);
        gbc.writeMem(0xed22, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x508f, gbc.sp());
        EXPECT(0xed24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed22));
        EXPECT(0x8, gbc.readMem(0xed23));
        // CB 08 0265
        gbc.setState(0x8318, 0x3be1, 0xe9a0, 0xd126, 0xf5bf, 0x5519, 0x0, 0x0);
        gbc.writeMem(0x8318, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3be1, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0x8, gbc.readMem(0x8319));
        // CB 08 0266
        gbc.setState(0x34e9, 0xa190, 0x5840, 0xe69, 0x6a3f, 0x6dd0, 0x1, 0x0);
        gbc.writeMem(0x34e9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa190, gbc.sp());
        EXPECT(0x34eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0267
        gbc.setState(0x19f9, 0xfafc, 0x8710, 0x1ff4, 0x527f, 0xd769, 0x1, 0x0);
        gbc.writeMem(0x19f9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xfafc, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0268
        gbc.setState(0x552b, 0xc916, 0xd240, 0x2d63, 0x22fe, 0x7519, 0x1, 0x1);
        gbc.writeMem(0x552b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc916, gbc.sp());
        EXPECT(0x552d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 026A
        gbc.setState(0x7ba, 0xf0d, 0x4710, 0x6c90, 0x934f, 0xdd77, 0x1, 0x1);
        gbc.writeMem(0x7ba, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf0d, gbc.sp());
        EXPECT(0x7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 026B
        gbc.setState(0xecb6, 0xa1f4, 0x6e10, 0x35ed, 0xa77d, 0x567b, 0x1, 0x0);
        gbc.writeMem(0xecb6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa1f4, gbc.sp());
        EXPECT(0xecb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb6));
        EXPECT(0x8, gbc.readMem(0xecb7));
        // CB 08 026C
        gbc.setState(0x3d82, 0x9bc7, 0x1550, 0x6914, 0x314d, 0xbd9f, 0x1, 0x1);
        gbc.writeMem(0x3d82, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9bc7, gbc.sp());
        EXPECT(0x3d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 026D
        gbc.setState(0x4a94, 0x49df, 0x2ea0, 0x5232, 0x8fb3, 0xf5d6, 0x1, 0x0);
        gbc.writeMem(0x4a94, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x49df, gbc.sp());
        EXPECT(0x4a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 026E
        gbc.setState(0xb3b0, 0x4d07, 0x66f0, 0x91e2, 0xba32, 0x6d59, 0x0, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0x8, gbc.readMem(0xb3b1));
        // CB 08 026F
        gbc.setState(0xe527, 0x7e61, 0x45d0, 0x7b5a, 0x1ba6, 0x5dec, 0x1, 0x0);
        gbc.writeMem(0xe527, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7e61, gbc.sp());
        EXPECT(0xe529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe527));
        EXPECT(0x8, gbc.readMem(0xe528));
        // CB 08 0270
        gbc.setState(0x2b9b, 0x91e0, 0xcbf0, 0x527, 0xf8e8, 0x4b87, 0x0, 0x1);
        gbc.writeMem(0x2b9b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x91e0, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0271
        gbc.setState(0x74fa, 0x8395, 0xe9e0, 0x9c37, 0x9292, 0xf48b, 0x1, 0x0);
        gbc.writeMem(0x74fa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8395, gbc.sp());
        EXPECT(0x74fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0272
        gbc.setState(0x9d7f, 0x3fd2, 0x5ef0, 0x7d87, 0xa458, 0x5e4a, 0x0, 0x1);
        gbc.writeMem(0x9d7f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3fd2, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7f));
        EXPECT(0x8, gbc.readMem(0x9d80));
        // CB 08 0273
        gbc.setState(0xccb1, 0x53ab, 0x1080, 0x3cd8, 0x6d57, 0xbf00, 0x0, 0x1);
        gbc.writeMem(0xccb1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x53ab, gbc.sp());
        EXPECT(0xccb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb1));
        EXPECT(0x8, gbc.readMem(0xccb2));
        // CB 08 0274
        gbc.setState(0x4ba1, 0xa071, 0x4e10, 0x6a4f, 0x88f3, 0x417b, 0x1, 0x0);
        gbc.writeMem(0x4ba1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa071, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0275
        gbc.setState(0x2e8, 0x1015, 0xfc80, 0xc39e, 0x963e, 0x6565, 0x0, 0x0);
        gbc.writeMem(0x2e8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1015, gbc.sp());
        EXPECT(0x2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0276
        gbc.setState(0x4f01, 0xe70, 0xba60, 0xc7c5, 0xc680, 0xe795, 0x1, 0x1);
        gbc.writeMem(0x4f01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0x4f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0277
        gbc.setState(0xee94, 0xf703, 0x1630, 0xaa8e, 0x25b4, 0x2d15, 0x0, 0x1);
        gbc.writeMem(0xee94, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf703, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee94));
        EXPECT(0x8, gbc.readMem(0xee95));
        // CB 08 0278
        gbc.setState(0xcc61, 0x9011, 0x2bc0, 0x3807, 0x4cf5, 0x37e6, 0x1, 0x1);
        gbc.writeMem(0xcc61, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9011, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc61));
        EXPECT(0x8, gbc.readMem(0xcc62));
        // CB 08 0279
        gbc.setState(0xcdfa, 0xf989, 0xb370, 0x5c0c, 0x99f7, 0xfb99, 0x1, 0x1);
        gbc.writeMem(0xcdfa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf989, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfa));
        EXPECT(0x8, gbc.readMem(0xcdfb));
        // CB 08 027A
        gbc.setState(0xcfaa, 0xcb8a, 0x2e0, 0x2834, 0x3df5, 0x9a66, 0x1, 0x0);
        gbc.writeMem(0xcfaa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcb8a, gbc.sp());
        EXPECT(0xcfac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfaa));
        EXPECT(0x8, gbc.readMem(0xcfab));
        // CB 08 027B
        gbc.setState(0x7c76, 0x7975, 0x1770, 0x41ff, 0x4f98, 0x1da, 0x0, 0x0);
        gbc.writeMem(0x7c76, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7975, gbc.sp());
        EXPECT(0x7c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 027C
        gbc.setState(0x3139, 0x6af, 0x4c90, 0x1c10, 0x6cf, 0x3dcd, 0x0, 0x1);
        gbc.writeMem(0x3139, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6af, gbc.sp());
        EXPECT(0x313b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 027D
        gbc.setState(0x3c1d, 0x64b8, 0xae20, 0x3c88, 0xa9e8, 0x1c1e, 0x1, 0x1);
        gbc.writeMem(0x3c1d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x64b8, gbc.sp());
        EXPECT(0x3c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 027E
        gbc.setState(0xbe73, 0xd23e, 0x6a50, 0xa5d3, 0xf9dd, 0xe16d, 0x0, 0x1);
        gbc.writeMem(0xbe73, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd23e, gbc.sp());
        EXPECT(0xbe75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe73));
        EXPECT(0x8, gbc.readMem(0xbe74));
        // CB 08 0280
        gbc.setState(0xeb5, 0x533, 0x9610, 0x51fe, 0xf622, 0x3753, 0x0, 0x0);
        gbc.writeMem(0xeb5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0xeb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0281
        gbc.setState(0x9e01, 0x6c65, 0xd570, 0xc3d9, 0xe4a0, 0x3b0d, 0x1, 0x0);
        gbc.writeMem(0x9e01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e01));
        EXPECT(0x8, gbc.readMem(0x9e02));
        // CB 08 0282
        gbc.setState(0xc3a4, 0xd346, 0x9080, 0xc4ed, 0xb779, 0x5d61, 0x0, 0x0);
        gbc.writeMem(0xc3a4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd346, gbc.sp());
        EXPECT(0xc3a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a4));
        EXPECT(0x8, gbc.readMem(0xc3a5));
        // CB 08 0283
        gbc.setState(0xb014, 0x34c5, 0x51c0, 0x8b1b, 0x87d7, 0xfea8, 0x0, 0x1);
        gbc.writeMem(0xb014, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x34c5, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb014));
        EXPECT(0x8, gbc.readMem(0xb015));
        // CB 08 0284
        gbc.setState(0x6300, 0xf7b6, 0x9380, 0xec97, 0x3aa3, 0x1f47, 0x1, 0x1);
        gbc.writeMem(0x6300, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf7b6, gbc.sp());
        EXPECT(0x6302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0285
        gbc.setState(0xb841, 0x9124, 0x6910, 0xb5d6, 0xc4c3, 0x39dc, 0x1, 0x1);
        gbc.writeMem(0xb841, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9124, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb841));
        EXPECT(0x8, gbc.readMem(0xb842));
        // CB 08 0286
        gbc.setState(0xadc0, 0x460, 0x3f90, 0xa618, 0x707e, 0xe1ab, 0x1, 0x1);
        gbc.writeMem(0xadc0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x460, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc0));
        EXPECT(0x8, gbc.readMem(0xadc1));
        // CB 08 0287
        gbc.setState(0x69b0, 0x9871, 0xcc10, 0xcf4d, 0xec2d, 0x701a, 0x0, 0x0);
        gbc.writeMem(0x69b0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9871, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0288
        gbc.setState(0x9b10, 0x7549, 0x7340, 0xa1ab, 0xf9a5, 0xc14, 0x1, 0x1);
        gbc.writeMem(0x9b10, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7549, gbc.sp());
        EXPECT(0x9b12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b10));
        EXPECT(0x8, gbc.readMem(0x9b11));
        // CB 08 0289
        gbc.setState(0xc2e7, 0x86e3, 0x9a10, 0x728a, 0xc74a, 0x733d, 0x0, 0x0);
        gbc.writeMem(0xc2e7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x86e3, gbc.sp());
        EXPECT(0xc2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e7));
        EXPECT(0x8, gbc.readMem(0xc2e8));
        // CB 08 028A
        gbc.setState(0x2223, 0xe482, 0x3570, 0x7514, 0xf29e, 0xf555, 0x0, 0x1);
        gbc.writeMem(0x2223, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe482, gbc.sp());
        EXPECT(0x2225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 028B
        gbc.setState(0x13c1, 0xdd7, 0xf80, 0xc1ac, 0x4536, 0xe97e, 0x1, 0x1);
        gbc.writeMem(0x13c1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0x13c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 028C
        gbc.setState(0x36b4, 0x821d, 0x1b0, 0xbdfe, 0x1982, 0x8824, 0x0, 0x1);
        gbc.writeMem(0x36b4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x821d, gbc.sp());
        EXPECT(0x36b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 028D
        gbc.setState(0xc5a3, 0x8e0b, 0x4f10, 0x55c4, 0x55e7, 0xaa23, 0x0, 0x0);
        gbc.writeMem(0xc5a3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0xc5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5a3));
        EXPECT(0x8, gbc.readMem(0xc5a4));
        // CB 08 028E
        gbc.setState(0x1397, 0x8107, 0xa200, 0x63ba, 0xab49, 0xbbb0, 0x0, 0x0);
        gbc.writeMem(0x1397, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8107, gbc.sp());
        EXPECT(0x1399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 028F
        gbc.setState(0x332b, 0x3e6f, 0x6110, 0xa103, 0x67d2, 0xd390, 0x1, 0x1);
        gbc.writeMem(0x332b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0290
        gbc.setState(0x13ef, 0x9f5b, 0xb5c0, 0x49c9, 0x1f18, 0x5330, 0x1, 0x0);
        gbc.writeMem(0x13ef, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9f5b, gbc.sp());
        EXPECT(0x13f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0291
        gbc.setState(0x5850, 0x650c, 0xcb20, 0x1dea, 0xbd99, 0x71a3, 0x0, 0x0);
        gbc.writeMem(0x5850, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0x5852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0292
        gbc.setState(0x4ffe, 0x1b05, 0x2f00, 0xbb2f, 0x9958, 0x1106, 0x0, 0x0);
        gbc.writeMem(0x4ffe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1b05, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0293
        gbc.setState(0x5ffb, 0x3922, 0xc6e0, 0xaeae, 0x43d1, 0xf860, 0x0, 0x1);
        gbc.writeMem(0x5ffb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3922, gbc.sp());
        EXPECT(0x5ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0294
        gbc.setState(0xa7a3, 0xff72, 0x5830, 0x8368, 0x6529, 0xeac0, 0x0, 0x1);
        gbc.writeMem(0xa7a3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xff72, gbc.sp());
        EXPECT(0xa7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a3));
        EXPECT(0x8, gbc.readMem(0xa7a4));
        // CB 08 0295
        gbc.setState(0xb731, 0x337e, 0xde70, 0x376, 0xb7ec, 0x2d49, 0x1, 0x0);
        gbc.writeMem(0xb731, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0xb733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb731));
        EXPECT(0x8, gbc.readMem(0xb732));
        // CB 08 0296
        gbc.setState(0x450a, 0x65d9, 0x9360, 0xe617, 0x2bc4, 0xbff3, 0x0, 0x1);
        gbc.writeMem(0x450a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x65d9, gbc.sp());
        EXPECT(0x450c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0297
        gbc.setState(0x1bd6, 0x4428, 0x59d0, 0x37e4, 0xaa04, 0x1a6c, 0x0, 0x0);
        gbc.writeMem(0x1bd6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4428, gbc.sp());
        EXPECT(0x1bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0298
        gbc.setState(0xec94, 0x3bda, 0xa8e0, 0x6a57, 0xf4e1, 0x3ae3, 0x0, 0x1);
        gbc.writeMem(0xec94, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3bda, gbc.sp());
        EXPECT(0xec96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec94));
        EXPECT(0x8, gbc.readMem(0xec95));
        // CB 08 0299
        gbc.setState(0x3a0f, 0xe743, 0xa630, 0xe055, 0xd207, 0x664c, 0x1, 0x1);
        gbc.writeMem(0x3a0f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe743, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 029A
        gbc.setState(0x1bc4, 0x6b74, 0x5230, 0xe695, 0xabd8, 0x9a8a, 0x0, 0x1);
        gbc.writeMem(0x1bc4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0x1bc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 029B
        gbc.setState(0x379, 0x5f8c, 0x5700, 0x3359, 0xd4fe, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0x37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 029C
        gbc.setState(0x3369, 0x5355, 0xae20, 0x9ac9, 0xf603, 0xd3e6, 0x1, 0x0);
        gbc.writeMem(0x3369, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5355, gbc.sp());
        EXPECT(0x336b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 029D
        gbc.setState(0xb54b, 0xad1f, 0x5480, 0xd543, 0xc29f, 0xdca, 0x1, 0x0);
        gbc.writeMem(0xb54b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0xb54d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb54b));
        EXPECT(0x8, gbc.readMem(0xb54c));
        // CB 08 029E
        gbc.setState(0x11d, 0xfacc, 0x2c20, 0xacad, 0x78d4, 0x987c, 0x0, 0x1);
        gbc.writeMem(0x11d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfacc, gbc.sp());
        EXPECT(0x11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 029F
        gbc.setState(0xdc3e, 0x89d4, 0x80d0, 0x8e0f, 0x2c0c, 0x8432, 0x0, 0x1);
        gbc.writeMem(0xdc3e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0xdc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc3e));
        EXPECT(0x8, gbc.readMem(0xdc3f));
        // CB 08 02A0
        gbc.setState(0x2d4f, 0xd91f, 0x15f0, 0xe716, 0x9a8b, 0xab4b, 0x1, 0x1);
        gbc.writeMem(0x2d4f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd91f, gbc.sp());
        EXPECT(0x2d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02A1
        gbc.setState(0xb23c, 0x2046, 0xe420, 0x6165, 0x21bf, 0xf0f5, 0x1, 0x0);
        gbc.writeMem(0xb23c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0xb23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb23c));
        EXPECT(0x8, gbc.readMem(0xb23d));
        // CB 08 02A2
        gbc.setState(0xc9c4, 0x465f, 0x4550, 0x41ab, 0xd74d, 0x12aa, 0x1, 0x0);
        gbc.writeMem(0xc9c4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0xc9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c4));
        EXPECT(0x8, gbc.readMem(0xc9c5));
        // CB 08 02A3
        gbc.setState(0x7b3f, 0xb10e, 0xbd80, 0xd4bf, 0xccd5, 0xd41d, 0x0, 0x0);
        gbc.writeMem(0x7b3f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb10e, gbc.sp());
        EXPECT(0x7b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02A5
        gbc.setState(0xb1c2, 0x52e0, 0x6900, 0x7308, 0x3656, 0x442f, 0x0, 0x1);
        gbc.writeMem(0xb1c2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x52e0, gbc.sp());
        EXPECT(0xb1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c2));
        EXPECT(0x8, gbc.readMem(0xb1c3));
        // CB 08 02A6
        gbc.setState(0x516d, 0x5800, 0x56a0, 0xb8ef, 0x432d, 0x5b0d, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5800, gbc.sp());
        EXPECT(0x516f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02A7
        gbc.setState(0x4292, 0xc7ab, 0x8250, 0x8ec, 0xff15, 0xce68, 0x1, 0x1);
        gbc.writeMem(0x4292, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc7ab, gbc.sp());
        EXPECT(0x4294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02A8
        gbc.setState(0x825e, 0x66ad, 0xc10, 0x115d, 0x5ce, 0x5ef8, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0x8260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x825e));
        EXPECT(0x8, gbc.readMem(0x825f));
        // CB 08 02A9
        gbc.setState(0xcdc0, 0x88ea, 0x7830, 0x6d82, 0xf9cc, 0xd8dc, 0x0, 0x1);
        gbc.writeMem(0xcdc0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0xcdc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdc0));
        EXPECT(0x8, gbc.readMem(0xcdc1));
        // CB 08 02AB
        gbc.setState(0x6322, 0x24e5, 0xa890, 0xced3, 0x3520, 0x3441, 0x1, 0x0);
        gbc.writeMem(0x6322, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x24e5, gbc.sp());
        EXPECT(0x6324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02AC
        gbc.setState(0xb8a7, 0x7247, 0xf7a0, 0xd0c0, 0x53c3, 0x41a6, 0x0, 0x0);
        gbc.writeMem(0xb8a7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7247, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0x8, gbc.readMem(0xb8a8));
        // CB 08 02AD
        gbc.setState(0xc0f8, 0x4f61, 0xae00, 0xb6d7, 0xa07b, 0x81e8, 0x1, 0x1);
        gbc.writeMem(0xc0f8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4f61, gbc.sp());
        EXPECT(0xc0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f8));
        EXPECT(0x8, gbc.readMem(0xc0f9));
        // CB 08 02AE
        gbc.setState(0xcc09, 0x74f6, 0x1cd0, 0x2155, 0x282c, 0x13a3, 0x0, 0x1);
        gbc.writeMem(0xcc09, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x74f6, gbc.sp());
        EXPECT(0xcc0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc09));
        EXPECT(0x8, gbc.readMem(0xcc0a));
        // CB 08 02AF
        gbc.setState(0x3d2d, 0x37ff, 0x7980, 0xb18d, 0x9930, 0x570b, 0x1, 0x0);
        gbc.writeMem(0x3d2d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x37ff, gbc.sp());
        EXPECT(0x3d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02B0
        gbc.setState(0xeedf, 0x966f, 0xbfd0, 0x55b1, 0x2044, 0x4f45, 0x1, 0x0);
        gbc.writeMem(0xeedf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x966f, gbc.sp());
        EXPECT(0xeee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedf));
        EXPECT(0x8, gbc.readMem(0xeee0));
        // CB 08 02B1
        gbc.setState(0x9d6a, 0xb925, 0x4ef0, 0xc0dd, 0x1e22, 0x42f1, 0x1, 0x1);
        gbc.writeMem(0x9d6a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0x9d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6a));
        EXPECT(0x8, gbc.readMem(0x9d6b));
        // CB 08 02B2
        gbc.setState(0xc6c1, 0x6161, 0xdfb0, 0x4b4d, 0x2988, 0x9e23, 0x1, 0x1);
        gbc.writeMem(0xc6c1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6161, gbc.sp());
        EXPECT(0xc6c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c1));
        EXPECT(0x8, gbc.readMem(0xc6c2));
        // CB 08 02B3
        gbc.setState(0xc03e, 0x2ec4, 0x150, 0xc890, 0xd93, 0xce77, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0x8, gbc.readMem(0xc03f));
        // CB 08 02B4
        gbc.setState(0xcb0c, 0xdeaf, 0xc870, 0x6f80, 0x8bf9, 0xb42e, 0x1, 0x1);
        gbc.writeMem(0xcb0c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdeaf, gbc.sp());
        EXPECT(0xcb0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb0c));
        EXPECT(0x8, gbc.readMem(0xcb0d));
        // CB 08 02B5
        gbc.setState(0x1e5c, 0x5ca5, 0x6600, 0x936, 0x1146, 0xd5c6, 0x1, 0x0);
        gbc.writeMem(0x1e5c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5ca5, gbc.sp());
        EXPECT(0x1e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02B6
        gbc.setState(0x19af, 0x873c, 0xc7b0, 0x258d, 0xb551, 0xa528, 0x1, 0x1);
        gbc.writeMem(0x19af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x873c, gbc.sp());
        EXPECT(0x19b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02B7
        gbc.setState(0xeedd, 0x27de, 0x1330, 0x4cf8, 0xae76, 0xf1f5, 0x1, 0x1);
        gbc.writeMem(0xeedd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x27de, gbc.sp());
        EXPECT(0xeedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedd));
        EXPECT(0x8, gbc.readMem(0xeede));
        // CB 08 02B8
        gbc.setState(0x6ca3, 0xd514, 0xa2f0, 0x774a, 0x8518, 0xdba6, 0x1, 0x1);
        gbc.writeMem(0x6ca3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd514, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02B9
        gbc.setState(0x8616, 0xbe22, 0x3ac0, 0x8a00, 0xb089, 0xcfc3, 0x0, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbe22, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0x8, gbc.readMem(0x8617));
        // CB 08 02BA
        gbc.setState(0x8727, 0x7ecc, 0xb1a0, 0x6f64, 0x5127, 0x4381, 0x1, 0x1);
        gbc.writeMem(0x8727, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7ecc, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8727));
        EXPECT(0x8, gbc.readMem(0x8728));
        // CB 08 02BB
        gbc.setState(0x706e, 0xef31, 0x5210, 0xb939, 0xb353, 0xd219, 0x1, 0x0);
        gbc.writeMem(0x706e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xef31, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02BC
        gbc.setState(0xe29d, 0xba3d, 0x900, 0x3421, 0xf7a5, 0x4e4b, 0x1, 0x1);
        gbc.writeMem(0xe29d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xba3d, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29d));
        EXPECT(0x8, gbc.readMem(0xe29e));
        // CB 08 02BD
        gbc.setState(0x2aa0, 0xd600, 0xab40, 0xdd69, 0x578e, 0x48b0, 0x0, 0x0);
        gbc.writeMem(0x2aa0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd600, gbc.sp());
        EXPECT(0x2aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02BE
        gbc.setState(0xb9f8, 0x4660, 0x9eb0, 0xb18e, 0xd856, 0x7ed3, 0x1, 0x1);
        gbc.writeMem(0xb9f8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4660, gbc.sp());
        EXPECT(0xb9fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f8));
        EXPECT(0x8, gbc.readMem(0xb9f9));
        // CB 08 02BF
        gbc.setState(0x519, 0xc88c, 0x11c0, 0x745a, 0x467b, 0xdcb1, 0x0, 0x0);
        gbc.writeMem(0x519, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc88c, gbc.sp());
        EXPECT(0x51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02C0
        gbc.setState(0x602d, 0x4229, 0x910, 0x9ac0, 0xc652, 0xe998, 0x1, 0x1);
        gbc.writeMem(0x602d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0x602f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02C1
        gbc.setState(0x1cfe, 0xdc8f, 0x1e00, 0x459, 0x4171, 0x5f3d, 0x0, 0x1);
        gbc.writeMem(0x1cfe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdc8f, gbc.sp());
        EXPECT(0x1d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02C2
        gbc.setState(0x71cd, 0x6836, 0xde80, 0xb94f, 0xaa76, 0x28cc, 0x1, 0x0);
        gbc.writeMem(0x71cd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6836, gbc.sp());
        EXPECT(0x71cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02C3
        gbc.setState(0x5c93, 0x959d, 0xdbf0, 0x3c8e, 0x42a8, 0x6e4f, 0x1, 0x0);
        gbc.writeMem(0x5c93, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x959d, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02C4
        gbc.setState(0x5d6a, 0x500e, 0xfb70, 0x812d, 0xe356, 0xc094, 0x1, 0x0);
        gbc.writeMem(0x5d6a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x500e, gbc.sp());
        EXPECT(0x5d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02C5
        gbc.setState(0xf52, 0x2a3, 0xb880, 0x3d70, 0xd9f3, 0xb8dc, 0x1, 0x0);
        gbc.writeMem(0xf52, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2a3, gbc.sp());
        EXPECT(0xf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02C6
        gbc.setState(0x3949, 0xe079, 0x8bd0, 0xdb5a, 0xf550, 0x4aa0, 0x0, 0x0);
        gbc.writeMem(0x3949, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe079, gbc.sp());
        EXPECT(0x394b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02C7
        gbc.setState(0x628e, 0xeb34, 0xb9b0, 0x3087, 0x709, 0xe28f, 0x0, 0x0);
        gbc.writeMem(0x628e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02C8
        gbc.setState(0xd2ab, 0x14ba, 0xa8a0, 0x166c, 0xa22d, 0x86b5, 0x0, 0x1);
        gbc.writeMem(0xd2ab, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x14ba, gbc.sp());
        EXPECT(0xd2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ab));
        EXPECT(0x8, gbc.readMem(0xd2ac));
        // CB 08 02C9
        gbc.setState(0x4e79, 0x24fe, 0x8860, 0x8cdd, 0xddee, 0x3c00, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x24fe, gbc.sp());
        EXPECT(0x4e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02CA
        gbc.setState(0xd689, 0xe927, 0x11e0, 0x407, 0x707f, 0xcac2, 0x1, 0x1);
        gbc.writeMem(0xd689, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe927, gbc.sp());
        EXPECT(0xd68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd689));
        EXPECT(0x8, gbc.readMem(0xd68a));
        // CB 08 02CB
        gbc.setState(0x2120, 0x9141, 0xd020, 0xde1b, 0x3940, 0xadd5, 0x0, 0x1);
        gbc.writeMem(0x2120, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x2122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02CC
        gbc.setState(0x7f5f, 0xef64, 0xab80, 0x8d1d, 0x38fd, 0x7b97, 0x0, 0x1);
        gbc.writeMem(0x7f5f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0x7f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02CD
        gbc.setState(0x4150, 0x9f44, 0x2c90, 0xd2a7, 0xae0c, 0x76a5, 0x1, 0x0);
        gbc.writeMem(0x4150, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9f44, gbc.sp());
        EXPECT(0x4152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02CE
        gbc.setState(0x3e19, 0x5347, 0xdda0, 0xf40a, 0xa009, 0x5735, 0x1, 0x0);
        gbc.writeMem(0x3e19, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5347, gbc.sp());
        EXPECT(0x3e1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02CF
        gbc.setState(0x8256, 0xffcf, 0xb860, 0xdc35, 0xc763, 0x3ff3, 0x0, 0x1);
        gbc.writeMem(0x8256, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xffcf, gbc.sp());
        EXPECT(0x8258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8256));
        EXPECT(0x8, gbc.readMem(0x8257));
        // CB 08 02D1
        gbc.setState(0x7f6f, 0x9d02, 0x82a0, 0x21e9, 0x177b, 0xf45, 0x1, 0x0);
        gbc.writeMem(0x7f6f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d02, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02D2
        gbc.setState(0x51d7, 0xd5dc, 0xf9d0, 0x1fdf, 0x99e2, 0xf944, 0x0, 0x0);
        gbc.writeMem(0x51d7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5dc, gbc.sp());
        EXPECT(0x51d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02D3
        gbc.setState(0x5785, 0xc0a1, 0x1060, 0x3a8a, 0x2e35, 0xf818, 0x1, 0x1);
        gbc.writeMem(0x5785, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc0a1, gbc.sp());
        EXPECT(0x5787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02D4
        gbc.setState(0x580b, 0xed09, 0x8730, 0x2458, 0x6007, 0x6346, 0x1, 0x1);
        gbc.writeMem(0x580b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xed09, gbc.sp());
        EXPECT(0x580d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02D5
        gbc.setState(0xc7fe, 0xe7d2, 0x5a60, 0xc453, 0xe1a2, 0x49b6, 0x0, 0x0);
        gbc.writeMem(0xc7fe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0xc800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fe));
        EXPECT(0x8, gbc.readMem(0xc7ff));
        // CB 08 02D6
        gbc.setState(0x5ef4, 0x4f15, 0xa880, 0xd6fb, 0x1305, 0xba05, 0x1, 0x1);
        gbc.writeMem(0x5ef4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4f15, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02D8
        gbc.setState(0xbab9, 0x515b, 0xe20, 0xe9a1, 0x2df6, 0xdb8c, 0x1, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x515b, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab9));
        EXPECT(0x8, gbc.readMem(0xbaba));
        // CB 08 02D9
        gbc.setState(0xaa04, 0xd06a, 0xb440, 0xc899, 0xd1f1, 0x92b, 0x1, 0x0);
        gbc.writeMem(0xaa04, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd06a, gbc.sp());
        EXPECT(0xaa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa04));
        EXPECT(0x8, gbc.readMem(0xaa05));
        // CB 08 02DA
        gbc.setState(0x64ed, 0x3a72, 0x8e30, 0xe489, 0xbfe0, 0xc1bb, 0x0, 0x1);
        gbc.writeMem(0x64ed, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3a72, gbc.sp());
        EXPECT(0x64ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02DB
        gbc.setState(0xe1ba, 0xe881, 0x44f0, 0x823f, 0xa343, 0x19fb, 0x1, 0x0);
        gbc.writeMem(0xe1ba, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe881, gbc.sp());
        EXPECT(0xe1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ba));
        EXPECT(0x8, gbc.readMem(0xe1bb));
        // CB 08 02DC
        gbc.setState(0x6336, 0x581f, 0xc5e0, 0x6140, 0xaf5f, 0x8f42, 0x0, 0x1);
        gbc.writeMem(0x6336, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x581f, gbc.sp());
        EXPECT(0x6338, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02DE
        gbc.setState(0x5cd7, 0x26ff, 0x93f0, 0x7692, 0xdd6b, 0xb87d, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x26ff, gbc.sp());
        EXPECT(0x5cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02DF
        gbc.setState(0xbc36, 0x3c5c, 0xf520, 0x2992, 0x3c21, 0x4a8d, 0x1, 0x0);
        gbc.writeMem(0xbc36, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3c5c, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc36));
        EXPECT(0x8, gbc.readMem(0xbc37));
        // CB 08 02E0
        gbc.setState(0x4a8d, 0x9ee2, 0xc6e0, 0x37f2, 0x1740, 0x554a, 0x1, 0x0);
        gbc.writeMem(0x4a8d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9ee2, gbc.sp());
        EXPECT(0x4a8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02E1
        gbc.setState(0x2e0b, 0x54d1, 0x1d40, 0x669, 0xae8c, 0xeb6, 0x0, 0x1);
        gbc.writeMem(0x2e0b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0x2e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02E2
        gbc.setState(0x60bb, 0x89e3, 0x9f00, 0xac00, 0x614e, 0xb1ef, 0x1, 0x0);
        gbc.writeMem(0x60bb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x89e3, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02E3
        gbc.setState(0xe10a, 0xe438, 0xf2f0, 0x1c83, 0xbf7c, 0x2d63, 0x1, 0x1);
        gbc.writeMem(0xe10a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0xe10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10a));
        EXPECT(0x8, gbc.readMem(0xe10b));
        // CB 08 02E4
        gbc.setState(0x4d5b, 0x9c57, 0x4d0, 0xf0aa, 0xe55b, 0xebb2, 0x1, 0x1);
        gbc.writeMem(0x4d5b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9c57, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02E5
        gbc.setState(0x8104, 0x6bbc, 0xec70, 0x8626, 0xdeec, 0xd8f3, 0x0, 0x1);
        gbc.writeMem(0x8104, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6bbc, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8104));
        EXPECT(0x8, gbc.readMem(0x8105));
        // CB 08 02E6
        gbc.setState(0x6b29, 0x6f0b, 0x3100, 0xcc82, 0xd848, 0x70ab, 0x1, 0x1);
        gbc.writeMem(0x6b29, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f0b, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02E8
        gbc.setState(0x25ca, 0x84b2, 0x1a70, 0x67fe, 0x22fe, 0x31a7, 0x0, 0x0);
        gbc.writeMem(0x25ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x84b2, gbc.sp());
        EXPECT(0x25cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02E9
        gbc.setState(0xc352, 0x961a, 0xa4f0, 0x3e0, 0x73a1, 0x69c7, 0x0, 0x0);
        gbc.writeMem(0xc352, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x961a, gbc.sp());
        EXPECT(0xc354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc352));
        EXPECT(0x8, gbc.readMem(0xc353));
        // CB 08 02EA
        gbc.setState(0xd6a0, 0xc828, 0xd170, 0x6322, 0x3450, 0x6962, 0x1, 0x0);
        gbc.writeMem(0xd6a0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc828, gbc.sp());
        EXPECT(0xd6a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a0));
        EXPECT(0x8, gbc.readMem(0xd6a1));
        // CB 08 02EB
        gbc.setState(0x8be9, 0xc25, 0x25a0, 0xa617, 0x34d, 0x3b3a, 0x0, 0x1);
        gbc.writeMem(0x8be9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc25, gbc.sp());
        EXPECT(0x8beb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be9));
        EXPECT(0x8, gbc.readMem(0x8bea));
        // CB 08 02EC
        gbc.setState(0x99b1, 0xec92, 0xee60, 0x8191, 0x49a, 0x8bd3, 0x1, 0x1);
        gbc.writeMem(0x99b1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xec92, gbc.sp());
        EXPECT(0x99b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b1));
        EXPECT(0x8, gbc.readMem(0x99b2));
        // CB 08 02ED
        gbc.setState(0x609f, 0xc9e9, 0xad00, 0x6fbd, 0xf8a, 0x2084, 0x1, 0x1);
        gbc.writeMem(0x609f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc9e9, gbc.sp());
        EXPECT(0x60a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02EE
        gbc.setState(0x623f, 0xa8dc, 0x6ae0, 0x3b14, 0xc742, 0x26a, 0x0, 0x0);
        gbc.writeMem(0x623f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02EF
        gbc.setState(0xe61a, 0x58dd, 0xfe40, 0xa325, 0x3f70, 0xa683, 0x0, 0x1);
        gbc.writeMem(0xe61a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x58dd, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0x8, gbc.readMem(0xe61b));
        // CB 08 02F1
        gbc.setState(0x5a0e, 0xc770, 0xdbf0, 0x4f0c, 0x9725, 0x6ea2, 0x0, 0x1);
        gbc.writeMem(0x5a0e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc770, gbc.sp());
        EXPECT(0x5a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02F2
        gbc.setState(0xcd30, 0x436, 0x3b60, 0x3777, 0x7923, 0xf820, 0x1, 0x1);
        gbc.writeMem(0xcd30, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x436, gbc.sp());
        EXPECT(0xcd32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd30));
        EXPECT(0x8, gbc.readMem(0xcd31));
        // CB 08 02F3
        gbc.setState(0x9184, 0x6470, 0xe3f0, 0x2c51, 0x7fb, 0x5eb6, 0x0, 0x1);
        gbc.writeMem(0x9184, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6470, gbc.sp());
        EXPECT(0x9186, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9184));
        EXPECT(0x8, gbc.readMem(0x9185));
        // CB 08 02F4
        gbc.setState(0x3c3b, 0x7990, 0x2cf0, 0xff23, 0xcba0, 0xf57, 0x1, 0x1);
        gbc.writeMem(0x3c3b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7990, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02F6
        gbc.setState(0xe2eb, 0x31e8, 0x46d0, 0xabd, 0x8083, 0xef4a, 0x0, 0x0);
        gbc.writeMem(0xe2eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x31e8, gbc.sp());
        EXPECT(0xe2ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2eb));
        EXPECT(0x8, gbc.readMem(0xe2ec));
        // CB 08 02F7
        gbc.setState(0x1618, 0xb63a, 0xeb0, 0x3f80, 0xf9ec, 0xd42e, 0x1, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb63a, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02F8
        gbc.setState(0xd66b, 0x5dcf, 0xdf20, 0xd389, 0x3338, 0x39f2, 0x0, 0x1);
        gbc.writeMem(0xd66b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5dcf, gbc.sp());
        EXPECT(0xd66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66b));
        EXPECT(0x8, gbc.readMem(0xd66c));
        // CB 08 02F9
        gbc.setState(0x333e, 0x5857, 0x1a30, 0x2f85, 0x6fbd, 0xbccf, 0x1, 0x1);
        gbc.writeMem(0x333e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5857, gbc.sp());
        EXPECT(0x3340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 02FA
        gbc.setState(0xe70d, 0x3dd8, 0x1f30, 0x5f9d, 0x8f1, 0x503b, 0x1, 0x0);
        gbc.writeMem(0xe70d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3dd8, gbc.sp());
        EXPECT(0xe70f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70d));
        EXPECT(0x8, gbc.readMem(0xe70e));
        // CB 08 02FB
        gbc.setState(0x4dee, 0xf9c5, 0x30a0, 0x108d, 0xf36f, 0x8c4b, 0x0, 0x1);
        gbc.writeMem(0x4dee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf9c5, gbc.sp());
        EXPECT(0x4df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02FC
        gbc.setState(0x9652, 0x6c3d, 0x13a0, 0x9cbd, 0xdb19, 0x40f3, 0x0, 0x1);
        gbc.writeMem(0x9652, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6c3d, gbc.sp());
        EXPECT(0x9654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9652));
        EXPECT(0x8, gbc.readMem(0x9653));
        // CB 08 02FD
        gbc.setState(0xa6f3, 0xff5, 0x2270, 0x3557, 0xb7c, 0x3b85, 0x0, 0x0);
        gbc.writeMem(0xa6f3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xff5, gbc.sp());
        EXPECT(0xa6f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f3));
        EXPECT(0x8, gbc.readMem(0xa6f4));
        // CB 08 02FE
        gbc.setState(0x4ee, 0x8c5b, 0xff50, 0xba1c, 0x8e07, 0x30ab, 0x0, 0x1);
        gbc.writeMem(0x4ee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8c5b, gbc.sp());
        EXPECT(0x4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 02FF
        gbc.setState(0x65c6, 0xd05c, 0x380, 0xbffe, 0x22dc, 0x2792, 0x0, 0x0);
        gbc.writeMem(0x65c6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd05c, gbc.sp());
        EXPECT(0x65c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0300
        gbc.setState(0x9fd0, 0x8b2, 0x9750, 0x5399, 0xa0d3, 0xf43c, 0x1, 0x0);
        gbc.writeMem(0x9fd0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8b2, gbc.sp());
        EXPECT(0x9fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd0));
        EXPECT(0x8, gbc.readMem(0x9fd1));
        // CB 08 0301
        gbc.setState(0x1a5c, 0x3200, 0xe0c0, 0x6c19, 0xc0fa, 0x52eb, 0x1, 0x1);
        gbc.writeMem(0x1a5c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x1a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0302
        gbc.setState(0x7128, 0xed21, 0xa3d0, 0x8984, 0x19bc, 0x4f46, 0x0, 0x0);
        gbc.writeMem(0x7128, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xed21, gbc.sp());
        EXPECT(0x712a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0303
        gbc.setState(0x2534, 0xe816, 0x8290, 0x9361, 0xb6f5, 0x614a, 0x0, 0x0);
        gbc.writeMem(0x2534, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe816, gbc.sp());
        EXPECT(0x2536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0304
        gbc.setState(0x75c3, 0x23b7, 0x39c0, 0x90ae, 0x9f6e, 0xa814, 0x1, 0x1);
        gbc.writeMem(0x75c3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x23b7, gbc.sp());
        EXPECT(0x75c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0305
        gbc.setState(0x3dfa, 0xabe3, 0xd110, 0x5a05, 0xbb91, 0x7a9, 0x1, 0x1);
        gbc.writeMem(0x3dfa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0306
        gbc.setState(0x9c3c, 0xa3f3, 0x1370, 0xb07f, 0x9d88, 0x41fe, 0x0, 0x1);
        gbc.writeMem(0x9c3c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa3f3, gbc.sp());
        EXPECT(0x9c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3c));
        EXPECT(0x8, gbc.readMem(0x9c3d));
        // CB 08 0307
        gbc.setState(0x17d, 0xaa52, 0x6470, 0x7de4, 0x1185, 0xf4fb, 0x0, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa52, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0308
        gbc.setState(0x8b81, 0x3f63, 0x8bd0, 0xbb5e, 0x800d, 0xc45d, 0x0, 0x0);
        gbc.writeMem(0x8b81, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0x8b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b81));
        EXPECT(0x8, gbc.readMem(0x8b82));
        // CB 08 0309
        gbc.setState(0xb119, 0xca3f, 0x5840, 0x21b2, 0x96c9, 0x3c75, 0x0, 0x1);
        gbc.writeMem(0xb119, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca3f, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb119));
        EXPECT(0x8, gbc.readMem(0xb11a));
        // CB 08 030A
        gbc.setState(0xd73c, 0xd29b, 0x8750, 0x5ea0, 0x3d34, 0x5997, 0x0, 0x0);
        gbc.writeMem(0xd73c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd29b, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73c));
        EXPECT(0x8, gbc.readMem(0xd73d));
        // CB 08 030B
        gbc.setState(0x5aad, 0x33dd, 0x6e50, 0x7a7, 0xfbce, 0x4e54, 0x1, 0x0);
        gbc.writeMem(0x5aad, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x33dd, gbc.sp());
        EXPECT(0x5aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 030C
        gbc.setState(0xb4fc, 0xff03, 0x25e0, 0x48a3, 0x77c2, 0x8378, 0x1, 0x0);
        gbc.writeMem(0xb4fc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xff03, gbc.sp());
        EXPECT(0xb4fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fc));
        EXPECT(0x8, gbc.readMem(0xb4fd));
        // CB 08 030D
        gbc.setState(0xe1aa, 0x58a2, 0x1780, 0x25cd, 0xc3af, 0xc362, 0x0, 0x1);
        gbc.writeMem(0xe1aa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x58a2, gbc.sp());
        EXPECT(0xe1ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1aa));
        EXPECT(0x8, gbc.readMem(0xe1ab));
        // CB 08 030E
        gbc.setState(0x73cf, 0xefeb, 0x440, 0xc83c, 0x42e2, 0x988b, 0x0, 0x0);
        gbc.writeMem(0x73cf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0x73d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 030F
        gbc.setState(0xae40, 0x5268, 0xce30, 0x258e, 0xf261, 0x91af, 0x0, 0x0);
        gbc.writeMem(0xae40, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5268, gbc.sp());
        EXPECT(0xae42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae40));
        EXPECT(0x8, gbc.readMem(0xae41));
        // CB 08 0310
        gbc.setState(0x62cd, 0xbc28, 0xe30, 0xd67c, 0x4727, 0xb0d4, 0x0, 0x1);
        gbc.writeMem(0x62cd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0312
        gbc.setState(0xc76d, 0xda4d, 0x5340, 0xa6ae, 0xfe04, 0xa731, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0x8, gbc.readMem(0xc76e));
        // CB 08 0313
        gbc.setState(0x83a9, 0x4886, 0xcf0, 0xd29c, 0x61f8, 0x1fe5, 0x0, 0x0);
        gbc.writeMem(0x83a9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4886, gbc.sp());
        EXPECT(0x83ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a9));
        EXPECT(0x8, gbc.readMem(0x83aa));
        // CB 08 0314
        gbc.setState(0x451f, 0xd468, 0x490, 0xcb94, 0x12d0, 0x32bc, 0x1, 0x1);
        gbc.writeMem(0x451f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd468, gbc.sp());
        EXPECT(0x4521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0315
        gbc.setState(0x1f1d, 0x7db4, 0xd610, 0x710c, 0xe199, 0x1694, 0x1, 0x0);
        gbc.writeMem(0x1f1d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0x1f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0316
        gbc.setState(0x6a68, 0xfe54, 0xd550, 0xf5d2, 0x9a12, 0x3657, 0x0, 0x1);
        gbc.writeMem(0x6a68, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x6a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0317
        gbc.setState(0x6a51, 0x3b88, 0x3480, 0x781f, 0xda04, 0x6e9b, 0x1, 0x0);
        gbc.writeMem(0x6a51, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0x6a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0318
        gbc.setState(0x941b, 0xbad9, 0xc930, 0xb4d5, 0x2f29, 0x361e, 0x0, 0x0);
        gbc.writeMem(0x941b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbad9, gbc.sp());
        EXPECT(0x941d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941b));
        EXPECT(0x8, gbc.readMem(0x941c));
        // CB 08 0319
        gbc.setState(0xd710, 0xad17, 0x30b0, 0x97f5, 0x2a5f, 0xb33e, 0x1, 0x1);
        gbc.writeMem(0xd710, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xad17, gbc.sp());
        EXPECT(0xd712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd710));
        EXPECT(0x8, gbc.readMem(0xd711));
        // CB 08 031A
        gbc.setState(0xbac2, 0xea81, 0xea0, 0x837a, 0xf48a, 0x254f, 0x0, 0x1);
        gbc.writeMem(0xbac2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xea81, gbc.sp());
        EXPECT(0xbac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac2));
        EXPECT(0x8, gbc.readMem(0xbac3));
        // CB 08 031B
        gbc.setState(0xe2a2, 0x9c54, 0x150, 0xf3c, 0xba97, 0x32ba, 0x1, 0x1);
        gbc.writeMem(0xe2a2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9c54, gbc.sp());
        EXPECT(0xe2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a2));
        EXPECT(0x8, gbc.readMem(0xe2a3));
        // CB 08 031C
        gbc.setState(0xb30, 0x9856, 0xa270, 0xf7d, 0x769a, 0xa9f1, 0x0, 0x0);
        gbc.writeMem(0xb30, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9856, gbc.sp());
        EXPECT(0xb32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 031D
        gbc.setState(0xbb2a, 0x8adc, 0x7720, 0xe8fd, 0xd404, 0x54b8, 0x1, 0x0);
        gbc.writeMem(0xbb2a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8adc, gbc.sp());
        EXPECT(0xbb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2a));
        EXPECT(0x8, gbc.readMem(0xbb2b));
        // CB 08 031E
        gbc.setState(0xb46c, 0x43b1, 0xc090, 0xb762, 0xc14a, 0x3603, 0x1, 0x1);
        gbc.writeMem(0xb46c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0xb46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46c));
        EXPECT(0x8, gbc.readMem(0xb46d));
        // CB 08 031F
        gbc.setState(0x1501, 0xd143, 0x2480, 0x2f94, 0x1b70, 0xb200, 0x1, 0x1);
        gbc.writeMem(0x1501, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd143, gbc.sp());
        EXPECT(0x1503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0320
        gbc.setState(0xabe6, 0xf65a, 0x2100, 0xb70d, 0x31e3, 0xfa11, 0x0, 0x0);
        gbc.writeMem(0xabe6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0xabe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe6));
        EXPECT(0x8, gbc.readMem(0xabe7));
        // CB 08 0321
        gbc.setState(0x367, 0x53d5, 0x2e00, 0x31fc, 0x474, 0xdfd3, 0x0, 0x1);
        gbc.writeMem(0x367, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0322
        gbc.setState(0x7d37, 0x4e16, 0xf9b0, 0x2656, 0x9d85, 0xa9ac, 0x0, 0x0);
        gbc.writeMem(0x7d37, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4e16, gbc.sp());
        EXPECT(0x7d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0323
        gbc.setState(0x536a, 0xd14c, 0xd900, 0x34f5, 0x7af4, 0x1a9, 0x1, 0x0);
        gbc.writeMem(0x536a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd14c, gbc.sp());
        EXPECT(0x536c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0325
        gbc.setState(0x1b5f, 0x6d41, 0xd960, 0x8ada, 0x5f85, 0xa006, 0x1, 0x0);
        gbc.writeMem(0x1b5f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0x1b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0326
        gbc.setState(0x934b, 0x254, 0x78e0, 0x9e82, 0x1ab3, 0x7349, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x254, gbc.sp());
        EXPECT(0x934d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934b));
        EXPECT(0x8, gbc.readMem(0x934c));
        // CB 08 0327
        gbc.setState(0xd470, 0x4181, 0x2a30, 0x5d7, 0xd108, 0xfa17, 0x0, 0x1);
        gbc.writeMem(0xd470, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4181, gbc.sp());
        EXPECT(0xd472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd470));
        EXPECT(0x8, gbc.readMem(0xd471));
        // CB 08 0328
        gbc.setState(0x27ff, 0x7d60, 0x80c0, 0x6cf8, 0x5e3b, 0x2cad, 0x0, 0x0);
        gbc.writeMem(0x27ff, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7d60, gbc.sp());
        EXPECT(0x2801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0329
        gbc.setState(0x3b74, 0x19bc, 0xd8a0, 0x7dd2, 0x8310, 0xc342, 0x0, 0x1);
        gbc.writeMem(0x3b74, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x19bc, gbc.sp());
        EXPECT(0x3b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 032A
        gbc.setState(0xcab2, 0x22db, 0x3a90, 0xaf18, 0xc3ea, 0x9415, 0x1, 0x1);
        gbc.writeMem(0xcab2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x22db, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab2));
        EXPECT(0x8, gbc.readMem(0xcab3));
        // CB 08 032B
        gbc.setState(0xbdb9, 0x44bf, 0x7e60, 0xae4b, 0xd2b2, 0x242a, 0x0, 0x0);
        gbc.writeMem(0xbdb9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x44bf, gbc.sp());
        EXPECT(0xbdbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb9));
        EXPECT(0x8, gbc.readMem(0xbdba));
        // CB 08 032C
        gbc.setState(0x55f9, 0xcbb9, 0x7f80, 0x6992, 0xe69c, 0x3775, 0x1, 0x1);
        gbc.writeMem(0x55f9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xcbb9, gbc.sp());
        EXPECT(0x55fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 032D
        gbc.setState(0x9f75, 0xc40a, 0x8e80, 0x3f, 0xe54d, 0xd206, 0x1, 0x1);
        gbc.writeMem(0x9f75, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc40a, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f75));
        EXPECT(0x8, gbc.readMem(0x9f76));
        // CB 08 032E
        gbc.setState(0x49a3, 0x2ab0, 0x3ab0, 0xcd78, 0xdd47, 0x939b, 0x0, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2ab0, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 032F
        gbc.setState(0xb605, 0xb19e, 0xeb20, 0x896b, 0xf393, 0x1101, 0x0, 0x1);
        gbc.writeMem(0xb605, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xb19e, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb605));
        EXPECT(0x8, gbc.readMem(0xb606));
        // CB 08 0330
        gbc.setState(0x1216, 0x5c88, 0xfb90, 0x2fed, 0xef39, 0xf061, 0x1, 0x0);
        gbc.writeMem(0x1216, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5c88, gbc.sp());
        EXPECT(0x1218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0331
        gbc.setState(0xd3a9, 0xa1cd, 0x9990, 0xefbe, 0x2e17, 0x8c50, 0x1, 0x1);
        gbc.writeMem(0xd3a9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa1cd, gbc.sp());
        EXPECT(0xd3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a9));
        EXPECT(0x8, gbc.readMem(0xd3aa));
        // CB 08 0332
        gbc.setState(0xc2b3, 0x2e24, 0x5230, 0xdf5e, 0x87e8, 0xe99b, 0x1, 0x1);
        gbc.writeMem(0xc2b3, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2e24, gbc.sp());
        EXPECT(0xc2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b3));
        EXPECT(0x8, gbc.readMem(0xc2b4));
        // CB 08 0333
        gbc.setState(0x4bd7, 0x80e1, 0xf500, 0x92c4, 0x9875, 0x8aa3, 0x1, 0x1);
        gbc.writeMem(0x4bd7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x80e1, gbc.sp());
        EXPECT(0x4bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0334
        gbc.setState(0x9c3a, 0xff23, 0x4570, 0x501e, 0xdecf, 0xdaea, 0x1, 0x1);
        gbc.writeMem(0x9c3a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xff23, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0x8, gbc.readMem(0x9c3b));
        // CB 08 0335
        gbc.setState(0xabef, 0x98c7, 0x7860, 0xd005, 0x24fd, 0xa1d3, 0x1, 0x0);
        gbc.writeMem(0xabef, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0xabf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabef));
        EXPECT(0x8, gbc.readMem(0xabf0));
        // CB 08 0338
        gbc.setState(0x3e8b, 0x6962, 0xae00, 0xc117, 0xedea, 0xff67, 0x0, 0x0);
        gbc.writeMem(0x3e8b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6962, gbc.sp());
        EXPECT(0x3e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0339
        gbc.setState(0x9f58, 0x1719, 0xec0, 0xd2ce, 0x99d4, 0x98c5, 0x1, 0x1);
        gbc.writeMem(0x9f58, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1719, gbc.sp());
        EXPECT(0x9f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f58));
        EXPECT(0x8, gbc.readMem(0x9f59));
        // CB 08 033A
        gbc.setState(0xc78a, 0x9ba9, 0x7f0, 0x1cc8, 0xdd67, 0xc0b4, 0x1, 0x1);
        gbc.writeMem(0xc78a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9ba9, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78a));
        EXPECT(0x8, gbc.readMem(0xc78b));
        // CB 08 033B
        gbc.setState(0xe9d6, 0x8607, 0xe000, 0xdaf1, 0x3aaf, 0x33d2, 0x0, 0x0);
        gbc.writeMem(0xe9d6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0xe9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9d6));
        EXPECT(0x8, gbc.readMem(0xe9d7));
        // CB 08 033C
        gbc.setState(0x3faa, 0xd894, 0x79b0, 0x6ad2, 0x5949, 0x25c5, 0x1, 0x0);
        gbc.writeMem(0x3faa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd894, gbc.sp());
        EXPECT(0x3fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 033D
        gbc.setState(0xb35, 0x8840, 0x8190, 0xf1fe, 0xf34e, 0x1c38, 0x1, 0x1);
        gbc.writeMem(0xb35, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8840, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 033E
        gbc.setState(0x2a0e, 0xa1bd, 0x3940, 0x555c, 0x22a8, 0x86d5, 0x0, 0x0);
        gbc.writeMem(0x2a0e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa1bd, gbc.sp());
        EXPECT(0x2a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 033F
        gbc.setState(0x3c05, 0xd138, 0x50f0, 0xa78b, 0x9690, 0x55c2, 0x1, 0x1);
        gbc.writeMem(0x3c05, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd138, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0340
        gbc.setState(0x18cc, 0xa0f, 0xfae0, 0xefa5, 0xab9c, 0x9ace, 0x0, 0x0);
        gbc.writeMem(0x18cc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa0f, gbc.sp());
        EXPECT(0x18ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0341
        gbc.setState(0x7131, 0xdf84, 0xe7e0, 0x685b, 0x18f3, 0x407e, 0x0, 0x1);
        gbc.writeMem(0x7131, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdf84, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0342
        gbc.setState(0xd5ae, 0xbd4a, 0x5530, 0x144e, 0xc4a6, 0xa8b4, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbd4a, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x8, gbc.readMem(0xd5af));
        // CB 08 0343
        gbc.setState(0x7750, 0xa045, 0x3b50, 0x19fc, 0xc60d, 0x74e0, 0x1, 0x1);
        gbc.writeMem(0x7750, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa045, gbc.sp());
        EXPECT(0x7752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0344
        gbc.setState(0x57a5, 0x5c03, 0xf9c0, 0x4d41, 0xf1f5, 0x3cf6, 0x1, 0x1);
        gbc.writeMem(0x57a5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5c03, gbc.sp());
        EXPECT(0x57a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0345
        gbc.setState(0x972d, 0xbaf7, 0x4150, 0x7e7b, 0xb591, 0x3cd3, 0x1, 0x0);
        gbc.writeMem(0x972d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbaf7, gbc.sp());
        EXPECT(0x972f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x972d));
        EXPECT(0x8, gbc.readMem(0x972e));
        // CB 08 0347
        gbc.setState(0xa9a, 0x3ed5, 0xa90, 0xc822, 0x595f, 0x972b, 0x1, 0x0);
        gbc.writeMem(0xa9a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3ed5, gbc.sp());
        EXPECT(0xa9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0348
        gbc.setState(0x246b, 0x90c1, 0xfbe0, 0xd4bd, 0xba81, 0xa885, 0x1, 0x0);
        gbc.writeMem(0x246b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x90c1, gbc.sp());
        EXPECT(0x246d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 034A
        gbc.setState(0xe4f2, 0x7b72, 0x7440, 0x7600, 0x3c60, 0x3456, 0x0, 0x0);
        gbc.writeMem(0xe4f2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7b72, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4f2));
        EXPECT(0x8, gbc.readMem(0xe4f3));
        // CB 08 034B
        gbc.setState(0xc130, 0x835, 0x9e80, 0xa9b9, 0xc54, 0x6e5d, 0x0, 0x0);
        gbc.writeMem(0xc130, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x835, gbc.sp());
        EXPECT(0xc132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc130));
        EXPECT(0x8, gbc.readMem(0xc131));
        // CB 08 034C
        gbc.setState(0xe04f, 0xbe2d, 0x47d0, 0x6846, 0x5e8c, 0xfe56, 0x1, 0x0);
        gbc.writeMem(0xe04f, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0xe051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe04f));
        EXPECT(0x8, gbc.readMem(0xe050));
        // CB 08 034D
        gbc.setState(0x7433, 0x3d8d, 0xe920, 0xb51e, 0xaba1, 0xf226, 0x1, 0x0);
        gbc.writeMem(0x7433, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3d8d, gbc.sp());
        EXPECT(0x7435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 034E
        gbc.setState(0x693c, 0x7b7b, 0xd860, 0xf0b6, 0xae30, 0x7eb8, 0x1, 0x0);
        gbc.writeMem(0x693c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b7b, gbc.sp());
        EXPECT(0x693e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 034F
        gbc.setState(0x8142, 0xce1, 0xa540, 0xb8f4, 0x5249, 0x4565, 0x0, 0x0);
        gbc.writeMem(0x8142, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xce1, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8142));
        EXPECT(0x8, gbc.readMem(0x8143));
        // CB 08 0350
        gbc.setState(0xd876, 0xabad, 0x5de0, 0x4598, 0xd78e, 0x9cf3, 0x0, 0x1);
        gbc.writeMem(0xd876, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xabad, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd876));
        EXPECT(0x8, gbc.readMem(0xd877));
        // CB 08 0352
        gbc.setState(0x5af9, 0xab2, 0xc470, 0xf67f, 0x81a6, 0xdb54, 0x1, 0x0);
        gbc.writeMem(0x5af9, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xab2, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0353
        gbc.setState(0xbdb1, 0x6889, 0x97d0, 0x4153, 0xefe0, 0xee6d, 0x0, 0x0);
        gbc.writeMem(0xbdb1, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6889, gbc.sp());
        EXPECT(0xbdb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb1));
        EXPECT(0x8, gbc.readMem(0xbdb2));
        // CB 08 0354
        gbc.setState(0x4e9c, 0xaa43, 0x7790, 0xdf83, 0x7cc3, 0x9691, 0x0, 0x1);
        gbc.writeMem(0x4e9c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0x4e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0355
        gbc.setState(0x2952, 0xd6bf, 0x1da0, 0xc521, 0x2067, 0xb204, 0x1, 0x1);
        gbc.writeMem(0x2952, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x2954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0356
        gbc.setState(0x7f08, 0xdd0f, 0x5150, 0x34f0, 0x5af7, 0xa5c5, 0x0, 0x1);
        gbc.writeMem(0x7f08, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x7f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0357
        gbc.setState(0x1a99, 0xbc51, 0xa300, 0xe4bb, 0x8846, 0x6a6c, 0x1, 0x1);
        gbc.writeMem(0x1a99, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbc51, gbc.sp());
        EXPECT(0x1a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0358
        gbc.setState(0xe327, 0x784d, 0xda50, 0xb756, 0xc087, 0xe770, 0x0, 0x0);
        gbc.writeMem(0xe327, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x784d, gbc.sp());
        EXPECT(0xe329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe327));
        EXPECT(0x8, gbc.readMem(0xe328));
        // CB 08 0359
        gbc.setState(0x74fd, 0x1a3b, 0xbfd0, 0x73cb, 0xe89d, 0x72e, 0x1, 0x1);
        gbc.writeMem(0x74fd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a3b, gbc.sp());
        EXPECT(0x74ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 035A
        gbc.setState(0xd15c, 0x7b54, 0x71e0, 0xc27, 0x2e5c, 0x4c4f, 0x0, 0x0);
        gbc.writeMem(0xd15c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7b54, gbc.sp());
        EXPECT(0xd15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15c));
        EXPECT(0x8, gbc.readMem(0xd15d));
        // CB 08 035B
        gbc.setState(0x5687, 0xee56, 0xe5e0, 0x5b63, 0xb4f5, 0xcc03, 0x1, 0x0);
        gbc.writeMem(0x5687, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xee56, gbc.sp());
        EXPECT(0x5689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 035C
        gbc.setState(0xbeee, 0x2407, 0x1ea0, 0x7b0b, 0x4144, 0xcedd, 0x0, 0x1);
        gbc.writeMem(0xbeee, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2407, gbc.sp());
        EXPECT(0xbef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeee));
        EXPECT(0x8, gbc.readMem(0xbeef));
        // CB 08 035D
        gbc.setState(0x2c1a, 0x148e, 0x7fb0, 0xef73, 0x4e0b, 0x3314, 0x1, 0x0);
        gbc.writeMem(0x2c1a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x148e, gbc.sp());
        EXPECT(0x2c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 035E
        gbc.setState(0x8de2, 0x52f2, 0xfe10, 0x8a62, 0xde74, 0x6c5a, 0x1, 0x0);
        gbc.writeMem(0x8de2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x52f2, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0x8, gbc.readMem(0x8de3));
        // CB 08 035F
        gbc.setState(0x765, 0xa8a5, 0x130, 0x3429, 0x9266, 0x62ac, 0x1, 0x1);
        gbc.writeMem(0x765, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa8a5, gbc.sp());
        EXPECT(0x767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0360
        gbc.setState(0x5dec, 0x94e5, 0x1b0, 0x2c96, 0x3d10, 0xbdfa, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x94e5, gbc.sp());
        EXPECT(0x5dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0361
        gbc.setState(0x3279, 0x2ab3, 0xf8c0, 0x656c, 0xef0f, 0xeaab, 0x0, 0x1);
        gbc.writeMem(0x3279, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2ab3, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0362
        gbc.setState(0x5367, 0x685b, 0x3480, 0x5f62, 0x8b32, 0x502a, 0x1, 0x1);
        gbc.writeMem(0x5367, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x685b, gbc.sp());
        EXPECT(0x5369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0363
        gbc.setState(0x19ed, 0xa61f, 0xe3c0, 0x188e, 0xac1d, 0x713f, 0x1, 0x0);
        gbc.writeMem(0x19ed, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa61f, gbc.sp());
        EXPECT(0x19ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0364
        gbc.setState(0x24e8, 0x536e, 0xf1e0, 0xed9c, 0xa105, 0xb6e3, 0x1, 0x0);
        gbc.writeMem(0x24e8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x24ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0365
        gbc.setState(0xada8, 0x6362, 0xf520, 0x5, 0x47e, 0x929a, 0x1, 0x1);
        gbc.writeMem(0xada8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6362, gbc.sp());
        EXPECT(0xadaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada8));
        EXPECT(0x8, gbc.readMem(0xada9));
        // CB 08 0366
        gbc.setState(0x6ef7, 0x2b3c, 0xae50, 0xc2fa, 0x5773, 0x7c3a, 0x0, 0x1);
        gbc.writeMem(0x6ef7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2b3c, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0367
        gbc.setState(0x3e9e, 0x9dfe, 0x340, 0xb019, 0x9652, 0xce5b, 0x1, 0x1);
        gbc.writeMem(0x3e9e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9dfe, gbc.sp());
        EXPECT(0x3ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0368
        gbc.setState(0x6d60, 0x301c, 0x8940, 0x6c7f, 0x882c, 0x4daf, 0x1, 0x1);
        gbc.writeMem(0x6d60, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x301c, gbc.sp());
        EXPECT(0x6d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0369
        gbc.setState(0x6858, 0x91be, 0xb10, 0x968, 0xc94a, 0xc6e, 0x1, 0x1);
        gbc.writeMem(0x6858, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x91be, gbc.sp());
        EXPECT(0x685a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 036A
        gbc.setState(0x2d0c, 0x9eb1, 0x1170, 0xb637, 0x7853, 0x4e44, 0x1, 0x1);
        gbc.writeMem(0x2d0c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9eb1, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 036B
        gbc.setState(0xbde4, 0x5c5d, 0x8470, 0xba92, 0x2286, 0xe6b6, 0x1, 0x0);
        gbc.writeMem(0xbde4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5c5d, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde4));
        EXPECT(0x8, gbc.readMem(0xbde5));
        // CB 08 036D
        gbc.setState(0x140e, 0xc5d8, 0xb390, 0x3461, 0x2e13, 0xfec, 0x1, 0x1);
        gbc.writeMem(0x140e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0x1410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 036E
        gbc.setState(0x25fe, 0x6394, 0x6050, 0x17be, 0xdec1, 0xb25f, 0x0, 0x1);
        gbc.writeMem(0x25fe, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0x2600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 036F
        gbc.setState(0x9fb8, 0x2bf, 0x51c0, 0xf5e3, 0xf4c, 0xc948, 0x0, 0x0);
        gbc.writeMem(0x9fb8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2bf, gbc.sp());
        EXPECT(0x9fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb8));
        EXPECT(0x8, gbc.readMem(0x9fb9));
        // CB 08 0370
        gbc.setState(0x8f75, 0x4ac6, 0x1680, 0xa31a, 0xe5ec, 0x5eea, 0x0, 0x1);
        gbc.writeMem(0x8f75, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4ac6, gbc.sp());
        EXPECT(0x8f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f75));
        EXPECT(0x8, gbc.readMem(0x8f76));
        // CB 08 0371
        gbc.setState(0xaa0d, 0x6f4d, 0x5de0, 0x17e7, 0xb93c, 0x98c7, 0x1, 0x0);
        gbc.writeMem(0xaa0d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6f4d, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0d));
        EXPECT(0x8, gbc.readMem(0xaa0e));
        // CB 08 0372
        gbc.setState(0x3b50, 0x22b1, 0x5cc0, 0x77b5, 0xb122, 0xab6, 0x0, 0x1);
        gbc.writeMem(0x3b50, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x22b1, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0373
        gbc.setState(0xa998, 0xc7e0, 0x2980, 0xe761, 0xeba4, 0xb5c2, 0x1, 0x0);
        gbc.writeMem(0xa998, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc7e0, gbc.sp());
        EXPECT(0xa99a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa998));
        EXPECT(0x8, gbc.readMem(0xa999));
        // CB 08 0374
        gbc.setState(0x3b0e, 0xd7e, 0x21d0, 0xa4ef, 0xacdb, 0xd9f3, 0x0, 0x0);
        gbc.writeMem(0x3b0e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd7e, gbc.sp());
        EXPECT(0x3b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0375
        gbc.setState(0xaa4e, 0xbd58, 0x89e0, 0x666a, 0x766f, 0x7af1, 0x1, 0x0);
        gbc.writeMem(0xaa4e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbd58, gbc.sp());
        EXPECT(0xaa50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4e));
        EXPECT(0x8, gbc.readMem(0xaa4f));
        // CB 08 0376
        gbc.setState(0xd104, 0xb45f, 0xa5a0, 0x97e4, 0x8ac3, 0x3670, 0x1, 0x1);
        gbc.writeMem(0xd104, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb45f, gbc.sp());
        EXPECT(0xd106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd104));
        EXPECT(0x8, gbc.readMem(0xd105));
        // CB 08 0377
        gbc.setState(0x571a, 0x186a, 0x7ea0, 0xa1ce, 0x27a4, 0xce8d, 0x1, 0x1);
        gbc.writeMem(0x571a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x186a, gbc.sp());
        EXPECT(0x571c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0378
        gbc.setState(0xa9bb, 0x597e, 0x1800, 0x409, 0x8975, 0xcc2b, 0x0, 0x0);
        gbc.writeMem(0xa9bb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x597e, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bb));
        EXPECT(0x8, gbc.readMem(0xa9bc));
        // CB 08 0379
        gbc.setState(0x62de, 0x11dd, 0x8bf0, 0xca3f, 0x7f14, 0x56ad, 0x1, 0x0);
        gbc.writeMem(0x62de, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x11dd, gbc.sp());
        EXPECT(0x62e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 037A
        gbc.setState(0xc295, 0x54bf, 0xc820, 0x3ef4, 0x78de, 0xce6f, 0x0, 0x1);
        gbc.writeMem(0xc295, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x54bf, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc295));
        EXPECT(0x8, gbc.readMem(0xc296));
        // CB 08 037B
        gbc.setState(0x4b3a, 0xf775, 0x9e80, 0x8f9a, 0x2939, 0xacce, 0x0, 0x0);
        gbc.writeMem(0x4b3a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf775, gbc.sp());
        EXPECT(0x4b3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 037C
        gbc.setState(0x3707, 0x1469, 0xec90, 0xc1e4, 0x14b4, 0xb054, 0x1, 0x1);
        gbc.writeMem(0x3707, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x3709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 037D
        gbc.setState(0xb931, 0x1282, 0xc620, 0x1660, 0x80fb, 0x9e10, 0x0, 0x1);
        gbc.writeMem(0xb931, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb931));
        EXPECT(0x8, gbc.readMem(0xb932));
        // CB 08 037E
        gbc.setState(0xe03b, 0xacb7, 0x3e20, 0xede5, 0x3be, 0x8291, 0x1, 0x0);
        gbc.writeMem(0xe03b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe03b));
        EXPECT(0x8, gbc.readMem(0xe03c));
        // CB 08 037F
        gbc.setState(0xefc5, 0xc205, 0x55d0, 0x2d6d, 0xeb0c, 0x633b, 0x1, 0x0);
        gbc.writeMem(0xefc5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc205, gbc.sp());
        EXPECT(0xefc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc5));
        EXPECT(0x8, gbc.readMem(0xefc6));
        // CB 08 0380
        gbc.setState(0x94e6, 0xb1fa, 0x1d10, 0xf062, 0x9c95, 0xf895, 0x1, 0x1);
        gbc.writeMem(0x94e6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb1fa, gbc.sp());
        EXPECT(0x94e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94e6));
        EXPECT(0x8, gbc.readMem(0x94e7));
        // CB 08 0381
        gbc.setState(0xad64, 0xbf5b, 0xc8d0, 0x877, 0xd156, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0xad64, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0xad66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad64));
        EXPECT(0x8, gbc.readMem(0xad65));
        // CB 08 0382
        gbc.setState(0x9976, 0xafd8, 0xbc40, 0x252a, 0x3ee7, 0xa80f, 0x1, 0x0);
        gbc.writeMem(0x9976, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xafd8, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9976));
        EXPECT(0x8, gbc.readMem(0x9977));
        // CB 08 0383
        gbc.setState(0xb852, 0x5602, 0x25b0, 0x203c, 0x6c0e, 0xfc4b, 0x1, 0x0);
        gbc.writeMem(0xb852, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5602, gbc.sp());
        EXPECT(0xb854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb852));
        EXPECT(0x8, gbc.readMem(0xb853));
        // CB 08 0384
        gbc.setState(0x2438, 0x6c37, 0x4430, 0x8d8f, 0xdbbe, 0x6938, 0x1, 0x0);
        gbc.writeMem(0x2438, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6c37, gbc.sp());
        EXPECT(0x243a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0385
        gbc.setState(0x6953, 0xccdf, 0xe2a0, 0xb607, 0xae4b, 0x5ae1, 0x1, 0x0);
        gbc.writeMem(0x6953, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xccdf, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0386
        gbc.setState(0x4e29, 0xb7b, 0x7170, 0xa517, 0x121f, 0xffd2, 0x0, 0x0);
        gbc.writeMem(0x4e29, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb7b, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0387
        gbc.setState(0x11fc, 0x9281, 0x4be0, 0x487e, 0x6d50, 0x68fa, 0x0, 0x1);
        gbc.writeMem(0x11fc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9281, gbc.sp());
        EXPECT(0x11fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0388
        gbc.setState(0x7b, 0x4e62, 0xdf40, 0x1435, 0x1514, 0xa0d8, 0x0, 0x1);
        gbc.writeMem(0x7b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4e62, gbc.sp());
        EXPECT(0x7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0389
        gbc.setState(0xe8c4, 0x4b8d, 0x2d00, 0xdada, 0x5976, 0xb823, 0x1, 0x1);
        gbc.writeMem(0xe8c4, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0xe8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c4));
        EXPECT(0x8, gbc.readMem(0xe8c5));
        // CB 08 038A
        gbc.setState(0xd074, 0xa01c, 0x41a0, 0xf83a, 0x4005, 0xfb71, 0x1, 0x1);
        gbc.writeMem(0xd074, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa01c, gbc.sp());
        EXPECT(0xd076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd074));
        EXPECT(0x8, gbc.readMem(0xd075));
        // CB 08 038B
        gbc.setState(0xe3fa, 0xb497, 0x3670, 0xd344, 0xf711, 0xff8b, 0x1, 0x0);
        gbc.writeMem(0xe3fa, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb497, gbc.sp());
        EXPECT(0xe3fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fa));
        EXPECT(0x8, gbc.readMem(0xe3fb));
        // CB 08 038C
        gbc.setState(0x9be, 0x159e, 0x3e30, 0x9a0f, 0x32fb, 0x9f9b, 0x1, 0x0);
        gbc.writeMem(0x9be, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0x9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 038D
        gbc.setState(0x9568, 0xcc11, 0x6be0, 0x7198, 0x6bb8, 0x8f1d, 0x0, 0x0);
        gbc.writeMem(0x9568, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcc11, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0x8, gbc.readMem(0x9569));
        // CB 08 038E
        gbc.setState(0x16bf, 0xe478, 0x8a10, 0xb3f3, 0xaa24, 0x7b68, 0x1, 0x0);
        gbc.writeMem(0x16bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe478, gbc.sp());
        EXPECT(0x16c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0390
        gbc.setState(0x8b8, 0xf5f0, 0x7770, 0xc21d, 0x27c8, 0xf004, 0x0, 0x0);
        gbc.writeMem(0x8b8, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0391
        gbc.setState(0x49bf, 0x7694, 0xcc0, 0x8e94, 0x9f6d, 0x7707, 0x0, 0x1);
        gbc.writeMem(0x49bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7694, gbc.sp());
        EXPECT(0x49c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0392
        gbc.setState(0x6919, 0x345f, 0x23f0, 0x1547, 0x3dd8, 0x2b9b, 0x0, 0x1);
        gbc.writeMem(0x6919, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x345f, gbc.sp());
        EXPECT(0x691b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 0393
        gbc.setState(0x22ca, 0x6cb6, 0x6ef0, 0xfae3, 0xc6e, 0xe78d, 0x0, 0x1);
        gbc.writeMem(0x22ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0394
        gbc.setState(0x8d03, 0x5b61, 0xe160, 0xfbad, 0xfa13, 0x15a8, 0x0, 0x1);
        gbc.writeMem(0x8d03, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5b61, gbc.sp());
        EXPECT(0x8d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d03));
        EXPECT(0x8, gbc.readMem(0x8d04));
        // CB 08 0395
        gbc.setState(0xed77, 0x3603, 0xba90, 0xa6b9, 0x62a5, 0x7ecc, 0x1, 0x1);
        gbc.writeMem(0xed77, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3603, gbc.sp());
        EXPECT(0xed79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed77));
        EXPECT(0x8, gbc.readMem(0xed78));
        // CB 08 0396
        gbc.setState(0x357, 0xcae3, 0xf3e0, 0x4a3f, 0x6b06, 0x2ca2, 0x0, 0x0);
        gbc.writeMem(0x357, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcae3, gbc.sp());
        EXPECT(0x359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0397
        gbc.setState(0x4293, 0x70aa, 0xbaf0, 0xb816, 0x4d9e, 0xfa4d, 0x1, 0x0);
        gbc.writeMem(0x4293, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x70aa, gbc.sp());
        EXPECT(0x4295, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 0398
        gbc.setState(0xaeeb, 0x1d54, 0xb5d0, 0x3ee4, 0x57bb, 0x6432, 0x0, 0x1);
        gbc.writeMem(0xaeeb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1d54, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeeb));
        EXPECT(0x8, gbc.readMem(0xaeec));
        // CB 08 0399
        gbc.setState(0x3e56, 0xddaf, 0x5500, 0x85e6, 0x3c50, 0x9433, 0x0, 0x1);
        gbc.writeMem(0x3e56, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xddaf, gbc.sp());
        EXPECT(0x3e58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 039B
        gbc.setState(0x2d41, 0xc799, 0x9ff0, 0x660e, 0x6766, 0xf3bc, 0x0, 0x0);
        gbc.writeMem(0x2d41, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 039C
        gbc.setState(0xeb60, 0x37b7, 0x6680, 0xe813, 0x4ba0, 0x2f3e, 0x0, 0x0);
        gbc.writeMem(0xeb60, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x37b7, gbc.sp());
        EXPECT(0xeb62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb60));
        EXPECT(0x8, gbc.readMem(0xeb61));
        // CB 08 039D
        gbc.setState(0x6632, 0xed1, 0x8ba0, 0xba2f, 0x3e35, 0x316d, 0x0, 0x1);
        gbc.writeMem(0x6632, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xed1, gbc.sp());
        EXPECT(0x6634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 039E
        gbc.setState(0x7859, 0xf921, 0x5350, 0x72be, 0x7c04, 0xc57b, 0x1, 0x0);
        gbc.writeMem(0x7859, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 039F
        gbc.setState(0x5467, 0xc8a8, 0x3050, 0x6aa9, 0xcd70, 0x7411, 0x0, 0x1);
        gbc.writeMem(0x5467, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc8a8, gbc.sp());
        EXPECT(0x5469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03A0
        gbc.setState(0x17eb, 0xdd8e, 0xdc20, 0x3895, 0xff62, 0x35df, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdd8e, gbc.sp());
        EXPECT(0x17ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03A1
        gbc.setState(0x3fe0, 0xd87d, 0x7b10, 0xcd6f, 0x9b84, 0x25dc, 0x0, 0x1);
        gbc.writeMem(0x3fe0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd87d, gbc.sp());
        EXPECT(0x3fe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03A2
        gbc.setState(0xb42e, 0xa7ef, 0xc8f0, 0x8b61, 0x10dc, 0xce37, 0x0, 0x1);
        gbc.writeMem(0xb42e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa7ef, gbc.sp());
        EXPECT(0xb430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb42e));
        EXPECT(0x8, gbc.readMem(0xb42f));
        // CB 08 03A3
        gbc.setState(0xbf24, 0x86e6, 0x46d0, 0xdbd8, 0xd5ad, 0x84c6, 0x0, 0x0);
        gbc.writeMem(0xbf24, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0x8, gbc.readMem(0xbf25));
        // CB 08 03A4
        gbc.setState(0x5092, 0xeed4, 0xa140, 0x6ffd, 0x4c9a, 0x598a, 0x0, 0x0);
        gbc.writeMem(0x5092, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x5094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03A5
        gbc.setState(0x37bf, 0x73, 0xeb90, 0xeeee, 0x4d92, 0xa80a, 0x0, 0x0);
        gbc.writeMem(0x37bf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x37c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03A6
        gbc.setState(0xe21d, 0x77e0, 0xaf0, 0x808a, 0x4a33, 0x5e46, 0x0, 0x1);
        gbc.writeMem(0xe21d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0xe21f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe21d));
        EXPECT(0x8, gbc.readMem(0xe21e));
        // CB 08 03A7
        gbc.setState(0x404, 0x5c7, 0x3610, 0x1854, 0xf75a, 0x6760, 0x0, 0x1);
        gbc.writeMem(0x404, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c7, gbc.sp());
        EXPECT(0x406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03AB
        gbc.setState(0xadcd, 0xcc3c, 0xb920, 0xa645, 0xc9c5, 0x5bbe, 0x1, 0x0);
        gbc.writeMem(0xadcd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xcc3c, gbc.sp());
        EXPECT(0xadcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadcd));
        EXPECT(0x8, gbc.readMem(0xadce));
        // CB 08 03AC
        gbc.setState(0x966d, 0x363, 0x2270, 0x7610, 0x957b, 0xd15b, 0x1, 0x1);
        gbc.writeMem(0x966d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x363, gbc.sp());
        EXPECT(0x966f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966d));
        EXPECT(0x8, gbc.readMem(0x966e));
        // CB 08 03AD
        gbc.setState(0x2e9c, 0x3222, 0x4c60, 0x9c6e, 0x1774, 0xaa58, 0x0, 0x0);
        gbc.writeMem(0x2e9c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3222, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03AE
        gbc.setState(0xa9bc, 0xf49b, 0x240, 0x5b77, 0x302f, 0x6963, 0x1, 0x1);
        gbc.writeMem(0xa9bc, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf49b, gbc.sp());
        EXPECT(0xa9be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bc));
        EXPECT(0x8, gbc.readMem(0xa9bd));
        // CB 08 03AF
        gbc.setState(0x5f03, 0x8a78, 0xee60, 0x52cb, 0x2f00, 0xa705, 0x0, 0x1);
        gbc.writeMem(0x5f03, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x5f05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03B0
        gbc.setState(0xa26d, 0x3637, 0xfb90, 0x3007, 0x575a, 0x6904, 0x0, 0x0);
        gbc.writeMem(0xa26d, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0xa26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26d));
        EXPECT(0x8, gbc.readMem(0xa26e));
        // CB 08 03B1
        gbc.setState(0xd2af, 0xe9e3, 0x5a0, 0x3441, 0x60f9, 0x160c, 0x0, 0x1);
        gbc.writeMem(0xd2af, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe9e3, gbc.sp());
        EXPECT(0xd2b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2af));
        EXPECT(0x8, gbc.readMem(0xd2b0));
        // CB 08 03B2
        gbc.setState(0x9a6c, 0x8892, 0xdb80, 0xdca6, 0x30c9, 0x312a, 0x1, 0x1);
        gbc.writeMem(0x9a6c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8892, gbc.sp());
        EXPECT(0x9a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6c));
        EXPECT(0x8, gbc.readMem(0x9a6d));
        // CB 08 03B3
        gbc.setState(0x7777, 0x2703, 0xa460, 0x6568, 0x35df, 0x9a81, 0x0, 0x0);
        gbc.writeMem(0x7777, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2703, gbc.sp());
        EXPECT(0x7779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03B4
        gbc.setState(0xc153, 0x7075, 0x3a90, 0xbd53, 0x2e56, 0xde7d, 0x0, 0x1);
        gbc.writeMem(0xc153, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7075, gbc.sp());
        EXPECT(0xc155, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc153));
        EXPECT(0x8, gbc.readMem(0xc154));
        // CB 08 03B5
        gbc.setState(0x204c, 0xbb22, 0x52c0, 0xe68c, 0x5709, 0x7ceb, 0x0, 0x0);
        gbc.writeMem(0x204c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbb22, gbc.sp());
        EXPECT(0x204e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03B7
        gbc.setState(0xba3e, 0xb486, 0xfa10, 0x7a8b, 0x67b9, 0xe86e, 0x1, 0x1);
        gbc.writeMem(0xba3e, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb486, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3e));
        EXPECT(0x8, gbc.readMem(0xba3f));
        // CB 08 03B8
        gbc.setState(0xaad6, 0xd866, 0x8ee0, 0x796b, 0x283b, 0x23b8, 0x0, 0x0);
        gbc.writeMem(0xaad6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd866, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad6));
        EXPECT(0x8, gbc.readMem(0xaad7));
        // CB 08 03B9
        gbc.setState(0xb728, 0x9792, 0x5150, 0x4e43, 0xabac, 0xbd4, 0x0, 0x0);
        gbc.writeMem(0xb728, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0xb72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb728));
        EXPECT(0x8, gbc.readMem(0xb729));
        // CB 08 03BA
        gbc.setState(0x8c70, 0x80f4, 0x3910, 0x21bb, 0xd91e, 0x6b4c, 0x1, 0x0);
        gbc.writeMem(0x8c70, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0x8c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c70));
        EXPECT(0x8, gbc.readMem(0x8c71));
        // CB 08 03BB
        gbc.setState(0xbfa7, 0x39a, 0x4500, 0xda10, 0xfc1, 0x49b6, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x39a, gbc.sp());
        EXPECT(0xbfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa7));
        EXPECT(0x8, gbc.readMem(0xbfa8));
        // CB 08 03BC
        gbc.setState(0x6630, 0xc5bc, 0xd840, 0x45be, 0x68b, 0x2492, 0x0, 0x0);
        gbc.writeMem(0x6630, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0x6632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03BD
        gbc.setState(0x3ef, 0x6321, 0x8eb0, 0xb15, 0x8d18, 0x5566, 0x1, 0x1);
        gbc.writeMem(0x3ef, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6321, gbc.sp());
        EXPECT(0x3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03BE
        gbc.setState(0x1d15, 0xdf3f, 0xe750, 0x1a9c, 0x169e, 0x6ea, 0x1, 0x1);
        gbc.writeMem(0x1d15, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x1d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03BF
        gbc.setState(0xa4e0, 0xb5fc, 0xb8e0, 0x3974, 0xc890, 0x7f3c, 0x0, 0x1);
        gbc.writeMem(0xa4e0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb5fc, gbc.sp());
        EXPECT(0xa4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e0));
        EXPECT(0x8, gbc.readMem(0xa4e1));
        // CB 08 03C1
        gbc.setState(0xd1e7, 0x429a, 0xa960, 0x479e, 0x5f78, 0x6bb0, 0x0, 0x0);
        gbc.writeMem(0xd1e7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x429a, gbc.sp());
        EXPECT(0xd1e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e7));
        EXPECT(0x8, gbc.readMem(0xd1e8));
        // CB 08 03C2
        gbc.setState(0x9b01, 0xb6a0, 0x4b10, 0x1f, 0xc541, 0x380a, 0x1, 0x1);
        gbc.writeMem(0x9b01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0x9b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b01));
        EXPECT(0x8, gbc.readMem(0x9b02));
        // CB 08 03C3
        gbc.setState(0xdd90, 0x53d, 0xae60, 0x9c97, 0x47a4, 0x1473, 0x1, 0x1);
        gbc.writeMem(0xdd90, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x53d, gbc.sp());
        EXPECT(0xdd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd90));
        EXPECT(0x8, gbc.readMem(0xdd91));
        // CB 08 03C4
        gbc.setState(0x476, 0xbf4f, 0x87a0, 0x5912, 0x82ca, 0x1681, 0x1, 0x0);
        gbc.writeMem(0x476, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf4f, gbc.sp());
        EXPECT(0x478, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03C5
        gbc.setState(0x7b01, 0xf022, 0x4b50, 0x3185, 0x533c, 0x6056, 0x1, 0x1);
        gbc.writeMem(0x7b01, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf022, gbc.sp());
        EXPECT(0x7b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03C6
        gbc.setState(0x35ca, 0x5976, 0xe090, 0xf990, 0x1ec0, 0xf5f7, 0x1, 0x0);
        gbc.writeMem(0x35ca, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5976, gbc.sp());
        EXPECT(0x35cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03C7
        gbc.setState(0x89d2, 0x797b, 0xb160, 0xc975, 0x8b3b, 0xc884, 0x0, 0x0);
        gbc.writeMem(0x89d2, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x797b, gbc.sp());
        EXPECT(0x89d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d2));
        EXPECT(0x8, gbc.readMem(0x89d3));
        // CB 08 03C8
        gbc.setState(0x350a, 0xb0fc, 0xa020, 0x62e7, 0x57df, 0x3c76, 0x1, 0x0);
        gbc.writeMem(0x350a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0x350c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03C9
        gbc.setState(0xc698, 0xd082, 0x8d10, 0xbc64, 0xd06e, 0xbd9b, 0x1, 0x0);
        gbc.writeMem(0xc698, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0xc69a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc698));
        EXPECT(0x8, gbc.readMem(0xc699));
        // CB 08 03CA
        gbc.setState(0x7590, 0x84d1, 0xdbd0, 0x79f8, 0x4a3c, 0x6dd3, 0x1, 0x1);
        gbc.writeMem(0x7590, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x84d1, gbc.sp());
        EXPECT(0x7592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03CB
        gbc.setState(0x3883, 0x4f48, 0x8820, 0xcba0, 0x9679, 0xd00d, 0x1, 0x0);
        gbc.writeMem(0x3883, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4f48, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03CC
        gbc.setState(0x894, 0x8f8a, 0xe3f0, 0x3f83, 0x16f5, 0x1c86, 0x0, 0x0);
        gbc.writeMem(0x894, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f8a, gbc.sp());
        EXPECT(0x896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03CD
        gbc.setState(0x18c6, 0xcf94, 0x9570, 0x31b6, 0x93b7, 0x8fd9, 0x0, 0x1);
        gbc.writeMem(0x18c6, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xcf94, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03CE
        gbc.setState(0x5b90, 0xb66a, 0x91f0, 0x4fc5, 0x47d5, 0x55a7, 0x1, 0x0);
        gbc.writeMem(0x5b90, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb66a, gbc.sp());
        EXPECT(0x5b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03D0
        gbc.setState(0x1cec, 0xf99a, 0xa6e0, 0xbf90, 0x27ba, 0xe018, 0x0, 0x0);
        gbc.writeMem(0x1cec, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0x1cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03D1
        gbc.setState(0x5d39, 0x8882, 0x8db0, 0x41cb, 0x8096, 0xbdd4, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8882, gbc.sp());
        EXPECT(0x5d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03D2
        gbc.setState(0x2f68, 0x34b1, 0x8ce0, 0xa0ab, 0x4668, 0x6f1d, 0x0, 0x0);
        gbc.writeMem(0x2f68, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34b1, gbc.sp());
        EXPECT(0x2f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03D3
        gbc.setState(0xacbf, 0x3590, 0x8e70, 0x6843, 0x4401, 0x7fa6, 0x0, 0x1);
        gbc.writeMem(0xacbf, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3590, gbc.sp());
        EXPECT(0xacc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbf));
        EXPECT(0x8, gbc.readMem(0xacc0));
        // CB 08 03D4
        gbc.setState(0x99b7, 0xb9b0, 0xba0, 0xc545, 0xf6bf, 0x81c1, 0x1, 0x1);
        gbc.writeMem(0x99b7, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb9b0, gbc.sp());
        EXPECT(0x99b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99b7));
        EXPECT(0x8, gbc.readMem(0x99b8));
        // CB 08 03D5
        gbc.setState(0x28fd, 0xcf3a, 0x9fe0, 0xa1e, 0x48c0, 0xe8ef, 0x0, 0x0);
        gbc.writeMem(0x28fd, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xcf3a, gbc.sp());
        EXPECT(0x28ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03D6
        gbc.setState(0xc3d5, 0x37bd, 0xb3d0, 0x4c76, 0xa4cc, 0x5f3f, 0x0, 0x1);
        gbc.writeMem(0xc3d5, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x37bd, gbc.sp());
        EXPECT(0xc3d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d5));
        EXPECT(0x8, gbc.readMem(0xc3d6));
        // CB 08 03D7
        gbc.setState(0x9b53, 0x7b18, 0x1970, 0x8512, 0xbc5, 0xc3da, 0x0, 0x0);
        gbc.writeMem(0x9b53, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7b18, gbc.sp());
        EXPECT(0x9b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b53));
        EXPECT(0x8, gbc.readMem(0x9b54));
        // CB 08 03D8
        gbc.setState(0x1a57, 0x1aea, 0x9730, 0x2f19, 0xbef4, 0x2f99, 0x1, 0x0);
        gbc.writeMem(0x1a57, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1aea, gbc.sp());
        EXPECT(0x1a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03D9
        gbc.setState(0x575a, 0xbcca, 0x5b50, 0x3ff4, 0xbc7e, 0x6a01, 0x1, 0x0);
        gbc.writeMem(0x575a, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbcca, gbc.sp());
        EXPECT(0x575c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03DA
        gbc.setState(0xcb2c, 0xbb12, 0x4d00, 0x462f, 0x3957, 0x2b63, 0x0, 0x1);
        gbc.writeMem(0xcb2c, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbb12, gbc.sp());
        EXPECT(0xcb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb2c));
        EXPECT(0x8, gbc.readMem(0xcb2d));
        // CB 08 03DB
        gbc.setState(0x7c9b, 0x264a, 0xae20, 0x73bc, 0x66bf, 0x4ce0, 0x0, 0x0);
        gbc.writeMem(0x7c9b, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x264a, gbc.sp());
        EXPECT(0x7c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 08 03DC
        gbc.setState(0xd752, 0xfa1, 0xbf10, 0x2dde, 0xc3ce, 0x70e1, 0x1, 0x1);
        gbc.writeMem(0xd752, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfa1, gbc.sp());
        EXPECT(0xd754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd752));
        EXPECT(0x8, gbc.readMem(0xd753));
        // CB 08 03DD
        gbc.setState(0x7a47, 0xcffd, 0x37e0, 0xea67, 0x5dc4, 0xcff5, 0x1, 0x1);
        gbc.writeMem(0x7a47, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcffd, gbc.sp());
        EXPECT(0x7a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03DF
        gbc.setState(0x6f66, 0xf9f9, 0xa1a0, 0x5203, 0xc44, 0xf6f8, 0x0, 0x0);
        gbc.writeMem(0x6f66, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf9f9, gbc.sp());
        EXPECT(0x6f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03E0
        gbc.setState(0x4987, 0xe404, 0xd0, 0xae15, 0x13a0, 0x1535, 0x1, 0x1);
        gbc.writeMem(0x4987, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe404, gbc.sp());
        EXPECT(0x4989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 08 03E1
        gbc.setState(0xdc82, 0xb97f, 0x2f90, 0xacc9, 0xb2d3, 0x339f, 0x0, 0x0);
        gbc.writeMem(0xdc82, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb97f, gbc.sp());
        EXPECT(0xdc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc82));
        EXPECT(0x8, gbc.readMem(0xdc83));
        // CB 08 03E2
        gbc.setState(0xb031, 0x59c3, 0x7820, 0x2aa8, 0x2547, 0xea76, 0x1, 0x1);
        gbc.writeMem(0xb031, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x59c3, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb031));
        EXPECT(0x8, gbc.readMem(0xb032));
        // CB 08 03E3
        gbc.setState(0xaf80, 0x93b4, 0x1410, 0x5779, 0x76ec, 0x79b, 0x1, 0x0);
        gbc.writeMem(0xaf80, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x93b4, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf80));
        EXPECT(0x8, gbc.readMem(0xaf81));
        // CB 08 03E4
        gbc.setState(0xa2d0, 0x509, 0xb450, 0x3582, 0xcc11, 0x43d6, 0x0, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x509, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2d0));
        EXPECT(0x8, gbc.readMem(0xa2d1));
        // CB 08 03E5
        gbc.setState(0xbe13, 0xd440, 0x3d00, 0xe4f7, 0xd003, 0x4350, 0x0, 0x1);
        gbc.writeMem(0xbe13, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd440, gbc.sp());
        EXPECT(0xbe15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe13));
        EXPECT(0x8, gbc.readMem(0xbe14));
        // CB 08 03E6
        gbc.setState(0xc531, 0x1222, 0xd2a0, 0xb942, 0x4b38, 0x8c0b, 0x0, 0x1);
        gbc.writeMem(0xc531, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1222, gbc.sp());
        EXPECT(0xc533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc531));
        EXPECT(0x8, gbc.readMem(0xc532));
        // CB 08 03E7
        gbc.setState(0xe708, 0x4bcf, 0x1c00, 0x1285, 0xfa08, 0x40a6, 0x1, 0x0);
        gbc.writeMem(0xe708, { 0xcb, 0x8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4bcf, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe708));
        EXPECT(0x8, gbc.readMem(0xe709));
    }
