    TEST(gbcemu, opcode_cb_44) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 44 0000
        gbc.setState(0xcc4e, 0x1c53, 0x69a0, 0x3d3b, 0xad27, 0x8137, 0x0, 0x0);
        gbc.writeMem(0xcc4e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1c53);
        EXPECT(gbc.pc(), 0xcc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4e), 0xcb);
        EXPECT(gbc.readMem(0xcc4f), 0x44);
        // CB 44 0001
        gbc.setState(0x4265, 0xd38e, 0xa8e0, 0x7ca5, 0x4b3, 0xec8, 0x0, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd38e);
        EXPECT(gbc.pc(), 0x4267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0002
        gbc.setState(0x2e7b, 0xb4df, 0xc7d0, 0xb0e0, 0xc23a, 0xa823, 0x1, 0x1);
        gbc.writeMem(0x2e7b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb4df);
        EXPECT(gbc.pc(), 0x2e7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0003
        gbc.setState(0x93c6, 0x5a65, 0x2a60, 0xba0c, 0x79af, 0x7bff, 0x0, 0x0);
        gbc.writeMem(0x93c6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5a65);
        EXPECT(gbc.pc(), 0x93c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c6), 0xcb);
        EXPECT(gbc.readMem(0x93c7), 0x44);
        // CB 44 0004
        gbc.setState(0x7899, 0xc0d1, 0x3c10, 0x9562, 0xfa9d, 0x2e86, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0x789b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0005
        gbc.setState(0xe625, 0x6510, 0xb320, 0x9df1, 0xd5f5, 0x3ef6, 0x1, 0x1);
        gbc.writeMem(0xe625, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x6510);
        EXPECT(gbc.pc(), 0xe627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe625), 0xcb);
        EXPECT(gbc.readMem(0xe626), 0x44);
        // CB 44 0006
        gbc.setState(0x76ee, 0xb5a4, 0x17a0, 0xa9a2, 0xaefd, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb5a4);
        EXPECT(gbc.pc(), 0x76f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0007
        gbc.setState(0xd0d9, 0xac10, 0xbaa0, 0x9f70, 0x3f89, 0xff22, 0x0, 0x1);
        gbc.writeMem(0xd0d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xac10);
        EXPECT(gbc.pc(), 0xd0db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0d9), 0xcb);
        EXPECT(gbc.readMem(0xd0da), 0x44);
        // CB 44 0008
        gbc.setState(0x86dc, 0xbf58, 0xbf40, 0xcd1e, 0x6540, 0x21f5, 0x1, 0x0);
        gbc.writeMem(0x86dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbf58);
        EXPECT(gbc.pc(), 0x86de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86dc), 0xcb);
        EXPECT(gbc.readMem(0x86dd), 0x44);
        // CB 44 0009
        gbc.setState(0x7c54, 0x381b, 0xff20, 0xadce, 0xb6b, 0x358d, 0x0, 0x0);
        gbc.writeMem(0x7c54, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x381b);
        EXPECT(gbc.pc(), 0x7c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 000A
        gbc.setState(0xccd8, 0x1a90, 0xab10, 0xd859, 0x7d7d, 0xd9d9, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1a90);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd8), 0xcb);
        EXPECT(gbc.readMem(0xccd9), 0x44);
        // CB 44 000B
        gbc.setState(0x4384, 0x5550, 0x7780, 0x335b, 0x111b, 0x3758, 0x1, 0x1);
        gbc.writeMem(0x4384, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5550);
        EXPECT(gbc.pc(), 0x4386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 000C
        gbc.setState(0x2260, 0x6874, 0x1c50, 0x9531, 0xa815, 0x9628, 0x0, 0x0);
        gbc.writeMem(0x2260, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6874);
        EXPECT(gbc.pc(), 0x2262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 000D
        gbc.setState(0x9a44, 0x9afe, 0xebb0, 0x75a, 0x14b8, 0xb986, 0x0, 0x0);
        gbc.writeMem(0x9a44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9afe);
        EXPECT(gbc.pc(), 0x9a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a44), 0xcb);
        EXPECT(gbc.readMem(0x9a45), 0x44);
        // CB 44 000E
        gbc.setState(0x770b, 0xa815, 0xfce0, 0x4243, 0x7fce, 0x907e, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa815);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 000F
        gbc.setState(0x4415, 0xce9f, 0xb360, 0xd616, 0x95b7, 0x35a, 0x1, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xce9f);
        EXPECT(gbc.pc(), 0x4417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0010
        gbc.setState(0xb99e, 0x80ed, 0x3270, 0xbec5, 0x95e, 0x31c4, 0x0, 0x0);
        gbc.writeMem(0xb99e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x80ed);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb99e), 0xcb);
        EXPECT(gbc.readMem(0xb99f), 0x44);
        // CB 44 0011
        gbc.setState(0xdb35, 0xd2c1, 0xd890, 0xd74d, 0x78ec, 0xd2a, 0x0, 0x1);
        gbc.writeMem(0xdb35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd2c1);
        EXPECT(gbc.pc(), 0xdb37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb35), 0xcb);
        EXPECT(gbc.readMem(0xdb36), 0x44);
        // CB 44 0012
        gbc.setState(0xc0a0, 0xdd92, 0xc4a0, 0xbbb1, 0x440, 0x2b1d, 0x0, 0x1);
        gbc.writeMem(0xc0a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdd92);
        EXPECT(gbc.pc(), 0xc0a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a0), 0xcb);
        EXPECT(gbc.readMem(0xc0a1), 0x44);
        // CB 44 0013
        gbc.setState(0xcedf, 0x2487, 0xcef0, 0xf49f, 0x4c44, 0xee9c, 0x1, 0x1);
        gbc.writeMem(0xcedf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2487);
        EXPECT(gbc.pc(), 0xcee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcedf), 0xcb);
        EXPECT(gbc.readMem(0xcee0), 0x44);
        // CB 44 0014
        gbc.setState(0x8e01, 0x1045, 0x8b70, 0xb07d, 0xd1b4, 0x64ad, 0x0, 0x1);
        gbc.writeMem(0x8e01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1045);
        EXPECT(gbc.pc(), 0x8e03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e01), 0xcb);
        EXPECT(gbc.readMem(0x8e02), 0x44);
        // CB 44 0015
        gbc.setState(0xe270, 0x2a0c, 0x6c80, 0x9cd3, 0x4c71, 0x696b, 0x0, 0x0);
        gbc.writeMem(0xe270, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2a0c);
        EXPECT(gbc.pc(), 0xe272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe270), 0xcb);
        EXPECT(gbc.readMem(0xe271), 0x44);
        // CB 44 0016
        gbc.setState(0x75de, 0x3972, 0xa070, 0x2db4, 0x244b, 0x452b, 0x1, 0x1);
        gbc.writeMem(0x75de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3972);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0017
        gbc.setState(0x8cd1, 0xd1bf, 0x3ae0, 0x7e24, 0x25fa, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x8cd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd1bf);
        EXPECT(gbc.pc(), 0x8cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd1), 0xcb);
        EXPECT(gbc.readMem(0x8cd2), 0x44);
        // CB 44 0018
        gbc.setState(0xd9ce, 0x4811, 0xd050, 0xf863, 0x39f, 0x276f, 0x1, 0x0);
        gbc.writeMem(0xd9ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x4811);
        EXPECT(gbc.pc(), 0xd9d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9ce), 0xcb);
        EXPECT(gbc.readMem(0xd9cf), 0x44);
        // CB 44 0019
        gbc.setState(0x6972, 0x47f5, 0x3100, 0x2690, 0x4404, 0x6100, 0x1, 0x1);
        gbc.writeMem(0x6972, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x47f5);
        EXPECT(gbc.pc(), 0x6974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 001A
        gbc.setState(0x4cb3, 0x287a, 0xa90, 0x243f, 0xdc39, 0x2ae2, 0x1, 0x1);
        gbc.writeMem(0x4cb3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x287a);
        EXPECT(gbc.pc(), 0x4cb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 001C
        gbc.setState(0xaf69, 0xd66c, 0x8690, 0xc37f, 0x4560, 0xb8cf, 0x1, 0x1);
        gbc.writeMem(0xaf69, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd66c);
        EXPECT(gbc.pc(), 0xaf6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf69), 0xcb);
        EXPECT(gbc.readMem(0xaf6a), 0x44);
        // CB 44 001D
        gbc.setState(0x3293, 0xef07, 0x12b0, 0xf7c2, 0x9195, 0x329a, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xef07);
        EXPECT(gbc.pc(), 0x3295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 001E
        gbc.setState(0xb7cc, 0xed33, 0x30f0, 0xf935, 0xdc04, 0x20f6, 0x1, 0x0);
        gbc.writeMem(0xb7cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xed33);
        EXPECT(gbc.pc(), 0xb7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cc), 0xcb);
        EXPECT(gbc.readMem(0xb7cd), 0x44);
        // CB 44 0020
        gbc.setState(0x888f, 0x27ff, 0xf120, 0xfc66, 0x6a21, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0x888f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x27ff);
        EXPECT(gbc.pc(), 0x8891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888f), 0xcb);
        EXPECT(gbc.readMem(0x8890), 0x44);
        // CB 44 0021
        gbc.setState(0xb262, 0x3dec, 0xbb70, 0xfaac, 0x9918, 0xf93, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3dec);
        EXPECT(gbc.pc(), 0xb264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb262), 0xcb);
        EXPECT(gbc.readMem(0xb263), 0x44);
        // CB 44 0022
        gbc.setState(0xaff, 0xeda3, 0x81e0, 0x56ac, 0xb871, 0x7c08, 0x0, 0x0);
        gbc.writeMem(0xaff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeda3);
        EXPECT(gbc.pc(), 0xb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0023
        gbc.setState(0x4e29, 0xd088, 0xe160, 0x1e08, 0xd910, 0x933f, 0x1, 0x0);
        gbc.writeMem(0x4e29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x4e2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0024
        gbc.setState(0xa9b6, 0x262e, 0x4520, 0xad30, 0x4943, 0xe93, 0x1, 0x1);
        gbc.writeMem(0xa9b6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x262e);
        EXPECT(gbc.pc(), 0xa9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b6), 0xcb);
        EXPECT(gbc.readMem(0xa9b7), 0x44);
        // CB 44 0025
        gbc.setState(0xcd96, 0x595f, 0x9710, 0xec49, 0xde64, 0xc87b, 0x0, 0x1);
        gbc.writeMem(0xcd96, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x595f);
        EXPECT(gbc.pc(), 0xcd98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd96), 0xcb);
        EXPECT(gbc.readMem(0xcd97), 0x44);
        // CB 44 0026
        gbc.setState(0xec86, 0x4591, 0x52e0, 0x4399, 0xd81f, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4591);
        EXPECT(gbc.pc(), 0xec88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec86), 0xcb);
        EXPECT(gbc.readMem(0xec87), 0x44);
        // CB 44 0027
        gbc.setState(0xbcdc, 0xd1c6, 0x66a0, 0x8190, 0x4b3e, 0x3688, 0x0, 0x0);
        gbc.writeMem(0xbcdc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd1c6);
        EXPECT(gbc.pc(), 0xbcde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcdc), 0xcb);
        EXPECT(gbc.readMem(0xbcdd), 0x44);
        // CB 44 0028
        gbc.setState(0x15a9, 0xf40, 0x1a0, 0x31b4, 0x533b, 0x1a32, 0x1, 0x0);
        gbc.writeMem(0x15a9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf40);
        EXPECT(gbc.pc(), 0x15ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0029
        gbc.setState(0xc064, 0x91a9, 0x6800, 0xab38, 0x833f, 0x6940, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x91a9);
        EXPECT(gbc.pc(), 0xc066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc064), 0xcb);
        EXPECT(gbc.readMem(0xc065), 0x44);
        // CB 44 002B
        gbc.setState(0x2748, 0xd86d, 0xd590, 0x5184, 0x477, 0xc66a, 0x0, 0x0);
        gbc.writeMem(0x2748, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd86d);
        EXPECT(gbc.pc(), 0x274a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 002C
        gbc.setState(0x5b2b, 0x22af, 0x7f0, 0xa6ae, 0xdc9a, 0x596c, 0x1, 0x1);
        gbc.writeMem(0x5b2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x22af);
        EXPECT(gbc.pc(), 0x5b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 002D
        gbc.setState(0x9f28, 0xa73a, 0x6440, 0xe70e, 0xfc6e, 0x1d69, 0x0, 0x0);
        gbc.writeMem(0x9f28, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa73a);
        EXPECT(gbc.pc(), 0x9f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f28), 0xcb);
        EXPECT(gbc.readMem(0x9f29), 0x44);
        // CB 44 002E
        gbc.setState(0x4353, 0xa643, 0xbff0, 0x3c91, 0x4286, 0x2250, 0x0, 0x1);
        gbc.writeMem(0x4353, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0x4355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 002F
        gbc.setState(0x4c2a, 0x30ee, 0x66b0, 0xcf26, 0x3ca3, 0xbb78, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x30ee);
        EXPECT(gbc.pc(), 0x4c2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0030
        gbc.setState(0x1618, 0x760, 0xf890, 0xfdc6, 0x8bcf, 0xcfc1, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x760);
        EXPECT(gbc.pc(), 0x161a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0031
        gbc.setState(0xbb52, 0x2db8, 0x2560, 0x34a7, 0xea4e, 0x220a, 0x0, 0x0);
        gbc.writeMem(0xbb52, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2db8);
        EXPECT(gbc.pc(), 0xbb54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb52), 0xcb);
        EXPECT(gbc.readMem(0xbb53), 0x44);
        // CB 44 0032
        gbc.setState(0x38e, 0x6182, 0xa730, 0xbddf, 0xcd8d, 0xaf1f, 0x1, 0x1);
        gbc.writeMem(0x38e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6182);
        EXPECT(gbc.pc(), 0x390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0033
        gbc.setState(0x59f1, 0x9126, 0xad20, 0xcf1a, 0x9d92, 0xa653, 0x1, 0x1);
        gbc.writeMem(0x59f1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9126);
        EXPECT(gbc.pc(), 0x59f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0035
        gbc.setState(0x2ad2, 0xbb54, 0x5330, 0xf7fb, 0xaf6c, 0xf336, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbb54);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0036
        gbc.setState(0x5673, 0xb7ea, 0xcc50, 0x4a7e, 0x2ab2, 0xbf77, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb7ea);
        EXPECT(gbc.pc(), 0x5675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0037
        gbc.setState(0x27cf, 0x6434, 0x3300, 0x2f1d, 0x2c0, 0x1943, 0x1, 0x1);
        gbc.writeMem(0x27cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6434);
        EXPECT(gbc.pc(), 0x27d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0038
        gbc.setState(0x8c22, 0xbfc7, 0xdd50, 0x7e8d, 0x1b89, 0x882c, 0x1, 0x1);
        gbc.writeMem(0x8c22, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbfc7);
        EXPECT(gbc.pc(), 0x8c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c22), 0xcb);
        EXPECT(gbc.readMem(0x8c23), 0x44);
        // CB 44 0039
        gbc.setState(0x9bc5, 0xa44f, 0x5310, 0x3894, 0xc895, 0x872b, 0x0, 0x1);
        gbc.writeMem(0x9bc5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xa44f);
        EXPECT(gbc.pc(), 0x9bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc5), 0xcb);
        EXPECT(gbc.readMem(0x9bc6), 0x44);
        // CB 44 003A
        gbc.setState(0xc74, 0x553c, 0x3050, 0x9f2d, 0xb0a0, 0x653f, 0x1, 0x0);
        gbc.writeMem(0xc74, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x553c);
        EXPECT(gbc.pc(), 0xc76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 003B
        gbc.setState(0x5615, 0x810b, 0xb410, 0xaf3a, 0x43fa, 0x4f47, 0x1, 0x1);
        gbc.writeMem(0x5615, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x810b);
        EXPECT(gbc.pc(), 0x5617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 003C
        gbc.setState(0x5502, 0x50bb, 0x2cf0, 0xdfd4, 0x4c03, 0xb87d, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x50bb);
        EXPECT(gbc.pc(), 0x5504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 003D
        gbc.setState(0x44e, 0x329f, 0xfb10, 0xd802, 0xee66, 0x9f45, 0x1, 0x1);
        gbc.writeMem(0x44e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x329f);
        EXPECT(gbc.pc(), 0x450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 003E
        gbc.setState(0x8cbc, 0xbe8d, 0x1ec0, 0x2645, 0x82db, 0x2ffb, 0x0, 0x0);
        gbc.writeMem(0x8cbc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbe8d);
        EXPECT(gbc.pc(), 0x8cbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cbc), 0xcb);
        EXPECT(gbc.readMem(0x8cbd), 0x44);
        // CB 44 003F
        gbc.setState(0xd6e0, 0xce55, 0x8bb0, 0x9ce5, 0xe5a6, 0x7e1f, 0x1, 0x1);
        gbc.writeMem(0xd6e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xce55);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e0), 0xcb);
        EXPECT(gbc.readMem(0xd6e1), 0x44);
        // CB 44 0040
        gbc.setState(0x2e0, 0xea5f, 0x5c40, 0x8e06, 0x657e, 0x5c0c, 0x1, 0x0);
        gbc.writeMem(0x2e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xea5f);
        EXPECT(gbc.pc(), 0x2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0041
        gbc.setState(0x6180, 0xe723, 0x2960, 0xf958, 0x58d6, 0x89bb, 0x0, 0x1);
        gbc.writeMem(0x6180, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe723);
        EXPECT(gbc.pc(), 0x6182);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0042
        gbc.setState(0xbde0, 0xefa0, 0x2000, 0xfe24, 0x8dc8, 0xa6d, 0x1, 0x0);
        gbc.writeMem(0xbde0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xefa0);
        EXPECT(gbc.pc(), 0xbde2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbde0), 0xcb);
        EXPECT(gbc.readMem(0xbde1), 0x44);
        // CB 44 0043
        gbc.setState(0x455b, 0xe2f5, 0xfa20, 0x5ae8, 0xf16b, 0x2338, 0x1, 0x1);
        gbc.writeMem(0x455b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe2f5);
        EXPECT(gbc.pc(), 0x455d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0044
        gbc.setState(0xc76b, 0x9afa, 0xde40, 0xd603, 0x1a22, 0xbb87, 0x0, 0x1);
        gbc.writeMem(0xc76b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9afa);
        EXPECT(gbc.pc(), 0xc76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76b), 0xcb);
        EXPECT(gbc.readMem(0xc76c), 0x44);
        // CB 44 0045
        gbc.setState(0xeef, 0xc9a9, 0x2610, 0x8c07, 0x36dc, 0xba7, 0x1, 0x0);
        gbc.writeMem(0xeef, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0xef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0046
        gbc.setState(0xb7fc, 0x5b8b, 0xdc60, 0x8eea, 0x4655, 0x6dc1, 0x0, 0x1);
        gbc.writeMem(0xb7fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5b8b);
        EXPECT(gbc.pc(), 0xb7fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fc), 0xcb);
        EXPECT(gbc.readMem(0xb7fd), 0x44);
        // CB 44 0047
        gbc.setState(0x5acc, 0xc1e8, 0xc990, 0x227d, 0xd3b4, 0xc46f, 0x1, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc1e8);
        EXPECT(gbc.pc(), 0x5ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0048
        gbc.setState(0xce55, 0xc405, 0x3c90, 0xb6a4, 0x6b70, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0xce55, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc405);
        EXPECT(gbc.pc(), 0xce57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce55), 0xcb);
        EXPECT(gbc.readMem(0xce56), 0x44);
        // CB 44 0049
        gbc.setState(0x212f, 0x57fc, 0x1ae0, 0xca53, 0xf26e, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0x212f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x57fc);
        EXPECT(gbc.pc(), 0x2131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 004A
        gbc.setState(0x16c9, 0xa6ed, 0x9a20, 0x9325, 0x3504, 0xf486, 0x0, 0x1);
        gbc.writeMem(0x16c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa6ed);
        EXPECT(gbc.pc(), 0x16cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 004B
        gbc.setState(0x54dc, 0xb9f1, 0xca80, 0xc246, 0x33cd, 0xb11a, 0x1, 0x1);
        gbc.writeMem(0x54dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb9f1);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 004C
        gbc.setState(0x24b7, 0xd69d, 0x7480, 0x37cb, 0xcea6, 0xf510, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd69d);
        EXPECT(gbc.pc(), 0x24b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 004D
        gbc.setState(0xb65a, 0x87ca, 0x7960, 0xcbdd, 0xb0f9, 0xdc0d, 0x1, 0x0);
        gbc.writeMem(0xb65a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x87ca);
        EXPECT(gbc.pc(), 0xb65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb65a), 0xcb);
        EXPECT(gbc.readMem(0xb65b), 0x44);
        // CB 44 004E
        gbc.setState(0xd198, 0xb56a, 0xf650, 0x3a52, 0x9bf7, 0xc7ca, 0x0, 0x1);
        gbc.writeMem(0xd198, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb56a);
        EXPECT(gbc.pc(), 0xd19a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd198), 0xcb);
        EXPECT(gbc.readMem(0xd199), 0x44);
        // CB 44 004F
        gbc.setState(0xa6b, 0x82be, 0xc250, 0x6941, 0xfc18, 0x9b1, 0x0, 0x0);
        gbc.writeMem(0xa6b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x82be);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0050
        gbc.setState(0x97ad, 0x39b6, 0x2b30, 0xddd2, 0x8ba8, 0xf1ed, 0x1, 0x1);
        gbc.writeMem(0x97ad, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x39b6);
        EXPECT(gbc.pc(), 0x97af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ad), 0xcb);
        EXPECT(gbc.readMem(0x97ae), 0x44);
        // CB 44 0051
        gbc.setState(0x5a7d, 0xe368, 0x2ac0, 0x9ed3, 0xb59, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0x5a7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe368);
        EXPECT(gbc.pc(), 0x5a7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0052
        gbc.setState(0xdac3, 0x1054, 0xa320, 0xefc6, 0x2bc8, 0xde7c, 0x0, 0x1);
        gbc.writeMem(0xdac3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1054);
        EXPECT(gbc.pc(), 0xdac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac3), 0xcb);
        EXPECT(gbc.readMem(0xdac4), 0x44);
        // CB 44 0053
        gbc.setState(0xce44, 0x37eb, 0x9a70, 0x511a, 0xc1c5, 0xe93d, 0x0, 0x0);
        gbc.writeMem(0xce44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x37eb);
        EXPECT(gbc.pc(), 0xce46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce44), 0xcb);
        EXPECT(gbc.readMem(0xce45), 0x44);
        // CB 44 0054
        gbc.setState(0x45bf, 0xa6b6, 0xc500, 0x272c, 0x6a02, 0xc9e7, 0x0, 0x0);
        gbc.writeMem(0x45bf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa6b6);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0055
        gbc.setState(0xe4cc, 0x2ec4, 0x8b10, 0xdf2b, 0x5043, 0x3a0b, 0x1, 0x1);
        gbc.writeMem(0xe4cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2ec4);
        EXPECT(gbc.pc(), 0xe4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4cc), 0xcb);
        EXPECT(gbc.readMem(0xe4cd), 0x44);
        // CB 44 0056
        gbc.setState(0x39ad, 0x54e5, 0xcfb0, 0x5be4, 0x6e23, 0xaf66, 0x0, 0x1);
        gbc.writeMem(0x39ad, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x54e5);
        EXPECT(gbc.pc(), 0x39af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0057
        gbc.setState(0xeb75, 0x29af, 0x8a50, 0x8bfb, 0x2300, 0xe71, 0x1, 0x1);
        gbc.writeMem(0xeb75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x29af);
        EXPECT(gbc.pc(), 0xeb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb75), 0xcb);
        EXPECT(gbc.readMem(0xeb76), 0x44);
        // CB 44 0058
        gbc.setState(0x2c22, 0xe8ac, 0x6c80, 0xc4d0, 0xbacf, 0xb9b8, 0x0, 0x0);
        gbc.writeMem(0x2c22, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe8ac);
        EXPECT(gbc.pc(), 0x2c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0059
        gbc.setState(0x5fa1, 0xe8eb, 0x6750, 0xf98f, 0x919e, 0xfc46, 0x0, 0x0);
        gbc.writeMem(0x5fa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe8eb);
        EXPECT(gbc.pc(), 0x5fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 005A
        gbc.setState(0xccc4, 0xbb32, 0xa9f0, 0xa41, 0x32ce, 0xcd2c, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbb32);
        EXPECT(gbc.pc(), 0xccc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc4), 0xcb);
        EXPECT(gbc.readMem(0xccc5), 0x44);
        // CB 44 005B
        gbc.setState(0x8c23, 0xe443, 0xe560, 0x8f87, 0x7faa, 0xa8cb, 0x0, 0x1);
        gbc.writeMem(0x8c23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe443);
        EXPECT(gbc.pc(), 0x8c25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c23), 0xcb);
        EXPECT(gbc.readMem(0x8c24), 0x44);
        // CB 44 005C
        gbc.setState(0x2cdf, 0xc62, 0x3880, 0x1962, 0xf77d, 0xc973, 0x0, 0x1);
        gbc.writeMem(0x2cdf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc62);
        EXPECT(gbc.pc(), 0x2ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 005D
        gbc.setState(0xaae0, 0xa3aa, 0x2890, 0x208d, 0x1079, 0xddb2, 0x0, 0x0);
        gbc.writeMem(0xaae0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa3aa);
        EXPECT(gbc.pc(), 0xaae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae0), 0xcb);
        EXPECT(gbc.readMem(0xaae1), 0x44);
        // CB 44 005E
        gbc.setState(0xbfa7, 0xf7b3, 0xce10, 0x8e3f, 0xd500, 0xe971, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf7b3);
        EXPECT(gbc.pc(), 0xbfa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa7), 0xcb);
        EXPECT(gbc.readMem(0xbfa8), 0x44);
        // CB 44 005F
        gbc.setState(0xe6df, 0xd54d, 0x91c0, 0xadb, 0x318d, 0x5f52, 0x1, 0x1);
        gbc.writeMem(0xe6df, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0xe6e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6df), 0xcb);
        EXPECT(gbc.readMem(0xe6e0), 0x44);
        // CB 44 0060
        gbc.setState(0xde8e, 0x108f, 0x1790, 0x9f7b, 0x2583, 0x6be5, 0x1, 0x1);
        gbc.writeMem(0xde8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x108f);
        EXPECT(gbc.pc(), 0xde90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8e), 0xcb);
        EXPECT(gbc.readMem(0xde8f), 0x44);
        // CB 44 0061
        gbc.setState(0xe70a, 0x90ac, 0x47e0, 0x6b5c, 0x583c, 0x725e, 0x0, 0x1);
        gbc.writeMem(0xe70a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x90ac);
        EXPECT(gbc.pc(), 0xe70c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70a), 0xcb);
        EXPECT(gbc.readMem(0xe70b), 0x44);
        // CB 44 0062
        gbc.setState(0x3ac8, 0x8bff, 0x9ad0, 0xe849, 0x32cf, 0x57ed, 0x1, 0x0);
        gbc.writeMem(0x3ac8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8bff);
        EXPECT(gbc.pc(), 0x3aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0063
        gbc.setState(0xd2e2, 0x7b43, 0x9160, 0xc394, 0x178, 0xd23b, 0x0, 0x1);
        gbc.writeMem(0xd2e2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7b43);
        EXPECT(gbc.pc(), 0xd2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e2), 0xcb);
        EXPECT(gbc.readMem(0xd2e3), 0x44);
        // CB 44 0065
        gbc.setState(0xee2, 0x4609, 0x23d0, 0x540b, 0x8631, 0x1d75, 0x0, 0x0);
        gbc.writeMem(0xee2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4609);
        EXPECT(gbc.pc(), 0xee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0066
        gbc.setState(0x59dc, 0xa379, 0xcbc0, 0x4e17, 0x44fd, 0x70af, 0x0, 0x1);
        gbc.writeMem(0x59dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa379);
        EXPECT(gbc.pc(), 0x59de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0067
        gbc.setState(0xe66e, 0x5e13, 0x68d0, 0xd12c, 0x649c, 0x6c94, 0x0, 0x0);
        gbc.writeMem(0xe66e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5e13);
        EXPECT(gbc.pc(), 0xe670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66e), 0xcb);
        EXPECT(gbc.readMem(0xe66f), 0x44);
        // CB 44 0068
        gbc.setState(0x1817, 0xba29, 0x57b0, 0x7015, 0xa4e5, 0xe930, 0x0, 0x1);
        gbc.writeMem(0x1817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xba29);
        EXPECT(gbc.pc(), 0x1819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0069
        gbc.setState(0x763b, 0x9e17, 0xb840, 0xe083, 0x69a2, 0x2bbd, 0x1, 0x1);
        gbc.writeMem(0x763b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9e17);
        EXPECT(gbc.pc(), 0x763d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 006A
        gbc.setState(0xbc1a, 0xbf9f, 0x1d40, 0xfd2a, 0x4360, 0x7db4, 0x0, 0x0);
        gbc.writeMem(0xbc1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0xbc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc1a), 0xcb);
        EXPECT(gbc.readMem(0xbc1b), 0x44);
        // CB 44 006B
        gbc.setState(0x17b0, 0x9ffd, 0x7640, 0x6c6c, 0xfabb, 0xd1dc, 0x0, 0x1);
        gbc.writeMem(0x17b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9ffd);
        EXPECT(gbc.pc(), 0x17b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 006C
        gbc.setState(0x29f, 0xf2c2, 0xa8c0, 0x3569, 0x8e21, 0x57ab, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf2c2);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 006D
        gbc.setState(0x83f7, 0x1027, 0xe50, 0xa692, 0xccb9, 0xdcf7, 0x1, 0x1);
        gbc.writeMem(0x83f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1027);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f7), 0xcb);
        EXPECT(gbc.readMem(0x83f8), 0x44);
        // CB 44 006E
        gbc.setState(0xb11a, 0xdda5, 0x5250, 0x9e60, 0xdf29, 0x3953, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdda5);
        EXPECT(gbc.pc(), 0xb11c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11a), 0xcb);
        EXPECT(gbc.readMem(0xb11b), 0x44);
        // CB 44 006F
        gbc.setState(0x2c68, 0xda3a, 0xa680, 0x2b6, 0x1375, 0x84a5, 0x0, 0x0);
        gbc.writeMem(0x2c68, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xda3a);
        EXPECT(gbc.pc(), 0x2c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0070
        gbc.setState(0x252c, 0xa422, 0xf340, 0x6c7a, 0xf59d, 0x8124, 0x0, 0x0);
        gbc.writeMem(0x252c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa422);
        EXPECT(gbc.pc(), 0x252e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0071
        gbc.setState(0xbb97, 0x7d40, 0x22a0, 0x5ad8, 0xe4e2, 0xd449, 0x1, 0x0);
        gbc.writeMem(0xbb97, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7d40);
        EXPECT(gbc.pc(), 0xbb99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb97), 0xcb);
        EXPECT(gbc.readMem(0xbb98), 0x44);
        // CB 44 0072
        gbc.setState(0xa247, 0x65e7, 0xe2d0, 0x8c82, 0xc894, 0x1814, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x65e7);
        EXPECT(gbc.pc(), 0xa249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa247), 0xcb);
        EXPECT(gbc.readMem(0xa248), 0x44);
        // CB 44 0073
        gbc.setState(0x4cb6, 0xfac5, 0x820, 0xdad5, 0x6629, 0x80dc, 0x1, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfac5);
        EXPECT(gbc.pc(), 0x4cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0074
        gbc.setState(0x4c6d, 0xb84d, 0x42d0, 0x5b53, 0xbef5, 0x7e19, 0x1, 0x0);
        gbc.writeMem(0x4c6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb84d);
        EXPECT(gbc.pc(), 0x4c6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0075
        gbc.setState(0x686b, 0x1afc, 0x85e0, 0x2bf0, 0xb59d, 0xb7e9, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1afc);
        EXPECT(gbc.pc(), 0x686d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0076
        gbc.setState(0xba30, 0xf1fb, 0x8800, 0x7c9f, 0x8721, 0xb98d, 0x1, 0x0);
        gbc.writeMem(0xba30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf1fb);
        EXPECT(gbc.pc(), 0xba32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba30), 0xcb);
        EXPECT(gbc.readMem(0xba31), 0x44);
        // CB 44 0077
        gbc.setState(0xc24c, 0xb8cf, 0xe830, 0xe81e, 0x8d3f, 0xaa9a, 0x1, 0x0);
        gbc.writeMem(0xc24c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb8cf);
        EXPECT(gbc.pc(), 0xc24e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc24c), 0xcb);
        EXPECT(gbc.readMem(0xc24d), 0x44);
        // CB 44 0078
        gbc.setState(0xce7e, 0x1538, 0xbc30, 0x10c2, 0xad1a, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0xce7e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1538);
        EXPECT(gbc.pc(), 0xce80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce7e), 0xcb);
        EXPECT(gbc.readMem(0xce7f), 0x44);
        // CB 44 0079
        gbc.setState(0xc50b, 0xb366, 0x5620, 0xb01d, 0x2774, 0x92b7, 0x1, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xb366);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50b), 0xcb);
        EXPECT(gbc.readMem(0xc50c), 0x44);
        // CB 44 007A
        gbc.setState(0xe63b, 0x6926, 0x9080, 0xf90a, 0xe17, 0x330b, 0x0, 0x0);
        gbc.writeMem(0xe63b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6926);
        EXPECT(gbc.pc(), 0xe63d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe63b), 0xcb);
        EXPECT(gbc.readMem(0xe63c), 0x44);
        // CB 44 007B
        gbc.setState(0x1ac2, 0xad73, 0x8090, 0x2a02, 0x9019, 0x8d66, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xad73);
        EXPECT(gbc.pc(), 0x1ac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 007C
        gbc.setState(0x68da, 0x85aa, 0x7170, 0x193c, 0x157b, 0x5d0f, 0x1, 0x1);
        gbc.writeMem(0x68da, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x85aa);
        EXPECT(gbc.pc(), 0x68dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 007E
        gbc.setState(0xa5f6, 0xf694, 0xcf10, 0xa149, 0x73b5, 0xd789, 0x0, 0x0);
        gbc.writeMem(0xa5f6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf694);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f6), 0xcb);
        EXPECT(gbc.readMem(0xa5f7), 0x44);
        // CB 44 007F
        gbc.setState(0x30c0, 0x9b58, 0xf7e0, 0x6a98, 0x4f0, 0xe031, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9b58);
        EXPECT(gbc.pc(), 0x30c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0080
        gbc.setState(0x4f01, 0x4e9d, 0x3530, 0x63a9, 0xdbbf, 0xdf00, 0x0, 0x1);
        gbc.writeMem(0x4f01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0x4f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0081
        gbc.setState(0x2f58, 0xc047, 0x9fe0, 0xe21, 0x2c09, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc047);
        EXPECT(gbc.pc(), 0x2f5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0082
        gbc.setState(0xc419, 0x9671, 0x23f0, 0x7523, 0xdfe2, 0x4163, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9671);
        EXPECT(gbc.pc(), 0xc41b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc419), 0xcb);
        EXPECT(gbc.readMem(0xc41a), 0x44);
        // CB 44 0083
        gbc.setState(0x60a8, 0xfd12, 0x8da0, 0xbac0, 0xeeb7, 0xab16, 0x1, 0x1);
        gbc.writeMem(0x60a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfd12);
        EXPECT(gbc.pc(), 0x60aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0084
        gbc.setState(0x28c2, 0x55f6, 0xdfd0, 0x52ef, 0x364b, 0xe9df, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x55f6);
        EXPECT(gbc.pc(), 0x28c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0085
        gbc.setState(0x8b41, 0xdf13, 0xd310, 0xda7c, 0x8e8e, 0x5ddb, 0x0, 0x1);
        gbc.writeMem(0x8b41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdf13);
        EXPECT(gbc.pc(), 0x8b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b41), 0xcb);
        EXPECT(gbc.readMem(0x8b42), 0x44);
        // CB 44 0086
        gbc.setState(0x3d0d, 0xce78, 0xa0c0, 0xa22, 0x31ec, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0x3d0d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xce78);
        EXPECT(gbc.pc(), 0x3d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0087
        gbc.setState(0x9f7c, 0xed50, 0x5260, 0x5725, 0x468f, 0x1aa4, 0x1, 0x0);
        gbc.writeMem(0x9f7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xed50);
        EXPECT(gbc.pc(), 0x9f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7c), 0xcb);
        EXPECT(gbc.readMem(0x9f7d), 0x44);
        // CB 44 0088
        gbc.setState(0xd26d, 0x1fad, 0x8e40, 0xf390, 0xec2b, 0x1700, 0x0, 0x0);
        gbc.writeMem(0xd26d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0xd26f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd26d), 0xcb);
        EXPECT(gbc.readMem(0xd26e), 0x44);
        // CB 44 0089
        gbc.setState(0xa1, 0x730, 0x3a30, 0x6ac, 0xfb6b, 0x2e4a, 0x0, 0x0);
        gbc.writeMem(0xa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x730);
        EXPECT(gbc.pc(), 0xa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 008A
        gbc.setState(0xbd4d, 0x4695, 0xdf40, 0xf009, 0x3040, 0x25d8, 0x1, 0x0);
        gbc.writeMem(0xbd4d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4695);
        EXPECT(gbc.pc(), 0xbd4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd4d), 0xcb);
        EXPECT(gbc.readMem(0xbd4e), 0x44);
        // CB 44 008B
        gbc.setState(0x23c4, 0x5abc, 0xe560, 0xb315, 0x2713, 0xcaac, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5abc);
        EXPECT(gbc.pc(), 0x23c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 008C
        gbc.setState(0xbf46, 0xca33, 0xd780, 0x1908, 0x3b29, 0x4cf5, 0x1, 0x0);
        gbc.writeMem(0xbf46, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xca33);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf46), 0xcb);
        EXPECT(gbc.readMem(0xbf47), 0x44);
        // CB 44 008D
        gbc.setState(0x591d, 0xa1a4, 0x1b00, 0x44f2, 0x458d, 0x5a15, 0x1, 0x0);
        gbc.writeMem(0x591d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xa1a4);
        EXPECT(gbc.pc(), 0x591f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 008E
        gbc.setState(0xd00e, 0x7e6a, 0xfa30, 0x7dc4, 0x7b0c, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7e6a);
        EXPECT(gbc.pc(), 0xd010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00e), 0xcb);
        EXPECT(gbc.readMem(0xd00f), 0x44);
        // CB 44 008F
        gbc.setState(0x78a2, 0xc217, 0x5e00, 0xf44d, 0x791f, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc217);
        EXPECT(gbc.pc(), 0x78a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0090
        gbc.setState(0xc9ff, 0x922b, 0x6b90, 0xf9ee, 0xeca9, 0x6b, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x922b);
        EXPECT(gbc.pc(), 0xca01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9ff), 0xcb);
        EXPECT(gbc.readMem(0xca00), 0x44);
        // CB 44 0091
        gbc.setState(0x1b67, 0x28d3, 0x78f0, 0x6f3, 0x573, 0x66fe, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x28d3);
        EXPECT(gbc.pc(), 0x1b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0092
        gbc.setState(0x2dc1, 0xcac3, 0x63c0, 0xa8a, 0x1133, 0xb7f7, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcac3);
        EXPECT(gbc.pc(), 0x2dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0093
        gbc.setState(0xc664, 0xf5a9, 0x6780, 0xa715, 0x7b1a, 0x3e57, 0x1, 0x0);
        gbc.writeMem(0xc664, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xf5a9);
        EXPECT(gbc.pc(), 0xc666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc664), 0xcb);
        EXPECT(gbc.readMem(0xc665), 0x44);
        // CB 44 0094
        gbc.setState(0x893e, 0xec69, 0xcb30, 0xad52, 0xe693, 0x3daf, 0x0, 0x0);
        gbc.writeMem(0x893e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xec69);
        EXPECT(gbc.pc(), 0x8940);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x893e), 0xcb);
        EXPECT(gbc.readMem(0x893f), 0x44);
        // CB 44 0095
        gbc.setState(0x3349, 0x6f0a, 0x1400, 0x4119, 0x8b2, 0x6950, 0x1, 0x0);
        gbc.writeMem(0x3349, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6f0a);
        EXPECT(gbc.pc(), 0x334b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0096
        gbc.setState(0x672, 0xc37c, 0x9bb0, 0xa8fa, 0xf496, 0xe83, 0x1, 0x0);
        gbc.writeMem(0x672, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc37c);
        EXPECT(gbc.pc(), 0x674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0097
        gbc.setState(0xdd01, 0x17f0, 0x6bd0, 0x15ff, 0x3714, 0x1b33, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x17f0);
        EXPECT(gbc.pc(), 0xdd03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd01), 0xcb);
        EXPECT(gbc.readMem(0xdd02), 0x44);
        // CB 44 0099
        gbc.setState(0xc568, 0xae02, 0xb990, 0xe791, 0xc9b9, 0xd03e, 0x1, 0x0);
        gbc.writeMem(0xc568, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xae02);
        EXPECT(gbc.pc(), 0xc56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc568), 0xcb);
        EXPECT(gbc.readMem(0xc569), 0x44);
        // CB 44 009A
        gbc.setState(0x7859, 0x3359, 0xc8b0, 0x61a2, 0xbd58, 0x1f6d, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3359);
        EXPECT(gbc.pc(), 0x785b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 009B
        gbc.setState(0xd1ce, 0xbc9b, 0xd940, 0x3526, 0x49e, 0xe89a, 0x1, 0x1);
        gbc.writeMem(0xd1ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbc9b);
        EXPECT(gbc.pc(), 0xd1d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ce), 0xcb);
        EXPECT(gbc.readMem(0xd1cf), 0x44);
        // CB 44 009C
        gbc.setState(0xbdde, 0x47c5, 0x5930, 0x1348, 0xc1f0, 0xd965, 0x0, 0x0);
        gbc.writeMem(0xbdde, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x47c5);
        EXPECT(gbc.pc(), 0xbde0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdde), 0xcb);
        EXPECT(gbc.readMem(0xbddf), 0x44);
        // CB 44 009D
        gbc.setState(0x5d88, 0x5241, 0x5d30, 0xd086, 0x224a, 0x9399, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5241);
        EXPECT(gbc.pc(), 0x5d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 009E
        gbc.setState(0xd4e9, 0x212c, 0xd330, 0x172b, 0x58ca, 0xf06a, 0x1, 0x0);
        gbc.writeMem(0xd4e9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0xd4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e9), 0xcb);
        EXPECT(gbc.readMem(0xd4ea), 0x44);
        // CB 44 009F
        gbc.setState(0xbd1c, 0x381b, 0x5670, 0x9336, 0x88db, 0xad84, 0x0, 0x0);
        gbc.writeMem(0xbd1c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x381b);
        EXPECT(gbc.pc(), 0xbd1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1c), 0xcb);
        EXPECT(gbc.readMem(0xbd1d), 0x44);
        // CB 44 00A0
        gbc.setState(0x4439, 0xc0a0, 0x310, 0x68af, 0xf3f2, 0x954d, 0x1, 0x1);
        gbc.writeMem(0x4439, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc0a0);
        EXPECT(gbc.pc(), 0x443b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00A2
        gbc.setState(0xbf73, 0xab76, 0xa2d0, 0x6ad8, 0xd09b, 0x566c, 0x1, 0x0);
        gbc.writeMem(0xbf73, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xab76);
        EXPECT(gbc.pc(), 0xbf75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf73), 0xcb);
        EXPECT(gbc.readMem(0xbf74), 0x44);
        // CB 44 00A3
        gbc.setState(0x3034, 0xcd23, 0x4d30, 0xab0b, 0x5a71, 0xe72c, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xcd23);
        EXPECT(gbc.pc(), 0x3036);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00A4
        gbc.setState(0xfb4, 0x2f3b, 0x4410, 0x7dfb, 0x3042, 0x399b, 0x0, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2f3b);
        EXPECT(gbc.pc(), 0xfb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00A5
        gbc.setState(0x4721, 0xc8e4, 0x8e0, 0x4f62, 0x92eb, 0x9798, 0x0, 0x1);
        gbc.writeMem(0x4721, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc8e4);
        EXPECT(gbc.pc(), 0x4723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00A6
        gbc.setState(0xe59f, 0x4b67, 0x7f70, 0x2254, 0xb25e, 0x9a72, 0x0, 0x0);
        gbc.writeMem(0xe59f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4b67);
        EXPECT(gbc.pc(), 0xe5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe59f), 0xcb);
        EXPECT(gbc.readMem(0xe5a0), 0x44);
        // CB 44 00A7
        gbc.setState(0x4de2, 0x485b, 0xdbe0, 0x19e9, 0xe737, 0xf448, 0x0, 0x1);
        gbc.writeMem(0x4de2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x485b);
        EXPECT(gbc.pc(), 0x4de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00A8
        gbc.setState(0x959a, 0xbcd, 0x3d30, 0xef7f, 0x6a58, 0x2e2c, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbcd);
        EXPECT(gbc.pc(), 0x959c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959a), 0xcb);
        EXPECT(gbc.readMem(0x959b), 0x44);
        // CB 44 00A9
        gbc.setState(0x73e, 0xc165, 0x1470, 0x813e, 0x824e, 0x3563, 0x1, 0x0);
        gbc.writeMem(0x73e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc165);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00AA
        gbc.setState(0x700c, 0xecb0, 0xba10, 0xbabc, 0x5859, 0x5a1d, 0x0, 0x1);
        gbc.writeMem(0x700c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xecb0);
        EXPECT(gbc.pc(), 0x700e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00AB
        gbc.setState(0x2b06, 0xd67c, 0x64e0, 0x4352, 0xa7de, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0x2b06, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd67c);
        EXPECT(gbc.pc(), 0x2b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00AC
        gbc.setState(0x95b0, 0x2b31, 0x2c40, 0xbabb, 0xb4a9, 0x27d7, 0x0, 0x0);
        gbc.writeMem(0x95b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0x95b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b0), 0xcb);
        EXPECT(gbc.readMem(0x95b1), 0x44);
        // CB 44 00AD
        gbc.setState(0x14ed, 0x4ef2, 0xf250, 0xe6e6, 0xba37, 0xbd08, 0x0, 0x0);
        gbc.writeMem(0x14ed, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x4ef2);
        EXPECT(gbc.pc(), 0x14ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00AE
        gbc.setState(0x519e, 0x7749, 0xfb80, 0x5fc, 0x1260, 0x3ab9, 0x0, 0x1);
        gbc.writeMem(0x519e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7749);
        EXPECT(gbc.pc(), 0x51a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00AF
        gbc.setState(0x72fa, 0x669, 0xb0a0, 0xde8c, 0x506c, 0x47f5, 0x0, 0x0);
        gbc.writeMem(0x72fa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x669);
        EXPECT(gbc.pc(), 0x72fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00B0
        gbc.setState(0x3202, 0x291e, 0x6fe0, 0xd70, 0x528d, 0x99eb, 0x0, 0x0);
        gbc.writeMem(0x3202, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x291e);
        EXPECT(gbc.pc(), 0x3204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00B1
        gbc.setState(0x3f08, 0x6316, 0x9690, 0x8637, 0x33ce, 0xe6d1, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6316);
        EXPECT(gbc.pc(), 0x3f0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00B2
        gbc.setState(0x2a3d, 0x6323, 0xcca0, 0xdc3e, 0x4f6c, 0xeed3, 0x0, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x6323);
        EXPECT(gbc.pc(), 0x2a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00B3
        gbc.setState(0x73e8, 0x204c, 0x3470, 0xe11d, 0xdc33, 0xc167, 0x0, 0x1);
        gbc.writeMem(0x73e8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x204c);
        EXPECT(gbc.pc(), 0x73ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00B4
        gbc.setState(0x3c16, 0xad8b, 0x7570, 0x1947, 0x9f1b, 0xeadf, 0x1, 0x1);
        gbc.writeMem(0x3c16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xad8b);
        EXPECT(gbc.pc(), 0x3c18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00B5
        gbc.setState(0x793f, 0x58d2, 0xbeb0, 0xbe6a, 0xcaed, 0xce17, 0x1, 0x0);
        gbc.writeMem(0x793f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x58d2);
        EXPECT(gbc.pc(), 0x7941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00B6
        gbc.setState(0x7f27, 0x4dad, 0x38d0, 0x25c6, 0x78e0, 0x7c2f, 0x0, 0x0);
        gbc.writeMem(0x7f27, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4dad);
        EXPECT(gbc.pc(), 0x7f29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00B7
        gbc.setState(0xd1b0, 0x3705, 0x9770, 0xcadf, 0x20ef, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3705);
        EXPECT(gbc.pc(), 0xd1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1b0), 0xcb);
        EXPECT(gbc.readMem(0xd1b1), 0x44);
        // CB 44 00B8
        gbc.setState(0xb9cf, 0xa990, 0xcb10, 0x5463, 0x6a37, 0x3e09, 0x0, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa990);
        EXPECT(gbc.pc(), 0xb9d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9cf), 0xcb);
        EXPECT(gbc.readMem(0xb9d0), 0x44);
        // CB 44 00B9
        gbc.setState(0x379c, 0xfd41, 0xbbf0, 0xa6fa, 0xc7e8, 0x4746, 0x1, 0x0);
        gbc.writeMem(0x379c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfd41);
        EXPECT(gbc.pc(), 0x379e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00BA
        gbc.setState(0x676a, 0xaf24, 0x6160, 0x640, 0xef11, 0x4d32, 0x0, 0x0);
        gbc.writeMem(0x676a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x676c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00BB
        gbc.setState(0xa6f7, 0x774, 0x3600, 0xa782, 0xa45b, 0xfc0c, 0x0, 0x0);
        gbc.writeMem(0xa6f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x774);
        EXPECT(gbc.pc(), 0xa6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f7), 0xcb);
        EXPECT(gbc.readMem(0xa6f8), 0x44);
        // CB 44 00BC
        gbc.setState(0x99ff, 0x70d1, 0x9f60, 0xadd4, 0x9e1f, 0xe9f4, 0x0, 0x1);
        gbc.writeMem(0x99ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x70d1);
        EXPECT(gbc.pc(), 0x9a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ff), 0xcb);
        EXPECT(gbc.readMem(0x9a00), 0x44);
        // CB 44 00BD
        gbc.setState(0x2f4, 0x1335, 0x8650, 0x3b63, 0xc067, 0x9f98, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1335);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00BE
        gbc.setState(0x355e, 0x20b0, 0xc340, 0x180e, 0xc1a0, 0x7764, 0x0, 0x0);
        gbc.writeMem(0x355e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x20b0);
        EXPECT(gbc.pc(), 0x3560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00BF
        gbc.setState(0x15db, 0x286d, 0xdf20, 0x5c84, 0x7aed, 0x50c7, 0x1, 0x1);
        gbc.writeMem(0x15db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x286d);
        EXPECT(gbc.pc(), 0x15dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00C0
        gbc.setState(0xb85, 0x687c, 0xc3e0, 0xa184, 0x1c93, 0x65db, 0x1, 0x0);
        gbc.writeMem(0xb85, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x687c);
        EXPECT(gbc.pc(), 0xb87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00C1
        gbc.setState(0x5735, 0xb688, 0x9a20, 0xc658, 0x26b3, 0x7d50, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb688);
        EXPECT(gbc.pc(), 0x5737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00C2
        gbc.setState(0xcc39, 0x8506, 0x90e0, 0xd04d, 0x191e, 0xd8ec, 0x1, 0x0);
        gbc.writeMem(0xcc39, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8506);
        EXPECT(gbc.pc(), 0xcc3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc39), 0xcb);
        EXPECT(gbc.readMem(0xcc3a), 0x44);
        // CB 44 00C3
        gbc.setState(0x6b38, 0x7f4d, 0xb780, 0xb936, 0x1fb2, 0x95d0, 0x1, 0x1);
        gbc.writeMem(0x6b38, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7f4d);
        EXPECT(gbc.pc(), 0x6b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00C4
        gbc.setState(0xea55, 0xa64e, 0xfe10, 0xda03, 0x3eeb, 0xf401, 0x0, 0x1);
        gbc.writeMem(0xea55, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa64e);
        EXPECT(gbc.pc(), 0xea57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea55), 0xcb);
        EXPECT(gbc.readMem(0xea56), 0x44);
        // CB 44 00C5
        gbc.setState(0x79ee, 0x9713, 0x9d90, 0x18f8, 0xb7ed, 0x9d62, 0x0, 0x1);
        gbc.writeMem(0x79ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9713);
        EXPECT(gbc.pc(), 0x79f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00C6
        gbc.setState(0x812a, 0xb244, 0x4c0, 0x9aa, 0xeb6a, 0x9fca, 0x1, 0x0);
        gbc.writeMem(0x812a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb244);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0x44);
        // CB 44 00C7
        gbc.setState(0x88d, 0x40ec, 0x3c30, 0x29fa, 0x3e35, 0x636a, 0x0, 0x0);
        gbc.writeMem(0x88d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x40ec);
        EXPECT(gbc.pc(), 0x88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00C8
        gbc.setState(0x73ba, 0x916c, 0x9cb0, 0xb3b4, 0xd4c1, 0x963e, 0x1, 0x0);
        gbc.writeMem(0x73ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x916c);
        EXPECT(gbc.pc(), 0x73bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00C9
        gbc.setState(0xe314, 0x8d5b, 0x3290, 0xf03d, 0x8fac, 0x7861, 0x1, 0x1);
        gbc.writeMem(0xe314, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8d5b);
        EXPECT(gbc.pc(), 0xe316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe314), 0xcb);
        EXPECT(gbc.readMem(0xe315), 0x44);
        // CB 44 00CA
        gbc.setState(0xd780, 0x6039, 0x80c0, 0x5393, 0xce48, 0xdbb0, 0x0, 0x1);
        gbc.writeMem(0xd780, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6039);
        EXPECT(gbc.pc(), 0xd782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd780), 0xcb);
        EXPECT(gbc.readMem(0xd781), 0x44);
        // CB 44 00CB
        gbc.setState(0xb372, 0xa524, 0x6b10, 0x5a0c, 0x9f7b, 0x716a, 0x1, 0x1);
        gbc.writeMem(0xb372, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa524);
        EXPECT(gbc.pc(), 0xb374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb372), 0xcb);
        EXPECT(gbc.readMem(0xb373), 0x44);
        // CB 44 00CD
        gbc.setState(0x84ba, 0xb334, 0x1b00, 0x15d, 0x60b4, 0x4676, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb334);
        EXPECT(gbc.pc(), 0x84bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ba), 0xcb);
        EXPECT(gbc.readMem(0x84bb), 0x44);
        // CB 44 00CE
        gbc.setState(0xdc4c, 0xb428, 0x6b40, 0x7f2, 0xee14, 0xc51d, 0x1, 0x0);
        gbc.writeMem(0xdc4c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb428);
        EXPECT(gbc.pc(), 0xdc4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4c), 0xcb);
        EXPECT(gbc.readMem(0xdc4d), 0x44);
        // CB 44 00CF
        gbc.setState(0xde29, 0x31e3, 0x5af0, 0x96ff, 0x63e3, 0x4d79, 0x0, 0x1);
        gbc.writeMem(0xde29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x31e3);
        EXPECT(gbc.pc(), 0xde2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde29), 0xcb);
        EXPECT(gbc.readMem(0xde2a), 0x44);
        // CB 44 00D0
        gbc.setState(0x3979, 0x59cd, 0xdff0, 0x8fd4, 0x41d7, 0x7eb4, 0x0, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x59cd);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00D1
        gbc.setState(0x8b2e, 0x470, 0xe70, 0xdd1f, 0x7d2b, 0x7fbb, 0x1, 0x0);
        gbc.writeMem(0x8b2e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x470);
        EXPECT(gbc.pc(), 0x8b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2e), 0xcb);
        EXPECT(gbc.readMem(0x8b2f), 0x44);
        // CB 44 00D2
        gbc.setState(0x41a8, 0xa42a, 0x12a0, 0xa760, 0xdfa1, 0xc948, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x41aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00D3
        gbc.setState(0xdf79, 0x9aa7, 0xa050, 0xca4d, 0x5310, 0xac21, 0x1, 0x0);
        gbc.writeMem(0xdf79, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9aa7);
        EXPECT(gbc.pc(), 0xdf7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf79), 0xcb);
        EXPECT(gbc.readMem(0xdf7a), 0x44);
        // CB 44 00D4
        gbc.setState(0x6932, 0x80ba, 0x7920, 0xf7f8, 0x2dcb, 0x893c, 0x1, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x80ba);
        EXPECT(gbc.pc(), 0x6934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00D5
        gbc.setState(0xd824, 0xbacb, 0x2f90, 0xd6db, 0xf24f, 0xaf58, 0x0, 0x1);
        gbc.writeMem(0xd824, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbacb);
        EXPECT(gbc.pc(), 0xd826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd824), 0xcb);
        EXPECT(gbc.readMem(0xd825), 0x44);
        // CB 44 00D6
        gbc.setState(0x86fa, 0x19b7, 0x2610, 0x102, 0xabb8, 0x7121, 0x0, 0x0);
        gbc.writeMem(0x86fa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x19b7);
        EXPECT(gbc.pc(), 0x86fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86fa), 0xcb);
        EXPECT(gbc.readMem(0x86fb), 0x44);
        // CB 44 00D7
        gbc.setState(0x6caf, 0x8929, 0xe110, 0x1a3, 0xc7b6, 0x7072, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8929);
        EXPECT(gbc.pc(), 0x6cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00D8
        gbc.setState(0x2297, 0xa42a, 0x4290, 0xa907, 0x6932, 0xcd96, 0x1, 0x0);
        gbc.writeMem(0x2297, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa42a);
        EXPECT(gbc.pc(), 0x2299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00D9
        gbc.setState(0xbfcf, 0x1e83, 0xbe40, 0x9077, 0xcc, 0x2bbb, 0x0, 0x1);
        gbc.writeMem(0xbfcf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1e83);
        EXPECT(gbc.pc(), 0xbfd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfcf), 0xcb);
        EXPECT(gbc.readMem(0xbfd0), 0x44);
        // CB 44 00DA
        gbc.setState(0x2602, 0x56dc, 0x43a0, 0x4787, 0xbede, 0x9f9d, 0x1, 0x0);
        gbc.writeMem(0x2602, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x56dc);
        EXPECT(gbc.pc(), 0x2604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00DB
        gbc.setState(0x85cc, 0xff12, 0x2f00, 0xa42e, 0x67bd, 0x223f, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xff12);
        EXPECT(gbc.pc(), 0x85ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cc), 0xcb);
        EXPECT(gbc.readMem(0x85cd), 0x44);
        // CB 44 00DC
        gbc.setState(0x1d1a, 0xd287, 0x75a0, 0xc86a, 0x7308, 0x3e84, 0x1, 0x0);
        gbc.writeMem(0x1d1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd287);
        EXPECT(gbc.pc(), 0x1d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00DD
        gbc.setState(0x897a, 0x4b92, 0xebf0, 0xc8f5, 0x8a12, 0x37d8, 0x0, 0x0);
        gbc.writeMem(0x897a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4b92);
        EXPECT(gbc.pc(), 0x897c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897a), 0xcb);
        EXPECT(gbc.readMem(0x897b), 0x44);
        // CB 44 00DE
        gbc.setState(0xe5d4, 0xb0c5, 0x9890, 0x350b, 0x1681, 0xd28b, 0x0, 0x0);
        gbc.writeMem(0xe5d4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb0c5);
        EXPECT(gbc.pc(), 0xe5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d4), 0xcb);
        EXPECT(gbc.readMem(0xe5d5), 0x44);
        // CB 44 00DF
        gbc.setState(0x975e, 0x2a9c, 0xfad0, 0xeca6, 0xc32b, 0x5c74, 0x1, 0x1);
        gbc.writeMem(0x975e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2a9c);
        EXPECT(gbc.pc(), 0x9760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x975e), 0xcb);
        EXPECT(gbc.readMem(0x975f), 0x44);
        // CB 44 00E0
        gbc.setState(0x20b2, 0x75e0, 0x5130, 0x243c, 0xb88d, 0x799c, 0x1, 0x0);
        gbc.writeMem(0x20b2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x75e0);
        EXPECT(gbc.pc(), 0x20b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00E1
        gbc.setState(0x4930, 0xab86, 0x8bc0, 0x7821, 0x1a40, 0xbffd, 0x1, 0x0);
        gbc.writeMem(0x4930, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xab86);
        EXPECT(gbc.pc(), 0x4932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00E2
        gbc.setState(0x6672, 0x8984, 0x4690, 0xa080, 0xf70c, 0xff68, 0x1, 0x1);
        gbc.writeMem(0x6672, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8984);
        EXPECT(gbc.pc(), 0x6674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00E3
        gbc.setState(0x21db, 0xbff2, 0x1730, 0xdf60, 0x2720, 0x3149, 0x0, 0x1);
        gbc.writeMem(0x21db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xbff2);
        EXPECT(gbc.pc(), 0x21dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00E4
        gbc.setState(0x4fa4, 0x4484, 0x1f0, 0xe267, 0xce7c, 0x27fe, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x4484);
        EXPECT(gbc.pc(), 0x4fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00E5
        gbc.setState(0xa1ea, 0x2f40, 0xb70, 0x3cda, 0xf044, 0x9510, 0x0, 0x1);
        gbc.writeMem(0xa1ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2f40);
        EXPECT(gbc.pc(), 0xa1ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ea), 0xcb);
        EXPECT(gbc.readMem(0xa1eb), 0x44);
        // CB 44 00E6
        gbc.setState(0x7044, 0x95a7, 0x79c0, 0xdba7, 0x6790, 0x40d4, 0x1, 0x1);
        gbc.writeMem(0x7044, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x95a7);
        EXPECT(gbc.pc(), 0x7046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00E7
        gbc.setState(0x4da6, 0xea7e, 0x6400, 0xd377, 0x24aa, 0x9741, 0x1, 0x1);
        gbc.writeMem(0x4da6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xea7e);
        EXPECT(gbc.pc(), 0x4da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00E8
        gbc.setState(0x82cb, 0xeeef, 0x7f10, 0x4138, 0x25d1, 0x3ef0, 0x1, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xeeef);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cb), 0xcb);
        EXPECT(gbc.readMem(0x82cc), 0x44);
        // CB 44 00E9
        gbc.setState(0x23b3, 0x9388, 0x2570, 0xcbfe, 0xb657, 0xdbaf, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x9388);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00EA
        gbc.setState(0x6333, 0x6518, 0x8690, 0xe1e5, 0xf431, 0x804d, 0x1, 0x1);
        gbc.writeMem(0x6333, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6518);
        EXPECT(gbc.pc(), 0x6335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00EB
        gbc.setState(0xc70, 0x8a21, 0xb240, 0x2c95, 0xd91c, 0xcdc9, 0x1, 0x0);
        gbc.writeMem(0xc70, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8a21);
        EXPECT(gbc.pc(), 0xc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00EC
        gbc.setState(0xcabf, 0x1c8, 0xdbc0, 0xcc2d, 0xd81c, 0xd187, 0x1, 0x0);
        gbc.writeMem(0xcabf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1c8);
        EXPECT(gbc.pc(), 0xcac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabf), 0xcb);
        EXPECT(gbc.readMem(0xcac0), 0x44);
        // CB 44 00ED
        gbc.setState(0x2ca6, 0xda95, 0xd830, 0x5e6, 0xcdc8, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x2ca6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0x2ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00EE
        gbc.setState(0xe310, 0x2679, 0x9f40, 0xe609, 0x4109, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0xe310, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2679);
        EXPECT(gbc.pc(), 0xe312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe310), 0xcb);
        EXPECT(gbc.readMem(0xe311), 0x44);
        // CB 44 00EF
        gbc.setState(0x1519, 0x5013, 0x7500, 0x4323, 0x2450, 0x232b, 0x1, 0x0);
        gbc.writeMem(0x1519, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5013);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00F0
        gbc.setState(0x6619, 0xd97d, 0x48c0, 0x32c8, 0x191d, 0xe121, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd97d);
        EXPECT(gbc.pc(), 0x661b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 00F1
        gbc.setState(0x3f57, 0x3031, 0x5a30, 0xe745, 0xb17e, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3031);
        EXPECT(gbc.pc(), 0x3f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00F2
        gbc.setState(0xed7f, 0xc025, 0x5c10, 0xb0c1, 0xf473, 0x6e6a, 0x1, 0x1);
        gbc.writeMem(0xed7f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc025);
        EXPECT(gbc.pc(), 0xed81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7f), 0xcb);
        EXPECT(gbc.readMem(0xed80), 0x44);
        // CB 44 00F3
        gbc.setState(0xbc7d, 0x3ff1, 0x14c0, 0x8b35, 0xf49f, 0x1493, 0x0, 0x1);
        gbc.writeMem(0xbc7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3ff1);
        EXPECT(gbc.pc(), 0xbc7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc7d), 0xcb);
        EXPECT(gbc.readMem(0xbc7e), 0x44);
        // CB 44 00F4
        gbc.setState(0x47bb, 0x20ea, 0x4750, 0xbc3f, 0x8e3d, 0x89a6, 0x0, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x20ea);
        EXPECT(gbc.pc(), 0x47bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00F5
        gbc.setState(0xaee6, 0x6c1d, 0x77d0, 0x3698, 0x6c1e, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0xaee6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6c1d);
        EXPECT(gbc.pc(), 0xaee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee6), 0xcb);
        EXPECT(gbc.readMem(0xaee7), 0x44);
        // CB 44 00F7
        gbc.setState(0xca2b, 0xa818, 0x38a0, 0xb024, 0xaff, 0xaa3f, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa818);
        EXPECT(gbc.pc(), 0xca2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2b), 0xcb);
        EXPECT(gbc.readMem(0xca2c), 0x44);
        // CB 44 00F8
        gbc.setState(0xd01e, 0xe00e, 0x46d0, 0x811b, 0x1155, 0xa84d, 0x0, 0x0);
        gbc.writeMem(0xd01e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe00e);
        EXPECT(gbc.pc(), 0xd020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01e), 0xcb);
        EXPECT(gbc.readMem(0xd01f), 0x44);
        // CB 44 00F9
        gbc.setState(0x541, 0xa70c, 0x2810, 0x450d, 0x7a77, 0x973c, 0x1, 0x1);
        gbc.writeMem(0x541, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa70c);
        EXPECT(gbc.pc(), 0x543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00FA
        gbc.setState(0xa745, 0x1f89, 0x1cf0, 0xf344, 0x9322, 0x7706, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1f89);
        EXPECT(gbc.pc(), 0xa747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa745), 0xcb);
        EXPECT(gbc.readMem(0xa746), 0x44);
        // CB 44 00FC
        gbc.setState(0x2960, 0xb33e, 0xdd70, 0xcf7e, 0xd60c, 0xd7cb, 0x0, 0x0);
        gbc.writeMem(0x2960, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0x2962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 00FD
        gbc.setState(0x8b0f, 0xdbd2, 0x22c0, 0x89d1, 0x1984, 0xf357, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdbd2);
        EXPECT(gbc.pc(), 0x8b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0f), 0xcb);
        EXPECT(gbc.readMem(0x8b10), 0x44);
        // CB 44 00FE
        gbc.setState(0xd575, 0x16d7, 0x9ee0, 0x9ffe, 0x1033, 0x514f, 0x1, 0x1);
        gbc.writeMem(0xd575, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x16d7);
        EXPECT(gbc.pc(), 0xd577);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd575), 0xcb);
        EXPECT(gbc.readMem(0xd576), 0x44);
        // CB 44 0100
        gbc.setState(0xec7d, 0xcfc1, 0x5780, 0xa81, 0x884, 0x2b37, 0x0, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcfc1);
        EXPECT(gbc.pc(), 0xec7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7d), 0xcb);
        EXPECT(gbc.readMem(0xec7e), 0x44);
        // CB 44 0101
        gbc.setState(0x7858, 0x55e9, 0x47a0, 0x8e3a, 0x8563, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0x7858, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x55e9);
        EXPECT(gbc.pc(), 0x785a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0102
        gbc.setState(0x5e7e, 0xe4fc, 0xfc50, 0x9f63, 0x4184, 0xd577, 0x1, 0x0);
        gbc.writeMem(0x5e7e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe4fc);
        EXPECT(gbc.pc(), 0x5e80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0103
        gbc.setState(0x60f, 0xbe87, 0x4b40, 0x2a1, 0x2974, 0x741, 0x1, 0x1);
        gbc.writeMem(0x60f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbe87);
        EXPECT(gbc.pc(), 0x611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0104
        gbc.setState(0x1b04, 0x2ea, 0x7de0, 0xc7c7, 0x39ac, 0x7298, 0x0, 0x0);
        gbc.writeMem(0x1b04, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2ea);
        EXPECT(gbc.pc(), 0x1b06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0105
        gbc.setState(0x8f3, 0xb1a2, 0x6110, 0xa08c, 0x7014, 0x6570, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb1a2);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0107
        gbc.setState(0xee41, 0x10e0, 0xfb20, 0xd3bb, 0xe5fb, 0xa7ab, 0x1, 0x1);
        gbc.writeMem(0xee41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x10e0);
        EXPECT(gbc.pc(), 0xee43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee41), 0xcb);
        EXPECT(gbc.readMem(0xee42), 0x44);
        // CB 44 0108
        gbc.setState(0x72f0, 0x5ef0, 0xbae0, 0x37a, 0x3c10, 0x29fb, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5ef0);
        EXPECT(gbc.pc(), 0x72f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0109
        gbc.setState(0x87e0, 0x47f, 0x8950, 0xdceb, 0xccbd, 0x8436, 0x1, 0x0);
        gbc.writeMem(0x87e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x47f);
        EXPECT(gbc.pc(), 0x87e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e0), 0xcb);
        EXPECT(gbc.readMem(0x87e1), 0x44);
        // CB 44 010A
        gbc.setState(0xb652, 0x4fd5, 0x5f50, 0xbb3, 0x2bc6, 0x64c9, 0x1, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4fd5);
        EXPECT(gbc.pc(), 0xb654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb652), 0xcb);
        EXPECT(gbc.readMem(0xb653), 0x44);
        // CB 44 010C
        gbc.setState(0x7a95, 0x9517, 0xedb0, 0x6735, 0xb3b8, 0x6d55, 0x0, 0x1);
        gbc.writeMem(0x7a95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9517);
        EXPECT(gbc.pc(), 0x7a97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 010D
        gbc.setState(0x3e3d, 0x1f28, 0xed70, 0xb18d, 0x96a4, 0x3eb8, 0x0, 0x0);
        gbc.writeMem(0x3e3d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1f28);
        EXPECT(gbc.pc(), 0x3e3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 010E
        gbc.setState(0xa42d, 0x1798, 0xe8f0, 0x35b, 0xfd8a, 0x992, 0x0, 0x1);
        gbc.writeMem(0xa42d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1798);
        EXPECT(gbc.pc(), 0xa42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa42d), 0xcb);
        EXPECT(gbc.readMem(0xa42e), 0x44);
        // CB 44 010F
        gbc.setState(0x17, 0xdfd6, 0x7770, 0x15b0, 0xaaec, 0x2979, 0x0, 0x0);
        gbc.writeMem(0x17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdfd6);
        EXPECT(gbc.pc(), 0x19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0110
        gbc.setState(0x6b74, 0x84b9, 0x3a70, 0xaab9, 0x150, 0xe404, 0x0, 0x1);
        gbc.writeMem(0x6b74, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x84b9);
        EXPECT(gbc.pc(), 0x6b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0111
        gbc.setState(0x65ac, 0xe210, 0x41c0, 0x8f2, 0xa75e, 0xe19, 0x1, 0x1);
        gbc.writeMem(0x65ac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe210);
        EXPECT(gbc.pc(), 0x65ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0112
        gbc.setState(0xb041, 0x62d7, 0x93e0, 0x1e1f, 0xf0b1, 0xc4ba, 0x1, 0x1);
        gbc.writeMem(0xb041, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x62d7);
        EXPECT(gbc.pc(), 0xb043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb041), 0xcb);
        EXPECT(gbc.readMem(0xb042), 0x44);
        // CB 44 0113
        gbc.setState(0xb47c, 0x1fd7, 0x69d0, 0xc6ee, 0xc704, 0xb8dc, 0x1, 0x1);
        gbc.writeMem(0xb47c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x1fd7);
        EXPECT(gbc.pc(), 0xb47e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47c), 0xcb);
        EXPECT(gbc.readMem(0xb47d), 0x44);
        // CB 44 0114
        gbc.setState(0x7dcc, 0xf6a0, 0xc560, 0x175e, 0xe3ee, 0x891f, 0x0, 0x0);
        gbc.writeMem(0x7dcc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0x7dce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0115
        gbc.setState(0x1ac5, 0xe76f, 0x26c0, 0x5702, 0x49eb, 0xc2dc, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe76f);
        EXPECT(gbc.pc(), 0x1ac7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0116
        gbc.setState(0x3da8, 0xf939, 0x8b80, 0x133c, 0x4954, 0x8d05, 0x0, 0x0);
        gbc.writeMem(0x3da8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf939);
        EXPECT(gbc.pc(), 0x3daa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0118
        gbc.setState(0x7065, 0x46fd, 0xadc0, 0x5f2b, 0x68f1, 0x501e, 0x1, 0x0);
        gbc.writeMem(0x7065, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x46fd);
        EXPECT(gbc.pc(), 0x7067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0119
        gbc.setState(0x4f12, 0xf2e, 0x6d50, 0xc4cb, 0xd992, 0x7cf0, 0x0, 0x0);
        gbc.writeMem(0x4f12, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0x4f14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 011A
        gbc.setState(0x561c, 0xb21b, 0xf010, 0xa086, 0x6cbb, 0x3293, 0x0, 0x1);
        gbc.writeMem(0x561c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb21b);
        EXPECT(gbc.pc(), 0x561e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 011B
        gbc.setState(0x1eb6, 0x2cf6, 0x7780, 0x8358, 0x9e70, 0x8e2b, 0x0, 0x1);
        gbc.writeMem(0x1eb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2cf6);
        EXPECT(gbc.pc(), 0x1eb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 011C
        gbc.setState(0x18ea, 0x1312, 0x28c0, 0x2d64, 0x42fb, 0xdb5a, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1312);
        EXPECT(gbc.pc(), 0x18ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 011D
        gbc.setState(0x21e7, 0x4fdc, 0x7f0, 0x3747, 0x6134, 0xe9d1, 0x0, 0x1);
        gbc.writeMem(0x21e7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4fdc);
        EXPECT(gbc.pc(), 0x21e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 011E
        gbc.setState(0x9112, 0xe989, 0x7270, 0xef27, 0xf0ac, 0xccd9, 0x1, 0x1);
        gbc.writeMem(0x9112, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xe989);
        EXPECT(gbc.pc(), 0x9114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9112), 0xcb);
        EXPECT(gbc.readMem(0x9113), 0x44);
        // CB 44 011F
        gbc.setState(0xdc75, 0x75ea, 0x1830, 0x65cb, 0x4c26, 0x943f, 0x1, 0x1);
        gbc.writeMem(0xdc75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x75ea);
        EXPECT(gbc.pc(), 0xdc77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc75), 0xcb);
        EXPECT(gbc.readMem(0xdc76), 0x44);
        // CB 44 0120
        gbc.setState(0xbc78, 0x6194, 0x6190, 0x2de6, 0x6922, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xbc78, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6194);
        EXPECT(gbc.pc(), 0xbc7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc78), 0xcb);
        EXPECT(gbc.readMem(0xbc79), 0x44);
        // CB 44 0121
        gbc.setState(0x947b, 0x957f, 0x1030, 0xd25b, 0x83dc, 0x2e18, 0x0, 0x0);
        gbc.writeMem(0x947b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x957f);
        EXPECT(gbc.pc(), 0x947d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947b), 0xcb);
        EXPECT(gbc.readMem(0x947c), 0x44);
        // CB 44 0122
        gbc.setState(0x5287, 0xdaee, 0xb2b0, 0x8f97, 0x7a25, 0xc7a2, 0x1, 0x1);
        gbc.writeMem(0x5287, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xdaee);
        EXPECT(gbc.pc(), 0x5289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0123
        gbc.setState(0x24f8, 0xfe8e, 0xa710, 0x6d97, 0x2f40, 0x33fc, 0x0, 0x1);
        gbc.writeMem(0x24f8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfe8e);
        EXPECT(gbc.pc(), 0x24fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0124
        gbc.setState(0x63e5, 0x8b9, 0x1b90, 0xb004, 0x5283, 0x5e83, 0x1, 0x0);
        gbc.writeMem(0x63e5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x8b9);
        EXPECT(gbc.pc(), 0x63e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0125
        gbc.setState(0xcc2a, 0xbf03, 0x4d00, 0x28f3, 0xc75, 0x5c2f, 0x0, 0x0);
        gbc.writeMem(0xcc2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xbf03);
        EXPECT(gbc.pc(), 0xcc2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2a), 0xcb);
        EXPECT(gbc.readMem(0xcc2b), 0x44);
        // CB 44 0126
        gbc.setState(0x7dd1, 0x2259, 0xabc0, 0xb52d, 0x2ef6, 0xf4a7, 0x1, 0x1);
        gbc.writeMem(0x7dd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2259);
        EXPECT(gbc.pc(), 0x7dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0127
        gbc.setState(0xcaae, 0x6ba9, 0x8490, 0x14b6, 0x9680, 0x3486, 0x1, 0x1);
        gbc.writeMem(0xcaae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6ba9);
        EXPECT(gbc.pc(), 0xcab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaae), 0xcb);
        EXPECT(gbc.readMem(0xcaaf), 0x44);
        // CB 44 0128
        gbc.setState(0x8171, 0xf334, 0x3760, 0xa66f, 0x4c6d, 0x4690, 0x0, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf334);
        EXPECT(gbc.pc(), 0x8173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8171), 0xcb);
        EXPECT(gbc.readMem(0x8172), 0x44);
        // CB 44 0129
        gbc.setState(0x907, 0x46b3, 0x5220, 0xf6e8, 0x573d, 0x34f3, 0x1, 0x0);
        gbc.writeMem(0x907, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x46b3);
        EXPECT(gbc.pc(), 0x909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 012A
        gbc.setState(0x298b, 0x28c, 0x3960, 0x847d, 0x702f, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x28c);
        EXPECT(gbc.pc(), 0x298d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 012B
        gbc.setState(0x7b7a, 0x2dc9, 0xbe60, 0xd80b, 0x820b, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2dc9);
        EXPECT(gbc.pc(), 0x7b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 012C
        gbc.setState(0x8e1e, 0x5beb, 0x9aa0, 0x695, 0x6e7f, 0x9a74, 0x1, 0x0);
        gbc.writeMem(0x8e1e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5beb);
        EXPECT(gbc.pc(), 0x8e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e1e), 0xcb);
        EXPECT(gbc.readMem(0x8e1f), 0x44);
        // CB 44 012E
        gbc.setState(0xa250, 0xcfe3, 0x6250, 0xfbf, 0x3d79, 0x93a7, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcfe3);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa250), 0xcb);
        EXPECT(gbc.readMem(0xa251), 0x44);
        // CB 44 012F
        gbc.setState(0x8979, 0xf573, 0x5d70, 0xae15, 0xbee3, 0xb612, 0x0, 0x0);
        gbc.writeMem(0x8979, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf573);
        EXPECT(gbc.pc(), 0x897b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8979), 0xcb);
        EXPECT(gbc.readMem(0x897a), 0x44);
        // CB 44 0130
        gbc.setState(0xa8f7, 0xdf2c, 0x59e0, 0x41f5, 0x68e7, 0x14b3, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdf2c);
        EXPECT(gbc.pc(), 0xa8f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f7), 0xcb);
        EXPECT(gbc.readMem(0xa8f8), 0x44);
        // CB 44 0131
        gbc.setState(0x7277, 0x9c89, 0x9e70, 0xa83c, 0x6b76, 0x87d7, 0x1, 0x0);
        gbc.writeMem(0x7277, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9c89);
        EXPECT(gbc.pc(), 0x7279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0132
        gbc.setState(0x3e7c, 0x679, 0x800, 0xb201, 0xa676, 0xa7b9, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x679);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0134
        gbc.setState(0x2d1a, 0xaef9, 0x6870, 0x8930, 0xb197, 0x9303, 0x0, 0x1);
        gbc.writeMem(0x2d1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaef9);
        EXPECT(gbc.pc(), 0x2d1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0135
        gbc.setState(0x8a6d, 0xbf65, 0x3cb0, 0x7794, 0xb070, 0x331b, 0x0, 0x1);
        gbc.writeMem(0x8a6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbf65);
        EXPECT(gbc.pc(), 0x8a6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a6d), 0xcb);
        EXPECT(gbc.readMem(0x8a6e), 0x44);
        // CB 44 0136
        gbc.setState(0x2fe6, 0xee7f, 0x6c90, 0x1adb, 0x295b, 0x758c, 0x0, 0x0);
        gbc.writeMem(0x2fe6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xee7f);
        EXPECT(gbc.pc(), 0x2fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0137
        gbc.setState(0xb218, 0x6095, 0xb980, 0x708, 0xc8af, 0xae85, 0x0, 0x1);
        gbc.writeMem(0xb218, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6095);
        EXPECT(gbc.pc(), 0xb21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb218), 0xcb);
        EXPECT(gbc.readMem(0xb219), 0x44);
        // CB 44 0138
        gbc.setState(0xa278, 0x2674, 0x46c0, 0xf6ba, 0x540f, 0xa309, 0x1, 0x0);
        gbc.writeMem(0xa278, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2674);
        EXPECT(gbc.pc(), 0xa27a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa278), 0xcb);
        EXPECT(gbc.readMem(0xa279), 0x44);
        // CB 44 0139
        gbc.setState(0x4bbe, 0x75ee, 0x2470, 0x3f8d, 0xc657, 0xb591, 0x1, 0x1);
        gbc.writeMem(0x4bbe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x75ee);
        EXPECT(gbc.pc(), 0x4bc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 013A
        gbc.setState(0x962e, 0x9cd9, 0x5190, 0x7832, 0xb729, 0xfd33, 0x0, 0x1);
        gbc.writeMem(0x962e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9cd9);
        EXPECT(gbc.pc(), 0x9630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962e), 0xcb);
        EXPECT(gbc.readMem(0x962f), 0x44);
        // CB 44 013B
        gbc.setState(0x3f02, 0x6ed0, 0x77a0, 0xc958, 0xbbe9, 0xf132, 0x1, 0x0);
        gbc.writeMem(0x3f02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6ed0);
        EXPECT(gbc.pc(), 0x3f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 013C
        gbc.setState(0xb263, 0xa916, 0x56c0, 0x853f, 0x78ea, 0xfab6, 0x1, 0x1);
        gbc.writeMem(0xb263, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa916);
        EXPECT(gbc.pc(), 0xb265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb263), 0xcb);
        EXPECT(gbc.readMem(0xb264), 0x44);
        // CB 44 013D
        gbc.setState(0x305, 0xd0cb, 0x8cd0, 0x7902, 0xb0ae, 0x5468, 0x0, 0x1);
        gbc.writeMem(0x305, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd0cb);
        EXPECT(gbc.pc(), 0x307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 013E
        gbc.setState(0x8e3e, 0xb384, 0x3ba0, 0x78a4, 0xc810, 0xb73d, 0x1, 0x1);
        gbc.writeMem(0x8e3e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb384);
        EXPECT(gbc.pc(), 0x8e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3e), 0xcb);
        EXPECT(gbc.readMem(0x8e3f), 0x44);
        // CB 44 013F
        gbc.setState(0x5f3, 0xb37e, 0x3d60, 0x1191, 0xdf3b, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0x5f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb37e);
        EXPECT(gbc.pc(), 0x5f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0140
        gbc.setState(0xad11, 0x1a17, 0x6f0, 0x11be, 0xf25b, 0x4e93, 0x0, 0x1);
        gbc.writeMem(0xad11, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1a17);
        EXPECT(gbc.pc(), 0xad13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad11), 0xcb);
        EXPECT(gbc.readMem(0xad12), 0x44);
        // CB 44 0141
        gbc.setState(0x3fc, 0x78f3, 0xab80, 0xf7af, 0x8d9f, 0xbf71, 0x1, 0x0);
        gbc.writeMem(0x3fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x78f3);
        EXPECT(gbc.pc(), 0x3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0142
        gbc.setState(0x36db, 0xbad2, 0x960, 0x48b6, 0x772a, 0xb33d, 0x1, 0x0);
        gbc.writeMem(0x36db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbad2);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0143
        gbc.setState(0xa1b0, 0xb0c5, 0xaf30, 0x61ed, 0x8016, 0x4fbc, 0x0, 0x0);
        gbc.writeMem(0xa1b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0c5);
        EXPECT(gbc.pc(), 0xa1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b0), 0xcb);
        EXPECT(gbc.readMem(0xa1b1), 0x44);
        // CB 44 0144
        gbc.setState(0x4d58, 0x373e, 0x2e40, 0x2327, 0x4dd1, 0xe348, 0x1, 0x1);
        gbc.writeMem(0x4d58, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x373e);
        EXPECT(gbc.pc(), 0x4d5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0145
        gbc.setState(0xd03d, 0xa21d, 0xc640, 0xb94f, 0x2cc8, 0x3fa0, 0x0, 0x1);
        gbc.writeMem(0xd03d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa21d);
        EXPECT(gbc.pc(), 0xd03f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03d), 0xcb);
        EXPECT(gbc.readMem(0xd03e), 0x44);
        // CB 44 0146
        gbc.setState(0x3bcc, 0x1820, 0xe500, 0xdf54, 0xbb27, 0x116, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1820);
        EXPECT(gbc.pc(), 0x3bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0147
        gbc.setState(0xea94, 0xf169, 0x9f60, 0xf728, 0x8bdf, 0x4535, 0x0, 0x1);
        gbc.writeMem(0xea94, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf169);
        EXPECT(gbc.pc(), 0xea96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea94), 0xcb);
        EXPECT(gbc.readMem(0xea95), 0x44);
        // CB 44 0148
        gbc.setState(0x4f8f, 0xc570, 0xd8c0, 0x6592, 0x7a60, 0x7357, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc570);
        EXPECT(gbc.pc(), 0x4f91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0149
        gbc.setState(0xd3f, 0xceee, 0xdf10, 0xf4c5, 0x4925, 0xa339, 0x0, 0x0);
        gbc.writeMem(0xd3f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xceee);
        EXPECT(gbc.pc(), 0xd41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 014A
        gbc.setState(0x8c17, 0x5658, 0x2f20, 0x1275, 0x57, 0xcaf0, 0x0, 0x1);
        gbc.writeMem(0x8c17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5658);
        EXPECT(gbc.pc(), 0x8c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c17), 0xcb);
        EXPECT(gbc.readMem(0x8c18), 0x44);
        // CB 44 014B
        gbc.setState(0x7798, 0xafb5, 0xcfc0, 0x6b75, 0x7c66, 0x485b, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xafb5);
        EXPECT(gbc.pc(), 0x779a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 014C
        gbc.setState(0xe915, 0x1b4e, 0x9070, 0xc2cd, 0xdffc, 0x3f52, 0x0, 0x0);
        gbc.writeMem(0xe915, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1b4e);
        EXPECT(gbc.pc(), 0xe917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe915), 0xcb);
        EXPECT(gbc.readMem(0xe916), 0x44);
        // CB 44 014E
        gbc.setState(0x2065, 0x6b3d, 0x3f80, 0x4b56, 0x2ca5, 0xaa7b, 0x1, 0x1);
        gbc.writeMem(0x2065, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6b3d);
        EXPECT(gbc.pc(), 0x2067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 014F
        gbc.setState(0x4dfc, 0x1a9a, 0xb100, 0x871, 0x73f7, 0xa493, 0x0, 0x1);
        gbc.writeMem(0x4dfc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1a9a);
        EXPECT(gbc.pc(), 0x4dfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0150
        gbc.setState(0x1db3, 0x349c, 0x68e0, 0xb76f, 0x124e, 0xff84, 0x0, 0x1);
        gbc.writeMem(0x1db3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x349c);
        EXPECT(gbc.pc(), 0x1db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0151
        gbc.setState(0x8275, 0x88e1, 0x9a10, 0x1de, 0x8b92, 0xcf09, 0x1, 0x1);
        gbc.writeMem(0x8275, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x88e1);
        EXPECT(gbc.pc(), 0x8277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8275), 0xcb);
        EXPECT(gbc.readMem(0x8276), 0x44);
        // CB 44 0152
        gbc.setState(0x5c06, 0xdfe1, 0xcdd0, 0x8658, 0x909f, 0x8a5, 0x1, 0x0);
        gbc.writeMem(0x5c06, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdfe1);
        EXPECT(gbc.pc(), 0x5c08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0153
        gbc.setState(0xb7ab, 0xae28, 0x7c20, 0xb5f9, 0x33c1, 0x3da7, 0x0, 0x0);
        gbc.writeMem(0xb7ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xae28);
        EXPECT(gbc.pc(), 0xb7ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ab), 0xcb);
        EXPECT(gbc.readMem(0xb7ac), 0x44);
        // CB 44 0154
        gbc.setState(0x51, 0xea8f, 0x1fd0, 0xe85a, 0x427c, 0x21b, 0x1, 0x1);
        gbc.writeMem(0x51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xea8f);
        EXPECT(gbc.pc(), 0x53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0155
        gbc.setState(0x44d5, 0x3516, 0x3940, 0xbe88, 0xf45d, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3516);
        EXPECT(gbc.pc(), 0x44d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0156
        gbc.setState(0x38e4, 0x1c18, 0xd2d0, 0xf779, 0xdf2d, 0x2522, 0x0, 0x0);
        gbc.writeMem(0x38e4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1c18);
        EXPECT(gbc.pc(), 0x38e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0157
        gbc.setState(0x8a13, 0x5df7, 0xa8a0, 0x2ca6, 0x6446, 0x5554, 0x1, 0x1);
        gbc.writeMem(0x8a13, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5df7);
        EXPECT(gbc.pc(), 0x8a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a13), 0xcb);
        EXPECT(gbc.readMem(0x8a14), 0x44);
        // CB 44 0158
        gbc.setState(0x7d14, 0xb7b6, 0x8c90, 0xa24b, 0xa100, 0x100, 0x1, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb7b6);
        EXPECT(gbc.pc(), 0x7d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0159
        gbc.setState(0x8b5c, 0x660d, 0xdc0, 0x8eda, 0x71b0, 0xebfd, 0x0, 0x1);
        gbc.writeMem(0x8b5c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x660d);
        EXPECT(gbc.pc(), 0x8b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5c), 0xcb);
        EXPECT(gbc.readMem(0x8b5d), 0x44);
        // CB 44 015A
        gbc.setState(0x43e4, 0x93f4, 0x3c80, 0x60a2, 0xab6c, 0xaba6, 0x1, 0x1);
        gbc.writeMem(0x43e4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x93f4);
        EXPECT(gbc.pc(), 0x43e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 015C
        gbc.setState(0x748e, 0x3a7c, 0x880, 0x3101, 0xb26d, 0x20e, 0x0, 0x1);
        gbc.writeMem(0x748e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3a7c);
        EXPECT(gbc.pc(), 0x7490);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 015D
        gbc.setState(0x6ec5, 0xa2fa, 0xe670, 0xcfa4, 0xd8f3, 0x1b68, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa2fa);
        EXPECT(gbc.pc(), 0x6ec7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 015E
        gbc.setState(0x36f3, 0xc26b, 0x77f0, 0xf450, 0x2472, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0x36f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc26b);
        EXPECT(gbc.pc(), 0x36f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 015F
        gbc.setState(0x8bee, 0x3ba4, 0x8250, 0x3745, 0x465c, 0xc444, 0x0, 0x1);
        gbc.writeMem(0x8bee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x3ba4);
        EXPECT(gbc.pc(), 0x8bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bee), 0xcb);
        EXPECT(gbc.readMem(0x8bef), 0x44);
        // CB 44 0160
        gbc.setState(0x9af6, 0x5cfd, 0x4ef0, 0x2dfa, 0xa0ca, 0x6d0a, 0x1, 0x1);
        gbc.writeMem(0x9af6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5cfd);
        EXPECT(gbc.pc(), 0x9af8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af6), 0xcb);
        EXPECT(gbc.readMem(0x9af7), 0x44);
        // CB 44 0161
        gbc.setState(0xe668, 0x3077, 0xace0, 0xb312, 0x9a70, 0x1cc9, 0x0, 0x0);
        gbc.writeMem(0xe668, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3077);
        EXPECT(gbc.pc(), 0xe66a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe668), 0xcb);
        EXPECT(gbc.readMem(0xe669), 0x44);
        // CB 44 0162
        gbc.setState(0xb111, 0x1d88, 0xfcf0, 0x218, 0xbf62, 0x8fc9, 0x1, 0x0);
        gbc.writeMem(0xb111, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1d88);
        EXPECT(gbc.pc(), 0xb113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb111), 0xcb);
        EXPECT(gbc.readMem(0xb112), 0x44);
        // CB 44 0163
        gbc.setState(0x5bf2, 0x182c, 0xf580, 0xc43, 0xc679, 0x7c81, 0x1, 0x0);
        gbc.writeMem(0x5bf2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x182c);
        EXPECT(gbc.pc(), 0x5bf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0164
        gbc.setState(0x1d6c, 0xd37, 0xf9e0, 0xc598, 0xecbb, 0x4d60, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd37);
        EXPECT(gbc.pc(), 0x1d6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0165
        gbc.setState(0xcfac, 0xc0c0, 0x7440, 0x1158, 0xae29, 0x2b0c, 0x0, 0x1);
        gbc.writeMem(0xcfac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc0c0);
        EXPECT(gbc.pc(), 0xcfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfac), 0xcb);
        EXPECT(gbc.readMem(0xcfad), 0x44);
        // CB 44 0166
        gbc.setState(0xeae6, 0x2f13, 0x4f90, 0xba07, 0x3016, 0x4a3f, 0x0, 0x0);
        gbc.writeMem(0xeae6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2f13);
        EXPECT(gbc.pc(), 0xeae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae6), 0xcb);
        EXPECT(gbc.readMem(0xeae7), 0x44);
        // CB 44 0167
        gbc.setState(0x5648, 0x69dc, 0x7f40, 0x8cb4, 0x1842, 0xb00c, 0x0, 0x0);
        gbc.writeMem(0x5648, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x69dc);
        EXPECT(gbc.pc(), 0x564a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0168
        gbc.setState(0x26aa, 0xc50c, 0x1d40, 0x11b2, 0x1920, 0x641f, 0x1, 0x0);
        gbc.writeMem(0x26aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc50c);
        EXPECT(gbc.pc(), 0x26ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0169
        gbc.setState(0xbf6d, 0x1596, 0x2260, 0x4df9, 0x7bb, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0xbf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6d), 0xcb);
        EXPECT(gbc.readMem(0xbf6e), 0x44);
        // CB 44 016A
        gbc.setState(0x7501, 0x4f07, 0x4e0, 0xd4d3, 0x5ae5, 0x4557, 0x0, 0x1);
        gbc.writeMem(0x7501, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4f07);
        EXPECT(gbc.pc(), 0x7503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 016B
        gbc.setState(0xee5b, 0x23b2, 0x2570, 0xc389, 0x5eaf, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x23b2);
        EXPECT(gbc.pc(), 0xee5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5b), 0xcb);
        EXPECT(gbc.readMem(0xee5c), 0x44);
        // CB 44 016C
        gbc.setState(0x8237, 0x9a4d, 0xaea0, 0x17ce, 0x7db6, 0x97f1, 0x0, 0x0);
        gbc.writeMem(0x8237, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9a4d);
        EXPECT(gbc.pc(), 0x8239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8237), 0xcb);
        EXPECT(gbc.readMem(0x8238), 0x44);
        // CB 44 016D
        gbc.setState(0x9110, 0xb48a, 0x7780, 0x1672, 0x5c9d, 0x128b, 0x1, 0x1);
        gbc.writeMem(0x9110, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb48a);
        EXPECT(gbc.pc(), 0x9112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9110), 0xcb);
        EXPECT(gbc.readMem(0x9111), 0x44);
        // CB 44 016F
        gbc.setState(0x7d5, 0x1d2a, 0x60f0, 0xe112, 0x5ec2, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1d2a);
        EXPECT(gbc.pc(), 0x7d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0170
        gbc.setState(0x8637, 0x4adb, 0xaec0, 0xa16d, 0xb36f, 0x2f2d, 0x0, 0x1);
        gbc.writeMem(0x8637, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4adb);
        EXPECT(gbc.pc(), 0x8639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8637), 0xcb);
        EXPECT(gbc.readMem(0x8638), 0x44);
        // CB 44 0171
        gbc.setState(0x4263, 0xdae2, 0x6b80, 0xd18f, 0xbd5, 0x38ee, 0x1, 0x1);
        gbc.writeMem(0x4263, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdae2);
        EXPECT(gbc.pc(), 0x4265);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0172
        gbc.setState(0xe33e, 0x1c4, 0x1490, 0x9375, 0xed5b, 0xa8fa, 0x0, 0x0);
        gbc.writeMem(0xe33e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33e), 0xcb);
        EXPECT(gbc.readMem(0xe33f), 0x44);
        // CB 44 0173
        gbc.setState(0x9b9e, 0xbba8, 0xd9e0, 0x5e0c, 0x1710, 0x3db1, 0x0, 0x1);
        gbc.writeMem(0x9b9e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbba8);
        EXPECT(gbc.pc(), 0x9ba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b9e), 0xcb);
        EXPECT(gbc.readMem(0x9b9f), 0x44);
        // CB 44 0174
        gbc.setState(0x943b, 0x2a3c, 0x11d0, 0x2781, 0x3b7b, 0xa448, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x2a3c);
        EXPECT(gbc.pc(), 0x943d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943b), 0xcb);
        EXPECT(gbc.readMem(0x943c), 0x44);
        // CB 44 0175
        gbc.setState(0x5e5e, 0xd73b, 0x74f0, 0xe375, 0xfc83, 0x49b2, 0x1, 0x0);
        gbc.writeMem(0x5e5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd73b);
        EXPECT(gbc.pc(), 0x5e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0176
        gbc.setState(0xc8db, 0xb2b5, 0x43f0, 0x19ce, 0x19a6, 0x5efb, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb2b5);
        EXPECT(gbc.pc(), 0xc8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8db), 0xcb);
        EXPECT(gbc.readMem(0xc8dc), 0x44);
        // CB 44 0177
        gbc.setState(0xce35, 0xf452, 0x75a0, 0xf8dd, 0x33d1, 0x9d2d, 0x0, 0x0);
        gbc.writeMem(0xce35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xf452);
        EXPECT(gbc.pc(), 0xce37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce35), 0xcb);
        EXPECT(gbc.readMem(0xce36), 0x44);
        // CB 44 0178
        gbc.setState(0x2081, 0x7383, 0xe160, 0xd708, 0x7a2b, 0x30b4, 0x0, 0x0);
        gbc.writeMem(0x2081, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7383);
        EXPECT(gbc.pc(), 0x2083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0179
        gbc.setState(0x6946, 0x27f8, 0xecf0, 0x452a, 0xf7ed, 0x897c, 0x1, 0x0);
        gbc.writeMem(0x6946, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x27f8);
        EXPECT(gbc.pc(), 0x6948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 017A
        gbc.setState(0x3a26, 0x4a61, 0x5930, 0x15ee, 0xd5cc, 0x5bed, 0x1, 0x0);
        gbc.writeMem(0x3a26, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x4a61);
        EXPECT(gbc.pc(), 0x3a28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 017B
        gbc.setState(0xae9a, 0xa068, 0x7a10, 0xe779, 0xa6ca, 0xbd72, 0x0, 0x1);
        gbc.writeMem(0xae9a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa068);
        EXPECT(gbc.pc(), 0xae9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae9a), 0xcb);
        EXPECT(gbc.readMem(0xae9b), 0x44);
        // CB 44 017C
        gbc.setState(0x847f, 0x9785, 0xd6f0, 0xbbd4, 0xa78a, 0x4a5b, 0x0, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9785);
        EXPECT(gbc.pc(), 0x8481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x847f), 0xcb);
        EXPECT(gbc.readMem(0x8480), 0x44);
        // CB 44 017D
        gbc.setState(0xa003, 0xc069, 0x61f0, 0xc33a, 0x1ccb, 0x5779, 0x0, 0x0);
        gbc.writeMem(0xa003, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc069);
        EXPECT(gbc.pc(), 0xa005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa003), 0xcb);
        EXPECT(gbc.readMem(0xa004), 0x44);
        // CB 44 017E
        gbc.setState(0x4961, 0x7861, 0xd1d0, 0x7d2, 0x7b79, 0xaf80, 0x0, 0x1);
        gbc.writeMem(0x4961, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x7861);
        EXPECT(gbc.pc(), 0x4963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 017F
        gbc.setState(0x52c8, 0x25b, 0x5150, 0x64b6, 0xfe87, 0x643, 0x1, 0x0);
        gbc.writeMem(0x52c8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x25b);
        EXPECT(gbc.pc(), 0x52ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0180
        gbc.setState(0x277b, 0x30a8, 0xdf00, 0x7558, 0xf62f, 0x56e4, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x30a8);
        EXPECT(gbc.pc(), 0x277d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0181
        gbc.setState(0x371, 0x5458, 0x9870, 0xc5db, 0x2fab, 0xc88e, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5458);
        EXPECT(gbc.pc(), 0x373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0182
        gbc.setState(0xd3d1, 0xe815, 0xed10, 0xd374, 0xfaf, 0x52de, 0x1, 0x1);
        gbc.writeMem(0xd3d1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe815);
        EXPECT(gbc.pc(), 0xd3d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3d1), 0xcb);
        EXPECT(gbc.readMem(0xd3d2), 0x44);
        // CB 44 0183
        gbc.setState(0x279f, 0xcb05, 0xfd40, 0x10ea, 0x1d5f, 0x7987, 0x1, 0x1);
        gbc.writeMem(0x279f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcb05);
        EXPECT(gbc.pc(), 0x27a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0184
        gbc.setState(0x20ae, 0xfaf5, 0xd6d0, 0x948d, 0x3269, 0xdcdf, 0x0, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfaf5);
        EXPECT(gbc.pc(), 0x20b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0185
        gbc.setState(0x3285, 0xb1c2, 0x6e50, 0x7502, 0xe72c, 0x9a3d, 0x1, 0x1);
        gbc.writeMem(0x3285, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb1c2);
        EXPECT(gbc.pc(), 0x3287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0186
        gbc.setState(0x9cf0, 0x65fb, 0xaaa0, 0x854, 0x3a4, 0xf103, 0x0, 0x0);
        gbc.writeMem(0x9cf0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x65fb);
        EXPECT(gbc.pc(), 0x9cf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf0), 0xcb);
        EXPECT(gbc.readMem(0x9cf1), 0x44);
        // CB 44 0187
        gbc.setState(0xc8db, 0xba81, 0x49e0, 0x887e, 0x9185, 0x1d2d, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xba81);
        EXPECT(gbc.pc(), 0xc8dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8db), 0xcb);
        EXPECT(gbc.readMem(0xc8dc), 0x44);
        // CB 44 0188
        gbc.setState(0x35cf, 0x92a8, 0x540, 0xd79c, 0x78f2, 0xd513, 0x1, 0x1);
        gbc.writeMem(0x35cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x92a8);
        EXPECT(gbc.pc(), 0x35d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0189
        gbc.setState(0x797a, 0x2d45, 0x5520, 0x9d61, 0x417a, 0x173c, 0x0, 0x0);
        gbc.writeMem(0x797a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2d45);
        EXPECT(gbc.pc(), 0x797c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 018A
        gbc.setState(0x717f, 0x6dc4, 0xbcf0, 0xa7d1, 0xd1d5, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6dc4);
        EXPECT(gbc.pc(), 0x7181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 018B
        gbc.setState(0xe8d6, 0x86c8, 0x6220, 0xa8b1, 0x8261, 0x568, 0x1, 0x1);
        gbc.writeMem(0xe8d6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x86c8);
        EXPECT(gbc.pc(), 0xe8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d6), 0xcb);
        EXPECT(gbc.readMem(0xe8d7), 0x44);
        // CB 44 018C
        gbc.setState(0x277c, 0x29e9, 0xa560, 0x82f3, 0x23d9, 0xb730, 0x1, 0x1);
        gbc.writeMem(0x277c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x29e9);
        EXPECT(gbc.pc(), 0x277e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 018E
        gbc.setState(0x7b80, 0x1474, 0xb4a0, 0x2621, 0x6986, 0x3c19, 0x1, 0x1);
        gbc.writeMem(0x7b80, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x1474);
        EXPECT(gbc.pc(), 0x7b82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 018F
        gbc.setState(0x3906, 0x4318, 0xa840, 0x6cf9, 0x385b, 0xcd56, 0x1, 0x0);
        gbc.writeMem(0x3906, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4318);
        EXPECT(gbc.pc(), 0x3908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0191
        gbc.setState(0xe83d, 0xc419, 0x1060, 0x8258, 0xd6af, 0x8ad9, 0x0, 0x0);
        gbc.writeMem(0xe83d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc419);
        EXPECT(gbc.pc(), 0xe83f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe83d), 0xcb);
        EXPECT(gbc.readMem(0xe83e), 0x44);
        // CB 44 0192
        gbc.setState(0xd15f, 0x6620, 0x5290, 0xc216, 0xe6b, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6620);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0x44);
        // CB 44 0193
        gbc.setState(0xaf52, 0x6d6a, 0x4d70, 0x3796, 0xabdb, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0xaf52, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6d6a);
        EXPECT(gbc.pc(), 0xaf54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf52), 0xcb);
        EXPECT(gbc.readMem(0xaf53), 0x44);
        // CB 44 0194
        gbc.setState(0x5651, 0x8a09, 0xf8d0, 0xef90, 0x24df, 0x19ba, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8a09);
        EXPECT(gbc.pc(), 0x5653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0195
        gbc.setState(0xe384, 0x639b, 0x30c0, 0x5dfa, 0x3609, 0xc15b, 0x1, 0x1);
        gbc.writeMem(0xe384, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x639b);
        EXPECT(gbc.pc(), 0xe386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe384), 0xcb);
        EXPECT(gbc.readMem(0xe385), 0x44);
        // CB 44 0196
        gbc.setState(0x9c35, 0x96ba, 0x1d70, 0x2c7d, 0x4e81, 0x5529, 0x0, 0x1);
        gbc.writeMem(0x9c35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x96ba);
        EXPECT(gbc.pc(), 0x9c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c35), 0xcb);
        EXPECT(gbc.readMem(0x9c36), 0x44);
        // CB 44 0197
        gbc.setState(0x79b2, 0xe943, 0x2b00, 0x3795, 0x88c2, 0x4612, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe943);
        EXPECT(gbc.pc(), 0x79b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0198
        gbc.setState(0x2e16, 0xe837, 0xaca0, 0xfc64, 0x25e3, 0x1b6a, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe837);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0199
        gbc.setState(0xbbe9, 0x992d, 0xbe70, 0xa2bd, 0x3477, 0x7893, 0x1, 0x1);
        gbc.writeMem(0xbbe9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x992d);
        EXPECT(gbc.pc(), 0xbbeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe9), 0xcb);
        EXPECT(gbc.readMem(0xbbea), 0x44);
        // CB 44 019A
        gbc.setState(0xdbd, 0xadcc, 0x4810, 0xd3ec, 0xf875, 0xb38a, 0x0, 0x1);
        gbc.writeMem(0xdbd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xadcc);
        EXPECT(gbc.pc(), 0xdbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 019B
        gbc.setState(0x8538, 0xd0b4, 0x83a0, 0xb692, 0x17db, 0xbb89, 0x1, 0x1);
        gbc.writeMem(0x8538, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd0b4);
        EXPECT(gbc.pc(), 0x853a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8538), 0xcb);
        EXPECT(gbc.readMem(0x8539), 0x44);
        // CB 44 019C
        gbc.setState(0x7fcd, 0xd015, 0x1ff0, 0x4e84, 0x57e0, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x7fcd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd015);
        EXPECT(gbc.pc(), 0x7fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 019D
        gbc.setState(0x4750, 0x3846, 0xbd70, 0xda12, 0xa276, 0xdcc2, 0x0, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3846);
        EXPECT(gbc.pc(), 0x4752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 019E
        gbc.setState(0xbbbe, 0xfb0d, 0x4d00, 0xe28f, 0xd2c2, 0x1d15, 0x1, 0x0);
        gbc.writeMem(0xbbbe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfb0d);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbe), 0xcb);
        EXPECT(gbc.readMem(0xbbbf), 0x44);
        // CB 44 019F
        gbc.setState(0x2ff3, 0xc4d7, 0xcb40, 0xbe3c, 0x9bf, 0x42eb, 0x1, 0x0);
        gbc.writeMem(0x2ff3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc4d7);
        EXPECT(gbc.pc(), 0x2ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01A0
        gbc.setState(0xd883, 0x8c5e, 0xf0d0, 0xae07, 0x7954, 0xbaa5, 0x0, 0x1);
        gbc.writeMem(0xd883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8c5e);
        EXPECT(gbc.pc(), 0xd885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd883), 0xcb);
        EXPECT(gbc.readMem(0xd884), 0x44);
        // CB 44 01A1
        gbc.setState(0x553f, 0x9ca2, 0xc310, 0xcabf, 0x2d7a, 0x3cc3, 0x1, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9ca2);
        EXPECT(gbc.pc(), 0x5541);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01A2
        gbc.setState(0x69a4, 0x8008, 0xfb20, 0xf051, 0xdac1, 0xeb91, 0x0, 0x1);
        gbc.writeMem(0x69a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8008);
        EXPECT(gbc.pc(), 0x69a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01A3
        gbc.setState(0xc35d, 0x9a51, 0xff50, 0xf2e, 0xe4e5, 0x69f4, 0x1, 0x1);
        gbc.writeMem(0xc35d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9a51);
        EXPECT(gbc.pc(), 0xc35f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35d), 0xcb);
        EXPECT(gbc.readMem(0xc35e), 0x44);
        // CB 44 01A4
        gbc.setState(0x443a, 0xf904, 0x4f50, 0xad3, 0x5915, 0x3b2f, 0x0, 0x1);
        gbc.writeMem(0x443a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf904);
        EXPECT(gbc.pc(), 0x443c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01A5
        gbc.setState(0xec71, 0xe154, 0xeb70, 0xee91, 0x8068, 0xddb3, 0x0, 0x0);
        gbc.writeMem(0xec71, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe154);
        EXPECT(gbc.pc(), 0xec73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec71), 0xcb);
        EXPECT(gbc.readMem(0xec72), 0x44);
        // CB 44 01A6
        gbc.setState(0x6310, 0x3bda, 0xa580, 0x30dc, 0xc582, 0x4a76, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3bda);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01A7
        gbc.setState(0xaa73, 0x1ddd, 0x49a0, 0xc14c, 0x2982, 0xc526, 0x0, 0x0);
        gbc.writeMem(0xaa73, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1ddd);
        EXPECT(gbc.pc(), 0xaa75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa73), 0xcb);
        EXPECT(gbc.readMem(0xaa74), 0x44);
        // CB 44 01A8
        gbc.setState(0xb3ec, 0x35c0, 0x8b70, 0x8323, 0x2971, 0xbc45, 0x1, 0x1);
        gbc.writeMem(0xb3ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x35c0);
        EXPECT(gbc.pc(), 0xb3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ec), 0xcb);
        EXPECT(gbc.readMem(0xb3ed), 0x44);
        // CB 44 01AA
        gbc.setState(0x9f5d, 0xbf07, 0xeb10, 0xa3e6, 0x5368, 0x6b67, 0x0, 0x0);
        gbc.writeMem(0x9f5d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbf07);
        EXPECT(gbc.pc(), 0x9f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f5d), 0xcb);
        EXPECT(gbc.readMem(0x9f5e), 0x44);
        // CB 44 01AB
        gbc.setState(0x3a6c, 0xac79, 0x3770, 0x6941, 0x30ff, 0x6d6b, 0x0, 0x0);
        gbc.writeMem(0x3a6c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xac79);
        EXPECT(gbc.pc(), 0x3a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01AC
        gbc.setState(0x1e2a, 0x27e5, 0xec80, 0x32a0, 0x9623, 0x908d, 0x1, 0x0);
        gbc.writeMem(0x1e2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x27e5);
        EXPECT(gbc.pc(), 0x1e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01AD
        gbc.setState(0x3303, 0x4c29, 0x9290, 0x745d, 0x46b2, 0x75b, 0x1, 0x0);
        gbc.writeMem(0x3303, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4c29);
        EXPECT(gbc.pc(), 0x3305);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01AE
        gbc.setState(0x40d3, 0x1c45, 0x4cf0, 0x2343, 0x1787, 0x1fa1, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1c45);
        EXPECT(gbc.pc(), 0x40d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01AF
        gbc.setState(0x41e8, 0xf317, 0xb2a0, 0x3301, 0x569c, 0x2dc3, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xf317);
        EXPECT(gbc.pc(), 0x41ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01B0
        gbc.setState(0x4556, 0xbef7, 0x2e40, 0x5000, 0x2769, 0xb827, 0x0, 0x0);
        gbc.writeMem(0x4556, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbef7);
        EXPECT(gbc.pc(), 0x4558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01B1
        gbc.setState(0x1e9d, 0xb9ad, 0x3a20, 0xeead, 0xa87c, 0x4094, 0x1, 0x0);
        gbc.writeMem(0x1e9d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb9ad);
        EXPECT(gbc.pc(), 0x1e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01B3
        gbc.setState(0x883, 0xb88f, 0xa9e0, 0xd205, 0x6bea, 0xd348, 0x0, 0x1);
        gbc.writeMem(0x883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb88f);
        EXPECT(gbc.pc(), 0x885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01B4
        gbc.setState(0x142d, 0xbaba, 0xbd20, 0x397e, 0x7548, 0x279e, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbaba);
        EXPECT(gbc.pc(), 0x142f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01B5
        gbc.setState(0xd61c, 0x4262, 0x95d0, 0xbe09, 0x6f5e, 0x1c16, 0x1, 0x1);
        gbc.writeMem(0xd61c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4262);
        EXPECT(gbc.pc(), 0xd61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61c), 0xcb);
        EXPECT(gbc.readMem(0xd61d), 0x44);
        // CB 44 01B6
        gbc.setState(0x7a95, 0x6686, 0x1730, 0x3001, 0xd41c, 0x473e, 0x1, 0x0);
        gbc.writeMem(0x7a95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6686);
        EXPECT(gbc.pc(), 0x7a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01B7
        gbc.setState(0xc9a2, 0x6cff, 0x3920, 0x8ae5, 0x64ea, 0x90b2, 0x1, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6cff);
        EXPECT(gbc.pc(), 0xc9a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a2), 0xcb);
        EXPECT(gbc.readMem(0xc9a3), 0x44);
        // CB 44 01B8
        gbc.setState(0x7411, 0x94d7, 0x8cb0, 0x11d6, 0x6f64, 0x453f, 0x0, 0x0);
        gbc.writeMem(0x7411, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x94d7);
        EXPECT(gbc.pc(), 0x7413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01BA
        gbc.setState(0x3d37, 0x5f1b, 0xf9d0, 0x440b, 0x717, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0x3d37, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5f1b);
        EXPECT(gbc.pc(), 0x3d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01BD
        gbc.setState(0x73cc, 0xa8e1, 0x1ca0, 0x5eb9, 0x623, 0x6d85, 0x0, 0x1);
        gbc.writeMem(0x73cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa8e1);
        EXPECT(gbc.pc(), 0x73ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01BE
        gbc.setState(0x70e5, 0xef4c, 0xba20, 0x51d3, 0x6d21, 0x148a, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0x70e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01BF
        gbc.setState(0xa7ce, 0x463b, 0x5a80, 0x1fe, 0xc690, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x463b);
        EXPECT(gbc.pc(), 0xa7d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ce), 0xcb);
        EXPECT(gbc.readMem(0xa7cf), 0x44);
        // CB 44 01C0
        gbc.setState(0x143, 0xf0d5, 0xdc80, 0x96c7, 0xce37, 0x3be5, 0x1, 0x0);
        gbc.writeMem(0x143, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf0d5);
        EXPECT(gbc.pc(), 0x145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01C1
        gbc.setState(0xab1, 0xa3e4, 0xcc30, 0x7ede, 0x2f2a, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0xab1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa3e4);
        EXPECT(gbc.pc(), 0xab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01C2
        gbc.setState(0x8ab, 0xc6dd, 0x6330, 0x169a, 0xec37, 0x204e, 0x1, 0x1);
        gbc.writeMem(0x8ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc6dd);
        EXPECT(gbc.pc(), 0x8ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01C3
        gbc.setState(0xd2c9, 0x5f84, 0x9010, 0xffeb, 0xeac6, 0xa5e5, 0x0, 0x0);
        gbc.writeMem(0xd2c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5f84);
        EXPECT(gbc.pc(), 0xd2cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2c9), 0xcb);
        EXPECT(gbc.readMem(0xd2ca), 0x44);
        // CB 44 01C5
        gbc.setState(0x2910, 0xb807, 0x2360, 0xb95e, 0xa847, 0xb90a, 0x1, 0x1);
        gbc.writeMem(0x2910, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb807);
        EXPECT(gbc.pc(), 0x2912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01C6
        gbc.setState(0xd777, 0x123e, 0x47f0, 0x1293, 0x72de, 0x33f8, 0x0, 0x0);
        gbc.writeMem(0xd777, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x123e);
        EXPECT(gbc.pc(), 0xd779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd777), 0xcb);
        EXPECT(gbc.readMem(0xd778), 0x44);
        // CB 44 01C7
        gbc.setState(0x6c63, 0x5ab3, 0x22d0, 0x294c, 0x67eb, 0x2523, 0x1, 0x1);
        gbc.writeMem(0x6c63, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5ab3);
        EXPECT(gbc.pc(), 0x6c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01C9
        gbc.setState(0x172d, 0x20f8, 0x7380, 0xe806, 0x2ea, 0x6ea4, 0x0, 0x0);
        gbc.writeMem(0x172d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x20f8);
        EXPECT(gbc.pc(), 0x172f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01CA
        gbc.setState(0x6861, 0x28c3, 0x47e0, 0xde2a, 0x7567, 0xe6f9, 0x0, 0x1);
        gbc.writeMem(0x6861, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x28c3);
        EXPECT(gbc.pc(), 0x6863);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01CB
        gbc.setState(0x5d70, 0xa078, 0x6ef0, 0xeb0e, 0x2b06, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x5d70, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa078);
        EXPECT(gbc.pc(), 0x5d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01CC
        gbc.setState(0xb61d, 0x524d, 0x1170, 0xabbc, 0xb04e, 0xa018, 0x1, 0x1);
        gbc.writeMem(0xb61d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x524d);
        EXPECT(gbc.pc(), 0xb61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb61d), 0xcb);
        EXPECT(gbc.readMem(0xb61e), 0x44);
        // CB 44 01CD
        gbc.setState(0x2cab, 0xb4c4, 0xe9d0, 0xec24, 0x86f1, 0x475d, 0x0, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb4c4);
        EXPECT(gbc.pc(), 0x2cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01CE
        gbc.setState(0x693f, 0xc1bd, 0x3e50, 0x1f5b, 0x1492, 0x5434, 0x1, 0x0);
        gbc.writeMem(0x693f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc1bd);
        EXPECT(gbc.pc(), 0x6941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01CF
        gbc.setState(0xc7db, 0x6ea, 0x30, 0x5eb3, 0x889b, 0xd8e0, 0x1, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6ea);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7db), 0xcb);
        EXPECT(gbc.readMem(0xc7dc), 0x44);
        // CB 44 01D0
        gbc.setState(0x7fd0, 0xc24f, 0xf880, 0xa383, 0x7d1f, 0xc610, 0x1, 0x0);
        gbc.writeMem(0x7fd0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc24f);
        EXPECT(gbc.pc(), 0x7fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01D1
        gbc.setState(0xa97e, 0x5fd7, 0x96b0, 0x859d, 0xed81, 0x2b81, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5fd7);
        EXPECT(gbc.pc(), 0xa980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97e), 0xcb);
        EXPECT(gbc.readMem(0xa97f), 0x44);
        // CB 44 01D2
        gbc.setState(0xb313, 0xbc1f, 0x7ce0, 0x39bd, 0x5718, 0xf929, 0x0, 0x0);
        gbc.writeMem(0xb313, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xbc1f);
        EXPECT(gbc.pc(), 0xb315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb313), 0xcb);
        EXPECT(gbc.readMem(0xb314), 0x44);
        // CB 44 01D4
        gbc.setState(0x3433, 0xd4be, 0x67d0, 0x138b, 0xf70, 0x215e, 0x1, 0x0);
        gbc.writeMem(0x3433, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd4be);
        EXPECT(gbc.pc(), 0x3435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01D6
        gbc.setState(0x540, 0x74ac, 0x1020, 0xcaab, 0x5095, 0xbd4d, 0x1, 0x0);
        gbc.writeMem(0x540, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x74ac);
        EXPECT(gbc.pc(), 0x542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01D8
        gbc.setState(0x6c8b, 0x4d45, 0xd890, 0xc939, 0xf1cb, 0x33f9, 0x0, 0x0);
        gbc.writeMem(0x6c8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4d45);
        EXPECT(gbc.pc(), 0x6c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01D9
        gbc.setState(0x47dd, 0x5f64, 0x2390, 0xb410, 0xec01, 0x7827, 0x0, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5f64);
        EXPECT(gbc.pc(), 0x47df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01DC
        gbc.setState(0x568e, 0x6f42, 0x2590, 0xb26c, 0x123a, 0xd4c5, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6f42);
        EXPECT(gbc.pc(), 0x5690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01DD
        gbc.setState(0x11bb, 0x43a4, 0x68e0, 0x29c5, 0x2584, 0xa9a, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x43a4);
        EXPECT(gbc.pc(), 0x11bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01DE
        gbc.setState(0x1c61, 0xb8fd, 0x7e20, 0x65ef, 0x434b, 0x3328, 0x0, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb8fd);
        EXPECT(gbc.pc(), 0x1c63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01DF
        gbc.setState(0xa88d, 0xecf9, 0xebc0, 0x14ff, 0x6ca0, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0xa88d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xecf9);
        EXPECT(gbc.pc(), 0xa88f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa88d), 0xcb);
        EXPECT(gbc.readMem(0xa88e), 0x44);
        // CB 44 01E0
        gbc.setState(0x3353, 0x694c, 0x12f0, 0xc89b, 0xf580, 0xe063, 0x1, 0x0);
        gbc.writeMem(0x3353, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x694c);
        EXPECT(gbc.pc(), 0x3355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01E1
        gbc.setState(0xc122, 0x13f7, 0x13f0, 0x8276, 0x9fd8, 0xf4a7, 0x0, 0x0);
        gbc.writeMem(0xc122, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x13f7);
        EXPECT(gbc.pc(), 0xc124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc122), 0xcb);
        EXPECT(gbc.readMem(0xc123), 0x44);
        // CB 44 01E2
        gbc.setState(0x5d93, 0x4388, 0x32e0, 0x35d4, 0x2ec5, 0x76df, 0x1, 0x1);
        gbc.writeMem(0x5d93, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0x5d95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01E4
        gbc.setState(0xc6f7, 0x98bc, 0x9e30, 0x76b2, 0x19c0, 0xbdbd, 0x0, 0x0);
        gbc.writeMem(0xc6f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x98bc);
        EXPECT(gbc.pc(), 0xc6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f7), 0xcb);
        EXPECT(gbc.readMem(0xc6f8), 0x44);
        // CB 44 01E5
        gbc.setState(0x9134, 0x70de, 0xb190, 0x88d9, 0xa5ca, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x9134, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x70de);
        EXPECT(gbc.pc(), 0x9136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9134), 0xcb);
        EXPECT(gbc.readMem(0x9135), 0x44);
        // CB 44 01E6
        gbc.setState(0xa5aa, 0xf409, 0x6080, 0x4062, 0xd5c0, 0x556b, 0x1, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0xa5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xcb);
        EXPECT(gbc.readMem(0xa5ab), 0x44);
        // CB 44 01E7
        gbc.setState(0x5d89, 0x82b7, 0x2790, 0xb718, 0xb27f, 0xf99a, 0x1, 0x0);
        gbc.writeMem(0x5d89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x82b7);
        EXPECT(gbc.pc(), 0x5d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01E8
        gbc.setState(0xd85b, 0xe82a, 0x98f0, 0x6408, 0x55db, 0x8525, 0x0, 0x1);
        gbc.writeMem(0xd85b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe82a);
        EXPECT(gbc.pc(), 0xd85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85b), 0xcb);
        EXPECT(gbc.readMem(0xd85c), 0x44);
        // CB 44 01E9
        gbc.setState(0xc941, 0x4b37, 0xdbd0, 0xe76, 0xc93c, 0x709c, 0x1, 0x1);
        gbc.writeMem(0xc941, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4b37);
        EXPECT(gbc.pc(), 0xc943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc941), 0xcb);
        EXPECT(gbc.readMem(0xc942), 0x44);
        // CB 44 01EA
        gbc.setState(0x7b85, 0x602a, 0xfc70, 0x9790, 0xe6e, 0x9b6d, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x602a);
        EXPECT(gbc.pc(), 0x7b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01EB
        gbc.setState(0xd6d5, 0xdff, 0xc690, 0xa94a, 0x646d, 0xf1a7, 0x1, 0x1);
        gbc.writeMem(0xd6d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xdff);
        EXPECT(gbc.pc(), 0xd6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6d5), 0xcb);
        EXPECT(gbc.readMem(0xd6d6), 0x44);
        // CB 44 01EC
        gbc.setState(0x9807, 0xee8e, 0xebe0, 0xdd47, 0xc52, 0x2858, 0x1, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xee8e);
        EXPECT(gbc.pc(), 0x9809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9807), 0xcb);
        EXPECT(gbc.readMem(0x9808), 0x44);
        // CB 44 01ED
        gbc.setState(0xbfc5, 0xd61, 0x33d0, 0xd55e, 0xfa36, 0x3c62, 0x1, 0x0);
        gbc.writeMem(0xbfc5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xd61);
        EXPECT(gbc.pc(), 0xbfc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc5), 0xcb);
        EXPECT(gbc.readMem(0xbfc6), 0x44);
        // CB 44 01EE
        gbc.setState(0x2498, 0xc9a9, 0xead0, 0x3b57, 0x599d, 0x11b0, 0x0, 0x1);
        gbc.writeMem(0x2498, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc9a9);
        EXPECT(gbc.pc(), 0x249a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01EF
        gbc.setState(0xdf2d, 0x49a1, 0xf2d0, 0xd6d8, 0x698b, 0xf0fd, 0x0, 0x0);
        gbc.writeMem(0xdf2d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x49a1);
        EXPECT(gbc.pc(), 0xdf2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2d), 0xcb);
        EXPECT(gbc.readMem(0xdf2e), 0x44);
        // CB 44 01F0
        gbc.setState(0x817, 0xbe44, 0x44c0, 0x6df3, 0x7b32, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbe44);
        EXPECT(gbc.pc(), 0x819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01F1
        gbc.setState(0x2cb2, 0x4cd5, 0x4a90, 0xc72b, 0xdc84, 0x5069, 0x0, 0x1);
        gbc.writeMem(0x2cb2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0x2cb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01F2
        gbc.setState(0x87dc, 0x3308, 0x91f0, 0xd748, 0x781b, 0x9d4f, 0x0, 0x1);
        gbc.writeMem(0x87dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x3308);
        EXPECT(gbc.pc(), 0x87de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87dc), 0xcb);
        EXPECT(gbc.readMem(0x87dd), 0x44);
        // CB 44 01F3
        gbc.setState(0x21d2, 0x337e, 0xa5d0, 0xff8e, 0x308, 0xae45, 0x1, 0x1);
        gbc.writeMem(0x21d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x337e);
        EXPECT(gbc.pc(), 0x21d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01F4
        gbc.setState(0x73f5, 0x312b, 0x96c0, 0xbb0e, 0x288d, 0xe2e6, 0x1, 0x0);
        gbc.writeMem(0x73f5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x312b);
        EXPECT(gbc.pc(), 0x73f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01F5
        gbc.setState(0xa2ca, 0xb2be, 0xe1c0, 0x10bf, 0x94d7, 0xe50b, 0x0, 0x0);
        gbc.writeMem(0xa2ca, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb2be);
        EXPECT(gbc.pc(), 0xa2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ca), 0xcb);
        EXPECT(gbc.readMem(0xa2cb), 0x44);
        // CB 44 01F6
        gbc.setState(0x796b, 0x431c, 0x5270, 0x1312, 0xe44f, 0xcfa4, 0x0, 0x0);
        gbc.writeMem(0x796b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x431c);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01F7
        gbc.setState(0x334e, 0xd817, 0x3e20, 0x6389, 0x2373, 0x15e1, 0x0, 0x0);
        gbc.writeMem(0x334e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd817);
        EXPECT(gbc.pc(), 0x3350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01F8
        gbc.setState(0x6aa, 0xb47f, 0x98b0, 0x5cd7, 0x943a, 0xbc62, 0x1, 0x1);
        gbc.writeMem(0x6aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb47f);
        EXPECT(gbc.pc(), 0x6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01F9
        gbc.setState(0x9ad8, 0xe59d, 0x3550, 0xe055, 0x7cb4, 0x242c, 0x0, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe59d);
        EXPECT(gbc.pc(), 0x9ada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad8), 0xcb);
        EXPECT(gbc.readMem(0x9ad9), 0x44);
        // CB 44 01FA
        gbc.setState(0x61ec, 0x9305, 0x1dc0, 0x1881, 0xabd9, 0x1172, 0x0, 0x0);
        gbc.writeMem(0x61ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9305);
        EXPECT(gbc.pc(), 0x61ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 01FB
        gbc.setState(0x9633, 0xdd2a, 0xc0a0, 0x61e4, 0xad53, 0xc667, 0x0, 0x0);
        gbc.writeMem(0x9633, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xdd2a);
        EXPECT(gbc.pc(), 0x9635);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9633), 0xcb);
        EXPECT(gbc.readMem(0x9634), 0x44);
        // CB 44 01FC
        gbc.setState(0xb185, 0x528b, 0x6040, 0x5473, 0xed97, 0xcea2, 0x1, 0x1);
        gbc.writeMem(0xb185, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x528b);
        EXPECT(gbc.pc(), 0xb187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb185), 0xcb);
        EXPECT(gbc.readMem(0xb186), 0x44);
        // CB 44 01FD
        gbc.setState(0xcb28, 0x3250, 0x9220, 0xd77a, 0x495d, 0x3457, 0x1, 0x0);
        gbc.writeMem(0xcb28, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3250);
        EXPECT(gbc.pc(), 0xcb2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb28), 0xcb);
        EXPECT(gbc.readMem(0xcb29), 0x44);
        // CB 44 01FE
        gbc.setState(0x3966, 0x9bd0, 0x93d0, 0x4400, 0xe294, 0x536f, 0x1, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9bd0);
        EXPECT(gbc.pc(), 0x3968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 01FF
        gbc.setState(0xdee7, 0x2ea2, 0xe820, 0xd40e, 0x5a40, 0x4e45, 0x1, 0x1);
        gbc.writeMem(0xdee7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2ea2);
        EXPECT(gbc.pc(), 0xdee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdee7), 0xcb);
        EXPECT(gbc.readMem(0xdee8), 0x44);
        // CB 44 0200
        gbc.setState(0x1a94, 0xfe05, 0x2090, 0xb921, 0x1a72, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0x1a94, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfe05);
        EXPECT(gbc.pc(), 0x1a96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0201
        gbc.setState(0x2c2, 0x971, 0xca50, 0x9c21, 0x8dec, 0x2b98, 0x1, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x971);
        EXPECT(gbc.pc(), 0x2c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0202
        gbc.setState(0x72ca, 0x2c36, 0xab50, 0xb247, 0x652b, 0xc505, 0x0, 0x1);
        gbc.writeMem(0x72ca, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2c36);
        EXPECT(gbc.pc(), 0x72cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0203
        gbc.setState(0xc02e, 0x7288, 0x8260, 0x1d11, 0xf4d5, 0x2859, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7288);
        EXPECT(gbc.pc(), 0xc030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc02e), 0xcb);
        EXPECT(gbc.readMem(0xc02f), 0x44);
        // CB 44 0204
        gbc.setState(0x2aa4, 0x7ed9, 0xd4b0, 0x4d36, 0xbd29, 0xd8a, 0x0, 0x0);
        gbc.writeMem(0x2aa4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0x2aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0205
        gbc.setState(0x56a, 0x13b3, 0x4ed0, 0x3ff4, 0x22ee, 0x9701, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x13b3);
        EXPECT(gbc.pc(), 0x56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0206
        gbc.setState(0xb76, 0xb206, 0xb000, 0x36e5, 0x4f3, 0xa1e, 0x1, 0x0);
        gbc.writeMem(0xb76, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb206);
        EXPECT(gbc.pc(), 0xb78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0208
        gbc.setState(0x3055, 0x2118, 0x40, 0x6efa, 0xd80c, 0xbba3, 0x0, 0x1);
        gbc.writeMem(0x3055, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2118);
        EXPECT(gbc.pc(), 0x3057);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0209
        gbc.setState(0x2ad2, 0x3d79, 0x8ed0, 0x2240, 0xdfd, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3d79);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 020A
        gbc.setState(0x3565, 0xac90, 0x64a0, 0x2405, 0x3319, 0x85dd, 0x1, 0x0);
        gbc.writeMem(0x3565, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xac90);
        EXPECT(gbc.pc(), 0x3567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 020B
        gbc.setState(0x4f3a, 0xf42e, 0xd690, 0x2751, 0x2239, 0x6c8c, 0x1, 0x1);
        gbc.writeMem(0x4f3a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf42e);
        EXPECT(gbc.pc(), 0x4f3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 020C
        gbc.setState(0x1334, 0xe019, 0x1840, 0x99f7, 0x2198, 0x348c, 0x0, 0x0);
        gbc.writeMem(0x1334, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe019);
        EXPECT(gbc.pc(), 0x1336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 020D
        gbc.setState(0xb0c2, 0x411, 0x74b0, 0x2e7a, 0x9a43, 0x4c9b, 0x0, 0x1);
        gbc.writeMem(0xb0c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x411);
        EXPECT(gbc.pc(), 0xb0c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c2), 0xcb);
        EXPECT(gbc.readMem(0xb0c3), 0x44);
        // CB 44 020E
        gbc.setState(0x5fb3, 0x4f41, 0x5460, 0x8ee6, 0x944a, 0x8836, 0x0, 0x1);
        gbc.writeMem(0x5fb3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4f41);
        EXPECT(gbc.pc(), 0x5fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 020F
        gbc.setState(0xa497, 0x2bf9, 0x8250, 0x2b86, 0x7106, 0x4bc6, 0x0, 0x0);
        gbc.writeMem(0xa497, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2bf9);
        EXPECT(gbc.pc(), 0xa499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa497), 0xcb);
        EXPECT(gbc.readMem(0xa498), 0x44);
        // CB 44 0210
        gbc.setState(0xd90c, 0xc17d, 0xf3e0, 0xafda, 0x6109, 0x4d98, 0x1, 0x1);
        gbc.writeMem(0xd90c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc17d);
        EXPECT(gbc.pc(), 0xd90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd90c), 0xcb);
        EXPECT(gbc.readMem(0xd90d), 0x44);
        // CB 44 0211
        gbc.setState(0xbdfe, 0x6dbb, 0x72b0, 0x535e, 0xac99, 0x3de1, 0x0, 0x0);
        gbc.writeMem(0xbdfe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6dbb);
        EXPECT(gbc.pc(), 0xbe00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfe), 0xcb);
        EXPECT(gbc.readMem(0xbdff), 0x44);
        // CB 44 0212
        gbc.setState(0x9cac, 0x6619, 0xd230, 0xa51a, 0xaf75, 0x5ee4, 0x0, 0x0);
        gbc.writeMem(0x9cac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6619);
        EXPECT(gbc.pc(), 0x9cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cac), 0xcb);
        EXPECT(gbc.readMem(0x9cad), 0x44);
        // CB 44 0213
        gbc.setState(0x800d, 0x1d47, 0xe2a0, 0x3b79, 0x5969, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0x800d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1d47);
        EXPECT(gbc.pc(), 0x800f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800d), 0xcb);
        EXPECT(gbc.readMem(0x800e), 0x44);
        // CB 44 0214
        gbc.setState(0xbe29, 0xed0c, 0x31f0, 0xebe, 0x221c, 0xa501, 0x0, 0x1);
        gbc.writeMem(0xbe29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xed0c);
        EXPECT(gbc.pc(), 0xbe2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe29), 0xcb);
        EXPECT(gbc.readMem(0xbe2a), 0x44);
        // CB 44 0215
        gbc.setState(0x27ba, 0x8c86, 0x1f60, 0xa67c, 0x6e62, 0x10cd, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8c86);
        EXPECT(gbc.pc(), 0x27bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0216
        gbc.setState(0x6f61, 0xa6ba, 0xe5e0, 0x48d8, 0x7973, 0xfe52, 0x1, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa6ba);
        EXPECT(gbc.pc(), 0x6f63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0217
        gbc.setState(0xd8ee, 0xc915, 0xeb00, 0x9fa, 0x4d00, 0xf060, 0x1, 0x0);
        gbc.writeMem(0xd8ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc915);
        EXPECT(gbc.pc(), 0xd8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ee), 0xcb);
        EXPECT(gbc.readMem(0xd8ef), 0x44);
        // CB 44 0218
        gbc.setState(0x54d5, 0xf49f, 0xd90, 0x6587, 0x5147, 0xd3a5, 0x0, 0x1);
        gbc.writeMem(0x54d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf49f);
        EXPECT(gbc.pc(), 0x54d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 021A
        gbc.setState(0x7359, 0x3a8, 0xdd50, 0x270b, 0x23a8, 0xc528, 0x1, 0x1);
        gbc.writeMem(0x7359, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3a8);
        EXPECT(gbc.pc(), 0x735b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 021B
        gbc.setState(0x2375, 0x84c, 0xbfe0, 0x9188, 0xda8f, 0xcf88, 0x0, 0x0);
        gbc.writeMem(0x2375, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x84c);
        EXPECT(gbc.pc(), 0x2377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 021C
        gbc.setState(0x7e44, 0xb16d, 0xc400, 0xb3b9, 0x2689, 0xbb87, 0x1, 0x0);
        gbc.writeMem(0x7e44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xb16d);
        EXPECT(gbc.pc(), 0x7e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 021D
        gbc.setState(0x2f23, 0x1d21, 0x410, 0x9d6a, 0x6bfe, 0xdbe5, 0x1, 0x0);
        gbc.writeMem(0x2f23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1d21);
        EXPECT(gbc.pc(), 0x2f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 021E
        gbc.setState(0x5387, 0x6ffd, 0x3a10, 0x9136, 0x66b9, 0x9657, 0x1, 0x1);
        gbc.writeMem(0x5387, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6ffd);
        EXPECT(gbc.pc(), 0x5389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 021F
        gbc.setState(0x648, 0xcb52, 0x1b50, 0x91d8, 0xd2c1, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0x648, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcb52);
        EXPECT(gbc.pc(), 0x64a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0220
        gbc.setState(0x499f, 0x2cc, 0xdff0, 0x69d1, 0xa28, 0x70e8, 0x0, 0x1);
        gbc.writeMem(0x499f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x2cc);
        EXPECT(gbc.pc(), 0x49a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0221
        gbc.setState(0x5b17, 0x1b65, 0x8680, 0xb282, 0x857c, 0xb98c, 0x0, 0x1);
        gbc.writeMem(0x5b17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1b65);
        EXPECT(gbc.pc(), 0x5b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0222
        gbc.setState(0x7e7, 0x6cd3, 0xd7d0, 0xa962, 0xa7f5, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0x7e7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6cd3);
        EXPECT(gbc.pc(), 0x7e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0223
        gbc.setState(0x69a1, 0x43f, 0xb9c0, 0x1726, 0x8518, 0xd8a0, 0x0, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x43f);
        EXPECT(gbc.pc(), 0x69a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0224
        gbc.setState(0x4c0a, 0x4266, 0x5020, 0x8a0, 0xd52a, 0xe2c1, 0x1, 0x1);
        gbc.writeMem(0x4c0a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4266);
        EXPECT(gbc.pc(), 0x4c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0225
        gbc.setState(0x5715, 0x355d, 0xeb50, 0x910b, 0xbe2, 0xa87b, 0x1, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x355d);
        EXPECT(gbc.pc(), 0x5717);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0226
        gbc.setState(0x3849, 0xf329, 0x13c0, 0x4f0c, 0xaeda, 0x6a89, 0x0, 0x0);
        gbc.writeMem(0x3849, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xf329);
        EXPECT(gbc.pc(), 0x384b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0227
        gbc.setState(0xe64f, 0xf610, 0x77e0, 0x2c90, 0xcc93, 0xeb61, 0x0, 0x1);
        gbc.writeMem(0xe64f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf610);
        EXPECT(gbc.pc(), 0xe651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64f), 0xcb);
        EXPECT(gbc.readMem(0xe650), 0x44);
        // CB 44 0228
        gbc.setState(0x210e, 0xe033, 0x3100, 0xf288, 0x1e7d, 0xb5eb, 0x0, 0x1);
        gbc.writeMem(0x210e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe033);
        EXPECT(gbc.pc(), 0x2110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0229
        gbc.setState(0x4726, 0xcbbb, 0xd5d0, 0x942b, 0x3022, 0x959b, 0x0, 0x0);
        gbc.writeMem(0x4726, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcbbb);
        EXPECT(gbc.pc(), 0x4728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 022A
        gbc.setState(0x96ae, 0xdc17, 0x2ca0, 0x5a83, 0x3a31, 0xd40, 0x1, 0x0);
        gbc.writeMem(0x96ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdc17);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0x44);
        // CB 44 022B
        gbc.setState(0x4d8e, 0xb75e, 0x8670, 0x5415, 0x6d27, 0x6256, 0x0, 0x0);
        gbc.writeMem(0x4d8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb75e);
        EXPECT(gbc.pc(), 0x4d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 022C
        gbc.setState(0x5723, 0x6b6d, 0x7cb0, 0x165a, 0xa143, 0x9a39, 0x0, 0x0);
        gbc.writeMem(0x5723, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x6b6d);
        EXPECT(gbc.pc(), 0x5725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 022D
        gbc.setState(0xafd9, 0x73ed, 0xbb80, 0xd4d7, 0x9e62, 0xcb7e, 0x1, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x73ed);
        EXPECT(gbc.pc(), 0xafdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd9), 0xcb);
        EXPECT(gbc.readMem(0xafda), 0x44);
        // CB 44 022E
        gbc.setState(0x61a1, 0xae3c, 0x5c20, 0x780d, 0x3c79, 0xe3ff, 0x1, 0x0);
        gbc.writeMem(0x61a1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xae3c);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 022F
        gbc.setState(0x958a, 0xd76d, 0x7550, 0x142c, 0x7ace, 0x3fb6, 0x1, 0x0);
        gbc.writeMem(0x958a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd76d);
        EXPECT(gbc.pc(), 0x958c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x958a), 0xcb);
        EXPECT(gbc.readMem(0x958b), 0x44);
        // CB 44 0230
        gbc.setState(0xc8aa, 0x3ac3, 0x6710, 0xfe6d, 0xac98, 0xd84e, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x3ac3);
        EXPECT(gbc.pc(), 0xc8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8aa), 0xcb);
        EXPECT(gbc.readMem(0xc8ab), 0x44);
        // CB 44 0231
        gbc.setState(0x7373, 0x5bbc, 0xce70, 0xe0e4, 0xb551, 0x17d0, 0x0, 0x0);
        gbc.writeMem(0x7373, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5bbc);
        EXPECT(gbc.pc(), 0x7375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0232
        gbc.setState(0x1948, 0x963b, 0xdb80, 0x24c7, 0x8a65, 0x5e60, 0x0, 0x1);
        gbc.writeMem(0x1948, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x963b);
        EXPECT(gbc.pc(), 0x194a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0233
        gbc.setState(0xd18f, 0xd77c, 0x230, 0x6c54, 0x1bc6, 0x33e1, 0x0, 0x1);
        gbc.writeMem(0xd18f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd77c);
        EXPECT(gbc.pc(), 0xd191);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd18f), 0xcb);
        EXPECT(gbc.readMem(0xd190), 0x44);
        // CB 44 0234
        gbc.setState(0x459c, 0x885d, 0x9b00, 0xf5c8, 0xe661, 0x1898, 0x1, 0x1);
        gbc.writeMem(0x459c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x885d);
        EXPECT(gbc.pc(), 0x459e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0235
        gbc.setState(0x7fdb, 0x9ccb, 0xb740, 0xc2b8, 0xa618, 0x9184, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0236
        gbc.setState(0xcd9a, 0xa6af, 0xdb70, 0x1d25, 0x4f8d, 0x24a4, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa6af);
        EXPECT(gbc.pc(), 0xcd9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9a), 0xcb);
        EXPECT(gbc.readMem(0xcd9b), 0x44);
        // CB 44 0237
        gbc.setState(0x658e, 0x526f, 0xfc20, 0x6249, 0xde58, 0xfb1d, 0x1, 0x0);
        gbc.writeMem(0x658e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x526f);
        EXPECT(gbc.pc(), 0x6590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0238
        gbc.setState(0xde7a, 0x82f1, 0xc150, 0xd405, 0xcacc, 0xf51f, 0x0, 0x1);
        gbc.writeMem(0xde7a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x82f1);
        EXPECT(gbc.pc(), 0xde7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde7a), 0xcb);
        EXPECT(gbc.readMem(0xde7b), 0x44);
        // CB 44 0239
        gbc.setState(0xa0f9, 0x9a36, 0x1490, 0x6003, 0xe41e, 0x322e, 0x1, 0x0);
        gbc.writeMem(0xa0f9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9a36);
        EXPECT(gbc.pc(), 0xa0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f9), 0xcb);
        EXPECT(gbc.readMem(0xa0fa), 0x44);
        // CB 44 023A
        gbc.setState(0x143f, 0x3833, 0xd950, 0x8b92, 0x691d, 0x8995, 0x0, 0x1);
        gbc.writeMem(0x143f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3833);
        EXPECT(gbc.pc(), 0x1441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 023B
        gbc.setState(0x9705, 0x2fd3, 0x4590, 0xe8ce, 0x4190, 0x8169, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2fd3);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9705), 0xcb);
        EXPECT(gbc.readMem(0x9706), 0x44);
        // CB 44 023C
        gbc.setState(0x7719, 0xfeac, 0x6a50, 0x70d6, 0x869b, 0xb8a0, 0x0, 0x1);
        gbc.writeMem(0x7719, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xfeac);
        EXPECT(gbc.pc(), 0x771b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 023D
        gbc.setState(0x7882, 0x990c, 0x1db0, 0xdf80, 0xe151, 0x4e26, 0x0, 0x0);
        gbc.writeMem(0x7882, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x990c);
        EXPECT(gbc.pc(), 0x7884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 023E
        gbc.setState(0xf30, 0xae57, 0x94e0, 0xc712, 0x9ffa, 0x4732, 0x0, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xae57);
        EXPECT(gbc.pc(), 0xf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 023F
        gbc.setState(0x45f3, 0x7b02, 0xdaa0, 0xc0bf, 0xcaa1, 0xa0a3, 0x0, 0x0);
        gbc.writeMem(0x45f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7b02);
        EXPECT(gbc.pc(), 0x45f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0240
        gbc.setState(0xbd5e, 0x4351, 0xc390, 0xf1a, 0x3cfd, 0xb62d, 0x0, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4351);
        EXPECT(gbc.pc(), 0xbd60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5e), 0xcb);
        EXPECT(gbc.readMem(0xbd5f), 0x44);
        // CB 44 0241
        gbc.setState(0x4876, 0x162d, 0xe1b0, 0xb8f3, 0x6aa4, 0x3960, 0x1, 0x1);
        gbc.writeMem(0x4876, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x162d);
        EXPECT(gbc.pc(), 0x4878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0242
        gbc.setState(0xb15b, 0x1c4a, 0xf7d0, 0x6eba, 0xd163, 0x294a, 0x1, 0x0);
        gbc.writeMem(0xb15b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1c4a);
        EXPECT(gbc.pc(), 0xb15d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15b), 0xcb);
        EXPECT(gbc.readMem(0xb15c), 0x44);
        // CB 44 0243
        gbc.setState(0x1667, 0x338b, 0xab80, 0x5ad7, 0xdcbc, 0x1e88, 0x0, 0x1);
        gbc.writeMem(0x1667, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x338b);
        EXPECT(gbc.pc(), 0x1669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0244
        gbc.setState(0xf5e, 0x67a2, 0x4090, 0x3a1, 0xbc5e, 0x53ae, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x67a2);
        EXPECT(gbc.pc(), 0xf60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0246
        gbc.setState(0xa4ea, 0x6b19, 0xf10, 0x3be7, 0xf0d0, 0x29db, 0x1, 0x0);
        gbc.writeMem(0xa4ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6b19);
        EXPECT(gbc.pc(), 0xa4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ea), 0xcb);
        EXPECT(gbc.readMem(0xa4eb), 0x44);
        // CB 44 0247
        gbc.setState(0xa594, 0x8585, 0xa6b0, 0x3c5f, 0x6304, 0xc9d8, 0x0, 0x0);
        gbc.writeMem(0xa594, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8585);
        EXPECT(gbc.pc(), 0xa596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa594), 0xcb);
        EXPECT(gbc.readMem(0xa595), 0x44);
        // CB 44 0248
        gbc.setState(0xe1ac, 0x4102, 0x5900, 0x96cc, 0x35fb, 0x904e, 0x1, 0x0);
        gbc.writeMem(0xe1ac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4102);
        EXPECT(gbc.pc(), 0xe1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1ac), 0xcb);
        EXPECT(gbc.readMem(0xe1ad), 0x44);
        // CB 44 0249
        gbc.setState(0xb98, 0xb711, 0xae20, 0xd0f4, 0xc7f2, 0xa862, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb711);
        EXPECT(gbc.pc(), 0xb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 024A
        gbc.setState(0x1b8, 0xddd7, 0x4640, 0x6b9b, 0x21e5, 0x91b5, 0x1, 0x1);
        gbc.writeMem(0x1b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xddd7);
        EXPECT(gbc.pc(), 0x1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 024B
        gbc.setState(0xeb0, 0xe674, 0x8100, 0x9e40, 0x260a, 0xe8d7, 0x1, 0x1);
        gbc.writeMem(0xeb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe674);
        EXPECT(gbc.pc(), 0xeb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 024C
        gbc.setState(0xe6e3, 0xe7a7, 0xc990, 0x3f1d, 0x8690, 0x175c, 0x0, 0x1);
        gbc.writeMem(0xe6e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe7a7);
        EXPECT(gbc.pc(), 0xe6e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6e3), 0xcb);
        EXPECT(gbc.readMem(0xe6e4), 0x44);
        // CB 44 024D
        gbc.setState(0x4645, 0xbfdb, 0xe120, 0xd96f, 0x521a, 0xaea2, 0x1, 0x1);
        gbc.writeMem(0x4645, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbfdb);
        EXPECT(gbc.pc(), 0x4647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 024E
        gbc.setState(0xb22b, 0xd7b2, 0xdb50, 0xa7ce, 0x437c, 0x8496, 0x0, 0x0);
        gbc.writeMem(0xb22b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd7b2);
        EXPECT(gbc.pc(), 0xb22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb22b), 0xcb);
        EXPECT(gbc.readMem(0xb22c), 0x44);
        // CB 44 024F
        gbc.setState(0x9f7b, 0xe7bd, 0x4190, 0x4aea, 0x708e, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe7bd);
        EXPECT(gbc.pc(), 0x9f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        EXPECT(gbc.readMem(0x9f7c), 0x44);
        // CB 44 0251
        gbc.setState(0xe652, 0x8179, 0x5750, 0x7574, 0xa3c5, 0x4959, 0x1, 0x0);
        gbc.writeMem(0xe652, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8179);
        EXPECT(gbc.pc(), 0xe654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe652), 0xcb);
        EXPECT(gbc.readMem(0xe653), 0x44);
        // CB 44 0252
        gbc.setState(0x3fb0, 0xc7bd, 0xea40, 0x8a26, 0x39b8, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x3fb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc7bd);
        EXPECT(gbc.pc(), 0x3fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0254
        gbc.setState(0x6656, 0x17bd, 0x8790, 0x261f, 0x7dbf, 0x5053, 0x1, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x17bd);
        EXPECT(gbc.pc(), 0x6658);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0255
        gbc.setState(0xe990, 0x69e, 0xf210, 0x8358, 0x3708, 0xdb4b, 0x1, 0x1);
        gbc.writeMem(0xe990, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x69e);
        EXPECT(gbc.pc(), 0xe992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe990), 0xcb);
        EXPECT(gbc.readMem(0xe991), 0x44);
        // CB 44 0256
        gbc.setState(0xc701, 0xcd2c, 0x5360, 0xde60, 0x14e0, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0xc701, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcd2c);
        EXPECT(gbc.pc(), 0xc703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc701), 0xcb);
        EXPECT(gbc.readMem(0xc702), 0x44);
        // CB 44 0257
        gbc.setState(0x2a4d, 0xfbf4, 0x350, 0xa72, 0xd688, 0xbdf7, 0x1, 0x0);
        gbc.writeMem(0x2a4d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfbf4);
        EXPECT(gbc.pc(), 0x2a4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0259
        gbc.setState(0x2e18, 0x60f9, 0x37d0, 0xf9a5, 0x7388, 0x568e, 0x0, 0x1);
        gbc.writeMem(0x2e18, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x60f9);
        EXPECT(gbc.pc(), 0x2e1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 025A
        gbc.setState(0x6a4, 0x3181, 0xd8c0, 0xe852, 0x63ff, 0x9cba, 0x1, 0x1);
        gbc.writeMem(0x6a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3181);
        EXPECT(gbc.pc(), 0x6a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 025B
        gbc.setState(0x8a4a, 0x3a4e, 0xb4f0, 0x39fb, 0xa09e, 0x2c0a, 0x1, 0x1);
        gbc.writeMem(0x8a4a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3a4e);
        EXPECT(gbc.pc(), 0x8a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a4a), 0xcb);
        EXPECT(gbc.readMem(0x8a4b), 0x44);
        // CB 44 025C
        gbc.setState(0x226d, 0x850d, 0xc890, 0x42ac, 0xd9ec, 0xa19b, 0x1, 0x1);
        gbc.writeMem(0x226d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x226f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 025D
        gbc.setState(0x209e, 0xbe9e, 0xc7d0, 0xd749, 0x12e5, 0xd14d, 0x1, 0x0);
        gbc.writeMem(0x209e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xbe9e);
        EXPECT(gbc.pc(), 0x20a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 025E
        gbc.setState(0x2fab, 0xe505, 0xd6e0, 0x2cb5, 0x63d, 0x9b52, 0x0, 0x0);
        gbc.writeMem(0x2fab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe505);
        EXPECT(gbc.pc(), 0x2fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 025F
        gbc.setState(0x66fe, 0xdf8c, 0x7850, 0x86ac, 0x2aeb, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0x66fe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdf8c);
        EXPECT(gbc.pc(), 0x6700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0260
        gbc.setState(0xa116, 0xb7c6, 0xbb0, 0x90a3, 0xd1eb, 0xa778, 0x1, 0x0);
        gbc.writeMem(0xa116, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb7c6);
        EXPECT(gbc.pc(), 0xa118);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa116), 0xcb);
        EXPECT(gbc.readMem(0xa117), 0x44);
        // CB 44 0261
        gbc.setState(0x8944, 0x2e60, 0xad90, 0x806a, 0x470c, 0x8385, 0x0, 0x1);
        gbc.writeMem(0x8944, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2e60);
        EXPECT(gbc.pc(), 0x8946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8944), 0xcb);
        EXPECT(gbc.readMem(0x8945), 0x44);
        // CB 44 0262
        gbc.setState(0x6d9d, 0xbd1a, 0x6f40, 0xd1e0, 0xfc5, 0x887d, 0x1, 0x1);
        gbc.writeMem(0x6d9d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbd1a);
        EXPECT(gbc.pc(), 0x6d9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0263
        gbc.setState(0x8db0, 0x7b41, 0x5870, 0x8700, 0xf7b9, 0xef8a, 0x0, 0x1);
        gbc.writeMem(0x8db0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7b41);
        EXPECT(gbc.pc(), 0x8db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8db0), 0xcb);
        EXPECT(gbc.readMem(0x8db1), 0x44);
        // CB 44 0264
        gbc.setState(0x7be0, 0xa898, 0xdae0, 0xff82, 0xc67a, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa898);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0265
        gbc.setState(0x1eae, 0x4f4b, 0x120, 0x8e92, 0x9d08, 0x71fd, 0x1, 0x1);
        gbc.writeMem(0x1eae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4f4b);
        EXPECT(gbc.pc(), 0x1eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0266
        gbc.setState(0x2a45, 0xc424, 0x77d0, 0x3dea, 0xff96, 0xccb, 0x0, 0x1);
        gbc.writeMem(0x2a45, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc424);
        EXPECT(gbc.pc(), 0x2a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0267
        gbc.setState(0x6f91, 0x3f03, 0xd80, 0xd8ae, 0x8ca0, 0xd90d, 0x0, 0x1);
        gbc.writeMem(0x6f91, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x3f03);
        EXPECT(gbc.pc(), 0x6f93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0268
        gbc.setState(0xb0, 0xaf09, 0xb360, 0x73cc, 0xcb9d, 0x5f04, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xaf09);
        EXPECT(gbc.pc(), 0xb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0269
        gbc.setState(0x6768, 0xb1e5, 0xd460, 0x7aff, 0x18d4, 0x2543, 0x0, 0x0);
        gbc.writeMem(0x6768, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0x676a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 026A
        gbc.setState(0x644b, 0xe5da, 0x4fc0, 0x464a, 0xe4c6, 0x4a0a, 0x0, 0x0);
        gbc.writeMem(0x644b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe5da);
        EXPECT(gbc.pc(), 0x644d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 026B
        gbc.setState(0xce53, 0x1580, 0x7cb0, 0x97ba, 0x5fb2, 0x5aad, 0x0, 0x0);
        gbc.writeMem(0xce53, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1580);
        EXPECT(gbc.pc(), 0xce55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce53), 0xcb);
        EXPECT(gbc.readMem(0xce54), 0x44);
        // CB 44 026C
        gbc.setState(0xb1de, 0x720e, 0xc890, 0x7502, 0x1566, 0x965c, 0x0, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x720e);
        EXPECT(gbc.pc(), 0xb1e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1de), 0xcb);
        EXPECT(gbc.readMem(0xb1df), 0x44);
        // CB 44 026D
        gbc.setState(0x1853, 0xa477, 0xfb00, 0x714c, 0xbff0, 0xf66, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xa477);
        EXPECT(gbc.pc(), 0x1855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 026E
        gbc.setState(0xe152, 0x37b1, 0x9cd0, 0xd239, 0xae9, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xe152, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x37b1);
        EXPECT(gbc.pc(), 0xe154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe152), 0xcb);
        EXPECT(gbc.readMem(0xe153), 0x44);
        // CB 44 026F
        gbc.setState(0x4643, 0xd1a, 0x2740, 0xc018, 0x1802, 0x2bb0, 0x1, 0x0);
        gbc.writeMem(0x4643, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xd1a);
        EXPECT(gbc.pc(), 0x4645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0270
        gbc.setState(0x6428, 0x7c87, 0xd8e0, 0xe05f, 0x3927, 0xbb3d, 0x1, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7c87);
        EXPECT(gbc.pc(), 0x642a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0271
        gbc.setState(0x6b90, 0x1c1e, 0x7360, 0x370f, 0xb656, 0x8ca, 0x0, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1c1e);
        EXPECT(gbc.pc(), 0x6b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0272
        gbc.setState(0x909a, 0x6df7, 0x24d0, 0x5f8b, 0xcf79, 0x7fac, 0x0, 0x1);
        gbc.writeMem(0x909a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6df7);
        EXPECT(gbc.pc(), 0x909c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x909a), 0xcb);
        EXPECT(gbc.readMem(0x909b), 0x44);
        // CB 44 0273
        gbc.setState(0xe0a9, 0xc8da, 0x2530, 0x4e4c, 0x2bae, 0x7e0a, 0x1, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc8da);
        EXPECT(gbc.pc(), 0xe0ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a9), 0xcb);
        EXPECT(gbc.readMem(0xe0aa), 0x44);
        // CB 44 0274
        gbc.setState(0x4398, 0x4373, 0x4b10, 0xd95, 0xfe07, 0x10c3, 0x1, 0x0);
        gbc.writeMem(0x4398, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4373);
        EXPECT(gbc.pc(), 0x439a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0275
        gbc.setState(0xedd4, 0x6457, 0xc620, 0x9ab0, 0x924b, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0xedd4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6457);
        EXPECT(gbc.pc(), 0xedd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd4), 0xcb);
        EXPECT(gbc.readMem(0xedd5), 0x44);
        // CB 44 0276
        gbc.setState(0xbcba, 0x1d06, 0xc970, 0xd31c, 0xcad6, 0x80a2, 0x0, 0x1);
        gbc.writeMem(0xbcba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1d06);
        EXPECT(gbc.pc(), 0xbcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcba), 0xcb);
        EXPECT(gbc.readMem(0xbcbb), 0x44);
        // CB 44 0277
        gbc.setState(0x2754, 0xa251, 0x7530, 0x5c83, 0xbdc7, 0xc3e0, 0x1, 0x1);
        gbc.writeMem(0x2754, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa251);
        EXPECT(gbc.pc(), 0x2756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0279
        gbc.setState(0x8a40, 0x28f7, 0x1e60, 0x2e80, 0x67a8, 0x16b6, 0x1, 0x0);
        gbc.writeMem(0x8a40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x28f7);
        EXPECT(gbc.pc(), 0x8a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a40), 0xcb);
        EXPECT(gbc.readMem(0x8a41), 0x44);
        // CB 44 027A
        gbc.setState(0x3059, 0x4157, 0x4270, 0xd9ad, 0x234e, 0x2370, 0x0, 0x0);
        gbc.writeMem(0x3059, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4157);
        EXPECT(gbc.pc(), 0x305b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 027B
        gbc.setState(0x81cf, 0xd4f8, 0x8010, 0x7925, 0x6101, 0x256e, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd4f8);
        EXPECT(gbc.pc(), 0x81d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81cf), 0xcb);
        EXPECT(gbc.readMem(0x81d0), 0x44);
        // CB 44 027D
        gbc.setState(0x63c6, 0x7b64, 0xf720, 0xf916, 0x2e0a, 0x4cc, 0x1, 0x1);
        gbc.writeMem(0x63c6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7b64);
        EXPECT(gbc.pc(), 0x63c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 027E
        gbc.setState(0x9844, 0x6c10, 0x7be0, 0x1f11, 0x334b, 0x384f, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6c10);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9844), 0xcb);
        EXPECT(gbc.readMem(0x9845), 0x44);
        // CB 44 027F
        gbc.setState(0x6f02, 0xf754, 0x3590, 0x890d, 0x2c24, 0xab68, 0x0, 0x1);
        gbc.writeMem(0x6f02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf754);
        EXPECT(gbc.pc(), 0x6f04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0281
        gbc.setState(0x2b54, 0x5dc4, 0xf090, 0xd1ce, 0xabe9, 0x9abb, 0x0, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5dc4);
        EXPECT(gbc.pc(), 0x2b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0282
        gbc.setState(0xf59, 0xc986, 0x9800, 0x42a2, 0x91e7, 0x47c9, 0x1, 0x1);
        gbc.writeMem(0xf59, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc986);
        EXPECT(gbc.pc(), 0xf5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0283
        gbc.setState(0x43be, 0x83a1, 0x1280, 0x1c6, 0xfc5e, 0x5a33, 0x0, 0x0);
        gbc.writeMem(0x43be, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x83a1);
        EXPECT(gbc.pc(), 0x43c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0284
        gbc.setState(0x415b, 0x5108, 0x5be0, 0x3ef9, 0xa595, 0xc50, 0x1, 0x1);
        gbc.writeMem(0x415b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5108);
        EXPECT(gbc.pc(), 0x415d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0285
        gbc.setState(0xee5, 0x78cf, 0x59b0, 0x9e4e, 0xc1c3, 0x2c05, 0x1, 0x0);
        gbc.writeMem(0xee5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x78cf);
        EXPECT(gbc.pc(), 0xee7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0286
        gbc.setState(0x6040, 0xe2c2, 0xcf20, 0xe784, 0xb4e2, 0x24f4, 0x1, 0x1);
        gbc.writeMem(0x6040, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe2c2);
        EXPECT(gbc.pc(), 0x6042);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0287
        gbc.setState(0x1fdd, 0xef4c, 0x970, 0xbc83, 0xba6f, 0x1ae9, 0x1, 0x0);
        gbc.writeMem(0x1fdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xef4c);
        EXPECT(gbc.pc(), 0x1fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0288
        gbc.setState(0xa377, 0xbc50, 0x50c0, 0xc321, 0xebda, 0xa9a, 0x0, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbc50);
        EXPECT(gbc.pc(), 0xa379);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa377), 0xcb);
        EXPECT(gbc.readMem(0xa378), 0x44);
        // CB 44 0289
        gbc.setState(0x802e, 0xee9d, 0x63c0, 0xf18c, 0x6f5e, 0x3fc6, 0x1, 0x1);
        gbc.writeMem(0x802e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xee9d);
        EXPECT(gbc.pc(), 0x8030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x802e), 0xcb);
        EXPECT(gbc.readMem(0x802f), 0x44);
        // CB 44 028A
        gbc.setState(0xe581, 0xd026, 0x8390, 0x2fbb, 0x1b01, 0x9653, 0x1, 0x1);
        gbc.writeMem(0xe581, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd026);
        EXPECT(gbc.pc(), 0xe583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe581), 0xcb);
        EXPECT(gbc.readMem(0xe582), 0x44);
        // CB 44 028D
        gbc.setState(0x6e53, 0xd86, 0xd6d0, 0x4e9c, 0x8fe2, 0x1ea0, 0x1, 0x1);
        gbc.writeMem(0x6e53, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd86);
        EXPECT(gbc.pc(), 0x6e55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 028E
        gbc.setState(0x4b1a, 0xd9e5, 0xa980, 0xf779, 0x893f, 0xdabb, 0x0, 0x1);
        gbc.writeMem(0x4b1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd9e5);
        EXPECT(gbc.pc(), 0x4b1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 028F
        gbc.setState(0x4c89, 0x35b2, 0xecd0, 0xd3ff, 0x35f, 0xd721, 0x0, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x35b2);
        EXPECT(gbc.pc(), 0x4c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0290
        gbc.setState(0x6540, 0x13d4, 0x25b0, 0x4943, 0x2c68, 0x1f83, 0x1, 0x0);
        gbc.writeMem(0x6540, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x13d4);
        EXPECT(gbc.pc(), 0x6542);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0291
        gbc.setState(0xecc6, 0xfe15, 0x3e50, 0x4f9d, 0x2d70, 0xfeed, 0x0, 0x1);
        gbc.writeMem(0xecc6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfe15);
        EXPECT(gbc.pc(), 0xecc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc6), 0xcb);
        EXPECT(gbc.readMem(0xecc7), 0x44);
        // CB 44 0292
        gbc.setState(0xe1d6, 0xdad1, 0x21d0, 0x2fce, 0x5e6a, 0x2eca, 0x0, 0x0);
        gbc.writeMem(0xe1d6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xdad1);
        EXPECT(gbc.pc(), 0xe1d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1d6), 0xcb);
        EXPECT(gbc.readMem(0xe1d7), 0x44);
        // CB 44 0293
        gbc.setState(0xe300, 0x8f27, 0xf5d0, 0x3e2f, 0x9204, 0xfe92, 0x0, 0x1);
        gbc.writeMem(0xe300, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x8f27);
        EXPECT(gbc.pc(), 0xe302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0xcb);
        EXPECT(gbc.readMem(0xe301), 0x44);
        // CB 44 0294
        gbc.setState(0x1c13, 0xf554, 0x5bc0, 0x566f, 0xe01, 0x6a79, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf554);
        EXPECT(gbc.pc(), 0x1c15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0295
        gbc.setState(0x2912, 0x1dfe, 0x78f0, 0xd3bb, 0x1e44, 0xe877, 0x0, 0x0);
        gbc.writeMem(0x2912, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1dfe);
        EXPECT(gbc.pc(), 0x2914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0296
        gbc.setState(0x68ba, 0xb7d9, 0x88b0, 0x5b4b, 0x18b6, 0xacd, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb7d9);
        EXPECT(gbc.pc(), 0x68bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0297
        gbc.setState(0xb8d9, 0xa25, 0xad0, 0xecfd, 0xa39e, 0xec12, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0xb8db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d9), 0xcb);
        EXPECT(gbc.readMem(0xb8da), 0x44);
        // CB 44 0298
        gbc.setState(0x1243, 0xd7bc, 0xbb20, 0x9e19, 0x86fb, 0xabc4, 0x0, 0x0);
        gbc.writeMem(0x1243, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0x1245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0299
        gbc.setState(0xc6e3, 0xfbd1, 0x9c30, 0x2df, 0x4c29, 0xb3b, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xfbd1);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e3), 0xcb);
        EXPECT(gbc.readMem(0xc6e4), 0x44);
        // CB 44 029A
        gbc.setState(0xa1f, 0x66a1, 0xe650, 0xffb2, 0x3fb7, 0x35d1, 0x1, 0x0);
        gbc.writeMem(0xa1f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x66a1);
        EXPECT(gbc.pc(), 0xa21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 029C
        gbc.setState(0x8c40, 0x18ec, 0xc020, 0xd831, 0xd709, 0xebe5, 0x1, 0x0);
        gbc.writeMem(0x8c40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x8c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c40), 0xcb);
        EXPECT(gbc.readMem(0x8c41), 0x44);
        // CB 44 029D
        gbc.setState(0x70e6, 0x8ef6, 0xb310, 0xa73f, 0x8ca4, 0xb23c, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8ef6);
        EXPECT(gbc.pc(), 0x70e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 029E
        gbc.setState(0x54a8, 0xf58, 0xfcd0, 0x5b4e, 0x757a, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x54a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 029F
        gbc.setState(0x40d7, 0xb35e, 0x6ef0, 0x36c9, 0x1a0c, 0xa948, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb35e);
        EXPECT(gbc.pc(), 0x40d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02A0
        gbc.setState(0x38ec, 0xb2e5, 0xb590, 0x4296, 0x728f, 0xed11, 0x1, 0x1);
        gbc.writeMem(0x38ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb2e5);
        EXPECT(gbc.pc(), 0x38ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02A1
        gbc.setState(0xb0d2, 0x3e67, 0x8a80, 0xa427, 0x3ba8, 0x7382, 0x1, 0x0);
        gbc.writeMem(0xb0d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3e67);
        EXPECT(gbc.pc(), 0xb0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d2), 0xcb);
        EXPECT(gbc.readMem(0xb0d3), 0x44);
        // CB 44 02A2
        gbc.setState(0xdea0, 0x19ff, 0xe910, 0x6280, 0x1c05, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0xdea0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x19ff);
        EXPECT(gbc.pc(), 0xdea2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdea0), 0xcb);
        EXPECT(gbc.readMem(0xdea1), 0x44);
        // CB 44 02A3
        gbc.setState(0xb3e3, 0x2b21, 0xabd0, 0xda4c, 0xb924, 0xfc25, 0x1, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2b21);
        EXPECT(gbc.pc(), 0xb3e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e3), 0xcb);
        EXPECT(gbc.readMem(0xb3e4), 0x44);
        // CB 44 02A4
        gbc.setState(0x5d67, 0x7042, 0x4460, 0x961e, 0xb0a1, 0xbf27, 0x1, 0x0);
        gbc.writeMem(0x5d67, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7042);
        EXPECT(gbc.pc(), 0x5d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02A5
        gbc.setState(0x3d89, 0xb7cc, 0x6340, 0xe40, 0x4bb, 0x208c, 0x0, 0x1);
        gbc.writeMem(0x3d89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb7cc);
        EXPECT(gbc.pc(), 0x3d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02A6
        gbc.setState(0xa1a0, 0x7f85, 0xd190, 0xd637, 0xcd05, 0x953c, 0x1, 0x1);
        gbc.writeMem(0xa1a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x7f85);
        EXPECT(gbc.pc(), 0xa1a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1a0), 0xcb);
        EXPECT(gbc.readMem(0xa1a1), 0x44);
        // CB 44 02A7
        gbc.setState(0xa2e6, 0x8e10, 0x2e60, 0x6633, 0x51cc, 0xccc4, 0x1, 0x1);
        gbc.writeMem(0xa2e6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8e10);
        EXPECT(gbc.pc(), 0xa2e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e6), 0xcb);
        EXPECT(gbc.readMem(0xa2e7), 0x44);
        // CB 44 02A8
        gbc.setState(0x833c, 0x18ec, 0xbcf0, 0x3a28, 0x5157, 0xaf7d, 0x1, 0x0);
        gbc.writeMem(0x833c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x833e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833c), 0xcb);
        EXPECT(gbc.readMem(0x833d), 0x44);
        // CB 44 02A9
        gbc.setState(0x8db3, 0xb4cc, 0x6ba0, 0x92fd, 0x354, 0xa933, 0x0, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xb4cc);
        EXPECT(gbc.pc(), 0x8db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8db3), 0xcb);
        EXPECT(gbc.readMem(0x8db4), 0x44);
        // CB 44 02AA
        gbc.setState(0x5a2f, 0x29c9, 0x8d50, 0xe291, 0x1abd, 0x633e, 0x1, 0x0);
        gbc.writeMem(0x5a2f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x29c9);
        EXPECT(gbc.pc(), 0x5a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02AB
        gbc.setState(0x3e8d, 0xf682, 0x4b20, 0x6bfb, 0x36d9, 0xb05d, 0x1, 0x1);
        gbc.writeMem(0x3e8d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf682);
        EXPECT(gbc.pc(), 0x3e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02AC
        gbc.setState(0x6a71, 0xa777, 0xeb20, 0xef34, 0xe9e6, 0x6145, 0x0, 0x1);
        gbc.writeMem(0x6a71, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa777);
        EXPECT(gbc.pc(), 0x6a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02AD
        gbc.setState(0xc32d, 0x7e26, 0xe4a0, 0xa2c1, 0xd7a9, 0x50ec, 0x0, 0x1);
        gbc.writeMem(0xc32d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7e26);
        EXPECT(gbc.pc(), 0xc32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32d), 0xcb);
        EXPECT(gbc.readMem(0xc32e), 0x44);
        // CB 44 02AE
        gbc.setState(0x125f, 0x2e22, 0xde20, 0xb1ff, 0xf56, 0xd81e, 0x1, 0x0);
        gbc.writeMem(0x125f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2e22);
        EXPECT(gbc.pc(), 0x1261);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02AF
        gbc.setState(0x7955, 0xa8b9, 0x9390, 0xf5a5, 0x3022, 0xc51e, 0x0, 0x0);
        gbc.writeMem(0x7955, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa8b9);
        EXPECT(gbc.pc(), 0x7957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02B0
        gbc.setState(0x6ea9, 0xc72, 0x59d0, 0x1163, 0x4764, 0xa1e2, 0x0, 0x0);
        gbc.writeMem(0x6ea9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc72);
        EXPECT(gbc.pc(), 0x6eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02B1
        gbc.setState(0xeb56, 0x23c5, 0x1370, 0x12f8, 0x2c8c, 0xadfb, 0x0, 0x0);
        gbc.writeMem(0xeb56, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x23c5);
        EXPECT(gbc.pc(), 0xeb58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb56), 0xcb);
        EXPECT(gbc.readMem(0xeb57), 0x44);
        // CB 44 02B2
        gbc.setState(0x9a48, 0xb6c0, 0xa160, 0x3989, 0x6ad3, 0x7597, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xb6c0);
        EXPECT(gbc.pc(), 0x9a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a48), 0xcb);
        EXPECT(gbc.readMem(0x9a49), 0x44);
        // CB 44 02B3
        gbc.setState(0x1cb6, 0xfc2, 0x1080, 0x1ce, 0xfe3c, 0x3ca, 0x1, 0x0);
        gbc.writeMem(0x1cb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0x1cb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02B4
        gbc.setState(0x6557, 0x9008, 0x280, 0xfc62, 0xbb33, 0x3cc8, 0x0, 0x1);
        gbc.writeMem(0x6557, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9008);
        EXPECT(gbc.pc(), 0x6559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02B5
        gbc.setState(0x7c51, 0x3759, 0xf3f0, 0x2db4, 0xc468, 0xf01f, 0x1, 0x1);
        gbc.writeMem(0x7c51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3759);
        EXPECT(gbc.pc(), 0x7c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02B6
        gbc.setState(0xa472, 0x18e6, 0xb9c0, 0xb610, 0x533d, 0xd365, 0x1, 0x1);
        gbc.writeMem(0xa472, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x18e6);
        EXPECT(gbc.pc(), 0xa474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa472), 0xcb);
        EXPECT(gbc.readMem(0xa473), 0x44);
        // CB 44 02B7
        gbc.setState(0xcd8b, 0x2d15, 0xa4c0, 0xf85a, 0x556e, 0xa763, 0x0, 0x0);
        gbc.writeMem(0xcd8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2d15);
        EXPECT(gbc.pc(), 0xcd8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd8b), 0xcb);
        EXPECT(gbc.readMem(0xcd8c), 0x44);
        // CB 44 02B8
        gbc.setState(0x6635, 0xa36e, 0x40e0, 0x91e7, 0xff35, 0x1a32, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa36e);
        EXPECT(gbc.pc(), 0x6637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02B9
        gbc.setState(0xba2b, 0xdb17, 0x4910, 0xf7de, 0xa5a0, 0xa14f, 0x0, 0x1);
        gbc.writeMem(0xba2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdb17);
        EXPECT(gbc.pc(), 0xba2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2b), 0xcb);
        EXPECT(gbc.readMem(0xba2c), 0x44);
        // CB 44 02BA
        gbc.setState(0x4045, 0x1bdc, 0x42a0, 0x8cea, 0x9087, 0x156d, 0x1, 0x1);
        gbc.writeMem(0x4045, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1bdc);
        EXPECT(gbc.pc(), 0x4047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02BB
        gbc.setState(0xa80a, 0x1d61, 0x9820, 0x8549, 0x5c7a, 0xdb40, 0x1, 0x1);
        gbc.writeMem(0xa80a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1d61);
        EXPECT(gbc.pc(), 0xa80c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa80a), 0xcb);
        EXPECT(gbc.readMem(0xa80b), 0x44);
        // CB 44 02BC
        gbc.setState(0x3e20, 0xfa1f, 0x9a40, 0xf546, 0x17ea, 0x2d2b, 0x0, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfa1f);
        EXPECT(gbc.pc(), 0x3e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02BD
        gbc.setState(0x246f, 0xa752, 0xaa50, 0x57a1, 0x769a, 0x6239, 0x1, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa752);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02BE
        gbc.setState(0x5c8c, 0x3e7c, 0x3140, 0x8155, 0x3d07, 0xf870, 0x1, 0x0);
        gbc.writeMem(0x5c8c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3e7c);
        EXPECT(gbc.pc(), 0x5c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02BF
        gbc.setState(0xd5c1, 0x634e, 0x3ca0, 0x18b6, 0xc513, 0x4caa, 0x0, 0x1);
        gbc.writeMem(0xd5c1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x634e);
        EXPECT(gbc.pc(), 0xd5c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5c1), 0xcb);
        EXPECT(gbc.readMem(0xd5c2), 0x44);
        // CB 44 02C0
        gbc.setState(0x9248, 0xb7c8, 0xab80, 0x7c56, 0xbd61, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0x9248, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb7c8);
        EXPECT(gbc.pc(), 0x924a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9248), 0xcb);
        EXPECT(gbc.readMem(0x9249), 0x44);
        // CB 44 02C1
        gbc.setState(0xed6e, 0xef7a, 0x11e0, 0x688f, 0x6011, 0x32ad, 0x1, 0x0);
        gbc.writeMem(0xed6e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xef7a);
        EXPECT(gbc.pc(), 0xed70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed6e), 0xcb);
        EXPECT(gbc.readMem(0xed6f), 0x44);
        // CB 44 02C2
        gbc.setState(0x32b5, 0x3f8, 0x56b0, 0x7a40, 0xdf1d, 0xafa3, 0x1, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3f8);
        EXPECT(gbc.pc(), 0x32b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02C3
        gbc.setState(0x56c0, 0x1054, 0x6a60, 0xb743, 0xb0c7, 0x461e, 0x0, 0x1);
        gbc.writeMem(0x56c0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1054);
        EXPECT(gbc.pc(), 0x56c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02C4
        gbc.setState(0x5335, 0x7bc9, 0x9470, 0xd8a, 0x251b, 0x3f5, 0x1, 0x0);
        gbc.writeMem(0x5335, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7bc9);
        EXPECT(gbc.pc(), 0x5337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02C5
        gbc.setState(0xb7d3, 0x18c5, 0xc440, 0x4cae, 0x7ae0, 0xc9c0, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x18c5);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d3), 0xcb);
        EXPECT(gbc.readMem(0xb7d4), 0x44);
        // CB 44 02C6
        gbc.setState(0x7b41, 0xb642, 0x1d90, 0x850c, 0x310a, 0x274, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb642);
        EXPECT(gbc.pc(), 0x7b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02C7
        gbc.setState(0x1ed6, 0x8c74, 0x1c40, 0x31c, 0xee9c, 0x972e, 0x1, 0x1);
        gbc.writeMem(0x1ed6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x8c74);
        EXPECT(gbc.pc(), 0x1ed8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02C8
        gbc.setState(0x6fab, 0x3d7c, 0xe2b0, 0xae83, 0xb4ea, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x6fab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3d7c);
        EXPECT(gbc.pc(), 0x6fad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02C9
        gbc.setState(0x5edb, 0xe208, 0x25d0, 0xf4d, 0xd258, 0x1b48, 0x1, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe208);
        EXPECT(gbc.pc(), 0x5edd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02CA
        gbc.setState(0x2b02, 0xdc42, 0x6dc0, 0x7ee8, 0xfd18, 0xc721, 0x1, 0x1);
        gbc.writeMem(0x2b02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdc42);
        EXPECT(gbc.pc(), 0x2b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02CB
        gbc.setState(0x61cf, 0xacf9, 0xc900, 0x56f7, 0x86c0, 0xf861, 0x1, 0x0);
        gbc.writeMem(0x61cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xacf9);
        EXPECT(gbc.pc(), 0x61d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02CC
        gbc.setState(0x733e, 0xf24, 0x5620, 0x669a, 0xa4fa, 0xd528, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf24);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02CD
        gbc.setState(0x439e, 0xa54e, 0x8fe0, 0xce72, 0xe433, 0xe0e2, 0x1, 0x1);
        gbc.writeMem(0x439e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa54e);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02CE
        gbc.setState(0x1f33, 0x5ca8, 0xf9b0, 0xa3aa, 0xd4db, 0x9f71, 0x1, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5ca8);
        EXPECT(gbc.pc(), 0x1f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02CF
        gbc.setState(0x46ce, 0x5521, 0x9600, 0xede5, 0x96ba, 0x362c, 0x0, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5521);
        EXPECT(gbc.pc(), 0x46d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02D0
        gbc.setState(0xde59, 0x7bc5, 0xa2f0, 0xc94c, 0x6aea, 0xa2b6, 0x1, 0x0);
        gbc.writeMem(0xde59, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7bc5);
        EXPECT(gbc.pc(), 0xde5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde59), 0xcb);
        EXPECT(gbc.readMem(0xde5a), 0x44);
        // CB 44 02D1
        gbc.setState(0xb1ce, 0x261c, 0x2e50, 0x1c57, 0x1caa, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xb1ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x261c);
        EXPECT(gbc.pc(), 0xb1d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ce), 0xcb);
        EXPECT(gbc.readMem(0xb1cf), 0x44);
        // CB 44 02D2
        gbc.setState(0x9145, 0x702b, 0x9280, 0xdde0, 0xc2e5, 0xfc49, 0x1, 0x1);
        gbc.writeMem(0x9145, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x702b);
        EXPECT(gbc.pc(), 0x9147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9145), 0xcb);
        EXPECT(gbc.readMem(0x9146), 0x44);
        // CB 44 02D3
        gbc.setState(0x57f8, 0x2be9, 0xa270, 0x63d2, 0x1b74, 0xd11d, 0x0, 0x1);
        gbc.writeMem(0x57f8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2be9);
        EXPECT(gbc.pc(), 0x57fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02D4
        gbc.setState(0xee84, 0x928d, 0xde90, 0x9186, 0xc350, 0xffdf, 0x1, 0x0);
        gbc.writeMem(0xee84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x928d);
        EXPECT(gbc.pc(), 0xee86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee84), 0xcb);
        EXPECT(gbc.readMem(0xee85), 0x44);
        // CB 44 02D6
        gbc.setState(0x13e2, 0xa654, 0x90c0, 0xf264, 0x2b9, 0x3a38, 0x0, 0x1);
        gbc.writeMem(0x13e2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa654);
        EXPECT(gbc.pc(), 0x13e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02D7
        gbc.setState(0xd1ff, 0x852b, 0x3c50, 0x21e, 0x4a46, 0xbde6, 0x1, 0x1);
        gbc.writeMem(0xd1ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x852b);
        EXPECT(gbc.pc(), 0xd201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1ff), 0xcb);
        EXPECT(gbc.readMem(0xd200), 0x44);
        // CB 44 02D8
        gbc.setState(0x9906, 0x59ff, 0x4660, 0x153a, 0x897e, 0x75fd, 0x0, 0x1);
        gbc.writeMem(0x9906, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x59ff);
        EXPECT(gbc.pc(), 0x9908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9906), 0xcb);
        EXPECT(gbc.readMem(0x9907), 0x44);
        // CB 44 02D9
        gbc.setState(0x9b5f, 0x149f, 0x7cb0, 0x1d37, 0x6572, 0xd1cb, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x149f);
        EXPECT(gbc.pc(), 0x9b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b5f), 0xcb);
        EXPECT(gbc.readMem(0x9b60), 0x44);
        // CB 44 02DA
        gbc.setState(0xbf30, 0x89f2, 0xbc60, 0x3949, 0x529c, 0xaeee, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x89f2);
        EXPECT(gbc.pc(), 0xbf32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf30), 0xcb);
        EXPECT(gbc.readMem(0xbf31), 0x44);
        // CB 44 02DB
        gbc.setState(0x2dd1, 0xeced, 0x3750, 0x61bc, 0xb44c, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xeced);
        EXPECT(gbc.pc(), 0x2dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02DC
        gbc.setState(0x9ce7, 0x32d9, 0x4390, 0x7fba, 0x7b4e, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x9ce7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x32d9);
        EXPECT(gbc.pc(), 0x9ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce7), 0xcb);
        EXPECT(gbc.readMem(0x9ce8), 0x44);
        // CB 44 02DD
        gbc.setState(0x445a, 0x2e7c, 0x3f60, 0xf349, 0xdc39, 0x564d, 0x1, 0x0);
        gbc.writeMem(0x445a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0x445c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02DE
        gbc.setState(0xaf6f, 0x6288, 0x2e20, 0xcc94, 0x66cc, 0x5b3c, 0x1, 0x1);
        gbc.writeMem(0xaf6f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6288);
        EXPECT(gbc.pc(), 0xaf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6f), 0xcb);
        EXPECT(gbc.readMem(0xaf70), 0x44);
        // CB 44 02DF
        gbc.setState(0xe24b, 0x957f, 0x4400, 0x67bd, 0xfed6, 0x554f, 0x0, 0x0);
        gbc.writeMem(0xe24b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x957f);
        EXPECT(gbc.pc(), 0xe24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24b), 0xcb);
        EXPECT(gbc.readMem(0xe24c), 0x44);
        // CB 44 02E0
        gbc.setState(0x264c, 0xa7bf, 0x1e50, 0x6aec, 0x6447, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0x264c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa7bf);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02E1
        gbc.setState(0xb72, 0x8b59, 0xbc10, 0x67d4, 0x84de, 0x35d5, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8b59);
        EXPECT(gbc.pc(), 0xb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02E2
        gbc.setState(0xa9d2, 0x3a37, 0x71d0, 0x78f5, 0xc9f7, 0xb681, 0x0, 0x0);
        gbc.writeMem(0xa9d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3a37);
        EXPECT(gbc.pc(), 0xa9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9d2), 0xcb);
        EXPECT(gbc.readMem(0xa9d3), 0x44);
        // CB 44 02E3
        gbc.setState(0x744b, 0x8d71, 0x29b0, 0x1ba5, 0x1cc5, 0x1c1c, 0x1, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8d71);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02E4
        gbc.setState(0xdd08, 0x152, 0x92b0, 0xae46, 0xb771, 0xcd6c, 0x1, 0x1);
        gbc.writeMem(0xdd08, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x152);
        EXPECT(gbc.pc(), 0xdd0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd08), 0xcb);
        EXPECT(gbc.readMem(0xdd09), 0x44);
        // CB 44 02E5
        gbc.setState(0x8ce6, 0x5d9e, 0x2810, 0x5b1, 0x8df7, 0x58dc, 0x0, 0x0);
        gbc.writeMem(0x8ce6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5d9e);
        EXPECT(gbc.pc(), 0x8ce8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ce6), 0xcb);
        EXPECT(gbc.readMem(0x8ce7), 0x44);
        // CB 44 02E6
        gbc.setState(0xe95c, 0xe488, 0x2b80, 0x62, 0xa160, 0x733b, 0x0, 0x0);
        gbc.writeMem(0xe95c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe488);
        EXPECT(gbc.pc(), 0xe95e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe95c), 0xcb);
        EXPECT(gbc.readMem(0xe95d), 0x44);
        // CB 44 02E7
        gbc.setState(0x54f6, 0x266d, 0xb7d0, 0x1fa9, 0xb7fc, 0xd314, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x266d);
        EXPECT(gbc.pc(), 0x54f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02E8
        gbc.setState(0x529c, 0xd396, 0x8d20, 0xe79e, 0x8757, 0xb942, 0x0, 0x1);
        gbc.writeMem(0x529c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd396);
        EXPECT(gbc.pc(), 0x529e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02E9
        gbc.setState(0x6817, 0x3942, 0xa820, 0xbd6c, 0xb4b9, 0xfe79, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0x6819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02EA
        gbc.setState(0x4df8, 0x188c, 0x97a0, 0xdb1c, 0xf7d3, 0x8faa, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x188c);
        EXPECT(gbc.pc(), 0x4dfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02EB
        gbc.setState(0x3c8b, 0xe83f, 0x3370, 0xe467, 0xcc19, 0xbc6d, 0x1, 0x0);
        gbc.writeMem(0x3c8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0x3c8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02EC
        gbc.setState(0x8345, 0x1cdd, 0x9d50, 0x75fa, 0xe131, 0x2e16, 0x1, 0x1);
        gbc.writeMem(0x8345, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1cdd);
        EXPECT(gbc.pc(), 0x8347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8345), 0xcb);
        EXPECT(gbc.readMem(0x8346), 0x44);
        // CB 44 02ED
        gbc.setState(0x52de, 0x104a, 0x3560, 0xe483, 0xfea5, 0xd09b, 0x1, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x104a);
        EXPECT(gbc.pc(), 0x52e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02EE
        gbc.setState(0x25f, 0x9eb5, 0x6120, 0xd4d2, 0xd25d, 0x214c, 0x0, 0x1);
        gbc.writeMem(0x25f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9eb5);
        EXPECT(gbc.pc(), 0x261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02EF
        gbc.setState(0x746, 0xad69, 0x4560, 0x35b2, 0xff0d, 0x3512, 0x1, 0x1);
        gbc.writeMem(0x746, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xad69);
        EXPECT(gbc.pc(), 0x748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02F0
        gbc.setState(0x97ae, 0x8163, 0x7870, 0x6cd, 0x236, 0xc991, 0x1, 0x0);
        gbc.writeMem(0x97ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8163);
        EXPECT(gbc.pc(), 0x97b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ae), 0xcb);
        EXPECT(gbc.readMem(0x97af), 0x44);
        // CB 44 02F1
        gbc.setState(0xa794, 0x8d22, 0x5b20, 0xe2a4, 0x4669, 0xe15a, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0xa796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa794), 0xcb);
        EXPECT(gbc.readMem(0xa795), 0x44);
        // CB 44 02F2
        gbc.setState(0xa8ff, 0x1d80, 0x4070, 0x7138, 0x87bc, 0xeae6, 0x0, 0x1);
        gbc.writeMem(0xa8ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1d80);
        EXPECT(gbc.pc(), 0xa901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8ff), 0xcb);
        EXPECT(gbc.readMem(0xa900), 0x44);
        // CB 44 02F3
        gbc.setState(0xcff9, 0x1d6f, 0x4b50, 0x903f, 0x229d, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x1d6f);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff9), 0xcb);
        EXPECT(gbc.readMem(0xcffa), 0x44);
        // CB 44 02F4
        gbc.setState(0xde93, 0x9547, 0xb890, 0x5839, 0xd22f, 0xf128, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9547);
        EXPECT(gbc.pc(), 0xde95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde93), 0xcb);
        EXPECT(gbc.readMem(0xde94), 0x44);
        // CB 44 02F5
        gbc.setState(0xe98d, 0xeedd, 0xde30, 0xc13c, 0x3e33, 0x5471, 0x1, 0x1);
        gbc.writeMem(0xe98d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xeedd);
        EXPECT(gbc.pc(), 0xe98f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe98d), 0xcb);
        EXPECT(gbc.readMem(0xe98e), 0x44);
        // CB 44 02F6
        gbc.setState(0x8fb8, 0x8546, 0xc090, 0xe2ef, 0xac4c, 0xce66, 0x0, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8546);
        EXPECT(gbc.pc(), 0x8fba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb8), 0xcb);
        EXPECT(gbc.readMem(0x8fb9), 0x44);
        // CB 44 02F8
        gbc.setState(0x33cf, 0xacb9, 0xa1b0, 0x393f, 0xda35, 0x9866, 0x0, 0x0);
        gbc.writeMem(0x33cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0x33d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02F9
        gbc.setState(0x4be3, 0x55c2, 0x7f30, 0x5f9b, 0x1144, 0x5841, 0x0, 0x1);
        gbc.writeMem(0x4be3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x55c2);
        EXPECT(gbc.pc(), 0x4be5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02FA
        gbc.setState(0x14d7, 0x3617, 0xbe00, 0xccaa, 0x4ac2, 0x5998, 0x0, 0x0);
        gbc.writeMem(0x14d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3617);
        EXPECT(gbc.pc(), 0x14d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02FB
        gbc.setState(0x3d61, 0x8da9, 0x41c0, 0x334c, 0xbf26, 0x460a, 0x1, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8da9);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 02FC
        gbc.setState(0x89ea, 0x9347, 0x5bb0, 0xc748, 0xc61c, 0x59c2, 0x0, 0x1);
        gbc.writeMem(0x89ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9347);
        EXPECT(gbc.pc(), 0x89ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ea), 0xcb);
        EXPECT(gbc.readMem(0x89eb), 0x44);
        // CB 44 02FD
        gbc.setState(0xe882, 0xb916, 0x7bd0, 0x6408, 0x722b, 0x4d0, 0x0, 0x1);
        gbc.writeMem(0xe882, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb916);
        EXPECT(gbc.pc(), 0xe884);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe882), 0xcb);
        EXPECT(gbc.readMem(0xe883), 0x44);
        // CB 44 02FE
        gbc.setState(0x4777, 0x7ad2, 0xce30, 0x863f, 0xd532, 0x8bdb, 0x1, 0x1);
        gbc.writeMem(0x4777, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7ad2);
        EXPECT(gbc.pc(), 0x4779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 02FF
        gbc.setState(0x566f, 0x9fa5, 0x5920, 0x6e65, 0x9f6e, 0x3d12, 0x1, 0x0);
        gbc.writeMem(0x566f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9fa5);
        EXPECT(gbc.pc(), 0x5671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0300
        gbc.setState(0xa7c9, 0x88be, 0x3b00, 0x6c69, 0x3fd7, 0x92db, 0x1, 0x1);
        gbc.writeMem(0xa7c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x88be);
        EXPECT(gbc.pc(), 0xa7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c9), 0xcb);
        EXPECT(gbc.readMem(0xa7ca), 0x44);
        // CB 44 0301
        gbc.setState(0xefce, 0x2f3d, 0xe6e0, 0x3f76, 0x621c, 0xd1fd, 0x0, 0x0);
        gbc.writeMem(0xefce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2f3d);
        EXPECT(gbc.pc(), 0xefd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefce), 0xcb);
        EXPECT(gbc.readMem(0xefcf), 0x44);
        // CB 44 0302
        gbc.setState(0x8018, 0x1a2e, 0xd420, 0xc7ec, 0x876c, 0x5fe6, 0x1, 0x1);
        gbc.writeMem(0x8018, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a2e);
        EXPECT(gbc.pc(), 0x801a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8018), 0xcb);
        EXPECT(gbc.readMem(0x8019), 0x44);
        // CB 44 0303
        gbc.setState(0xe5c4, 0xb723, 0xd9f0, 0x4cbf, 0xf8c, 0x4ae4, 0x1, 0x0);
        gbc.writeMem(0xe5c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb723);
        EXPECT(gbc.pc(), 0xe5c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c4), 0xcb);
        EXPECT(gbc.readMem(0xe5c5), 0x44);
        // CB 44 0304
        gbc.setState(0xf05, 0x7059, 0x8f70, 0xf40d, 0xd2d2, 0x193b, 0x1, 0x1);
        gbc.writeMem(0xf05, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7059);
        EXPECT(gbc.pc(), 0xf07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0305
        gbc.setState(0x6abc, 0x4f3f, 0x61f0, 0x5983, 0x3360, 0x3c5, 0x0, 0x1);
        gbc.writeMem(0x6abc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4f3f);
        EXPECT(gbc.pc(), 0x6abe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0306
        gbc.setState(0x7fa1, 0x72a2, 0x2a20, 0x8018, 0xd9b1, 0x96d4, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x72a2);
        EXPECT(gbc.pc(), 0x7fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0307
        gbc.setState(0x9bb5, 0x5d74, 0x9870, 0xff40, 0x5e9e, 0xae63, 0x0, 0x1);
        gbc.writeMem(0x9bb5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5d74);
        EXPECT(gbc.pc(), 0x9bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb5), 0xcb);
        EXPECT(gbc.readMem(0x9bb6), 0x44);
        // CB 44 0308
        gbc.setState(0x2e3e, 0xb829, 0xb6a0, 0xeb80, 0x78e6, 0x5514, 0x0, 0x0);
        gbc.writeMem(0x2e3e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb829);
        EXPECT(gbc.pc(), 0x2e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0309
        gbc.setState(0x5a43, 0xdda6, 0xe930, 0x5814, 0x26b7, 0x22f6, 0x0, 0x1);
        gbc.writeMem(0x5a43, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xdda6);
        EXPECT(gbc.pc(), 0x5a45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 030A
        gbc.setState(0x7fdd, 0x3559, 0x3e50, 0x653a, 0x89ba, 0xd0f1, 0x0, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3559);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 030B
        gbc.setState(0x47bb, 0x1c2d, 0x14a0, 0xf025, 0xd2d1, 0x5093, 0x1, 0x1);
        gbc.writeMem(0x47bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1c2d);
        EXPECT(gbc.pc(), 0x47bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 030C
        gbc.setState(0x54c8, 0x1730, 0x8310, 0x76dc, 0xac37, 0xe2bb, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1730);
        EXPECT(gbc.pc(), 0x54ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 030D
        gbc.setState(0x6485, 0xcf3f, 0x8940, 0x8f28, 0x8542, 0xb1a7, 0x0, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcf3f);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 030E
        gbc.setState(0x97b4, 0x10d8, 0xba40, 0x3e8d, 0x6fcf, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0x97b4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x10d8);
        EXPECT(gbc.pc(), 0x97b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b4), 0xcb);
        EXPECT(gbc.readMem(0x97b5), 0x44);
        // CB 44 030F
        gbc.setState(0x6bc3, 0x4be5, 0xab30, 0x1701, 0x4660, 0x22ec, 0x1, 0x0);
        gbc.writeMem(0x6bc3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4be5);
        EXPECT(gbc.pc(), 0x6bc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0310
        gbc.setState(0x2425, 0x146f, 0x99f0, 0xffd3, 0x1f39, 0x23e3, 0x0, 0x0);
        gbc.writeMem(0x2425, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x146f);
        EXPECT(gbc.pc(), 0x2427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0311
        gbc.setState(0x24bc, 0x9d80, 0xc680, 0x3958, 0xefe5, 0xfa77, 0x1, 0x1);
        gbc.writeMem(0x24bc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9d80);
        EXPECT(gbc.pc(), 0x24be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0312
        gbc.setState(0xaff3, 0xd1f9, 0xb9a0, 0x554f, 0xcf55, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0xaff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff3), 0xcb);
        EXPECT(gbc.readMem(0xaff4), 0x44);
        // CB 44 0313
        gbc.setState(0x776e, 0x5707, 0xf030, 0x3ed7, 0xbf76, 0x1a6f, 0x0, 0x1);
        gbc.writeMem(0x776e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5707);
        EXPECT(gbc.pc(), 0x7770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0314
        gbc.setState(0x5a40, 0x1a5, 0x6600, 0x2e94, 0x499e, 0xd415, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1a5);
        EXPECT(gbc.pc(), 0x5a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0315
        gbc.setState(0x1519, 0x6624, 0xbaf0, 0x68fd, 0x742f, 0x239e, 0x1, 0x1);
        gbc.writeMem(0x1519, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6624);
        EXPECT(gbc.pc(), 0x151b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0316
        gbc.setState(0xa830, 0x81be, 0x6310, 0xd1ac, 0xc210, 0x9102, 0x0, 0x1);
        gbc.writeMem(0xa830, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x81be);
        EXPECT(gbc.pc(), 0xa832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa830), 0xcb);
        EXPECT(gbc.readMem(0xa831), 0x44);
        // CB 44 0317
        gbc.setState(0x1b3c, 0x2415, 0x2400, 0xf55f, 0x29c1, 0x3205, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2415);
        EXPECT(gbc.pc(), 0x1b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0318
        gbc.setState(0x9538, 0x92d4, 0xfad0, 0xd750, 0x5636, 0x5f0c, 0x1, 0x1);
        gbc.writeMem(0x9538, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x92d4);
        EXPECT(gbc.pc(), 0x953a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9538), 0xcb);
        EXPECT(gbc.readMem(0x9539), 0x44);
        // CB 44 0319
        gbc.setState(0x6b32, 0x26e6, 0xe50, 0xf380, 0x4686, 0x4348, 0x1, 0x1);
        gbc.writeMem(0x6b32, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x26e6);
        EXPECT(gbc.pc(), 0x6b34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 031A
        gbc.setState(0x25a7, 0xb392, 0x2a60, 0x3568, 0xda64, 0x46f7, 0x0, 0x0);
        gbc.writeMem(0x25a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb392);
        EXPECT(gbc.pc(), 0x25a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 031B
        gbc.setState(0x5517, 0x4d4d, 0x72b0, 0x7a13, 0x3926, 0x497d, 0x0, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4d4d);
        EXPECT(gbc.pc(), 0x5519);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 031C
        gbc.setState(0xbee0, 0x2ff4, 0xb5f0, 0x4bc4, 0xa27d, 0x5fbe, 0x0, 0x0);
        gbc.writeMem(0xbee0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x2ff4);
        EXPECT(gbc.pc(), 0xbee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee0), 0xcb);
        EXPECT(gbc.readMem(0xbee1), 0x44);
        // CB 44 031D
        gbc.setState(0x73a0, 0x6059, 0xa140, 0x6035, 0xb7a5, 0x636a, 0x0, 0x0);
        gbc.writeMem(0x73a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6059);
        EXPECT(gbc.pc(), 0x73a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 031E
        gbc.setState(0xb20f, 0xac4d, 0x4b60, 0xbf28, 0xd403, 0xb665, 0x0, 0x1);
        gbc.writeMem(0xb20f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xac4d);
        EXPECT(gbc.pc(), 0xb211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb20f), 0xcb);
        EXPECT(gbc.readMem(0xb210), 0x44);
        // CB 44 031F
        gbc.setState(0xcdaa, 0x10e3, 0x3540, 0x5c71, 0xcff7, 0xe18e, 0x1, 0x0);
        gbc.writeMem(0xcdaa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x10e3);
        EXPECT(gbc.pc(), 0xcdac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdaa), 0xcb);
        EXPECT(gbc.readMem(0xcdab), 0x44);
        // CB 44 0320
        gbc.setState(0x197e, 0x5b73, 0x7ec0, 0x735b, 0x2b43, 0xea09, 0x0, 0x1);
        gbc.writeMem(0x197e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5b73);
        EXPECT(gbc.pc(), 0x1980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0321
        gbc.setState(0x7e76, 0x9a1c, 0x3750, 0xf6a5, 0x7df4, 0x8db9, 0x1, 0x1);
        gbc.writeMem(0x7e76, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9a1c);
        EXPECT(gbc.pc(), 0x7e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0322
        gbc.setState(0x8b3f, 0x4327, 0xcde0, 0x367e, 0x7441, 0xaaa3, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4327);
        EXPECT(gbc.pc(), 0x8b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b3f), 0xcb);
        EXPECT(gbc.readMem(0x8b40), 0x44);
        // CB 44 0323
        gbc.setState(0x5b83, 0x9604, 0x4130, 0xda7f, 0x34ef, 0xacc6, 0x1, 0x1);
        gbc.writeMem(0x5b83, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9604);
        EXPECT(gbc.pc(), 0x5b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0324
        gbc.setState(0x3b09, 0x7798, 0x9d20, 0x3c7a, 0xf6b9, 0xe993, 0x1, 0x1);
        gbc.writeMem(0x3b09, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7798);
        EXPECT(gbc.pc(), 0x3b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0325
        gbc.setState(0x2522, 0x2983, 0xc450, 0xc72e, 0xc70, 0xf460, 0x0, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2983);
        EXPECT(gbc.pc(), 0x2524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0326
        gbc.setState(0x1e9, 0xae69, 0xb6d0, 0xfcbf, 0xdc70, 0x8d96, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xae69);
        EXPECT(gbc.pc(), 0x1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0327
        gbc.setState(0x3529, 0xe6c0, 0x8690, 0x221d, 0xa570, 0xf890, 0x0, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe6c0);
        EXPECT(gbc.pc(), 0x352b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0328
        gbc.setState(0x15bd, 0x2036, 0x1de0, 0xb169, 0xb1da, 0x6e2f, 0x0, 0x0);
        gbc.writeMem(0x15bd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2036);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0329
        gbc.setState(0xd553, 0x40eb, 0x5590, 0x8c47, 0x885f, 0x1756, 0x1, 0x0);
        gbc.writeMem(0xd553, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x40eb);
        EXPECT(gbc.pc(), 0xd555);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd553), 0xcb);
        EXPECT(gbc.readMem(0xd554), 0x44);
        // CB 44 032A
        gbc.setState(0x1ebd, 0x150c, 0x4ad0, 0x7e87, 0x3c62, 0xb891, 0x1, 0x0);
        gbc.writeMem(0x1ebd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x150c);
        EXPECT(gbc.pc(), 0x1ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 032B
        gbc.setState(0x257a, 0x76c5, 0xc30, 0x91c6, 0xec3e, 0x189d, 0x0, 0x0);
        gbc.writeMem(0x257a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x76c5);
        EXPECT(gbc.pc(), 0x257c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 032C
        gbc.setState(0x47f2, 0x44c6, 0x1290, 0xde60, 0xad69, 0x5273, 0x0, 0x1);
        gbc.writeMem(0x47f2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x44c6);
        EXPECT(gbc.pc(), 0x47f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 032D
        gbc.setState(0x6f5e, 0x5b48, 0x6c50, 0xdc55, 0xc11f, 0x6684, 0x1, 0x0);
        gbc.writeMem(0x6f5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5b48);
        EXPECT(gbc.pc(), 0x6f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 032E
        gbc.setState(0x792e, 0xa2a, 0x5ed0, 0x2212, 0x6586, 0x910d, 0x0, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa2a);
        EXPECT(gbc.pc(), 0x7930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 032F
        gbc.setState(0xd7d9, 0xe8, 0x84d0, 0xd76b, 0xcd34, 0x8a8c, 0x0, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe8);
        EXPECT(gbc.pc(), 0xd7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d9), 0xcb);
        EXPECT(gbc.readMem(0xd7da), 0x44);
        // CB 44 0330
        gbc.setState(0xb56a, 0x7f88, 0x4350, 0xa53a, 0x46e5, 0xdfe0, 0x1, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7f88);
        EXPECT(gbc.pc(), 0xb56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb56a), 0xcb);
        EXPECT(gbc.readMem(0xb56b), 0x44);
        // CB 44 0331
        gbc.setState(0x4d5a, 0x381f, 0xc190, 0xb79f, 0x5885, 0xa7e3, 0x1, 0x1);
        gbc.writeMem(0x4d5a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x381f);
        EXPECT(gbc.pc(), 0x4d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0332
        gbc.setState(0x1085, 0xfe64, 0x20e0, 0x9a83, 0x6244, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0x1085, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfe64);
        EXPECT(gbc.pc(), 0x1087);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0333
        gbc.setState(0xcdfb, 0x9809, 0xb5d0, 0x7a45, 0xbbb3, 0xa510, 0x0, 0x0);
        gbc.writeMem(0xcdfb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9809);
        EXPECT(gbc.pc(), 0xcdfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdfb), 0xcb);
        EXPECT(gbc.readMem(0xcdfc), 0x44);
        // CB 44 0334
        gbc.setState(0xea00, 0xa64a, 0xdf0, 0xd512, 0xfd3, 0xa4a2, 0x0, 0x0);
        gbc.writeMem(0xea00, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa64a);
        EXPECT(gbc.pc(), 0xea02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea00), 0xcb);
        EXPECT(gbc.readMem(0xea01), 0x44);
        // CB 44 0335
        gbc.setState(0x8e, 0x7a38, 0x2cf0, 0xa1df, 0xa169, 0x3b2d, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7a38);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0336
        gbc.setState(0x78ba, 0x666b, 0x6ca0, 0x1b53, 0x6b4c, 0x2d2, 0x1, 0x1);
        gbc.writeMem(0x78ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x666b);
        EXPECT(gbc.pc(), 0x78bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0337
        gbc.setState(0x463a, 0xd5f4, 0xd800, 0xa579, 0x52b7, 0x2210, 0x0, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd5f4);
        EXPECT(gbc.pc(), 0x463c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0338
        gbc.setState(0x2d84, 0x5cca, 0x7c00, 0x7d9a, 0x8634, 0xc03c, 0x1, 0x0);
        gbc.writeMem(0x2d84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5cca);
        EXPECT(gbc.pc(), 0x2d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0339
        gbc.setState(0x59c4, 0xd46f, 0x9d40, 0x67a1, 0x6e9e, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0x59c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd46f);
        EXPECT(gbc.pc(), 0x59c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 033A
        gbc.setState(0x1426, 0xb05d, 0x5c00, 0x7a97, 0x3ee1, 0x1084, 0x0, 0x1);
        gbc.writeMem(0x1426, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb05d);
        EXPECT(gbc.pc(), 0x1428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 033B
        gbc.setState(0x8de3, 0x3528, 0xb9b0, 0x96f, 0xff31, 0xf3e0, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x3528);
        EXPECT(gbc.pc(), 0x8de5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de3), 0xcb);
        EXPECT(gbc.readMem(0x8de4), 0x44);
        // CB 44 033C
        gbc.setState(0x635f, 0xe6a3, 0xa450, 0x69a2, 0x3b4a, 0x613c, 0x1, 0x0);
        gbc.writeMem(0x635f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe6a3);
        EXPECT(gbc.pc(), 0x6361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 033D
        gbc.setState(0xee8d, 0x1f62, 0xe6d0, 0xd853, 0x3be2, 0xbc2e, 0x1, 0x1);
        gbc.writeMem(0xee8d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1f62);
        EXPECT(gbc.pc(), 0xee8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8d), 0xcb);
        EXPECT(gbc.readMem(0xee8e), 0x44);
        // CB 44 033F
        gbc.setState(0x738b, 0xa9cc, 0xb3b0, 0xcd6, 0xa13a, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0x738b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa9cc);
        EXPECT(gbc.pc(), 0x738d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0340
        gbc.setState(0x9018, 0x76aa, 0x46a0, 0x7ecf, 0x7005, 0xac09, 0x0, 0x0);
        gbc.writeMem(0x9018, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x76aa);
        EXPECT(gbc.pc(), 0x901a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9018), 0xcb);
        EXPECT(gbc.readMem(0x9019), 0x44);
        // CB 44 0341
        gbc.setState(0x4724, 0x133a, 0xb3c0, 0xf4d3, 0xf81c, 0xc69e, 0x1, 0x1);
        gbc.writeMem(0x4724, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x133a);
        EXPECT(gbc.pc(), 0x4726);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0342
        gbc.setState(0x45f9, 0x8b53, 0x9390, 0xfc04, 0xc2bb, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x45f9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8b53);
        EXPECT(gbc.pc(), 0x45fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0343
        gbc.setState(0xc31b, 0x7061, 0xb780, 0x95ae, 0x711a, 0x8322, 0x1, 0x0);
        gbc.writeMem(0xc31b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7061);
        EXPECT(gbc.pc(), 0xc31d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31b), 0xcb);
        EXPECT(gbc.readMem(0xc31c), 0x44);
        // CB 44 0344
        gbc.setState(0x252, 0xe337, 0xf3a0, 0xc778, 0xfe52, 0xaf5f, 0x1, 0x0);
        gbc.writeMem(0x252, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe337);
        EXPECT(gbc.pc(), 0x254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0345
        gbc.setState(0x65b5, 0xaf65, 0x2800, 0x2ef7, 0x35bb, 0xdd67, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xaf65);
        EXPECT(gbc.pc(), 0x65b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0346
        gbc.setState(0x5b62, 0xcbcb, 0x75c0, 0x4265, 0x4599, 0xaaa5, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcbcb);
        EXPECT(gbc.pc(), 0x5b64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0347
        gbc.setState(0x7afa, 0x871c, 0x1450, 0xe7c1, 0xb9ce, 0x4793, 0x0, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x871c);
        EXPECT(gbc.pc(), 0x7afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0348
        gbc.setState(0x323c, 0xa0d4, 0xcf50, 0x6682, 0xcdca, 0x63e4, 0x0, 0x1);
        gbc.writeMem(0x323c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa0d4);
        EXPECT(gbc.pc(), 0x323e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0349
        gbc.setState(0x6bbc, 0x2333, 0xbc00, 0xc26d, 0xceae, 0x4d0, 0x1, 0x1);
        gbc.writeMem(0x6bbc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2333);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 034A
        gbc.setState(0xc7f7, 0xdb84, 0xdcc0, 0xc77b, 0x2c02, 0xc7b0, 0x0, 0x0);
        gbc.writeMem(0xc7f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdb84);
        EXPECT(gbc.pc(), 0xc7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7f7), 0xcb);
        EXPECT(gbc.readMem(0xc7f8), 0x44);
        // CB 44 034B
        gbc.setState(0xaf8a, 0x435c, 0x77a0, 0x6981, 0x9c40, 0x9acf, 0x1, 0x1);
        gbc.writeMem(0xaf8a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x435c);
        EXPECT(gbc.pc(), 0xaf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8a), 0xcb);
        EXPECT(gbc.readMem(0xaf8b), 0x44);
        // CB 44 034C
        gbc.setState(0x41fc, 0x40f5, 0x11e0, 0x9538, 0x84b7, 0xaf4c, 0x0, 0x0);
        gbc.writeMem(0x41fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x40f5);
        EXPECT(gbc.pc(), 0x41fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 034D
        gbc.setState(0x510d, 0x2822, 0x3460, 0xdd, 0x9e20, 0x17b1, 0x1, 0x1);
        gbc.writeMem(0x510d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2822);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 034E
        gbc.setState(0x386b, 0x17fb, 0x5fa0, 0x322e, 0x388f, 0xa25e, 0x0, 0x1);
        gbc.writeMem(0x386b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x17fb);
        EXPECT(gbc.pc(), 0x386d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 034F
        gbc.setState(0x4c2, 0xa725, 0x7d0, 0x6402, 0xf5c9, 0x95a9, 0x0, 0x1);
        gbc.writeMem(0x4c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x4c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0350
        gbc.setState(0x73ee, 0x8e1c, 0x7100, 0x7bfb, 0xd0cf, 0x404b, 0x1, 0x0);
        gbc.writeMem(0x73ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8e1c);
        EXPECT(gbc.pc(), 0x73f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0351
        gbc.setState(0x459, 0xf6fc, 0x85d0, 0xb304, 0x2947, 0xdf4a, 0x1, 0x1);
        gbc.writeMem(0x459, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf6fc);
        EXPECT(gbc.pc(), 0x45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0352
        gbc.setState(0x3825, 0x603, 0x9900, 0x308d, 0x8e1e, 0xce68, 0x1, 0x0);
        gbc.writeMem(0x3825, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x603);
        EXPECT(gbc.pc(), 0x3827);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0353
        gbc.setState(0xae5b, 0x4887, 0x8060, 0x4a78, 0x5674, 0xce40, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4887);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5b), 0xcb);
        EXPECT(gbc.readMem(0xae5c), 0x44);
        // CB 44 0355
        gbc.setState(0x18d8, 0x139d, 0x15f0, 0x1749, 0x11aa, 0xf366, 0x1, 0x0);
        gbc.writeMem(0x18d8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0x18da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0356
        gbc.setState(0x860c, 0x8167, 0x80f0, 0x99a9, 0xa096, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x860c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8167);
        EXPECT(gbc.pc(), 0x860e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x860c), 0xcb);
        EXPECT(gbc.readMem(0x860d), 0x44);
        // CB 44 0357
        gbc.setState(0x5aaf, 0x3691, 0xd790, 0x2d5e, 0xd42a, 0xf867, 0x1, 0x0);
        gbc.writeMem(0x5aaf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3691);
        EXPECT(gbc.pc(), 0x5ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0358
        gbc.setState(0x54a7, 0x7637, 0x41e0, 0x89a2, 0x8d84, 0xbdc3, 0x1, 0x1);
        gbc.writeMem(0x54a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7637);
        EXPECT(gbc.pc(), 0x54a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0359
        gbc.setState(0x9f72, 0xf7c8, 0xebf0, 0xb734, 0xedb3, 0x3e4c, 0x1, 0x1);
        gbc.writeMem(0x9f72, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf7c8);
        EXPECT(gbc.pc(), 0x9f74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f72), 0xcb);
        EXPECT(gbc.readMem(0x9f73), 0x44);
        // CB 44 035A
        gbc.setState(0x2dd9, 0x2104, 0xa740, 0x8bbb, 0xc078, 0x9707, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2104);
        EXPECT(gbc.pc(), 0x2ddb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 035B
        gbc.setState(0x61c9, 0x9276, 0xadf0, 0x9c07, 0xcf52, 0xb156, 0x0, 0x0);
        gbc.writeMem(0x61c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9276);
        EXPECT(gbc.pc(), 0x61cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 035C
        gbc.setState(0xc12a, 0xeab9, 0x500, 0x2543, 0xcb5b, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xc12a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0xc12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12a), 0xcb);
        EXPECT(gbc.readMem(0xc12b), 0x44);
        // CB 44 035D
        gbc.setState(0x287f, 0x967b, 0x71a0, 0xd637, 0x2016, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0x287f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x967b);
        EXPECT(gbc.pc(), 0x2881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 035E
        gbc.setState(0x77f7, 0xd3d8, 0x18c0, 0xe8d7, 0x1b45, 0xf62b, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd3d8);
        EXPECT(gbc.pc(), 0x77f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 035F
        gbc.setState(0x906b, 0x5b5e, 0x7930, 0xcf54, 0xf73b, 0xe980, 0x0, 0x1);
        gbc.writeMem(0x906b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5b5e);
        EXPECT(gbc.pc(), 0x906d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906b), 0xcb);
        EXPECT(gbc.readMem(0x906c), 0x44);
        // CB 44 0360
        gbc.setState(0x9614, 0x5124, 0x550, 0x5c57, 0x1311, 0xec85, 0x0, 0x1);
        gbc.writeMem(0x9614, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5124);
        EXPECT(gbc.pc(), 0x9616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9614), 0xcb);
        EXPECT(gbc.readMem(0x9615), 0x44);
        // CB 44 0361
        gbc.setState(0x5931, 0x53ee, 0xbf0, 0xb998, 0x4d8, 0x916b, 0x1, 0x1);
        gbc.writeMem(0x5931, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x53ee);
        EXPECT(gbc.pc(), 0x5933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0362
        gbc.setState(0x77c9, 0x1e31, 0x4170, 0x63b2, 0xf256, 0xfe95, 0x0, 0x1);
        gbc.writeMem(0x77c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1e31);
        EXPECT(gbc.pc(), 0x77cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0363
        gbc.setState(0xc770, 0xf3b2, 0xac00, 0xe744, 0xca0, 0x5246, 0x0, 0x0);
        gbc.writeMem(0xc770, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf3b2);
        EXPECT(gbc.pc(), 0xc772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc770), 0xcb);
        EXPECT(gbc.readMem(0xc771), 0x44);
        // CB 44 0364
        gbc.setState(0xc5b8, 0xda16, 0xcaf0, 0x16e2, 0xbd60, 0x834a, 0x0, 0x0);
        gbc.writeMem(0xc5b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xda16);
        EXPECT(gbc.pc(), 0xc5ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5b8), 0xcb);
        EXPECT(gbc.readMem(0xc5b9), 0x44);
        // CB 44 0365
        gbc.setState(0xc826, 0x79a4, 0xd4e0, 0x51b7, 0x5496, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x79a4);
        EXPECT(gbc.pc(), 0xc828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc826), 0xcb);
        EXPECT(gbc.readMem(0xc827), 0x44);
        // CB 44 0366
        gbc.setState(0x21fd, 0x18f0, 0x4b50, 0x233, 0xa6d8, 0x7f2f, 0x1, 0x1);
        gbc.writeMem(0x21fd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x18f0);
        EXPECT(gbc.pc(), 0x21ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0368
        gbc.setState(0x1200, 0x8e2b, 0x560, 0x6210, 0x61ac, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0x1200, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x8e2b);
        EXPECT(gbc.pc(), 0x1202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0369
        gbc.setState(0x62c1, 0xc9de, 0xb270, 0xb12d, 0x90d5, 0x795d, 0x0, 0x1);
        gbc.writeMem(0x62c1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc9de);
        EXPECT(gbc.pc(), 0x62c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 036A
        gbc.setState(0x319e, 0x9fa9, 0xa200, 0xa894, 0x1a34, 0xf155, 0x1, 0x1);
        gbc.writeMem(0x319e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9fa9);
        EXPECT(gbc.pc(), 0x31a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 036B
        gbc.setState(0x374f, 0x498d, 0x41e0, 0xe1b9, 0xc4cc, 0xbfb5, 0x1, 0x1);
        gbc.writeMem(0x374f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x498d);
        EXPECT(gbc.pc(), 0x3751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 036D
        gbc.setState(0x2fcf, 0x3a77, 0xa810, 0x80db, 0x67e7, 0xb9f8, 0x0, 0x1);
        gbc.writeMem(0x2fcf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3a77);
        EXPECT(gbc.pc(), 0x2fd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 036E
        gbc.setState(0x9643, 0x9c8e, 0x5e30, 0xc35e, 0x696c, 0xdcad, 0x0, 0x1);
        gbc.writeMem(0x9643, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9c8e);
        EXPECT(gbc.pc(), 0x9645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9643), 0xcb);
        EXPECT(gbc.readMem(0x9644), 0x44);
        // CB 44 036F
        gbc.setState(0x29a6, 0xf75, 0x7170, 0x4e93, 0x7bdf, 0xc649, 0x1, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf75);
        EXPECT(gbc.pc(), 0x29a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0370
        gbc.setState(0x6dc8, 0xe284, 0xd500, 0x7d7d, 0xf96e, 0xd597, 0x1, 0x0);
        gbc.writeMem(0x6dc8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe284);
        EXPECT(gbc.pc(), 0x6dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0371
        gbc.setState(0xc3ab, 0x1932, 0x9120, 0xdbd3, 0xc748, 0x32d5, 0x1, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1932);
        EXPECT(gbc.pc(), 0xc3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ab), 0xcb);
        EXPECT(gbc.readMem(0xc3ac), 0x44);
        // CB 44 0372
        gbc.setState(0xd59c, 0x73bb, 0x3d10, 0x61d2, 0x120f, 0x7874, 0x1, 0x1);
        gbc.writeMem(0xd59c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x73bb);
        EXPECT(gbc.pc(), 0xd59e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd59c), 0xcb);
        EXPECT(gbc.readMem(0xd59d), 0x44);
        // CB 44 0373
        gbc.setState(0xe92f, 0xfc24, 0x7180, 0xd9ea, 0xcce2, 0x97f, 0x1, 0x1);
        gbc.writeMem(0xe92f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfc24);
        EXPECT(gbc.pc(), 0xe931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92f), 0xcb);
        EXPECT(gbc.readMem(0xe930), 0x44);
        // CB 44 0374
        gbc.setState(0xd604, 0xc8e8, 0x2d80, 0x902a, 0x3171, 0x859e, 0x1, 0x0);
        gbc.writeMem(0xd604, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc8e8);
        EXPECT(gbc.pc(), 0xd606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd604), 0xcb);
        EXPECT(gbc.readMem(0xd605), 0x44);
        // CB 44 0375
        gbc.setState(0xb105, 0x9548, 0x3af0, 0x6811, 0x2ded, 0x89dc, 0x1, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9548);
        EXPECT(gbc.pc(), 0xb107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb105), 0xcb);
        EXPECT(gbc.readMem(0xb106), 0x44);
        // CB 44 0377
        gbc.setState(0x1a3c, 0xd22c, 0xa240, 0x6ca8, 0xb09, 0xd7db, 0x0, 0x1);
        gbc.writeMem(0x1a3c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd22c);
        EXPECT(gbc.pc(), 0x1a3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0378
        gbc.setState(0x8089, 0xc04d, 0xe460, 0x4c82, 0xa95e, 0x8519, 0x1, 0x1);
        gbc.writeMem(0x8089, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc04d);
        EXPECT(gbc.pc(), 0x808b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8089), 0xcb);
        EXPECT(gbc.readMem(0x808a), 0x44);
        // CB 44 0379
        gbc.setState(0x21cf, 0xf034, 0xb0d0, 0x9608, 0xd34b, 0x2ab5, 0x1, 0x1);
        gbc.writeMem(0x21cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf034);
        EXPECT(gbc.pc(), 0x21d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 037A
        gbc.setState(0x5ce4, 0xe54f, 0x1f30, 0x405a, 0xd28f, 0x63bc, 0x0, 0x0);
        gbc.writeMem(0x5ce4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0x5ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 037B
        gbc.setState(0x3e7c, 0xd96a, 0x5c30, 0x3c5d, 0x298f, 0x3907, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd96a);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 037C
        gbc.setState(0x79fb, 0xbefc, 0xdf90, 0x6607, 0x9a92, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x79fb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xbefc);
        EXPECT(gbc.pc(), 0x79fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 037D
        gbc.setState(0x8bed, 0x5f4d, 0x8b70, 0x2b53, 0xfb0b, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0x8bed, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5f4d);
        EXPECT(gbc.pc(), 0x8bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bed), 0xcb);
        EXPECT(gbc.readMem(0x8bee), 0x44);
        // CB 44 037E
        gbc.setState(0x1817, 0x91fb, 0xa1b0, 0xd9fe, 0x86cd, 0x611c, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x91fb);
        EXPECT(gbc.pc(), 0x1819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 037F
        gbc.setState(0xc693, 0x7b1d, 0x3370, 0xa675, 0x61e0, 0x8984, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7b1d);
        EXPECT(gbc.pc(), 0xc695);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc693), 0xcb);
        EXPECT(gbc.readMem(0xc694), 0x44);
        // CB 44 0380
        gbc.setState(0x695d, 0xffd5, 0xf230, 0x13ce, 0xfff6, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0x695d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xffd5);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0384
        gbc.setState(0x8456, 0x4eea, 0x9b40, 0x2330, 0x96b0, 0x55a9, 0x1, 0x1);
        gbc.writeMem(0x8456, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4eea);
        EXPECT(gbc.pc(), 0x8458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8456), 0xcb);
        EXPECT(gbc.readMem(0x8457), 0x44);
        // CB 44 0385
        gbc.setState(0x405d, 0x49a2, 0xb390, 0x889e, 0xf188, 0x67db, 0x1, 0x0);
        gbc.writeMem(0x405d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0x405f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0386
        gbc.setState(0x8533, 0xde8c, 0x330, 0xab6c, 0x5371, 0xef88, 0x0, 0x1);
        gbc.writeMem(0x8533, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xde8c);
        EXPECT(gbc.pc(), 0x8535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8533), 0xcb);
        EXPECT(gbc.readMem(0x8534), 0x44);
        // CB 44 0387
        gbc.setState(0x93f, 0xc7d3, 0xbc20, 0x8244, 0x876a, 0x699e, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc7d3);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0388
        gbc.setState(0xe031, 0x838a, 0x6da0, 0x866f, 0x7a1f, 0x4dbb, 0x0, 0x1);
        gbc.writeMem(0xe031, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x838a);
        EXPECT(gbc.pc(), 0xe033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe031), 0xcb);
        EXPECT(gbc.readMem(0xe032), 0x44);
        // CB 44 0389
        gbc.setState(0x25fc, 0x5a8e, 0xc860, 0xbb10, 0x1c61, 0x4a2, 0x1, 0x0);
        gbc.writeMem(0x25fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5a8e);
        EXPECT(gbc.pc(), 0x25fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 038A
        gbc.setState(0xbe1, 0x1f42, 0x3670, 0x808, 0x2011, 0x35c, 0x0, 0x1);
        gbc.writeMem(0xbe1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1f42);
        EXPECT(gbc.pc(), 0xbe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 038B
        gbc.setState(0x107b, 0x1ccc, 0xa3d0, 0x5b13, 0x1f30, 0xc574, 0x1, 0x0);
        gbc.writeMem(0x107b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1ccc);
        EXPECT(gbc.pc(), 0x107d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 038C
        gbc.setState(0x6544, 0xe4df, 0x6c70, 0xfc95, 0x53c7, 0xcea6, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xe4df);
        EXPECT(gbc.pc(), 0x6546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 038D
        gbc.setState(0x2d2c, 0xb7e2, 0x89d0, 0x388a, 0x579, 0xd7a, 0x0, 0x1);
        gbc.writeMem(0x2d2c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb7e2);
        EXPECT(gbc.pc(), 0x2d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 038E
        gbc.setState(0xc21c, 0x2b9a, 0xa6d0, 0x8ba7, 0xcb17, 0x4f39, 0x1, 0x0);
        gbc.writeMem(0xc21c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2b9a);
        EXPECT(gbc.pc(), 0xc21e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc21c), 0xcb);
        EXPECT(gbc.readMem(0xc21d), 0x44);
        // CB 44 038F
        gbc.setState(0x1ebc, 0x6ed1, 0xd600, 0xcc85, 0x511e, 0xe8e2, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6ed1);
        EXPECT(gbc.pc(), 0x1ebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0390
        gbc.setState(0xc387, 0x8557, 0x3730, 0x4d5d, 0x50b7, 0xbdf1, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x8557);
        EXPECT(gbc.pc(), 0xc389);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc387), 0xcb);
        EXPECT(gbc.readMem(0xc388), 0x44);
        // CB 44 0391
        gbc.setState(0x94f3, 0xf97c, 0x5fb0, 0x3227, 0x531c, 0x4800, 0x1, 0x0);
        gbc.writeMem(0x94f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf97c);
        EXPECT(gbc.pc(), 0x94f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f3), 0xcb);
        EXPECT(gbc.readMem(0x94f4), 0x44);
        // CB 44 0392
        gbc.setState(0xbcc4, 0xeb74, 0xe690, 0x2708, 0x1220, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0xbcc4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xeb74);
        EXPECT(gbc.pc(), 0xbcc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc4), 0xcb);
        EXPECT(gbc.readMem(0xbcc5), 0x44);
        // CB 44 0393
        gbc.setState(0xc65, 0xed52, 0xff0, 0x7931, 0x7f43, 0xfe7f, 0x1, 0x0);
        gbc.writeMem(0xc65, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xed52);
        EXPECT(gbc.pc(), 0xc67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0394
        gbc.setState(0x2376, 0x9066, 0x4c70, 0x7fb2, 0x4463, 0x4794, 0x1, 0x0);
        gbc.writeMem(0x2376, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9066);
        EXPECT(gbc.pc(), 0x2378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 0395
        gbc.setState(0x4dd7, 0xe829, 0x6660, 0xe524, 0xe270, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0x4dd7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe829);
        EXPECT(gbc.pc(), 0x4dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0396
        gbc.setState(0x517a, 0xcdd5, 0x7ec0, 0xe76d, 0xd870, 0xbdcc, 0x0, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcdd5);
        EXPECT(gbc.pc(), 0x517c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0397
        gbc.setState(0xcc15, 0xb71c, 0xb3c0, 0xb96a, 0xa74f, 0x6af4, 0x0, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb71c);
        EXPECT(gbc.pc(), 0xcc17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc15), 0xcb);
        EXPECT(gbc.readMem(0xcc16), 0x44);
        // CB 44 0398
        gbc.setState(0xb1b, 0xa664, 0xd720, 0x10fc, 0x1287, 0x58, 0x1, 0x1);
        gbc.writeMem(0xb1b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa664);
        EXPECT(gbc.pc(), 0xb1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 0399
        gbc.setState(0x5283, 0x687f, 0x53b0, 0x5b57, 0x925f, 0x272c, 0x0, 0x1);
        gbc.writeMem(0x5283, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x687f);
        EXPECT(gbc.pc(), 0x5285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 039A
        gbc.setState(0xc2c4, 0x5e7d, 0x7b70, 0xdf0a, 0xcdcc, 0xc032, 0x1, 0x1);
        gbc.writeMem(0xc2c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5e7d);
        EXPECT(gbc.pc(), 0xc2c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c4), 0xcb);
        EXPECT(gbc.readMem(0xc2c5), 0x44);
        // CB 44 039B
        gbc.setState(0xda20, 0x3004, 0x4400, 0xd754, 0xf97a, 0xb113, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3004);
        EXPECT(gbc.pc(), 0xda22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda20), 0xcb);
        EXPECT(gbc.readMem(0xda21), 0x44);
        // CB 44 039C
        gbc.setState(0xd016, 0x20e, 0x2f20, 0x7bee, 0xc093, 0x5a1f, 0x1, 0x0);
        gbc.writeMem(0xd016, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x20e);
        EXPECT(gbc.pc(), 0xd018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd016), 0xcb);
        EXPECT(gbc.readMem(0xd017), 0x44);
        // CB 44 039D
        gbc.setState(0x1992, 0x3bc4, 0xe890, 0xb317, 0x39a, 0x4424, 0x1, 0x1);
        gbc.writeMem(0x1992, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3bc4);
        EXPECT(gbc.pc(), 0x1994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 039E
        gbc.setState(0x894b, 0x8ae7, 0xfb50, 0xbb8, 0x2e0, 0x314a, 0x1, 0x1);
        gbc.writeMem(0x894b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8ae7);
        EXPECT(gbc.pc(), 0x894d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894b), 0xcb);
        EXPECT(gbc.readMem(0x894c), 0x44);
        // CB 44 039F
        gbc.setState(0xac19, 0x2b6e, 0x4b0, 0xd7cd, 0x5361, 0x26d2, 0x0, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2b6e);
        EXPECT(gbc.pc(), 0xac1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac19), 0xcb);
        EXPECT(gbc.readMem(0xac1a), 0x44);
        // CB 44 03A0
        gbc.setState(0x43a8, 0x5247, 0x80a0, 0x47f8, 0x5021, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0x43a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5247);
        EXPECT(gbc.pc(), 0x43aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03A1
        gbc.setState(0x3314, 0xa7d5, 0xeff0, 0x38a7, 0x8903, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa7d5);
        EXPECT(gbc.pc(), 0x3316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03A2
        gbc.setState(0xaccd, 0xc8a3, 0xb7d0, 0xbcb8, 0x2685, 0x9a08, 0x0, 0x0);
        gbc.writeMem(0xaccd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc8a3);
        EXPECT(gbc.pc(), 0xaccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaccd), 0xcb);
        EXPECT(gbc.readMem(0xacce), 0x44);
        // CB 44 03A3
        gbc.setState(0x2f79, 0xb49c, 0x2e50, 0xe29f, 0xb0b6, 0x94a3, 0x0, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb49c);
        EXPECT(gbc.pc(), 0x2f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03A4
        gbc.setState(0xe9b, 0x188f, 0xd610, 0x35f0, 0x7a4c, 0xd79, 0x1, 0x1);
        gbc.writeMem(0xe9b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x188f);
        EXPECT(gbc.pc(), 0xe9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03A5
        gbc.setState(0x16b9, 0x7a2, 0x7100, 0x1dc6, 0xa093, 0x9ed2, 0x0, 0x1);
        gbc.writeMem(0x16b9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7a2);
        EXPECT(gbc.pc(), 0x16bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03A6
        gbc.setState(0xb3b4, 0xe978, 0xad00, 0xe81, 0x9803, 0xcc06, 0x1, 0x1);
        gbc.writeMem(0xb3b4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe978);
        EXPECT(gbc.pc(), 0xb3b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3b4), 0xcb);
        EXPECT(gbc.readMem(0xb3b5), 0x44);
        // CB 44 03A7
        gbc.setState(0xd055, 0x1e5c, 0xd6b0, 0x4e0a, 0x1915, 0xc092, 0x1, 0x1);
        gbc.writeMem(0xd055, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1e5c);
        EXPECT(gbc.pc(), 0xd057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd055), 0xcb);
        EXPECT(gbc.readMem(0xd056), 0x44);
        // CB 44 03A8
        gbc.setState(0xad51, 0xc9a0, 0xac30, 0xe8b, 0x6478, 0x801, 0x1, 0x0);
        gbc.writeMem(0xad51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc9a0);
        EXPECT(gbc.pc(), 0xad53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad51), 0xcb);
        EXPECT(gbc.readMem(0xad52), 0x44);
        // CB 44 03A9
        gbc.setState(0x8d7, 0xa297, 0x8e00, 0x799c, 0x3354, 0x3de2, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xa297);
        EXPECT(gbc.pc(), 0x8d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03AA
        gbc.setState(0x8a50, 0xa3c3, 0x64b0, 0x70a, 0x59ec, 0xc5c2, 0x0, 0x1);
        gbc.writeMem(0x8a50, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa3c3);
        EXPECT(gbc.pc(), 0x8a52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a50), 0xcb);
        EXPECT(gbc.readMem(0x8a51), 0x44);
        // CB 44 03AB
        gbc.setState(0x5883, 0xe10e, 0xa7c0, 0xe950, 0x4f00, 0x556f, 0x1, 0x1);
        gbc.writeMem(0x5883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe10e);
        EXPECT(gbc.pc(), 0x5885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03AC
        gbc.setState(0xdf95, 0xb8f9, 0x7520, 0xe9fb, 0x879f, 0xbce8, 0x1, 0x0);
        gbc.writeMem(0xdf95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb8f9);
        EXPECT(gbc.pc(), 0xdf97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf95), 0xcb);
        EXPECT(gbc.readMem(0xdf96), 0x44);
        // CB 44 03AD
        gbc.setState(0xd863, 0x2c5e, 0x1a40, 0xf4d1, 0x487d, 0xaff6, 0x1, 0x1);
        gbc.writeMem(0xd863, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2c5e);
        EXPECT(gbc.pc(), 0xd865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd863), 0xcb);
        EXPECT(gbc.readMem(0xd864), 0x44);
        // CB 44 03AE
        gbc.setState(0xe729, 0x78b3, 0xcf40, 0xf0ec, 0x6e38, 0x2ef3, 0x1, 0x1);
        gbc.writeMem(0xe729, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x78b3);
        EXPECT(gbc.pc(), 0xe72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe729), 0xcb);
        EXPECT(gbc.readMem(0xe72a), 0x44);
        // CB 44 03AF
        gbc.setState(0x3726, 0xdab2, 0x95f0, 0x3fbe, 0x9587, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x3726, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdab2);
        EXPECT(gbc.pc(), 0x3728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03B0
        gbc.setState(0x2bee, 0x841a, 0x5aa0, 0x4492, 0x3b52, 0x6e02, 0x0, 0x1);
        gbc.writeMem(0x2bee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x841a);
        EXPECT(gbc.pc(), 0x2bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03B1
        gbc.setState(0x9542, 0xa5e0, 0xb880, 0xbd86, 0x93cc, 0xcb62, 0x1, 0x1);
        gbc.writeMem(0x9542, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xa5e0);
        EXPECT(gbc.pc(), 0x9544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9542), 0xcb);
        EXPECT(gbc.readMem(0x9543), 0x44);
        // CB 44 03B3
        gbc.setState(0xbe83, 0x122, 0xb9e0, 0xee2c, 0x5047, 0x5fc, 0x1, 0x1);
        gbc.writeMem(0xbe83, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x122);
        EXPECT(gbc.pc(), 0xbe85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe83), 0xcb);
        EXPECT(gbc.readMem(0xbe84), 0x44);
        // CB 44 03B4
        gbc.setState(0xbd23, 0x5601, 0xcd30, 0x297c, 0xa92e, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0xbd23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5601);
        EXPECT(gbc.pc(), 0xbd25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd23), 0xcb);
        EXPECT(gbc.readMem(0xbd24), 0x44);
        // CB 44 03B5
        gbc.setState(0xdb10, 0x652e, 0x6050, 0xb126, 0x992f, 0xe237, 0x0, 0x1);
        gbc.writeMem(0xdb10, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x652e);
        EXPECT(gbc.pc(), 0xdb12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb10), 0xcb);
        EXPECT(gbc.readMem(0xdb11), 0x44);
        // CB 44 03B6
        gbc.setState(0x6b11, 0x9033, 0xcb80, 0x62d2, 0x78a6, 0x7d0e, 0x0, 0x0);
        gbc.writeMem(0x6b11, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9033);
        EXPECT(gbc.pc(), 0x6b13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03B7
        gbc.setState(0x15bb, 0xefdb, 0x72f0, 0xf842, 0x6299, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xefdb);
        EXPECT(gbc.pc(), 0x15bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03B8
        gbc.setState(0xd292, 0x1d1a, 0x1e20, 0xadd2, 0x660d, 0x6050, 0x0, 0x1);
        gbc.writeMem(0xd292, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1d1a);
        EXPECT(gbc.pc(), 0xd294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd292), 0xcb);
        EXPECT(gbc.readMem(0xd293), 0x44);
        // CB 44 03B9
        gbc.setState(0xab4a, 0xb3a2, 0x3720, 0xb195, 0xd075, 0x283b, 0x0, 0x1);
        gbc.writeMem(0xab4a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb3a2);
        EXPECT(gbc.pc(), 0xab4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab4a), 0xcb);
        EXPECT(gbc.readMem(0xab4b), 0x44);
        // CB 44 03BA
        gbc.setState(0x8f75, 0xbb6d, 0x8070, 0x6d3f, 0xb611, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x8f75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xbb6d);
        EXPECT(gbc.pc(), 0x8f77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f75), 0xcb);
        EXPECT(gbc.readMem(0x8f76), 0x44);
        // CB 44 03BB
        gbc.setState(0xc3b8, 0xcf24, 0x1a20, 0xd90c, 0xc7c7, 0xc2f1, 0x0, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcf24);
        EXPECT(gbc.pc(), 0xc3ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b8), 0xcb);
        EXPECT(gbc.readMem(0xc3b9), 0x44);
        // CB 44 03BC
        gbc.setState(0xbc84, 0x67fc, 0x1740, 0xa112, 0xe343, 0xb45e, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x67fc);
        EXPECT(gbc.pc(), 0xbc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc84), 0xcb);
        EXPECT(gbc.readMem(0xbc85), 0x44);
        // CB 44 03BD
        gbc.setState(0xda19, 0xb180, 0xfe30, 0xcfdc, 0x5d3d, 0x225c, 0x0, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb180);
        EXPECT(gbc.pc(), 0xda1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda19), 0xcb);
        EXPECT(gbc.readMem(0xda1a), 0x44);
        // CB 44 03BE
        gbc.setState(0xce1a, 0x739c, 0xf810, 0x8f63, 0x2502, 0xbb47, 0x1, 0x1);
        gbc.writeMem(0xce1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x739c);
        EXPECT(gbc.pc(), 0xce1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce1a), 0xcb);
        EXPECT(gbc.readMem(0xce1b), 0x44);
        // CB 44 03C0
        gbc.setState(0x12bb, 0xcc93, 0x7910, 0x45a7, 0x222b, 0xae8b, 0x1, 0x0);
        gbc.writeMem(0x12bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcc93);
        EXPECT(gbc.pc(), 0x12bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03C1
        gbc.setState(0xa9a4, 0x9ad9, 0x41b0, 0x369, 0x6333, 0x38eb, 0x0, 0x1);
        gbc.writeMem(0xa9a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9ad9);
        EXPECT(gbc.pc(), 0xa9a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a4), 0xcb);
        EXPECT(gbc.readMem(0xa9a5), 0x44);
        // CB 44 03C2
        gbc.setState(0x7bc, 0xc1ce, 0xb0c0, 0x9beb, 0x9278, 0xbe68, 0x1, 0x1);
        gbc.writeMem(0x7bc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc1ce);
        EXPECT(gbc.pc(), 0x7be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03C3
        gbc.setState(0x4f90, 0xbd70, 0xbb30, 0x6a35, 0xbbbe, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x4f90, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xbd70);
        EXPECT(gbc.pc(), 0x4f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03C4
        gbc.setState(0x3f36, 0x5cd4, 0x7f90, 0x1d56, 0xdee0, 0x6525, 0x1, 0x0);
        gbc.writeMem(0x3f36, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0x3f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03C6
        gbc.setState(0x22b7, 0x41c6, 0x8220, 0x51fb, 0x44c5, 0x99b2, 0x1, 0x0);
        gbc.writeMem(0x22b7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x41c6);
        EXPECT(gbc.pc(), 0x22b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03C7
        gbc.setState(0xd0e0, 0xc2e7, 0x5d50, 0xd69e, 0x71c1, 0x4ca9, 0x0, 0x1);
        gbc.writeMem(0xd0e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc2e7);
        EXPECT(gbc.pc(), 0xd0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e0), 0xcb);
        EXPECT(gbc.readMem(0xd0e1), 0x44);
        // CB 44 03C8
        gbc.setState(0x55d1, 0x9dd2, 0x4940, 0x6d15, 0xc42e, 0xc024, 0x0, 0x1);
        gbc.writeMem(0x55d1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9dd2);
        EXPECT(gbc.pc(), 0x55d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03C9
        gbc.setState(0xc80a, 0x8b8a, 0x50d0, 0xed3b, 0xa221, 0x3d1, 0x0, 0x0);
        gbc.writeMem(0xc80a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8b8a);
        EXPECT(gbc.pc(), 0xc80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80a), 0xcb);
        EXPECT(gbc.readMem(0xc80b), 0x44);
        // CB 44 03CA
        gbc.setState(0x7003, 0xc23d, 0x2df0, 0xcb8f, 0x2215, 0x1fc4, 0x0, 0x1);
        gbc.writeMem(0x7003, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc23d);
        EXPECT(gbc.pc(), 0x7005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03CB
        gbc.setState(0xd006, 0x75f3, 0x13c0, 0x381d, 0x907, 0x9701, 0x0, 0x0);
        gbc.writeMem(0xd006, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x75f3);
        EXPECT(gbc.pc(), 0xd008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd006), 0xcb);
        EXPECT(gbc.readMem(0xd007), 0x44);
        // CB 44 03CC
        gbc.setState(0x1cb0, 0xdf60, 0x77c0, 0x8633, 0x2069, 0xe7df, 0x0, 0x0);
        gbc.writeMem(0x1cb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xdf60);
        EXPECT(gbc.pc(), 0x1cb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03CD
        gbc.setState(0x443, 0x38d7, 0x3e60, 0xb078, 0xd382, 0xb50e, 0x1, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x38d7);
        EXPECT(gbc.pc(), 0x445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03CE
        gbc.setState(0xda60, 0x2826, 0x1230, 0x3dde, 0x90b9, 0x4865, 0x0, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2826);
        EXPECT(gbc.pc(), 0xda62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda60), 0xcb);
        EXPECT(gbc.readMem(0xda61), 0x44);
        // CB 44 03CF
        gbc.setState(0x4261, 0x5d00, 0xfd90, 0xef60, 0x6f44, 0x48ca, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5d00);
        EXPECT(gbc.pc(), 0x4263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03D0
        gbc.setState(0x5311, 0x7666, 0x3290, 0xdbf9, 0x851e, 0x8bd8, 0x0, 0x1);
        gbc.writeMem(0x5311, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7666);
        EXPECT(gbc.pc(), 0x5313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03D1
        gbc.setState(0xd4f2, 0xa03c, 0xee70, 0x18f, 0x6b14, 0xcf3a, 0x0, 0x0);
        gbc.writeMem(0xd4f2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa03c);
        EXPECT(gbc.pc(), 0xd4f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f2), 0xcb);
        EXPECT(gbc.readMem(0xd4f3), 0x44);
        // CB 44 03D2
        gbc.setState(0xc191, 0xecd1, 0x79a0, 0x8e45, 0x7769, 0xc198, 0x1, 0x0);
        gbc.writeMem(0xc191, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xecd1);
        EXPECT(gbc.pc(), 0xc193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc191), 0xcb);
        EXPECT(gbc.readMem(0xc192), 0x44);
        // CB 44 03D3
        gbc.setState(0xfb6, 0x7511, 0x23f0, 0x37d2, 0x2d6d, 0x31da, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0xfb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03D4
        gbc.setState(0x57a8, 0x70e5, 0x6280, 0x5287, 0x9673, 0xebcf, 0x0, 0x0);
        gbc.writeMem(0x57a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x70e5);
        EXPECT(gbc.pc(), 0x57aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03D5
        gbc.setState(0x2e92, 0xd724, 0x5670, 0xade5, 0xdbc3, 0x6bc1, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd724);
        EXPECT(gbc.pc(), 0x2e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03D6
        gbc.setState(0x8140, 0x8436, 0xf120, 0x4834, 0x979e, 0xdde2, 0x0, 0x0);
        gbc.writeMem(0x8140, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8436);
        EXPECT(gbc.pc(), 0x8142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8140), 0xcb);
        EXPECT(gbc.readMem(0x8141), 0x44);
        // CB 44 03D7
        gbc.setState(0x72a5, 0xcca0, 0x74a0, 0x3d7f, 0xb384, 0xdc29, 0x1, 0x1);
        gbc.writeMem(0x72a5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcca0);
        EXPECT(gbc.pc(), 0x72a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03D8
        gbc.setState(0x5ccc, 0xd656, 0x7850, 0x1436, 0x5b93, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x5ccc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd656);
        EXPECT(gbc.pc(), 0x5cce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03D9
        gbc.setState(0x6a8f, 0xfd68, 0x15d0, 0x726, 0x66f1, 0xf3fb, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfd68);
        EXPECT(gbc.pc(), 0x6a91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03DA
        gbc.setState(0x3370, 0x5cf0, 0xe200, 0xe370, 0x937, 0xbc0c, 0x0, 0x1);
        gbc.writeMem(0x3370, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5cf0);
        EXPECT(gbc.pc(), 0x3372);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03DB
        gbc.setState(0x36a8, 0x1be7, 0xe570, 0xf903, 0x5b58, 0xfdee, 0x1, 0x1);
        gbc.writeMem(0x36a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1be7);
        EXPECT(gbc.pc(), 0x36aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03DC
        gbc.setState(0x6de0, 0xc166, 0x63a0, 0x6f6f, 0x78b1, 0x1b39, 0x1, 0x1);
        gbc.writeMem(0x6de0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc166);
        EXPECT(gbc.pc(), 0x6de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03DD
        gbc.setState(0xc1b, 0xddaf, 0xef00, 0x8c8c, 0x6356, 0x17f8, 0x0, 0x0);
        gbc.writeMem(0xc1b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xddaf);
        EXPECT(gbc.pc(), 0xc1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03DE
        gbc.setState(0xbe16, 0xdb5c, 0x5dd0, 0xeea3, 0x7cb, 0xf942, 0x1, 0x1);
        gbc.writeMem(0xbe16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdb5c);
        EXPECT(gbc.pc(), 0xbe18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe16), 0xcb);
        EXPECT(gbc.readMem(0xbe17), 0x44);
        // CB 44 03DF
        gbc.setState(0x65a7, 0xa5f7, 0xd380, 0xef88, 0x159a, 0x3134, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa5f7);
        EXPECT(gbc.pc(), 0x65a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03E0
        gbc.setState(0x61bb, 0x4ab9, 0x93a0, 0x650, 0xa624, 0x1b8f, 0x1, 0x1);
        gbc.writeMem(0x61bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4ab9);
        EXPECT(gbc.pc(), 0x61bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03E1
        gbc.setState(0xecd3, 0x1811, 0x7d00, 0xa539, 0x76f9, 0xecc1, 0x0, 0x1);
        gbc.writeMem(0xecd3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x1811);
        EXPECT(gbc.pc(), 0xecd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecd3), 0xcb);
        EXPECT(gbc.readMem(0xecd4), 0x44);
        // CB 44 03E2
        gbc.setState(0x284a, 0x3b7, 0x9c80, 0x66c5, 0x1722, 0xb189, 0x1, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x3b7);
        EXPECT(gbc.pc(), 0x284c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 44 03E3
        gbc.setState(0x3e20, 0x21f5, 0xfc70, 0x3b10, 0xecca, 0x44d7, 0x1, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x21f5);
        EXPECT(gbc.pc(), 0x3e22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03E5
        gbc.setState(0x330a, 0x7220, 0x2290, 0x6523, 0x22fa, 0xd5c3, 0x1, 0x0);
        gbc.writeMem(0x330a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7220);
        EXPECT(gbc.pc(), 0x330c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 44 03E6
        gbc.setState(0xabdd, 0xf7aa, 0xbf90, 0x18b4, 0x78c8, 0x5db, 0x0, 0x0);
        gbc.writeMem(0xabdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf7aa);
        EXPECT(gbc.pc(), 0xabdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabdd), 0xcb);
        EXPECT(gbc.readMem(0xabde), 0x44);
    }
