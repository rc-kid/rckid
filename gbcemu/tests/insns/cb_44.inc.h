    TEST(gbcemu, opcode_cb_44) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 44 0000
        gbc.setState(0xcc4e, 0x1c53, 0x69a0, 0x3d3b, 0xad27, 0x8137, 0x0, 0x0);
        gbc.writeMem(0xcc4e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1c53, gbc.sp());
        EXPECT(0xcc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4e));
        EXPECT(0x44, gbc.readMem(0xcc4f));
        // CB 44 0001
        gbc.setState(0x4265, 0xd38e, 0xa8e0, 0x7ca5, 0x4b3, 0xec8, 0x0, 0x0);
        gbc.writeMem(0x4265, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd38e, gbc.sp());
        EXPECT(0x4267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0002
        gbc.setState(0x2e7b, 0xb4df, 0xc7d0, 0xb0e0, 0xc23a, 0xa823, 0x1, 0x1);
        gbc.writeMem(0x2e7b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0003
        gbc.setState(0x93c6, 0x5a65, 0x2a60, 0xba0c, 0x79af, 0x7bff, 0x0, 0x0);
        gbc.writeMem(0x93c6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x93c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93c6));
        EXPECT(0x44, gbc.readMem(0x93c7));
        // CB 44 0004
        gbc.setState(0x7899, 0xc0d1, 0x3c10, 0x9562, 0xfa9d, 0x2e86, 0x0, 0x0);
        gbc.writeMem(0x7899, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0005
        gbc.setState(0xe625, 0x6510, 0xb320, 0x9df1, 0xd5f5, 0x3ef6, 0x1, 0x1);
        gbc.writeMem(0xe625, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6510, gbc.sp());
        EXPECT(0xe627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe625));
        EXPECT(0x44, gbc.readMem(0xe626));
        // CB 44 0006
        gbc.setState(0x76ee, 0xb5a4, 0x17a0, 0xa9a2, 0xaefd, 0xbfa7, 0x0, 0x0);
        gbc.writeMem(0x76ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb5a4, gbc.sp());
        EXPECT(0x76f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0007
        gbc.setState(0xd0d9, 0xac10, 0xbaa0, 0x9f70, 0x3f89, 0xff22, 0x0, 0x1);
        gbc.writeMem(0xd0d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xac10, gbc.sp());
        EXPECT(0xd0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d9));
        EXPECT(0x44, gbc.readMem(0xd0da));
        // CB 44 0008
        gbc.setState(0x86dc, 0xbf58, 0xbf40, 0xcd1e, 0x6540, 0x21f5, 0x1, 0x0);
        gbc.writeMem(0x86dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0x86de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dc));
        EXPECT(0x44, gbc.readMem(0x86dd));
        // CB 44 0009
        gbc.setState(0x7c54, 0x381b, 0xff20, 0xadce, 0xb6b, 0x358d, 0x0, 0x0);
        gbc.writeMem(0x7c54, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0x7c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 000A
        gbc.setState(0xccd8, 0x1a90, 0xab10, 0xd859, 0x7d7d, 0xd9d9, 0x1, 0x0);
        gbc.writeMem(0xccd8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a90, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd8));
        EXPECT(0x44, gbc.readMem(0xccd9));
        // CB 44 000B
        gbc.setState(0x4384, 0x5550, 0x7780, 0x335b, 0x111b, 0x3758, 0x1, 0x1);
        gbc.writeMem(0x4384, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 000C
        gbc.setState(0x2260, 0x6874, 0x1c50, 0x9531, 0xa815, 0x9628, 0x0, 0x0);
        gbc.writeMem(0x2260, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6874, gbc.sp());
        EXPECT(0x2262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 000D
        gbc.setState(0x9a44, 0x9afe, 0xebb0, 0x75a, 0x14b8, 0xb986, 0x0, 0x0);
        gbc.writeMem(0x9a44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9afe, gbc.sp());
        EXPECT(0x9a46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a44));
        EXPECT(0x44, gbc.readMem(0x9a45));
        // CB 44 000E
        gbc.setState(0x770b, 0xa815, 0xfce0, 0x4243, 0x7fce, 0x907e, 0x0, 0x0);
        gbc.writeMem(0x770b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa815, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 000F
        gbc.setState(0x4415, 0xce9f, 0xb360, 0xd616, 0x95b7, 0x35a, 0x1, 0x1);
        gbc.writeMem(0x4415, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x4417, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0010
        gbc.setState(0xb99e, 0x80ed, 0x3270, 0xbec5, 0x95e, 0x31c4, 0x0, 0x0);
        gbc.writeMem(0xb99e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x80ed, gbc.sp());
        EXPECT(0xb9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb99e));
        EXPECT(0x44, gbc.readMem(0xb99f));
        // CB 44 0011
        gbc.setState(0xdb35, 0xd2c1, 0xd890, 0xd74d, 0x78ec, 0xd2a, 0x0, 0x1);
        gbc.writeMem(0xdb35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd2c1, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb35));
        EXPECT(0x44, gbc.readMem(0xdb36));
        // CB 44 0012
        gbc.setState(0xc0a0, 0xdd92, 0xc4a0, 0xbbb1, 0x440, 0x2b1d, 0x0, 0x1);
        gbc.writeMem(0xc0a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xdd92, gbc.sp());
        EXPECT(0xc0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0a0));
        EXPECT(0x44, gbc.readMem(0xc0a1));
        // CB 44 0013
        gbc.setState(0xcedf, 0x2487, 0xcef0, 0xf49f, 0x4c44, 0xee9c, 0x1, 0x1);
        gbc.writeMem(0xcedf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2487, gbc.sp());
        EXPECT(0xcee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcedf));
        EXPECT(0x44, gbc.readMem(0xcee0));
        // CB 44 0014
        gbc.setState(0x8e01, 0x1045, 0x8b70, 0xb07d, 0xd1b4, 0x64ad, 0x0, 0x1);
        gbc.writeMem(0x8e01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1045, gbc.sp());
        EXPECT(0x8e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e01));
        EXPECT(0x44, gbc.readMem(0x8e02));
        // CB 44 0015
        gbc.setState(0xe270, 0x2a0c, 0x6c80, 0x9cd3, 0x4c71, 0x696b, 0x0, 0x0);
        gbc.writeMem(0xe270, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0xe272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe270));
        EXPECT(0x44, gbc.readMem(0xe271));
        // CB 44 0016
        gbc.setState(0x75de, 0x3972, 0xa070, 0x2db4, 0x244b, 0x452b, 0x1, 0x1);
        gbc.writeMem(0x75de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3972, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0017
        gbc.setState(0x8cd1, 0xd1bf, 0x3ae0, 0x7e24, 0x25fa, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x8cd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd1bf, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd1));
        EXPECT(0x44, gbc.readMem(0x8cd2));
        // CB 44 0018
        gbc.setState(0xd9ce, 0x4811, 0xd050, 0xf863, 0x39f, 0x276f, 0x1, 0x0);
        gbc.writeMem(0xd9ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4811, gbc.sp());
        EXPECT(0xd9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ce));
        EXPECT(0x44, gbc.readMem(0xd9cf));
        // CB 44 0019
        gbc.setState(0x6972, 0x47f5, 0x3100, 0x2690, 0x4404, 0x6100, 0x1, 0x1);
        gbc.writeMem(0x6972, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0x6974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 001A
        gbc.setState(0x4cb3, 0x287a, 0xa90, 0x243f, 0xdc39, 0x2ae2, 0x1, 0x1);
        gbc.writeMem(0x4cb3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x4cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 001C
        gbc.setState(0xaf69, 0xd66c, 0x8690, 0xc37f, 0x4560, 0xb8cf, 0x1, 0x1);
        gbc.writeMem(0xaf69, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd66c, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf69));
        EXPECT(0x44, gbc.readMem(0xaf6a));
        // CB 44 001D
        gbc.setState(0x3293, 0xef07, 0x12b0, 0xf7c2, 0x9195, 0x329a, 0x0, 0x0);
        gbc.writeMem(0x3293, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0x3295, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 001E
        gbc.setState(0xb7cc, 0xed33, 0x30f0, 0xf935, 0xdc04, 0x20f6, 0x1, 0x0);
        gbc.writeMem(0xb7cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xed33, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cc));
        EXPECT(0x44, gbc.readMem(0xb7cd));
        // CB 44 0020
        gbc.setState(0x888f, 0x27ff, 0xf120, 0xfc66, 0x6a21, 0x15f0, 0x1, 0x0);
        gbc.writeMem(0x888f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x27ff, gbc.sp());
        EXPECT(0x8891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888f));
        EXPECT(0x44, gbc.readMem(0x8890));
        // CB 44 0021
        gbc.setState(0xb262, 0x3dec, 0xbb70, 0xfaac, 0x9918, 0xf93, 0x0, 0x0);
        gbc.writeMem(0xb262, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3dec, gbc.sp());
        EXPECT(0xb264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb262));
        EXPECT(0x44, gbc.readMem(0xb263));
        // CB 44 0022
        gbc.setState(0xaff, 0xeda3, 0x81e0, 0x56ac, 0xb871, 0x7c08, 0x0, 0x0);
        gbc.writeMem(0xaff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xeda3, gbc.sp());
        EXPECT(0xb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0023
        gbc.setState(0x4e29, 0xd088, 0xe160, 0x1e08, 0xd910, 0x933f, 0x1, 0x0);
        gbc.writeMem(0x4e29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x4e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0024
        gbc.setState(0xa9b6, 0x262e, 0x4520, 0xad30, 0x4943, 0xe93, 0x1, 0x1);
        gbc.writeMem(0xa9b6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x262e, gbc.sp());
        EXPECT(0xa9b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b6));
        EXPECT(0x44, gbc.readMem(0xa9b7));
        // CB 44 0025
        gbc.setState(0xcd96, 0x595f, 0x9710, 0xec49, 0xde64, 0xc87b, 0x0, 0x1);
        gbc.writeMem(0xcd96, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x595f, gbc.sp());
        EXPECT(0xcd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd96));
        EXPECT(0x44, gbc.readMem(0xcd97));
        // CB 44 0026
        gbc.setState(0xec86, 0x4591, 0x52e0, 0x4399, 0xd81f, 0x26d4, 0x1, 0x1);
        gbc.writeMem(0xec86, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4591, gbc.sp());
        EXPECT(0xec88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec86));
        EXPECT(0x44, gbc.readMem(0xec87));
        // CB 44 0027
        gbc.setState(0xbcdc, 0xd1c6, 0x66a0, 0x8190, 0x4b3e, 0x3688, 0x0, 0x0);
        gbc.writeMem(0xbcdc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd1c6, gbc.sp());
        EXPECT(0xbcde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdc));
        EXPECT(0x44, gbc.readMem(0xbcdd));
        // CB 44 0028
        gbc.setState(0x15a9, 0xf40, 0x1a0, 0x31b4, 0x533b, 0x1a32, 0x1, 0x0);
        gbc.writeMem(0x15a9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf40, gbc.sp());
        EXPECT(0x15ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0029
        gbc.setState(0xc064, 0x91a9, 0x6800, 0xab38, 0x833f, 0x6940, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x91a9, gbc.sp());
        EXPECT(0xc066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc064));
        EXPECT(0x44, gbc.readMem(0xc065));
        // CB 44 002B
        gbc.setState(0x2748, 0xd86d, 0xd590, 0x5184, 0x477, 0xc66a, 0x0, 0x0);
        gbc.writeMem(0x2748, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd86d, gbc.sp());
        EXPECT(0x274a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 002C
        gbc.setState(0x5b2b, 0x22af, 0x7f0, 0xa6ae, 0xdc9a, 0x596c, 0x1, 0x1);
        gbc.writeMem(0x5b2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x22af, gbc.sp());
        EXPECT(0x5b2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 002D
        gbc.setState(0x9f28, 0xa73a, 0x6440, 0xe70e, 0xfc6e, 0x1d69, 0x0, 0x0);
        gbc.writeMem(0x9f28, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa73a, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f28));
        EXPECT(0x44, gbc.readMem(0x9f29));
        // CB 44 002E
        gbc.setState(0x4353, 0xa643, 0xbff0, 0x3c91, 0x4286, 0x2250, 0x0, 0x1);
        gbc.writeMem(0x4353, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa643, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 002F
        gbc.setState(0x4c2a, 0x30ee, 0x66b0, 0xcf26, 0x3ca3, 0xbb78, 0x1, 0x1);
        gbc.writeMem(0x4c2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x30ee, gbc.sp());
        EXPECT(0x4c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0030
        gbc.setState(0x1618, 0x760, 0xf890, 0xfdc6, 0x8bcf, 0xcfc1, 0x0, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x760, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0031
        gbc.setState(0xbb52, 0x2db8, 0x2560, 0x34a7, 0xea4e, 0x220a, 0x0, 0x0);
        gbc.writeMem(0xbb52, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2db8, gbc.sp());
        EXPECT(0xbb54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb52));
        EXPECT(0x44, gbc.readMem(0xbb53));
        // CB 44 0032
        gbc.setState(0x38e, 0x6182, 0xa730, 0xbddf, 0xcd8d, 0xaf1f, 0x1, 0x1);
        gbc.writeMem(0x38e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6182, gbc.sp());
        EXPECT(0x390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0033
        gbc.setState(0x59f1, 0x9126, 0xad20, 0xcf1a, 0x9d92, 0xa653, 0x1, 0x1);
        gbc.writeMem(0x59f1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9126, gbc.sp());
        EXPECT(0x59f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0035
        gbc.setState(0x2ad2, 0xbb54, 0x5330, 0xf7fb, 0xaf6c, 0xf336, 0x0, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbb54, gbc.sp());
        EXPECT(0x2ad4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0036
        gbc.setState(0x5673, 0xb7ea, 0xcc50, 0x4a7e, 0x2ab2, 0xbf77, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0037
        gbc.setState(0x27cf, 0x6434, 0x3300, 0x2f1d, 0x2c0, 0x1943, 0x1, 0x1);
        gbc.writeMem(0x27cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6434, gbc.sp());
        EXPECT(0x27d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0038
        gbc.setState(0x8c22, 0xbfc7, 0xdd50, 0x7e8d, 0x1b89, 0x882c, 0x1, 0x1);
        gbc.writeMem(0x8c22, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbfc7, gbc.sp());
        EXPECT(0x8c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c22));
        EXPECT(0x44, gbc.readMem(0x8c23));
        // CB 44 0039
        gbc.setState(0x9bc5, 0xa44f, 0x5310, 0x3894, 0xc895, 0x872b, 0x0, 0x1);
        gbc.writeMem(0x9bc5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa44f, gbc.sp());
        EXPECT(0x9bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc5));
        EXPECT(0x44, gbc.readMem(0x9bc6));
        // CB 44 003A
        gbc.setState(0xc74, 0x553c, 0x3050, 0x9f2d, 0xb0a0, 0x653f, 0x1, 0x0);
        gbc.writeMem(0xc74, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x553c, gbc.sp());
        EXPECT(0xc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 003B
        gbc.setState(0x5615, 0x810b, 0xb410, 0xaf3a, 0x43fa, 0x4f47, 0x1, 0x1);
        gbc.writeMem(0x5615, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x810b, gbc.sp());
        EXPECT(0x5617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 003C
        gbc.setState(0x5502, 0x50bb, 0x2cf0, 0xdfd4, 0x4c03, 0xb87d, 0x1, 0x1);
        gbc.writeMem(0x5502, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x50bb, gbc.sp());
        EXPECT(0x5504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 003D
        gbc.setState(0x44e, 0x329f, 0xfb10, 0xd802, 0xee66, 0x9f45, 0x1, 0x1);
        gbc.writeMem(0x44e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x329f, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 003E
        gbc.setState(0x8cbc, 0xbe8d, 0x1ec0, 0x2645, 0x82db, 0x2ffb, 0x0, 0x0);
        gbc.writeMem(0x8cbc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbe8d, gbc.sp());
        EXPECT(0x8cbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbc));
        EXPECT(0x44, gbc.readMem(0x8cbd));
        // CB 44 003F
        gbc.setState(0xd6e0, 0xce55, 0x8bb0, 0x9ce5, 0xe5a6, 0x7e1f, 0x1, 0x1);
        gbc.writeMem(0xd6e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0xd6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e0));
        EXPECT(0x44, gbc.readMem(0xd6e1));
        // CB 44 0040
        gbc.setState(0x2e0, 0xea5f, 0x5c40, 0x8e06, 0x657e, 0x5c0c, 0x1, 0x0);
        gbc.writeMem(0x2e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xea5f, gbc.sp());
        EXPECT(0x2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0041
        gbc.setState(0x6180, 0xe723, 0x2960, 0xf958, 0x58d6, 0x89bb, 0x0, 0x1);
        gbc.writeMem(0x6180, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe723, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0042
        gbc.setState(0xbde0, 0xefa0, 0x2000, 0xfe24, 0x8dc8, 0xa6d, 0x1, 0x0);
        gbc.writeMem(0xbde0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xefa0, gbc.sp());
        EXPECT(0xbde2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde0));
        EXPECT(0x44, gbc.readMem(0xbde1));
        // CB 44 0043
        gbc.setState(0x455b, 0xe2f5, 0xfa20, 0x5ae8, 0xf16b, 0x2338, 0x1, 0x1);
        gbc.writeMem(0x455b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe2f5, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0044
        gbc.setState(0xc76b, 0x9afa, 0xde40, 0xd603, 0x1a22, 0xbb87, 0x0, 0x1);
        gbc.writeMem(0xc76b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9afa, gbc.sp());
        EXPECT(0xc76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76b));
        EXPECT(0x44, gbc.readMem(0xc76c));
        // CB 44 0045
        gbc.setState(0xeef, 0xc9a9, 0x2610, 0x8c07, 0x36dc, 0xba7, 0x1, 0x0);
        gbc.writeMem(0xeef, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc9a9, gbc.sp());
        EXPECT(0xef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0046
        gbc.setState(0xb7fc, 0x5b8b, 0xdc60, 0x8eea, 0x4655, 0x6dc1, 0x0, 0x1);
        gbc.writeMem(0xb7fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0xb7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7fc));
        EXPECT(0x44, gbc.readMem(0xb7fd));
        // CB 44 0047
        gbc.setState(0x5acc, 0xc1e8, 0xc990, 0x227d, 0xd3b4, 0xc46f, 0x1, 0x0);
        gbc.writeMem(0x5acc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc1e8, gbc.sp());
        EXPECT(0x5ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0048
        gbc.setState(0xce55, 0xc405, 0x3c90, 0xb6a4, 0x6b70, 0x17a8, 0x0, 0x1);
        gbc.writeMem(0xce55, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc405, gbc.sp());
        EXPECT(0xce57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce55));
        EXPECT(0x44, gbc.readMem(0xce56));
        // CB 44 0049
        gbc.setState(0x212f, 0x57fc, 0x1ae0, 0xca53, 0xf26e, 0x8e6b, 0x1, 0x1);
        gbc.writeMem(0x212f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x57fc, gbc.sp());
        EXPECT(0x2131, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 004A
        gbc.setState(0x16c9, 0xa6ed, 0x9a20, 0x9325, 0x3504, 0xf486, 0x0, 0x1);
        gbc.writeMem(0x16c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0x16cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 004B
        gbc.setState(0x54dc, 0xb9f1, 0xca80, 0xc246, 0x33cd, 0xb11a, 0x1, 0x1);
        gbc.writeMem(0x54dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 004C
        gbc.setState(0x24b7, 0xd69d, 0x7480, 0x37cb, 0xcea6, 0xf510, 0x0, 0x1);
        gbc.writeMem(0x24b7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x24b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 004D
        gbc.setState(0xb65a, 0x87ca, 0x7960, 0xcbdd, 0xb0f9, 0xdc0d, 0x1, 0x0);
        gbc.writeMem(0xb65a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x87ca, gbc.sp());
        EXPECT(0xb65c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65a));
        EXPECT(0x44, gbc.readMem(0xb65b));
        // CB 44 004E
        gbc.setState(0xd198, 0xb56a, 0xf650, 0x3a52, 0x9bf7, 0xc7ca, 0x0, 0x1);
        gbc.writeMem(0xd198, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb56a, gbc.sp());
        EXPECT(0xd19a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd198));
        EXPECT(0x44, gbc.readMem(0xd199));
        // CB 44 004F
        gbc.setState(0xa6b, 0x82be, 0xc250, 0x6941, 0xfc18, 0x9b1, 0x0, 0x0);
        gbc.writeMem(0xa6b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0050
        gbc.setState(0x97ad, 0x39b6, 0x2b30, 0xddd2, 0x8ba8, 0xf1ed, 0x1, 0x1);
        gbc.writeMem(0x97ad, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x39b6, gbc.sp());
        EXPECT(0x97af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ad));
        EXPECT(0x44, gbc.readMem(0x97ae));
        // CB 44 0051
        gbc.setState(0x5a7d, 0xe368, 0x2ac0, 0x9ed3, 0xb59, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0x5a7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe368, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0052
        gbc.setState(0xdac3, 0x1054, 0xa320, 0xefc6, 0x2bc8, 0xde7c, 0x0, 0x1);
        gbc.writeMem(0xdac3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0xdac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac3));
        EXPECT(0x44, gbc.readMem(0xdac4));
        // CB 44 0053
        gbc.setState(0xce44, 0x37eb, 0x9a70, 0x511a, 0xc1c5, 0xe93d, 0x0, 0x0);
        gbc.writeMem(0xce44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x37eb, gbc.sp());
        EXPECT(0xce46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce44));
        EXPECT(0x44, gbc.readMem(0xce45));
        // CB 44 0054
        gbc.setState(0x45bf, 0xa6b6, 0xc500, 0x272c, 0x6a02, 0xc9e7, 0x0, 0x0);
        gbc.writeMem(0x45bf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa6b6, gbc.sp());
        EXPECT(0x45c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0055
        gbc.setState(0xe4cc, 0x2ec4, 0x8b10, 0xdf2b, 0x5043, 0x3a0b, 0x1, 0x1);
        gbc.writeMem(0xe4cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xe4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4cc));
        EXPECT(0x44, gbc.readMem(0xe4cd));
        // CB 44 0056
        gbc.setState(0x39ad, 0x54e5, 0xcfb0, 0x5be4, 0x6e23, 0xaf66, 0x0, 0x1);
        gbc.writeMem(0x39ad, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0x39af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0057
        gbc.setState(0xeb75, 0x29af, 0x8a50, 0x8bfb, 0x2300, 0xe71, 0x1, 0x1);
        gbc.writeMem(0xeb75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x29af, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb75));
        EXPECT(0x44, gbc.readMem(0xeb76));
        // CB 44 0058
        gbc.setState(0x2c22, 0xe8ac, 0x6c80, 0xc4d0, 0xbacf, 0xb9b8, 0x0, 0x0);
        gbc.writeMem(0x2c22, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe8ac, gbc.sp());
        EXPECT(0x2c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0059
        gbc.setState(0x5fa1, 0xe8eb, 0x6750, 0xf98f, 0x919e, 0xfc46, 0x0, 0x0);
        gbc.writeMem(0x5fa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe8eb, gbc.sp());
        EXPECT(0x5fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 005A
        gbc.setState(0xccc4, 0xbb32, 0xa9f0, 0xa41, 0x32ce, 0xcd2c, 0x1, 0x1);
        gbc.writeMem(0xccc4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc4));
        EXPECT(0x44, gbc.readMem(0xccc5));
        // CB 44 005B
        gbc.setState(0x8c23, 0xe443, 0xe560, 0x8f87, 0x7faa, 0xa8cb, 0x0, 0x1);
        gbc.writeMem(0x8c23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe443, gbc.sp());
        EXPECT(0x8c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c23));
        EXPECT(0x44, gbc.readMem(0x8c24));
        // CB 44 005C
        gbc.setState(0x2cdf, 0xc62, 0x3880, 0x1962, 0xf77d, 0xc973, 0x0, 0x1);
        gbc.writeMem(0x2cdf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0x2ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 005D
        gbc.setState(0xaae0, 0xa3aa, 0x2890, 0x208d, 0x1079, 0xddb2, 0x0, 0x0);
        gbc.writeMem(0xaae0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa3aa, gbc.sp());
        EXPECT(0xaae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae0));
        EXPECT(0x44, gbc.readMem(0xaae1));
        // CB 44 005E
        gbc.setState(0xbfa7, 0xf7b3, 0xce10, 0x8e3f, 0xd500, 0xe971, 0x0, 0x0);
        gbc.writeMem(0xbfa7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0xbfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfa7));
        EXPECT(0x44, gbc.readMem(0xbfa8));
        // CB 44 005F
        gbc.setState(0xe6df, 0xd54d, 0x91c0, 0xadb, 0x318d, 0x5f52, 0x1, 0x1);
        gbc.writeMem(0xe6df, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd54d, gbc.sp());
        EXPECT(0xe6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6df));
        EXPECT(0x44, gbc.readMem(0xe6e0));
        // CB 44 0060
        gbc.setState(0xde8e, 0x108f, 0x1790, 0x9f7b, 0x2583, 0x6be5, 0x1, 0x1);
        gbc.writeMem(0xde8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0xde90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8e));
        EXPECT(0x44, gbc.readMem(0xde8f));
        // CB 44 0061
        gbc.setState(0xe70a, 0x90ac, 0x47e0, 0x6b5c, 0x583c, 0x725e, 0x0, 0x1);
        gbc.writeMem(0xe70a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x90ac, gbc.sp());
        EXPECT(0xe70c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70a));
        EXPECT(0x44, gbc.readMem(0xe70b));
        // CB 44 0062
        gbc.setState(0x3ac8, 0x8bff, 0x9ad0, 0xe849, 0x32cf, 0x57ed, 0x1, 0x0);
        gbc.writeMem(0x3ac8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8bff, gbc.sp());
        EXPECT(0x3aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0063
        gbc.setState(0xd2e2, 0x7b43, 0x9160, 0xc394, 0x178, 0xd23b, 0x0, 0x1);
        gbc.writeMem(0xd2e2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7b43, gbc.sp());
        EXPECT(0xd2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e2));
        EXPECT(0x44, gbc.readMem(0xd2e3));
        // CB 44 0065
        gbc.setState(0xee2, 0x4609, 0x23d0, 0x540b, 0x8631, 0x1d75, 0x0, 0x0);
        gbc.writeMem(0xee2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4609, gbc.sp());
        EXPECT(0xee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0066
        gbc.setState(0x59dc, 0xa379, 0xcbc0, 0x4e17, 0x44fd, 0x70af, 0x0, 0x1);
        gbc.writeMem(0x59dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa379, gbc.sp());
        EXPECT(0x59de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0067
        gbc.setState(0xe66e, 0x5e13, 0x68d0, 0xd12c, 0x649c, 0x6c94, 0x0, 0x0);
        gbc.writeMem(0xe66e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5e13, gbc.sp());
        EXPECT(0xe670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66e));
        EXPECT(0x44, gbc.readMem(0xe66f));
        // CB 44 0068
        gbc.setState(0x1817, 0xba29, 0x57b0, 0x7015, 0xa4e5, 0xe930, 0x0, 0x1);
        gbc.writeMem(0x1817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0069
        gbc.setState(0x763b, 0x9e17, 0xb840, 0xe083, 0x69a2, 0x2bbd, 0x1, 0x1);
        gbc.writeMem(0x763b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9e17, gbc.sp());
        EXPECT(0x763d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 006A
        gbc.setState(0xbc1a, 0xbf9f, 0x1d40, 0xfd2a, 0x4360, 0x7db4, 0x0, 0x0);
        gbc.writeMem(0xbc1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf9f, gbc.sp());
        EXPECT(0xbc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1a));
        EXPECT(0x44, gbc.readMem(0xbc1b));
        // CB 44 006B
        gbc.setState(0x17b0, 0x9ffd, 0x7640, 0x6c6c, 0xfabb, 0xd1dc, 0x0, 0x1);
        gbc.writeMem(0x17b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0x17b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 006C
        gbc.setState(0x29f, 0xf2c2, 0xa8c0, 0x3569, 0x8e21, 0x57ab, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf2c2, gbc.sp());
        EXPECT(0x2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 006D
        gbc.setState(0x83f7, 0x1027, 0xe50, 0xa692, 0xccb9, 0xdcf7, 0x1, 0x1);
        gbc.writeMem(0x83f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1027, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83f7));
        EXPECT(0x44, gbc.readMem(0x83f8));
        // CB 44 006E
        gbc.setState(0xb11a, 0xdda5, 0x5250, 0x9e60, 0xdf29, 0x3953, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdda5, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0x44, gbc.readMem(0xb11b));
        // CB 44 006F
        gbc.setState(0x2c68, 0xda3a, 0xa680, 0x2b6, 0x1375, 0x84a5, 0x0, 0x0);
        gbc.writeMem(0x2c68, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xda3a, gbc.sp());
        EXPECT(0x2c6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0070
        gbc.setState(0x252c, 0xa422, 0xf340, 0x6c7a, 0xf59d, 0x8124, 0x0, 0x0);
        gbc.writeMem(0x252c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa422, gbc.sp());
        EXPECT(0x252e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0071
        gbc.setState(0xbb97, 0x7d40, 0x22a0, 0x5ad8, 0xe4e2, 0xd449, 0x1, 0x0);
        gbc.writeMem(0xbb97, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7d40, gbc.sp());
        EXPECT(0xbb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb97));
        EXPECT(0x44, gbc.readMem(0xbb98));
        // CB 44 0072
        gbc.setState(0xa247, 0x65e7, 0xe2d0, 0x8c82, 0xc894, 0x1814, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x65e7, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa247));
        EXPECT(0x44, gbc.readMem(0xa248));
        // CB 44 0073
        gbc.setState(0x4cb6, 0xfac5, 0x820, 0xdad5, 0x6629, 0x80dc, 0x1, 0x1);
        gbc.writeMem(0x4cb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0x4cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0074
        gbc.setState(0x4c6d, 0xb84d, 0x42d0, 0x5b53, 0xbef5, 0x7e19, 0x1, 0x0);
        gbc.writeMem(0x4c6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb84d, gbc.sp());
        EXPECT(0x4c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0075
        gbc.setState(0x686b, 0x1afc, 0x85e0, 0x2bf0, 0xb59d, 0xb7e9, 0x0, 0x1);
        gbc.writeMem(0x686b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0076
        gbc.setState(0xba30, 0xf1fb, 0x8800, 0x7c9f, 0x8721, 0xb98d, 0x1, 0x0);
        gbc.writeMem(0xba30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf1fb, gbc.sp());
        EXPECT(0xba32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba30));
        EXPECT(0x44, gbc.readMem(0xba31));
        // CB 44 0077
        gbc.setState(0xc24c, 0xb8cf, 0xe830, 0xe81e, 0x8d3f, 0xaa9a, 0x1, 0x0);
        gbc.writeMem(0xc24c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb8cf, gbc.sp());
        EXPECT(0xc24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24c));
        EXPECT(0x44, gbc.readMem(0xc24d));
        // CB 44 0078
        gbc.setState(0xce7e, 0x1538, 0xbc30, 0x10c2, 0xad1a, 0x60d1, 0x1, 0x0);
        gbc.writeMem(0xce7e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1538, gbc.sp());
        EXPECT(0xce80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce7e));
        EXPECT(0x44, gbc.readMem(0xce7f));
        // CB 44 0079
        gbc.setState(0xc50b, 0xb366, 0x5620, 0xb01d, 0x2774, 0x92b7, 0x1, 0x1);
        gbc.writeMem(0xc50b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50b));
        EXPECT(0x44, gbc.readMem(0xc50c));
        // CB 44 007A
        gbc.setState(0xe63b, 0x6926, 0x9080, 0xf90a, 0xe17, 0x330b, 0x0, 0x0);
        gbc.writeMem(0xe63b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6926, gbc.sp());
        EXPECT(0xe63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63b));
        EXPECT(0x44, gbc.readMem(0xe63c));
        // CB 44 007B
        gbc.setState(0x1ac2, 0xad73, 0x8090, 0x2a02, 0x9019, 0x8d66, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xad73, gbc.sp());
        EXPECT(0x1ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 007C
        gbc.setState(0x68da, 0x85aa, 0x7170, 0x193c, 0x157b, 0x5d0f, 0x1, 0x1);
        gbc.writeMem(0x68da, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x85aa, gbc.sp());
        EXPECT(0x68dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 007E
        gbc.setState(0xa5f6, 0xf694, 0xcf10, 0xa149, 0x73b5, 0xd789, 0x0, 0x0);
        gbc.writeMem(0xa5f6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf694, gbc.sp());
        EXPECT(0xa5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f6));
        EXPECT(0x44, gbc.readMem(0xa5f7));
        // CB 44 007F
        gbc.setState(0x30c0, 0x9b58, 0xf7e0, 0x6a98, 0x4f0, 0xe031, 0x1, 0x1);
        gbc.writeMem(0x30c0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9b58, gbc.sp());
        EXPECT(0x30c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0080
        gbc.setState(0x4f01, 0x4e9d, 0x3530, 0x63a9, 0xdbbf, 0xdf00, 0x0, 0x1);
        gbc.writeMem(0x4f01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0x4f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0081
        gbc.setState(0x2f58, 0xc047, 0x9fe0, 0xe21, 0x2c09, 0x71ee, 0x1, 0x0);
        gbc.writeMem(0x2f58, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0x2f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0082
        gbc.setState(0xc419, 0x9671, 0x23f0, 0x7523, 0xdfe2, 0x4163, 0x0, 0x1);
        gbc.writeMem(0xc419, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9671, gbc.sp());
        EXPECT(0xc41b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc419));
        EXPECT(0x44, gbc.readMem(0xc41a));
        // CB 44 0083
        gbc.setState(0x60a8, 0xfd12, 0x8da0, 0xbac0, 0xeeb7, 0xab16, 0x1, 0x1);
        gbc.writeMem(0x60a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfd12, gbc.sp());
        EXPECT(0x60aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0084
        gbc.setState(0x28c2, 0x55f6, 0xdfd0, 0x52ef, 0x364b, 0xe9df, 0x0, 0x1);
        gbc.writeMem(0x28c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x55f6, gbc.sp());
        EXPECT(0x28c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0085
        gbc.setState(0x8b41, 0xdf13, 0xd310, 0xda7c, 0x8e8e, 0x5ddb, 0x0, 0x1);
        gbc.writeMem(0x8b41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdf13, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b41));
        EXPECT(0x44, gbc.readMem(0x8b42));
        // CB 44 0086
        gbc.setState(0x3d0d, 0xce78, 0xa0c0, 0xa22, 0x31ec, 0x9ea4, 0x0, 0x0);
        gbc.writeMem(0x3d0d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xce78, gbc.sp());
        EXPECT(0x3d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0087
        gbc.setState(0x9f7c, 0xed50, 0x5260, 0x5725, 0x468f, 0x1aa4, 0x1, 0x0);
        gbc.writeMem(0x9f7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xed50, gbc.sp());
        EXPECT(0x9f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7c));
        EXPECT(0x44, gbc.readMem(0x9f7d));
        // CB 44 0088
        gbc.setState(0xd26d, 0x1fad, 0x8e40, 0xf390, 0xec2b, 0x1700, 0x0, 0x0);
        gbc.writeMem(0xd26d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1fad, gbc.sp());
        EXPECT(0xd26f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26d));
        EXPECT(0x44, gbc.readMem(0xd26e));
        // CB 44 0089
        gbc.setState(0xa1, 0x730, 0x3a30, 0x6ac, 0xfb6b, 0x2e4a, 0x0, 0x0);
        gbc.writeMem(0xa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x730, gbc.sp());
        EXPECT(0xa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 008A
        gbc.setState(0xbd4d, 0x4695, 0xdf40, 0xf009, 0x3040, 0x25d8, 0x1, 0x0);
        gbc.writeMem(0xbd4d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4695, gbc.sp());
        EXPECT(0xbd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4d));
        EXPECT(0x44, gbc.readMem(0xbd4e));
        // CB 44 008B
        gbc.setState(0x23c4, 0x5abc, 0xe560, 0xb315, 0x2713, 0xcaac, 0x1, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5abc, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 008C
        gbc.setState(0xbf46, 0xca33, 0xd780, 0x1908, 0x3b29, 0x4cf5, 0x1, 0x0);
        gbc.writeMem(0xbf46, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0xbf48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf46));
        EXPECT(0x44, gbc.readMem(0xbf47));
        // CB 44 008D
        gbc.setState(0x591d, 0xa1a4, 0x1b00, 0x44f2, 0x458d, 0x5a15, 0x1, 0x0);
        gbc.writeMem(0x591d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa1a4, gbc.sp());
        EXPECT(0x591f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 008E
        gbc.setState(0xd00e, 0x7e6a, 0xfa30, 0x7dc4, 0x7b0c, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0xd00e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7e6a, gbc.sp());
        EXPECT(0xd010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00e));
        EXPECT(0x44, gbc.readMem(0xd00f));
        // CB 44 008F
        gbc.setState(0x78a2, 0xc217, 0x5e00, 0xf44d, 0x791f, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0x78a2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc217, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0090
        gbc.setState(0xc9ff, 0x922b, 0x6b90, 0xf9ee, 0xeca9, 0x6b, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x922b, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0x44, gbc.readMem(0xca00));
        // CB 44 0091
        gbc.setState(0x1b67, 0x28d3, 0x78f0, 0x6f3, 0x573, 0x66fe, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x28d3, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0092
        gbc.setState(0x2dc1, 0xcac3, 0x63c0, 0xa8a, 0x1133, 0xb7f7, 0x1, 0x0);
        gbc.writeMem(0x2dc1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0x2dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0093
        gbc.setState(0xc664, 0xf5a9, 0x6780, 0xa715, 0x7b1a, 0x3e57, 0x1, 0x0);
        gbc.writeMem(0xc664, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf5a9, gbc.sp());
        EXPECT(0xc666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc664));
        EXPECT(0x44, gbc.readMem(0xc665));
        // CB 44 0094
        gbc.setState(0x893e, 0xec69, 0xcb30, 0xad52, 0xe693, 0x3daf, 0x0, 0x0);
        gbc.writeMem(0x893e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xec69, gbc.sp());
        EXPECT(0x8940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893e));
        EXPECT(0x44, gbc.readMem(0x893f));
        // CB 44 0095
        gbc.setState(0x3349, 0x6f0a, 0x1400, 0x4119, 0x8b2, 0x6950, 0x1, 0x0);
        gbc.writeMem(0x3349, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6f0a, gbc.sp());
        EXPECT(0x334b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0096
        gbc.setState(0x672, 0xc37c, 0x9bb0, 0xa8fa, 0xf496, 0xe83, 0x1, 0x0);
        gbc.writeMem(0x672, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc37c, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0097
        gbc.setState(0xdd01, 0x17f0, 0x6bd0, 0x15ff, 0x3714, 0x1b33, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x17f0, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd01));
        EXPECT(0x44, gbc.readMem(0xdd02));
        // CB 44 0099
        gbc.setState(0xc568, 0xae02, 0xb990, 0xe791, 0xc9b9, 0xd03e, 0x1, 0x0);
        gbc.writeMem(0xc568, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0xc56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc568));
        EXPECT(0x44, gbc.readMem(0xc569));
        // CB 44 009A
        gbc.setState(0x7859, 0x3359, 0xc8b0, 0x61a2, 0xbd58, 0x1f6d, 0x0, 0x1);
        gbc.writeMem(0x7859, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3359, gbc.sp());
        EXPECT(0x785b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 009B
        gbc.setState(0xd1ce, 0xbc9b, 0xd940, 0x3526, 0x49e, 0xe89a, 0x1, 0x1);
        gbc.writeMem(0xd1ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0xd1d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ce));
        EXPECT(0x44, gbc.readMem(0xd1cf));
        // CB 44 009C
        gbc.setState(0xbdde, 0x47c5, 0x5930, 0x1348, 0xc1f0, 0xd965, 0x0, 0x0);
        gbc.writeMem(0xbdde, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x47c5, gbc.sp());
        EXPECT(0xbde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdde));
        EXPECT(0x44, gbc.readMem(0xbddf));
        // CB 44 009D
        gbc.setState(0x5d88, 0x5241, 0x5d30, 0xd086, 0x224a, 0x9399, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5241, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 009E
        gbc.setState(0xd4e9, 0x212c, 0xd330, 0x172b, 0x58ca, 0xf06a, 0x1, 0x0);
        gbc.writeMem(0xd4e9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x212c, gbc.sp());
        EXPECT(0xd4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e9));
        EXPECT(0x44, gbc.readMem(0xd4ea));
        // CB 44 009F
        gbc.setState(0xbd1c, 0x381b, 0x5670, 0x9336, 0x88db, 0xad84, 0x0, 0x0);
        gbc.writeMem(0xbd1c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1c));
        EXPECT(0x44, gbc.readMem(0xbd1d));
        // CB 44 00A0
        gbc.setState(0x4439, 0xc0a0, 0x310, 0x68af, 0xf3f2, 0x954d, 0x1, 0x1);
        gbc.writeMem(0x4439, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x443b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00A2
        gbc.setState(0xbf73, 0xab76, 0xa2d0, 0x6ad8, 0xd09b, 0x566c, 0x1, 0x0);
        gbc.writeMem(0xbf73, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xab76, gbc.sp());
        EXPECT(0xbf75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf73));
        EXPECT(0x44, gbc.readMem(0xbf74));
        // CB 44 00A3
        gbc.setState(0x3034, 0xcd23, 0x4d30, 0xab0b, 0x5a71, 0xe72c, 0x0, 0x1);
        gbc.writeMem(0x3034, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00A4
        gbc.setState(0xfb4, 0x2f3b, 0x4410, 0x7dfb, 0x3042, 0x399b, 0x0, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2f3b, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00A5
        gbc.setState(0x4721, 0xc8e4, 0x8e0, 0x4f62, 0x92eb, 0x9798, 0x0, 0x1);
        gbc.writeMem(0x4721, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc8e4, gbc.sp());
        EXPECT(0x4723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00A6
        gbc.setState(0xe59f, 0x4b67, 0x7f70, 0x2254, 0xb25e, 0x9a72, 0x0, 0x0);
        gbc.writeMem(0xe59f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4b67, gbc.sp());
        EXPECT(0xe5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe59f));
        EXPECT(0x44, gbc.readMem(0xe5a0));
        // CB 44 00A7
        gbc.setState(0x4de2, 0x485b, 0xdbe0, 0x19e9, 0xe737, 0xf448, 0x0, 0x1);
        gbc.writeMem(0x4de2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x485b, gbc.sp());
        EXPECT(0x4de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00A8
        gbc.setState(0x959a, 0xbcd, 0x3d30, 0xef7f, 0x6a58, 0x2e2c, 0x0, 0x1);
        gbc.writeMem(0x959a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbcd, gbc.sp());
        EXPECT(0x959c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959a));
        EXPECT(0x44, gbc.readMem(0x959b));
        // CB 44 00A9
        gbc.setState(0x73e, 0xc165, 0x1470, 0x813e, 0x824e, 0x3563, 0x1, 0x0);
        gbc.writeMem(0x73e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00AA
        gbc.setState(0x700c, 0xecb0, 0xba10, 0xbabc, 0x5859, 0x5a1d, 0x0, 0x1);
        gbc.writeMem(0x700c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xecb0, gbc.sp());
        EXPECT(0x700e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00AB
        gbc.setState(0x2b06, 0xd67c, 0x64e0, 0x4352, 0xa7de, 0xdc62, 0x0, 0x1);
        gbc.writeMem(0x2b06, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x2b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00AC
        gbc.setState(0x95b0, 0x2b31, 0x2c40, 0xbabb, 0xb4a9, 0x27d7, 0x0, 0x0);
        gbc.writeMem(0x95b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2b31, gbc.sp());
        EXPECT(0x95b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b0));
        EXPECT(0x44, gbc.readMem(0x95b1));
        // CB 44 00AD
        gbc.setState(0x14ed, 0x4ef2, 0xf250, 0xe6e6, 0xba37, 0xbd08, 0x0, 0x0);
        gbc.writeMem(0x14ed, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0x14ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00AE
        gbc.setState(0x519e, 0x7749, 0xfb80, 0x5fc, 0x1260, 0x3ab9, 0x0, 0x1);
        gbc.writeMem(0x519e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7749, gbc.sp());
        EXPECT(0x51a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00AF
        gbc.setState(0x72fa, 0x669, 0xb0a0, 0xde8c, 0x506c, 0x47f5, 0x0, 0x0);
        gbc.writeMem(0x72fa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x669, gbc.sp());
        EXPECT(0x72fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00B0
        gbc.setState(0x3202, 0x291e, 0x6fe0, 0xd70, 0x528d, 0x99eb, 0x0, 0x0);
        gbc.writeMem(0x3202, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x291e, gbc.sp());
        EXPECT(0x3204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00B1
        gbc.setState(0x3f08, 0x6316, 0x9690, 0x8637, 0x33ce, 0xe6d1, 0x1, 0x0);
        gbc.writeMem(0x3f08, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6316, gbc.sp());
        EXPECT(0x3f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00B2
        gbc.setState(0x2a3d, 0x6323, 0xcca0, 0xdc3e, 0x4f6c, 0xeed3, 0x0, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0x2a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00B3
        gbc.setState(0x73e8, 0x204c, 0x3470, 0xe11d, 0xdc33, 0xc167, 0x0, 0x1);
        gbc.writeMem(0x73e8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0x73ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00B4
        gbc.setState(0x3c16, 0xad8b, 0x7570, 0x1947, 0x9f1b, 0xeadf, 0x1, 0x1);
        gbc.writeMem(0x3c16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xad8b, gbc.sp());
        EXPECT(0x3c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00B5
        gbc.setState(0x793f, 0x58d2, 0xbeb0, 0xbe6a, 0xcaed, 0xce17, 0x1, 0x0);
        gbc.writeMem(0x793f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0x7941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00B6
        gbc.setState(0x7f27, 0x4dad, 0x38d0, 0x25c6, 0x78e0, 0x7c2f, 0x0, 0x0);
        gbc.writeMem(0x7f27, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4dad, gbc.sp());
        EXPECT(0x7f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00B7
        gbc.setState(0xd1b0, 0x3705, 0x9770, 0xcadf, 0x20ef, 0xf9e4, 0x0, 0x0);
        gbc.writeMem(0xd1b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3705, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b0));
        EXPECT(0x44, gbc.readMem(0xd1b1));
        // CB 44 00B8
        gbc.setState(0xb9cf, 0xa990, 0xcb10, 0x5463, 0x6a37, 0x3e09, 0x0, 0x1);
        gbc.writeMem(0xb9cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa990, gbc.sp());
        EXPECT(0xb9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cf));
        EXPECT(0x44, gbc.readMem(0xb9d0));
        // CB 44 00B9
        gbc.setState(0x379c, 0xfd41, 0xbbf0, 0xa6fa, 0xc7e8, 0x4746, 0x1, 0x0);
        gbc.writeMem(0x379c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfd41, gbc.sp());
        EXPECT(0x379e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00BA
        gbc.setState(0x676a, 0xaf24, 0x6160, 0x640, 0xef11, 0x4d32, 0x0, 0x0);
        gbc.writeMem(0x676a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaf24, gbc.sp());
        EXPECT(0x676c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00BB
        gbc.setState(0xa6f7, 0x774, 0x3600, 0xa782, 0xa45b, 0xfc0c, 0x0, 0x0);
        gbc.writeMem(0xa6f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0xa6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6f7));
        EXPECT(0x44, gbc.readMem(0xa6f8));
        // CB 44 00BC
        gbc.setState(0x99ff, 0x70d1, 0x9f60, 0xadd4, 0x9e1f, 0xe9f4, 0x0, 0x1);
        gbc.writeMem(0x99ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x70d1, gbc.sp());
        EXPECT(0x9a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ff));
        EXPECT(0x44, gbc.readMem(0x9a00));
        // CB 44 00BD
        gbc.setState(0x2f4, 0x1335, 0x8650, 0x3b63, 0xc067, 0x9f98, 0x1, 0x0);
        gbc.writeMem(0x2f4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1335, gbc.sp());
        EXPECT(0x2f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00BE
        gbc.setState(0x355e, 0x20b0, 0xc340, 0x180e, 0xc1a0, 0x7764, 0x0, 0x0);
        gbc.writeMem(0x355e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x3560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00BF
        gbc.setState(0x15db, 0x286d, 0xdf20, 0x5c84, 0x7aed, 0x50c7, 0x1, 0x1);
        gbc.writeMem(0x15db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x286d, gbc.sp());
        EXPECT(0x15dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00C0
        gbc.setState(0xb85, 0x687c, 0xc3e0, 0xa184, 0x1c93, 0x65db, 0x1, 0x0);
        gbc.writeMem(0xb85, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x687c, gbc.sp());
        EXPECT(0xb87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00C1
        gbc.setState(0x5735, 0xb688, 0x9a20, 0xc658, 0x26b3, 0x7d50, 0x1, 0x1);
        gbc.writeMem(0x5735, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb688, gbc.sp());
        EXPECT(0x5737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00C2
        gbc.setState(0xcc39, 0x8506, 0x90e0, 0xd04d, 0x191e, 0xd8ec, 0x1, 0x0);
        gbc.writeMem(0xcc39, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8506, gbc.sp());
        EXPECT(0xcc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc39));
        EXPECT(0x44, gbc.readMem(0xcc3a));
        // CB 44 00C3
        gbc.setState(0x6b38, 0x7f4d, 0xb780, 0xb936, 0x1fb2, 0x95d0, 0x1, 0x1);
        gbc.writeMem(0x6b38, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f4d, gbc.sp());
        EXPECT(0x6b3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00C4
        gbc.setState(0xea55, 0xa64e, 0xfe10, 0xda03, 0x3eeb, 0xf401, 0x0, 0x1);
        gbc.writeMem(0xea55, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa64e, gbc.sp());
        EXPECT(0xea57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea55));
        EXPECT(0x44, gbc.readMem(0xea56));
        // CB 44 00C5
        gbc.setState(0x79ee, 0x9713, 0x9d90, 0x18f8, 0xb7ed, 0x9d62, 0x0, 0x1);
        gbc.writeMem(0x79ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9713, gbc.sp());
        EXPECT(0x79f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00C6
        gbc.setState(0x812a, 0xb244, 0x4c0, 0x9aa, 0xeb6a, 0x9fca, 0x1, 0x0);
        gbc.writeMem(0x812a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0x812c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812a));
        EXPECT(0x44, gbc.readMem(0x812b));
        // CB 44 00C7
        gbc.setState(0x88d, 0x40ec, 0x3c30, 0x29fa, 0x3e35, 0x636a, 0x0, 0x0);
        gbc.writeMem(0x88d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x40ec, gbc.sp());
        EXPECT(0x88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00C8
        gbc.setState(0x73ba, 0x916c, 0x9cb0, 0xb3b4, 0xd4c1, 0x963e, 0x1, 0x0);
        gbc.writeMem(0x73ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x916c, gbc.sp());
        EXPECT(0x73bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00C9
        gbc.setState(0xe314, 0x8d5b, 0x3290, 0xf03d, 0x8fac, 0x7861, 0x1, 0x1);
        gbc.writeMem(0xe314, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0xe316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe314));
        EXPECT(0x44, gbc.readMem(0xe315));
        // CB 44 00CA
        gbc.setState(0xd780, 0x6039, 0x80c0, 0x5393, 0xce48, 0xdbb0, 0x0, 0x1);
        gbc.writeMem(0xd780, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6039, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd780));
        EXPECT(0x44, gbc.readMem(0xd781));
        // CB 44 00CB
        gbc.setState(0xb372, 0xa524, 0x6b10, 0x5a0c, 0x9f7b, 0x716a, 0x1, 0x1);
        gbc.writeMem(0xb372, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa524, gbc.sp());
        EXPECT(0xb374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb372));
        EXPECT(0x44, gbc.readMem(0xb373));
        // CB 44 00CD
        gbc.setState(0x84ba, 0xb334, 0x1b00, 0x15d, 0x60b4, 0x4676, 0x0, 0x1);
        gbc.writeMem(0x84ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb334, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ba));
        EXPECT(0x44, gbc.readMem(0x84bb));
        // CB 44 00CE
        gbc.setState(0xdc4c, 0xb428, 0x6b40, 0x7f2, 0xee14, 0xc51d, 0x1, 0x0);
        gbc.writeMem(0xdc4c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb428, gbc.sp());
        EXPECT(0xdc4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc4c));
        EXPECT(0x44, gbc.readMem(0xdc4d));
        // CB 44 00CF
        gbc.setState(0xde29, 0x31e3, 0x5af0, 0x96ff, 0x63e3, 0x4d79, 0x0, 0x1);
        gbc.writeMem(0xde29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x31e3, gbc.sp());
        EXPECT(0xde2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde29));
        EXPECT(0x44, gbc.readMem(0xde2a));
        // CB 44 00D0
        gbc.setState(0x3979, 0x59cd, 0xdff0, 0x8fd4, 0x41d7, 0x7eb4, 0x0, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x59cd, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00D1
        gbc.setState(0x8b2e, 0x470, 0xe70, 0xdd1f, 0x7d2b, 0x7fbb, 0x1, 0x0);
        gbc.writeMem(0x8b2e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x470, gbc.sp());
        EXPECT(0x8b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b2e));
        EXPECT(0x44, gbc.readMem(0x8b2f));
        // CB 44 00D2
        gbc.setState(0x41a8, 0xa42a, 0x12a0, 0xa760, 0xdfa1, 0xc948, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa42a, gbc.sp());
        EXPECT(0x41aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00D3
        gbc.setState(0xdf79, 0x9aa7, 0xa050, 0xca4d, 0x5310, 0xac21, 0x1, 0x0);
        gbc.writeMem(0xdf79, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9aa7, gbc.sp());
        EXPECT(0xdf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf79));
        EXPECT(0x44, gbc.readMem(0xdf7a));
        // CB 44 00D4
        gbc.setState(0x6932, 0x80ba, 0x7920, 0xf7f8, 0x2dcb, 0x893c, 0x1, 0x0);
        gbc.writeMem(0x6932, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x80ba, gbc.sp());
        EXPECT(0x6934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00D5
        gbc.setState(0xd824, 0xbacb, 0x2f90, 0xd6db, 0xf24f, 0xaf58, 0x0, 0x1);
        gbc.writeMem(0xd824, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0xd826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd824));
        EXPECT(0x44, gbc.readMem(0xd825));
        // CB 44 00D6
        gbc.setState(0x86fa, 0x19b7, 0x2610, 0x102, 0xabb8, 0x7121, 0x0, 0x0);
        gbc.writeMem(0x86fa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x19b7, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0x44, gbc.readMem(0x86fb));
        // CB 44 00D7
        gbc.setState(0x6caf, 0x8929, 0xe110, 0x1a3, 0xc7b6, 0x7072, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8929, gbc.sp());
        EXPECT(0x6cb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00D8
        gbc.setState(0x2297, 0xa42a, 0x4290, 0xa907, 0x6932, 0xcd96, 0x1, 0x0);
        gbc.writeMem(0x2297, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa42a, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00D9
        gbc.setState(0xbfcf, 0x1e83, 0xbe40, 0x9077, 0xcc, 0x2bbb, 0x0, 0x1);
        gbc.writeMem(0xbfcf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1e83, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcf));
        EXPECT(0x44, gbc.readMem(0xbfd0));
        // CB 44 00DA
        gbc.setState(0x2602, 0x56dc, 0x43a0, 0x4787, 0xbede, 0x9f9d, 0x1, 0x0);
        gbc.writeMem(0x2602, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x56dc, gbc.sp());
        EXPECT(0x2604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00DB
        gbc.setState(0x85cc, 0xff12, 0x2f00, 0xa42e, 0x67bd, 0x223f, 0x0, 0x1);
        gbc.writeMem(0x85cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xff12, gbc.sp());
        EXPECT(0x85ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85cc));
        EXPECT(0x44, gbc.readMem(0x85cd));
        // CB 44 00DC
        gbc.setState(0x1d1a, 0xd287, 0x75a0, 0xc86a, 0x7308, 0x3e84, 0x1, 0x0);
        gbc.writeMem(0x1d1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd287, gbc.sp());
        EXPECT(0x1d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00DD
        gbc.setState(0x897a, 0x4b92, 0xebf0, 0xc8f5, 0x8a12, 0x37d8, 0x0, 0x0);
        gbc.writeMem(0x897a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x4b92, gbc.sp());
        EXPECT(0x897c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897a));
        EXPECT(0x44, gbc.readMem(0x897b));
        // CB 44 00DE
        gbc.setState(0xe5d4, 0xb0c5, 0x9890, 0x350b, 0x1681, 0xd28b, 0x0, 0x0);
        gbc.writeMem(0xe5d4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb0c5, gbc.sp());
        EXPECT(0xe5d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d4));
        EXPECT(0x44, gbc.readMem(0xe5d5));
        // CB 44 00DF
        gbc.setState(0x975e, 0x2a9c, 0xfad0, 0xeca6, 0xc32b, 0x5c74, 0x1, 0x1);
        gbc.writeMem(0x975e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x9760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975e));
        EXPECT(0x44, gbc.readMem(0x975f));
        // CB 44 00E0
        gbc.setState(0x20b2, 0x75e0, 0x5130, 0x243c, 0xb88d, 0x799c, 0x1, 0x0);
        gbc.writeMem(0x20b2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x75e0, gbc.sp());
        EXPECT(0x20b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00E1
        gbc.setState(0x4930, 0xab86, 0x8bc0, 0x7821, 0x1a40, 0xbffd, 0x1, 0x0);
        gbc.writeMem(0x4930, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xab86, gbc.sp());
        EXPECT(0x4932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00E2
        gbc.setState(0x6672, 0x8984, 0x4690, 0xa080, 0xf70c, 0xff68, 0x1, 0x1);
        gbc.writeMem(0x6672, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8984, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00E3
        gbc.setState(0x21db, 0xbff2, 0x1730, 0xdf60, 0x2720, 0x3149, 0x0, 0x1);
        gbc.writeMem(0x21db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x21dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00E4
        gbc.setState(0x4fa4, 0x4484, 0x1f0, 0xe267, 0xce7c, 0x27fe, 0x0, 0x0);
        gbc.writeMem(0x4fa4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4484, gbc.sp());
        EXPECT(0x4fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00E5
        gbc.setState(0xa1ea, 0x2f40, 0xb70, 0x3cda, 0xf044, 0x9510, 0x0, 0x1);
        gbc.writeMem(0xa1ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2f40, gbc.sp());
        EXPECT(0xa1ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ea));
        EXPECT(0x44, gbc.readMem(0xa1eb));
        // CB 44 00E6
        gbc.setState(0x7044, 0x95a7, 0x79c0, 0xdba7, 0x6790, 0x40d4, 0x1, 0x1);
        gbc.writeMem(0x7044, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x95a7, gbc.sp());
        EXPECT(0x7046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00E7
        gbc.setState(0x4da6, 0xea7e, 0x6400, 0xd377, 0x24aa, 0x9741, 0x1, 0x1);
        gbc.writeMem(0x4da6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xea7e, gbc.sp());
        EXPECT(0x4da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00E8
        gbc.setState(0x82cb, 0xeeef, 0x7f10, 0x4138, 0x25d1, 0x3ef0, 0x1, 0x0);
        gbc.writeMem(0x82cb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xeeef, gbc.sp());
        EXPECT(0x82cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82cb));
        EXPECT(0x44, gbc.readMem(0x82cc));
        // CB 44 00E9
        gbc.setState(0x23b3, 0x9388, 0x2570, 0xcbfe, 0xb657, 0xdbaf, 0x0, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9388, gbc.sp());
        EXPECT(0x23b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00EA
        gbc.setState(0x6333, 0x6518, 0x8690, 0xe1e5, 0xf431, 0x804d, 0x1, 0x1);
        gbc.writeMem(0x6333, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6518, gbc.sp());
        EXPECT(0x6335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00EB
        gbc.setState(0xc70, 0x8a21, 0xb240, 0x2c95, 0xd91c, 0xcdc9, 0x1, 0x0);
        gbc.writeMem(0xc70, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0xc72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00EC
        gbc.setState(0xcabf, 0x1c8, 0xdbc0, 0xcc2d, 0xd81c, 0xd187, 0x1, 0x0);
        gbc.writeMem(0xcabf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1c8, gbc.sp());
        EXPECT(0xcac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabf));
        EXPECT(0x44, gbc.readMem(0xcac0));
        // CB 44 00ED
        gbc.setState(0x2ca6, 0xda95, 0xd830, 0x5e6, 0xcdc8, 0xf2b7, 0x0, 0x1);
        gbc.writeMem(0x2ca6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xda95, gbc.sp());
        EXPECT(0x2ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00EE
        gbc.setState(0xe310, 0x2679, 0x9f40, 0xe609, 0x4109, 0xf1f0, 0x1, 0x0);
        gbc.writeMem(0xe310, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2679, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0x44, gbc.readMem(0xe311));
        // CB 44 00EF
        gbc.setState(0x1519, 0x5013, 0x7500, 0x4323, 0x2450, 0x232b, 0x1, 0x0);
        gbc.writeMem(0x1519, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5013, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00F0
        gbc.setState(0x6619, 0xd97d, 0x48c0, 0x32c8, 0x191d, 0xe121, 0x0, 0x1);
        gbc.writeMem(0x6619, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x661b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 00F1
        gbc.setState(0x3f57, 0x3031, 0x5a30, 0xe745, 0xb17e, 0x76b2, 0x0, 0x1);
        gbc.writeMem(0x3f57, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3031, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00F2
        gbc.setState(0xed7f, 0xc025, 0x5c10, 0xb0c1, 0xf473, 0x6e6a, 0x1, 0x1);
        gbc.writeMem(0xed7f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc025, gbc.sp());
        EXPECT(0xed81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed7f));
        EXPECT(0x44, gbc.readMem(0xed80));
        // CB 44 00F3
        gbc.setState(0xbc7d, 0x3ff1, 0x14c0, 0x8b35, 0xf49f, 0x1493, 0x0, 0x1);
        gbc.writeMem(0xbc7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3ff1, gbc.sp());
        EXPECT(0xbc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7d));
        EXPECT(0x44, gbc.readMem(0xbc7e));
        // CB 44 00F4
        gbc.setState(0x47bb, 0x20ea, 0x4750, 0xbc3f, 0x8e3d, 0x89a6, 0x0, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x20ea, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00F5
        gbc.setState(0xaee6, 0x6c1d, 0x77d0, 0x3698, 0x6c1e, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0xaee6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6c1d, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee6));
        EXPECT(0x44, gbc.readMem(0xaee7));
        // CB 44 00F7
        gbc.setState(0xca2b, 0xa818, 0x38a0, 0xb024, 0xaff, 0xaa3f, 0x1, 0x0);
        gbc.writeMem(0xca2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa818, gbc.sp());
        EXPECT(0xca2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2b));
        EXPECT(0x44, gbc.readMem(0xca2c));
        // CB 44 00F8
        gbc.setState(0xd01e, 0xe00e, 0x46d0, 0x811b, 0x1155, 0xa84d, 0x0, 0x0);
        gbc.writeMem(0xd01e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe00e, gbc.sp());
        EXPECT(0xd020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd01e));
        EXPECT(0x44, gbc.readMem(0xd01f));
        // CB 44 00F9
        gbc.setState(0x541, 0xa70c, 0x2810, 0x450d, 0x7a77, 0x973c, 0x1, 0x1);
        gbc.writeMem(0x541, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa70c, gbc.sp());
        EXPECT(0x543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00FA
        gbc.setState(0xa745, 0x1f89, 0x1cf0, 0xf344, 0x9322, 0x7706, 0x1, 0x1);
        gbc.writeMem(0xa745, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1f89, gbc.sp());
        EXPECT(0xa747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa745));
        EXPECT(0x44, gbc.readMem(0xa746));
        // CB 44 00FC
        gbc.setState(0x2960, 0xb33e, 0xdd70, 0xcf7e, 0xd60c, 0xd7cb, 0x0, 0x0);
        gbc.writeMem(0x2960, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb33e, gbc.sp());
        EXPECT(0x2962, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 00FD
        gbc.setState(0x8b0f, 0xdbd2, 0x22c0, 0x89d1, 0x1984, 0xf357, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xdbd2, gbc.sp());
        EXPECT(0x8b11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0f));
        EXPECT(0x44, gbc.readMem(0x8b10));
        // CB 44 00FE
        gbc.setState(0xd575, 0x16d7, 0x9ee0, 0x9ffe, 0x1033, 0x514f, 0x1, 0x1);
        gbc.writeMem(0xd575, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x16d7, gbc.sp());
        EXPECT(0xd577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd575));
        EXPECT(0x44, gbc.readMem(0xd576));
        // CB 44 0100
        gbc.setState(0xec7d, 0xcfc1, 0x5780, 0xa81, 0x884, 0x2b37, 0x0, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xcfc1, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7d));
        EXPECT(0x44, gbc.readMem(0xec7e));
        // CB 44 0101
        gbc.setState(0x7858, 0x55e9, 0x47a0, 0x8e3a, 0x8563, 0x1bfe, 0x1, 0x0);
        gbc.writeMem(0x7858, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x55e9, gbc.sp());
        EXPECT(0x785a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0102
        gbc.setState(0x5e7e, 0xe4fc, 0xfc50, 0x9f63, 0x4184, 0xd577, 0x1, 0x0);
        gbc.writeMem(0x5e7e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x5e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0103
        gbc.setState(0x60f, 0xbe87, 0x4b40, 0x2a1, 0x2974, 0x741, 0x1, 0x1);
        gbc.writeMem(0x60f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbe87, gbc.sp());
        EXPECT(0x611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0104
        gbc.setState(0x1b04, 0x2ea, 0x7de0, 0xc7c7, 0x39ac, 0x7298, 0x0, 0x0);
        gbc.writeMem(0x1b04, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0105
        gbc.setState(0x8f3, 0xb1a2, 0x6110, 0xa08c, 0x7014, 0x6570, 0x1, 0x1);
        gbc.writeMem(0x8f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb1a2, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0107
        gbc.setState(0xee41, 0x10e0, 0xfb20, 0xd3bb, 0xe5fb, 0xa7ab, 0x1, 0x1);
        gbc.writeMem(0xee41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x10e0, gbc.sp());
        EXPECT(0xee43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee41));
        EXPECT(0x44, gbc.readMem(0xee42));
        // CB 44 0108
        gbc.setState(0x72f0, 0x5ef0, 0xbae0, 0x37a, 0x3c10, 0x29fb, 0x1, 0x1);
        gbc.writeMem(0x72f0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0109
        gbc.setState(0x87e0, 0x47f, 0x8950, 0xdceb, 0xccbd, 0x8436, 0x1, 0x0);
        gbc.writeMem(0x87e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x47f, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e0));
        EXPECT(0x44, gbc.readMem(0x87e1));
        // CB 44 010A
        gbc.setState(0xb652, 0x4fd5, 0x5f50, 0xbb3, 0x2bc6, 0x64c9, 0x1, 0x0);
        gbc.writeMem(0xb652, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4fd5, gbc.sp());
        EXPECT(0xb654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb652));
        EXPECT(0x44, gbc.readMem(0xb653));
        // CB 44 010C
        gbc.setState(0x7a95, 0x9517, 0xedb0, 0x6735, 0xb3b8, 0x6d55, 0x0, 0x1);
        gbc.writeMem(0x7a95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9517, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 010D
        gbc.setState(0x3e3d, 0x1f28, 0xed70, 0xb18d, 0x96a4, 0x3eb8, 0x0, 0x0);
        gbc.writeMem(0x3e3d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x3e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 010E
        gbc.setState(0xa42d, 0x1798, 0xe8f0, 0x35b, 0xfd8a, 0x992, 0x0, 0x1);
        gbc.writeMem(0xa42d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1798, gbc.sp());
        EXPECT(0xa42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42d));
        EXPECT(0x44, gbc.readMem(0xa42e));
        // CB 44 010F
        gbc.setState(0x17, 0xdfd6, 0x7770, 0x15b0, 0xaaec, 0x2979, 0x0, 0x0);
        gbc.writeMem(0x17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdfd6, gbc.sp());
        EXPECT(0x19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0110
        gbc.setState(0x6b74, 0x84b9, 0x3a70, 0xaab9, 0x150, 0xe404, 0x0, 0x1);
        gbc.writeMem(0x6b74, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x84b9, gbc.sp());
        EXPECT(0x6b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0111
        gbc.setState(0x65ac, 0xe210, 0x41c0, 0x8f2, 0xa75e, 0xe19, 0x1, 0x1);
        gbc.writeMem(0x65ac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x65ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0112
        gbc.setState(0xb041, 0x62d7, 0x93e0, 0x1e1f, 0xf0b1, 0xc4ba, 0x1, 0x1);
        gbc.writeMem(0xb041, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x62d7, gbc.sp());
        EXPECT(0xb043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb041));
        EXPECT(0x44, gbc.readMem(0xb042));
        // CB 44 0113
        gbc.setState(0xb47c, 0x1fd7, 0x69d0, 0xc6ee, 0xc704, 0xb8dc, 0x1, 0x1);
        gbc.writeMem(0xb47c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1fd7, gbc.sp());
        EXPECT(0xb47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47c));
        EXPECT(0x44, gbc.readMem(0xb47d));
        // CB 44 0114
        gbc.setState(0x7dcc, 0xf6a0, 0xc560, 0x175e, 0xe3ee, 0x891f, 0x0, 0x0);
        gbc.writeMem(0x7dcc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6a0, gbc.sp());
        EXPECT(0x7dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0115
        gbc.setState(0x1ac5, 0xe76f, 0x26c0, 0x5702, 0x49eb, 0xc2dc, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe76f, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0116
        gbc.setState(0x3da8, 0xf939, 0x8b80, 0x133c, 0x4954, 0x8d05, 0x0, 0x0);
        gbc.writeMem(0x3da8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x3daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0118
        gbc.setState(0x7065, 0x46fd, 0xadc0, 0x5f2b, 0x68f1, 0x501e, 0x1, 0x0);
        gbc.writeMem(0x7065, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x46fd, gbc.sp());
        EXPECT(0x7067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0119
        gbc.setState(0x4f12, 0xf2e, 0x6d50, 0xc4cb, 0xd992, 0x7cf0, 0x0, 0x0);
        gbc.writeMem(0x4f12, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x4f14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 011A
        gbc.setState(0x561c, 0xb21b, 0xf010, 0xa086, 0x6cbb, 0x3293, 0x0, 0x1);
        gbc.writeMem(0x561c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb21b, gbc.sp());
        EXPECT(0x561e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 011B
        gbc.setState(0x1eb6, 0x2cf6, 0x7780, 0x8358, 0x9e70, 0x8e2b, 0x0, 0x1);
        gbc.writeMem(0x1eb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0x1eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 011C
        gbc.setState(0x18ea, 0x1312, 0x28c0, 0x2d64, 0x42fb, 0xdb5a, 0x1, 0x0);
        gbc.writeMem(0x18ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1312, gbc.sp());
        EXPECT(0x18ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 011D
        gbc.setState(0x21e7, 0x4fdc, 0x7f0, 0x3747, 0x6134, 0xe9d1, 0x0, 0x1);
        gbc.writeMem(0x21e7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4fdc, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 011E
        gbc.setState(0x9112, 0xe989, 0x7270, 0xef27, 0xf0ac, 0xccd9, 0x1, 0x1);
        gbc.writeMem(0x9112, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe989, gbc.sp());
        EXPECT(0x9114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9112));
        EXPECT(0x44, gbc.readMem(0x9113));
        // CB 44 011F
        gbc.setState(0xdc75, 0x75ea, 0x1830, 0x65cb, 0x4c26, 0x943f, 0x1, 0x1);
        gbc.writeMem(0xdc75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0xdc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc75));
        EXPECT(0x44, gbc.readMem(0xdc76));
        // CB 44 0120
        gbc.setState(0xbc78, 0x6194, 0x6190, 0x2de6, 0x6922, 0x9a2f, 0x1, 0x0);
        gbc.writeMem(0xbc78, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6194, gbc.sp());
        EXPECT(0xbc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc78));
        EXPECT(0x44, gbc.readMem(0xbc79));
        // CB 44 0121
        gbc.setState(0x947b, 0x957f, 0x1030, 0xd25b, 0x83dc, 0x2e18, 0x0, 0x0);
        gbc.writeMem(0x947b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x957f, gbc.sp());
        EXPECT(0x947d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947b));
        EXPECT(0x44, gbc.readMem(0x947c));
        // CB 44 0122
        gbc.setState(0x5287, 0xdaee, 0xb2b0, 0x8f97, 0x7a25, 0xc7a2, 0x1, 0x1);
        gbc.writeMem(0x5287, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xdaee, gbc.sp());
        EXPECT(0x5289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0123
        gbc.setState(0x24f8, 0xfe8e, 0xa710, 0x6d97, 0x2f40, 0x33fc, 0x0, 0x1);
        gbc.writeMem(0x24f8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfe8e, gbc.sp());
        EXPECT(0x24fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0124
        gbc.setState(0x63e5, 0x8b9, 0x1b90, 0xb004, 0x5283, 0x5e83, 0x1, 0x0);
        gbc.writeMem(0x63e5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0x63e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0125
        gbc.setState(0xcc2a, 0xbf03, 0x4d00, 0x28f3, 0xc75, 0x5c2f, 0x0, 0x0);
        gbc.writeMem(0xcc2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbf03, gbc.sp());
        EXPECT(0xcc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2a));
        EXPECT(0x44, gbc.readMem(0xcc2b));
        // CB 44 0126
        gbc.setState(0x7dd1, 0x2259, 0xabc0, 0xb52d, 0x2ef6, 0xf4a7, 0x1, 0x1);
        gbc.writeMem(0x7dd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2259, gbc.sp());
        EXPECT(0x7dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0127
        gbc.setState(0xcaae, 0x6ba9, 0x8490, 0x14b6, 0x9680, 0x3486, 0x1, 0x1);
        gbc.writeMem(0xcaae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6ba9, gbc.sp());
        EXPECT(0xcab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaae));
        EXPECT(0x44, gbc.readMem(0xcaaf));
        // CB 44 0128
        gbc.setState(0x8171, 0xf334, 0x3760, 0xa66f, 0x4c6d, 0x4690, 0x0, 0x0);
        gbc.writeMem(0x8171, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf334, gbc.sp());
        EXPECT(0x8173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8171));
        EXPECT(0x44, gbc.readMem(0x8172));
        // CB 44 0129
        gbc.setState(0x907, 0x46b3, 0x5220, 0xf6e8, 0x573d, 0x34f3, 0x1, 0x0);
        gbc.writeMem(0x907, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x46b3, gbc.sp());
        EXPECT(0x909, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 012A
        gbc.setState(0x298b, 0x28c, 0x3960, 0x847d, 0x702f, 0xe5de, 0x1, 0x1);
        gbc.writeMem(0x298b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x28c, gbc.sp());
        EXPECT(0x298d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 012B
        gbc.setState(0x7b7a, 0x2dc9, 0xbe60, 0xd80b, 0x820b, 0xb7d1, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2dc9, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 012C
        gbc.setState(0x8e1e, 0x5beb, 0x9aa0, 0x695, 0x6e7f, 0x9a74, 0x1, 0x0);
        gbc.writeMem(0x8e1e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5beb, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1e));
        EXPECT(0x44, gbc.readMem(0x8e1f));
        // CB 44 012E
        gbc.setState(0xa250, 0xcfe3, 0x6250, 0xfbf, 0x3d79, 0x93a7, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcfe3, gbc.sp());
        EXPECT(0xa252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa250));
        EXPECT(0x44, gbc.readMem(0xa251));
        // CB 44 012F
        gbc.setState(0x8979, 0xf573, 0x5d70, 0xae15, 0xbee3, 0xb612, 0x0, 0x0);
        gbc.writeMem(0x8979, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf573, gbc.sp());
        EXPECT(0x897b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8979));
        EXPECT(0x44, gbc.readMem(0x897a));
        // CB 44 0130
        gbc.setState(0xa8f7, 0xdf2c, 0x59e0, 0x41f5, 0x68e7, 0x14b3, 0x0, 0x0);
        gbc.writeMem(0xa8f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xdf2c, gbc.sp());
        EXPECT(0xa8f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f7));
        EXPECT(0x44, gbc.readMem(0xa8f8));
        // CB 44 0131
        gbc.setState(0x7277, 0x9c89, 0x9e70, 0xa83c, 0x6b76, 0x87d7, 0x1, 0x0);
        gbc.writeMem(0x7277, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9c89, gbc.sp());
        EXPECT(0x7279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0132
        gbc.setState(0x3e7c, 0x679, 0x800, 0xb201, 0xa676, 0xa7b9, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0134
        gbc.setState(0x2d1a, 0xaef9, 0x6870, 0x8930, 0xb197, 0x9303, 0x0, 0x1);
        gbc.writeMem(0x2d1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xaef9, gbc.sp());
        EXPECT(0x2d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0135
        gbc.setState(0x8a6d, 0xbf65, 0x3cb0, 0x7794, 0xb070, 0x331b, 0x0, 0x1);
        gbc.writeMem(0x8a6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbf65, gbc.sp());
        EXPECT(0x8a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6d));
        EXPECT(0x44, gbc.readMem(0x8a6e));
        // CB 44 0136
        gbc.setState(0x2fe6, 0xee7f, 0x6c90, 0x1adb, 0x295b, 0x758c, 0x0, 0x0);
        gbc.writeMem(0x2fe6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xee7f, gbc.sp());
        EXPECT(0x2fe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0137
        gbc.setState(0xb218, 0x6095, 0xb980, 0x708, 0xc8af, 0xae85, 0x0, 0x1);
        gbc.writeMem(0xb218, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6095, gbc.sp());
        EXPECT(0xb21a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb218));
        EXPECT(0x44, gbc.readMem(0xb219));
        // CB 44 0138
        gbc.setState(0xa278, 0x2674, 0x46c0, 0xf6ba, 0x540f, 0xa309, 0x1, 0x0);
        gbc.writeMem(0xa278, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2674, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa278));
        EXPECT(0x44, gbc.readMem(0xa279));
        // CB 44 0139
        gbc.setState(0x4bbe, 0x75ee, 0x2470, 0x3f8d, 0xc657, 0xb591, 0x1, 0x1);
        gbc.writeMem(0x4bbe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x75ee, gbc.sp());
        EXPECT(0x4bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 013A
        gbc.setState(0x962e, 0x9cd9, 0x5190, 0x7832, 0xb729, 0xfd33, 0x0, 0x1);
        gbc.writeMem(0x962e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9cd9, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962e));
        EXPECT(0x44, gbc.readMem(0x962f));
        // CB 44 013B
        gbc.setState(0x3f02, 0x6ed0, 0x77a0, 0xc958, 0xbbe9, 0xf132, 0x1, 0x0);
        gbc.writeMem(0x3f02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6ed0, gbc.sp());
        EXPECT(0x3f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 013C
        gbc.setState(0xb263, 0xa916, 0x56c0, 0x853f, 0x78ea, 0xfab6, 0x1, 0x1);
        gbc.writeMem(0xb263, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa916, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb263));
        EXPECT(0x44, gbc.readMem(0xb264));
        // CB 44 013D
        gbc.setState(0x305, 0xd0cb, 0x8cd0, 0x7902, 0xb0ae, 0x5468, 0x0, 0x1);
        gbc.writeMem(0x305, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd0cb, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 013E
        gbc.setState(0x8e3e, 0xb384, 0x3ba0, 0x78a4, 0xc810, 0xb73d, 0x1, 0x1);
        gbc.writeMem(0x8e3e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0x8e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3e));
        EXPECT(0x44, gbc.readMem(0x8e3f));
        // CB 44 013F
        gbc.setState(0x5f3, 0xb37e, 0x3d60, 0x1191, 0xdf3b, 0xa1c0, 0x1, 0x0);
        gbc.writeMem(0x5f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb37e, gbc.sp());
        EXPECT(0x5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0140
        gbc.setState(0xad11, 0x1a17, 0x6f0, 0x11be, 0xf25b, 0x4e93, 0x0, 0x1);
        gbc.writeMem(0xad11, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a17, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad11));
        EXPECT(0x44, gbc.readMem(0xad12));
        // CB 44 0141
        gbc.setState(0x3fc, 0x78f3, 0xab80, 0xf7af, 0x8d9f, 0xbf71, 0x1, 0x0);
        gbc.writeMem(0x3fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x78f3, gbc.sp());
        EXPECT(0x3fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0142
        gbc.setState(0x36db, 0xbad2, 0x960, 0x48b6, 0x772a, 0xb33d, 0x1, 0x0);
        gbc.writeMem(0x36db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbad2, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0143
        gbc.setState(0xa1b0, 0xb0c5, 0xaf30, 0x61ed, 0x8016, 0x4fbc, 0x0, 0x0);
        gbc.writeMem(0xa1b0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb0c5, gbc.sp());
        EXPECT(0xa1b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b0));
        EXPECT(0x44, gbc.readMem(0xa1b1));
        // CB 44 0144
        gbc.setState(0x4d58, 0x373e, 0x2e40, 0x2327, 0x4dd1, 0xe348, 0x1, 0x1);
        gbc.writeMem(0x4d58, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x373e, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0145
        gbc.setState(0xd03d, 0xa21d, 0xc640, 0xb94f, 0x2cc8, 0x3fa0, 0x0, 0x1);
        gbc.writeMem(0xd03d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa21d, gbc.sp());
        EXPECT(0xd03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd03d));
        EXPECT(0x44, gbc.readMem(0xd03e));
        // CB 44 0146
        gbc.setState(0x3bcc, 0x1820, 0xe500, 0xdf54, 0xbb27, 0x116, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1820, gbc.sp());
        EXPECT(0x3bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0147
        gbc.setState(0xea94, 0xf169, 0x9f60, 0xf728, 0x8bdf, 0x4535, 0x0, 0x1);
        gbc.writeMem(0xea94, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf169, gbc.sp());
        EXPECT(0xea96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea94));
        EXPECT(0x44, gbc.readMem(0xea95));
        // CB 44 0148
        gbc.setState(0x4f8f, 0xc570, 0xd8c0, 0x6592, 0x7a60, 0x7357, 0x0, 0x0);
        gbc.writeMem(0x4f8f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc570, gbc.sp());
        EXPECT(0x4f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0149
        gbc.setState(0xd3f, 0xceee, 0xdf10, 0xf4c5, 0x4925, 0xa339, 0x0, 0x0);
        gbc.writeMem(0xd3f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xceee, gbc.sp());
        EXPECT(0xd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 014A
        gbc.setState(0x8c17, 0x5658, 0x2f20, 0x1275, 0x57, 0xcaf0, 0x0, 0x1);
        gbc.writeMem(0x8c17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5658, gbc.sp());
        EXPECT(0x8c19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c17));
        EXPECT(0x44, gbc.readMem(0x8c18));
        // CB 44 014B
        gbc.setState(0x7798, 0xafb5, 0xcfc0, 0x6b75, 0x7c66, 0x485b, 0x1, 0x0);
        gbc.writeMem(0x7798, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xafb5, gbc.sp());
        EXPECT(0x779a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 014C
        gbc.setState(0xe915, 0x1b4e, 0x9070, 0xc2cd, 0xdffc, 0x3f52, 0x0, 0x0);
        gbc.writeMem(0xe915, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0xe917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe915));
        EXPECT(0x44, gbc.readMem(0xe916));
        // CB 44 014E
        gbc.setState(0x2065, 0x6b3d, 0x3f80, 0x4b56, 0x2ca5, 0xaa7b, 0x1, 0x1);
        gbc.writeMem(0x2065, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6b3d, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 014F
        gbc.setState(0x4dfc, 0x1a9a, 0xb100, 0x871, 0x73f7, 0xa493, 0x0, 0x1);
        gbc.writeMem(0x4dfc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1a9a, gbc.sp());
        EXPECT(0x4dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0150
        gbc.setState(0x1db3, 0x349c, 0x68e0, 0xb76f, 0x124e, 0xff84, 0x0, 0x1);
        gbc.writeMem(0x1db3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x349c, gbc.sp());
        EXPECT(0x1db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0151
        gbc.setState(0x8275, 0x88e1, 0x9a10, 0x1de, 0x8b92, 0xcf09, 0x1, 0x1);
        gbc.writeMem(0x8275, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x88e1, gbc.sp());
        EXPECT(0x8277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8275));
        EXPECT(0x44, gbc.readMem(0x8276));
        // CB 44 0152
        gbc.setState(0x5c06, 0xdfe1, 0xcdd0, 0x8658, 0x909f, 0x8a5, 0x1, 0x0);
        gbc.writeMem(0x5c06, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdfe1, gbc.sp());
        EXPECT(0x5c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0153
        gbc.setState(0xb7ab, 0xae28, 0x7c20, 0xb5f9, 0x33c1, 0x3da7, 0x0, 0x0);
        gbc.writeMem(0xb7ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xae28, gbc.sp());
        EXPECT(0xb7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ab));
        EXPECT(0x44, gbc.readMem(0xb7ac));
        // CB 44 0154
        gbc.setState(0x51, 0xea8f, 0x1fd0, 0xe85a, 0x427c, 0x21b, 0x1, 0x1);
        gbc.writeMem(0x51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xea8f, gbc.sp());
        EXPECT(0x53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0155
        gbc.setState(0x44d5, 0x3516, 0x3940, 0xbe88, 0xf45d, 0xc21a, 0x1, 0x1);
        gbc.writeMem(0x44d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3516, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0156
        gbc.setState(0x38e4, 0x1c18, 0xd2d0, 0xf779, 0xdf2d, 0x2522, 0x0, 0x0);
        gbc.writeMem(0x38e4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1c18, gbc.sp());
        EXPECT(0x38e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0157
        gbc.setState(0x8a13, 0x5df7, 0xa8a0, 0x2ca6, 0x6446, 0x5554, 0x1, 0x1);
        gbc.writeMem(0x8a13, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5df7, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a13));
        EXPECT(0x44, gbc.readMem(0x8a14));
        // CB 44 0158
        gbc.setState(0x7d14, 0xb7b6, 0x8c90, 0xa24b, 0xa100, 0x100, 0x1, 0x1);
        gbc.writeMem(0x7d14, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7b6, gbc.sp());
        EXPECT(0x7d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0159
        gbc.setState(0x8b5c, 0x660d, 0xdc0, 0x8eda, 0x71b0, 0xebfd, 0x0, 0x1);
        gbc.writeMem(0x8b5c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x660d, gbc.sp());
        EXPECT(0x8b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b5c));
        EXPECT(0x44, gbc.readMem(0x8b5d));
        // CB 44 015A
        gbc.setState(0x43e4, 0x93f4, 0x3c80, 0x60a2, 0xab6c, 0xaba6, 0x1, 0x1);
        gbc.writeMem(0x43e4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x93f4, gbc.sp());
        EXPECT(0x43e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 015C
        gbc.setState(0x748e, 0x3a7c, 0x880, 0x3101, 0xb26d, 0x20e, 0x0, 0x1);
        gbc.writeMem(0x748e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3a7c, gbc.sp());
        EXPECT(0x7490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 015D
        gbc.setState(0x6ec5, 0xa2fa, 0xe670, 0xcfa4, 0xd8f3, 0x1b68, 0x1, 0x1);
        gbc.writeMem(0x6ec5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2fa, gbc.sp());
        EXPECT(0x6ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 015E
        gbc.setState(0x36f3, 0xc26b, 0x77f0, 0xf450, 0x2472, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0x36f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc26b, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 015F
        gbc.setState(0x8bee, 0x3ba4, 0x8250, 0x3745, 0x465c, 0xc444, 0x0, 0x1);
        gbc.writeMem(0x8bee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3ba4, gbc.sp());
        EXPECT(0x8bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bee));
        EXPECT(0x44, gbc.readMem(0x8bef));
        // CB 44 0160
        gbc.setState(0x9af6, 0x5cfd, 0x4ef0, 0x2dfa, 0xa0ca, 0x6d0a, 0x1, 0x1);
        gbc.writeMem(0x9af6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0x9af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9af6));
        EXPECT(0x44, gbc.readMem(0x9af7));
        // CB 44 0161
        gbc.setState(0xe668, 0x3077, 0xace0, 0xb312, 0x9a70, 0x1cc9, 0x0, 0x0);
        gbc.writeMem(0xe668, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0xe66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe668));
        EXPECT(0x44, gbc.readMem(0xe669));
        // CB 44 0162
        gbc.setState(0xb111, 0x1d88, 0xfcf0, 0x218, 0xbf62, 0x8fc9, 0x1, 0x0);
        gbc.writeMem(0xb111, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0xb113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb111));
        EXPECT(0x44, gbc.readMem(0xb112));
        // CB 44 0163
        gbc.setState(0x5bf2, 0x182c, 0xf580, 0xc43, 0xc679, 0x7c81, 0x1, 0x0);
        gbc.writeMem(0x5bf2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x182c, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0164
        gbc.setState(0x1d6c, 0xd37, 0xf9e0, 0xc598, 0xecbb, 0x4d60, 0x1, 0x1);
        gbc.writeMem(0x1d6c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd37, gbc.sp());
        EXPECT(0x1d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0165
        gbc.setState(0xcfac, 0xc0c0, 0x7440, 0x1158, 0xae29, 0x2b0c, 0x0, 0x1);
        gbc.writeMem(0xcfac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc0c0, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfac));
        EXPECT(0x44, gbc.readMem(0xcfad));
        // CB 44 0166
        gbc.setState(0xeae6, 0x2f13, 0x4f90, 0xba07, 0x3016, 0x4a3f, 0x0, 0x0);
        gbc.writeMem(0xeae6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2f13, gbc.sp());
        EXPECT(0xeae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae6));
        EXPECT(0x44, gbc.readMem(0xeae7));
        // CB 44 0167
        gbc.setState(0x5648, 0x69dc, 0x7f40, 0x8cb4, 0x1842, 0xb00c, 0x0, 0x0);
        gbc.writeMem(0x5648, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x69dc, gbc.sp());
        EXPECT(0x564a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0168
        gbc.setState(0x26aa, 0xc50c, 0x1d40, 0x11b2, 0x1920, 0x641f, 0x1, 0x0);
        gbc.writeMem(0x26aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0x26ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0169
        gbc.setState(0xbf6d, 0x1596, 0x2260, 0x4df9, 0x7bb, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0xbf6d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0xbf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6d));
        EXPECT(0x44, gbc.readMem(0xbf6e));
        // CB 44 016A
        gbc.setState(0x7501, 0x4f07, 0x4e0, 0xd4d3, 0x5ae5, 0x4557, 0x0, 0x1);
        gbc.writeMem(0x7501, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0x7503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 016B
        gbc.setState(0xee5b, 0x23b2, 0x2570, 0xc389, 0x5eaf, 0x83e1, 0x1, 0x0);
        gbc.writeMem(0xee5b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x23b2, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee5b));
        EXPECT(0x44, gbc.readMem(0xee5c));
        // CB 44 016C
        gbc.setState(0x8237, 0x9a4d, 0xaea0, 0x17ce, 0x7db6, 0x97f1, 0x0, 0x0);
        gbc.writeMem(0x8237, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9a4d, gbc.sp());
        EXPECT(0x8239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8237));
        EXPECT(0x44, gbc.readMem(0x8238));
        // CB 44 016D
        gbc.setState(0x9110, 0xb48a, 0x7780, 0x1672, 0x5c9d, 0x128b, 0x1, 0x1);
        gbc.writeMem(0x9110, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb48a, gbc.sp());
        EXPECT(0x9112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9110));
        EXPECT(0x44, gbc.readMem(0x9111));
        // CB 44 016F
        gbc.setState(0x7d5, 0x1d2a, 0x60f0, 0xe112, 0x5ec2, 0xad2b, 0x1, 0x1);
        gbc.writeMem(0x7d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d2a, gbc.sp());
        EXPECT(0x7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0170
        gbc.setState(0x8637, 0x4adb, 0xaec0, 0xa16d, 0xb36f, 0x2f2d, 0x0, 0x1);
        gbc.writeMem(0x8637, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4adb, gbc.sp());
        EXPECT(0x8639, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8637));
        EXPECT(0x44, gbc.readMem(0x8638));
        // CB 44 0171
        gbc.setState(0x4263, 0xdae2, 0x6b80, 0xd18f, 0xbd5, 0x38ee, 0x1, 0x1);
        gbc.writeMem(0x4263, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0172
        gbc.setState(0xe33e, 0x1c4, 0x1490, 0x9375, 0xed5b, 0xa8fa, 0x0, 0x0);
        gbc.writeMem(0xe33e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33e));
        EXPECT(0x44, gbc.readMem(0xe33f));
        // CB 44 0173
        gbc.setState(0x9b9e, 0xbba8, 0xd9e0, 0x5e0c, 0x1710, 0x3db1, 0x0, 0x1);
        gbc.writeMem(0x9b9e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x9ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9e));
        EXPECT(0x44, gbc.readMem(0x9b9f));
        // CB 44 0174
        gbc.setState(0x943b, 0x2a3c, 0x11d0, 0x2781, 0x3b7b, 0xa448, 0x1, 0x0);
        gbc.writeMem(0x943b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2a3c, gbc.sp());
        EXPECT(0x943d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x943b));
        EXPECT(0x44, gbc.readMem(0x943c));
        // CB 44 0175
        gbc.setState(0x5e5e, 0xd73b, 0x74f0, 0xe375, 0xfc83, 0x49b2, 0x1, 0x0);
        gbc.writeMem(0x5e5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd73b, gbc.sp());
        EXPECT(0x5e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0176
        gbc.setState(0xc8db, 0xb2b5, 0x43f0, 0x19ce, 0x19a6, 0x5efb, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb2b5, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8db));
        EXPECT(0x44, gbc.readMem(0xc8dc));
        // CB 44 0177
        gbc.setState(0xce35, 0xf452, 0x75a0, 0xf8dd, 0x33d1, 0x9d2d, 0x0, 0x0);
        gbc.writeMem(0xce35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf452, gbc.sp());
        EXPECT(0xce37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce35));
        EXPECT(0x44, gbc.readMem(0xce36));
        // CB 44 0178
        gbc.setState(0x2081, 0x7383, 0xe160, 0xd708, 0x7a2b, 0x30b4, 0x0, 0x0);
        gbc.writeMem(0x2081, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0x2083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0179
        gbc.setState(0x6946, 0x27f8, 0xecf0, 0x452a, 0xf7ed, 0x897c, 0x1, 0x0);
        gbc.writeMem(0x6946, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x27f8, gbc.sp());
        EXPECT(0x6948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 017A
        gbc.setState(0x3a26, 0x4a61, 0x5930, 0x15ee, 0xd5cc, 0x5bed, 0x1, 0x0);
        gbc.writeMem(0x3a26, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4a61, gbc.sp());
        EXPECT(0x3a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 017B
        gbc.setState(0xae9a, 0xa068, 0x7a10, 0xe779, 0xa6ca, 0xbd72, 0x0, 0x1);
        gbc.writeMem(0xae9a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa068, gbc.sp());
        EXPECT(0xae9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9a));
        EXPECT(0x44, gbc.readMem(0xae9b));
        // CB 44 017C
        gbc.setState(0x847f, 0x9785, 0xd6f0, 0xbbd4, 0xa78a, 0x4a5b, 0x0, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9785, gbc.sp());
        EXPECT(0x8481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847f));
        EXPECT(0x44, gbc.readMem(0x8480));
        // CB 44 017D
        gbc.setState(0xa003, 0xc069, 0x61f0, 0xc33a, 0x1ccb, 0x5779, 0x0, 0x0);
        gbc.writeMem(0xa003, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc069, gbc.sp());
        EXPECT(0xa005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa003));
        EXPECT(0x44, gbc.readMem(0xa004));
        // CB 44 017E
        gbc.setState(0x4961, 0x7861, 0xd1d0, 0x7d2, 0x7b79, 0xaf80, 0x0, 0x1);
        gbc.writeMem(0x4961, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7861, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 017F
        gbc.setState(0x52c8, 0x25b, 0x5150, 0x64b6, 0xfe87, 0x643, 0x1, 0x0);
        gbc.writeMem(0x52c8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x52ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0180
        gbc.setState(0x277b, 0x30a8, 0xdf00, 0x7558, 0xf62f, 0x56e4, 0x0, 0x0);
        gbc.writeMem(0x277b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x30a8, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0181
        gbc.setState(0x371, 0x5458, 0x9870, 0xc5db, 0x2fab, 0xc88e, 0x0, 0x0);
        gbc.writeMem(0x371, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0x373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0182
        gbc.setState(0xd3d1, 0xe815, 0xed10, 0xd374, 0xfaf, 0x52de, 0x1, 0x1);
        gbc.writeMem(0xd3d1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe815, gbc.sp());
        EXPECT(0xd3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3d1));
        EXPECT(0x44, gbc.readMem(0xd3d2));
        // CB 44 0183
        gbc.setState(0x279f, 0xcb05, 0xfd40, 0x10ea, 0x1d5f, 0x7987, 0x1, 0x1);
        gbc.writeMem(0x279f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0x27a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0184
        gbc.setState(0x20ae, 0xfaf5, 0xd6d0, 0x948d, 0x3269, 0xdcdf, 0x0, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0x20b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0185
        gbc.setState(0x3285, 0xb1c2, 0x6e50, 0x7502, 0xe72c, 0x9a3d, 0x1, 0x1);
        gbc.writeMem(0x3285, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0x3287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0186
        gbc.setState(0x9cf0, 0x65fb, 0xaaa0, 0x854, 0x3a4, 0xf103, 0x0, 0x0);
        gbc.writeMem(0x9cf0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x65fb, gbc.sp());
        EXPECT(0x9cf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cf0));
        EXPECT(0x44, gbc.readMem(0x9cf1));
        // CB 44 0187
        gbc.setState(0xc8db, 0xba81, 0x49e0, 0x887e, 0x9185, 0x1d2d, 0x0, 0x1);
        gbc.writeMem(0xc8db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xba81, gbc.sp());
        EXPECT(0xc8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8db));
        EXPECT(0x44, gbc.readMem(0xc8dc));
        // CB 44 0188
        gbc.setState(0x35cf, 0x92a8, 0x540, 0xd79c, 0x78f2, 0xd513, 0x1, 0x1);
        gbc.writeMem(0x35cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x92a8, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0189
        gbc.setState(0x797a, 0x2d45, 0x5520, 0x9d61, 0x417a, 0x173c, 0x0, 0x0);
        gbc.writeMem(0x797a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d45, gbc.sp());
        EXPECT(0x797c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 018A
        gbc.setState(0x717f, 0x6dc4, 0xbcf0, 0xa7d1, 0xd1d5, 0xee8d, 0x1, 0x0);
        gbc.writeMem(0x717f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6dc4, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 018B
        gbc.setState(0xe8d6, 0x86c8, 0x6220, 0xa8b1, 0x8261, 0x568, 0x1, 0x1);
        gbc.writeMem(0xe8d6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x86c8, gbc.sp());
        EXPECT(0xe8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d6));
        EXPECT(0x44, gbc.readMem(0xe8d7));
        // CB 44 018C
        gbc.setState(0x277c, 0x29e9, 0xa560, 0x82f3, 0x23d9, 0xb730, 0x1, 0x1);
        gbc.writeMem(0x277c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x29e9, gbc.sp());
        EXPECT(0x277e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 018E
        gbc.setState(0x7b80, 0x1474, 0xb4a0, 0x2621, 0x6986, 0x3c19, 0x1, 0x1);
        gbc.writeMem(0x7b80, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1474, gbc.sp());
        EXPECT(0x7b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 018F
        gbc.setState(0x3906, 0x4318, 0xa840, 0x6cf9, 0x385b, 0xcd56, 0x1, 0x0);
        gbc.writeMem(0x3906, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4318, gbc.sp());
        EXPECT(0x3908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0191
        gbc.setState(0xe83d, 0xc419, 0x1060, 0x8258, 0xd6af, 0x8ad9, 0x0, 0x0);
        gbc.writeMem(0xe83d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc419, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83d));
        EXPECT(0x44, gbc.readMem(0xe83e));
        // CB 44 0192
        gbc.setState(0xd15f, 0x6620, 0x5290, 0xc216, 0xe6b, 0x495f, 0x0, 0x0);
        gbc.writeMem(0xd15f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6620, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0x44, gbc.readMem(0xd160));
        // CB 44 0193
        gbc.setState(0xaf52, 0x6d6a, 0x4d70, 0x3796, 0xabdb, 0x6be0, 0x0, 0x0);
        gbc.writeMem(0xaf52, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6d6a, gbc.sp());
        EXPECT(0xaf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf52));
        EXPECT(0x44, gbc.readMem(0xaf53));
        // CB 44 0194
        gbc.setState(0x5651, 0x8a09, 0xf8d0, 0xef90, 0x24df, 0x19ba, 0x0, 0x0);
        gbc.writeMem(0x5651, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8a09, gbc.sp());
        EXPECT(0x5653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0195
        gbc.setState(0xe384, 0x639b, 0x30c0, 0x5dfa, 0x3609, 0xc15b, 0x1, 0x1);
        gbc.writeMem(0xe384, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x639b, gbc.sp());
        EXPECT(0xe386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe384));
        EXPECT(0x44, gbc.readMem(0xe385));
        // CB 44 0196
        gbc.setState(0x9c35, 0x96ba, 0x1d70, 0x2c7d, 0x4e81, 0x5529, 0x0, 0x1);
        gbc.writeMem(0x9c35, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x96ba, gbc.sp());
        EXPECT(0x9c37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c35));
        EXPECT(0x44, gbc.readMem(0x9c36));
        // CB 44 0197
        gbc.setState(0x79b2, 0xe943, 0x2b00, 0x3795, 0x88c2, 0x4612, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe943, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0198
        gbc.setState(0x2e16, 0xe837, 0xaca0, 0xfc64, 0x25e3, 0x1b6a, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe837, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0199
        gbc.setState(0xbbe9, 0x992d, 0xbe70, 0xa2bd, 0x3477, 0x7893, 0x1, 0x1);
        gbc.writeMem(0xbbe9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x992d, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe9));
        EXPECT(0x44, gbc.readMem(0xbbea));
        // CB 44 019A
        gbc.setState(0xdbd, 0xadcc, 0x4810, 0xd3ec, 0xf875, 0xb38a, 0x0, 0x1);
        gbc.writeMem(0xdbd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xadcc, gbc.sp());
        EXPECT(0xdbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 019B
        gbc.setState(0x8538, 0xd0b4, 0x83a0, 0xb692, 0x17db, 0xbb89, 0x1, 0x1);
        gbc.writeMem(0x8538, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd0b4, gbc.sp());
        EXPECT(0x853a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8538));
        EXPECT(0x44, gbc.readMem(0x8539));
        // CB 44 019C
        gbc.setState(0x7fcd, 0xd015, 0x1ff0, 0x4e84, 0x57e0, 0xe298, 0x1, 0x1);
        gbc.writeMem(0x7fcd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x7fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 019D
        gbc.setState(0x4750, 0x3846, 0xbd70, 0xda12, 0xa276, 0xdcc2, 0x0, 0x1);
        gbc.writeMem(0x4750, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x3846, gbc.sp());
        EXPECT(0x4752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 019E
        gbc.setState(0xbbbe, 0xfb0d, 0x4d00, 0xe28f, 0xd2c2, 0x1d15, 0x1, 0x0);
        gbc.writeMem(0xbbbe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfb0d, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbe));
        EXPECT(0x44, gbc.readMem(0xbbbf));
        // CB 44 019F
        gbc.setState(0x2ff3, 0xc4d7, 0xcb40, 0xbe3c, 0x9bf, 0x42eb, 0x1, 0x0);
        gbc.writeMem(0x2ff3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc4d7, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01A0
        gbc.setState(0xd883, 0x8c5e, 0xf0d0, 0xae07, 0x7954, 0xbaa5, 0x0, 0x1);
        gbc.writeMem(0xd883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0xd885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd883));
        EXPECT(0x44, gbc.readMem(0xd884));
        // CB 44 01A1
        gbc.setState(0x553f, 0x9ca2, 0xc310, 0xcabf, 0x2d7a, 0x3cc3, 0x1, 0x0);
        gbc.writeMem(0x553f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9ca2, gbc.sp());
        EXPECT(0x5541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01A2
        gbc.setState(0x69a4, 0x8008, 0xfb20, 0xf051, 0xdac1, 0xeb91, 0x0, 0x1);
        gbc.writeMem(0x69a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8008, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01A3
        gbc.setState(0xc35d, 0x9a51, 0xff50, 0xf2e, 0xe4e5, 0x69f4, 0x1, 0x1);
        gbc.writeMem(0xc35d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9a51, gbc.sp());
        EXPECT(0xc35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35d));
        EXPECT(0x44, gbc.readMem(0xc35e));
        // CB 44 01A4
        gbc.setState(0x443a, 0xf904, 0x4f50, 0xad3, 0x5915, 0x3b2f, 0x0, 0x1);
        gbc.writeMem(0x443a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x443c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01A5
        gbc.setState(0xec71, 0xe154, 0xeb70, 0xee91, 0x8068, 0xddb3, 0x0, 0x0);
        gbc.writeMem(0xec71, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe154, gbc.sp());
        EXPECT(0xec73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec71));
        EXPECT(0x44, gbc.readMem(0xec72));
        // CB 44 01A6
        gbc.setState(0x6310, 0x3bda, 0xa580, 0x30dc, 0xc582, 0x4a76, 0x0, 0x0);
        gbc.writeMem(0x6310, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3bda, gbc.sp());
        EXPECT(0x6312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01A7
        gbc.setState(0xaa73, 0x1ddd, 0x49a0, 0xc14c, 0x2982, 0xc526, 0x0, 0x0);
        gbc.writeMem(0xaa73, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1ddd, gbc.sp());
        EXPECT(0xaa75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa73));
        EXPECT(0x44, gbc.readMem(0xaa74));
        // CB 44 01A8
        gbc.setState(0xb3ec, 0x35c0, 0x8b70, 0x8323, 0x2971, 0xbc45, 0x1, 0x1);
        gbc.writeMem(0xb3ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0xb3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ec));
        EXPECT(0x44, gbc.readMem(0xb3ed));
        // CB 44 01AA
        gbc.setState(0x9f5d, 0xbf07, 0xeb10, 0xa3e6, 0x5368, 0x6b67, 0x0, 0x0);
        gbc.writeMem(0x9f5d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbf07, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f5d));
        EXPECT(0x44, gbc.readMem(0x9f5e));
        // CB 44 01AB
        gbc.setState(0x3a6c, 0xac79, 0x3770, 0x6941, 0x30ff, 0x6d6b, 0x0, 0x0);
        gbc.writeMem(0x3a6c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac79, gbc.sp());
        EXPECT(0x3a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01AC
        gbc.setState(0x1e2a, 0x27e5, 0xec80, 0x32a0, 0x9623, 0x908d, 0x1, 0x0);
        gbc.writeMem(0x1e2a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x27e5, gbc.sp());
        EXPECT(0x1e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01AD
        gbc.setState(0x3303, 0x4c29, 0x9290, 0x745d, 0x46b2, 0x75b, 0x1, 0x0);
        gbc.writeMem(0x3303, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4c29, gbc.sp());
        EXPECT(0x3305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01AE
        gbc.setState(0x40d3, 0x1c45, 0x4cf0, 0x2343, 0x1787, 0x1fa1, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1c45, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01AF
        gbc.setState(0x41e8, 0xf317, 0xb2a0, 0x3301, 0x569c, 0x2dc3, 0x1, 0x1);
        gbc.writeMem(0x41e8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf317, gbc.sp());
        EXPECT(0x41ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01B0
        gbc.setState(0x4556, 0xbef7, 0x2e40, 0x5000, 0x2769, 0xb827, 0x0, 0x0);
        gbc.writeMem(0x4556, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbef7, gbc.sp());
        EXPECT(0x4558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01B1
        gbc.setState(0x1e9d, 0xb9ad, 0x3a20, 0xeead, 0xa87c, 0x4094, 0x1, 0x0);
        gbc.writeMem(0x1e9d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb9ad, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01B3
        gbc.setState(0x883, 0xb88f, 0xa9e0, 0xd205, 0x6bea, 0xd348, 0x0, 0x1);
        gbc.writeMem(0x883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb88f, gbc.sp());
        EXPECT(0x885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01B4
        gbc.setState(0x142d, 0xbaba, 0xbd20, 0x397e, 0x7548, 0x279e, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x142f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01B5
        gbc.setState(0xd61c, 0x4262, 0x95d0, 0xbe09, 0x6f5e, 0x1c16, 0x1, 0x1);
        gbc.writeMem(0xd61c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4262, gbc.sp());
        EXPECT(0xd61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61c));
        EXPECT(0x44, gbc.readMem(0xd61d));
        // CB 44 01B6
        gbc.setState(0x7a95, 0x6686, 0x1730, 0x3001, 0xd41c, 0x473e, 0x1, 0x0);
        gbc.writeMem(0x7a95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6686, gbc.sp());
        EXPECT(0x7a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01B7
        gbc.setState(0xc9a2, 0x6cff, 0x3920, 0x8ae5, 0x64ea, 0x90b2, 0x1, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6cff, gbc.sp());
        EXPECT(0xc9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a2));
        EXPECT(0x44, gbc.readMem(0xc9a3));
        // CB 44 01B8
        gbc.setState(0x7411, 0x94d7, 0x8cb0, 0x11d6, 0x6f64, 0x453f, 0x0, 0x0);
        gbc.writeMem(0x7411, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x94d7, gbc.sp());
        EXPECT(0x7413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01BA
        gbc.setState(0x3d37, 0x5f1b, 0xf9d0, 0x440b, 0x717, 0x89d0, 0x1, 0x0);
        gbc.writeMem(0x3d37, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5f1b, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01BD
        gbc.setState(0x73cc, 0xa8e1, 0x1ca0, 0x5eb9, 0x623, 0x6d85, 0x0, 0x1);
        gbc.writeMem(0x73cc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0x73ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01BE
        gbc.setState(0x70e5, 0xef4c, 0xba20, 0x51d3, 0x6d21, 0x148a, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x70e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01BF
        gbc.setState(0xa7ce, 0x463b, 0x5a80, 0x1fe, 0xc690, 0x59ce, 0x0, 0x1);
        gbc.writeMem(0xa7ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x463b, gbc.sp());
        EXPECT(0xa7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ce));
        EXPECT(0x44, gbc.readMem(0xa7cf));
        // CB 44 01C0
        gbc.setState(0x143, 0xf0d5, 0xdc80, 0x96c7, 0xce37, 0x3be5, 0x1, 0x0);
        gbc.writeMem(0x143, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf0d5, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01C1
        gbc.setState(0xab1, 0xa3e4, 0xcc30, 0x7ede, 0x2f2a, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0xab1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa3e4, gbc.sp());
        EXPECT(0xab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01C2
        gbc.setState(0x8ab, 0xc6dd, 0x6330, 0x169a, 0xec37, 0x204e, 0x1, 0x1);
        gbc.writeMem(0x8ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc6dd, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01C3
        gbc.setState(0xd2c9, 0x5f84, 0x9010, 0xffeb, 0xeac6, 0xa5e5, 0x0, 0x0);
        gbc.writeMem(0xd2c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5f84, gbc.sp());
        EXPECT(0xd2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c9));
        EXPECT(0x44, gbc.readMem(0xd2ca));
        // CB 44 01C5
        gbc.setState(0x2910, 0xb807, 0x2360, 0xb95e, 0xa847, 0xb90a, 0x1, 0x1);
        gbc.writeMem(0x2910, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb807, gbc.sp());
        EXPECT(0x2912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01C6
        gbc.setState(0xd777, 0x123e, 0x47f0, 0x1293, 0x72de, 0x33f8, 0x0, 0x0);
        gbc.writeMem(0xd777, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x123e, gbc.sp());
        EXPECT(0xd779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd777));
        EXPECT(0x44, gbc.readMem(0xd778));
        // CB 44 01C7
        gbc.setState(0x6c63, 0x5ab3, 0x22d0, 0x294c, 0x67eb, 0x2523, 0x1, 0x1);
        gbc.writeMem(0x6c63, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0x6c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01C9
        gbc.setState(0x172d, 0x20f8, 0x7380, 0xe806, 0x2ea, 0x6ea4, 0x0, 0x0);
        gbc.writeMem(0x172d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01CA
        gbc.setState(0x6861, 0x28c3, 0x47e0, 0xde2a, 0x7567, 0xe6f9, 0x0, 0x1);
        gbc.writeMem(0x6861, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x28c3, gbc.sp());
        EXPECT(0x6863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01CB
        gbc.setState(0x5d70, 0xa078, 0x6ef0, 0xeb0e, 0x2b06, 0x9590, 0x0, 0x1);
        gbc.writeMem(0x5d70, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa078, gbc.sp());
        EXPECT(0x5d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01CC
        gbc.setState(0xb61d, 0x524d, 0x1170, 0xabbc, 0xb04e, 0xa018, 0x1, 0x1);
        gbc.writeMem(0xb61d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x524d, gbc.sp());
        EXPECT(0xb61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61d));
        EXPECT(0x44, gbc.readMem(0xb61e));
        // CB 44 01CD
        gbc.setState(0x2cab, 0xb4c4, 0xe9d0, 0xec24, 0x86f1, 0x475d, 0x0, 0x1);
        gbc.writeMem(0x2cab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x2cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01CE
        gbc.setState(0x693f, 0xc1bd, 0x3e50, 0x1f5b, 0x1492, 0x5434, 0x1, 0x0);
        gbc.writeMem(0x693f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01CF
        gbc.setState(0xc7db, 0x6ea, 0x30, 0x5eb3, 0x889b, 0xd8e0, 0x1, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6ea, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7db));
        EXPECT(0x44, gbc.readMem(0xc7dc));
        // CB 44 01D0
        gbc.setState(0x7fd0, 0xc24f, 0xf880, 0xa383, 0x7d1f, 0xc610, 0x1, 0x0);
        gbc.writeMem(0x7fd0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc24f, gbc.sp());
        EXPECT(0x7fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01D1
        gbc.setState(0xa97e, 0x5fd7, 0x96b0, 0x859d, 0xed81, 0x2b81, 0x0, 0x0);
        gbc.writeMem(0xa97e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5fd7, gbc.sp());
        EXPECT(0xa980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97e));
        EXPECT(0x44, gbc.readMem(0xa97f));
        // CB 44 01D2
        gbc.setState(0xb313, 0xbc1f, 0x7ce0, 0x39bd, 0x5718, 0xf929, 0x0, 0x0);
        gbc.writeMem(0xb313, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbc1f, gbc.sp());
        EXPECT(0xb315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb313));
        EXPECT(0x44, gbc.readMem(0xb314));
        // CB 44 01D4
        gbc.setState(0x3433, 0xd4be, 0x67d0, 0x138b, 0xf70, 0x215e, 0x1, 0x0);
        gbc.writeMem(0x3433, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x3435, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01D6
        gbc.setState(0x540, 0x74ac, 0x1020, 0xcaab, 0x5095, 0xbd4d, 0x1, 0x0);
        gbc.writeMem(0x540, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x74ac, gbc.sp());
        EXPECT(0x542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01D8
        gbc.setState(0x6c8b, 0x4d45, 0xd890, 0xc939, 0xf1cb, 0x33f9, 0x0, 0x0);
        gbc.writeMem(0x6c8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4d45, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01D9
        gbc.setState(0x47dd, 0x5f64, 0x2390, 0xb410, 0xec01, 0x7827, 0x0, 0x0);
        gbc.writeMem(0x47dd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5f64, gbc.sp());
        EXPECT(0x47df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01DC
        gbc.setState(0x568e, 0x6f42, 0x2590, 0xb26c, 0x123a, 0xd4c5, 0x0, 0x1);
        gbc.writeMem(0x568e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6f42, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01DD
        gbc.setState(0x11bb, 0x43a4, 0x68e0, 0x29c5, 0x2584, 0xa9a, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x43a4, gbc.sp());
        EXPECT(0x11bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01DE
        gbc.setState(0x1c61, 0xb8fd, 0x7e20, 0x65ef, 0x434b, 0x3328, 0x0, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb8fd, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01DF
        gbc.setState(0xa88d, 0xecf9, 0xebc0, 0x14ff, 0x6ca0, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0xa88d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xecf9, gbc.sp());
        EXPECT(0xa88f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88d));
        EXPECT(0x44, gbc.readMem(0xa88e));
        // CB 44 01E0
        gbc.setState(0x3353, 0x694c, 0x12f0, 0xc89b, 0xf580, 0xe063, 0x1, 0x0);
        gbc.writeMem(0x3353, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x3355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01E1
        gbc.setState(0xc122, 0x13f7, 0x13f0, 0x8276, 0x9fd8, 0xf4a7, 0x0, 0x0);
        gbc.writeMem(0xc122, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x13f7, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc122));
        EXPECT(0x44, gbc.readMem(0xc123));
        // CB 44 01E2
        gbc.setState(0x5d93, 0x4388, 0x32e0, 0x35d4, 0x2ec5, 0x76df, 0x1, 0x1);
        gbc.writeMem(0x5d93, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4388, gbc.sp());
        EXPECT(0x5d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01E4
        gbc.setState(0xc6f7, 0x98bc, 0x9e30, 0x76b2, 0x19c0, 0xbdbd, 0x0, 0x0);
        gbc.writeMem(0xc6f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x98bc, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f7));
        EXPECT(0x44, gbc.readMem(0xc6f8));
        // CB 44 01E5
        gbc.setState(0x9134, 0x70de, 0xb190, 0x88d9, 0xa5ca, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x9134, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x70de, gbc.sp());
        EXPECT(0x9136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9134));
        EXPECT(0x44, gbc.readMem(0x9135));
        // CB 44 01E6
        gbc.setState(0xa5aa, 0xf409, 0x6080, 0x4062, 0xd5c0, 0x556b, 0x1, 0x0);
        gbc.writeMem(0xa5aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5aa));
        EXPECT(0x44, gbc.readMem(0xa5ab));
        // CB 44 01E7
        gbc.setState(0x5d89, 0x82b7, 0x2790, 0xb718, 0xb27f, 0xf99a, 0x1, 0x0);
        gbc.writeMem(0x5d89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0x5d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01E8
        gbc.setState(0xd85b, 0xe82a, 0x98f0, 0x6408, 0x55db, 0x8525, 0x0, 0x1);
        gbc.writeMem(0xd85b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe82a, gbc.sp());
        EXPECT(0xd85d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85b));
        EXPECT(0x44, gbc.readMem(0xd85c));
        // CB 44 01E9
        gbc.setState(0xc941, 0x4b37, 0xdbd0, 0xe76, 0xc93c, 0x709c, 0x1, 0x1);
        gbc.writeMem(0xc941, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4b37, gbc.sp());
        EXPECT(0xc943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc941));
        EXPECT(0x44, gbc.readMem(0xc942));
        // CB 44 01EA
        gbc.setState(0x7b85, 0x602a, 0xfc70, 0x9790, 0xe6e, 0x9b6d, 0x1, 0x1);
        gbc.writeMem(0x7b85, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x602a, gbc.sp());
        EXPECT(0x7b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01EB
        gbc.setState(0xd6d5, 0xdff, 0xc690, 0xa94a, 0x646d, 0xf1a7, 0x1, 0x1);
        gbc.writeMem(0xd6d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdff, gbc.sp());
        EXPECT(0xd6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d5));
        EXPECT(0x44, gbc.readMem(0xd6d6));
        // CB 44 01EC
        gbc.setState(0x9807, 0xee8e, 0xebe0, 0xdd47, 0xc52, 0x2858, 0x1, 0x0);
        gbc.writeMem(0x9807, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xee8e, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0x44, gbc.readMem(0x9808));
        // CB 44 01ED
        gbc.setState(0xbfc5, 0xd61, 0x33d0, 0xd55e, 0xfa36, 0x3c62, 0x1, 0x0);
        gbc.writeMem(0xbfc5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0xbfc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc5));
        EXPECT(0x44, gbc.readMem(0xbfc6));
        // CB 44 01EE
        gbc.setState(0x2498, 0xc9a9, 0xead0, 0x3b57, 0x599d, 0x11b0, 0x0, 0x1);
        gbc.writeMem(0x2498, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xc9a9, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01EF
        gbc.setState(0xdf2d, 0x49a1, 0xf2d0, 0xd6d8, 0x698b, 0xf0fd, 0x0, 0x0);
        gbc.writeMem(0xdf2d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49a1, gbc.sp());
        EXPECT(0xdf2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf2d));
        EXPECT(0x44, gbc.readMem(0xdf2e));
        // CB 44 01F0
        gbc.setState(0x817, 0xbe44, 0x44c0, 0x6df3, 0x7b32, 0xef5a, 0x1, 0x1);
        gbc.writeMem(0x817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0x819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01F1
        gbc.setState(0x2cb2, 0x4cd5, 0x4a90, 0xc72b, 0xdc84, 0x5069, 0x0, 0x1);
        gbc.writeMem(0x2cb2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4cd5, gbc.sp());
        EXPECT(0x2cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01F2
        gbc.setState(0x87dc, 0x3308, 0x91f0, 0xd748, 0x781b, 0x9d4f, 0x0, 0x1);
        gbc.writeMem(0x87dc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3308, gbc.sp());
        EXPECT(0x87de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87dc));
        EXPECT(0x44, gbc.readMem(0x87dd));
        // CB 44 01F3
        gbc.setState(0x21d2, 0x337e, 0xa5d0, 0xff8e, 0x308, 0xae45, 0x1, 0x1);
        gbc.writeMem(0x21d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x337e, gbc.sp());
        EXPECT(0x21d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01F4
        gbc.setState(0x73f5, 0x312b, 0x96c0, 0xbb0e, 0x288d, 0xe2e6, 0x1, 0x0);
        gbc.writeMem(0x73f5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x312b, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01F5
        gbc.setState(0xa2ca, 0xb2be, 0xe1c0, 0x10bf, 0x94d7, 0xe50b, 0x0, 0x0);
        gbc.writeMem(0xa2ca, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb2be, gbc.sp());
        EXPECT(0xa2cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2ca));
        EXPECT(0x44, gbc.readMem(0xa2cb));
        // CB 44 01F6
        gbc.setState(0x796b, 0x431c, 0x5270, 0x1312, 0xe44f, 0xcfa4, 0x0, 0x0);
        gbc.writeMem(0x796b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x431c, gbc.sp());
        EXPECT(0x796d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01F7
        gbc.setState(0x334e, 0xd817, 0x3e20, 0x6389, 0x2373, 0x15e1, 0x0, 0x0);
        gbc.writeMem(0x334e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01F8
        gbc.setState(0x6aa, 0xb47f, 0x98b0, 0x5cd7, 0x943a, 0xbc62, 0x1, 0x1);
        gbc.writeMem(0x6aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb47f, gbc.sp());
        EXPECT(0x6ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01F9
        gbc.setState(0x9ad8, 0xe59d, 0x3550, 0xe055, 0x7cb4, 0x242c, 0x0, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe59d, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad8));
        EXPECT(0x44, gbc.readMem(0x9ad9));
        // CB 44 01FA
        gbc.setState(0x61ec, 0x9305, 0x1dc0, 0x1881, 0xabd9, 0x1172, 0x0, 0x0);
        gbc.writeMem(0x61ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9305, gbc.sp());
        EXPECT(0x61ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 01FB
        gbc.setState(0x9633, 0xdd2a, 0xc0a0, 0x61e4, 0xad53, 0xc667, 0x0, 0x0);
        gbc.writeMem(0x9633, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdd2a, gbc.sp());
        EXPECT(0x9635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9633));
        EXPECT(0x44, gbc.readMem(0x9634));
        // CB 44 01FC
        gbc.setState(0xb185, 0x528b, 0x6040, 0x5473, 0xed97, 0xcea2, 0x1, 0x1);
        gbc.writeMem(0xb185, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x528b, gbc.sp());
        EXPECT(0xb187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb185));
        EXPECT(0x44, gbc.readMem(0xb186));
        // CB 44 01FD
        gbc.setState(0xcb28, 0x3250, 0x9220, 0xd77a, 0x495d, 0x3457, 0x1, 0x0);
        gbc.writeMem(0xcb28, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3250, gbc.sp());
        EXPECT(0xcb2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb28));
        EXPECT(0x44, gbc.readMem(0xcb29));
        // CB 44 01FE
        gbc.setState(0x3966, 0x9bd0, 0x93d0, 0x4400, 0xe294, 0x536f, 0x1, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9bd0, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 01FF
        gbc.setState(0xdee7, 0x2ea2, 0xe820, 0xd40e, 0x5a40, 0x4e45, 0x1, 0x1);
        gbc.writeMem(0xdee7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2ea2, gbc.sp());
        EXPECT(0xdee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee7));
        EXPECT(0x44, gbc.readMem(0xdee8));
        // CB 44 0200
        gbc.setState(0x1a94, 0xfe05, 0x2090, 0xb921, 0x1a72, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0x1a94, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x1a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0201
        gbc.setState(0x2c2, 0x971, 0xca50, 0x9c21, 0x8dec, 0x2b98, 0x1, 0x0);
        gbc.writeMem(0x2c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x971, gbc.sp());
        EXPECT(0x2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0202
        gbc.setState(0x72ca, 0x2c36, 0xab50, 0xb247, 0x652b, 0xc505, 0x0, 0x1);
        gbc.writeMem(0x72ca, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2c36, gbc.sp());
        EXPECT(0x72cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0203
        gbc.setState(0xc02e, 0x7288, 0x8260, 0x1d11, 0xf4d5, 0x2859, 0x0, 0x0);
        gbc.writeMem(0xc02e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7288, gbc.sp());
        EXPECT(0xc030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02e));
        EXPECT(0x44, gbc.readMem(0xc02f));
        // CB 44 0204
        gbc.setState(0x2aa4, 0x7ed9, 0xd4b0, 0x4d36, 0xbd29, 0xd8a, 0x0, 0x0);
        gbc.writeMem(0x2aa4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7ed9, gbc.sp());
        EXPECT(0x2aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0205
        gbc.setState(0x56a, 0x13b3, 0x4ed0, 0x3ff4, 0x22ee, 0x9701, 0x1, 0x1);
        gbc.writeMem(0x56a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x13b3, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0206
        gbc.setState(0xb76, 0xb206, 0xb000, 0x36e5, 0x4f3, 0xa1e, 0x1, 0x0);
        gbc.writeMem(0xb76, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0xb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0208
        gbc.setState(0x3055, 0x2118, 0x40, 0x6efa, 0xd80c, 0xbba3, 0x0, 0x1);
        gbc.writeMem(0x3055, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x3057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0209
        gbc.setState(0x2ad2, 0x3d79, 0x8ed0, 0x2240, 0xdfd, 0x75ec, 0x1, 0x0);
        gbc.writeMem(0x2ad2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0x2ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 020A
        gbc.setState(0x3565, 0xac90, 0x64a0, 0x2405, 0x3319, 0x85dd, 0x1, 0x0);
        gbc.writeMem(0x3565, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xac90, gbc.sp());
        EXPECT(0x3567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 020B
        gbc.setState(0x4f3a, 0xf42e, 0xd690, 0x2751, 0x2239, 0x6c8c, 0x1, 0x1);
        gbc.writeMem(0x4f3a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x4f3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 020C
        gbc.setState(0x1334, 0xe019, 0x1840, 0x99f7, 0x2198, 0x348c, 0x0, 0x0);
        gbc.writeMem(0x1334, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe019, gbc.sp());
        EXPECT(0x1336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 020D
        gbc.setState(0xb0c2, 0x411, 0x74b0, 0x2e7a, 0x9a43, 0x4c9b, 0x0, 0x1);
        gbc.writeMem(0xb0c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x411, gbc.sp());
        EXPECT(0xb0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c2));
        EXPECT(0x44, gbc.readMem(0xb0c3));
        // CB 44 020E
        gbc.setState(0x5fb3, 0x4f41, 0x5460, 0x8ee6, 0x944a, 0x8836, 0x0, 0x1);
        gbc.writeMem(0x5fb3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0x5fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 020F
        gbc.setState(0xa497, 0x2bf9, 0x8250, 0x2b86, 0x7106, 0x4bc6, 0x0, 0x0);
        gbc.writeMem(0xa497, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0xa499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa497));
        EXPECT(0x44, gbc.readMem(0xa498));
        // CB 44 0210
        gbc.setState(0xd90c, 0xc17d, 0xf3e0, 0xafda, 0x6109, 0x4d98, 0x1, 0x1);
        gbc.writeMem(0xd90c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc17d, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90c));
        EXPECT(0x44, gbc.readMem(0xd90d));
        // CB 44 0211
        gbc.setState(0xbdfe, 0x6dbb, 0x72b0, 0x535e, 0xac99, 0x3de1, 0x0, 0x0);
        gbc.writeMem(0xbdfe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6dbb, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfe));
        EXPECT(0x44, gbc.readMem(0xbdff));
        // CB 44 0212
        gbc.setState(0x9cac, 0x6619, 0xd230, 0xa51a, 0xaf75, 0x5ee4, 0x0, 0x0);
        gbc.writeMem(0x9cac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6619, gbc.sp());
        EXPECT(0x9cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cac));
        EXPECT(0x44, gbc.readMem(0x9cad));
        // CB 44 0213
        gbc.setState(0x800d, 0x1d47, 0xe2a0, 0x3b79, 0x5969, 0xcd87, 0x1, 0x1);
        gbc.writeMem(0x800d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1d47, gbc.sp());
        EXPECT(0x800f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x800d));
        EXPECT(0x44, gbc.readMem(0x800e));
        // CB 44 0214
        gbc.setState(0xbe29, 0xed0c, 0x31f0, 0xebe, 0x221c, 0xa501, 0x0, 0x1);
        gbc.writeMem(0xbe29, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0xbe2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe29));
        EXPECT(0x44, gbc.readMem(0xbe2a));
        // CB 44 0215
        gbc.setState(0x27ba, 0x8c86, 0x1f60, 0xa67c, 0x6e62, 0x10cd, 0x1, 0x1);
        gbc.writeMem(0x27ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c86, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0216
        gbc.setState(0x6f61, 0xa6ba, 0xe5e0, 0x48d8, 0x7973, 0xfe52, 0x1, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa6ba, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0217
        gbc.setState(0xd8ee, 0xc915, 0xeb00, 0x9fa, 0x4d00, 0xf060, 0x1, 0x0);
        gbc.writeMem(0xd8ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc915, gbc.sp());
        EXPECT(0xd8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ee));
        EXPECT(0x44, gbc.readMem(0xd8ef));
        // CB 44 0218
        gbc.setState(0x54d5, 0xf49f, 0xd90, 0x6587, 0x5147, 0xd3a5, 0x0, 0x1);
        gbc.writeMem(0x54d5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf49f, gbc.sp());
        EXPECT(0x54d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 021A
        gbc.setState(0x7359, 0x3a8, 0xdd50, 0x270b, 0x23a8, 0xc528, 0x1, 0x1);
        gbc.writeMem(0x7359, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0x735b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 021B
        gbc.setState(0x2375, 0x84c, 0xbfe0, 0x9188, 0xda8f, 0xcf88, 0x0, 0x0);
        gbc.writeMem(0x2375, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x84c, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 021C
        gbc.setState(0x7e44, 0xb16d, 0xc400, 0xb3b9, 0x2689, 0xbb87, 0x1, 0x0);
        gbc.writeMem(0x7e44, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb16d, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 021D
        gbc.setState(0x2f23, 0x1d21, 0x410, 0x9d6a, 0x6bfe, 0xdbe5, 0x1, 0x0);
        gbc.writeMem(0x2f23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0x2f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 021E
        gbc.setState(0x5387, 0x6ffd, 0x3a10, 0x9136, 0x66b9, 0x9657, 0x1, 0x1);
        gbc.writeMem(0x5387, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6ffd, gbc.sp());
        EXPECT(0x5389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 021F
        gbc.setState(0x648, 0xcb52, 0x1b50, 0x91d8, 0xd2c1, 0x5fa4, 0x0, 0x0);
        gbc.writeMem(0x648, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcb52, gbc.sp());
        EXPECT(0x64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0220
        gbc.setState(0x499f, 0x2cc, 0xdff0, 0x69d1, 0xa28, 0x70e8, 0x0, 0x1);
        gbc.writeMem(0x499f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2cc, gbc.sp());
        EXPECT(0x49a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0221
        gbc.setState(0x5b17, 0x1b65, 0x8680, 0xb282, 0x857c, 0xb98c, 0x0, 0x1);
        gbc.writeMem(0x5b17, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x1b65, gbc.sp());
        EXPECT(0x5b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0222
        gbc.setState(0x7e7, 0x6cd3, 0xd7d0, 0xa962, 0xa7f5, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0x7e7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6cd3, gbc.sp());
        EXPECT(0x7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0223
        gbc.setState(0x69a1, 0x43f, 0xb9c0, 0x1726, 0x8518, 0xd8a0, 0x0, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x43f, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0224
        gbc.setState(0x4c0a, 0x4266, 0x5020, 0x8a0, 0xd52a, 0xe2c1, 0x1, 0x1);
        gbc.writeMem(0x4c0a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4266, gbc.sp());
        EXPECT(0x4c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0225
        gbc.setState(0x5715, 0x355d, 0xeb50, 0x910b, 0xbe2, 0xa87b, 0x1, 0x1);
        gbc.writeMem(0x5715, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x355d, gbc.sp());
        EXPECT(0x5717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0226
        gbc.setState(0x3849, 0xf329, 0x13c0, 0x4f0c, 0xaeda, 0x6a89, 0x0, 0x0);
        gbc.writeMem(0x3849, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf329, gbc.sp());
        EXPECT(0x384b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0227
        gbc.setState(0xe64f, 0xf610, 0x77e0, 0x2c90, 0xcc93, 0xeb61, 0x0, 0x1);
        gbc.writeMem(0xe64f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf610, gbc.sp());
        EXPECT(0xe651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe64f));
        EXPECT(0x44, gbc.readMem(0xe650));
        // CB 44 0228
        gbc.setState(0x210e, 0xe033, 0x3100, 0xf288, 0x1e7d, 0xb5eb, 0x0, 0x1);
        gbc.writeMem(0x210e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe033, gbc.sp());
        EXPECT(0x2110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0229
        gbc.setState(0x4726, 0xcbbb, 0xd5d0, 0x942b, 0x3022, 0x959b, 0x0, 0x0);
        gbc.writeMem(0x4726, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcbbb, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 022A
        gbc.setState(0x96ae, 0xdc17, 0x2ca0, 0x5a83, 0x3a31, 0xd40, 0x1, 0x0);
        gbc.writeMem(0x96ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ae));
        EXPECT(0x44, gbc.readMem(0x96af));
        // CB 44 022B
        gbc.setState(0x4d8e, 0xb75e, 0x8670, 0x5415, 0x6d27, 0x6256, 0x0, 0x0);
        gbc.writeMem(0x4d8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb75e, gbc.sp());
        EXPECT(0x4d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 022C
        gbc.setState(0x5723, 0x6b6d, 0x7cb0, 0x165a, 0xa143, 0x9a39, 0x0, 0x0);
        gbc.writeMem(0x5723, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6b6d, gbc.sp());
        EXPECT(0x5725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 022D
        gbc.setState(0xafd9, 0x73ed, 0xbb80, 0xd4d7, 0x9e62, 0xcb7e, 0x1, 0x1);
        gbc.writeMem(0xafd9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0xafdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafd9));
        EXPECT(0x44, gbc.readMem(0xafda));
        // CB 44 022E
        gbc.setState(0x61a1, 0xae3c, 0x5c20, 0x780d, 0x3c79, 0xe3ff, 0x1, 0x0);
        gbc.writeMem(0x61a1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae3c, gbc.sp());
        EXPECT(0x61a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 022F
        gbc.setState(0x958a, 0xd76d, 0x7550, 0x142c, 0x7ace, 0x3fb6, 0x1, 0x0);
        gbc.writeMem(0x958a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd76d, gbc.sp());
        EXPECT(0x958c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x958a));
        EXPECT(0x44, gbc.readMem(0x958b));
        // CB 44 0230
        gbc.setState(0xc8aa, 0x3ac3, 0x6710, 0xfe6d, 0xac98, 0xd84e, 0x1, 0x0);
        gbc.writeMem(0xc8aa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3ac3, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8aa));
        EXPECT(0x44, gbc.readMem(0xc8ab));
        // CB 44 0231
        gbc.setState(0x7373, 0x5bbc, 0xce70, 0xe0e4, 0xb551, 0x17d0, 0x0, 0x0);
        gbc.writeMem(0x7373, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5bbc, gbc.sp());
        EXPECT(0x7375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0232
        gbc.setState(0x1948, 0x963b, 0xdb80, 0x24c7, 0x8a65, 0x5e60, 0x0, 0x1);
        gbc.writeMem(0x1948, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x194a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0233
        gbc.setState(0xd18f, 0xd77c, 0x230, 0x6c54, 0x1bc6, 0x33e1, 0x0, 0x1);
        gbc.writeMem(0xd18f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0xd191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18f));
        EXPECT(0x44, gbc.readMem(0xd190));
        // CB 44 0234
        gbc.setState(0x459c, 0x885d, 0x9b00, 0xf5c8, 0xe661, 0x1898, 0x1, 0x1);
        gbc.writeMem(0x459c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0x459e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0235
        gbc.setState(0x7fdb, 0x9ccb, 0xb740, 0xc2b8, 0xa618, 0x9184, 0x0, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0x7fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0236
        gbc.setState(0xcd9a, 0xa6af, 0xdb70, 0x1d25, 0x4f8d, 0x24a4, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa6af, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9a));
        EXPECT(0x44, gbc.readMem(0xcd9b));
        // CB 44 0237
        gbc.setState(0x658e, 0x526f, 0xfc20, 0x6249, 0xde58, 0xfb1d, 0x1, 0x0);
        gbc.writeMem(0x658e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x526f, gbc.sp());
        EXPECT(0x6590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0238
        gbc.setState(0xde7a, 0x82f1, 0xc150, 0xd405, 0xcacc, 0xf51f, 0x0, 0x1);
        gbc.writeMem(0xde7a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x82f1, gbc.sp());
        EXPECT(0xde7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7a));
        EXPECT(0x44, gbc.readMem(0xde7b));
        // CB 44 0239
        gbc.setState(0xa0f9, 0x9a36, 0x1490, 0x6003, 0xe41e, 0x322e, 0x1, 0x0);
        gbc.writeMem(0xa0f9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0xa0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f9));
        EXPECT(0x44, gbc.readMem(0xa0fa));
        // CB 44 023A
        gbc.setState(0x143f, 0x3833, 0xd950, 0x8b92, 0x691d, 0x8995, 0x0, 0x1);
        gbc.writeMem(0x143f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3833, gbc.sp());
        EXPECT(0x1441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 023B
        gbc.setState(0x9705, 0x2fd3, 0x4590, 0xe8ce, 0x4190, 0x8169, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2fd3, gbc.sp());
        EXPECT(0x9707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9705));
        EXPECT(0x44, gbc.readMem(0x9706));
        // CB 44 023C
        gbc.setState(0x7719, 0xfeac, 0x6a50, 0x70d6, 0x869b, 0xb8a0, 0x0, 0x1);
        gbc.writeMem(0x7719, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfeac, gbc.sp());
        EXPECT(0x771b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 023D
        gbc.setState(0x7882, 0x990c, 0x1db0, 0xdf80, 0xe151, 0x4e26, 0x0, 0x0);
        gbc.writeMem(0x7882, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x990c, gbc.sp());
        EXPECT(0x7884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 023E
        gbc.setState(0xf30, 0xae57, 0x94e0, 0xc712, 0x9ffa, 0x4732, 0x0, 0x0);
        gbc.writeMem(0xf30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0xf32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 023F
        gbc.setState(0x45f3, 0x7b02, 0xdaa0, 0xc0bf, 0xcaa1, 0xa0a3, 0x0, 0x0);
        gbc.writeMem(0x45f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7b02, gbc.sp());
        EXPECT(0x45f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0240
        gbc.setState(0xbd5e, 0x4351, 0xc390, 0xf1a, 0x3cfd, 0xb62d, 0x0, 0x1);
        gbc.writeMem(0xbd5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4351, gbc.sp());
        EXPECT(0xbd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5e));
        EXPECT(0x44, gbc.readMem(0xbd5f));
        // CB 44 0241
        gbc.setState(0x4876, 0x162d, 0xe1b0, 0xb8f3, 0x6aa4, 0x3960, 0x1, 0x1);
        gbc.writeMem(0x4876, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x162d, gbc.sp());
        EXPECT(0x4878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0242
        gbc.setState(0xb15b, 0x1c4a, 0xf7d0, 0x6eba, 0xd163, 0x294a, 0x1, 0x0);
        gbc.writeMem(0xb15b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0xb15d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15b));
        EXPECT(0x44, gbc.readMem(0xb15c));
        // CB 44 0243
        gbc.setState(0x1667, 0x338b, 0xab80, 0x5ad7, 0xdcbc, 0x1e88, 0x0, 0x1);
        gbc.writeMem(0x1667, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x338b, gbc.sp());
        EXPECT(0x1669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0244
        gbc.setState(0xf5e, 0x67a2, 0x4090, 0x3a1, 0xbc5e, 0x53ae, 0x1, 0x0);
        gbc.writeMem(0xf5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0xf60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0246
        gbc.setState(0xa4ea, 0x6b19, 0xf10, 0x3be7, 0xf0d0, 0x29db, 0x1, 0x0);
        gbc.writeMem(0xa4ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0xa4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ea));
        EXPECT(0x44, gbc.readMem(0xa4eb));
        // CB 44 0247
        gbc.setState(0xa594, 0x8585, 0xa6b0, 0x3c5f, 0x6304, 0xc9d8, 0x0, 0x0);
        gbc.writeMem(0xa594, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8585, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa594));
        EXPECT(0x44, gbc.readMem(0xa595));
        // CB 44 0248
        gbc.setState(0xe1ac, 0x4102, 0x5900, 0x96cc, 0x35fb, 0x904e, 0x1, 0x0);
        gbc.writeMem(0xe1ac, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4102, gbc.sp());
        EXPECT(0xe1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ac));
        EXPECT(0x44, gbc.readMem(0xe1ad));
        // CB 44 0249
        gbc.setState(0xb98, 0xb711, 0xae20, 0xd0f4, 0xc7f2, 0xa862, 0x1, 0x0);
        gbc.writeMem(0xb98, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb711, gbc.sp());
        EXPECT(0xb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 024A
        gbc.setState(0x1b8, 0xddd7, 0x4640, 0x6b9b, 0x21e5, 0x91b5, 0x1, 0x1);
        gbc.writeMem(0x1b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xddd7, gbc.sp());
        EXPECT(0x1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 024B
        gbc.setState(0xeb0, 0xe674, 0x8100, 0x9e40, 0x260a, 0xe8d7, 0x1, 0x1);
        gbc.writeMem(0xeb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe674, gbc.sp());
        EXPECT(0xeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 024C
        gbc.setState(0xe6e3, 0xe7a7, 0xc990, 0x3f1d, 0x8690, 0x175c, 0x0, 0x1);
        gbc.writeMem(0xe6e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe7a7, gbc.sp());
        EXPECT(0xe6e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e3));
        EXPECT(0x44, gbc.readMem(0xe6e4));
        // CB 44 024D
        gbc.setState(0x4645, 0xbfdb, 0xe120, 0xd96f, 0x521a, 0xaea2, 0x1, 0x1);
        gbc.writeMem(0x4645, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbfdb, gbc.sp());
        EXPECT(0x4647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 024E
        gbc.setState(0xb22b, 0xd7b2, 0xdb50, 0xa7ce, 0x437c, 0x8496, 0x0, 0x0);
        gbc.writeMem(0xb22b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0xb22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22b));
        EXPECT(0x44, gbc.readMem(0xb22c));
        // CB 44 024F
        gbc.setState(0x9f7b, 0xe7bd, 0x4190, 0x4aea, 0x708e, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x9f7b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe7bd, gbc.sp());
        EXPECT(0x9f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f7b));
        EXPECT(0x44, gbc.readMem(0x9f7c));
        // CB 44 0251
        gbc.setState(0xe652, 0x8179, 0x5750, 0x7574, 0xa3c5, 0x4959, 0x1, 0x0);
        gbc.writeMem(0xe652, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8179, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe652));
        EXPECT(0x44, gbc.readMem(0xe653));
        // CB 44 0252
        gbc.setState(0x3fb0, 0xc7bd, 0xea40, 0x8a26, 0x39b8, 0xb121, 0x0, 0x0);
        gbc.writeMem(0x3fb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc7bd, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0254
        gbc.setState(0x6656, 0x17bd, 0x8790, 0x261f, 0x7dbf, 0x5053, 0x1, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x17bd, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0255
        gbc.setState(0xe990, 0x69e, 0xf210, 0x8358, 0x3708, 0xdb4b, 0x1, 0x1);
        gbc.writeMem(0xe990, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x69e, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe990));
        EXPECT(0x44, gbc.readMem(0xe991));
        // CB 44 0256
        gbc.setState(0xc701, 0xcd2c, 0x5360, 0xde60, 0x14e0, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0xc701, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcd2c, gbc.sp());
        EXPECT(0xc703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc701));
        EXPECT(0x44, gbc.readMem(0xc702));
        // CB 44 0257
        gbc.setState(0x2a4d, 0xfbf4, 0x350, 0xa72, 0xd688, 0xbdf7, 0x1, 0x0);
        gbc.writeMem(0x2a4d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xfbf4, gbc.sp());
        EXPECT(0x2a4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0259
        gbc.setState(0x2e18, 0x60f9, 0x37d0, 0xf9a5, 0x7388, 0x568e, 0x0, 0x1);
        gbc.writeMem(0x2e18, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x60f9, gbc.sp());
        EXPECT(0x2e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 025A
        gbc.setState(0x6a4, 0x3181, 0xd8c0, 0xe852, 0x63ff, 0x9cba, 0x1, 0x1);
        gbc.writeMem(0x6a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x6a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 025B
        gbc.setState(0x8a4a, 0x3a4e, 0xb4f0, 0x39fb, 0xa09e, 0x2c0a, 0x1, 0x1);
        gbc.writeMem(0x8a4a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3a4e, gbc.sp());
        EXPECT(0x8a4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4a));
        EXPECT(0x44, gbc.readMem(0x8a4b));
        // CB 44 025C
        gbc.setState(0x226d, 0x850d, 0xc890, 0x42ac, 0xd9ec, 0xa19b, 0x1, 0x1);
        gbc.writeMem(0x226d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x226f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 025D
        gbc.setState(0x209e, 0xbe9e, 0xc7d0, 0xd749, 0x12e5, 0xd14d, 0x1, 0x0);
        gbc.writeMem(0x209e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbe9e, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 025E
        gbc.setState(0x2fab, 0xe505, 0xd6e0, 0x2cb5, 0x63d, 0x9b52, 0x0, 0x0);
        gbc.writeMem(0x2fab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe505, gbc.sp());
        EXPECT(0x2fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 025F
        gbc.setState(0x66fe, 0xdf8c, 0x7850, 0x86ac, 0x2aeb, 0x5fa3, 0x1, 0x0);
        gbc.writeMem(0x66fe, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0x6700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0260
        gbc.setState(0xa116, 0xb7c6, 0xbb0, 0x90a3, 0xd1eb, 0xa778, 0x1, 0x0);
        gbc.writeMem(0xa116, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0xa118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa116));
        EXPECT(0x44, gbc.readMem(0xa117));
        // CB 44 0261
        gbc.setState(0x8944, 0x2e60, 0xad90, 0x806a, 0x470c, 0x8385, 0x0, 0x1);
        gbc.writeMem(0x8944, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2e60, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8944));
        EXPECT(0x44, gbc.readMem(0x8945));
        // CB 44 0262
        gbc.setState(0x6d9d, 0xbd1a, 0x6f40, 0xd1e0, 0xfc5, 0x887d, 0x1, 0x1);
        gbc.writeMem(0x6d9d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xbd1a, gbc.sp());
        EXPECT(0x6d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0263
        gbc.setState(0x8db0, 0x7b41, 0x5870, 0x8700, 0xf7b9, 0xef8a, 0x0, 0x1);
        gbc.writeMem(0x8db0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7b41, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db0));
        EXPECT(0x44, gbc.readMem(0x8db1));
        // CB 44 0264
        gbc.setState(0x7be0, 0xa898, 0xdae0, 0xff82, 0xc67a, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa898, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0265
        gbc.setState(0x1eae, 0x4f4b, 0x120, 0x8e92, 0x9d08, 0x71fd, 0x1, 0x1);
        gbc.writeMem(0x1eae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4f4b, gbc.sp());
        EXPECT(0x1eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0266
        gbc.setState(0x2a45, 0xc424, 0x77d0, 0x3dea, 0xff96, 0xccb, 0x0, 0x1);
        gbc.writeMem(0x2a45, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0x2a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0267
        gbc.setState(0x6f91, 0x3f03, 0xd80, 0xd8ae, 0x8ca0, 0xd90d, 0x0, 0x1);
        gbc.writeMem(0x6f91, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0x6f93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0268
        gbc.setState(0xb0, 0xaf09, 0xb360, 0x73cc, 0xcb9d, 0x5f04, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaf09, gbc.sp());
        EXPECT(0xb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0269
        gbc.setState(0x6768, 0xb1e5, 0xd460, 0x7aff, 0x18d4, 0x2543, 0x0, 0x0);
        gbc.writeMem(0x6768, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb1e5, gbc.sp());
        EXPECT(0x676a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 026A
        gbc.setState(0x644b, 0xe5da, 0x4fc0, 0x464a, 0xe4c6, 0x4a0a, 0x0, 0x0);
        gbc.writeMem(0x644b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 026B
        gbc.setState(0xce53, 0x1580, 0x7cb0, 0x97ba, 0x5fb2, 0x5aad, 0x0, 0x0);
        gbc.writeMem(0xce53, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xce55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce53));
        EXPECT(0x44, gbc.readMem(0xce54));
        // CB 44 026C
        gbc.setState(0xb1de, 0x720e, 0xc890, 0x7502, 0x1566, 0x965c, 0x0, 0x1);
        gbc.writeMem(0xb1de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x720e, gbc.sp());
        EXPECT(0xb1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1de));
        EXPECT(0x44, gbc.readMem(0xb1df));
        // CB 44 026D
        gbc.setState(0x1853, 0xa477, 0xfb00, 0x714c, 0xbff0, 0xf66, 0x1, 0x1);
        gbc.writeMem(0x1853, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0x1855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 026E
        gbc.setState(0xe152, 0x37b1, 0x9cd0, 0xd239, 0xae9, 0xab1c, 0x0, 0x1);
        gbc.writeMem(0xe152, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x37b1, gbc.sp());
        EXPECT(0xe154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe152));
        EXPECT(0x44, gbc.readMem(0xe153));
        // CB 44 026F
        gbc.setState(0x4643, 0xd1a, 0x2740, 0xc018, 0x1802, 0x2bb0, 0x1, 0x0);
        gbc.writeMem(0x4643, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd1a, gbc.sp());
        EXPECT(0x4645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0270
        gbc.setState(0x6428, 0x7c87, 0xd8e0, 0xe05f, 0x3927, 0xbb3d, 0x1, 0x0);
        gbc.writeMem(0x6428, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7c87, gbc.sp());
        EXPECT(0x642a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0271
        gbc.setState(0x6b90, 0x1c1e, 0x7360, 0x370f, 0xb656, 0x8ca, 0x0, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1c1e, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0272
        gbc.setState(0x909a, 0x6df7, 0x24d0, 0x5f8b, 0xcf79, 0x7fac, 0x0, 0x1);
        gbc.writeMem(0x909a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6df7, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909a));
        EXPECT(0x44, gbc.readMem(0x909b));
        // CB 44 0273
        gbc.setState(0xe0a9, 0xc8da, 0x2530, 0x4e4c, 0x2bae, 0x7e0a, 0x1, 0x1);
        gbc.writeMem(0xe0a9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc8da, gbc.sp());
        EXPECT(0xe0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a9));
        EXPECT(0x44, gbc.readMem(0xe0aa));
        // CB 44 0274
        gbc.setState(0x4398, 0x4373, 0x4b10, 0xd95, 0xfe07, 0x10c3, 0x1, 0x0);
        gbc.writeMem(0x4398, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4373, gbc.sp());
        EXPECT(0x439a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0275
        gbc.setState(0xedd4, 0x6457, 0xc620, 0x9ab0, 0x924b, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0xedd4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x6457, gbc.sp());
        EXPECT(0xedd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd4));
        EXPECT(0x44, gbc.readMem(0xedd5));
        // CB 44 0276
        gbc.setState(0xbcba, 0x1d06, 0xc970, 0xd31c, 0xcad6, 0x80a2, 0x0, 0x1);
        gbc.writeMem(0xbcba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcba));
        EXPECT(0x44, gbc.readMem(0xbcbb));
        // CB 44 0277
        gbc.setState(0x2754, 0xa251, 0x7530, 0x5c83, 0xbdc7, 0xc3e0, 0x1, 0x1);
        gbc.writeMem(0x2754, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa251, gbc.sp());
        EXPECT(0x2756, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0279
        gbc.setState(0x8a40, 0x28f7, 0x1e60, 0x2e80, 0x67a8, 0x16b6, 0x1, 0x0);
        gbc.writeMem(0x8a40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x28f7, gbc.sp());
        EXPECT(0x8a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a40));
        EXPECT(0x44, gbc.readMem(0x8a41));
        // CB 44 027A
        gbc.setState(0x3059, 0x4157, 0x4270, 0xd9ad, 0x234e, 0x2370, 0x0, 0x0);
        gbc.writeMem(0x3059, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4157, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 027B
        gbc.setState(0x81cf, 0xd4f8, 0x8010, 0x7925, 0x6101, 0x256e, 0x0, 0x0);
        gbc.writeMem(0x81cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd4f8, gbc.sp());
        EXPECT(0x81d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81cf));
        EXPECT(0x44, gbc.readMem(0x81d0));
        // CB 44 027D
        gbc.setState(0x63c6, 0x7b64, 0xf720, 0xf916, 0x2e0a, 0x4cc, 0x1, 0x1);
        gbc.writeMem(0x63c6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7b64, gbc.sp());
        EXPECT(0x63c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 027E
        gbc.setState(0x9844, 0x6c10, 0x7be0, 0x1f11, 0x334b, 0x384f, 0x1, 0x0);
        gbc.writeMem(0x9844, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6c10, gbc.sp());
        EXPECT(0x9846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9844));
        EXPECT(0x44, gbc.readMem(0x9845));
        // CB 44 027F
        gbc.setState(0x6f02, 0xf754, 0x3590, 0x890d, 0x2c24, 0xab68, 0x0, 0x1);
        gbc.writeMem(0x6f02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf754, gbc.sp());
        EXPECT(0x6f04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0281
        gbc.setState(0x2b54, 0x5dc4, 0xf090, 0xd1ce, 0xabe9, 0x9abb, 0x0, 0x0);
        gbc.writeMem(0x2b54, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5dc4, gbc.sp());
        EXPECT(0x2b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0282
        gbc.setState(0xf59, 0xc986, 0x9800, 0x42a2, 0x91e7, 0x47c9, 0x1, 0x1);
        gbc.writeMem(0xf59, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc986, gbc.sp());
        EXPECT(0xf5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0283
        gbc.setState(0x43be, 0x83a1, 0x1280, 0x1c6, 0xfc5e, 0x5a33, 0x0, 0x0);
        gbc.writeMem(0x43be, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x83a1, gbc.sp());
        EXPECT(0x43c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0284
        gbc.setState(0x415b, 0x5108, 0x5be0, 0x3ef9, 0xa595, 0xc50, 0x1, 0x1);
        gbc.writeMem(0x415b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5108, gbc.sp());
        EXPECT(0x415d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0285
        gbc.setState(0xee5, 0x78cf, 0x59b0, 0x9e4e, 0xc1c3, 0x2c05, 0x1, 0x0);
        gbc.writeMem(0xee5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x78cf, gbc.sp());
        EXPECT(0xee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0286
        gbc.setState(0x6040, 0xe2c2, 0xcf20, 0xe784, 0xb4e2, 0x24f4, 0x1, 0x1);
        gbc.writeMem(0x6040, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0x6042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0287
        gbc.setState(0x1fdd, 0xef4c, 0x970, 0xbc83, 0xba6f, 0x1ae9, 0x1, 0x0);
        gbc.writeMem(0x1fdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x1fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0288
        gbc.setState(0xa377, 0xbc50, 0x50c0, 0xc321, 0xebda, 0xa9a, 0x0, 0x0);
        gbc.writeMem(0xa377, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbc50, gbc.sp());
        EXPECT(0xa379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa377));
        EXPECT(0x44, gbc.readMem(0xa378));
        // CB 44 0289
        gbc.setState(0x802e, 0xee9d, 0x63c0, 0xf18c, 0x6f5e, 0x3fc6, 0x1, 0x1);
        gbc.writeMem(0x802e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xee9d, gbc.sp());
        EXPECT(0x8030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802e));
        EXPECT(0x44, gbc.readMem(0x802f));
        // CB 44 028A
        gbc.setState(0xe581, 0xd026, 0x8390, 0x2fbb, 0x1b01, 0x9653, 0x1, 0x1);
        gbc.writeMem(0xe581, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd026, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe581));
        EXPECT(0x44, gbc.readMem(0xe582));
        // CB 44 028D
        gbc.setState(0x6e53, 0xd86, 0xd6d0, 0x4e9c, 0x8fe2, 0x1ea0, 0x1, 0x1);
        gbc.writeMem(0x6e53, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd86, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 028E
        gbc.setState(0x4b1a, 0xd9e5, 0xa980, 0xf779, 0x893f, 0xdabb, 0x0, 0x1);
        gbc.writeMem(0x4b1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0x4b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 028F
        gbc.setState(0x4c89, 0x35b2, 0xecd0, 0xd3ff, 0x35f, 0xd721, 0x0, 0x0);
        gbc.writeMem(0x4c89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x35b2, gbc.sp());
        EXPECT(0x4c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0290
        gbc.setState(0x6540, 0x13d4, 0x25b0, 0x4943, 0x2c68, 0x1f83, 0x1, 0x0);
        gbc.writeMem(0x6540, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13d4, gbc.sp());
        EXPECT(0x6542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0291
        gbc.setState(0xecc6, 0xfe15, 0x3e50, 0x4f9d, 0x2d70, 0xfeed, 0x0, 0x1);
        gbc.writeMem(0xecc6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfe15, gbc.sp());
        EXPECT(0xecc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc6));
        EXPECT(0x44, gbc.readMem(0xecc7));
        // CB 44 0292
        gbc.setState(0xe1d6, 0xdad1, 0x21d0, 0x2fce, 0x5e6a, 0x2eca, 0x0, 0x0);
        gbc.writeMem(0xe1d6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0xe1d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1d6));
        EXPECT(0x44, gbc.readMem(0xe1d7));
        // CB 44 0293
        gbc.setState(0xe300, 0x8f27, 0xf5d0, 0x3e2f, 0x9204, 0xfe92, 0x0, 0x1);
        gbc.writeMem(0xe300, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f27, gbc.sp());
        EXPECT(0xe302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe300));
        EXPECT(0x44, gbc.readMem(0xe301));
        // CB 44 0294
        gbc.setState(0x1c13, 0xf554, 0x5bc0, 0x566f, 0xe01, 0x6a79, 0x0, 0x0);
        gbc.writeMem(0x1c13, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0295
        gbc.setState(0x2912, 0x1dfe, 0x78f0, 0xd3bb, 0x1e44, 0xe877, 0x0, 0x0);
        gbc.writeMem(0x2912, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1dfe, gbc.sp());
        EXPECT(0x2914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0296
        gbc.setState(0x68ba, 0xb7d9, 0x88b0, 0x5b4b, 0x18b6, 0xacd, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb7d9, gbc.sp());
        EXPECT(0x68bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0297
        gbc.setState(0xb8d9, 0xa25, 0xad0, 0xecfd, 0xa39e, 0xec12, 0x1, 0x1);
        gbc.writeMem(0xb8d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xa25, gbc.sp());
        EXPECT(0xb8db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d9));
        EXPECT(0x44, gbc.readMem(0xb8da));
        // CB 44 0298
        gbc.setState(0x1243, 0xd7bc, 0xbb20, 0x9e19, 0x86fb, 0xabc4, 0x0, 0x0);
        gbc.writeMem(0x1243, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x1245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0299
        gbc.setState(0xc6e3, 0xfbd1, 0x9c30, 0x2df, 0x4c29, 0xb3b, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfbd1, gbc.sp());
        EXPECT(0xc6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e3));
        EXPECT(0x44, gbc.readMem(0xc6e4));
        // CB 44 029A
        gbc.setState(0xa1f, 0x66a1, 0xe650, 0xffb2, 0x3fb7, 0x35d1, 0x1, 0x0);
        gbc.writeMem(0xa1f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x66a1, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 029C
        gbc.setState(0x8c40, 0x18ec, 0xc020, 0xd831, 0xd709, 0xebe5, 0x1, 0x0);
        gbc.writeMem(0x8c40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x8c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c40));
        EXPECT(0x44, gbc.readMem(0x8c41));
        // CB 44 029D
        gbc.setState(0x70e6, 0x8ef6, 0xb310, 0xa73f, 0x8ca4, 0xb23c, 0x0, 0x0);
        gbc.writeMem(0x70e6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8ef6, gbc.sp());
        EXPECT(0x70e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 029E
        gbc.setState(0x54a8, 0xf58, 0xfcd0, 0x5b4e, 0x757a, 0xf49d, 0x0, 0x1);
        gbc.writeMem(0x54a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0x54aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 029F
        gbc.setState(0x40d7, 0xb35e, 0x6ef0, 0x36c9, 0x1a0c, 0xa948, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb35e, gbc.sp());
        EXPECT(0x40d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02A0
        gbc.setState(0x38ec, 0xb2e5, 0xb590, 0x4296, 0x728f, 0xed11, 0x1, 0x1);
        gbc.writeMem(0x38ec, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb2e5, gbc.sp());
        EXPECT(0x38ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02A1
        gbc.setState(0xb0d2, 0x3e67, 0x8a80, 0xa427, 0x3ba8, 0x7382, 0x1, 0x0);
        gbc.writeMem(0xb0d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3e67, gbc.sp());
        EXPECT(0xb0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d2));
        EXPECT(0x44, gbc.readMem(0xb0d3));
        // CB 44 02A2
        gbc.setState(0xdea0, 0x19ff, 0xe910, 0x6280, 0x1c05, 0x61e0, 0x1, 0x1);
        gbc.writeMem(0xdea0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x19ff, gbc.sp());
        EXPECT(0xdea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea0));
        EXPECT(0x44, gbc.readMem(0xdea1));
        // CB 44 02A3
        gbc.setState(0xb3e3, 0x2b21, 0xabd0, 0xda4c, 0xb924, 0xfc25, 0x1, 0x0);
        gbc.writeMem(0xb3e3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2b21, gbc.sp());
        EXPECT(0xb3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e3));
        EXPECT(0x44, gbc.readMem(0xb3e4));
        // CB 44 02A4
        gbc.setState(0x5d67, 0x7042, 0x4460, 0x961e, 0xb0a1, 0xbf27, 0x1, 0x0);
        gbc.writeMem(0x5d67, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7042, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02A5
        gbc.setState(0x3d89, 0xb7cc, 0x6340, 0xe40, 0x4bb, 0x208c, 0x0, 0x1);
        gbc.writeMem(0x3d89, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb7cc, gbc.sp());
        EXPECT(0x3d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02A6
        gbc.setState(0xa1a0, 0x7f85, 0xd190, 0xd637, 0xcd05, 0x953c, 0x1, 0x1);
        gbc.writeMem(0xa1a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7f85, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a0));
        EXPECT(0x44, gbc.readMem(0xa1a1));
        // CB 44 02A7
        gbc.setState(0xa2e6, 0x8e10, 0x2e60, 0x6633, 0x51cc, 0xccc4, 0x1, 0x1);
        gbc.writeMem(0xa2e6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0xa2e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e6));
        EXPECT(0x44, gbc.readMem(0xa2e7));
        // CB 44 02A8
        gbc.setState(0x833c, 0x18ec, 0xbcf0, 0x3a28, 0x5157, 0xaf7d, 0x1, 0x0);
        gbc.writeMem(0x833c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x18ec, gbc.sp());
        EXPECT(0x833e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833c));
        EXPECT(0x44, gbc.readMem(0x833d));
        // CB 44 02A9
        gbc.setState(0x8db3, 0xb4cc, 0x6ba0, 0x92fd, 0x354, 0xa933, 0x0, 0x0);
        gbc.writeMem(0x8db3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb4cc, gbc.sp());
        EXPECT(0x8db5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db3));
        EXPECT(0x44, gbc.readMem(0x8db4));
        // CB 44 02AA
        gbc.setState(0x5a2f, 0x29c9, 0x8d50, 0xe291, 0x1abd, 0x633e, 0x1, 0x0);
        gbc.writeMem(0x5a2f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x29c9, gbc.sp());
        EXPECT(0x5a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02AB
        gbc.setState(0x3e8d, 0xf682, 0x4b20, 0x6bfb, 0x36d9, 0xb05d, 0x1, 0x1);
        gbc.writeMem(0x3e8d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf682, gbc.sp());
        EXPECT(0x3e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02AC
        gbc.setState(0x6a71, 0xa777, 0xeb20, 0xef34, 0xe9e6, 0x6145, 0x0, 0x1);
        gbc.writeMem(0x6a71, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa777, gbc.sp());
        EXPECT(0x6a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02AD
        gbc.setState(0xc32d, 0x7e26, 0xe4a0, 0xa2c1, 0xd7a9, 0x50ec, 0x0, 0x1);
        gbc.writeMem(0xc32d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0xc32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc32d));
        EXPECT(0x44, gbc.readMem(0xc32e));
        // CB 44 02AE
        gbc.setState(0x125f, 0x2e22, 0xde20, 0xb1ff, 0xf56, 0xd81e, 0x1, 0x0);
        gbc.writeMem(0x125f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2e22, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02AF
        gbc.setState(0x7955, 0xa8b9, 0x9390, 0xf5a5, 0x3022, 0xc51e, 0x0, 0x0);
        gbc.writeMem(0x7955, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa8b9, gbc.sp());
        EXPECT(0x7957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02B0
        gbc.setState(0x6ea9, 0xc72, 0x59d0, 0x1163, 0x4764, 0xa1e2, 0x0, 0x0);
        gbc.writeMem(0x6ea9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x6eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02B1
        gbc.setState(0xeb56, 0x23c5, 0x1370, 0x12f8, 0x2c8c, 0xadfb, 0x0, 0x0);
        gbc.writeMem(0xeb56, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x23c5, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb56));
        EXPECT(0x44, gbc.readMem(0xeb57));
        // CB 44 02B2
        gbc.setState(0x9a48, 0xb6c0, 0xa160, 0x3989, 0x6ad3, 0x7597, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x9a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a48));
        EXPECT(0x44, gbc.readMem(0x9a49));
        // CB 44 02B3
        gbc.setState(0x1cb6, 0xfc2, 0x1080, 0x1ce, 0xfe3c, 0x3ca, 0x1, 0x0);
        gbc.writeMem(0x1cb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0x1cb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02B4
        gbc.setState(0x6557, 0x9008, 0x280, 0xfc62, 0xbb33, 0x3cc8, 0x0, 0x1);
        gbc.writeMem(0x6557, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9008, gbc.sp());
        EXPECT(0x6559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02B5
        gbc.setState(0x7c51, 0x3759, 0xf3f0, 0x2db4, 0xc468, 0xf01f, 0x1, 0x1);
        gbc.writeMem(0x7c51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3759, gbc.sp());
        EXPECT(0x7c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02B6
        gbc.setState(0xa472, 0x18e6, 0xb9c0, 0xb610, 0x533d, 0xd365, 0x1, 0x1);
        gbc.writeMem(0xa472, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x18e6, gbc.sp());
        EXPECT(0xa474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa472));
        EXPECT(0x44, gbc.readMem(0xa473));
        // CB 44 02B7
        gbc.setState(0xcd8b, 0x2d15, 0xa4c0, 0xf85a, 0x556e, 0xa763, 0x0, 0x0);
        gbc.writeMem(0xcd8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0xcd8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd8b));
        EXPECT(0x44, gbc.readMem(0xcd8c));
        // CB 44 02B8
        gbc.setState(0x6635, 0xa36e, 0x40e0, 0x91e7, 0xff35, 0x1a32, 0x0, 0x0);
        gbc.writeMem(0x6635, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0x6637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02B9
        gbc.setState(0xba2b, 0xdb17, 0x4910, 0xf7de, 0xa5a0, 0xa14f, 0x0, 0x1);
        gbc.writeMem(0xba2b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdb17, gbc.sp());
        EXPECT(0xba2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2b));
        EXPECT(0x44, gbc.readMem(0xba2c));
        // CB 44 02BA
        gbc.setState(0x4045, 0x1bdc, 0x42a0, 0x8cea, 0x9087, 0x156d, 0x1, 0x1);
        gbc.writeMem(0x4045, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1bdc, gbc.sp());
        EXPECT(0x4047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02BB
        gbc.setState(0xa80a, 0x1d61, 0x9820, 0x8549, 0x5c7a, 0xdb40, 0x1, 0x1);
        gbc.writeMem(0xa80a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1d61, gbc.sp());
        EXPECT(0xa80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80a));
        EXPECT(0x44, gbc.readMem(0xa80b));
        // CB 44 02BC
        gbc.setState(0x3e20, 0xfa1f, 0x9a40, 0xf546, 0x17ea, 0x2d2b, 0x0, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xfa1f, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02BD
        gbc.setState(0x246f, 0xa752, 0xaa50, 0x57a1, 0x769a, 0x6239, 0x1, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa752, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02BE
        gbc.setState(0x5c8c, 0x3e7c, 0x3140, 0x8155, 0x3d07, 0xf870, 0x1, 0x0);
        gbc.writeMem(0x5c8c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3e7c, gbc.sp());
        EXPECT(0x5c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02BF
        gbc.setState(0xd5c1, 0x634e, 0x3ca0, 0x18b6, 0xc513, 0x4caa, 0x0, 0x1);
        gbc.writeMem(0xd5c1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x634e, gbc.sp());
        EXPECT(0xd5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c1));
        EXPECT(0x44, gbc.readMem(0xd5c2));
        // CB 44 02C0
        gbc.setState(0x9248, 0xb7c8, 0xab80, 0x7c56, 0xbd61, 0x6ade, 0x0, 0x1);
        gbc.writeMem(0x9248, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb7c8, gbc.sp());
        EXPECT(0x924a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9248));
        EXPECT(0x44, gbc.readMem(0x9249));
        // CB 44 02C1
        gbc.setState(0xed6e, 0xef7a, 0x11e0, 0x688f, 0x6011, 0x32ad, 0x1, 0x0);
        gbc.writeMem(0xed6e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xef7a, gbc.sp());
        EXPECT(0xed70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6e));
        EXPECT(0x44, gbc.readMem(0xed6f));
        // CB 44 02C2
        gbc.setState(0x32b5, 0x3f8, 0x56b0, 0x7a40, 0xdf1d, 0xafa3, 0x1, 0x1);
        gbc.writeMem(0x32b5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3f8, gbc.sp());
        EXPECT(0x32b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02C3
        gbc.setState(0x56c0, 0x1054, 0x6a60, 0xb743, 0xb0c7, 0x461e, 0x0, 0x1);
        gbc.writeMem(0x56c0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1054, gbc.sp());
        EXPECT(0x56c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02C4
        gbc.setState(0x5335, 0x7bc9, 0x9470, 0xd8a, 0x251b, 0x3f5, 0x1, 0x0);
        gbc.writeMem(0x5335, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7bc9, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02C5
        gbc.setState(0xb7d3, 0x18c5, 0xc440, 0x4cae, 0x7ae0, 0xc9c0, 0x0, 0x1);
        gbc.writeMem(0xb7d3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x18c5, gbc.sp());
        EXPECT(0xb7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d3));
        EXPECT(0x44, gbc.readMem(0xb7d4));
        // CB 44 02C6
        gbc.setState(0x7b41, 0xb642, 0x1d90, 0x850c, 0x310a, 0x274, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb642, gbc.sp());
        EXPECT(0x7b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02C7
        gbc.setState(0x1ed6, 0x8c74, 0x1c40, 0x31c, 0xee9c, 0x972e, 0x1, 0x1);
        gbc.writeMem(0x1ed6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x8c74, gbc.sp());
        EXPECT(0x1ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02C8
        gbc.setState(0x6fab, 0x3d7c, 0xe2b0, 0xae83, 0xb4ea, 0xa9c0, 0x0, 0x0);
        gbc.writeMem(0x6fab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3d7c, gbc.sp());
        EXPECT(0x6fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02C9
        gbc.setState(0x5edb, 0xe208, 0x25d0, 0xf4d, 0xd258, 0x1b48, 0x1, 0x1);
        gbc.writeMem(0x5edb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe208, gbc.sp());
        EXPECT(0x5edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02CA
        gbc.setState(0x2b02, 0xdc42, 0x6dc0, 0x7ee8, 0xfd18, 0xc721, 0x1, 0x1);
        gbc.writeMem(0x2b02, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdc42, gbc.sp());
        EXPECT(0x2b04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02CB
        gbc.setState(0x61cf, 0xacf9, 0xc900, 0x56f7, 0x86c0, 0xf861, 0x1, 0x0);
        gbc.writeMem(0x61cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xacf9, gbc.sp());
        EXPECT(0x61d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02CC
        gbc.setState(0x733e, 0xf24, 0x5620, 0x669a, 0xa4fa, 0xd528, 0x1, 0x1);
        gbc.writeMem(0x733e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf24, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02CD
        gbc.setState(0x439e, 0xa54e, 0x8fe0, 0xce72, 0xe433, 0xe0e2, 0x1, 0x1);
        gbc.writeMem(0x439e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0x43a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02CE
        gbc.setState(0x1f33, 0x5ca8, 0xf9b0, 0xa3aa, 0xd4db, 0x9f71, 0x1, 0x1);
        gbc.writeMem(0x1f33, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5ca8, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02CF
        gbc.setState(0x46ce, 0x5521, 0x9600, 0xede5, 0x96ba, 0x362c, 0x0, 0x1);
        gbc.writeMem(0x46ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5521, gbc.sp());
        EXPECT(0x46d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02D0
        gbc.setState(0xde59, 0x7bc5, 0xa2f0, 0xc94c, 0x6aea, 0xa2b6, 0x1, 0x0);
        gbc.writeMem(0xde59, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7bc5, gbc.sp());
        EXPECT(0xde5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde59));
        EXPECT(0x44, gbc.readMem(0xde5a));
        // CB 44 02D1
        gbc.setState(0xb1ce, 0x261c, 0x2e50, 0x1c57, 0x1caa, 0x41f4, 0x0, 0x1);
        gbc.writeMem(0xb1ce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x261c, gbc.sp());
        EXPECT(0xb1d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ce));
        EXPECT(0x44, gbc.readMem(0xb1cf));
        // CB 44 02D2
        gbc.setState(0x9145, 0x702b, 0x9280, 0xdde0, 0xc2e5, 0xfc49, 0x1, 0x1);
        gbc.writeMem(0x9145, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x702b, gbc.sp());
        EXPECT(0x9147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9145));
        EXPECT(0x44, gbc.readMem(0x9146));
        // CB 44 02D3
        gbc.setState(0x57f8, 0x2be9, 0xa270, 0x63d2, 0x1b74, 0xd11d, 0x0, 0x1);
        gbc.writeMem(0x57f8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0x57fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02D4
        gbc.setState(0xee84, 0x928d, 0xde90, 0x9186, 0xc350, 0xffdf, 0x1, 0x0);
        gbc.writeMem(0xee84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0xee86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee84));
        EXPECT(0x44, gbc.readMem(0xee85));
        // CB 44 02D6
        gbc.setState(0x13e2, 0xa654, 0x90c0, 0xf264, 0x2b9, 0x3a38, 0x0, 0x1);
        gbc.writeMem(0x13e2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa654, gbc.sp());
        EXPECT(0x13e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02D7
        gbc.setState(0xd1ff, 0x852b, 0x3c50, 0x21e, 0x4a46, 0xbde6, 0x1, 0x1);
        gbc.writeMem(0xd1ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x852b, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ff));
        EXPECT(0x44, gbc.readMem(0xd200));
        // CB 44 02D8
        gbc.setState(0x9906, 0x59ff, 0x4660, 0x153a, 0x897e, 0x75fd, 0x0, 0x1);
        gbc.writeMem(0x9906, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x59ff, gbc.sp());
        EXPECT(0x9908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9906));
        EXPECT(0x44, gbc.readMem(0x9907));
        // CB 44 02D9
        gbc.setState(0x9b5f, 0x149f, 0x7cb0, 0x1d37, 0x6572, 0xd1cb, 0x1, 0x0);
        gbc.writeMem(0x9b5f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x149f, gbc.sp());
        EXPECT(0x9b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5f));
        EXPECT(0x44, gbc.readMem(0x9b60));
        // CB 44 02DA
        gbc.setState(0xbf30, 0x89f2, 0xbc60, 0x3949, 0x529c, 0xaeee, 0x1, 0x0);
        gbc.writeMem(0xbf30, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x89f2, gbc.sp());
        EXPECT(0xbf32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf30));
        EXPECT(0x44, gbc.readMem(0xbf31));
        // CB 44 02DB
        gbc.setState(0x2dd1, 0xeced, 0x3750, 0x61bc, 0xb44c, 0xdca9, 0x0, 0x1);
        gbc.writeMem(0x2dd1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xeced, gbc.sp());
        EXPECT(0x2dd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02DC
        gbc.setState(0x9ce7, 0x32d9, 0x4390, 0x7fba, 0x7b4e, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x9ce7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x32d9, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce7));
        EXPECT(0x44, gbc.readMem(0x9ce8));
        // CB 44 02DD
        gbc.setState(0x445a, 0x2e7c, 0x3f60, 0xf349, 0xdc39, 0x564d, 0x1, 0x0);
        gbc.writeMem(0x445a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0x445c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02DE
        gbc.setState(0xaf6f, 0x6288, 0x2e20, 0xcc94, 0x66cc, 0x5b3c, 0x1, 0x1);
        gbc.writeMem(0xaf6f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6288, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6f));
        EXPECT(0x44, gbc.readMem(0xaf70));
        // CB 44 02DF
        gbc.setState(0xe24b, 0x957f, 0x4400, 0x67bd, 0xfed6, 0x554f, 0x0, 0x0);
        gbc.writeMem(0xe24b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x957f, gbc.sp());
        EXPECT(0xe24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24b));
        EXPECT(0x44, gbc.readMem(0xe24c));
        // CB 44 02E0
        gbc.setState(0x264c, 0xa7bf, 0x1e50, 0x6aec, 0x6447, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0x264c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa7bf, gbc.sp());
        EXPECT(0x264e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02E1
        gbc.setState(0xb72, 0x8b59, 0xbc10, 0x67d4, 0x84de, 0x35d5, 0x0, 0x1);
        gbc.writeMem(0xb72, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0xb74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02E2
        gbc.setState(0xa9d2, 0x3a37, 0x71d0, 0x78f5, 0xc9f7, 0xb681, 0x0, 0x0);
        gbc.writeMem(0xa9d2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3a37, gbc.sp());
        EXPECT(0xa9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d2));
        EXPECT(0x44, gbc.readMem(0xa9d3));
        // CB 44 02E3
        gbc.setState(0x744b, 0x8d71, 0x29b0, 0x1ba5, 0x1cc5, 0x1c1c, 0x1, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8d71, gbc.sp());
        EXPECT(0x744d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02E4
        gbc.setState(0xdd08, 0x152, 0x92b0, 0xae46, 0xb771, 0xcd6c, 0x1, 0x1);
        gbc.writeMem(0xdd08, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x152, gbc.sp());
        EXPECT(0xdd0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd08));
        EXPECT(0x44, gbc.readMem(0xdd09));
        // CB 44 02E5
        gbc.setState(0x8ce6, 0x5d9e, 0x2810, 0x5b1, 0x8df7, 0x58dc, 0x0, 0x0);
        gbc.writeMem(0x8ce6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d9e, gbc.sp());
        EXPECT(0x8ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce6));
        EXPECT(0x44, gbc.readMem(0x8ce7));
        // CB 44 02E6
        gbc.setState(0xe95c, 0xe488, 0x2b80, 0x62, 0xa160, 0x733b, 0x0, 0x0);
        gbc.writeMem(0xe95c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe488, gbc.sp());
        EXPECT(0xe95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95c));
        EXPECT(0x44, gbc.readMem(0xe95d));
        // CB 44 02E7
        gbc.setState(0x54f6, 0x266d, 0xb7d0, 0x1fa9, 0xb7fc, 0xd314, 0x0, 0x1);
        gbc.writeMem(0x54f6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x266d, gbc.sp());
        EXPECT(0x54f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02E8
        gbc.setState(0x529c, 0xd396, 0x8d20, 0xe79e, 0x8757, 0xb942, 0x0, 0x1);
        gbc.writeMem(0x529c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd396, gbc.sp());
        EXPECT(0x529e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02E9
        gbc.setState(0x6817, 0x3942, 0xa820, 0xbd6c, 0xb4b9, 0xfe79, 0x1, 0x1);
        gbc.writeMem(0x6817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3942, gbc.sp());
        EXPECT(0x6819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02EA
        gbc.setState(0x4df8, 0x188c, 0x97a0, 0xdb1c, 0xf7d3, 0x8faa, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x188c, gbc.sp());
        EXPECT(0x4dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02EB
        gbc.setState(0x3c8b, 0xe83f, 0x3370, 0xe467, 0xcc19, 0xbc6d, 0x1, 0x0);
        gbc.writeMem(0x3c8b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0x3c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02EC
        gbc.setState(0x8345, 0x1cdd, 0x9d50, 0x75fa, 0xe131, 0x2e16, 0x1, 0x1);
        gbc.writeMem(0x8345, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1cdd, gbc.sp());
        EXPECT(0x8347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8345));
        EXPECT(0x44, gbc.readMem(0x8346));
        // CB 44 02ED
        gbc.setState(0x52de, 0x104a, 0x3560, 0xe483, 0xfea5, 0xd09b, 0x1, 0x0);
        gbc.writeMem(0x52de, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x104a, gbc.sp());
        EXPECT(0x52e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02EE
        gbc.setState(0x25f, 0x9eb5, 0x6120, 0xd4d2, 0xd25d, 0x214c, 0x0, 0x1);
        gbc.writeMem(0x25f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9eb5, gbc.sp());
        EXPECT(0x261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02EF
        gbc.setState(0x746, 0xad69, 0x4560, 0x35b2, 0xff0d, 0x3512, 0x1, 0x1);
        gbc.writeMem(0x746, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xad69, gbc.sp());
        EXPECT(0x748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02F0
        gbc.setState(0x97ae, 0x8163, 0x7870, 0x6cd, 0x236, 0xc991, 0x1, 0x0);
        gbc.writeMem(0x97ae, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8163, gbc.sp());
        EXPECT(0x97b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ae));
        EXPECT(0x44, gbc.readMem(0x97af));
        // CB 44 02F1
        gbc.setState(0xa794, 0x8d22, 0x5b20, 0xe2a4, 0x4669, 0xe15a, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8d22, gbc.sp());
        EXPECT(0xa796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa794));
        EXPECT(0x44, gbc.readMem(0xa795));
        // CB 44 02F2
        gbc.setState(0xa8ff, 0x1d80, 0x4070, 0x7138, 0x87bc, 0xeae6, 0x0, 0x1);
        gbc.writeMem(0xa8ff, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d80, gbc.sp());
        EXPECT(0xa901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ff));
        EXPECT(0x44, gbc.readMem(0xa900));
        // CB 44 02F3
        gbc.setState(0xcff9, 0x1d6f, 0x4b50, 0x903f, 0x229d, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xcff9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1d6f, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff9));
        EXPECT(0x44, gbc.readMem(0xcffa));
        // CB 44 02F4
        gbc.setState(0xde93, 0x9547, 0xb890, 0x5839, 0xd22f, 0xf128, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xde95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde93));
        EXPECT(0x44, gbc.readMem(0xde94));
        // CB 44 02F5
        gbc.setState(0xe98d, 0xeedd, 0xde30, 0xc13c, 0x3e33, 0x5471, 0x1, 0x1);
        gbc.writeMem(0xe98d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0xe98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98d));
        EXPECT(0x44, gbc.readMem(0xe98e));
        // CB 44 02F6
        gbc.setState(0x8fb8, 0x8546, 0xc090, 0xe2ef, 0xac4c, 0xce66, 0x0, 0x0);
        gbc.writeMem(0x8fb8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8546, gbc.sp());
        EXPECT(0x8fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb8));
        EXPECT(0x44, gbc.readMem(0x8fb9));
        // CB 44 02F8
        gbc.setState(0x33cf, 0xacb9, 0xa1b0, 0x393f, 0xda35, 0x9866, 0x0, 0x0);
        gbc.writeMem(0x33cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xacb9, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02F9
        gbc.setState(0x4be3, 0x55c2, 0x7f30, 0x5f9b, 0x1144, 0x5841, 0x0, 0x1);
        gbc.writeMem(0x4be3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0x4be5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02FA
        gbc.setState(0x14d7, 0x3617, 0xbe00, 0xccaa, 0x4ac2, 0x5998, 0x0, 0x0);
        gbc.writeMem(0x14d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3617, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02FB
        gbc.setState(0x3d61, 0x8da9, 0x41c0, 0x334c, 0xbf26, 0x460a, 0x1, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8da9, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 02FC
        gbc.setState(0x89ea, 0x9347, 0x5bb0, 0xc748, 0xc61c, 0x59c2, 0x0, 0x1);
        gbc.writeMem(0x89ea, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9347, gbc.sp());
        EXPECT(0x89ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ea));
        EXPECT(0x44, gbc.readMem(0x89eb));
        // CB 44 02FD
        gbc.setState(0xe882, 0xb916, 0x7bd0, 0x6408, 0x722b, 0x4d0, 0x0, 0x1);
        gbc.writeMem(0xe882, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb916, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe882));
        EXPECT(0x44, gbc.readMem(0xe883));
        // CB 44 02FE
        gbc.setState(0x4777, 0x7ad2, 0xce30, 0x863f, 0xd532, 0x8bdb, 0x1, 0x1);
        gbc.writeMem(0x4777, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7ad2, gbc.sp());
        EXPECT(0x4779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 02FF
        gbc.setState(0x566f, 0x9fa5, 0x5920, 0x6e65, 0x9f6e, 0x3d12, 0x1, 0x0);
        gbc.writeMem(0x566f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9fa5, gbc.sp());
        EXPECT(0x5671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0300
        gbc.setState(0xa7c9, 0x88be, 0x3b00, 0x6c69, 0x3fd7, 0x92db, 0x1, 0x1);
        gbc.writeMem(0xa7c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x88be, gbc.sp());
        EXPECT(0xa7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7c9));
        EXPECT(0x44, gbc.readMem(0xa7ca));
        // CB 44 0301
        gbc.setState(0xefce, 0x2f3d, 0xe6e0, 0x3f76, 0x621c, 0xd1fd, 0x0, 0x0);
        gbc.writeMem(0xefce, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2f3d, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefce));
        EXPECT(0x44, gbc.readMem(0xefcf));
        // CB 44 0302
        gbc.setState(0x8018, 0x1a2e, 0xd420, 0xc7ec, 0x876c, 0x5fe6, 0x1, 0x1);
        gbc.writeMem(0x8018, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1a2e, gbc.sp());
        EXPECT(0x801a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8018));
        EXPECT(0x44, gbc.readMem(0x8019));
        // CB 44 0303
        gbc.setState(0xe5c4, 0xb723, 0xd9f0, 0x4cbf, 0xf8c, 0x4ae4, 0x1, 0x0);
        gbc.writeMem(0xe5c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb723, gbc.sp());
        EXPECT(0xe5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c4));
        EXPECT(0x44, gbc.readMem(0xe5c5));
        // CB 44 0304
        gbc.setState(0xf05, 0x7059, 0x8f70, 0xf40d, 0xd2d2, 0x193b, 0x1, 0x1);
        gbc.writeMem(0xf05, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7059, gbc.sp());
        EXPECT(0xf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0305
        gbc.setState(0x6abc, 0x4f3f, 0x61f0, 0x5983, 0x3360, 0x3c5, 0x0, 0x1);
        gbc.writeMem(0x6abc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x4f3f, gbc.sp());
        EXPECT(0x6abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0306
        gbc.setState(0x7fa1, 0x72a2, 0x2a20, 0x8018, 0xd9b1, 0x96d4, 0x1, 0x1);
        gbc.writeMem(0x7fa1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x72a2, gbc.sp());
        EXPECT(0x7fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0307
        gbc.setState(0x9bb5, 0x5d74, 0x9870, 0xff40, 0x5e9e, 0xae63, 0x0, 0x1);
        gbc.writeMem(0x9bb5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5d74, gbc.sp());
        EXPECT(0x9bb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb5));
        EXPECT(0x44, gbc.readMem(0x9bb6));
        // CB 44 0308
        gbc.setState(0x2e3e, 0xb829, 0xb6a0, 0xeb80, 0x78e6, 0x5514, 0x0, 0x0);
        gbc.writeMem(0x2e3e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb829, gbc.sp());
        EXPECT(0x2e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0309
        gbc.setState(0x5a43, 0xdda6, 0xe930, 0x5814, 0x26b7, 0x22f6, 0x0, 0x1);
        gbc.writeMem(0x5a43, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdda6, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 030A
        gbc.setState(0x7fdd, 0x3559, 0x3e50, 0x653a, 0x89ba, 0xd0f1, 0x0, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3559, gbc.sp());
        EXPECT(0x7fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 030B
        gbc.setState(0x47bb, 0x1c2d, 0x14a0, 0xf025, 0xd2d1, 0x5093, 0x1, 0x1);
        gbc.writeMem(0x47bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1c2d, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 030C
        gbc.setState(0x54c8, 0x1730, 0x8310, 0x76dc, 0xac37, 0xe2bb, 0x1, 0x0);
        gbc.writeMem(0x54c8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 030D
        gbc.setState(0x6485, 0xcf3f, 0x8940, 0x8f28, 0x8542, 0xb1a7, 0x0, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcf3f, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 030E
        gbc.setState(0x97b4, 0x10d8, 0xba40, 0x3e8d, 0x6fcf, 0xc6e3, 0x1, 0x1);
        gbc.writeMem(0x97b4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10d8, gbc.sp());
        EXPECT(0x97b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97b4));
        EXPECT(0x44, gbc.readMem(0x97b5));
        // CB 44 030F
        gbc.setState(0x6bc3, 0x4be5, 0xab30, 0x1701, 0x4660, 0x22ec, 0x1, 0x0);
        gbc.writeMem(0x6bc3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4be5, gbc.sp());
        EXPECT(0x6bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0310
        gbc.setState(0x2425, 0x146f, 0x99f0, 0xffd3, 0x1f39, 0x23e3, 0x0, 0x0);
        gbc.writeMem(0x2425, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x146f, gbc.sp());
        EXPECT(0x2427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0311
        gbc.setState(0x24bc, 0x9d80, 0xc680, 0x3958, 0xefe5, 0xfa77, 0x1, 0x1);
        gbc.writeMem(0x24bc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9d80, gbc.sp());
        EXPECT(0x24be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0312
        gbc.setState(0xaff3, 0xd1f9, 0xb9a0, 0x554f, 0xcf55, 0x2b60, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd1f9, gbc.sp());
        EXPECT(0xaff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff3));
        EXPECT(0x44, gbc.readMem(0xaff4));
        // CB 44 0313
        gbc.setState(0x776e, 0x5707, 0xf030, 0x3ed7, 0xbf76, 0x1a6f, 0x0, 0x1);
        gbc.writeMem(0x776e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5707, gbc.sp());
        EXPECT(0x7770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0314
        gbc.setState(0x5a40, 0x1a5, 0x6600, 0x2e94, 0x499e, 0xd415, 0x1, 0x1);
        gbc.writeMem(0x5a40, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0315
        gbc.setState(0x1519, 0x6624, 0xbaf0, 0x68fd, 0x742f, 0x239e, 0x1, 0x1);
        gbc.writeMem(0x1519, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6624, gbc.sp());
        EXPECT(0x151b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0316
        gbc.setState(0xa830, 0x81be, 0x6310, 0xd1ac, 0xc210, 0x9102, 0x0, 0x1);
        gbc.writeMem(0xa830, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81be, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa830));
        EXPECT(0x44, gbc.readMem(0xa831));
        // CB 44 0317
        gbc.setState(0x1b3c, 0x2415, 0x2400, 0xf55f, 0x29c1, 0x3205, 0x1, 0x1);
        gbc.writeMem(0x1b3c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2415, gbc.sp());
        EXPECT(0x1b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0318
        gbc.setState(0x9538, 0x92d4, 0xfad0, 0xd750, 0x5636, 0x5f0c, 0x1, 0x1);
        gbc.writeMem(0x9538, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x92d4, gbc.sp());
        EXPECT(0x953a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9538));
        EXPECT(0x44, gbc.readMem(0x9539));
        // CB 44 0319
        gbc.setState(0x6b32, 0x26e6, 0xe50, 0xf380, 0x4686, 0x4348, 0x1, 0x1);
        gbc.writeMem(0x6b32, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0x6b34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 031A
        gbc.setState(0x25a7, 0xb392, 0x2a60, 0x3568, 0xda64, 0x46f7, 0x0, 0x0);
        gbc.writeMem(0x25a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb392, gbc.sp());
        EXPECT(0x25a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 031B
        gbc.setState(0x5517, 0x4d4d, 0x72b0, 0x7a13, 0x3926, 0x497d, 0x0, 0x0);
        gbc.writeMem(0x5517, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4d4d, gbc.sp());
        EXPECT(0x5519, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 031C
        gbc.setState(0xbee0, 0x2ff4, 0xb5f0, 0x4bc4, 0xa27d, 0x5fbe, 0x0, 0x0);
        gbc.writeMem(0xbee0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2ff4, gbc.sp());
        EXPECT(0xbee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbee0));
        EXPECT(0x44, gbc.readMem(0xbee1));
        // CB 44 031D
        gbc.setState(0x73a0, 0x6059, 0xa140, 0x6035, 0xb7a5, 0x636a, 0x0, 0x0);
        gbc.writeMem(0x73a0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6059, gbc.sp());
        EXPECT(0x73a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 031E
        gbc.setState(0xb20f, 0xac4d, 0x4b60, 0xbf28, 0xd403, 0xb665, 0x0, 0x1);
        gbc.writeMem(0xb20f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0xb211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb20f));
        EXPECT(0x44, gbc.readMem(0xb210));
        // CB 44 031F
        gbc.setState(0xcdaa, 0x10e3, 0x3540, 0x5c71, 0xcff7, 0xe18e, 0x1, 0x0);
        gbc.writeMem(0xcdaa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaa));
        EXPECT(0x44, gbc.readMem(0xcdab));
        // CB 44 0320
        gbc.setState(0x197e, 0x5b73, 0x7ec0, 0x735b, 0x2b43, 0xea09, 0x0, 0x1);
        gbc.writeMem(0x197e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5b73, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0321
        gbc.setState(0x7e76, 0x9a1c, 0x3750, 0xf6a5, 0x7df4, 0x8db9, 0x1, 0x1);
        gbc.writeMem(0x7e76, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9a1c, gbc.sp());
        EXPECT(0x7e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0322
        gbc.setState(0x8b3f, 0x4327, 0xcde0, 0x367e, 0x7441, 0xaaa3, 0x1, 0x0);
        gbc.writeMem(0x8b3f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0x8b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3f));
        EXPECT(0x44, gbc.readMem(0x8b40));
        // CB 44 0323
        gbc.setState(0x5b83, 0x9604, 0x4130, 0xda7f, 0x34ef, 0xacc6, 0x1, 0x1);
        gbc.writeMem(0x5b83, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9604, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0324
        gbc.setState(0x3b09, 0x7798, 0x9d20, 0x3c7a, 0xf6b9, 0xe993, 0x1, 0x1);
        gbc.writeMem(0x3b09, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7798, gbc.sp());
        EXPECT(0x3b0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0325
        gbc.setState(0x2522, 0x2983, 0xc450, 0xc72e, 0xc70, 0xf460, 0x0, 0x0);
        gbc.writeMem(0x2522, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2983, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0326
        gbc.setState(0x1e9, 0xae69, 0xb6d0, 0xfcbf, 0xdc70, 0x8d96, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xae69, gbc.sp());
        EXPECT(0x1eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0327
        gbc.setState(0x3529, 0xe6c0, 0x8690, 0x221d, 0xa570, 0xf890, 0x0, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe6c0, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0328
        gbc.setState(0x15bd, 0x2036, 0x1de0, 0xb169, 0xb1da, 0x6e2f, 0x0, 0x0);
        gbc.writeMem(0x15bd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x2036, gbc.sp());
        EXPECT(0x15bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0329
        gbc.setState(0xd553, 0x40eb, 0x5590, 0x8c47, 0x885f, 0x1756, 0x1, 0x0);
        gbc.writeMem(0xd553, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x40eb, gbc.sp());
        EXPECT(0xd555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd553));
        EXPECT(0x44, gbc.readMem(0xd554));
        // CB 44 032A
        gbc.setState(0x1ebd, 0x150c, 0x4ad0, 0x7e87, 0x3c62, 0xb891, 0x1, 0x0);
        gbc.writeMem(0x1ebd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x150c, gbc.sp());
        EXPECT(0x1ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 032B
        gbc.setState(0x257a, 0x76c5, 0xc30, 0x91c6, 0xec3e, 0x189d, 0x0, 0x0);
        gbc.writeMem(0x257a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x76c5, gbc.sp());
        EXPECT(0x257c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 032C
        gbc.setState(0x47f2, 0x44c6, 0x1290, 0xde60, 0xad69, 0x5273, 0x0, 0x1);
        gbc.writeMem(0x47f2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x44c6, gbc.sp());
        EXPECT(0x47f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 032D
        gbc.setState(0x6f5e, 0x5b48, 0x6c50, 0xdc55, 0xc11f, 0x6684, 0x1, 0x0);
        gbc.writeMem(0x6f5e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5b48, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 032E
        gbc.setState(0x792e, 0xa2a, 0x5ed0, 0x2212, 0x6586, 0x910d, 0x0, 0x0);
        gbc.writeMem(0x792e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa2a, gbc.sp());
        EXPECT(0x7930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 032F
        gbc.setState(0xd7d9, 0xe8, 0x84d0, 0xd76b, 0xcd34, 0x8a8c, 0x0, 0x1);
        gbc.writeMem(0xd7d9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe8, gbc.sp());
        EXPECT(0xd7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d9));
        EXPECT(0x44, gbc.readMem(0xd7da));
        // CB 44 0330
        gbc.setState(0xb56a, 0x7f88, 0x4350, 0xa53a, 0x46e5, 0xdfe0, 0x1, 0x1);
        gbc.writeMem(0xb56a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7f88, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0x44, gbc.readMem(0xb56b));
        // CB 44 0331
        gbc.setState(0x4d5a, 0x381f, 0xc190, 0xb79f, 0x5885, 0xa7e3, 0x1, 0x1);
        gbc.writeMem(0x4d5a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x381f, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0332
        gbc.setState(0x1085, 0xfe64, 0x20e0, 0x9a83, 0x6244, 0xc1c3, 0x1, 0x1);
        gbc.writeMem(0x1085, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xfe64, gbc.sp());
        EXPECT(0x1087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0333
        gbc.setState(0xcdfb, 0x9809, 0xb5d0, 0x7a45, 0xbbb3, 0xa510, 0x0, 0x0);
        gbc.writeMem(0xcdfb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0xcdfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfb));
        EXPECT(0x44, gbc.readMem(0xcdfc));
        // CB 44 0334
        gbc.setState(0xea00, 0xa64a, 0xdf0, 0xd512, 0xfd3, 0xa4a2, 0x0, 0x0);
        gbc.writeMem(0xea00, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa64a, gbc.sp());
        EXPECT(0xea02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea00));
        EXPECT(0x44, gbc.readMem(0xea01));
        // CB 44 0335
        gbc.setState(0x8e, 0x7a38, 0x2cf0, 0xa1df, 0xa169, 0x3b2d, 0x0, 0x0);
        gbc.writeMem(0x8e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7a38, gbc.sp());
        EXPECT(0x90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0336
        gbc.setState(0x78ba, 0x666b, 0x6ca0, 0x1b53, 0x6b4c, 0x2d2, 0x1, 0x1);
        gbc.writeMem(0x78ba, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x666b, gbc.sp());
        EXPECT(0x78bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0337
        gbc.setState(0x463a, 0xd5f4, 0xd800, 0xa579, 0x52b7, 0x2210, 0x0, 0x1);
        gbc.writeMem(0x463a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd5f4, gbc.sp());
        EXPECT(0x463c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0338
        gbc.setState(0x2d84, 0x5cca, 0x7c00, 0x7d9a, 0x8634, 0xc03c, 0x1, 0x0);
        gbc.writeMem(0x2d84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5cca, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0339
        gbc.setState(0x59c4, 0xd46f, 0x9d40, 0x67a1, 0x6e9e, 0x5ec4, 0x1, 0x0);
        gbc.writeMem(0x59c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0x59c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 033A
        gbc.setState(0x1426, 0xb05d, 0x5c00, 0x7a97, 0x3ee1, 0x1084, 0x0, 0x1);
        gbc.writeMem(0x1426, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb05d, gbc.sp());
        EXPECT(0x1428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 033B
        gbc.setState(0x8de3, 0x3528, 0xb9b0, 0x96f, 0xff31, 0xf3e0, 0x0, 0x0);
        gbc.writeMem(0x8de3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0x8de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de3));
        EXPECT(0x44, gbc.readMem(0x8de4));
        // CB 44 033C
        gbc.setState(0x635f, 0xe6a3, 0xa450, 0x69a2, 0x3b4a, 0x613c, 0x1, 0x0);
        gbc.writeMem(0x635f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe6a3, gbc.sp());
        EXPECT(0x6361, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 033D
        gbc.setState(0xee8d, 0x1f62, 0xe6d0, 0xd853, 0x3be2, 0xbc2e, 0x1, 0x1);
        gbc.writeMem(0xee8d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1f62, gbc.sp());
        EXPECT(0xee8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee8d));
        EXPECT(0x44, gbc.readMem(0xee8e));
        // CB 44 033F
        gbc.setState(0x738b, 0xa9cc, 0xb3b0, 0xcd6, 0xa13a, 0x8c5a, 0x1, 0x0);
        gbc.writeMem(0x738b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa9cc, gbc.sp());
        EXPECT(0x738d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0340
        gbc.setState(0x9018, 0x76aa, 0x46a0, 0x7ecf, 0x7005, 0xac09, 0x0, 0x0);
        gbc.writeMem(0x9018, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x76aa, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9018));
        EXPECT(0x44, gbc.readMem(0x9019));
        // CB 44 0341
        gbc.setState(0x4724, 0x133a, 0xb3c0, 0xf4d3, 0xf81c, 0xc69e, 0x1, 0x1);
        gbc.writeMem(0x4724, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0x4726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0342
        gbc.setState(0x45f9, 0x8b53, 0x9390, 0xfc04, 0xc2bb, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x45f9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0x45fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0343
        gbc.setState(0xc31b, 0x7061, 0xb780, 0x95ae, 0x711a, 0x8322, 0x1, 0x0);
        gbc.writeMem(0xc31b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7061, gbc.sp());
        EXPECT(0xc31d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31b));
        EXPECT(0x44, gbc.readMem(0xc31c));
        // CB 44 0344
        gbc.setState(0x252, 0xe337, 0xf3a0, 0xc778, 0xfe52, 0xaf5f, 0x1, 0x0);
        gbc.writeMem(0x252, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe337, gbc.sp());
        EXPECT(0x254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0345
        gbc.setState(0x65b5, 0xaf65, 0x2800, 0x2ef7, 0x35bb, 0xdd67, 0x0, 0x0);
        gbc.writeMem(0x65b5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaf65, gbc.sp());
        EXPECT(0x65b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0346
        gbc.setState(0x5b62, 0xcbcb, 0x75c0, 0x4265, 0x4599, 0xaaa5, 0x0, 0x0);
        gbc.writeMem(0x5b62, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcbcb, gbc.sp());
        EXPECT(0x5b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0347
        gbc.setState(0x7afa, 0x871c, 0x1450, 0xe7c1, 0xb9ce, 0x4793, 0x0, 0x0);
        gbc.writeMem(0x7afa, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0x7afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0348
        gbc.setState(0x323c, 0xa0d4, 0xcf50, 0x6682, 0xcdca, 0x63e4, 0x0, 0x1);
        gbc.writeMem(0x323c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa0d4, gbc.sp());
        EXPECT(0x323e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0349
        gbc.setState(0x6bbc, 0x2333, 0xbc00, 0xc26d, 0xceae, 0x4d0, 0x1, 0x1);
        gbc.writeMem(0x6bbc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2333, gbc.sp());
        EXPECT(0x6bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 034A
        gbc.setState(0xc7f7, 0xdb84, 0xdcc0, 0xc77b, 0x2c02, 0xc7b0, 0x0, 0x0);
        gbc.writeMem(0xc7f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdb84, gbc.sp());
        EXPECT(0xc7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f7));
        EXPECT(0x44, gbc.readMem(0xc7f8));
        // CB 44 034B
        gbc.setState(0xaf8a, 0x435c, 0x77a0, 0x6981, 0x9c40, 0x9acf, 0x1, 0x1);
        gbc.writeMem(0xaf8a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0xaf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8a));
        EXPECT(0x44, gbc.readMem(0xaf8b));
        // CB 44 034C
        gbc.setState(0x41fc, 0x40f5, 0x11e0, 0x9538, 0x84b7, 0xaf4c, 0x0, 0x0);
        gbc.writeMem(0x41fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x40f5, gbc.sp());
        EXPECT(0x41fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 034D
        gbc.setState(0x510d, 0x2822, 0x3460, 0xdd, 0x9e20, 0x17b1, 0x1, 0x1);
        gbc.writeMem(0x510d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2822, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 034E
        gbc.setState(0x386b, 0x17fb, 0x5fa0, 0x322e, 0x388f, 0xa25e, 0x0, 0x1);
        gbc.writeMem(0x386b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x17fb, gbc.sp());
        EXPECT(0x386d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 034F
        gbc.setState(0x4c2, 0xa725, 0x7d0, 0x6402, 0xf5c9, 0x95a9, 0x0, 0x1);
        gbc.writeMem(0x4c2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa725, gbc.sp());
        EXPECT(0x4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0350
        gbc.setState(0x73ee, 0x8e1c, 0x7100, 0x7bfb, 0xd0cf, 0x404b, 0x1, 0x0);
        gbc.writeMem(0x73ee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e1c, gbc.sp());
        EXPECT(0x73f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0351
        gbc.setState(0x459, 0xf6fc, 0x85d0, 0xb304, 0x2947, 0xdf4a, 0x1, 0x1);
        gbc.writeMem(0x459, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf6fc, gbc.sp());
        EXPECT(0x45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0352
        gbc.setState(0x3825, 0x603, 0x9900, 0x308d, 0x8e1e, 0xce68, 0x1, 0x0);
        gbc.writeMem(0x3825, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x3827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0353
        gbc.setState(0xae5b, 0x4887, 0x8060, 0x4a78, 0x5674, 0xce40, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4887, gbc.sp());
        EXPECT(0xae5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5b));
        EXPECT(0x44, gbc.readMem(0xae5c));
        // CB 44 0355
        gbc.setState(0x18d8, 0x139d, 0x15f0, 0x1749, 0x11aa, 0xf366, 0x1, 0x0);
        gbc.writeMem(0x18d8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0x18da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0356
        gbc.setState(0x860c, 0x8167, 0x80f0, 0x99a9, 0xa096, 0xdb2b, 0x1, 0x1);
        gbc.writeMem(0x860c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8167, gbc.sp());
        EXPECT(0x860e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860c));
        EXPECT(0x44, gbc.readMem(0x860d));
        // CB 44 0357
        gbc.setState(0x5aaf, 0x3691, 0xd790, 0x2d5e, 0xd42a, 0xf867, 0x1, 0x0);
        gbc.writeMem(0x5aaf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3691, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0358
        gbc.setState(0x54a7, 0x7637, 0x41e0, 0x89a2, 0x8d84, 0xbdc3, 0x1, 0x1);
        gbc.writeMem(0x54a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7637, gbc.sp());
        EXPECT(0x54a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0359
        gbc.setState(0x9f72, 0xf7c8, 0xebf0, 0xb734, 0xedb3, 0x3e4c, 0x1, 0x1);
        gbc.writeMem(0x9f72, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0x9f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f72));
        EXPECT(0x44, gbc.readMem(0x9f73));
        // CB 44 035A
        gbc.setState(0x2dd9, 0x2104, 0xa740, 0x8bbb, 0xc078, 0x9707, 0x1, 0x1);
        gbc.writeMem(0x2dd9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2104, gbc.sp());
        EXPECT(0x2ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 035B
        gbc.setState(0x61c9, 0x9276, 0xadf0, 0x9c07, 0xcf52, 0xb156, 0x0, 0x0);
        gbc.writeMem(0x61c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x61cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 035C
        gbc.setState(0xc12a, 0xeab9, 0x500, 0x2543, 0xcb5b, 0xde95, 0x0, 0x0);
        gbc.writeMem(0xc12a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xeab9, gbc.sp());
        EXPECT(0xc12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12a));
        EXPECT(0x44, gbc.readMem(0xc12b));
        // CB 44 035D
        gbc.setState(0x287f, 0x967b, 0x71a0, 0xd637, 0x2016, 0x31b3, 0x0, 0x1);
        gbc.writeMem(0x287f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x967b, gbc.sp());
        EXPECT(0x2881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 035E
        gbc.setState(0x77f7, 0xd3d8, 0x18c0, 0xe8d7, 0x1b45, 0xf62b, 0x1, 0x0);
        gbc.writeMem(0x77f7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd3d8, gbc.sp());
        EXPECT(0x77f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 035F
        gbc.setState(0x906b, 0x5b5e, 0x7930, 0xcf54, 0xf73b, 0xe980, 0x0, 0x1);
        gbc.writeMem(0x906b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5b5e, gbc.sp());
        EXPECT(0x906d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906b));
        EXPECT(0x44, gbc.readMem(0x906c));
        // CB 44 0360
        gbc.setState(0x9614, 0x5124, 0x550, 0x5c57, 0x1311, 0xec85, 0x0, 0x1);
        gbc.writeMem(0x9614, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5124, gbc.sp());
        EXPECT(0x9616, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9614));
        EXPECT(0x44, gbc.readMem(0x9615));
        // CB 44 0361
        gbc.setState(0x5931, 0x53ee, 0xbf0, 0xb998, 0x4d8, 0x916b, 0x1, 0x1);
        gbc.writeMem(0x5931, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x5933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0362
        gbc.setState(0x77c9, 0x1e31, 0x4170, 0x63b2, 0xf256, 0xfe95, 0x0, 0x1);
        gbc.writeMem(0x77c9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e31, gbc.sp());
        EXPECT(0x77cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0363
        gbc.setState(0xc770, 0xf3b2, 0xac00, 0xe744, 0xca0, 0x5246, 0x0, 0x0);
        gbc.writeMem(0xc770, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf3b2, gbc.sp());
        EXPECT(0xc772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc770));
        EXPECT(0x44, gbc.readMem(0xc771));
        // CB 44 0364
        gbc.setState(0xc5b8, 0xda16, 0xcaf0, 0x16e2, 0xbd60, 0x834a, 0x0, 0x0);
        gbc.writeMem(0xc5b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xda16, gbc.sp());
        EXPECT(0xc5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b8));
        EXPECT(0x44, gbc.readMem(0xc5b9));
        // CB 44 0365
        gbc.setState(0xc826, 0x79a4, 0xd4e0, 0x51b7, 0x5496, 0x15e3, 0x1, 0x0);
        gbc.writeMem(0xc826, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x79a4, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0x44, gbc.readMem(0xc827));
        // CB 44 0366
        gbc.setState(0x21fd, 0x18f0, 0x4b50, 0x233, 0xa6d8, 0x7f2f, 0x1, 0x1);
        gbc.writeMem(0x21fd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0368
        gbc.setState(0x1200, 0x8e2b, 0x560, 0x6210, 0x61ac, 0x9ec5, 0x1, 0x1);
        gbc.writeMem(0x1200, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8e2b, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0369
        gbc.setState(0x62c1, 0xc9de, 0xb270, 0xb12d, 0x90d5, 0x795d, 0x0, 0x1);
        gbc.writeMem(0x62c1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc9de, gbc.sp());
        EXPECT(0x62c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 036A
        gbc.setState(0x319e, 0x9fa9, 0xa200, 0xa894, 0x1a34, 0xf155, 0x1, 0x1);
        gbc.writeMem(0x319e, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 036B
        gbc.setState(0x374f, 0x498d, 0x41e0, 0xe1b9, 0xc4cc, 0xbfb5, 0x1, 0x1);
        gbc.writeMem(0x374f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0x3751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 036D
        gbc.setState(0x2fcf, 0x3a77, 0xa810, 0x80db, 0x67e7, 0xb9f8, 0x0, 0x1);
        gbc.writeMem(0x2fcf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3a77, gbc.sp());
        EXPECT(0x2fd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 036E
        gbc.setState(0x9643, 0x9c8e, 0x5e30, 0xc35e, 0x696c, 0xdcad, 0x0, 0x1);
        gbc.writeMem(0x9643, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0x9645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9643));
        EXPECT(0x44, gbc.readMem(0x9644));
        // CB 44 036F
        gbc.setState(0x29a6, 0xf75, 0x7170, 0x4e93, 0x7bdf, 0xc649, 0x1, 0x0);
        gbc.writeMem(0x29a6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf75, gbc.sp());
        EXPECT(0x29a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0370
        gbc.setState(0x6dc8, 0xe284, 0xd500, 0x7d7d, 0xf96e, 0xd597, 0x1, 0x0);
        gbc.writeMem(0x6dc8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe284, gbc.sp());
        EXPECT(0x6dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0371
        gbc.setState(0xc3ab, 0x1932, 0x9120, 0xdbd3, 0xc748, 0x32d5, 0x1, 0x0);
        gbc.writeMem(0xc3ab, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1932, gbc.sp());
        EXPECT(0xc3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ab));
        EXPECT(0x44, gbc.readMem(0xc3ac));
        // CB 44 0372
        gbc.setState(0xd59c, 0x73bb, 0x3d10, 0x61d2, 0x120f, 0x7874, 0x1, 0x1);
        gbc.writeMem(0xd59c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0xd59e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59c));
        EXPECT(0x44, gbc.readMem(0xd59d));
        // CB 44 0373
        gbc.setState(0xe92f, 0xfc24, 0x7180, 0xd9ea, 0xcce2, 0x97f, 0x1, 0x1);
        gbc.writeMem(0xe92f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfc24, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe92f));
        EXPECT(0x44, gbc.readMem(0xe930));
        // CB 44 0374
        gbc.setState(0xd604, 0xc8e8, 0x2d80, 0x902a, 0x3171, 0x859e, 0x1, 0x0);
        gbc.writeMem(0xd604, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc8e8, gbc.sp());
        EXPECT(0xd606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd604));
        EXPECT(0x44, gbc.readMem(0xd605));
        // CB 44 0375
        gbc.setState(0xb105, 0x9548, 0x3af0, 0x6811, 0x2ded, 0x89dc, 0x1, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9548, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb105));
        EXPECT(0x44, gbc.readMem(0xb106));
        // CB 44 0377
        gbc.setState(0x1a3c, 0xd22c, 0xa240, 0x6ca8, 0xb09, 0xd7db, 0x0, 0x1);
        gbc.writeMem(0x1a3c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd22c, gbc.sp());
        EXPECT(0x1a3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0378
        gbc.setState(0x8089, 0xc04d, 0xe460, 0x4c82, 0xa95e, 0x8519, 0x1, 0x1);
        gbc.writeMem(0x8089, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x808b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8089));
        EXPECT(0x44, gbc.readMem(0x808a));
        // CB 44 0379
        gbc.setState(0x21cf, 0xf034, 0xb0d0, 0x9608, 0xd34b, 0x2ab5, 0x1, 0x1);
        gbc.writeMem(0x21cf, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf034, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 037A
        gbc.setState(0x5ce4, 0xe54f, 0x1f30, 0x405a, 0xd28f, 0x63bc, 0x0, 0x0);
        gbc.writeMem(0x5ce4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x5ce6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 037B
        gbc.setState(0x3e7c, 0xd96a, 0x5c30, 0x3c5d, 0x298f, 0x3907, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd96a, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 037C
        gbc.setState(0x79fb, 0xbefc, 0xdf90, 0x6607, 0x9a92, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x79fb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x79fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 037D
        gbc.setState(0x8bed, 0x5f4d, 0x8b70, 0x2b53, 0xfb0b, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0x8bed, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0x8bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bed));
        EXPECT(0x44, gbc.readMem(0x8bee));
        // CB 44 037E
        gbc.setState(0x1817, 0x91fb, 0xa1b0, 0xd9fe, 0x86cd, 0x611c, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x91fb, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 037F
        gbc.setState(0xc693, 0x7b1d, 0x3370, 0xa675, 0x61e0, 0x8984, 0x1, 0x1);
        gbc.writeMem(0xc693, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0xc695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc693));
        EXPECT(0x44, gbc.readMem(0xc694));
        // CB 44 0380
        gbc.setState(0x695d, 0xffd5, 0xf230, 0x13ce, 0xfff6, 0x8b2d, 0x1, 0x0);
        gbc.writeMem(0x695d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xffd5, gbc.sp());
        EXPECT(0x695f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0384
        gbc.setState(0x8456, 0x4eea, 0x9b40, 0x2330, 0x96b0, 0x55a9, 0x1, 0x1);
        gbc.writeMem(0x8456, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4eea, gbc.sp());
        EXPECT(0x8458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8456));
        EXPECT(0x44, gbc.readMem(0x8457));
        // CB 44 0385
        gbc.setState(0x405d, 0x49a2, 0xb390, 0x889e, 0xf188, 0x67db, 0x1, 0x0);
        gbc.writeMem(0x405d, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x49a2, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0386
        gbc.setState(0x8533, 0xde8c, 0x330, 0xab6c, 0x5371, 0xef88, 0x0, 0x1);
        gbc.writeMem(0x8533, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xde8c, gbc.sp());
        EXPECT(0x8535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8533));
        EXPECT(0x44, gbc.readMem(0x8534));
        // CB 44 0387
        gbc.setState(0x93f, 0xc7d3, 0xbc20, 0x8244, 0x876a, 0x699e, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0x941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0388
        gbc.setState(0xe031, 0x838a, 0x6da0, 0x866f, 0x7a1f, 0x4dbb, 0x0, 0x1);
        gbc.writeMem(0xe031, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x838a, gbc.sp());
        EXPECT(0xe033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe031));
        EXPECT(0x44, gbc.readMem(0xe032));
        // CB 44 0389
        gbc.setState(0x25fc, 0x5a8e, 0xc860, 0xbb10, 0x1c61, 0x4a2, 0x1, 0x0);
        gbc.writeMem(0x25fc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5a8e, gbc.sp());
        EXPECT(0x25fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 038A
        gbc.setState(0xbe1, 0x1f42, 0x3670, 0x808, 0x2011, 0x35c, 0x0, 0x1);
        gbc.writeMem(0xbe1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0xbe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 038B
        gbc.setState(0x107b, 0x1ccc, 0xa3d0, 0x5b13, 0x1f30, 0xc574, 0x1, 0x0);
        gbc.writeMem(0x107b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1ccc, gbc.sp());
        EXPECT(0x107d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 038C
        gbc.setState(0x6544, 0xe4df, 0x6c70, 0xfc95, 0x53c7, 0xcea6, 0x0, 0x1);
        gbc.writeMem(0x6544, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe4df, gbc.sp());
        EXPECT(0x6546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 038D
        gbc.setState(0x2d2c, 0xb7e2, 0x89d0, 0x388a, 0x579, 0xd7a, 0x0, 0x1);
        gbc.writeMem(0x2d2c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb7e2, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 038E
        gbc.setState(0xc21c, 0x2b9a, 0xa6d0, 0x8ba7, 0xcb17, 0x4f39, 0x1, 0x0);
        gbc.writeMem(0xc21c, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0xc21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21c));
        EXPECT(0x44, gbc.readMem(0xc21d));
        // CB 44 038F
        gbc.setState(0x1ebc, 0x6ed1, 0xd600, 0xcc85, 0x511e, 0xe8e2, 0x1, 0x1);
        gbc.writeMem(0x1ebc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6ed1, gbc.sp());
        EXPECT(0x1ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0390
        gbc.setState(0xc387, 0x8557, 0x3730, 0x4d5d, 0x50b7, 0xbdf1, 0x1, 0x1);
        gbc.writeMem(0xc387, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8557, gbc.sp());
        EXPECT(0xc389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc387));
        EXPECT(0x44, gbc.readMem(0xc388));
        // CB 44 0391
        gbc.setState(0x94f3, 0xf97c, 0x5fb0, 0x3227, 0x531c, 0x4800, 0x1, 0x0);
        gbc.writeMem(0x94f3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f3));
        EXPECT(0x44, gbc.readMem(0x94f4));
        // CB 44 0392
        gbc.setState(0xbcc4, 0xeb74, 0xe690, 0x2708, 0x1220, 0xeea9, 0x0, 0x1);
        gbc.writeMem(0xbcc4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xeb74, gbc.sp());
        EXPECT(0xbcc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc4));
        EXPECT(0x44, gbc.readMem(0xbcc5));
        // CB 44 0393
        gbc.setState(0xc65, 0xed52, 0xff0, 0x7931, 0x7f43, 0xfe7f, 0x1, 0x0);
        gbc.writeMem(0xc65, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed52, gbc.sp());
        EXPECT(0xc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0394
        gbc.setState(0x2376, 0x9066, 0x4c70, 0x7fb2, 0x4463, 0x4794, 0x1, 0x0);
        gbc.writeMem(0x2376, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x2378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 0395
        gbc.setState(0x4dd7, 0xe829, 0x6660, 0xe524, 0xe270, 0xa1f1, 0x0, 0x1);
        gbc.writeMem(0x4dd7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe829, gbc.sp());
        EXPECT(0x4dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0396
        gbc.setState(0x517a, 0xcdd5, 0x7ec0, 0xe76d, 0xd870, 0xbdcc, 0x0, 0x0);
        gbc.writeMem(0x517a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcdd5, gbc.sp());
        EXPECT(0x517c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0397
        gbc.setState(0xcc15, 0xb71c, 0xb3c0, 0xb96a, 0xa74f, 0x6af4, 0x0, 0x0);
        gbc.writeMem(0xcc15, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb71c, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0x44, gbc.readMem(0xcc16));
        // CB 44 0398
        gbc.setState(0xb1b, 0xa664, 0xd720, 0x10fc, 0x1287, 0x58, 0x1, 0x1);
        gbc.writeMem(0xb1b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa664, gbc.sp());
        EXPECT(0xb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 0399
        gbc.setState(0x5283, 0x687f, 0x53b0, 0x5b57, 0x925f, 0x272c, 0x0, 0x1);
        gbc.writeMem(0x5283, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x687f, gbc.sp());
        EXPECT(0x5285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 039A
        gbc.setState(0xc2c4, 0x5e7d, 0x7b70, 0xdf0a, 0xcdcc, 0xc032, 0x1, 0x1);
        gbc.writeMem(0xc2c4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5e7d, gbc.sp());
        EXPECT(0xc2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c4));
        EXPECT(0x44, gbc.readMem(0xc2c5));
        // CB 44 039B
        gbc.setState(0xda20, 0x3004, 0x4400, 0xd754, 0xf97a, 0xb113, 0x0, 0x1);
        gbc.writeMem(0xda20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3004, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda20));
        EXPECT(0x44, gbc.readMem(0xda21));
        // CB 44 039C
        gbc.setState(0xd016, 0x20e, 0x2f20, 0x7bee, 0xc093, 0x5a1f, 0x1, 0x0);
        gbc.writeMem(0xd016, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x20e, gbc.sp());
        EXPECT(0xd018, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd016));
        EXPECT(0x44, gbc.readMem(0xd017));
        // CB 44 039D
        gbc.setState(0x1992, 0x3bc4, 0xe890, 0xb317, 0x39a, 0x4424, 0x1, 0x1);
        gbc.writeMem(0x1992, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3bc4, gbc.sp());
        EXPECT(0x1994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 039E
        gbc.setState(0x894b, 0x8ae7, 0xfb50, 0xbb8, 0x2e0, 0x314a, 0x1, 0x1);
        gbc.writeMem(0x894b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8ae7, gbc.sp());
        EXPECT(0x894d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894b));
        EXPECT(0x44, gbc.readMem(0x894c));
        // CB 44 039F
        gbc.setState(0xac19, 0x2b6e, 0x4b0, 0xd7cd, 0x5361, 0x26d2, 0x0, 0x0);
        gbc.writeMem(0xac19, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2b6e, gbc.sp());
        EXPECT(0xac1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac19));
        EXPECT(0x44, gbc.readMem(0xac1a));
        // CB 44 03A0
        gbc.setState(0x43a8, 0x5247, 0x80a0, 0x47f8, 0x5021, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0x43a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5247, gbc.sp());
        EXPECT(0x43aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03A1
        gbc.setState(0x3314, 0xa7d5, 0xeff0, 0x38a7, 0x8903, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x3314, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa7d5, gbc.sp());
        EXPECT(0x3316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03A2
        gbc.setState(0xaccd, 0xc8a3, 0xb7d0, 0xbcb8, 0x2685, 0x9a08, 0x0, 0x0);
        gbc.writeMem(0xaccd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc8a3, gbc.sp());
        EXPECT(0xaccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaccd));
        EXPECT(0x44, gbc.readMem(0xacce));
        // CB 44 03A3
        gbc.setState(0x2f79, 0xb49c, 0x2e50, 0xe29f, 0xb0b6, 0x94a3, 0x0, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb49c, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03A4
        gbc.setState(0xe9b, 0x188f, 0xd610, 0x35f0, 0x7a4c, 0xd79, 0x1, 0x1);
        gbc.writeMem(0xe9b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x188f, gbc.sp());
        EXPECT(0xe9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03A5
        gbc.setState(0x16b9, 0x7a2, 0x7100, 0x1dc6, 0xa093, 0x9ed2, 0x0, 0x1);
        gbc.writeMem(0x16b9, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7a2, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03A6
        gbc.setState(0xb3b4, 0xe978, 0xad00, 0xe81, 0x9803, 0xcc06, 0x1, 0x1);
        gbc.writeMem(0xb3b4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0xb3b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b4));
        EXPECT(0x44, gbc.readMem(0xb3b5));
        // CB 44 03A7
        gbc.setState(0xd055, 0x1e5c, 0xd6b0, 0x4e0a, 0x1915, 0xc092, 0x1, 0x1);
        gbc.writeMem(0xd055, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0xd057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd055));
        EXPECT(0x44, gbc.readMem(0xd056));
        // CB 44 03A8
        gbc.setState(0xad51, 0xc9a0, 0xac30, 0xe8b, 0x6478, 0x801, 0x1, 0x0);
        gbc.writeMem(0xad51, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc9a0, gbc.sp());
        EXPECT(0xad53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad51));
        EXPECT(0x44, gbc.readMem(0xad52));
        // CB 44 03A9
        gbc.setState(0x8d7, 0xa297, 0x8e00, 0x799c, 0x3354, 0x3de2, 0x1, 0x1);
        gbc.writeMem(0x8d7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0x8d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03AA
        gbc.setState(0x8a50, 0xa3c3, 0x64b0, 0x70a, 0x59ec, 0xc5c2, 0x0, 0x1);
        gbc.writeMem(0x8a50, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa3c3, gbc.sp());
        EXPECT(0x8a52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a50));
        EXPECT(0x44, gbc.readMem(0x8a51));
        // CB 44 03AB
        gbc.setState(0x5883, 0xe10e, 0xa7c0, 0xe950, 0x4f00, 0x556f, 0x1, 0x1);
        gbc.writeMem(0x5883, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe10e, gbc.sp());
        EXPECT(0x5885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03AC
        gbc.setState(0xdf95, 0xb8f9, 0x7520, 0xe9fb, 0x879f, 0xbce8, 0x1, 0x0);
        gbc.writeMem(0xdf95, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf95));
        EXPECT(0x44, gbc.readMem(0xdf96));
        // CB 44 03AD
        gbc.setState(0xd863, 0x2c5e, 0x1a40, 0xf4d1, 0x487d, 0xaff6, 0x1, 0x1);
        gbc.writeMem(0xd863, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x2c5e, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd863));
        EXPECT(0x44, gbc.readMem(0xd864));
        // CB 44 03AE
        gbc.setState(0xe729, 0x78b3, 0xcf40, 0xf0ec, 0x6e38, 0x2ef3, 0x1, 0x1);
        gbc.writeMem(0xe729, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x78b3, gbc.sp());
        EXPECT(0xe72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe729));
        EXPECT(0x44, gbc.readMem(0xe72a));
        // CB 44 03AF
        gbc.setState(0x3726, 0xdab2, 0x95f0, 0x3fbe, 0x9587, 0xfa03, 0x1, 0x0);
        gbc.writeMem(0x3726, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xdab2, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03B0
        gbc.setState(0x2bee, 0x841a, 0x5aa0, 0x4492, 0x3b52, 0x6e02, 0x0, 0x1);
        gbc.writeMem(0x2bee, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x841a, gbc.sp());
        EXPECT(0x2bf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03B1
        gbc.setState(0x9542, 0xa5e0, 0xb880, 0xbd86, 0x93cc, 0xcb62, 0x1, 0x1);
        gbc.writeMem(0x9542, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa5e0, gbc.sp());
        EXPECT(0x9544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9542));
        EXPECT(0x44, gbc.readMem(0x9543));
        // CB 44 03B3
        gbc.setState(0xbe83, 0x122, 0xb9e0, 0xee2c, 0x5047, 0x5fc, 0x1, 0x1);
        gbc.writeMem(0xbe83, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x122, gbc.sp());
        EXPECT(0xbe85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe83));
        EXPECT(0x44, gbc.readMem(0xbe84));
        // CB 44 03B4
        gbc.setState(0xbd23, 0x5601, 0xcd30, 0x297c, 0xa92e, 0x3cac, 0x1, 0x1);
        gbc.writeMem(0xbd23, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5601, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd23));
        EXPECT(0x44, gbc.readMem(0xbd24));
        // CB 44 03B5
        gbc.setState(0xdb10, 0x652e, 0x6050, 0xb126, 0x992f, 0xe237, 0x0, 0x1);
        gbc.writeMem(0xdb10, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x652e, gbc.sp());
        EXPECT(0xdb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb10));
        EXPECT(0x44, gbc.readMem(0xdb11));
        // CB 44 03B6
        gbc.setState(0x6b11, 0x9033, 0xcb80, 0x62d2, 0x78a6, 0x7d0e, 0x0, 0x0);
        gbc.writeMem(0x6b11, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9033, gbc.sp());
        EXPECT(0x6b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03B7
        gbc.setState(0x15bb, 0xefdb, 0x72f0, 0xf842, 0x6299, 0x4a2, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xefdb, gbc.sp());
        EXPECT(0x15bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03B8
        gbc.setState(0xd292, 0x1d1a, 0x1e20, 0xadd2, 0x660d, 0x6050, 0x0, 0x1);
        gbc.writeMem(0xd292, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1d1a, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd292));
        EXPECT(0x44, gbc.readMem(0xd293));
        // CB 44 03B9
        gbc.setState(0xab4a, 0xb3a2, 0x3720, 0xb195, 0xd075, 0x283b, 0x0, 0x1);
        gbc.writeMem(0xab4a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0xab4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4a));
        EXPECT(0x44, gbc.readMem(0xab4b));
        // CB 44 03BA
        gbc.setState(0x8f75, 0xbb6d, 0x8070, 0x6d3f, 0xb611, 0x4960, 0x0, 0x0);
        gbc.writeMem(0x8f75, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbb6d, gbc.sp());
        EXPECT(0x8f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f75));
        EXPECT(0x44, gbc.readMem(0x8f76));
        // CB 44 03BB
        gbc.setState(0xc3b8, 0xcf24, 0x1a20, 0xd90c, 0xc7c7, 0xc2f1, 0x0, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0xc3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b8));
        EXPECT(0x44, gbc.readMem(0xc3b9));
        // CB 44 03BC
        gbc.setState(0xbc84, 0x67fc, 0x1740, 0xa112, 0xe343, 0xb45e, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0xbc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc84));
        EXPECT(0x44, gbc.readMem(0xbc85));
        // CB 44 03BD
        gbc.setState(0xda19, 0xb180, 0xfe30, 0xcfdc, 0x5d3d, 0x225c, 0x0, 0x0);
        gbc.writeMem(0xda19, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb180, gbc.sp());
        EXPECT(0xda1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda19));
        EXPECT(0x44, gbc.readMem(0xda1a));
        // CB 44 03BE
        gbc.setState(0xce1a, 0x739c, 0xf810, 0x8f63, 0x2502, 0xbb47, 0x1, 0x1);
        gbc.writeMem(0xce1a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x739c, gbc.sp());
        EXPECT(0xce1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1a));
        EXPECT(0x44, gbc.readMem(0xce1b));
        // CB 44 03C0
        gbc.setState(0x12bb, 0xcc93, 0x7910, 0x45a7, 0x222b, 0xae8b, 0x1, 0x0);
        gbc.writeMem(0x12bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcc93, gbc.sp());
        EXPECT(0x12bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03C1
        gbc.setState(0xa9a4, 0x9ad9, 0x41b0, 0x369, 0x6333, 0x38eb, 0x0, 0x1);
        gbc.writeMem(0xa9a4, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ad9, gbc.sp());
        EXPECT(0xa9a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a4));
        EXPECT(0x44, gbc.readMem(0xa9a5));
        // CB 44 03C2
        gbc.setState(0x7bc, 0xc1ce, 0xb0c0, 0x9beb, 0x9278, 0xbe68, 0x1, 0x1);
        gbc.writeMem(0x7bc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0x7be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03C3
        gbc.setState(0x4f90, 0xbd70, 0xbb30, 0x6a35, 0xbbbe, 0x8e4c, 0x0, 0x1);
        gbc.writeMem(0x4f90, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbd70, gbc.sp());
        EXPECT(0x4f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03C4
        gbc.setState(0x3f36, 0x5cd4, 0x7f90, 0x1d56, 0xdee0, 0x6525, 0x1, 0x0);
        gbc.writeMem(0x3f36, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5cd4, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03C6
        gbc.setState(0x22b7, 0x41c6, 0x8220, 0x51fb, 0x44c5, 0x99b2, 0x1, 0x0);
        gbc.writeMem(0x22b7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0x22b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03C7
        gbc.setState(0xd0e0, 0xc2e7, 0x5d50, 0xd69e, 0x71c1, 0x4ca9, 0x0, 0x1);
        gbc.writeMem(0xd0e0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc2e7, gbc.sp());
        EXPECT(0xd0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e0));
        EXPECT(0x44, gbc.readMem(0xd0e1));
        // CB 44 03C8
        gbc.setState(0x55d1, 0x9dd2, 0x4940, 0x6d15, 0xc42e, 0xc024, 0x0, 0x1);
        gbc.writeMem(0x55d1, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03C9
        gbc.setState(0xc80a, 0x8b8a, 0x50d0, 0xed3b, 0xa221, 0x3d1, 0x0, 0x0);
        gbc.writeMem(0xc80a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8b8a, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80a));
        EXPECT(0x44, gbc.readMem(0xc80b));
        // CB 44 03CA
        gbc.setState(0x7003, 0xc23d, 0x2df0, 0xcb8f, 0x2215, 0x1fc4, 0x0, 0x1);
        gbc.writeMem(0x7003, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc23d, gbc.sp());
        EXPECT(0x7005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03CB
        gbc.setState(0xd006, 0x75f3, 0x13c0, 0x381d, 0x907, 0x9701, 0x0, 0x0);
        gbc.writeMem(0xd006, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x75f3, gbc.sp());
        EXPECT(0xd008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd006));
        EXPECT(0x44, gbc.readMem(0xd007));
        // CB 44 03CC
        gbc.setState(0x1cb0, 0xdf60, 0x77c0, 0x8633, 0x2069, 0xe7df, 0x0, 0x0);
        gbc.writeMem(0x1cb0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdf60, gbc.sp());
        EXPECT(0x1cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03CD
        gbc.setState(0x443, 0x38d7, 0x3e60, 0xb078, 0xd382, 0xb50e, 0x1, 0x0);
        gbc.writeMem(0x443, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03CE
        gbc.setState(0xda60, 0x2826, 0x1230, 0x3dde, 0x90b9, 0x4865, 0x0, 0x1);
        gbc.writeMem(0xda60, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2826, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x44, gbc.readMem(0xda61));
        // CB 44 03CF
        gbc.setState(0x4261, 0x5d00, 0xfd90, 0xef60, 0x6f44, 0x48ca, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03D0
        gbc.setState(0x5311, 0x7666, 0x3290, 0xdbf9, 0x851e, 0x8bd8, 0x0, 0x1);
        gbc.writeMem(0x5311, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7666, gbc.sp());
        EXPECT(0x5313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03D1
        gbc.setState(0xd4f2, 0xa03c, 0xee70, 0x18f, 0x6b14, 0xcf3a, 0x0, 0x0);
        gbc.writeMem(0xd4f2, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0xd4f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f2));
        EXPECT(0x44, gbc.readMem(0xd4f3));
        // CB 44 03D2
        gbc.setState(0xc191, 0xecd1, 0x79a0, 0x8e45, 0x7769, 0xc198, 0x1, 0x0);
        gbc.writeMem(0xc191, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xecd1, gbc.sp());
        EXPECT(0xc193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc191));
        EXPECT(0x44, gbc.readMem(0xc192));
        // CB 44 03D3
        gbc.setState(0xfb6, 0x7511, 0x23f0, 0x37d2, 0x2d6d, 0x31da, 0x0, 0x1);
        gbc.writeMem(0xfb6, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0xfb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03D4
        gbc.setState(0x57a8, 0x70e5, 0x6280, 0x5287, 0x9673, 0xebcf, 0x0, 0x0);
        gbc.writeMem(0x57a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x70e5, gbc.sp());
        EXPECT(0x57aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03D5
        gbc.setState(0x2e92, 0xd724, 0x5670, 0xade5, 0xdbc3, 0x6bc1, 0x0, 0x1);
        gbc.writeMem(0x2e92, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd724, gbc.sp());
        EXPECT(0x2e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03D6
        gbc.setState(0x8140, 0x8436, 0xf120, 0x4834, 0x979e, 0xdde2, 0x0, 0x0);
        gbc.writeMem(0x8140, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8436, gbc.sp());
        EXPECT(0x8142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8140));
        EXPECT(0x44, gbc.readMem(0x8141));
        // CB 44 03D7
        gbc.setState(0x72a5, 0xcca0, 0x74a0, 0x3d7f, 0xb384, 0xdc29, 0x1, 0x1);
        gbc.writeMem(0x72a5, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0x72a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03D8
        gbc.setState(0x5ccc, 0xd656, 0x7850, 0x1436, 0x5b93, 0x32ed, 0x1, 0x1);
        gbc.writeMem(0x5ccc, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0x5cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03D9
        gbc.setState(0x6a8f, 0xfd68, 0x15d0, 0x726, 0x66f1, 0xf3fb, 0x0, 0x0);
        gbc.writeMem(0x6a8f, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfd68, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03DA
        gbc.setState(0x3370, 0x5cf0, 0xe200, 0xe370, 0x937, 0xbc0c, 0x0, 0x1);
        gbc.writeMem(0x3370, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0x3372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03DB
        gbc.setState(0x36a8, 0x1be7, 0xe570, 0xf903, 0x5b58, 0xfdee, 0x1, 0x1);
        gbc.writeMem(0x36a8, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1be7, gbc.sp());
        EXPECT(0x36aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03DC
        gbc.setState(0x6de0, 0xc166, 0x63a0, 0x6f6f, 0x78b1, 0x1b39, 0x1, 0x1);
        gbc.writeMem(0x6de0, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x6de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03DD
        gbc.setState(0xc1b, 0xddaf, 0xef00, 0x8c8c, 0x6356, 0x17f8, 0x0, 0x0);
        gbc.writeMem(0xc1b, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xddaf, gbc.sp());
        EXPECT(0xc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03DE
        gbc.setState(0xbe16, 0xdb5c, 0x5dd0, 0xeea3, 0x7cb, 0xf942, 0x1, 0x1);
        gbc.writeMem(0xbe16, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb5c, gbc.sp());
        EXPECT(0xbe18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe16));
        EXPECT(0x44, gbc.readMem(0xbe17));
        // CB 44 03DF
        gbc.setState(0x65a7, 0xa5f7, 0xd380, 0xef88, 0x159a, 0x3134, 0x0, 0x1);
        gbc.writeMem(0x65a7, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa5f7, gbc.sp());
        EXPECT(0x65a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03E0
        gbc.setState(0x61bb, 0x4ab9, 0x93a0, 0x650, 0xa624, 0x1b8f, 0x1, 0x1);
        gbc.writeMem(0x61bb, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4ab9, gbc.sp());
        EXPECT(0x61bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03E1
        gbc.setState(0xecd3, 0x1811, 0x7d00, 0xa539, 0x76f9, 0xecc1, 0x0, 0x1);
        gbc.writeMem(0xecd3, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1811, gbc.sp());
        EXPECT(0xecd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd3));
        EXPECT(0x44, gbc.readMem(0xecd4));
        // CB 44 03E2
        gbc.setState(0x284a, 0x3b7, 0x9c80, 0x66c5, 0x1722, 0xb189, 0x1, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x284c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 44 03E3
        gbc.setState(0x3e20, 0x21f5, 0xfc70, 0x3b10, 0xecca, 0x44d7, 0x1, 0x0);
        gbc.writeMem(0x3e20, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0x3e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03E5
        gbc.setState(0x330a, 0x7220, 0x2290, 0x6523, 0x22fa, 0xd5c3, 0x1, 0x0);
        gbc.writeMem(0x330a, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7220, gbc.sp());
        EXPECT(0x330c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 44 03E6
        gbc.setState(0xabdd, 0xf7aa, 0xbf90, 0x18b4, 0x78c8, 0x5db, 0x0, 0x0);
        gbc.writeMem(0xabdd, { 0xcb, 0x44 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf7aa, gbc.sp());
        EXPECT(0xabdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdd));
        EXPECT(0x44, gbc.readMem(0xabde));
    }
