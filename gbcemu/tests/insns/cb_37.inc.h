    TEST(gbcemu, opcode_cb_37) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 37 0000
        gbc.setState(0x4796, 0xf9c9, 0x4e60, 0x3853, 0x24f7, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x4796, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf9c9, gbc.sp());
        EXPECT(0x4798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0001
        gbc.setState(0x90dd, 0x127f, 0x7750, 0xa330, 0x888c, 0x512c, 0x0, 0x0);
        gbc.writeMem(0x90dd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0x90df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90dd));
        EXPECT(0x37, gbc.readMem(0x90de));
        // CB 37 0002
        gbc.setState(0xe72a, 0xb3bd, 0x2ff0, 0x3182, 0xcb8, 0xa83f, 0x0, 0x0);
        gbc.writeMem(0xe72a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb3bd, gbc.sp());
        EXPECT(0xe72c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe72a));
        EXPECT(0x37, gbc.readMem(0xe72b));
        // CB 37 0003
        gbc.setState(0xe800, 0x261d, 0x2b0, 0x192e, 0x876e, 0xac4c, 0x1, 0x1);
        gbc.writeMem(0xe800, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0xe802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe800));
        EXPECT(0x37, gbc.readMem(0xe801));
        // CB 37 0004
        gbc.setState(0x67a2, 0x6331, 0xf710, 0xa914, 0xb9de, 0xbb4, 0x1, 0x1);
        gbc.writeMem(0x67a2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6331, gbc.sp());
        EXPECT(0x67a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0005
        gbc.setState(0xa25e, 0x8b88, 0x9020, 0x2418, 0x3806, 0xd39a, 0x0, 0x0);
        gbc.writeMem(0xa25e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0xa260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25e));
        EXPECT(0x37, gbc.readMem(0xa25f));
        // CB 37 0006
        gbc.setState(0x84d8, 0x1b9d, 0xfc00, 0xd3d5, 0x89af, 0x51ef, 0x1, 0x0);
        gbc.writeMem(0x84d8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1b9d, gbc.sp());
        EXPECT(0x84da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d8));
        EXPECT(0x37, gbc.readMem(0x84d9));
        // CB 37 0007
        gbc.setState(0x8ac2, 0x4269, 0xc470, 0xc939, 0x2e0f, 0xa2a4, 0x1, 0x1);
        gbc.writeMem(0x8ac2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4269, gbc.sp());
        EXPECT(0x8ac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac2));
        EXPECT(0x37, gbc.readMem(0x8ac3));
        // CB 37 0008
        gbc.setState(0x7a2c, 0xb9e2, 0xe740, 0xb159, 0xb25d, 0xa43f, 0x1, 0x0);
        gbc.writeMem(0x7a2c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb9e2, gbc.sp());
        EXPECT(0x7a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0009
        gbc.setState(0x1aff, 0x44bd, 0x80e0, 0xbc59, 0xa787, 0xae57, 0x1, 0x0);
        gbc.writeMem(0x1aff, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x44bd, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 000A
        gbc.setState(0xe5bb, 0xfc37, 0xe350, 0x15cf, 0x4d67, 0x4b62, 0x0, 0x0);
        gbc.writeMem(0xe5bb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0xe5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5bb));
        EXPECT(0x37, gbc.readMem(0xe5bc));
        // CB 37 000B
        gbc.setState(0x78a3, 0x4680, 0x9020, 0x91d1, 0x3a20, 0xb6ba, 0x0, 0x1);
        gbc.writeMem(0x78a3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4680, gbc.sp());
        EXPECT(0x78a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 000C
        gbc.setState(0x5c3b, 0x9a8a, 0xd80, 0x7c7e, 0xf4e4, 0xbba, 0x0, 0x1);
        gbc.writeMem(0x5c3b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9a8a, gbc.sp());
        EXPECT(0x5c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 000D
        gbc.setState(0x1dab, 0x783a, 0x8bb0, 0x126f, 0xc0bd, 0x526c, 0x0, 0x1);
        gbc.writeMem(0x1dab, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 000E
        gbc.setState(0x4388, 0xe288, 0x3510, 0xc466, 0xec39, 0xd6aa, 0x0, 0x1);
        gbc.writeMem(0x4388, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe288, gbc.sp());
        EXPECT(0x438a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 000F
        gbc.setState(0xd4ee, 0x57c3, 0xfd00, 0x90ac, 0x99c, 0xb06c, 0x0, 0x0);
        gbc.writeMem(0xd4ee, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x57c3, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ee));
        EXPECT(0x37, gbc.readMem(0xd4ef));
        // CB 37 0010
        gbc.setState(0x6741, 0x5dcb, 0xe20, 0x924f, 0x687a, 0x4b83, 0x1, 0x0);
        gbc.writeMem(0x6741, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0x6743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0011
        gbc.setState(0x9e99, 0xcb8c, 0x1cc0, 0x59e4, 0xa048, 0xeab5, 0x1, 0x1);
        gbc.writeMem(0x9e99, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0x9e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e99));
        EXPECT(0x37, gbc.readMem(0x9e9a));
        // CB 37 0012
        gbc.setState(0xdc5c, 0x6d6e, 0xc800, 0xd90c, 0xf9b1, 0x329, 0x1, 0x1);
        gbc.writeMem(0xdc5c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6d6e, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc5c));
        EXPECT(0x37, gbc.readMem(0xdc5d));
        // CB 37 0013
        gbc.setState(0xe30, 0xbcb, 0xb0d0, 0xd441, 0xb740, 0x8089, 0x0, 0x1);
        gbc.writeMem(0xe30, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0014
        gbc.setState(0xe785, 0x9fa9, 0x63b0, 0xeb6a, 0xf348, 0xaf11, 0x0, 0x0);
        gbc.writeMem(0xe785, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0xe787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe785));
        EXPECT(0x37, gbc.readMem(0xe786));
        // CB 37 0015
        gbc.setState(0xb5a5, 0x3ae3, 0xe1a0, 0x6ad2, 0xed99, 0xb0d, 0x1, 0x1);
        gbc.writeMem(0xb5a5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3ae3, gbc.sp());
        EXPECT(0xb5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5a5));
        EXPECT(0x37, gbc.readMem(0xb5a6));
        // CB 37 0016
        gbc.setState(0xc5c4, 0x99c0, 0xe370, 0x737, 0x1ee5, 0x8bdd, 0x1, 0x0);
        gbc.writeMem(0xc5c4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x99c0, gbc.sp());
        EXPECT(0xc5c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5c4));
        EXPECT(0x37, gbc.readMem(0xc5c5));
        // CB 37 0017
        gbc.setState(0x2b97, 0xe492, 0xaed0, 0xd75e, 0xeffa, 0x587b, 0x1, 0x1);
        gbc.writeMem(0x2b97, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe492, gbc.sp());
        EXPECT(0x2b99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0018
        gbc.setState(0x365b, 0x44f4, 0xd940, 0xed64, 0x9e07, 0x5d8d, 0x1, 0x1);
        gbc.writeMem(0x365b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0x365d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0019
        gbc.setState(0x2281, 0xfd23, 0x44c0, 0xd863, 0x2d9d, 0xdf71, 0x1, 0x0);
        gbc.writeMem(0x2281, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfd23, gbc.sp());
        EXPECT(0x2283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 001A
        gbc.setState(0xe701, 0x6573, 0xc2c0, 0xdf84, 0x5b7c, 0xc3af, 0x0, 0x0);
        gbc.writeMem(0xe701, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6573, gbc.sp());
        EXPECT(0xe703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe701));
        EXPECT(0x37, gbc.readMem(0xe702));
        // CB 37 001B
        gbc.setState(0xc7df, 0xc284, 0x3e40, 0x85ee, 0x24e2, 0x9be5, 0x1, 0x1);
        gbc.writeMem(0xc7df, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc284, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7df));
        EXPECT(0x37, gbc.readMem(0xc7e0));
        // CB 37 001C
        gbc.setState(0x21d4, 0xe584, 0xac60, 0x359d, 0xf71b, 0x1661, 0x1, 0x0);
        gbc.writeMem(0x21d4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 001D
        gbc.setState(0xd2f2, 0xca40, 0xdcf0, 0x27a6, 0xb477, 0xc462, 0x0, 0x0);
        gbc.writeMem(0xd2f2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0xd2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f2));
        EXPECT(0x37, gbc.readMem(0xd2f3));
        // CB 37 001E
        gbc.setState(0x6aaf, 0x5052, 0x550, 0xd7d, 0x449d, 0x2d02, 0x1, 0x1);
        gbc.writeMem(0x6aaf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x5052, gbc.sp());
        EXPECT(0x6ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 001F
        gbc.setState(0x1f, 0x7644, 0x5da0, 0x8a8b, 0xaf21, 0x8254, 0x1, 0x0);
        gbc.writeMem(0x1f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7644, gbc.sp());
        EXPECT(0x21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0020
        gbc.setState(0xa02e, 0xbf8b, 0xd590, 0xa8a9, 0x1b7e, 0xc03d, 0x1, 0x1);
        gbc.writeMem(0xa02e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbf8b, gbc.sp());
        EXPECT(0xa030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02e));
        EXPECT(0x37, gbc.readMem(0xa02f));
        // CB 37 0021
        gbc.setState(0x8a7b, 0x2353, 0x22c0, 0x1354, 0x8cfb, 0x9a62, 0x1, 0x0);
        gbc.writeMem(0x8a7b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2353, gbc.sp());
        EXPECT(0x8a7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7b));
        EXPECT(0x37, gbc.readMem(0x8a7c));
        // CB 37 0022
        gbc.setState(0x5c4a, 0xe618, 0xdf00, 0x6c9, 0xaac8, 0xb797, 0x0, 0x0);
        gbc.writeMem(0x5c4a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe618, gbc.sp());
        EXPECT(0x5c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0023
        gbc.setState(0xab73, 0x967a, 0xd590, 0x9947, 0x8fa1, 0x6a95, 0x0, 0x1);
        gbc.writeMem(0xab73, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x967a, gbc.sp());
        EXPECT(0xab75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab73));
        EXPECT(0x37, gbc.readMem(0xab74));
        // CB 37 0024
        gbc.setState(0xb3d3, 0x7bfa, 0x6490, 0x4546, 0x7acb, 0x6334, 0x0, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7bfa, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0x37, gbc.readMem(0xb3d4));
        // CB 37 0025
        gbc.setState(0x6109, 0xcdf6, 0xcfe0, 0xac3b, 0x7434, 0x11af, 0x1, 0x0);
        gbc.writeMem(0x6109, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcdf6, gbc.sp());
        EXPECT(0x610b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0026
        gbc.setState(0x8065, 0x2512, 0x4c60, 0x318e, 0x62fe, 0xbc15, 0x0, 0x0);
        gbc.writeMem(0x8065, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2512, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8065));
        EXPECT(0x37, gbc.readMem(0x8066));
        // CB 37 0027
        gbc.setState(0x5c6f, 0xb4e3, 0xd990, 0x2f0c, 0xa79c, 0x44c7, 0x0, 0x0);
        gbc.writeMem(0x5c6f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb4e3, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0028
        gbc.setState(0x45d2, 0x62a5, 0x53e0, 0xe5e2, 0x448a, 0xec2c, 0x1, 0x1);
        gbc.writeMem(0x45d2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x62a5, gbc.sp());
        EXPECT(0x45d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0029
        gbc.setState(0x6b87, 0xcff3, 0x830, 0x9667, 0x9ee, 0x635c, 0x0, 0x1);
        gbc.writeMem(0x6b87, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcff3, gbc.sp());
        EXPECT(0x6b89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 002A
        gbc.setState(0xa6ec, 0x4569, 0x3810, 0x58c4, 0x13c3, 0x8626, 0x1, 0x0);
        gbc.writeMem(0xa6ec, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4569, gbc.sp());
        EXPECT(0xa6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6ec));
        EXPECT(0x37, gbc.readMem(0xa6ed));
        // CB 37 002B
        gbc.setState(0xc249, 0xcb68, 0x6940, 0xfc26, 0x1ed3, 0x12a7, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcb68, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x37, gbc.readMem(0xc24a));
        // CB 37 002C
        gbc.setState(0x7e34, 0x5501, 0xf370, 0x5dda, 0xcd2f, 0xd4d4, 0x0, 0x1);
        gbc.writeMem(0x7e34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5501, gbc.sp());
        EXPECT(0x7e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 002D
        gbc.setState(0x6484, 0x7ef6, 0x6d20, 0x56a6, 0x44a0, 0x4ef6, 0x1, 0x0);
        gbc.writeMem(0x6484, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0x6486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 002E
        gbc.setState(0xc33f, 0x39c1, 0xd1a0, 0xe72, 0xc2fb, 0x101, 0x0, 0x0);
        gbc.writeMem(0xc33f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0xc341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc33f));
        EXPECT(0x37, gbc.readMem(0xc340));
        // CB 37 002F
        gbc.setState(0x8afd, 0x8662, 0x370, 0xa4f1, 0xc6e5, 0x2a25, 0x0, 0x1);
        gbc.writeMem(0x8afd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x8662, gbc.sp());
        EXPECT(0x8aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8afd));
        EXPECT(0x37, gbc.readMem(0x8afe));
        // CB 37 0030
        gbc.setState(0xd6be, 0xaa80, 0x9310, 0x18e9, 0xbd62, 0xc493, 0x1, 0x0);
        gbc.writeMem(0xd6be, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xaa80, gbc.sp());
        EXPECT(0xd6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6be));
        EXPECT(0x37, gbc.readMem(0xd6bf));
        // CB 37 0031
        gbc.setState(0xa906, 0xd221, 0xd010, 0x9992, 0x47f6, 0x6e4, 0x1, 0x1);
        gbc.writeMem(0xa906, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd221, gbc.sp());
        EXPECT(0xa908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa906));
        EXPECT(0x37, gbc.readMem(0xa907));
        // CB 37 0032
        gbc.setState(0xc99b, 0xed49, 0x9320, 0x9205, 0xde35, 0xacc7, 0x1, 0x0);
        gbc.writeMem(0xc99b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed49, gbc.sp());
        EXPECT(0xc99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99b));
        EXPECT(0x37, gbc.readMem(0xc99c));
        // CB 37 0033
        gbc.setState(0x7232, 0xe8ee, 0x2270, 0xeb22, 0x291, 0xa522, 0x0, 0x0);
        gbc.writeMem(0x7232, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe8ee, gbc.sp());
        EXPECT(0x7234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0034
        gbc.setState(0x60d2, 0x7160, 0xf4f0, 0xcfe5, 0xf12, 0x2482, 0x1, 0x1);
        gbc.writeMem(0x60d2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7160, gbc.sp());
        EXPECT(0x60d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0035
        gbc.setState(0xe758, 0x18c9, 0x4db0, 0xe311, 0xa1eb, 0x1234, 0x0, 0x0);
        gbc.writeMem(0xe758, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x18c9, gbc.sp());
        EXPECT(0xe75a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe758));
        EXPECT(0x37, gbc.readMem(0xe759));
        // CB 37 0036
        gbc.setState(0x8d35, 0xe9e, 0x1e30, 0x8f9b, 0x2cd0, 0x375c, 0x1, 0x1);
        gbc.writeMem(0x8d35, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe9e, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d35));
        EXPECT(0x37, gbc.readMem(0x8d36));
        // CB 37 0037
        gbc.setState(0xb141, 0x7e26, 0x79e0, 0x8ac3, 0xa1db, 0xa0e5, 0x0, 0x1);
        gbc.writeMem(0xb141, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7e26, gbc.sp());
        EXPECT(0xb143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb141));
        EXPECT(0x37, gbc.readMem(0xb142));
        // CB 37 0038
        gbc.setState(0xdd08, 0x7289, 0x4110, 0x3a73, 0x6b56, 0x25f7, 0x0, 0x1);
        gbc.writeMem(0xdd08, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7289, gbc.sp());
        EXPECT(0xdd0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd08));
        EXPECT(0x37, gbc.readMem(0xdd09));
        // CB 37 0039
        gbc.setState(0x28ba, 0x2b9a, 0xd9c0, 0x58f9, 0x974a, 0x947a, 0x1, 0x0);
        gbc.writeMem(0x28ba, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2b9a, gbc.sp());
        EXPECT(0x28bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 003A
        gbc.setState(0xebb0, 0xc9a4, 0x38c0, 0xb9eb, 0x7e3d, 0xa26c, 0x1, 0x0);
        gbc.writeMem(0xebb0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc9a4, gbc.sp());
        EXPECT(0xebb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb0));
        EXPECT(0x37, gbc.readMem(0xebb1));
        // CB 37 003B
        gbc.setState(0xcf0c, 0x10f7, 0x2570, 0x11e4, 0x90a2, 0xeb77, 0x1, 0x1);
        gbc.writeMem(0xcf0c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x10f7, gbc.sp());
        EXPECT(0xcf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf0c));
        EXPECT(0x37, gbc.readMem(0xcf0d));
        // CB 37 003C
        gbc.setState(0xb381, 0x829a, 0x8740, 0xa4d2, 0xc14d, 0x82e8, 0x0, 0x0);
        gbc.writeMem(0xb381, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x829a, gbc.sp());
        EXPECT(0xb383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb381));
        EXPECT(0x37, gbc.readMem(0xb382));
        // CB 37 003E
        gbc.setState(0x3724, 0x1cfa, 0x4000, 0xf478, 0xb2b7, 0x22a3, 0x1, 0x1);
        gbc.writeMem(0x3724, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1cfa, gbc.sp());
        EXPECT(0x3726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 003F
        gbc.setState(0x43b8, 0xf554, 0xfbf0, 0xb721, 0x9b71, 0x4719, 0x1, 0x0);
        gbc.writeMem(0x43b8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf554, gbc.sp());
        EXPECT(0x43ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0040
        gbc.setState(0xa309, 0xcca9, 0xe400, 0x9266, 0x6582, 0x55d0, 0x0, 0x0);
        gbc.writeMem(0xa309, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0xa30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa309));
        EXPECT(0x37, gbc.readMem(0xa30a));
        // CB 37 0041
        gbc.setState(0xd7b4, 0xf0de, 0xe920, 0x19f4, 0xc737, 0xb99d, 0x1, 0x0);
        gbc.writeMem(0xd7b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf0de, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b4));
        EXPECT(0x37, gbc.readMem(0xd7b5));
        // CB 37 0042
        gbc.setState(0x41f, 0xed53, 0xe7d0, 0x179b, 0x14db, 0xaee2, 0x0, 0x0);
        gbc.writeMem(0x41f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed53, gbc.sp());
        EXPECT(0x421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0043
        gbc.setState(0x4132, 0x9e56, 0xe600, 0xdd55, 0xc001, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x4132, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9e56, gbc.sp());
        EXPECT(0x4134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0045
        gbc.setState(0x87e9, 0x841b, 0xa640, 0x1ed9, 0x62d7, 0xcf1e, 0x1, 0x0);
        gbc.writeMem(0x87e9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0x87eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e9));
        EXPECT(0x37, gbc.readMem(0x87ea));
        // CB 37 0046
        gbc.setState(0xbb73, 0x8d5e, 0xbdf0, 0x89a4, 0xa291, 0x9de0, 0x1, 0x1);
        gbc.writeMem(0xbb73, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8d5e, gbc.sp());
        EXPECT(0xbb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb73));
        EXPECT(0x37, gbc.readMem(0xbb74));
        // CB 37 0047
        gbc.setState(0x1e03, 0xea42, 0xc740, 0xd8b4, 0x7d0e, 0xd843, 0x1, 0x0);
        gbc.writeMem(0x1e03, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xea42, gbc.sp());
        EXPECT(0x1e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0048
        gbc.setState(0x32c9, 0x61ae, 0x86e0, 0x16f3, 0x9c55, 0x69ce, 0x0, 0x0);
        gbc.writeMem(0x32c9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x61ae, gbc.sp());
        EXPECT(0x32cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0049
        gbc.setState(0xcb34, 0xe147, 0xded0, 0x4dd1, 0x15b8, 0xccdf, 0x0, 0x0);
        gbc.writeMem(0xcb34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe147, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb34));
        EXPECT(0x37, gbc.readMem(0xcb35));
        // CB 37 004A
        gbc.setState(0x279a, 0x69bd, 0xf50, 0x3c29, 0xcf9f, 0xcd6e, 0x0, 0x0);
        gbc.writeMem(0x279a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x69bd, gbc.sp());
        EXPECT(0x279c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 004B
        gbc.setState(0xc158, 0x6ad7, 0xef50, 0x2c0c, 0xb8a, 0x6964, 0x0, 0x1);
        gbc.writeMem(0xc158, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6ad7, gbc.sp());
        EXPECT(0xc15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc158));
        EXPECT(0x37, gbc.readMem(0xc159));
        // CB 37 004C
        gbc.setState(0x9880, 0xb8ee, 0x8580, 0xd971, 0xc807, 0xd8d5, 0x1, 0x1);
        gbc.writeMem(0x9880, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb8ee, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9880));
        EXPECT(0x37, gbc.readMem(0x9881));
        // CB 37 004D
        gbc.setState(0x8b74, 0xb89d, 0x4410, 0x4757, 0x57e4, 0xfb0e, 0x1, 0x0);
        gbc.writeMem(0x8b74, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0x8b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b74));
        EXPECT(0x37, gbc.readMem(0x8b75));
        // CB 37 004E
        gbc.setState(0x100b, 0x94d6, 0x6d70, 0x58a9, 0xe4e3, 0x418b, 0x0, 0x1);
        gbc.writeMem(0x100b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x94d6, gbc.sp());
        EXPECT(0x100d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 004F
        gbc.setState(0x9bb1, 0xf04, 0x9160, 0x3288, 0x2e52, 0x54e2, 0x1, 0x0);
        gbc.writeMem(0x9bb1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf04, gbc.sp());
        EXPECT(0x9bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb1));
        EXPECT(0x37, gbc.readMem(0x9bb2));
        // CB 37 0051
        gbc.setState(0x408, 0x694c, 0xd370, 0x91f2, 0x330a, 0xb92b, 0x1, 0x1);
        gbc.writeMem(0x408, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x694c, gbc.sp());
        EXPECT(0x40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0052
        gbc.setState(0x925b, 0x4a67, 0x7d30, 0x96a0, 0x789a, 0x1850, 0x0, 0x0);
        gbc.writeMem(0x925b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4a67, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x925b));
        EXPECT(0x37, gbc.readMem(0x925c));
        // CB 37 0053
        gbc.setState(0x659c, 0xaf78, 0x1f80, 0xac47, 0x2fe3, 0xae3e, 0x0, 0x0);
        gbc.writeMem(0x659c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf78, gbc.sp());
        EXPECT(0x659e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0054
        gbc.setState(0x2b17, 0x2e41, 0xd3a0, 0xfa80, 0x380f, 0x8644, 0x0, 0x0);
        gbc.writeMem(0x2b17, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2e41, gbc.sp());
        EXPECT(0x2b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0055
        gbc.setState(0xd91f, 0x6f4f, 0xf5a0, 0x53de, 0xacb6, 0x5808, 0x0, 0x0);
        gbc.writeMem(0xd91f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6f4f, gbc.sp());
        EXPECT(0xd921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91f));
        EXPECT(0x37, gbc.readMem(0xd920));
        // CB 37 0056
        gbc.setState(0xaee8, 0x8b3e, 0xdf80, 0x7204, 0xb5d6, 0x1f18, 0x1, 0x1);
        gbc.writeMem(0xaee8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8b3e, gbc.sp());
        EXPECT(0xaeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee8));
        EXPECT(0x37, gbc.readMem(0xaee9));
        // CB 37 0057
        gbc.setState(0x620b, 0xba19, 0xf8a0, 0xd817, 0x1442, 0x292a, 0x0, 0x1);
        gbc.writeMem(0x620b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xba19, gbc.sp());
        EXPECT(0x620d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0058
        gbc.setState(0x6021, 0x24af, 0xfed0, 0x9d26, 0x4fa, 0x741b, 0x1, 0x1);
        gbc.writeMem(0x6021, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x24af, gbc.sp());
        EXPECT(0x6023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0059
        gbc.setState(0x1a24, 0xe4d9, 0x6bc0, 0xba14, 0x5c4, 0x4d71, 0x0, 0x0);
        gbc.writeMem(0x1a24, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe4d9, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 005A
        gbc.setState(0xd89d, 0x5818, 0x3c0, 0xa567, 0x6b29, 0xce6c, 0x0, 0x1);
        gbc.writeMem(0xd89d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5818, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89d));
        EXPECT(0x37, gbc.readMem(0xd89e));
        // CB 37 005B
        gbc.setState(0xe69e, 0x94, 0xb240, 0x4043, 0xa81c, 0xaa16, 0x1, 0x1);
        gbc.writeMem(0xe69e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x94, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0x37, gbc.readMem(0xe69f));
        // CB 37 005C
        gbc.setState(0x291a, 0x524f, 0xeb50, 0x93fb, 0xae80, 0x5ea8, 0x0, 0x1);
        gbc.writeMem(0x291a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x524f, gbc.sp());
        EXPECT(0x291c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 005D
        gbc.setState(0x200f, 0xf0b6, 0xbde0, 0xdc3d, 0x274e, 0x5d1b, 0x1, 0x0);
        gbc.writeMem(0x200f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf0b6, gbc.sp());
        EXPECT(0x2011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 005E
        gbc.setState(0xcf4b, 0x4e53, 0x1390, 0x9906, 0xcc78, 0x56c7, 0x0, 0x1);
        gbc.writeMem(0xcf4b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4e53, gbc.sp());
        EXPECT(0xcf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4b));
        EXPECT(0x37, gbc.readMem(0xcf4c));
        // CB 37 005F
        gbc.setState(0x199a, 0xadc3, 0xc1f0, 0xd3e, 0x62e5, 0x4dee, 0x0, 0x0);
        gbc.writeMem(0x199a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xadc3, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0060
        gbc.setState(0x5e74, 0x1713, 0x3b20, 0xb619, 0x1cdc, 0xadc0, 0x1, 0x0);
        gbc.writeMem(0x5e74, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1713, gbc.sp());
        EXPECT(0x5e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0061
        gbc.setState(0xd61d, 0xf1c9, 0x99b0, 0x73b1, 0x8b7c, 0xb56f, 0x1, 0x1);
        gbc.writeMem(0xd61d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0xd61f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61d));
        EXPECT(0x37, gbc.readMem(0xd61e));
        // CB 37 0062
        gbc.setState(0x50b4, 0x7cf9, 0xe100, 0xc8f5, 0x30a8, 0xe3d8, 0x1, 0x0);
        gbc.writeMem(0x50b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7cf9, gbc.sp());
        EXPECT(0x50b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0063
        gbc.setState(0x63f8, 0xa90e, 0xc280, 0x9678, 0x51cb, 0x868b, 0x0, 0x1);
        gbc.writeMem(0x63f8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa90e, gbc.sp());
        EXPECT(0x63fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0064
        gbc.setState(0x4b3b, 0x16ae, 0xd770, 0x7901, 0x952d, 0xe58, 0x0, 0x1);
        gbc.writeMem(0x4b3b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x16ae, gbc.sp());
        EXPECT(0x4b3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0065
        gbc.setState(0xb6b1, 0xcae0, 0x3a30, 0x8041, 0x4e, 0x27d5, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcae0, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b1));
        EXPECT(0x37, gbc.readMem(0xb6b2));
        // CB 37 0066
        gbc.setState(0xd7f5, 0xb720, 0xbc10, 0x6683, 0x3da, 0x3a9c, 0x0, 0x0);
        gbc.writeMem(0xd7f5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb720, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0x37, gbc.readMem(0xd7f6));
        // CB 37 0068
        gbc.setState(0x1f07, 0x3cfb, 0x8410, 0x1281, 0x346e, 0xb336, 0x0, 0x1);
        gbc.writeMem(0x1f07, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3cfb, gbc.sp());
        EXPECT(0x1f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0069
        gbc.setState(0xc888, 0x7998, 0x7240, 0x807a, 0x9d94, 0x9443, 0x1, 0x1);
        gbc.writeMem(0xc888, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7998, gbc.sp());
        EXPECT(0xc88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc888));
        EXPECT(0x37, gbc.readMem(0xc889));
        // CB 37 006A
        gbc.setState(0xa078, 0xf923, 0xa440, 0x71b7, 0x1b3f, 0xed3, 0x1, 0x0);
        gbc.writeMem(0xa078, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf923, gbc.sp());
        EXPECT(0xa07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa078));
        EXPECT(0x37, gbc.readMem(0xa079));
        // CB 37 006B
        gbc.setState(0x3f52, 0xbf5b, 0x4ca0, 0x6d36, 0x8477, 0x2a58, 0x0, 0x1);
        gbc.writeMem(0x3f52, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 006C
        gbc.setState(0x5cdf, 0x39f2, 0xb540, 0xde8a, 0x4d13, 0x8972, 0x1, 0x1);
        gbc.writeMem(0x5cdf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x39f2, gbc.sp());
        EXPECT(0x5ce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 006D
        gbc.setState(0xa1ab, 0x5a04, 0x74c0, 0x925b, 0x1072, 0xadcd, 0x1, 0x1);
        gbc.writeMem(0xa1ab, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5a04, gbc.sp());
        EXPECT(0xa1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ab));
        EXPECT(0x37, gbc.readMem(0xa1ac));
        // CB 37 006E
        gbc.setState(0x58d5, 0xa5df, 0x57c0, 0xb5a9, 0x527c, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0x58d5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa5df, gbc.sp());
        EXPECT(0x58d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 006F
        gbc.setState(0x5e0e, 0xf5f, 0x4060, 0xe5c9, 0x9ae9, 0xeeb8, 0x0, 0x0);
        gbc.writeMem(0x5e0e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x5e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0070
        gbc.setState(0xee76, 0xbe74, 0x2a40, 0x5544, 0xedf8, 0xfe64, 0x0, 0x1);
        gbc.writeMem(0xee76, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbe74, gbc.sp());
        EXPECT(0xee78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee76));
        EXPECT(0x37, gbc.readMem(0xee77));
        // CB 37 0071
        gbc.setState(0x1ab5, 0x7890, 0x6c0, 0x64f6, 0x53dc, 0xc59e, 0x1, 0x0);
        gbc.writeMem(0x1ab5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0x1ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0072
        gbc.setState(0xcd3c, 0xe357, 0x11e0, 0x2d13, 0x217c, 0x5427, 0x1, 0x1);
        gbc.writeMem(0xcd3c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe357, gbc.sp());
        EXPECT(0xcd3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3c));
        EXPECT(0x37, gbc.readMem(0xcd3d));
        // CB 37 0073
        gbc.setState(0xe3f2, 0xca4e, 0xa840, 0x75a8, 0xd5a8, 0xc8ac, 0x0, 0x1);
        gbc.writeMem(0xe3f2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xca4e, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f2));
        EXPECT(0x37, gbc.readMem(0xe3f3));
        // CB 37 0074
        gbc.setState(0x11e4, 0x24ae, 0xdd70, 0x74c0, 0xccd1, 0x8c7, 0x0, 0x1);
        gbc.writeMem(0x11e4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x24ae, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0075
        gbc.setState(0x10d0, 0x8fd2, 0x48c0, 0xdfe4, 0x244, 0x64a2, 0x0, 0x0);
        gbc.writeMem(0x10d0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8fd2, gbc.sp());
        EXPECT(0x10d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0076
        gbc.setState(0x5a20, 0x688, 0xf40, 0x451f, 0x5937, 0xcbb6, 0x0, 0x1);
        gbc.writeMem(0x5a20, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x688, gbc.sp());
        EXPECT(0x5a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0077
        gbc.setState(0xae6d, 0xcf0, 0xeab0, 0x6e1b, 0x4209, 0xca05, 0x0, 0x0);
        gbc.writeMem(0xae6d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xcf0, gbc.sp());
        EXPECT(0xae6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6d));
        EXPECT(0x37, gbc.readMem(0xae6e));
        // CB 37 0078
        gbc.setState(0x1399, 0x9858, 0x93e0, 0xf96f, 0xffab, 0xaa04, 0x0, 0x1);
        gbc.writeMem(0x1399, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9858, gbc.sp());
        EXPECT(0x139b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0079
        gbc.setState(0xba4f, 0xa7fe, 0xf440, 0x9783, 0xba49, 0xbab8, 0x0, 0x0);
        gbc.writeMem(0xba4f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa7fe, gbc.sp());
        EXPECT(0xba51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba4f));
        EXPECT(0x37, gbc.readMem(0xba50));
        // CB 37 007A
        gbc.setState(0x8c4, 0xc857, 0x9e10, 0x3137, 0x258f, 0x4e87, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc857, gbc.sp());
        EXPECT(0x8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 007B
        gbc.setState(0x44b7, 0x8ead, 0x3070, 0x5fc2, 0x8bfa, 0x9bc1, 0x1, 0x1);
        gbc.writeMem(0x44b7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8ead, gbc.sp());
        EXPECT(0x44b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 007C
        gbc.setState(0x4295, 0xba78, 0x90, 0x6c2c, 0x78fb, 0x148b, 0x0, 0x1);
        gbc.writeMem(0x4295, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xba78, gbc.sp());
        EXPECT(0x4297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 007D
        gbc.setState(0x8899, 0xf8ea, 0x5f00, 0x5658, 0xbd78, 0xd1, 0x1, 0x0);
        gbc.writeMem(0x8899, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf8ea, gbc.sp());
        EXPECT(0x889b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8899));
        EXPECT(0x37, gbc.readMem(0x889a));
        // CB 37 007E
        gbc.setState(0x9679, 0xffbc, 0xb970, 0x4d1f, 0xda0d, 0xd86c, 0x0, 0x1);
        gbc.writeMem(0x9679, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xffbc, gbc.sp());
        EXPECT(0x967b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9679));
        EXPECT(0x37, gbc.readMem(0x967a));
        // CB 37 007F
        gbc.setState(0xb9a6, 0x81a4, 0x1280, 0xcdf4, 0xc42a, 0xe4d4, 0x0, 0x0);
        gbc.writeMem(0xb9a6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x81a4, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a6));
        EXPECT(0x37, gbc.readMem(0xb9a7));
        // CB 37 0080
        gbc.setState(0x87aa, 0xf243, 0xb8c0, 0x5622, 0xa2a1, 0xc5e, 0x1, 0x1);
        gbc.writeMem(0x87aa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf243, gbc.sp());
        EXPECT(0x87ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87aa));
        EXPECT(0x37, gbc.readMem(0x87ab));
        // CB 37 0082
        gbc.setState(0xcdec, 0x560d, 0xc670, 0x3d9e, 0xb8aa, 0x210, 0x0, 0x0);
        gbc.writeMem(0xcdec, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x560d, gbc.sp());
        EXPECT(0xcdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdec));
        EXPECT(0x37, gbc.readMem(0xcded));
        // CB 37 0083
        gbc.setState(0xb857, 0x563b, 0x2e40, 0xa760, 0x7c55, 0x36cb, 0x1, 0x1);
        gbc.writeMem(0xb857, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x563b, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb857));
        EXPECT(0x37, gbc.readMem(0xb858));
        // CB 37 0084
        gbc.setState(0xd59b, 0x2eed, 0x8bd0, 0x95ba, 0x9f10, 0xcd1d, 0x0, 0x0);
        gbc.writeMem(0xd59b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2eed, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59b));
        EXPECT(0x37, gbc.readMem(0xd59c));
        // CB 37 0085
        gbc.setState(0x76e, 0x197, 0x4a80, 0x46ad, 0xf826, 0xdce0, 0x1, 0x0);
        gbc.writeMem(0x76e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x197, gbc.sp());
        EXPECT(0x770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0086
        gbc.setState(0x45c1, 0xa0a3, 0xd3e0, 0xc890, 0xba5c, 0x8a8d, 0x0, 0x1);
        gbc.writeMem(0x45c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa0a3, gbc.sp());
        EXPECT(0x45c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0087
        gbc.setState(0xc2b4, 0xf5de, 0xcc0, 0x8ac3, 0xd195, 0xfa46, 0x1, 0x0);
        gbc.writeMem(0xc2b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf5de, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b4));
        EXPECT(0x37, gbc.readMem(0xc2b5));
        // CB 37 0088
        gbc.setState(0x2f4e, 0xfbdc, 0xea90, 0x85bb, 0x782b, 0xceeb, 0x1, 0x0);
        gbc.writeMem(0x2f4e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfbdc, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0089
        gbc.setState(0x6438, 0x28a7, 0x3020, 0xb1c4, 0x353c, 0xb942, 0x1, 0x1);
        gbc.writeMem(0x6438, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x28a7, gbc.sp());
        EXPECT(0x643a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 008A
        gbc.setState(0x9b24, 0xadbd, 0xc380, 0x9564, 0x8cc2, 0xf46c, 0x0, 0x0);
        gbc.writeMem(0x9b24, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xadbd, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b24));
        EXPECT(0x37, gbc.readMem(0x9b25));
        // CB 37 008B
        gbc.setState(0xc2ef, 0x47f9, 0xc6b0, 0x28e0, 0xbbd, 0x3077, 0x1, 0x0);
        gbc.writeMem(0xc2ef, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x47f9, gbc.sp());
        EXPECT(0xc2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ef));
        EXPECT(0x37, gbc.readMem(0xc2f0));
        // CB 37 008C
        gbc.setState(0x70f, 0xb9e5, 0xbdf0, 0x5037, 0xc839, 0x691c, 0x0, 0x0);
        gbc.writeMem(0x70f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 008D
        gbc.setState(0x884e, 0x21bf, 0x9ce0, 0xc2d1, 0x6d0c, 0x5e43, 0x1, 0x1);
        gbc.writeMem(0x884e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x21bf, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884e));
        EXPECT(0x37, gbc.readMem(0x884f));
        // CB 37 008E
        gbc.setState(0xeadb, 0xeec2, 0x28a0, 0xdf39, 0x3c8b, 0x97ed, 0x0, 0x1);
        gbc.writeMem(0xeadb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xeec2, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0x37, gbc.readMem(0xeadc));
        // CB 37 008F
        gbc.setState(0x1f3, 0xfdb9, 0x6750, 0xdd77, 0xbed5, 0xd1bc, 0x0, 0x0);
        gbc.writeMem(0x1f3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0x1f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0090
        gbc.setState(0x2f9e, 0xabf2, 0x44d0, 0xa708, 0xd095, 0x7489, 0x1, 0x1);
        gbc.writeMem(0x2f9e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xabf2, gbc.sp());
        EXPECT(0x2fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0091
        gbc.setState(0x4a06, 0xd889, 0xb9a0, 0xdf05, 0x2bb3, 0xbd1e, 0x1, 0x1);
        gbc.writeMem(0x4a06, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd889, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0092
        gbc.setState(0x463e, 0xac85, 0xf010, 0xb16d, 0x1fbe, 0xccf, 0x1, 0x1);
        gbc.writeMem(0x463e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x4640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0095
        gbc.setState(0x76c4, 0xb5d6, 0x24d0, 0xd8ad, 0xceba, 0x24fb, 0x0, 0x0);
        gbc.writeMem(0x76c4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb5d6, gbc.sp());
        EXPECT(0x76c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0096
        gbc.setState(0x1765, 0x33d3, 0x2d10, 0xe961, 0x7df9, 0xfea, 0x1, 0x1);
        gbc.writeMem(0x1765, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0x1767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0097
        gbc.setState(0x4e5e, 0x2940, 0x2af0, 0xec35, 0xf169, 0x3bf4, 0x0, 0x0);
        gbc.writeMem(0x4e5e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2940, gbc.sp());
        EXPECT(0x4e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0098
        gbc.setState(0xb425, 0xa6c0, 0x7d0, 0x51a8, 0xf255, 0x5226, 0x0, 0x1);
        gbc.writeMem(0xb425, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa6c0, gbc.sp());
        EXPECT(0xb427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb425));
        EXPECT(0x37, gbc.readMem(0xb426));
        // CB 37 0099
        gbc.setState(0x80e9, 0xba41, 0xbf60, 0x1511, 0xdfba, 0x391f, 0x0, 0x1);
        gbc.writeMem(0x80e9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xba41, gbc.sp());
        EXPECT(0x80eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e9));
        EXPECT(0x37, gbc.readMem(0x80ea));
        // CB 37 009A
        gbc.setState(0xd5ce, 0x8355, 0xfce0, 0x558e, 0x7f19, 0x28f4, 0x0, 0x0);
        gbc.writeMem(0xd5ce, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8355, gbc.sp());
        EXPECT(0xd5d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ce));
        EXPECT(0x37, gbc.readMem(0xd5cf));
        // CB 37 009B
        gbc.setState(0x45d6, 0x8496, 0x2250, 0xd3fe, 0x79a, 0xbb3a, 0x0, 0x1);
        gbc.writeMem(0x45d6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8496, gbc.sp());
        EXPECT(0x45d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 009C
        gbc.setState(0x2cbf, 0x3fc0, 0x3170, 0xa772, 0x9191, 0xedaa, 0x1, 0x0);
        gbc.writeMem(0x2cbf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3fc0, gbc.sp());
        EXPECT(0x2cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 009D
        gbc.setState(0x7316, 0x4cfc, 0x7660, 0x871e, 0xd27, 0x1332, 0x1, 0x1);
        gbc.writeMem(0x7316, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4cfc, gbc.sp());
        EXPECT(0x7318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 009E
        gbc.setState(0xaa9b, 0xd1d4, 0xe180, 0xdc7b, 0xfed6, 0x49eb, 0x0, 0x0);
        gbc.writeMem(0xaa9b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd1d4, gbc.sp());
        EXPECT(0xaa9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9b));
        EXPECT(0x37, gbc.readMem(0xaa9c));
        // CB 37 009F
        gbc.setState(0x3d0b, 0xb11c, 0x4e90, 0xdf77, 0xfb73, 0x1a30, 0x0, 0x0);
        gbc.writeMem(0x3d0b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb11c, gbc.sp());
        EXPECT(0x3d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A0
        gbc.setState(0x4860, 0xc096, 0x33f0, 0x46d8, 0x8b06, 0x607b, 0x0, 0x1);
        gbc.writeMem(0x4860, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc096, gbc.sp());
        EXPECT(0x4862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A1
        gbc.setState(0x4bd4, 0xe185, 0xf380, 0x1f41, 0x2754, 0x2928, 0x1, 0x1);
        gbc.writeMem(0x4bd4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe185, gbc.sp());
        EXPECT(0x4bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A2
        gbc.setState(0x67b3, 0x3932, 0x9c00, 0x7fab, 0x32e7, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x67b3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3932, gbc.sp());
        EXPECT(0x67b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A3
        gbc.setState(0x8cee, 0x8f29, 0xfe10, 0xd15f, 0x182b, 0xff1b, 0x0, 0x1);
        gbc.writeMem(0x8cee, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x8f29, gbc.sp());
        EXPECT(0x8cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cee));
        EXPECT(0x37, gbc.readMem(0x8cef));
        // CB 37 00A4
        gbc.setState(0x9205, 0x5a66, 0xc890, 0xc60a, 0xdf60, 0x28c7, 0x1, 0x1);
        gbc.writeMem(0x9205, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5a66, gbc.sp());
        EXPECT(0x9207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9205));
        EXPECT(0x37, gbc.readMem(0x9206));
        // CB 37 00A5
        gbc.setState(0x7f60, 0xc903, 0x8980, 0x351, 0xcf44, 0x3c92, 0x1, 0x0);
        gbc.writeMem(0x7f60, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0x7f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A6
        gbc.setState(0xc3b8, 0xedb, 0x8e60, 0x8a90, 0x8660, 0x2d34, 0x1, 0x0);
        gbc.writeMem(0xc3b8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xedb, gbc.sp());
        EXPECT(0xc3ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b8));
        EXPECT(0x37, gbc.readMem(0xc3b9));
        // CB 37 00A7
        gbc.setState(0x17c, 0x71a5, 0xb670, 0x1dc8, 0xc02f, 0x9ea9, 0x0, 0x0);
        gbc.writeMem(0x17c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x71a5, gbc.sp());
        EXPECT(0x17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00A8
        gbc.setState(0x87d8, 0x93b8, 0x3190, 0xeff9, 0xc7f1, 0x3a28, 0x1, 0x0);
        gbc.writeMem(0x87d8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x93b8, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d8));
        EXPECT(0x37, gbc.readMem(0x87d9));
        // CB 37 00A9
        gbc.setState(0x730c, 0xacc2, 0x4a10, 0xc3d0, 0xd57e, 0x3d54, 0x0, 0x1);
        gbc.writeMem(0x730c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xacc2, gbc.sp());
        EXPECT(0x730e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00AA
        gbc.setState(0x7cc2, 0x3c53, 0xd40, 0xafd9, 0x3436, 0x3eac, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00AB
        gbc.setState(0x2bc5, 0xfe5a, 0xb650, 0xff90, 0x257c, 0xcf5d, 0x1, 0x1);
        gbc.writeMem(0x2bc5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe5a, gbc.sp());
        EXPECT(0x2bc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00AC
        gbc.setState(0xd7c2, 0x1e7e, 0x3610, 0x5acc, 0xdcb3, 0xdd9c, 0x1, 0x0);
        gbc.writeMem(0xd7c2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1e7e, gbc.sp());
        EXPECT(0xd7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c2));
        EXPECT(0x37, gbc.readMem(0xd7c3));
        // CB 37 00AD
        gbc.setState(0x6b73, 0x4cc8, 0xe30, 0x4004, 0xb077, 0x7891, 0x0, 0x0);
        gbc.writeMem(0x6b73, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4cc8, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00AE
        gbc.setState(0x8f2d, 0xf237, 0xb600, 0xf49f, 0x9ec9, 0x30, 0x0, 0x0);
        gbc.writeMem(0x8f2d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf237, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2d));
        EXPECT(0x37, gbc.readMem(0x8f2e));
        // CB 37 00AF
        gbc.setState(0xd70b, 0xb522, 0x4c60, 0x2d99, 0x1dad, 0xe534, 0x0, 0x0);
        gbc.writeMem(0xd70b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb522, gbc.sp());
        EXPECT(0xd70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70b));
        EXPECT(0x37, gbc.readMem(0xd70c));
        // CB 37 00B0
        gbc.setState(0x1abb, 0xcf40, 0xc8b0, 0x1487, 0xc775, 0x22d8, 0x0, 0x1);
        gbc.writeMem(0x1abb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcf40, gbc.sp());
        EXPECT(0x1abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00B1
        gbc.setState(0xe879, 0x1ac1, 0x4b80, 0xd15b, 0x1300, 0x2d79, 0x1, 0x0);
        gbc.writeMem(0xe879, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1ac1, gbc.sp());
        EXPECT(0xe87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe879));
        EXPECT(0x37, gbc.readMem(0xe87a));
        // CB 37 00B2
        gbc.setState(0x5f0f, 0xee97, 0xcf00, 0x32ed, 0x5cce, 0xadbf, 0x0, 0x0);
        gbc.writeMem(0x5f0f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xee97, gbc.sp());
        EXPECT(0x5f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00B3
        gbc.setState(0x9f16, 0xd904, 0x95b0, 0x87de, 0xdb65, 0x5356, 0x1, 0x0);
        gbc.writeMem(0x9f16, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd904, gbc.sp());
        EXPECT(0x9f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f16));
        EXPECT(0x37, gbc.readMem(0x9f17));
        // CB 37 00B4
        gbc.setState(0x4031, 0xd0a0, 0xe530, 0x38a9, 0x5ab8, 0xd656, 0x1, 0x0);
        gbc.writeMem(0x4031, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd0a0, gbc.sp());
        EXPECT(0x4033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00B5
        gbc.setState(0xe68c, 0x23d2, 0x0, 0x1a9d, 0xcd17, 0x21c2, 0x0, 0x0);
        gbc.writeMem(0xe68c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0xe68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68c));
        EXPECT(0x37, gbc.readMem(0xe68d));
        // CB 37 00B6
        gbc.setState(0x9115, 0x897, 0xf1d0, 0xd2d4, 0xb18, 0x3572, 0x0, 0x1);
        gbc.writeMem(0x9115, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x897, gbc.sp());
        EXPECT(0x9117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9115));
        EXPECT(0x37, gbc.readMem(0x9116));
        // CB 37 00B7
        gbc.setState(0x361e, 0x6d3b, 0x6d60, 0x37b8, 0x8b78, 0xfc0d, 0x1, 0x0);
        gbc.writeMem(0x361e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6d3b, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00B8
        gbc.setState(0x57ef, 0xd445, 0xcea0, 0xae06, 0xaf94, 0x469d, 0x1, 0x0);
        gbc.writeMem(0x57ef, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0x57f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00B9
        gbc.setState(0xa38e, 0x4833, 0x4840, 0xcb99, 0xda5d, 0xbc6b, 0x1, 0x1);
        gbc.writeMem(0xa38e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4833, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa38e));
        EXPECT(0x37, gbc.readMem(0xa38f));
        // CB 37 00BB
        gbc.setState(0x6988, 0xef2d, 0x2e0, 0xf5bc, 0xe883, 0x87c7, 0x0, 0x0);
        gbc.writeMem(0x6988, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef2d, gbc.sp());
        EXPECT(0x698a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00BC
        gbc.setState(0x611a, 0x5349, 0x240, 0x423, 0xef48, 0xa88, 0x0, 0x1);
        gbc.writeMem(0x611a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5349, gbc.sp());
        EXPECT(0x611c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00BD
        gbc.setState(0x1453, 0x50cc, 0x6d30, 0x6a46, 0x9633, 0xd2ab, 0x1, 0x0);
        gbc.writeMem(0x1453, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x50cc, gbc.sp());
        EXPECT(0x1455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00BE
        gbc.setState(0x4c7f, 0xc562, 0xffe0, 0xec00, 0xc8ba, 0x7cf7, 0x1, 0x1);
        gbc.writeMem(0x4c7f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc562, gbc.sp());
        EXPECT(0x4c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00BF
        gbc.setState(0x37b9, 0x62e7, 0x2d10, 0xeef5, 0x579f, 0x5db3, 0x0, 0x0);
        gbc.writeMem(0x37b9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x62e7, gbc.sp());
        EXPECT(0x37bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00C0
        gbc.setState(0x80e5, 0x3b12, 0xd5d0, 0xc3e1, 0x1e6a, 0x702d, 0x0, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3b12, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0x37, gbc.readMem(0x80e6));
        // CB 37 00C1
        gbc.setState(0x5b15, 0x3e8a, 0xae90, 0xfe61, 0xb012, 0xefa6, 0x0, 0x1);
        gbc.writeMem(0x5b15, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3e8a, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00C2
        gbc.setState(0xec1b, 0x2717, 0x6b10, 0xd47, 0x2251, 0xe809, 0x1, 0x0);
        gbc.writeMem(0xec1b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0xec1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1b));
        EXPECT(0x37, gbc.readMem(0xec1c));
        // CB 37 00C3
        gbc.setState(0x604d, 0x9533, 0x9020, 0xac88, 0xc990, 0x8b30, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9533, gbc.sp());
        EXPECT(0x604f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00C4
        gbc.setState(0xe66c, 0x4903, 0x4c60, 0x3e80, 0x1ee8, 0x48ef, 0x1, 0x0);
        gbc.writeMem(0xe66c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4903, gbc.sp());
        EXPECT(0xe66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe66c));
        EXPECT(0x37, gbc.readMem(0xe66d));
        // CB 37 00C5
        gbc.setState(0x383e, 0x9342, 0x9e40, 0xaa7e, 0x2713, 0x1a6c, 0x0, 0x1);
        gbc.writeMem(0x383e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9342, gbc.sp());
        EXPECT(0x3840, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00C6
        gbc.setState(0x6423, 0x599c, 0x8cc0, 0xe6c3, 0x26c5, 0xdcb4, 0x0, 0x1);
        gbc.writeMem(0x6423, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x599c, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00C7
        gbc.setState(0xa16c, 0xbf9, 0x1750, 0x6b82, 0x644d, 0x55c6, 0x1, 0x0);
        gbc.writeMem(0xa16c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0xa16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa16c));
        EXPECT(0x37, gbc.readMem(0xa16d));
        // CB 37 00C8
        gbc.setState(0x86c6, 0x6590, 0x97b0, 0xb120, 0xeaea, 0xeb23, 0x1, 0x1);
        gbc.writeMem(0x86c6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6590, gbc.sp());
        EXPECT(0x86c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c6));
        EXPECT(0x37, gbc.readMem(0x86c7));
        // CB 37 00C9
        gbc.setState(0x8b09, 0x4c13, 0xa720, 0xc08e, 0x6b71, 0x92e, 0x0, 0x1);
        gbc.writeMem(0x8b09, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4c13, gbc.sp());
        EXPECT(0x8b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b09));
        EXPECT(0x37, gbc.readMem(0x8b0a));
        // CB 37 00CA
        gbc.setState(0x10d0, 0xb4f1, 0xe7b0, 0x4603, 0xb4d, 0x8a54, 0x0, 0x0);
        gbc.writeMem(0x10d0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb4f1, gbc.sp());
        EXPECT(0x10d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00CC
        gbc.setState(0x3045, 0x7665, 0x5fb0, 0x5ae4, 0xcc84, 0x4fb0, 0x1, 0x0);
        gbc.writeMem(0x3045, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7665, gbc.sp());
        EXPECT(0x3047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00CD
        gbc.setState(0xb3ca, 0x907f, 0x70f0, 0xa3a, 0x8ac8, 0xb5e7, 0x1, 0x1);
        gbc.writeMem(0xb3ca, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x907f, gbc.sp());
        EXPECT(0xb3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ca));
        EXPECT(0x37, gbc.readMem(0xb3cb));
        // CB 37 00CE
        gbc.setState(0xd2bb, 0xa824, 0x5d30, 0x5545, 0x3cd7, 0x659, 0x0, 0x1);
        gbc.writeMem(0xd2bb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa824, gbc.sp());
        EXPECT(0xd2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2bb));
        EXPECT(0x37, gbc.readMem(0xd2bc));
        // CB 37 00CF
        gbc.setState(0x103e, 0x2fc, 0x4730, 0x3e64, 0x3e77, 0x3757, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2fc, gbc.sp());
        EXPECT(0x1040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D0
        gbc.setState(0x9265, 0x1ef5, 0x5e60, 0x8e8d, 0x4bc7, 0x5ac3, 0x1, 0x1);
        gbc.writeMem(0x9265, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1ef5, gbc.sp());
        EXPECT(0x9267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9265));
        EXPECT(0x37, gbc.readMem(0x9266));
        // CB 37 00D1
        gbc.setState(0x5941, 0x26dd, 0x6cd0, 0xb4cc, 0x7d63, 0xd9c0, 0x0, 0x1);
        gbc.writeMem(0x5941, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26dd, gbc.sp());
        EXPECT(0x5943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D2
        gbc.setState(0xe0f, 0x91ce, 0xccb0, 0x2fcd, 0xbf4b, 0xb754, 0x0, 0x1);
        gbc.writeMem(0xe0f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91ce, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D3
        gbc.setState(0x75e6, 0x2433, 0xa790, 0xb6a1, 0x2d0b, 0xb356, 0x1, 0x1);
        gbc.writeMem(0x75e6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2433, gbc.sp());
        EXPECT(0x75e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D4
        gbc.setState(0x6585, 0x4a83, 0x6dc0, 0x8edc, 0x33fd, 0x73e1, 0x0, 0x1);
        gbc.writeMem(0x6585, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0x6587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D5
        gbc.setState(0xf99, 0xae46, 0xe20, 0x5c75, 0x2c9f, 0x7033, 0x1, 0x0);
        gbc.writeMem(0xf99, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xae46, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D6
        gbc.setState(0x9bea, 0x40df, 0x8040, 0x8d99, 0x38f4, 0xc4a9, 0x0, 0x0);
        gbc.writeMem(0x9bea, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x40df, gbc.sp());
        EXPECT(0x9bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bea));
        EXPECT(0x37, gbc.readMem(0x9beb));
        // CB 37 00D7
        gbc.setState(0x7e6a, 0xe8c0, 0xf960, 0xcc06, 0x5c5c, 0x8a30, 0x0, 0x0);
        gbc.writeMem(0x7e6a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe8c0, gbc.sp());
        EXPECT(0x7e6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00D8
        gbc.setState(0x8071, 0x6516, 0xf380, 0x787, 0x30c4, 0xec0f, 0x0, 0x0);
        gbc.writeMem(0x8071, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6516, gbc.sp());
        EXPECT(0x8073, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8071));
        EXPECT(0x37, gbc.readMem(0x8072));
        // CB 37 00D9
        gbc.setState(0xc67e, 0x1d83, 0xfd30, 0xf00c, 0xcdb1, 0xc9aa, 0x1, 0x0);
        gbc.writeMem(0xc67e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1d83, gbc.sp());
        EXPECT(0xc680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67e));
        EXPECT(0x37, gbc.readMem(0xc67f));
        // CB 37 00DA
        gbc.setState(0x652b, 0xa5f4, 0xaa10, 0x192f, 0x4c19, 0x5328, 0x0, 0x0);
        gbc.writeMem(0x652b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa5f4, gbc.sp());
        EXPECT(0x652d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00DB
        gbc.setState(0xd357, 0x7d1e, 0xb8d0, 0x40b8, 0x7073, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0xd357, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7d1e, gbc.sp());
        EXPECT(0xd359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd357));
        EXPECT(0x37, gbc.readMem(0xd358));
        // CB 37 00DC
        gbc.setState(0xee9c, 0xa625, 0xe920, 0x7d80, 0x60bf, 0x93d3, 0x1, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa625, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9c));
        EXPECT(0x37, gbc.readMem(0xee9d));
        // CB 37 00DD
        gbc.setState(0x5815, 0x85e3, 0x8c60, 0x6413, 0xc559, 0x9651, 0x1, 0x0);
        gbc.writeMem(0x5815, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x85e3, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00DE
        gbc.setState(0xeadb, 0x54a8, 0xb000, 0x4c3b, 0xbd01, 0xb873, 0x0, 0x0);
        gbc.writeMem(0xeadb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x54a8, gbc.sp());
        EXPECT(0xeadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeadb));
        EXPECT(0x37, gbc.readMem(0xeadc));
        // CB 37 00DF
        gbc.setState(0x75d3, 0x406b, 0x3410, 0xe454, 0xcddf, 0xf041, 0x1, 0x1);
        gbc.writeMem(0x75d3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x406b, gbc.sp());
        EXPECT(0x75d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E0
        gbc.setState(0x754f, 0x4e80, 0xf30, 0xd6e9, 0x2eb3, 0x257e, 0x1, 0x0);
        gbc.writeMem(0x754f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E1
        gbc.setState(0x3f9a, 0x760a, 0x6170, 0x55de, 0x811d, 0xcd7c, 0x0, 0x0);
        gbc.writeMem(0x3f9a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x760a, gbc.sp());
        EXPECT(0x3f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E2
        gbc.setState(0x1da3, 0xe36c, 0xd0a0, 0x3c1a, 0x4541, 0x8445, 0x0, 0x0);
        gbc.writeMem(0x1da3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe36c, gbc.sp());
        EXPECT(0x1da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E3
        gbc.setState(0x1859, 0x1d5e, 0x9b60, 0x1b2a, 0xd5f9, 0x5f8b, 0x1, 0x0);
        gbc.writeMem(0x1859, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1d5e, gbc.sp());
        EXPECT(0x185b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E4
        gbc.setState(0xdfd1, 0xc360, 0xb370, 0x59aa, 0x7787, 0x3c61, 0x0, 0x0);
        gbc.writeMem(0xdfd1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc360, gbc.sp());
        EXPECT(0xdfd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd1));
        EXPECT(0x37, gbc.readMem(0xdfd2));
        // CB 37 00E5
        gbc.setState(0x9ccb, 0x4dd0, 0x180, 0x4e96, 0x6d62, 0x297f, 0x1, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4dd0, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccb));
        EXPECT(0x37, gbc.readMem(0x9ccc));
        // CB 37 00E6
        gbc.setState(0x6848, 0x8fe4, 0x7100, 0x438e, 0x4103, 0x3f42, 0x0, 0x0);
        gbc.writeMem(0x6848, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8fe4, gbc.sp());
        EXPECT(0x684a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00E7
        gbc.setState(0x89fd, 0x5968, 0x9700, 0x2a6a, 0x69d3, 0x5de, 0x0, 0x1);
        gbc.writeMem(0x89fd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5968, gbc.sp());
        EXPECT(0x89ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fd));
        EXPECT(0x37, gbc.readMem(0x89fe));
        // CB 37 00E8
        gbc.setState(0xdc7f, 0x6e04, 0xc710, 0x569e, 0xf57, 0x5f44, 0x1, 0x0);
        gbc.writeMem(0xdc7f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6e04, gbc.sp());
        EXPECT(0xdc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc7f));
        EXPECT(0x37, gbc.readMem(0xdc80));
        // CB 37 00E9
        gbc.setState(0x14bc, 0x283a, 0x9ac0, 0x35b5, 0x5b0c, 0xddec, 0x0, 0x0);
        gbc.writeMem(0x14bc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0x14be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00EA
        gbc.setState(0x66ec, 0x7fd, 0xcf90, 0x386c, 0x3c96, 0x1ad7, 0x0, 0x0);
        gbc.writeMem(0x66ec, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0x66ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00EB
        gbc.setState(0x62e6, 0xfe68, 0x9b0, 0x7ae8, 0xae4e, 0x40f0, 0x1, 0x0);
        gbc.writeMem(0x62e6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0x62e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00ED
        gbc.setState(0xca24, 0x9bca, 0xb120, 0x2413, 0x2d3c, 0xff57, 0x1, 0x0);
        gbc.writeMem(0xca24, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0xca26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca24));
        EXPECT(0x37, gbc.readMem(0xca25));
        // CB 37 00EE
        gbc.setState(0xdc2e, 0x6fde, 0xaac0, 0x551a, 0x82e1, 0x3bd6, 0x1, 0x0);
        gbc.writeMem(0xdc2e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6fde, gbc.sp());
        EXPECT(0xdc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2e));
        EXPECT(0x37, gbc.readMem(0xdc2f));
        // CB 37 00EF
        gbc.setState(0x2cdd, 0xb37d, 0xc7c0, 0xd36e, 0x977c, 0x2f25, 0x0, 0x0);
        gbc.writeMem(0x2cdd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb37d, gbc.sp());
        EXPECT(0x2cdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F0
        gbc.setState(0x9157, 0x6dba, 0x6bd0, 0x79a6, 0xd1d3, 0x6a04, 0x1, 0x1);
        gbc.writeMem(0x9157, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6dba, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9157));
        EXPECT(0x37, gbc.readMem(0x9158));
        // CB 37 00F1
        gbc.setState(0x9a4e, 0xeb9c, 0x8970, 0x692f, 0xe9c7, 0xbef8, 0x0, 0x0);
        gbc.writeMem(0x9a4e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xeb9c, gbc.sp());
        EXPECT(0x9a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a4e));
        EXPECT(0x37, gbc.readMem(0x9a4f));
        // CB 37 00F2
        gbc.setState(0x485c, 0xba66, 0xd180, 0xc9ae, 0xdde7, 0x23a0, 0x0, 0x0);
        gbc.writeMem(0x485c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xba66, gbc.sp());
        EXPECT(0x485e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F3
        gbc.setState(0xea41, 0xecc1, 0x3e90, 0x18ff, 0x37db, 0x3f37, 0x1, 0x1);
        gbc.writeMem(0xea41, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0xea43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea41));
        EXPECT(0x37, gbc.readMem(0xea42));
        // CB 37 00F4
        gbc.setState(0x6a1b, 0xe4d0, 0x5280, 0x1d3a, 0x5736, 0x4616, 0x1, 0x1);
        gbc.writeMem(0x6a1b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0x6a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F5
        gbc.setState(0xa7b, 0xe570, 0x9600, 0x25e8, 0x4dee, 0x66c6, 0x1, 0x0);
        gbc.writeMem(0xa7b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0xa7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F6
        gbc.setState(0xcfba, 0xba, 0x9100, 0xe539, 0x6c00, 0xee8, 0x1, 0x0);
        gbc.writeMem(0xcfba, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xba, gbc.sp());
        EXPECT(0xcfbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfba));
        EXPECT(0x37, gbc.readMem(0xcfbb));
        // CB 37 00F7
        gbc.setState(0x620, 0x78ea, 0xd9d0, 0xacb1, 0x21be, 0x2ba9, 0x1, 0x0);
        gbc.writeMem(0x620, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x78ea, gbc.sp());
        EXPECT(0x622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F8
        gbc.setState(0x2480, 0xabbd, 0x6300, 0xac33, 0xfbf9, 0x975d, 0x0, 0x1);
        gbc.writeMem(0x2480, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xabbd, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00F9
        gbc.setState(0xe7b2, 0xb478, 0x2940, 0xb31a, 0x9a5d, 0x8e06, 0x1, 0x1);
        gbc.writeMem(0xe7b2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb478, gbc.sp());
        EXPECT(0xe7b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b2));
        EXPECT(0x37, gbc.readMem(0xe7b3));
        // CB 37 00FA
        gbc.setState(0xe101, 0x1bf3, 0x6380, 0xae3d, 0xff15, 0x7cff, 0x0, 0x0);
        gbc.writeMem(0xe101, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1bf3, gbc.sp());
        EXPECT(0xe103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe101));
        EXPECT(0x37, gbc.readMem(0xe102));
        // CB 37 00FB
        gbc.setState(0xbc54, 0x95fb, 0x1f90, 0x5ae2, 0xdda1, 0x5356, 0x0, 0x1);
        gbc.writeMem(0xbc54, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x95fb, gbc.sp());
        EXPECT(0xbc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc54));
        EXPECT(0x37, gbc.readMem(0xbc55));
        // CB 37 00FC
        gbc.setState(0xe047, 0x8a97, 0xa7f0, 0xcd, 0xbb5c, 0xc0b9, 0x1, 0x1);
        gbc.writeMem(0xe047, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a97, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0x37, gbc.readMem(0xe048));
        // CB 37 00FD
        gbc.setState(0x4559, 0x173d, 0xd340, 0xa19e, 0x8f54, 0xacdc, 0x1, 0x0);
        gbc.writeMem(0x4559, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0x455b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 00FE
        gbc.setState(0xaa05, 0xc4ec, 0xa5a0, 0x1ea1, 0xeaf6, 0x36df, 0x1, 0x1);
        gbc.writeMem(0xaa05, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc4ec, gbc.sp());
        EXPECT(0xaa07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa05));
        EXPECT(0x37, gbc.readMem(0xaa06));
        // CB 37 00FF
        gbc.setState(0x998d, 0xd5e6, 0x9320, 0x13e8, 0x5b16, 0xaaf0, 0x0, 0x1);
        gbc.writeMem(0x998d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xd5e6, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998d));
        EXPECT(0x37, gbc.readMem(0x998e));
        // CB 37 0100
        gbc.setState(0x7fb5, 0xa692, 0xb40, 0x8e6f, 0xb6fe, 0xe71a, 0x1, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa692, gbc.sp());
        EXPECT(0x7fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0101
        gbc.setState(0xcd18, 0xc24b, 0x40f0, 0x3a31, 0x9f48, 0x6011, 0x0, 0x0);
        gbc.writeMem(0xcd18, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc24b, gbc.sp());
        EXPECT(0xcd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd18));
        EXPECT(0x37, gbc.readMem(0xcd19));
        // CB 37 0102
        gbc.setState(0x7032, 0xb5c8, 0x1d60, 0xf5cc, 0x8e5a, 0x4c53, 0x1, 0x1);
        gbc.writeMem(0x7032, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0x7034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0103
        gbc.setState(0x2ddf, 0x4f77, 0x6940, 0x2bf9, 0x6b9d, 0x68bb, 0x0, 0x1);
        gbc.writeMem(0x2ddf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4f77, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0104
        gbc.setState(0x3330, 0xa39a, 0x9af0, 0x86da, 0xb118, 0x2301, 0x0, 0x0);
        gbc.writeMem(0x3330, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa39a, gbc.sp());
        EXPECT(0x3332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0105
        gbc.setState(0x4179, 0x544a, 0xd9d0, 0xf029, 0x1b07, 0x6da5, 0x0, 0x0);
        gbc.writeMem(0x4179, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x544a, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0106
        gbc.setState(0x1f7c, 0xf279, 0x7d80, 0x312f, 0x7c14, 0x663a, 0x0, 0x1);
        gbc.writeMem(0x1f7c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf279, gbc.sp());
        EXPECT(0x1f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0107
        gbc.setState(0xe94, 0xe1a5, 0x6090, 0x35c7, 0x1688, 0x51e6, 0x0, 0x1);
        gbc.writeMem(0xe94, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe1a5, gbc.sp());
        EXPECT(0xe96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0108
        gbc.setState(0x66f8, 0x713, 0xb270, 0xb112, 0x593e, 0xb84e, 0x1, 0x0);
        gbc.writeMem(0x66f8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0109
        gbc.setState(0xbfe5, 0x56fd, 0x6c60, 0x6a21, 0xc77b, 0x8c7c, 0x1, 0x0);
        gbc.writeMem(0xbfe5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x56fd, gbc.sp());
        EXPECT(0xbfe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe5));
        EXPECT(0x37, gbc.readMem(0xbfe6));
        // CB 37 010A
        gbc.setState(0x7416, 0x22c5, 0x54e0, 0xa1d9, 0x1bcd, 0x287b, 0x1, 0x1);
        gbc.writeMem(0x7416, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x22c5, gbc.sp());
        EXPECT(0x7418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 010B
        gbc.setState(0x4b27, 0x1048, 0x2b40, 0xed42, 0x4422, 0x3951, 0x0, 0x0);
        gbc.writeMem(0x4b27, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1048, gbc.sp());
        EXPECT(0x4b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 010C
        gbc.setState(0x6647, 0x9d6f, 0x9ca0, 0xb764, 0xc51, 0x8102, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9d6f, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 010D
        gbc.setState(0xb816, 0x9569, 0xd030, 0xeb3e, 0x90ed, 0x7dbe, 0x0, 0x0);
        gbc.writeMem(0xb816, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9569, gbc.sp());
        EXPECT(0xb818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb816));
        EXPECT(0x37, gbc.readMem(0xb817));
        // CB 37 010E
        gbc.setState(0x92d6, 0x539b, 0x1fc0, 0x5bd0, 0xce47, 0xc6d6, 0x0, 0x1);
        gbc.writeMem(0x92d6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x539b, gbc.sp());
        EXPECT(0x92d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d6));
        EXPECT(0x37, gbc.readMem(0x92d7));
        // CB 37 010F
        gbc.setState(0xd9d1, 0x24f1, 0xa3c0, 0xc73d, 0x9587, 0x436, 0x1, 0x1);
        gbc.writeMem(0xd9d1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0xd9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d1));
        EXPECT(0x37, gbc.readMem(0xd9d2));
        // CB 37 0110
        gbc.setState(0xdc2c, 0xf6b1, 0xeba0, 0x366a, 0xde33, 0x7d63, 0x0, 0x0);
        gbc.writeMem(0xdc2c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0xdc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2c));
        EXPECT(0x37, gbc.readMem(0xdc2d));
        // CB 37 0111
        gbc.setState(0xff2, 0x61e7, 0x3880, 0x129d, 0x6d35, 0x5e33, 0x0, 0x0);
        gbc.writeMem(0xff2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x61e7, gbc.sp());
        EXPECT(0xff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0112
        gbc.setState(0xee9c, 0xd86b, 0xb990, 0x79c6, 0xbd, 0x84b9, 0x1, 0x1);
        gbc.writeMem(0xee9c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd86b, gbc.sp());
        EXPECT(0xee9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9c));
        EXPECT(0x37, gbc.readMem(0xee9d));
        // CB 37 0113
        gbc.setState(0x4d01, 0x1bf1, 0xa9b0, 0x8dee, 0x6593, 0x5ce5, 0x1, 0x0);
        gbc.writeMem(0x4d01, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1bf1, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0115
        gbc.setState(0x8913, 0x7f6a, 0x75a0, 0xef5b, 0xf467, 0x8e59, 0x0, 0x0);
        gbc.writeMem(0x8913, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7f6a, gbc.sp());
        EXPECT(0x8915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8913));
        EXPECT(0x37, gbc.readMem(0x8914));
        // CB 37 0117
        gbc.setState(0xc21f, 0xdd04, 0x3a70, 0x78e, 0xb91d, 0x5b00, 0x1, 0x1);
        gbc.writeMem(0xc21f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdd04, gbc.sp());
        EXPECT(0xc221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc21f));
        EXPECT(0x37, gbc.readMem(0xc220));
        // CB 37 0118
        gbc.setState(0xea63, 0x74c7, 0x9bc0, 0xb232, 0x8aa4, 0x2e1e, 0x1, 0x1);
        gbc.writeMem(0xea63, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x74c7, gbc.sp());
        EXPECT(0xea65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea63));
        EXPECT(0x37, gbc.readMem(0xea64));
        // CB 37 0119
        gbc.setState(0xb11a, 0xe73, 0xdf70, 0x1a2e, 0x6f20, 0x9a42, 0x0, 0x1);
        gbc.writeMem(0xb11a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0x37, gbc.readMem(0xb11b));
        // CB 37 011A
        gbc.setState(0x4b3d, 0xb2ee, 0x2f30, 0xc316, 0x96af, 0xbd4a, 0x1, 0x1);
        gbc.writeMem(0x4b3d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb2ee, gbc.sp());
        EXPECT(0x4b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 011B
        gbc.setState(0x6855, 0xb081, 0x7110, 0xa87a, 0x8eeb, 0xd446, 0x1, 0x0);
        gbc.writeMem(0x6855, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0x6857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 011C
        gbc.setState(0xc685, 0xc1ac, 0xdfa0, 0x8c27, 0x60f9, 0x7bb7, 0x0, 0x0);
        gbc.writeMem(0xc685, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc1ac, gbc.sp());
        EXPECT(0xc687, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc685));
        EXPECT(0x37, gbc.readMem(0xc686));
        // CB 37 011D
        gbc.setState(0x9e55, 0x68e3, 0x5b00, 0x53f6, 0xe7d5, 0x988c, 0x1, 0x0);
        gbc.writeMem(0x9e55, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x68e3, gbc.sp());
        EXPECT(0x9e57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e55));
        EXPECT(0x37, gbc.readMem(0x9e56));
        // CB 37 011E
        gbc.setState(0xb8ff, 0xa1a2, 0x64d0, 0x92f9, 0x5c6f, 0x4a6e, 0x0, 0x0);
        gbc.writeMem(0xb8ff, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0xb901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ff));
        EXPECT(0x37, gbc.readMem(0xb900));
        // CB 37 011F
        gbc.setState(0xd6bb, 0x93ee, 0xf010, 0x2c47, 0xdc19, 0x945e, 0x0, 0x0);
        gbc.writeMem(0xd6bb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0xd6bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bb));
        EXPECT(0x37, gbc.readMem(0xd6bc));
        // CB 37 0120
        gbc.setState(0x71c, 0xfdc, 0x75f0, 0xc83, 0x75a7, 0x61f2, 0x1, 0x1);
        gbc.writeMem(0x71c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfdc, gbc.sp());
        EXPECT(0x71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0121
        gbc.setState(0x16fe, 0x714a, 0x3a0, 0xff5a, 0x5462, 0xc118, 0x1, 0x1);
        gbc.writeMem(0x16fe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x714a, gbc.sp());
        EXPECT(0x1700, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0122
        gbc.setState(0xebb6, 0x3815, 0xeda0, 0x7e34, 0x30dd, 0xf212, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3815, gbc.sp());
        EXPECT(0xebb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb6));
        EXPECT(0x37, gbc.readMem(0xebb7));
        // CB 37 0123
        gbc.setState(0x4a8f, 0x2a1c, 0x6ea0, 0x6338, 0x26c, 0xd42c, 0x1, 0x0);
        gbc.writeMem(0x4a8f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2a1c, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0124
        gbc.setState(0xebb3, 0x5a83, 0xbb10, 0xaa80, 0x56a, 0xf10f, 0x1, 0x1);
        gbc.writeMem(0xebb3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5a83, gbc.sp());
        EXPECT(0xebb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb3));
        EXPECT(0x37, gbc.readMem(0xebb4));
        // CB 37 0125
        gbc.setState(0xd6af, 0xbb02, 0xee20, 0x42f6, 0x7ff2, 0x8371, 0x0, 0x1);
        gbc.writeMem(0xd6af, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbb02, gbc.sp());
        EXPECT(0xd6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6af));
        EXPECT(0x37, gbc.readMem(0xd6b0));
        // CB 37 0126
        gbc.setState(0x238e, 0x51b3, 0x48b0, 0x22e7, 0x395d, 0x3a2b, 0x0, 0x1);
        gbc.writeMem(0x238e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0x2390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0127
        gbc.setState(0x35b, 0x96da, 0x6800, 0x900a, 0x62e2, 0xb602, 0x0, 0x1);
        gbc.writeMem(0x35b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x96da, gbc.sp());
        EXPECT(0x35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0128
        gbc.setState(0x4c14, 0x66cd, 0x42c0, 0xc9c1, 0x8bb6, 0xd171, 0x0, 0x1);
        gbc.writeMem(0x4c14, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x66cd, gbc.sp());
        EXPECT(0x4c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0129
        gbc.setState(0xcd3b, 0x3f5f, 0x6d10, 0xad15, 0xc68a, 0x7e1, 0x1, 0x1);
        gbc.writeMem(0xcd3b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0xcd3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3b));
        EXPECT(0x37, gbc.readMem(0xcd3c));
        // CB 37 012B
        gbc.setState(0xa190, 0xd7e2, 0x15a0, 0xa163, 0xaaf7, 0x9f0f, 0x1, 0x0);
        gbc.writeMem(0xa190, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd7e2, gbc.sp());
        EXPECT(0xa192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa190));
        EXPECT(0x37, gbc.readMem(0xa191));
        // CB 37 012C
        gbc.setState(0xd502, 0x71b7, 0x9be0, 0x9347, 0xcd33, 0xd2a2, 0x1, 0x0);
        gbc.writeMem(0xd502, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0xd504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd502));
        EXPECT(0x37, gbc.readMem(0xd503));
        // CB 37 012D
        gbc.setState(0xbfee, 0x8b61, 0x58e0, 0x8f39, 0x6a12, 0x9081, 0x1, 0x1);
        gbc.writeMem(0xbfee, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8b61, gbc.sp());
        EXPECT(0xbff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfee));
        EXPECT(0x37, gbc.readMem(0xbfef));
        // CB 37 012E
        gbc.setState(0x6b16, 0xbefc, 0x3cb0, 0x3e64, 0x29f, 0x9f45, 0x1, 0x0);
        gbc.writeMem(0x6b16, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbefc, gbc.sp());
        EXPECT(0x6b18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 012F
        gbc.setState(0xe272, 0xc0f6, 0x9490, 0x458b, 0x8c5, 0x3e4b, 0x0, 0x0);
        gbc.writeMem(0xe272, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc0f6, gbc.sp());
        EXPECT(0xe274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe272));
        EXPECT(0x37, gbc.readMem(0xe273));
        // CB 37 0130
        gbc.setState(0x6689, 0xcb6a, 0x4ed0, 0xc4ed, 0x1fb6, 0x475c, 0x0, 0x1);
        gbc.writeMem(0x6689, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb6a, gbc.sp());
        EXPECT(0x668b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0131
        gbc.setState(0xb691, 0xc06, 0xa00, 0xddde, 0xf4fa, 0x2065, 0x1, 0x1);
        gbc.writeMem(0xb691, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc06, gbc.sp());
        EXPECT(0xb693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb691));
        EXPECT(0x37, gbc.readMem(0xb692));
        // CB 37 0132
        gbc.setState(0x222d, 0x49f6, 0x2140, 0x6216, 0x583d, 0x4a5d, 0x1, 0x0);
        gbc.writeMem(0x222d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x49f6, gbc.sp());
        EXPECT(0x222f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0133
        gbc.setState(0x251f, 0x718f, 0xce60, 0x2a3b, 0x8773, 0x3f4a, 0x0, 0x1);
        gbc.writeMem(0x251f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x2521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0134
        gbc.setState(0x35b8, 0x4883, 0xb660, 0x70e0, 0xa610, 0x14af, 0x0, 0x1);
        gbc.writeMem(0x35b8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4883, gbc.sp());
        EXPECT(0x35ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0135
        gbc.setState(0xe427, 0x7543, 0x2bb0, 0x492e, 0x93e5, 0x20db, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0xe429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe427));
        EXPECT(0x37, gbc.readMem(0xe428));
        // CB 37 0136
        gbc.setState(0x2e94, 0x491c, 0xbde0, 0x6fc8, 0x1d59, 0x35c4, 0x0, 0x1);
        gbc.writeMem(0x2e94, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x491c, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0137
        gbc.setState(0xaac8, 0x6eb0, 0x9120, 0x20ad, 0x9680, 0x7ba8, 0x1, 0x0);
        gbc.writeMem(0xaac8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6eb0, gbc.sp());
        EXPECT(0xaaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac8));
        EXPECT(0x37, gbc.readMem(0xaac9));
        // CB 37 0138
        gbc.setState(0x5024, 0x6d4d, 0x8300, 0x5809, 0x23a1, 0xe4aa, 0x0, 0x0);
        gbc.writeMem(0x5024, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0139
        gbc.setState(0x68b4, 0xfe6b, 0x6670, 0x4166, 0x3b67, 0xe504, 0x1, 0x0);
        gbc.writeMem(0x68b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfe6b, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 013A
        gbc.setState(0x5833, 0x8f86, 0x67d0, 0x3ee3, 0xe997, 0x3786, 0x1, 0x1);
        gbc.writeMem(0x5833, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x5835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 013B
        gbc.setState(0xc947, 0x91cd, 0xd00, 0x8198, 0xb28a, 0xc00a, 0x1, 0x1);
        gbc.writeMem(0xc947, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0xc949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc947));
        EXPECT(0x37, gbc.readMem(0xc948));
        // CB 37 013C
        gbc.setState(0xe9c1, 0x17f7, 0x7db0, 0x67e, 0x7e41, 0x7a45, 0x0, 0x0);
        gbc.writeMem(0xe9c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x17f7, gbc.sp());
        EXPECT(0xe9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c1));
        EXPECT(0x37, gbc.readMem(0xe9c2));
        // CB 37 013D
        gbc.setState(0x2683, 0x2e15, 0xaf50, 0xb525, 0x1953, 0x8d33, 0x0, 0x1);
        gbc.writeMem(0x2683, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2e15, gbc.sp());
        EXPECT(0x2685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 013E
        gbc.setState(0x198e, 0xacd4, 0x1730, 0xc896, 0x69c5, 0x4744, 0x1, 0x1);
        gbc.writeMem(0x198e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xacd4, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 013F
        gbc.setState(0x8851, 0x31b0, 0x9240, 0xb2bf, 0x76cc, 0x67fd, 0x1, 0x0);
        gbc.writeMem(0x8851, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x31b0, gbc.sp());
        EXPECT(0x8853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8851));
        EXPECT(0x37, gbc.readMem(0x8852));
        // CB 37 0140
        gbc.setState(0xc2c9, 0xd15e, 0x9280, 0xe4, 0x41cf, 0xad5b, 0x0, 0x0);
        gbc.writeMem(0xc2c9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd15e, gbc.sp());
        EXPECT(0xc2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c9));
        EXPECT(0x37, gbc.readMem(0xc2ca));
        // CB 37 0141
        gbc.setState(0x911, 0x716, 0x2710, 0xc720, 0x836f, 0x1a48, 0x0, 0x0);
        gbc.writeMem(0x911, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x716, gbc.sp());
        EXPECT(0x913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0142
        gbc.setState(0x70a3, 0x6e65, 0x5630, 0x646e, 0x1749, 0xd465, 0x0, 0x0);
        gbc.writeMem(0x70a3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6e65, gbc.sp());
        EXPECT(0x70a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0143
        gbc.setState(0xfe, 0xf060, 0xd460, 0xe356, 0xba04, 0x8ffc, 0x1, 0x0);
        gbc.writeMem(0xfe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0144
        gbc.setState(0x8888, 0x3ef, 0xa80, 0xbf2b, 0x5d14, 0x44d1, 0x1, 0x1);
        gbc.writeMem(0x8888, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3ef, gbc.sp());
        EXPECT(0x888a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8888));
        EXPECT(0x37, gbc.readMem(0x8889));
        // CB 37 0145
        gbc.setState(0xd8fc, 0x3d9d, 0xe700, 0x3d67, 0xfac, 0xad54, 0x1, 0x1);
        gbc.writeMem(0xd8fc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d9d, gbc.sp());
        EXPECT(0xd8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8fc));
        EXPECT(0x37, gbc.readMem(0xd8fd));
        // CB 37 0146
        gbc.setState(0xbe91, 0x12ea, 0x58c0, 0x7d49, 0x741c, 0x6321, 0x0, 0x0);
        gbc.writeMem(0xbe91, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xbe93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe91));
        EXPECT(0x37, gbc.readMem(0xbe92));
        // CB 37 0147
        gbc.setState(0x75c, 0x8eb7, 0xdf20, 0x99ee, 0xd1e1, 0x67d, 0x0, 0x0);
        gbc.writeMem(0x75c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0148
        gbc.setState(0xe7f6, 0x5565, 0xa70, 0x7b7, 0xeb7, 0xdaa3, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5565, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0x37, gbc.readMem(0xe7f7));
        // CB 37 0149
        gbc.setState(0x8869, 0x445e, 0x3460, 0x29c7, 0x9051, 0xaba9, 0x1, 0x0);
        gbc.writeMem(0x8869, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x445e, gbc.sp());
        EXPECT(0x886b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8869));
        EXPECT(0x37, gbc.readMem(0x886a));
        // CB 37 014A
        gbc.setState(0xd8ff, 0xe7c7, 0x8c0, 0x5467, 0x679c, 0x8c30, 0x0, 0x1);
        gbc.writeMem(0xd8ff, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe7c7, gbc.sp());
        EXPECT(0xd901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ff));
        EXPECT(0x37, gbc.readMem(0xd900));
        // CB 37 014B
        gbc.setState(0xad55, 0x997b, 0x3ad0, 0x124f, 0xe59d, 0x8603, 0x1, 0x1);
        gbc.writeMem(0xad55, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x997b, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad55));
        EXPECT(0x37, gbc.readMem(0xad56));
        // CB 37 014C
        gbc.setState(0x1e2b, 0x3644, 0xe9a0, 0x2eca, 0x3324, 0xdb82, 0x0, 0x1);
        gbc.writeMem(0x1e2b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3644, gbc.sp());
        EXPECT(0x1e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 014D
        gbc.setState(0x3228, 0xa84e, 0x3360, 0x17, 0x1111, 0xad3e, 0x1, 0x1);
        gbc.writeMem(0x3228, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa84e, gbc.sp());
        EXPECT(0x322a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 014E
        gbc.setState(0x8d7e, 0xe19b, 0x6ed0, 0xbe, 0xb6be, 0xce76, 0x0, 0x0);
        gbc.writeMem(0x8d7e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe19b, gbc.sp());
        EXPECT(0x8d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7e));
        EXPECT(0x37, gbc.readMem(0x8d7f));
        // CB 37 014F
        gbc.setState(0x1572, 0x20cf, 0x57e0, 0x66d4, 0x4e43, 0x21e4, 0x1, 0x1);
        gbc.writeMem(0x1572, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x1574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0150
        gbc.setState(0x5ed5, 0x6008, 0xca40, 0xc305, 0x7617, 0x4845, 0x0, 0x1);
        gbc.writeMem(0x5ed5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6008, gbc.sp());
        EXPECT(0x5ed7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0151
        gbc.setState(0xc968, 0x66ac, 0xe700, 0x1fc0, 0xd923, 0x1104, 0x1, 0x1);
        gbc.writeMem(0xc968, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x66ac, gbc.sp());
        EXPECT(0xc96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc968));
        EXPECT(0x37, gbc.readMem(0xc969));
        // CB 37 0152
        gbc.setState(0xefbb, 0xf14d, 0x55b0, 0x6596, 0xffd0, 0xaeed, 0x0, 0x1);
        gbc.writeMem(0xefbb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf14d, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbb));
        EXPECT(0x37, gbc.readMem(0xefbc));
        // CB 37 0153
        gbc.setState(0xd19, 0x85ba, 0xa8b0, 0x1e2a, 0x146d, 0x2995, 0x0, 0x0);
        gbc.writeMem(0xd19, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x85ba, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0154
        gbc.setState(0x86fa, 0xc9b5, 0x2400, 0x7ec5, 0xc088, 0xaa24, 0x1, 0x0);
        gbc.writeMem(0x86fa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc9b5, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fa));
        EXPECT(0x37, gbc.readMem(0x86fb));
        // CB 37 0155
        gbc.setState(0x2be0, 0x22bd, 0x5770, 0xfceb, 0x6e5e, 0x1eee, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0156
        gbc.setState(0xd209, 0xf6b1, 0xc470, 0xc558, 0xa2e1, 0x2aa6, 0x0, 0x1);
        gbc.writeMem(0xd209, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf6b1, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd209));
        EXPECT(0x37, gbc.readMem(0xd20a));
        // CB 37 0157
        gbc.setState(0x32cd, 0x74b6, 0xfd90, 0xfc2c, 0x5ed8, 0xcf53, 0x1, 0x0);
        gbc.writeMem(0x32cd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x74b6, gbc.sp());
        EXPECT(0x32cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0158
        gbc.setState(0x8ca9, 0xa5a, 0xcb40, 0xb372, 0x2a0d, 0x9e5e, 0x1, 0x0);
        gbc.writeMem(0x8ca9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa5a, gbc.sp());
        EXPECT(0x8cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca9));
        EXPECT(0x37, gbc.readMem(0x8caa));
        // CB 37 0159
        gbc.setState(0x2823, 0xff59, 0xa2c0, 0x3024, 0xe2b4, 0x5a7a, 0x0, 0x0);
        gbc.writeMem(0x2823, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xff59, gbc.sp());
        EXPECT(0x2825, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 015A
        gbc.setState(0x2e50, 0x357c, 0x9f40, 0x1a3b, 0xb4d7, 0x7bf6, 0x0, 0x0);
        gbc.writeMem(0x2e50, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x357c, gbc.sp());
        EXPECT(0x2e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 015C
        gbc.setState(0x3448, 0x8eb, 0x6990, 0x738f, 0x33b1, 0x35cc, 0x0, 0x0);
        gbc.writeMem(0x3448, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8eb, gbc.sp());
        EXPECT(0x344a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 015D
        gbc.setState(0xa178, 0x6801, 0xeb60, 0x44f2, 0x588c, 0xae77, 0x0, 0x1);
        gbc.writeMem(0xa178, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6801, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa178));
        EXPECT(0x37, gbc.readMem(0xa179));
        // CB 37 015E
        gbc.setState(0xed5c, 0x4c43, 0x1f20, 0x4e43, 0x2a29, 0x5b09, 0x0, 0x1);
        gbc.writeMem(0xed5c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4c43, gbc.sp());
        EXPECT(0xed5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed5c));
        EXPECT(0x37, gbc.readMem(0xed5d));
        // CB 37 015F
        gbc.setState(0x39db, 0xfe5f, 0xc060, 0x1828, 0x1a09, 0xb73b, 0x0, 0x0);
        gbc.writeMem(0x39db, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfe5f, gbc.sp());
        EXPECT(0x39dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0160
        gbc.setState(0x3aa4, 0x2932, 0x2510, 0x2689, 0x7569, 0x5d8a, 0x0, 0x0);
        gbc.writeMem(0x3aa4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2932, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0161
        gbc.setState(0x4327, 0x5279, 0xb4c0, 0x1ee9, 0x4058, 0xe18a, 0x0, 0x0);
        gbc.writeMem(0x4327, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5279, gbc.sp());
        EXPECT(0x4329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0162
        gbc.setState(0x61c0, 0xa7ae, 0xbeb0, 0x3233, 0xae83, 0x4702, 0x1, 0x0);
        gbc.writeMem(0x61c0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa7ae, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0163
        gbc.setState(0xc81e, 0x3ba8, 0xe470, 0x2679, 0x5e49, 0x353d, 0x0, 0x0);
        gbc.writeMem(0xc81e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3ba8, gbc.sp());
        EXPECT(0xc820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81e));
        EXPECT(0x37, gbc.readMem(0xc81f));
        // CB 37 0164
        gbc.setState(0x515a, 0x5176, 0xc1f0, 0xe2, 0xa091, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0x515a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5176, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0165
        gbc.setState(0xab77, 0xcfd2, 0xb410, 0x8121, 0xeb9, 0x1627, 0x0, 0x1);
        gbc.writeMem(0xab77, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcfd2, gbc.sp());
        EXPECT(0xab79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab77));
        EXPECT(0x37, gbc.readMem(0xab78));
        // CB 37 0166
        gbc.setState(0x6fef, 0x3804, 0x6490, 0x8066, 0x5454, 0xad98, 0x1, 0x1);
        gbc.writeMem(0x6fef, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3804, gbc.sp());
        EXPECT(0x6ff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0167
        gbc.setState(0x14f6, 0xfce4, 0x3a30, 0xeba2, 0x4f1a, 0x8835, 0x1, 0x0);
        gbc.writeMem(0x14f6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfce4, gbc.sp());
        EXPECT(0x14f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0168
        gbc.setState(0x384e, 0xc485, 0xe270, 0x9b3c, 0x3f84, 0xc7b3, 0x1, 0x0);
        gbc.writeMem(0x384e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc485, gbc.sp());
        EXPECT(0x3850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0169
        gbc.setState(0x598c, 0x50cb, 0x4900, 0xf912, 0x5979, 0xd9ca, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x50cb, gbc.sp());
        EXPECT(0x598e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 016A
        gbc.setState(0x8481, 0xdbbd, 0x8400, 0x1769, 0xb64e, 0x5df2, 0x1, 0x1);
        gbc.writeMem(0x8481, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xdbbd, gbc.sp());
        EXPECT(0x8483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8481));
        EXPECT(0x37, gbc.readMem(0x8482));
        // CB 37 016B
        gbc.setState(0x3a09, 0x7db0, 0xff0, 0x7ee4, 0x2e, 0xcb55, 0x1, 0x0);
        gbc.writeMem(0x3a09, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7db0, gbc.sp());
        EXPECT(0x3a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 016C
        gbc.setState(0x804, 0x1407, 0x9d60, 0x32bc, 0x5fa6, 0x1670, 0x0, 0x0);
        gbc.writeMem(0x804, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 016D
        gbc.setState(0x5ba6, 0xaea8, 0x8f30, 0x337e, 0xd423, 0x3ff7, 0x0, 0x0);
        gbc.writeMem(0x5ba6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xaea8, gbc.sp());
        EXPECT(0x5ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 016E
        gbc.setState(0x2ea1, 0xdc68, 0x6d00, 0x9b17, 0x149f, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x2ea1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xdc68, gbc.sp());
        EXPECT(0x2ea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 016F
        gbc.setState(0xee9d, 0xccf7, 0x8550, 0x2a0d, 0x3e61, 0xe8cb, 0x1, 0x1);
        gbc.writeMem(0xee9d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xccf7, gbc.sp());
        EXPECT(0xee9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9d));
        EXPECT(0x37, gbc.readMem(0xee9e));
        // CB 37 0170
        gbc.setState(0xe99b, 0xa402, 0x4170, 0x8f5, 0x441d, 0xceaf, 0x1, 0x1);
        gbc.writeMem(0xe99b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa402, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99b));
        EXPECT(0x37, gbc.readMem(0xe99c));
        // CB 37 0171
        gbc.setState(0xd1b4, 0xb0ed, 0xdac0, 0x4c42, 0x263e, 0x46f0, 0x0, 0x0);
        gbc.writeMem(0xd1b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb0ed, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b4));
        EXPECT(0x37, gbc.readMem(0xd1b5));
        // CB 37 0172
        gbc.setState(0xc604, 0x7561, 0x2ce0, 0xa131, 0xd904, 0xc47, 0x0, 0x0);
        gbc.writeMem(0xc604, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7561, gbc.sp());
        EXPECT(0xc606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc604));
        EXPECT(0x37, gbc.readMem(0xc605));
        // CB 37 0173
        gbc.setState(0x1acf, 0x16fe, 0x480, 0x85e6, 0x3d22, 0xe499, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x16fe, gbc.sp());
        EXPECT(0x1ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0174
        gbc.setState(0x9e4b, 0x9cf9, 0xb360, 0x6dad, 0x6a39, 0x30f5, 0x1, 0x1);
        gbc.writeMem(0x9e4b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4b));
        EXPECT(0x37, gbc.readMem(0x9e4c));
        // CB 37 0175
        gbc.setState(0xbbcb, 0x471c, 0x5bb0, 0xbcd9, 0x4103, 0x9d81, 0x0, 0x1);
        gbc.writeMem(0xbbcb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x471c, gbc.sp());
        EXPECT(0xbbcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcb));
        EXPECT(0x37, gbc.readMem(0xbbcc));
        // CB 37 0176
        gbc.setState(0xdbb3, 0x8586, 0xf0f0, 0x9b0a, 0x1b1f, 0x9861, 0x1, 0x0);
        gbc.writeMem(0xdbb3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8586, gbc.sp());
        EXPECT(0xdbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb3));
        EXPECT(0x37, gbc.readMem(0xdbb4));
        // CB 37 0177
        gbc.setState(0x84d4, 0xd8cf, 0x3810, 0xda0, 0x6b6c, 0x6d95, 0x0, 0x1);
        gbc.writeMem(0x84d4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd8cf, gbc.sp());
        EXPECT(0x84d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d4));
        EXPECT(0x37, gbc.readMem(0x84d5));
        // CB 37 0178
        gbc.setState(0xb078, 0x5ebf, 0x7280, 0xd984, 0x800, 0x5d15, 0x1, 0x1);
        gbc.writeMem(0xb078, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0xb07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb078));
        EXPECT(0x37, gbc.readMem(0xb079));
        // CB 37 0179
        gbc.setState(0x6b2a, 0x1c9a, 0x5710, 0xad84, 0xfca4, 0xee39, 0x1, 0x0);
        gbc.writeMem(0x6b2a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1c9a, gbc.sp());
        EXPECT(0x6b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 017A
        gbc.setState(0xb130, 0xc152, 0x6f10, 0xab45, 0x2172, 0xa90e, 0x1, 0x1);
        gbc.writeMem(0xb130, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc152, gbc.sp());
        EXPECT(0xb132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb130));
        EXPECT(0x37, gbc.readMem(0xb131));
        // CB 37 017B
        gbc.setState(0x506a, 0x88cf, 0x81e0, 0xd8e3, 0xcae9, 0x869b, 0x1, 0x1);
        gbc.writeMem(0x506a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88cf, gbc.sp());
        EXPECT(0x506c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 017C
        gbc.setState(0x8467, 0x3994, 0x9670, 0xb52b, 0x8676, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x8467, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3994, gbc.sp());
        EXPECT(0x8469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8467));
        EXPECT(0x37, gbc.readMem(0x8468));
        // CB 37 017D
        gbc.setState(0xde9f, 0x3698, 0xe530, 0x8413, 0x6aae, 0xec5a, 0x0, 0x1);
        gbc.writeMem(0xde9f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3698, gbc.sp());
        EXPECT(0xdea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9f));
        EXPECT(0x37, gbc.readMem(0xdea0));
        // CB 37 017E
        gbc.setState(0x507, 0x769e, 0xfe70, 0xea, 0x6483, 0x9b67, 0x1, 0x0);
        gbc.writeMem(0x507, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x769e, gbc.sp());
        EXPECT(0x509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 017F
        gbc.setState(0xb8f, 0x9fa9, 0xb060, 0x534c, 0x7f0d, 0x8f15, 0x0, 0x0);
        gbc.writeMem(0xb8f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9fa9, gbc.sp());
        EXPECT(0xb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0180
        gbc.setState(0x7a5e, 0x7f5, 0x8ae0, 0x6d04, 0xe826, 0xbd86, 0x1, 0x1);
        gbc.writeMem(0x7a5e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7f5, gbc.sp());
        EXPECT(0x7a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0181
        gbc.setState(0xbb9f, 0x1165, 0x6340, 0xdc82, 0xa65, 0xc5ab, 0x1, 0x0);
        gbc.writeMem(0xbb9f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1165, gbc.sp());
        EXPECT(0xbba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb9f));
        EXPECT(0x37, gbc.readMem(0xbba0));
        // CB 37 0182
        gbc.setState(0x9de5, 0xe2d8, 0x3180, 0xdc3f, 0x4e6c, 0x7d4a, 0x1, 0x0);
        gbc.writeMem(0x9de5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe2d8, gbc.sp());
        EXPECT(0x9de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de5));
        EXPECT(0x37, gbc.readMem(0x9de6));
        // CB 37 0183
        gbc.setState(0x5726, 0xd32, 0x5c30, 0x6315, 0x9cb8, 0xbedc, 0x0, 0x1);
        gbc.writeMem(0x5726, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd32, gbc.sp());
        EXPECT(0x5728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0184
        gbc.setState(0x524c, 0xf881, 0x5420, 0x1d54, 0x33ac, 0x9012, 0x0, 0x0);
        gbc.writeMem(0x524c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf881, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0185
        gbc.setState(0xd1ed, 0x4184, 0x44e0, 0x1d37, 0xdd4c, 0xab14, 0x1, 0x0);
        gbc.writeMem(0xd1ed, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4184, gbc.sp());
        EXPECT(0xd1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ed));
        EXPECT(0x37, gbc.readMem(0xd1ee));
        // CB 37 0186
        gbc.setState(0xc5be, 0xb0d0, 0xbf10, 0x596d, 0x8455, 0x2c22, 0x0, 0x0);
        gbc.writeMem(0xc5be, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb0d0, gbc.sp());
        EXPECT(0xc5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5be));
        EXPECT(0x37, gbc.readMem(0xc5bf));
        // CB 37 0187
        gbc.setState(0x49f5, 0xc7, 0x2f00, 0xc8ec, 0x38f9, 0x2e89, 0x1, 0x0);
        gbc.writeMem(0x49f5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc7, gbc.sp());
        EXPECT(0x49f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0188
        gbc.setState(0x4cce, 0x846, 0x320, 0xf535, 0x5826, 0x1e03, 0x0, 0x0);
        gbc.writeMem(0x4cce, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0x4cd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0189
        gbc.setState(0x1e40, 0x8499, 0xa0f0, 0xccd3, 0xd443, 0xdf85, 0x1, 0x0);
        gbc.writeMem(0x1e40, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8499, gbc.sp());
        EXPECT(0x1e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 018A
        gbc.setState(0xed11, 0xa2d9, 0xba10, 0x5786, 0xb732, 0xe0f, 0x1, 0x0);
        gbc.writeMem(0xed11, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa2d9, gbc.sp());
        EXPECT(0xed13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed11));
        EXPECT(0x37, gbc.readMem(0xed12));
        // CB 37 018B
        gbc.setState(0x9e89, 0x4810, 0xe840, 0xda78, 0xa04d, 0x4d86, 0x0, 0x1);
        gbc.writeMem(0x9e89, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4810, gbc.sp());
        EXPECT(0x9e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e89));
        EXPECT(0x37, gbc.readMem(0x9e8a));
        // CB 37 018C
        gbc.setState(0xa662, 0x8a60, 0x1e50, 0x71e8, 0xd05, 0xdaf1, 0x1, 0x0);
        gbc.writeMem(0xa662, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8a60, gbc.sp());
        EXPECT(0xa664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa662));
        EXPECT(0x37, gbc.readMem(0xa663));
        // CB 37 018D
        gbc.setState(0xb70a, 0xbe13, 0x4080, 0x168, 0x52d3, 0xe1b9, 0x1, 0x0);
        gbc.writeMem(0xb70a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbe13, gbc.sp());
        EXPECT(0xb70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70a));
        EXPECT(0x37, gbc.readMem(0xb70b));
        // CB 37 018E
        gbc.setState(0xa6a6, 0x2fe0, 0x7c60, 0x38b7, 0xf60e, 0xeeb, 0x1, 0x1);
        gbc.writeMem(0xa6a6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2fe0, gbc.sp());
        EXPECT(0xa6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a6));
        EXPECT(0x37, gbc.readMem(0xa6a7));
        // CB 37 018F
        gbc.setState(0x6e4c, 0x7809, 0xc70, 0xca20, 0xb8f6, 0x384b, 0x1, 0x1);
        gbc.writeMem(0x6e4c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0x6e4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0190
        gbc.setState(0xc6f9, 0xa675, 0xfdf0, 0xda1, 0x89fa, 0x26b4, 0x1, 0x0);
        gbc.writeMem(0xc6f9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa675, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f9));
        EXPECT(0x37, gbc.readMem(0xc6fa));
        // CB 37 0191
        gbc.setState(0x16d7, 0x42e3, 0x4af0, 0x6226, 0x6961, 0x3674, 0x1, 0x1);
        gbc.writeMem(0x16d7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0x16d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0193
        gbc.setState(0x2be2, 0x1b41, 0x240, 0xf3d7, 0x4ba5, 0xcce4, 0x0, 0x1);
        gbc.writeMem(0x2be2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1b41, gbc.sp());
        EXPECT(0x2be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0194
        gbc.setState(0x13be, 0x58e6, 0x3d80, 0x6ffa, 0xf750, 0xe254, 0x1, 0x1);
        gbc.writeMem(0x13be, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x58e6, gbc.sp());
        EXPECT(0x13c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0195
        gbc.setState(0xcfd2, 0x82da, 0x4e10, 0xd916, 0x9d42, 0x57a0, 0x1, 0x0);
        gbc.writeMem(0xcfd2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x82da, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd2));
        EXPECT(0x37, gbc.readMem(0xcfd3));
        // CB 37 0196
        gbc.setState(0xe0dd, 0x18b4, 0x5b50, 0xdb89, 0x5ebb, 0xc7f7, 0x0, 0x1);
        gbc.writeMem(0xe0dd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0xe0df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0dd));
        EXPECT(0x37, gbc.readMem(0xe0de));
        // CB 37 0197
        gbc.setState(0xd340, 0x1372, 0x9460, 0x5870, 0x8d61, 0x75d4, 0x0, 0x1);
        gbc.writeMem(0xd340, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1372, gbc.sp());
        EXPECT(0xd342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd340));
        EXPECT(0x37, gbc.readMem(0xd341));
        // CB 37 0198
        gbc.setState(0xacd, 0x6046, 0x8310, 0xbd4f, 0xa9f3, 0xdeb9, 0x0, 0x1);
        gbc.writeMem(0xacd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6046, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0199
        gbc.setState(0xd9de, 0x96af, 0x2740, 0x5502, 0x5000, 0x22ac, 0x0, 0x1);
        gbc.writeMem(0xd9de, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x96af, gbc.sp());
        EXPECT(0xd9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9de));
        EXPECT(0x37, gbc.readMem(0xd9df));
        // CB 37 019A
        gbc.setState(0x6584, 0x537e, 0x92d0, 0xe9a6, 0xdec1, 0x982, 0x0, 0x0);
        gbc.writeMem(0x6584, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0x6586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 019B
        gbc.setState(0x46e6, 0x46b9, 0xcea0, 0xb8e2, 0x687f, 0x9ca9, 0x1, 0x1);
        gbc.writeMem(0x46e6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x46b9, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 019C
        gbc.setState(0x3388, 0xce46, 0x46b0, 0x653d, 0x937, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x3388, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xce46, gbc.sp());
        EXPECT(0x338a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 019D
        gbc.setState(0x7935, 0xe74e, 0x90e0, 0x111e, 0xa922, 0x4a28, 0x1, 0x1);
        gbc.writeMem(0x7935, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe74e, gbc.sp());
        EXPECT(0x7937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 019E
        gbc.setState(0x19a2, 0xb48e, 0x2c80, 0x705f, 0xc241, 0x66d3, 0x1, 0x1);
        gbc.writeMem(0x19a2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x19a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 019F
        gbc.setState(0x43e8, 0x192c, 0x9060, 0x6b3, 0xb2eb, 0x55f1, 0x1, 0x0);
        gbc.writeMem(0x43e8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x192c, gbc.sp());
        EXPECT(0x43ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A0
        gbc.setState(0x1616, 0x8360, 0xcd70, 0x871f, 0x55e, 0xcfaa, 0x0, 0x1);
        gbc.writeMem(0x1616, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A1
        gbc.setState(0x9547, 0xb315, 0xb310, 0xc5c2, 0x42e3, 0x239b, 0x0, 0x0);
        gbc.writeMem(0x9547, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb315, gbc.sp());
        EXPECT(0x9549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9547));
        EXPECT(0x37, gbc.readMem(0x9548));
        // CB 37 01A2
        gbc.setState(0x259c, 0xaa8e, 0x4a20, 0x1eca, 0xf530, 0x1efb, 0x0, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa8e, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A3
        gbc.setState(0x22e8, 0x6cba, 0x5230, 0x5527, 0xda4f, 0x1be7, 0x0, 0x1);
        gbc.writeMem(0x22e8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6cba, gbc.sp());
        EXPECT(0x22ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A4
        gbc.setState(0x829c, 0x19a1, 0x5ad0, 0x12e2, 0xfeef, 0x261f, 0x0, 0x1);
        gbc.writeMem(0x829c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x19a1, gbc.sp());
        EXPECT(0x829e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829c));
        EXPECT(0x37, gbc.readMem(0x829d));
        // CB 37 01A5
        gbc.setState(0x1702, 0x2381, 0x53e0, 0xbaf1, 0xf76, 0x8f9d, 0x1, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2381, gbc.sp());
        EXPECT(0x1704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A6
        gbc.setState(0x9a6f, 0x3827, 0xba90, 0xf253, 0x53a2, 0x68ba, 0x0, 0x1);
        gbc.writeMem(0x9a6f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3827, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6f));
        EXPECT(0x37, gbc.readMem(0x9a70));
        // CB 37 01A7
        gbc.setState(0xd895, 0xb515, 0x98f0, 0x80f8, 0x171d, 0x4b10, 0x1, 0x0);
        gbc.writeMem(0xd895, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb515, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd895));
        EXPECT(0x37, gbc.readMem(0xd896));
        // CB 37 01A8
        gbc.setState(0x6be9, 0xc5c9, 0x91d0, 0xfa12, 0x4e3f, 0x17c8, 0x1, 0x0);
        gbc.writeMem(0x6be9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc5c9, gbc.sp());
        EXPECT(0x6beb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01A9
        gbc.setState(0x20fd, 0x3f59, 0xb910, 0xeec7, 0x3c8b, 0x136f, 0x1, 0x0);
        gbc.writeMem(0x20fd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3f59, gbc.sp());
        EXPECT(0x20ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01AA
        gbc.setState(0x5e81, 0x5ba5, 0x5aa0, 0xed4, 0x5e0f, 0x67f7, 0x1, 0x0);
        gbc.writeMem(0x5e81, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5ba5, gbc.sp());
        EXPECT(0x5e83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01AB
        gbc.setState(0x96e8, 0x76aa, 0x2860, 0xb297, 0x2363, 0xd458, 0x0, 0x0);
        gbc.writeMem(0x96e8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x76aa, gbc.sp());
        EXPECT(0x96ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e8));
        EXPECT(0x37, gbc.readMem(0x96e9));
        // CB 37 01AC
        gbc.setState(0x7be4, 0x294f, 0x3250, 0xb30c, 0x629, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0x7be4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0x7be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01AD
        gbc.setState(0x7c1d, 0xda1d, 0xa20, 0xb8b9, 0x92df, 0x3224, 0x0, 0x0);
        gbc.writeMem(0x7c1d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01AE
        gbc.setState(0xe3c1, 0x5b40, 0xfa60, 0x1021, 0xd581, 0x4b20, 0x0, 0x0);
        gbc.writeMem(0xe3c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5b40, gbc.sp());
        EXPECT(0xe3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c1));
        EXPECT(0x37, gbc.readMem(0xe3c2));
        // CB 37 01AF
        gbc.setState(0xe05b, 0x808a, 0xa420, 0x2f54, 0x79d, 0xbd59, 0x0, 0x1);
        gbc.writeMem(0xe05b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0xe05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe05b));
        EXPECT(0x37, gbc.readMem(0xe05c));
        // CB 37 01B0
        gbc.setState(0xb442, 0xfabc, 0xfa00, 0xb3d4, 0x3629, 0x3f60, 0x1, 0x0);
        gbc.writeMem(0xb442, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfabc, gbc.sp());
        EXPECT(0xb444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb442));
        EXPECT(0x37, gbc.readMem(0xb443));
        // CB 37 01B1
        gbc.setState(0x9460, 0x7838, 0xe130, 0x6da6, 0xe8e7, 0x1995, 0x1, 0x1);
        gbc.writeMem(0x9460, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x9462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9460));
        EXPECT(0x37, gbc.readMem(0x9461));
        // CB 37 01B2
        gbc.setState(0x73a3, 0x2912, 0xb350, 0x753e, 0x7cd0, 0x9a0f, 0x1, 0x1);
        gbc.writeMem(0x73a3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2912, gbc.sp());
        EXPECT(0x73a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01B3
        gbc.setState(0x53d0, 0xd195, 0x7190, 0xc99, 0xc3f8, 0x8127, 0x0, 0x1);
        gbc.writeMem(0x53d0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd195, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01B4
        gbc.setState(0xedfe, 0xb02d, 0x1490, 0x742, 0xcb8b, 0x4f00, 0x0, 0x1);
        gbc.writeMem(0xedfe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb02d, gbc.sp());
        EXPECT(0xee00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedfe));
        EXPECT(0x37, gbc.readMem(0xedff));
        // CB 37 01B5
        gbc.setState(0xabbe, 0x38b6, 0x2be0, 0x18ab, 0x781a, 0x4ffa, 0x1, 0x1);
        gbc.writeMem(0xabbe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0xabc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbe));
        EXPECT(0x37, gbc.readMem(0xabbf));
        // CB 37 01B6
        gbc.setState(0xbc9d, 0x3fc3, 0x5160, 0x8a0c, 0x7622, 0x7181, 0x1, 0x1);
        gbc.writeMem(0xbc9d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0x37, gbc.readMem(0xbc9e));
        // CB 37 01B7
        gbc.setState(0xd69c, 0xfdc4, 0xc8b0, 0x82d3, 0x8c74, 0xdb9f, 0x0, 0x1);
        gbc.writeMem(0xd69c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0xd69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69c));
        EXPECT(0x37, gbc.readMem(0xd69d));
        // CB 37 01B8
        gbc.setState(0x1dd0, 0xada1, 0xb00, 0x728b, 0x5f11, 0x4434, 0x0, 0x1);
        gbc.writeMem(0x1dd0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xada1, gbc.sp());
        EXPECT(0x1dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01B9
        gbc.setState(0x75c1, 0xe284, 0x6700, 0x8e3f, 0x226e, 0xcd6a, 0x1, 0x1);
        gbc.writeMem(0x75c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe284, gbc.sp());
        EXPECT(0x75c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01BA
        gbc.setState(0xc175, 0x4b6e, 0x7620, 0xede8, 0x6a51, 0x6aed, 0x1, 0x0);
        gbc.writeMem(0xc175, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0xc177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc175));
        EXPECT(0x37, gbc.readMem(0xc176));
        // CB 37 01BC
        gbc.setState(0xb98e, 0xe51b, 0xbdf0, 0x467d, 0x2ef1, 0x9d4, 0x1, 0x0);
        gbc.writeMem(0xb98e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe51b, gbc.sp());
        EXPECT(0xb990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb98e));
        EXPECT(0x37, gbc.readMem(0xb98f));
        // CB 37 01BD
        gbc.setState(0x9342, 0x9f53, 0x8560, 0x938d, 0x9b21, 0x3a83, 0x1, 0x1);
        gbc.writeMem(0x9342, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9f53, gbc.sp());
        EXPECT(0x9344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9342));
        EXPECT(0x37, gbc.readMem(0x9343));
        // CB 37 01BE
        gbc.setState(0x5dbf, 0xc49d, 0xf120, 0xe617, 0xd473, 0x302f, 0x1, 0x1);
        gbc.writeMem(0x5dbf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc49d, gbc.sp());
        EXPECT(0x5dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01BF
        gbc.setState(0xcbb4, 0x44a1, 0x2aa0, 0x5416, 0x5d0a, 0x6eb0, 0x0, 0x1);
        gbc.writeMem(0xcbb4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb4));
        EXPECT(0x37, gbc.readMem(0xcbb5));
        // CB 37 01C0
        gbc.setState(0x649a, 0x7bfd, 0x2af0, 0x28a4, 0xef2e, 0xb82c, 0x0, 0x1);
        gbc.writeMem(0x649a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0x649c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C1
        gbc.setState(0x5314, 0xc450, 0x8f00, 0x2660, 0x3db9, 0x6617, 0x0, 0x1);
        gbc.writeMem(0x5314, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc450, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C2
        gbc.setState(0xbd23, 0x18aa, 0x3c40, 0x3c7f, 0x4d13, 0x8951, 0x1, 0x1);
        gbc.writeMem(0xbd23, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x18aa, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd23));
        EXPECT(0x37, gbc.readMem(0xbd24));
        // CB 37 01C3
        gbc.setState(0x9bfb, 0xe396, 0x4370, 0x7146, 0xcea0, 0xc41e, 0x1, 0x0);
        gbc.writeMem(0x9bfb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe396, gbc.sp());
        EXPECT(0x9bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bfb));
        EXPECT(0x37, gbc.readMem(0x9bfc));
        // CB 37 01C4
        gbc.setState(0x45c8, 0xf708, 0xe1b0, 0xb345, 0x7d5f, 0xb3bc, 0x0, 0x1);
        gbc.writeMem(0x45c8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf708, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C5
        gbc.setState(0x243c, 0x818a, 0x2990, 0x24e0, 0x46f2, 0x83f2, 0x0, 0x0);
        gbc.writeMem(0x243c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x243e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C6
        gbc.setState(0x3c5b, 0x941b, 0x1a80, 0xb750, 0x7260, 0x94ee, 0x0, 0x0);
        gbc.writeMem(0x3c5b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x941b, gbc.sp());
        EXPECT(0x3c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C7
        gbc.setState(0xd9c9, 0x2b44, 0xad60, 0xf56d, 0xf60b, 0x7d84, 0x1, 0x1);
        gbc.writeMem(0xd9c9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0xd9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c9));
        EXPECT(0x37, gbc.readMem(0xd9ca));
        // CB 37 01C8
        gbc.setState(0x7a16, 0xc89b, 0xc70, 0x741b, 0xe770, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x7a16, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc89b, gbc.sp());
        EXPECT(0x7a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01C9
        gbc.setState(0x2f17, 0x3b8a, 0xd480, 0x180d, 0x8b6, 0x2a37, 0x1, 0x1);
        gbc.writeMem(0x2f17, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3b8a, gbc.sp());
        EXPECT(0x2f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01CB
        gbc.setState(0x49fa, 0x7a1c, 0x7460, 0x2c4f, 0x7b14, 0xf839, 0x0, 0x1);
        gbc.writeMem(0x49fa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7a1c, gbc.sp());
        EXPECT(0x49fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01CC
        gbc.setState(0xeff8, 0xb586, 0xe820, 0x2042, 0xda85, 0x9358, 0x1, 0x1);
        gbc.writeMem(0xeff8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb586, gbc.sp());
        EXPECT(0xeffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff8));
        EXPECT(0x37, gbc.readMem(0xeff9));
        // CB 37 01CD
        gbc.setState(0x3489, 0x7c53, 0xc5d0, 0xd97c, 0x4625, 0x3532, 0x1, 0x0);
        gbc.writeMem(0x3489, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7c53, gbc.sp());
        EXPECT(0x348b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01CE
        gbc.setState(0x8bf5, 0xddc8, 0x20b0, 0xd582, 0x188e, 0xba15, 0x0, 0x1);
        gbc.writeMem(0x8bf5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xddc8, gbc.sp());
        EXPECT(0x8bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf5));
        EXPECT(0x37, gbc.readMem(0x8bf6));
        // CB 37 01CF
        gbc.setState(0x6aeb, 0x208b, 0x3f40, 0xbef6, 0xaaa2, 0xabff, 0x0, 0x0);
        gbc.writeMem(0x6aeb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x208b, gbc.sp());
        EXPECT(0x6aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01D0
        gbc.setState(0x8df9, 0xb7df, 0x73d0, 0xb7e3, 0xaa3, 0xd21, 0x0, 0x1);
        gbc.writeMem(0x8df9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb7df, gbc.sp());
        EXPECT(0x8dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df9));
        EXPECT(0x37, gbc.readMem(0x8dfa));
        // CB 37 01D1
        gbc.setState(0xa19c, 0x5043, 0x8650, 0x58cb, 0x8941, 0x72b6, 0x0, 0x0);
        gbc.writeMem(0xa19c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5043, gbc.sp());
        EXPECT(0xa19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa19c));
        EXPECT(0x37, gbc.readMem(0xa19d));
        // CB 37 01D2
        gbc.setState(0xaa82, 0xff35, 0x6760, 0xef9e, 0x51a1, 0xee55, 0x1, 0x0);
        gbc.writeMem(0xaa82, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xff35, gbc.sp());
        EXPECT(0xaa84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa82));
        EXPECT(0x37, gbc.readMem(0xaa83));
        // CB 37 01D3
        gbc.setState(0x4a49, 0x4b86, 0x9d40, 0x44f1, 0x1997, 0x674c, 0x1, 0x1);
        gbc.writeMem(0x4a49, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b86, gbc.sp());
        EXPECT(0x4a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01D4
        gbc.setState(0xcb6b, 0x52f4, 0xedf0, 0x263e, 0x44b8, 0x6689, 0x1, 0x0);
        gbc.writeMem(0xcb6b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x52f4, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6b));
        EXPECT(0x37, gbc.readMem(0xcb6c));
        // CB 37 01D6
        gbc.setState(0x565c, 0xfbe5, 0xf7d0, 0xd7bc, 0xe14a, 0x8b33, 0x1, 0x1);
        gbc.writeMem(0x565c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfbe5, gbc.sp());
        EXPECT(0x565e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01D7
        gbc.setState(0x1768, 0xbcb, 0xde40, 0x7078, 0xc53e, 0xa828, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01D8
        gbc.setState(0xd3c3, 0xe264, 0x7ce0, 0xd921, 0xe4ff, 0x1f43, 0x0, 0x1);
        gbc.writeMem(0xd3c3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe264, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0x37, gbc.readMem(0xd3c4));
        // CB 37 01D9
        gbc.setState(0xbe43, 0x3f3, 0xb890, 0xc3d7, 0x508e, 0xb203, 0x0, 0x0);
        gbc.writeMem(0xbe43, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3f3, gbc.sp());
        EXPECT(0xbe45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe43));
        EXPECT(0x37, gbc.readMem(0xbe44));
        // CB 37 01DA
        gbc.setState(0x5208, 0xcf1c, 0x4250, 0x19ad, 0xf8b9, 0xe6df, 0x0, 0x0);
        gbc.writeMem(0x5208, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcf1c, gbc.sp());
        EXPECT(0x520a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01DB
        gbc.setState(0x8da2, 0xe3d1, 0x78c0, 0x46bd, 0x45c8, 0x5eed, 0x0, 0x1);
        gbc.writeMem(0x8da2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe3d1, gbc.sp());
        EXPECT(0x8da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da2));
        EXPECT(0x37, gbc.readMem(0x8da3));
        // CB 37 01DC
        gbc.setState(0x7a5d, 0x1bbe, 0x8310, 0x4010, 0x5aec, 0xfe8b, 0x0, 0x1);
        gbc.writeMem(0x7a5d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1bbe, gbc.sp());
        EXPECT(0x7a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01DD
        gbc.setState(0x8795, 0x7a16, 0x5a00, 0x1cc7, 0xb67, 0x57a2, 0x1, 0x0);
        gbc.writeMem(0x8795, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7a16, gbc.sp());
        EXPECT(0x8797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8795));
        EXPECT(0x37, gbc.readMem(0x8796));
        // CB 37 01DE
        gbc.setState(0xccf3, 0xaea8, 0xdaf0, 0x3175, 0x8ae8, 0x2c0d, 0x1, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaea8, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf3));
        EXPECT(0x37, gbc.readMem(0xccf4));
        // CB 37 01DF
        gbc.setState(0xe09d, 0x8250, 0xa690, 0x3b7e, 0x1eff, 0x2547, 0x1, 0x0);
        gbc.writeMem(0xe09d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8250, gbc.sp());
        EXPECT(0xe09f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09d));
        EXPECT(0x37, gbc.readMem(0xe09e));
        // CB 37 01E0
        gbc.setState(0x2f25, 0x5a44, 0x47a0, 0xfd35, 0xed20, 0x6a9, 0x0, 0x0);
        gbc.writeMem(0x2f25, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5a44, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01E1
        gbc.setState(0xdda7, 0xd343, 0x4a50, 0x1d6b, 0x59f8, 0x6efc, 0x0, 0x0);
        gbc.writeMem(0xdda7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd343, gbc.sp());
        EXPECT(0xdda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda7));
        EXPECT(0x37, gbc.readMem(0xdda8));
        // CB 37 01E2
        gbc.setState(0xaff0, 0x744e, 0x6ab0, 0x84c8, 0x3c9a, 0xcc4e, 0x0, 0x0);
        gbc.writeMem(0xaff0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x744e, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff0));
        EXPECT(0x37, gbc.readMem(0xaff1));
        // CB 37 01E3
        gbc.setState(0x2596, 0x658f, 0x1310, 0x4d07, 0x214a, 0xe928, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x658f, gbc.sp());
        EXPECT(0x2598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01E4
        gbc.setState(0xe390, 0xa4ef, 0x96c0, 0x4b0, 0x184e, 0x81b7, 0x0, 0x0);
        gbc.writeMem(0xe390, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0xe392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe390));
        EXPECT(0x37, gbc.readMem(0xe391));
        // CB 37 01E5
        gbc.setState(0x8aa5, 0x7a50, 0x72f0, 0xbc8, 0xc2cd, 0xb4eb, 0x0, 0x0);
        gbc.writeMem(0x8aa5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7a50, gbc.sp());
        EXPECT(0x8aa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa5));
        EXPECT(0x37, gbc.readMem(0x8aa6));
        // CB 37 01E6
        gbc.setState(0x8ab9, 0xa89e, 0xc290, 0xe988, 0x200, 0x62ac, 0x1, 0x1);
        gbc.writeMem(0x8ab9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x8abb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ab9));
        EXPECT(0x37, gbc.readMem(0x8aba));
        // CB 37 01E8
        gbc.setState(0xcc8e, 0x24b2, 0x9f20, 0xbeda, 0x6311, 0x874, 0x0, 0x0);
        gbc.writeMem(0xcc8e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x24b2, gbc.sp());
        EXPECT(0xcc90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8e));
        EXPECT(0x37, gbc.readMem(0xcc8f));
        // CB 37 01E9
        gbc.setState(0x4bbc, 0x9301, 0xa170, 0x80c7, 0xb9a6, 0xbe36, 0x0, 0x0);
        gbc.writeMem(0x4bbc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0x4bbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01EA
        gbc.setState(0x9e81, 0xfaf5, 0x57f0, 0x224a, 0x290d, 0x9b6b, 0x0, 0x0);
        gbc.writeMem(0x9e81, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0x9e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e81));
        EXPECT(0x37, gbc.readMem(0x9e82));
        // CB 37 01EB
        gbc.setState(0x3901, 0x1f25, 0x45e0, 0x69f4, 0xe9d8, 0x5c44, 0x0, 0x0);
        gbc.writeMem(0x3901, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1f25, gbc.sp());
        EXPECT(0x3903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01EC
        gbc.setState(0x9d10, 0xe1cf, 0x3c70, 0x169, 0x84e0, 0x7e6c, 0x0, 0x1);
        gbc.writeMem(0x9d10, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe1cf, gbc.sp());
        EXPECT(0x9d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d10));
        EXPECT(0x37, gbc.readMem(0x9d11));
        // CB 37 01ED
        gbc.setState(0xc9c3, 0x6b1d, 0xeb90, 0xb80c, 0x601d, 0xe2, 0x1, 0x0);
        gbc.writeMem(0xc9c3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0xc9c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c3));
        EXPECT(0x37, gbc.readMem(0xc9c4));
        // CB 37 01EE
        gbc.setState(0xc0c2, 0xf886, 0x5e90, 0xfdbe, 0x3e02, 0x7062, 0x0, 0x1);
        gbc.writeMem(0xc0c2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf886, gbc.sp());
        EXPECT(0xc0c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c2));
        EXPECT(0x37, gbc.readMem(0xc0c3));
        // CB 37 01EF
        gbc.setState(0xe3db, 0x4e1f, 0x9340, 0x416f, 0x4706, 0xabad, 0x0, 0x0);
        gbc.writeMem(0xe3db, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4e1f, gbc.sp());
        EXPECT(0xe3dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3db));
        EXPECT(0x37, gbc.readMem(0xe3dc));
        // CB 37 01F0
        gbc.setState(0xaad6, 0x8f4b, 0x70, 0x7bf9, 0x7061, 0x5b23, 0x1, 0x0);
        gbc.writeMem(0xaad6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8f4b, gbc.sp());
        EXPECT(0xaad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad6));
        EXPECT(0x37, gbc.readMem(0xaad7));
        // CB 37 01F1
        gbc.setState(0x65d7, 0xa51, 0x44f0, 0x54d1, 0x7ac1, 0xe742, 0x0, 0x0);
        gbc.writeMem(0x65d7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa51, gbc.sp());
        EXPECT(0x65d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F2
        gbc.setState(0xb5fb, 0xe13, 0x5a10, 0xe4be, 0x3243, 0x795c, 0x0, 0x1);
        gbc.writeMem(0xb5fb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe13, gbc.sp());
        EXPECT(0xb5fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5fb));
        EXPECT(0x37, gbc.readMem(0xb5fc));
        // CB 37 01F3
        gbc.setState(0x7e73, 0x6ed2, 0xa330, 0xb0ec, 0xe872, 0x3d9f, 0x1, 0x0);
        gbc.writeMem(0x7e73, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0x7e75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F4
        gbc.setState(0x67f8, 0xc5aa, 0x5810, 0x1c98, 0x8e23, 0x57b7, 0x0, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc5aa, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F5
        gbc.setState(0x6c4a, 0x6e46, 0x34b0, 0xd2fb, 0xb79b, 0x7bcf, 0x0, 0x1);
        gbc.writeMem(0x6c4a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6e46, gbc.sp());
        EXPECT(0x6c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F6
        gbc.setState(0x5e25, 0x2911, 0x4320, 0x5a1b, 0x9d16, 0x4fde, 0x0, 0x1);
        gbc.writeMem(0x5e25, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x5e27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F7
        gbc.setState(0x3fc2, 0x3f77, 0x74e0, 0x403d, 0x857b, 0x7dbb, 0x0, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3f77, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F8
        gbc.setState(0x4b1f, 0x5811, 0xb80, 0xf9b3, 0x7bf, 0xe93f, 0x0, 0x1);
        gbc.writeMem(0x4b1f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5811, gbc.sp());
        EXPECT(0x4b21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01F9
        gbc.setState(0x2106, 0x62c4, 0xd4d0, 0xda6, 0x2d5b, 0x9d82, 0x0, 0x0);
        gbc.writeMem(0x2106, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x62c4, gbc.sp());
        EXPECT(0x2108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01FA
        gbc.setState(0x5c3b, 0x4a8f, 0xd500, 0x382b, 0xe2d9, 0xf019, 0x1, 0x1);
        gbc.writeMem(0x5c3b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a8f, gbc.sp());
        EXPECT(0x5c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01FB
        gbc.setState(0x10a3, 0x8648, 0xea20, 0x63d6, 0xfe3e, 0x26cc, 0x1, 0x0);
        gbc.writeMem(0x10a3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8648, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01FD
        gbc.setState(0x7c40, 0x891a, 0x11c0, 0x300f, 0x4b6c, 0x508e, 0x0, 0x1);
        gbc.writeMem(0x7c40, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x891a, gbc.sp());
        EXPECT(0x7c42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01FE
        gbc.setState(0x3c67, 0x60a3, 0x8300, 0x3a76, 0xba46, 0x9afe, 0x0, 0x1);
        gbc.writeMem(0x3c67, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0x3c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 01FF
        gbc.setState(0x6cd7, 0x7d92, 0x18f0, 0x635a, 0x2f30, 0xa737, 0x1, 0x0);
        gbc.writeMem(0x6cd7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7d92, gbc.sp());
        EXPECT(0x6cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0200
        gbc.setState(0x4718, 0xffbc, 0x87f0, 0xb0f4, 0x224c, 0x9f5e, 0x0, 0x1);
        gbc.writeMem(0x4718, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xffbc, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0201
        gbc.setState(0xa5d9, 0x69e6, 0x290, 0xd24, 0x3b10, 0x140a, 0x0, 0x0);
        gbc.writeMem(0xa5d9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0xa5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d9));
        EXPECT(0x37, gbc.readMem(0xa5da));
        // CB 37 0202
        gbc.setState(0xb056, 0x425c, 0x4030, 0xbfd3, 0x8144, 0xc819, 0x0, 0x0);
        gbc.writeMem(0xb056, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x425c, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb056));
        EXPECT(0x37, gbc.readMem(0xb057));
        // CB 37 0203
        gbc.setState(0xa429, 0xe72d, 0x7710, 0xb692, 0x7700, 0xcd14, 0x0, 0x1);
        gbc.writeMem(0xa429, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe72d, gbc.sp());
        EXPECT(0xa42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa429));
        EXPECT(0x37, gbc.readMem(0xa42a));
        // CB 37 0204
        gbc.setState(0x935a, 0x1893, 0xe6f0, 0x1092, 0x3842, 0x6933, 0x1, 0x0);
        gbc.writeMem(0x935a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1893, gbc.sp());
        EXPECT(0x935c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935a));
        EXPECT(0x37, gbc.readMem(0x935b));
        // CB 37 0205
        gbc.setState(0xcdf8, 0xff75, 0x2b10, 0xfbbe, 0x8b0a, 0xdcc4, 0x0, 0x1);
        gbc.writeMem(0xcdf8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0xcdfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf8));
        EXPECT(0x37, gbc.readMem(0xcdf9));
        // CB 37 0206
        gbc.setState(0x8556, 0x39dd, 0xd310, 0x502c, 0x7f77, 0x5a81, 0x0, 0x0);
        gbc.writeMem(0x8556, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x39dd, gbc.sp());
        EXPECT(0x8558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8556));
        EXPECT(0x37, gbc.readMem(0x8557));
        // CB 37 0207
        gbc.setState(0x91a1, 0x18a2, 0xd720, 0xb34b, 0xe433, 0xdf3f, 0x1, 0x1);
        gbc.writeMem(0x91a1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x18a2, gbc.sp());
        EXPECT(0x91a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a1));
        EXPECT(0x37, gbc.readMem(0x91a2));
        // CB 37 0208
        gbc.setState(0x152d, 0xb903, 0x3fc0, 0xb11b, 0x3b9, 0xd400, 0x1, 0x0);
        gbc.writeMem(0x152d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb903, gbc.sp());
        EXPECT(0x152f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0209
        gbc.setState(0xc139, 0x98e0, 0xc980, 0x28f2, 0x91dd, 0x7c33, 0x1, 0x0);
        gbc.writeMem(0xc139, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0xc13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc139));
        EXPECT(0x37, gbc.readMem(0xc13a));
        // CB 37 020A
        gbc.setState(0xd568, 0xf92f, 0xb9a0, 0xcc2c, 0x91bc, 0x3f11, 0x1, 0x0);
        gbc.writeMem(0xd568, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf92f, gbc.sp());
        EXPECT(0xd56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd568));
        EXPECT(0x37, gbc.readMem(0xd569));
        // CB 37 020B
        gbc.setState(0xdc99, 0xd784, 0x11c0, 0x301d, 0xa0cf, 0x33a5, 0x0, 0x0);
        gbc.writeMem(0xdc99, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd784, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc99));
        EXPECT(0x37, gbc.readMem(0xdc9a));
        // CB 37 020C
        gbc.setState(0x98d5, 0x25d4, 0xc730, 0x25eb, 0x998d, 0x421, 0x1, 0x1);
        gbc.writeMem(0x98d5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x25d4, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0x37, gbc.readMem(0x98d6));
        // CB 37 020D
        gbc.setState(0x2d76, 0x439a, 0x8a50, 0xdd5f, 0x8781, 0x83a4, 0x1, 0x0);
        gbc.writeMem(0x2d76, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x439a, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 020E
        gbc.setState(0xae4b, 0xa606, 0x8dd0, 0xae59, 0xc856, 0xc324, 0x1, 0x0);
        gbc.writeMem(0xae4b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa606, gbc.sp());
        EXPECT(0xae4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae4b));
        EXPECT(0x37, gbc.readMem(0xae4c));
        // CB 37 020F
        gbc.setState(0xe65, 0xfb75, 0x2590, 0x5e03, 0x237c, 0xafbb, 0x1, 0x0);
        gbc.writeMem(0xe65, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0xe67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0211
        gbc.setState(0x1f34, 0x5c68, 0xcfd0, 0x6b46, 0x13cf, 0x648e, 0x1, 0x0);
        gbc.writeMem(0x1f34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5c68, gbc.sp());
        EXPECT(0x1f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0213
        gbc.setState(0x8e43, 0xc86a, 0xdbe0, 0x551b, 0x1e71, 0x8cda, 0x0, 0x1);
        gbc.writeMem(0x8e43, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc86a, gbc.sp());
        EXPECT(0x8e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e43));
        EXPECT(0x37, gbc.readMem(0x8e44));
        // CB 37 0214
        gbc.setState(0x6a26, 0x7528, 0x8b10, 0xea53, 0x9b1a, 0x7a6e, 0x1, 0x0);
        gbc.writeMem(0x6a26, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x6a28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0215
        gbc.setState(0x6215, 0x4f86, 0x2b20, 0x690, 0xcc6e, 0x2e14, 0x0, 0x1);
        gbc.writeMem(0x6215, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0x6217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0216
        gbc.setState(0x8715, 0xcac8, 0xc6a0, 0x3d24, 0x437f, 0xa10b, 0x1, 0x0);
        gbc.writeMem(0x8715, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x8717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8715));
        EXPECT(0x37, gbc.readMem(0x8716));
        // CB 37 0217
        gbc.setState(0x4010, 0xb1ee, 0x5470, 0x3783, 0x6e4a, 0x7e04, 0x1, 0x0);
        gbc.writeMem(0x4010, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb1ee, gbc.sp());
        EXPECT(0x4012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0218
        gbc.setState(0x2984, 0xd9c0, 0xeb80, 0x40a2, 0x3dcb, 0x742c, 0x1, 0x1);
        gbc.writeMem(0x2984, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0x2986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0219
        gbc.setState(0xe9df, 0xa4a4, 0x4fe0, 0xfa84, 0x4430, 0xb94a, 0x0, 0x0);
        gbc.writeMem(0xe9df, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa4a4, gbc.sp());
        EXPECT(0xe9e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9df));
        EXPECT(0x37, gbc.readMem(0xe9e0));
        // CB 37 021B
        gbc.setState(0xbf0f, 0xe6ac, 0xd730, 0x1866, 0x936f, 0xd370, 0x0, 0x0);
        gbc.writeMem(0xbf0f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe6ac, gbc.sp());
        EXPECT(0xbf11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0f));
        EXPECT(0x37, gbc.readMem(0xbf10));
        // CB 37 021C
        gbc.setState(0x7787, 0x60fe, 0x3a60, 0xcdac, 0xfbca, 0x7bef, 0x0, 0x0);
        gbc.writeMem(0x7787, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x60fe, gbc.sp());
        EXPECT(0x7789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 021D
        gbc.setState(0x66d7, 0xef33, 0x63b0, 0xe973, 0xf03f, 0x54a1, 0x0, 0x1);
        gbc.writeMem(0x66d7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xef33, gbc.sp());
        EXPECT(0x66d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 021E
        gbc.setState(0xde7d, 0x61af, 0xfc40, 0xed4, 0x794, 0x7c9f, 0x1, 0x1);
        gbc.writeMem(0xde7d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x61af, gbc.sp());
        EXPECT(0xde7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7d));
        EXPECT(0x37, gbc.readMem(0xde7e));
        // CB 37 021F
        gbc.setState(0xae2b, 0x8ed5, 0x8800, 0x59a7, 0xd0cd, 0xcf20, 0x1, 0x1);
        gbc.writeMem(0xae2b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ed5, gbc.sp());
        EXPECT(0xae2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2b));
        EXPECT(0x37, gbc.readMem(0xae2c));
        // CB 37 0220
        gbc.setState(0x86dd, 0x6342, 0x84d0, 0xfc16, 0x5ec0, 0x779f, 0x1, 0x1);
        gbc.writeMem(0x86dd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6342, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86dd));
        EXPECT(0x37, gbc.readMem(0x86de));
        // CB 37 0221
        gbc.setState(0xb768, 0x2426, 0x1770, 0x7814, 0x89b4, 0x41ee, 0x1, 0x0);
        gbc.writeMem(0xb768, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2426, gbc.sp());
        EXPECT(0xb76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb768));
        EXPECT(0x37, gbc.readMem(0xb769));
        // CB 37 0222
        gbc.setState(0x1128, 0xc804, 0x260, 0xadc9, 0x56d0, 0xb793, 0x1, 0x0);
        gbc.writeMem(0x1128, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0x112a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0223
        gbc.setState(0xb974, 0xe19c, 0x3ca0, 0x13fd, 0x89ee, 0xee20, 0x0, 0x1);
        gbc.writeMem(0xb974, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe19c, gbc.sp());
        EXPECT(0xb976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb974));
        EXPECT(0x37, gbc.readMem(0xb975));
        // CB 37 0224
        gbc.setState(0xd0d, 0xcf60, 0x6b30, 0x8cbe, 0xbb6c, 0xd51a, 0x0, 0x0);
        gbc.writeMem(0xd0d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xcf60, gbc.sp());
        EXPECT(0xd0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0225
        gbc.setState(0xb0eb, 0x5faa, 0x5580, 0x65da, 0xd0da, 0x1703, 0x1, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0xb0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0eb));
        EXPECT(0x37, gbc.readMem(0xb0ec));
        // CB 37 0227
        gbc.setState(0x6cd8, 0xa6e5, 0x9c20, 0x736a, 0x717a, 0xa984, 0x1, 0x0);
        gbc.writeMem(0x6cd8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa6e5, gbc.sp());
        EXPECT(0x6cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0228
        gbc.setState(0x45d1, 0x89be, 0xde70, 0xa241, 0xf61a, 0x2e96, 0x1, 0x1);
        gbc.writeMem(0x45d1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x89be, gbc.sp());
        EXPECT(0x45d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0229
        gbc.setState(0x76d4, 0x4e00, 0x7ea0, 0xff0c, 0x90b4, 0x7392, 0x0, 0x0);
        gbc.writeMem(0x76d4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4e00, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 022A
        gbc.setState(0x4ed1, 0x76ed, 0xc8c0, 0x3545, 0x8d0, 0x9219, 0x1, 0x1);
        gbc.writeMem(0x4ed1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x76ed, gbc.sp());
        EXPECT(0x4ed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 022B
        gbc.setState(0x25da, 0xf449, 0x9110, 0xd5b5, 0xb525, 0x886f, 0x1, 0x1);
        gbc.writeMem(0x25da, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf449, gbc.sp());
        EXPECT(0x25dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 022C
        gbc.setState(0x89c2, 0x6e1a, 0x2520, 0xce1d, 0xeeed, 0x6891, 0x0, 0x0);
        gbc.writeMem(0x89c2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6e1a, gbc.sp());
        EXPECT(0x89c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c2));
        EXPECT(0x37, gbc.readMem(0x89c3));
        // CB 37 022D
        gbc.setState(0xadcc, 0xf321, 0x6030, 0x7e38, 0xb53b, 0x8d12, 0x1, 0x0);
        gbc.writeMem(0xadcc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf321, gbc.sp());
        EXPECT(0xadce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadcc));
        EXPECT(0x37, gbc.readMem(0xadcd));
        // CB 37 022E
        gbc.setState(0x805a, 0x3c7b, 0x3460, 0x86ed, 0xaa44, 0x62fc, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3c7b, gbc.sp());
        EXPECT(0x805c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805a));
        EXPECT(0x37, gbc.readMem(0x805b));
        // CB 37 022F
        gbc.setState(0x9653, 0x1fed, 0xbaf0, 0x3f9, 0x34db, 0xdd7c, 0x1, 0x0);
        gbc.writeMem(0x9653, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1fed, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9653));
        EXPECT(0x37, gbc.readMem(0x9654));
        // CB 37 0230
        gbc.setState(0x421a, 0x549a, 0x210, 0x8618, 0xab81, 0x8130, 0x1, 0x0);
        gbc.writeMem(0x421a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x549a, gbc.sp());
        EXPECT(0x421c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0231
        gbc.setState(0x25b3, 0xbc15, 0x4510, 0xb571, 0xa037, 0x68ed, 0x0, 0x0);
        gbc.writeMem(0x25b3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbc15, gbc.sp());
        EXPECT(0x25b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0232
        gbc.setState(0x8b04, 0x1e72, 0xcf80, 0xf44, 0xd2c1, 0xca36, 0x1, 0x0);
        gbc.writeMem(0x8b04, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1e72, gbc.sp());
        EXPECT(0x8b06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b04));
        EXPECT(0x37, gbc.readMem(0x8b05));
        // CB 37 0233
        gbc.setState(0xa420, 0x19e6, 0xda00, 0xeb95, 0xa388, 0x1dcb, 0x1, 0x1);
        gbc.writeMem(0xa420, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x19e6, gbc.sp());
        EXPECT(0xa422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa420));
        EXPECT(0x37, gbc.readMem(0xa421));
        // CB 37 0234
        gbc.setState(0xc44a, 0xe126, 0xd730, 0x567d, 0x68c2, 0xe413, 0x0, 0x0);
        gbc.writeMem(0xc44a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe126, gbc.sp());
        EXPECT(0xc44c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44a));
        EXPECT(0x37, gbc.readMem(0xc44b));
        // CB 37 0235
        gbc.setState(0x68ef, 0xb2fc, 0x91e0, 0xe7d3, 0xe60, 0xf585, 0x0, 0x1);
        gbc.writeMem(0x68ef, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb2fc, gbc.sp());
        EXPECT(0x68f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0236
        gbc.setState(0xa6af, 0x2f0, 0xeeb0, 0xd7e1, 0x32ab, 0xb74f, 0x0, 0x1);
        gbc.writeMem(0xa6af, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2f0, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6af));
        EXPECT(0x37, gbc.readMem(0xa6b0));
        // CB 37 0237
        gbc.setState(0x84a9, 0xe48b, 0x5850, 0xe48c, 0x2365, 0xd6ad, 0x0, 0x1);
        gbc.writeMem(0x84a9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe48b, gbc.sp());
        EXPECT(0x84ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84a9));
        EXPECT(0x37, gbc.readMem(0x84aa));
        // CB 37 0239
        gbc.setState(0x223b, 0x1c25, 0xc300, 0x29dd, 0xec12, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0x223b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1c25, gbc.sp());
        EXPECT(0x223d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 023A
        gbc.setState(0x87d4, 0x7e90, 0x7570, 0xfabb, 0x85fc, 0xede3, 0x1, 0x1);
        gbc.writeMem(0x87d4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7e90, gbc.sp());
        EXPECT(0x87d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d4));
        EXPECT(0x37, gbc.readMem(0x87d5));
        // CB 37 023B
        gbc.setState(0x5df1, 0xd434, 0x6d90, 0x2596, 0x1e10, 0xfea, 0x1, 0x0);
        gbc.writeMem(0x5df1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd434, gbc.sp());
        EXPECT(0x5df3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 023C
        gbc.setState(0x5ce5, 0xfc12, 0xed00, 0xfc96, 0x4cb2, 0x24b9, 0x0, 0x1);
        gbc.writeMem(0x5ce5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfc12, gbc.sp());
        EXPECT(0x5ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 023D
        gbc.setState(0x9e9e, 0x7761, 0x3ba0, 0xc166, 0xcf12, 0x4191, 0x1, 0x1);
        gbc.writeMem(0x9e9e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7761, gbc.sp());
        EXPECT(0x9ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9e));
        EXPECT(0x37, gbc.readMem(0x9e9f));
        // CB 37 023E
        gbc.setState(0x5dff, 0x6089, 0xa840, 0xb473, 0x37b4, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x5dff, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x5e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 023F
        gbc.setState(0x1df5, 0x8861, 0x4f0, 0x87d4, 0xbaf3, 0x5895, 0x0, 0x0);
        gbc.writeMem(0x1df5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8861, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0240
        gbc.setState(0x1de0, 0xad4e, 0x31a0, 0x305c, 0x762d, 0x8287, 0x1, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xad4e, gbc.sp());
        EXPECT(0x1de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0241
        gbc.setState(0x16a3, 0xa9f3, 0x3200, 0xfb6c, 0x7639, 0x9a06, 0x1, 0x1);
        gbc.writeMem(0x16a3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa9f3, gbc.sp());
        EXPECT(0x16a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0242
        gbc.setState(0x22b5, 0xea0a, 0x890, 0x132f, 0xae5, 0xd4f1, 0x1, 0x0);
        gbc.writeMem(0x22b5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xea0a, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0243
        gbc.setState(0xb9f5, 0x4f1b, 0x4210, 0x6a86, 0x738e, 0xe954, 0x1, 0x1);
        gbc.writeMem(0xb9f5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f1b, gbc.sp());
        EXPECT(0xb9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f5));
        EXPECT(0x37, gbc.readMem(0xb9f6));
        // CB 37 0244
        gbc.setState(0x2182, 0x4fb1, 0xce50, 0xf4f1, 0xef5e, 0x7324, 0x1, 0x1);
        gbc.writeMem(0x2182, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4fb1, gbc.sp());
        EXPECT(0x2184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0245
        gbc.setState(0x1431, 0x2292, 0x11f0, 0x33ba, 0x4ed0, 0xd6f9, 0x0, 0x0);
        gbc.writeMem(0x1431, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2292, gbc.sp());
        EXPECT(0x1433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0246
        gbc.setState(0x43c, 0x14fe, 0x61c0, 0x942b, 0x7edc, 0x9297, 0x0, 0x1);
        gbc.writeMem(0x43c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x14fe, gbc.sp());
        EXPECT(0x43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0247
        gbc.setState(0xab34, 0x6750, 0xfda0, 0x5ddb, 0xeed7, 0xd477, 0x0, 0x0);
        gbc.writeMem(0xab34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6750, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0x37, gbc.readMem(0xab35));
        // CB 37 0248
        gbc.setState(0x7ecf, 0x744c, 0x46e0, 0x9584, 0xb0e8, 0x9261, 0x1, 0x0);
        gbc.writeMem(0x7ecf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x744c, gbc.sp());
        EXPECT(0x7ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0249
        gbc.setState(0x2604, 0x6d2a, 0xc910, 0xfc41, 0x7d96, 0xd347, 0x1, 0x1);
        gbc.writeMem(0x2604, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x2606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 024B
        gbc.setState(0x711f, 0xc7ae, 0x5db0, 0x79ca, 0x7567, 0xf034, 0x0, 0x0);
        gbc.writeMem(0x711f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc7ae, gbc.sp());
        EXPECT(0x7121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 024C
        gbc.setState(0x409f, 0x1fbe, 0x2ca0, 0xece4, 0x2d4f, 0xc466, 0x0, 0x1);
        gbc.writeMem(0x409f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1fbe, gbc.sp());
        EXPECT(0x40a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 024D
        gbc.setState(0x84b9, 0x4394, 0xf230, 0x338c, 0x7766, 0x8863, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4394, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b9));
        EXPECT(0x37, gbc.readMem(0x84ba));
        // CB 37 024E
        gbc.setState(0x4c4f, 0x5f79, 0xe70, 0xee18, 0x9485, 0x3fff, 0x1, 0x0);
        gbc.writeMem(0x4c4f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5f79, gbc.sp());
        EXPECT(0x4c51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 024F
        gbc.setState(0xeae8, 0x86b4, 0xe940, 0x82ce, 0xf10b, 0x4dc7, 0x1, 0x0);
        gbc.writeMem(0xeae8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86b4, gbc.sp());
        EXPECT(0xeaea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae8));
        EXPECT(0x37, gbc.readMem(0xeae9));
        // CB 37 0250
        gbc.setState(0xb45d, 0x8eb7, 0x4a50, 0xb16d, 0x9e8c, 0x5fff, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8eb7, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb45d));
        EXPECT(0x37, gbc.readMem(0xb45e));
        // CB 37 0251
        gbc.setState(0x2741, 0x33b5, 0x8b10, 0x8498, 0x1512, 0x4819, 0x1, 0x0);
        gbc.writeMem(0x2741, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x2743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0252
        gbc.setState(0xe10f, 0xcc38, 0xacf0, 0x7df3, 0x8ff3, 0x77c3, 0x0, 0x0);
        gbc.writeMem(0xe10f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcc38, gbc.sp());
        EXPECT(0xe111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10f));
        EXPECT(0x37, gbc.readMem(0xe110));
        // CB 37 0253
        gbc.setState(0x2262, 0xceb, 0xee30, 0x2cab, 0x3412, 0xf91f, 0x1, 0x0);
        gbc.writeMem(0x2262, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0x2264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0254
        gbc.setState(0x347b, 0x5c75, 0xb2d0, 0x2af7, 0xc721, 0xec11, 0x1, 0x0);
        gbc.writeMem(0x347b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5c75, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0255
        gbc.setState(0xeac6, 0xdc03, 0xafb0, 0x6587, 0x2e1c, 0x43ef, 0x0, 0x0);
        gbc.writeMem(0xeac6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdc03, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac6));
        EXPECT(0x37, gbc.readMem(0xeac7));
        // CB 37 0256
        gbc.setState(0x938b, 0x29d6, 0xc050, 0x2655, 0x14d, 0x5954, 0x0, 0x0);
        gbc.writeMem(0x938b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x29d6, gbc.sp());
        EXPECT(0x938d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938b));
        EXPECT(0x37, gbc.readMem(0x938c));
        // CB 37 0257
        gbc.setState(0xc67a, 0xc429, 0x6d50, 0x7bbb, 0xbeb6, 0x237d, 0x1, 0x0);
        gbc.writeMem(0xc67a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67a));
        EXPECT(0x37, gbc.readMem(0xc67b));
        // CB 37 0258
        gbc.setState(0x9189, 0x9f91, 0x36d0, 0x542a, 0x47a3, 0x3938, 0x0, 0x0);
        gbc.writeMem(0x9189, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9f91, gbc.sp());
        EXPECT(0x918b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9189));
        EXPECT(0x37, gbc.readMem(0x918a));
        // CB 37 0259
        gbc.setState(0x91eb, 0x5ea6, 0xf4a0, 0x3f14, 0xf555, 0xa4a5, 0x0, 0x0);
        gbc.writeMem(0x91eb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5ea6, gbc.sp());
        EXPECT(0x91ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91eb));
        EXPECT(0x37, gbc.readMem(0x91ec));
        // CB 37 025A
        gbc.setState(0x313c, 0x184e, 0x7dd0, 0x6429, 0x6248, 0x532a, 0x0, 0x0);
        gbc.writeMem(0x313c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x184e, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 025B
        gbc.setState(0x5eee, 0x4c, 0xe1b0, 0x373, 0xf375, 0xe964, 0x1, 0x1);
        gbc.writeMem(0x5eee, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4c, gbc.sp());
        EXPECT(0x5ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 025C
        gbc.setState(0xd934, 0x7547, 0xb4e0, 0xfb8b, 0x52ae, 0xcdf0, 0x0, 0x1);
        gbc.writeMem(0xd934, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7547, gbc.sp());
        EXPECT(0xd936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd934));
        EXPECT(0x37, gbc.readMem(0xd935));
        // CB 37 025D
        gbc.setState(0x1307, 0xbff2, 0x92c0, 0x3a60, 0x4dc, 0x7cb4, 0x1, 0x0);
        gbc.writeMem(0x1307, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbff2, gbc.sp());
        EXPECT(0x1309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 025E
        gbc.setState(0x5e0b, 0x687, 0xbe60, 0x8ec9, 0x7cbe, 0xb1c4, 0x0, 0x1);
        gbc.writeMem(0x5e0b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x687, gbc.sp());
        EXPECT(0x5e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 025F
        gbc.setState(0xe2d2, 0xa648, 0x1af0, 0xc32b, 0xc041, 0xa3e5, 0x1, 0x1);
        gbc.writeMem(0xe2d2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0xe2d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d2));
        EXPECT(0x37, gbc.readMem(0xe2d3));
        // CB 37 0260
        gbc.setState(0x96c9, 0x3da9, 0x7920, 0x5bd3, 0xfc01, 0xfc6d, 0x1, 0x1);
        gbc.writeMem(0x96c9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3da9, gbc.sp());
        EXPECT(0x96cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c9));
        EXPECT(0x37, gbc.readMem(0x96ca));
        // CB 37 0261
        gbc.setState(0x13d7, 0xb350, 0xceb0, 0xb440, 0x1eb4, 0xa024, 0x1, 0x0);
        gbc.writeMem(0x13d7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0x13d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0262
        gbc.setState(0xe0f1, 0xd3bb, 0x31b0, 0xf237, 0xffbc, 0x770a, 0x0, 0x0);
        gbc.writeMem(0xe0f1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd3bb, gbc.sp());
        EXPECT(0xe0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f1));
        EXPECT(0x37, gbc.readMem(0xe0f2));
        // CB 37 0263
        gbc.setState(0x8e5d, 0x7c6d, 0x6680, 0x2989, 0xf87e, 0x60ea, 0x0, 0x0);
        gbc.writeMem(0x8e5d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7c6d, gbc.sp());
        EXPECT(0x8e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e5d));
        EXPECT(0x37, gbc.readMem(0x8e5e));
        // CB 37 0265
        gbc.setState(0x2a32, 0x4856, 0xa460, 0x80fe, 0x3285, 0x2ad7, 0x1, 0x0);
        gbc.writeMem(0x2a32, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4856, gbc.sp());
        EXPECT(0x2a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0266
        gbc.setState(0x7429, 0x3b57, 0xaa40, 0xc935, 0x8643, 0x52be, 0x0, 0x1);
        gbc.writeMem(0x7429, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3b57, gbc.sp());
        EXPECT(0x742b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0267
        gbc.setState(0xb6a2, 0xaeb5, 0x16f0, 0xf979, 0x8137, 0xa526, 0x0, 0x0);
        gbc.writeMem(0xb6a2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaeb5, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a2));
        EXPECT(0x37, gbc.readMem(0xb6a3));
        // CB 37 0269
        gbc.setState(0x989e, 0x1ed5, 0x2f50, 0xd3e9, 0xeb02, 0x7e75, 0x0, 0x1);
        gbc.writeMem(0x989e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0x98a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989e));
        EXPECT(0x37, gbc.readMem(0x989f));
        // CB 37 026A
        gbc.setState(0xa12e, 0xba43, 0xdb0, 0xb146, 0x9f98, 0x6820, 0x1, 0x0);
        gbc.writeMem(0xa12e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xba43, gbc.sp());
        EXPECT(0xa130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa12e));
        EXPECT(0x37, gbc.readMem(0xa12f));
        // CB 37 026B
        gbc.setState(0xb2f1, 0xe794, 0x9830, 0xb58b, 0xafa8, 0xbea0, 0x1, 0x0);
        gbc.writeMem(0xb2f1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe794, gbc.sp());
        EXPECT(0xb2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f1));
        EXPECT(0x37, gbc.readMem(0xb2f2));
        // CB 37 026C
        gbc.setState(0x6dcc, 0xbc59, 0xdbe0, 0x3846, 0x471a, 0x3520, 0x1, 0x0);
        gbc.writeMem(0x6dcc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbc59, gbc.sp());
        EXPECT(0x6dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 026D
        gbc.setState(0x442, 0x2073, 0x6e40, 0x8ca3, 0x907, 0xaa6f, 0x1, 0x0);
        gbc.writeMem(0x442, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2073, gbc.sp());
        EXPECT(0x444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 026E
        gbc.setState(0x28dc, 0xcf20, 0xf6f0, 0xf2c3, 0x5fb9, 0x35fe, 0x0, 0x1);
        gbc.writeMem(0x28dc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0x28de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 026F
        gbc.setState(0xe39c, 0xdb2b, 0x50d0, 0xeabf, 0x67eb, 0x8cd5, 0x1, 0x1);
        gbc.writeMem(0xe39c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdb2b, gbc.sp());
        EXPECT(0xe39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39c));
        EXPECT(0x37, gbc.readMem(0xe39d));
        // CB 37 0270
        gbc.setState(0xae7d, 0x61bd, 0xd950, 0x7224, 0xf01d, 0x3e28, 0x0, 0x1);
        gbc.writeMem(0xae7d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x61bd, gbc.sp());
        EXPECT(0xae7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae7d));
        EXPECT(0x37, gbc.readMem(0xae7e));
        // CB 37 0271
        gbc.setState(0x4543, 0xc465, 0x5b40, 0xa8a5, 0x562, 0xef7d, 0x1, 0x1);
        gbc.writeMem(0x4543, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc465, gbc.sp());
        EXPECT(0x4545, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0272
        gbc.setState(0x5acf, 0xb78f, 0xee70, 0x3064, 0xe166, 0xc3f8, 0x1, 0x1);
        gbc.writeMem(0x5acf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb78f, gbc.sp());
        EXPECT(0x5ad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0273
        gbc.setState(0x14cc, 0x4ef6, 0x1620, 0xac2d, 0x620c, 0x2b40, 0x0, 0x1);
        gbc.writeMem(0x14cc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4ef6, gbc.sp());
        EXPECT(0x14ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0274
        gbc.setState(0xfaf, 0x1c41, 0x97b0, 0x3146, 0x993e, 0xb4c6, 0x1, 0x1);
        gbc.writeMem(0xfaf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0xfb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0275
        gbc.setState(0x5c8d, 0xf93c, 0xab60, 0x9625, 0x8ea5, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x5c8d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf93c, gbc.sp());
        EXPECT(0x5c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0276
        gbc.setState(0xa14b, 0x513f, 0xab20, 0x96c2, 0x4327, 0xb4e6, 0x0, 0x1);
        gbc.writeMem(0xa14b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x513f, gbc.sp());
        EXPECT(0xa14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14b));
        EXPECT(0x37, gbc.readMem(0xa14c));
        // CB 37 0278
        gbc.setState(0x1cfe, 0x5ab7, 0x45c0, 0x5359, 0x59bc, 0xf0a0, 0x1, 0x0);
        gbc.writeMem(0x1cfe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5ab7, gbc.sp());
        EXPECT(0x1d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0279
        gbc.setState(0x427b, 0x8695, 0x50e0, 0x4b75, 0x48d1, 0xd658, 0x1, 0x1);
        gbc.writeMem(0x427b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8695, gbc.sp());
        EXPECT(0x427d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 027A
        gbc.setState(0xe76c, 0xf7b8, 0x68a0, 0x5c3b, 0xc025, 0x3b00, 0x1, 0x0);
        gbc.writeMem(0xe76c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf7b8, gbc.sp());
        EXPECT(0xe76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76c));
        EXPECT(0x37, gbc.readMem(0xe76d));
        // CB 37 027B
        gbc.setState(0x5f64, 0xad3, 0x79e0, 0xfff5, 0x1879, 0xc1e8, 0x1, 0x1);
        gbc.writeMem(0x5f64, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xad3, gbc.sp());
        EXPECT(0x5f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 027C
        gbc.setState(0xdbb9, 0x531c, 0x9eb0, 0x47ae, 0x5a3, 0x4f32, 0x1, 0x1);
        gbc.writeMem(0xdbb9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x531c, gbc.sp());
        EXPECT(0xdbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb9));
        EXPECT(0x37, gbc.readMem(0xdbba));
        // CB 37 027D
        gbc.setState(0xe74c, 0xadf6, 0xbbe0, 0x63aa, 0x47ac, 0x50ee, 0x0, 0x1);
        gbc.writeMem(0xe74c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xadf6, gbc.sp());
        EXPECT(0xe74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74c));
        EXPECT(0x37, gbc.readMem(0xe74d));
        // CB 37 027E
        gbc.setState(0xc76d, 0x8edd, 0x9450, 0x7912, 0x4a57, 0xea18, 0x0, 0x0);
        gbc.writeMem(0xc76d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0x37, gbc.readMem(0xc76e));
        // CB 37 027F
        gbc.setState(0x1ea4, 0x55f3, 0x4e80, 0xd89f, 0xfbac, 0xdaa1, 0x1, 0x1);
        gbc.writeMem(0x1ea4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x55f3, gbc.sp());
        EXPECT(0x1ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0280
        gbc.setState(0x1ab3, 0xe8dc, 0xe750, 0xe0d, 0x27dc, 0x55da, 0x0, 0x0);
        gbc.writeMem(0x1ab3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0x1ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0281
        gbc.setState(0xe243, 0x9f10, 0xb90, 0xa071, 0x7dcd, 0x72e9, 0x1, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9f10, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe243));
        EXPECT(0x37, gbc.readMem(0xe244));
        // CB 37 0282
        gbc.setState(0x7cbe, 0xa6f7, 0x90a0, 0x10a6, 0xcd62, 0x313d, 0x0, 0x1);
        gbc.writeMem(0x7cbe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0x7cc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0284
        gbc.setState(0x180b, 0xe782, 0x7c40, 0xf7fb, 0x75be, 0x2f5f, 0x0, 0x0);
        gbc.writeMem(0x180b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe782, gbc.sp());
        EXPECT(0x180d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0285
        gbc.setState(0x115e, 0x9a4e, 0x42a0, 0x45a1, 0x2247, 0x63fc, 0x0, 0x0);
        gbc.writeMem(0x115e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9a4e, gbc.sp());
        EXPECT(0x1160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0286
        gbc.setState(0x2709, 0x2bea, 0x32a0, 0x729e, 0x6cde, 0xdeb, 0x0, 0x0);
        gbc.writeMem(0x2709, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2bea, gbc.sp());
        EXPECT(0x270b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0287
        gbc.setState(0x32fd, 0xfb95, 0x84b0, 0xf8dc, 0x7643, 0x7514, 0x1, 0x0);
        gbc.writeMem(0x32fd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0x32ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0288
        gbc.setState(0xa6e6, 0xfc08, 0x7ee0, 0xa7cb, 0xfb9, 0xb13e, 0x1, 0x1);
        gbc.writeMem(0xa6e6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0xa6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e6));
        EXPECT(0x37, gbc.readMem(0xa6e7));
        // CB 37 0289
        gbc.setState(0xa724, 0x454d, 0xe800, 0x602, 0x1b63, 0x5006, 0x1, 0x0);
        gbc.writeMem(0xa724, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x454d, gbc.sp());
        EXPECT(0xa726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa724));
        EXPECT(0x37, gbc.readMem(0xa725));
        // CB 37 028A
        gbc.setState(0x3db2, 0x2799, 0x7a70, 0xcdf5, 0x49cc, 0xa1a7, 0x1, 0x1);
        gbc.writeMem(0x3db2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2799, gbc.sp());
        EXPECT(0x3db4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 028B
        gbc.setState(0x5aff, 0x1cb4, 0x8240, 0xab10, 0x343b, 0x17d4, 0x1, 0x0);
        gbc.writeMem(0x5aff, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1cb4, gbc.sp());
        EXPECT(0x5b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 028C
        gbc.setState(0x478f, 0x5292, 0x34f0, 0xd092, 0x762, 0x95a3, 0x0, 0x1);
        gbc.writeMem(0x478f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5292, gbc.sp());
        EXPECT(0x4791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 028D
        gbc.setState(0x3279, 0x93a1, 0xad0, 0x455f, 0x578e, 0x1b9f, 0x1, 0x0);
        gbc.writeMem(0x3279, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 028E
        gbc.setState(0x227f, 0xab9f, 0x3ba0, 0x39cb, 0xaef2, 0x7079, 0x0, 0x1);
        gbc.writeMem(0x227f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x2281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 028F
        gbc.setState(0x708b, 0x9ec0, 0xa8b0, 0x5b9e, 0x91a4, 0x731d, 0x1, 0x0);
        gbc.writeMem(0x708b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9ec0, gbc.sp());
        EXPECT(0x708d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0290
        gbc.setState(0x6ce2, 0x3aea, 0x40a0, 0x253a, 0x76bd, 0x2860, 0x1, 0x0);
        gbc.writeMem(0x6ce2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3aea, gbc.sp());
        EXPECT(0x6ce4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0291
        gbc.setState(0x9620, 0xaebb, 0x9d50, 0x2c83, 0x8fc8, 0xdfb, 0x1, 0x0);
        gbc.writeMem(0x9620, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaebb, gbc.sp());
        EXPECT(0x9622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9620));
        EXPECT(0x37, gbc.readMem(0x9621));
        // CB 37 0292
        gbc.setState(0xb1d, 0xf51, 0xa3b0, 0xbfdc, 0xf5d5, 0x7e60, 0x1, 0x1);
        gbc.writeMem(0xb1d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf51, gbc.sp());
        EXPECT(0xb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0293
        gbc.setState(0x73cb, 0x69b8, 0x1190, 0x707b, 0x1f93, 0xe847, 0x1, 0x1);
        gbc.writeMem(0x73cb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0x73cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0294
        gbc.setState(0xc380, 0x4243, 0xca0, 0xcfaa, 0xb9a2, 0x878b, 0x1, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4243, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc380));
        EXPECT(0x37, gbc.readMem(0xc381));
        // CB 37 0295
        gbc.setState(0xa0f, 0xa130, 0xb80, 0x4226, 0x789b, 0x2c78, 0x1, 0x1);
        gbc.writeMem(0xa0f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0xa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0296
        gbc.setState(0x835, 0xd192, 0x19a0, 0xa080, 0x3d23, 0xcba9, 0x1, 0x0);
        gbc.writeMem(0x835, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd192, gbc.sp());
        EXPECT(0x837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0297
        gbc.setState(0xa7ca, 0x4246, 0xefc0, 0xf748, 0x918b, 0xb200, 0x1, 0x1);
        gbc.writeMem(0xa7ca, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4246, gbc.sp());
        EXPECT(0xa7cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ca));
        EXPECT(0x37, gbc.readMem(0xa7cb));
        // CB 37 0298
        gbc.setState(0x7aab, 0xcd24, 0x83e0, 0x9309, 0xa617, 0x784f, 0x0, 0x1);
        gbc.writeMem(0x7aab, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x7aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0299
        gbc.setState(0xeca, 0xb86, 0x4a50, 0xd1ac, 0x4aa7, 0x1ae5, 0x0, 0x1);
        gbc.writeMem(0xeca, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb86, gbc.sp());
        EXPECT(0xecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 029A
        gbc.setState(0x86e3, 0x96e6, 0x31b0, 0xcadc, 0xd6e4, 0x17dd, 0x0, 0x0);
        gbc.writeMem(0x86e3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x96e6, gbc.sp());
        EXPECT(0x86e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e3));
        EXPECT(0x37, gbc.readMem(0x86e4));
        // CB 37 029B
        gbc.setState(0x7aba, 0x8171, 0xe640, 0x7008, 0x3a7d, 0x4c51, 0x1, 0x0);
        gbc.writeMem(0x7aba, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8171, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 029C
        gbc.setState(0x265b, 0x27d3, 0xc270, 0x3289, 0x1a9a, 0xd514, 0x0, 0x0);
        gbc.writeMem(0x265b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x27d3, gbc.sp());
        EXPECT(0x265d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 029D
        gbc.setState(0xa7ae, 0xe1ee, 0x8b10, 0x6502, 0x9c27, 0xf7b6, 0x1, 0x1);
        gbc.writeMem(0xa7ae, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe1ee, gbc.sp());
        EXPECT(0xa7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7ae));
        EXPECT(0x37, gbc.readMem(0xa7af));
        // CB 37 029F
        gbc.setState(0x13b9, 0x9c14, 0x3480, 0x852a, 0x635c, 0x5e2d, 0x1, 0x0);
        gbc.writeMem(0x13b9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9c14, gbc.sp());
        EXPECT(0x13bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02A1
        gbc.setState(0xb0af, 0xeb03, 0x1000, 0xbf2c, 0xbce6, 0xf21, 0x0, 0x0);
        gbc.writeMem(0xb0af, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeb03, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0af));
        EXPECT(0x37, gbc.readMem(0xb0b0));
        // CB 37 02A2
        gbc.setState(0x2c01, 0x900, 0xc640, 0x95, 0x776b, 0xeb5c, 0x1, 0x1);
        gbc.writeMem(0x2c01, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x900, gbc.sp());
        EXPECT(0x2c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02A3
        gbc.setState(0x1be6, 0x62b0, 0xbd50, 0xee76, 0xedb4, 0xb155, 0x1, 0x1);
        gbc.writeMem(0x1be6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x62b0, gbc.sp());
        EXPECT(0x1be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02A4
        gbc.setState(0x99e2, 0xf161, 0xc5e0, 0x3bc4, 0x7aac, 0x6c0, 0x0, 0x1);
        gbc.writeMem(0x99e2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0x99e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e2));
        EXPECT(0x37, gbc.readMem(0x99e3));
        // CB 37 02A5
        gbc.setState(0x379d, 0x8af9, 0x1aa0, 0x1bc7, 0xb4c9, 0x7535, 0x0, 0x1);
        gbc.writeMem(0x379d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0x379f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02A6
        gbc.setState(0xec5d, 0x2691, 0xecc0, 0x2194, 0x80d1, 0xd55d, 0x1, 0x1);
        gbc.writeMem(0xec5d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2691, gbc.sp());
        EXPECT(0xec5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5d));
        EXPECT(0x37, gbc.readMem(0xec5e));
        // CB 37 02A7
        gbc.setState(0x92f, 0xf7c5, 0x9f50, 0x2fd2, 0x7a2d, 0x47c6, 0x1, 0x0);
        gbc.writeMem(0x92f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf7c5, gbc.sp());
        EXPECT(0x931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02A8
        gbc.setState(0xb269, 0x2183, 0x390, 0xaaaf, 0xee66, 0x5f9d, 0x1, 0x0);
        gbc.writeMem(0xb269, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2183, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb269));
        EXPECT(0x37, gbc.readMem(0xb26a));
        // CB 37 02A9
        gbc.setState(0xf42, 0xcc21, 0x18a0, 0xc12, 0x687c, 0x74, 0x1, 0x1);
        gbc.writeMem(0xf42, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcc21, gbc.sp());
        EXPECT(0xf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02AA
        gbc.setState(0xe6b4, 0x5bd0, 0xdfb0, 0x3c97, 0xe251, 0xb3e4, 0x1, 0x1);
        gbc.writeMem(0xe6b4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0xe6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b4));
        EXPECT(0x37, gbc.readMem(0xe6b5));
        // CB 37 02AB
        gbc.setState(0xf41, 0x47ed, 0xe8a0, 0x1b62, 0xdb6b, 0xeced, 0x0, 0x1);
        gbc.writeMem(0xf41, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x47ed, gbc.sp());
        EXPECT(0xf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02AC
        gbc.setState(0xa4ab, 0x9469, 0xc210, 0x9081, 0xb315, 0x3456, 0x0, 0x0);
        gbc.writeMem(0xa4ab, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ab));
        EXPECT(0x37, gbc.readMem(0xa4ac));
        // CB 37 02AD
        gbc.setState(0x8cd4, 0xb6ab, 0x2580, 0x8fd4, 0x1bd9, 0x7f89, 0x1, 0x1);
        gbc.writeMem(0x8cd4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb6ab, gbc.sp());
        EXPECT(0x8cd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd4));
        EXPECT(0x37, gbc.readMem(0x8cd5));
        // CB 37 02AE
        gbc.setState(0x316a, 0x97ef, 0x6e80, 0x665a, 0x32e5, 0x8b7b, 0x0, 0x1);
        gbc.writeMem(0x316a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x97ef, gbc.sp());
        EXPECT(0x316c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02AF
        gbc.setState(0xefe3, 0x1649, 0x78a0, 0x99a6, 0x609b, 0xca4d, 0x0, 0x0);
        gbc.writeMem(0xefe3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1649, gbc.sp());
        EXPECT(0xefe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe3));
        EXPECT(0x37, gbc.readMem(0xefe4));
        // CB 37 02B0
        gbc.setState(0x672c, 0x18e8, 0x770, 0x37ea, 0x4536, 0x7d49, 0x0, 0x1);
        gbc.writeMem(0x672c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x18e8, gbc.sp());
        EXPECT(0x672e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02B1
        gbc.setState(0xa979, 0x25b8, 0x6890, 0xcc8b, 0x132, 0xc701, 0x1, 0x0);
        gbc.writeMem(0xa979, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x25b8, gbc.sp());
        EXPECT(0xa97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa979));
        EXPECT(0x37, gbc.readMem(0xa97a));
        // CB 37 02B2
        gbc.setState(0xa26c, 0xa8ad, 0xa5c0, 0xb614, 0x4788, 0x76b1, 0x1, 0x0);
        gbc.writeMem(0xa26c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa8ad, gbc.sp());
        EXPECT(0xa26e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26c));
        EXPECT(0x37, gbc.readMem(0xa26d));
        // CB 37 02B3
        gbc.setState(0x94f5, 0x96b5, 0xfc30, 0x68b0, 0x218a, 0x7a8a, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x96b5, gbc.sp());
        EXPECT(0x94f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f5));
        EXPECT(0x37, gbc.readMem(0x94f6));
        // CB 37 02B4
        gbc.setState(0xb93a, 0x3eb2, 0x43f0, 0xd66c, 0x3f7, 0x4959, 0x0, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3eb2, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93a));
        EXPECT(0x37, gbc.readMem(0xb93b));
        // CB 37 02B5
        gbc.setState(0xd587, 0x194a, 0xbed0, 0x82be, 0xebfa, 0xa203, 0x1, 0x0);
        gbc.writeMem(0xd587, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x194a, gbc.sp());
        EXPECT(0xd589, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd587));
        EXPECT(0x37, gbc.readMem(0xd588));
        // CB 37 02B6
        gbc.setState(0xbc6c, 0x9ae1, 0x7d70, 0xb53b, 0x7884, 0xf59a, 0x0, 0x1);
        gbc.writeMem(0xbc6c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0xbc6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc6c));
        EXPECT(0x37, gbc.readMem(0xbc6d));
        // CB 37 02B7
        gbc.setState(0xa5d5, 0xa15b, 0x48c0, 0x7488, 0xd72e, 0xecb9, 0x1, 0x0);
        gbc.writeMem(0xa5d5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa15b, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d5));
        EXPECT(0x37, gbc.readMem(0xa5d6));
        // CB 37 02B8
        gbc.setState(0x9d00, 0x7e67, 0xd6c0, 0x5250, 0x208a, 0x264b, 0x0, 0x1);
        gbc.writeMem(0x9d00, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e67, gbc.sp());
        EXPECT(0x9d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d00));
        EXPECT(0x37, gbc.readMem(0x9d01));
        // CB 37 02B9
        gbc.setState(0x9725, 0x6c89, 0xb7d0, 0xfbd4, 0xc130, 0x183e, 0x0, 0x0);
        gbc.writeMem(0x9725, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6c89, gbc.sp());
        EXPECT(0x9727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9725));
        EXPECT(0x37, gbc.readMem(0x9726));
        // CB 37 02BA
        gbc.setState(0x52f5, 0x21c0, 0xb520, 0x3fe5, 0x8711, 0x383e, 0x1, 0x0);
        gbc.writeMem(0x52f5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x21c0, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02BC
        gbc.setState(0x306c, 0xad27, 0xedd0, 0x5822, 0x5956, 0x334f, 0x1, 0x0);
        gbc.writeMem(0x306c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0x306e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02BD
        gbc.setState(0xd8db, 0xc6ca, 0xe540, 0x718f, 0xdbb2, 0xbdca, 0x1, 0x1);
        gbc.writeMem(0xd8db, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc6ca, gbc.sp());
        EXPECT(0xd8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8db));
        EXPECT(0x37, gbc.readMem(0xd8dc));
        // CB 37 02BE
        gbc.setState(0x12e0, 0x8ee4, 0xf7e0, 0x333c, 0x16b0, 0xe45c, 0x1, 0x0);
        gbc.writeMem(0x12e0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8ee4, gbc.sp());
        EXPECT(0x12e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02BF
        gbc.setState(0xdd3e, 0xd98f, 0x2800, 0xd318, 0xa6d8, 0x74aa, 0x1, 0x0);
        gbc.writeMem(0xdd3e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xdd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd3e));
        EXPECT(0x37, gbc.readMem(0xdd3f));
        // CB 37 02C0
        gbc.setState(0xf94, 0x7573, 0x8120, 0x634b, 0xc83c, 0x144d, 0x0, 0x1);
        gbc.writeMem(0xf94, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7573, gbc.sp());
        EXPECT(0xf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C1
        gbc.setState(0x5c0b, 0x3d98, 0x4b00, 0x1e15, 0xb5f5, 0x9cdb, 0x0, 0x0);
        gbc.writeMem(0x5c0b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3d98, gbc.sp());
        EXPECT(0x5c0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C3
        gbc.setState(0x5b6f, 0x2460, 0x79d0, 0x267a, 0x4207, 0xc63d, 0x1, 0x1);
        gbc.writeMem(0x5b6f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2460, gbc.sp());
        EXPECT(0x5b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C4
        gbc.setState(0x3ba6, 0xe9b4, 0x34b0, 0x51bb, 0x2b28, 0x7969, 0x1, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe9b4, gbc.sp());
        EXPECT(0x3ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C5
        gbc.setState(0x2e46, 0x2b47, 0x3680, 0x9bee, 0x5061, 0xa4b2, 0x1, 0x1);
        gbc.writeMem(0x2e46, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0x2e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C6
        gbc.setState(0xa489, 0x51ed, 0xfd20, 0x3103, 0x5671, 0xb226, 0x0, 0x0);
        gbc.writeMem(0xa489, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x51ed, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0x37, gbc.readMem(0xa48a));
        // CB 37 02C7
        gbc.setState(0xde79, 0x8786, 0x8830, 0x8ece, 0x7a9a, 0xb70b, 0x0, 0x1);
        gbc.writeMem(0xde79, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8786, gbc.sp());
        EXPECT(0xde7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde79));
        EXPECT(0x37, gbc.readMem(0xde7a));
        // CB 37 02C8
        gbc.setState(0x58e2, 0xbec7, 0xab20, 0xb36b, 0x7103, 0x7587, 0x0, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbec7, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02C9
        gbc.setState(0xd581, 0x1cc3, 0xcf50, 0xdddc, 0xe201, 0xf421, 0x0, 0x1);
        gbc.writeMem(0xd581, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1cc3, gbc.sp());
        EXPECT(0xd583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd581));
        EXPECT(0x37, gbc.readMem(0xd582));
        // CB 37 02CA
        gbc.setState(0x2d42, 0x6948, 0xc260, 0x68b1, 0x86da, 0x1406, 0x0, 0x0);
        gbc.writeMem(0x2d42, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6948, gbc.sp());
        EXPECT(0x2d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02CB
        gbc.setState(0xbd71, 0xc8ba, 0x3b0, 0xa05b, 0x3088, 0x2199, 0x0, 0x0);
        gbc.writeMem(0xbd71, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc8ba, gbc.sp());
        EXPECT(0xbd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd71));
        EXPECT(0x37, gbc.readMem(0xbd72));
        // CB 37 02CC
        gbc.setState(0x8061, 0xd0ab, 0xcd30, 0x3b08, 0xb157, 0x8e21, 0x1, 0x1);
        gbc.writeMem(0x8061, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd0ab, gbc.sp());
        EXPECT(0x8063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8061));
        EXPECT(0x37, gbc.readMem(0x8062));
        // CB 37 02CD
        gbc.setState(0x49d1, 0xe54, 0xaed0, 0x1ab7, 0xa284, 0x8722, 0x1, 0x1);
        gbc.writeMem(0x49d1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x49d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02CE
        gbc.setState(0x6c11, 0x8396, 0xb2f0, 0xaa9, 0x941c, 0xb545, 0x1, 0x0);
        gbc.writeMem(0x6c11, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8396, gbc.sp());
        EXPECT(0x6c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02CF
        gbc.setState(0x6f16, 0x6b08, 0x9b90, 0xd92a, 0x188f, 0x991, 0x0, 0x0);
        gbc.writeMem(0x6f16, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6b08, gbc.sp());
        EXPECT(0x6f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02D0
        gbc.setState(0xaf47, 0x63ff, 0x7f40, 0xd8e8, 0x274b, 0xb7a9, 0x1, 0x0);
        gbc.writeMem(0xaf47, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x63ff, gbc.sp());
        EXPECT(0xaf49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf47));
        EXPECT(0x37, gbc.readMem(0xaf48));
        // CB 37 02D1
        gbc.setState(0x8f81, 0x1f9f, 0x7e70, 0xa25f, 0xdb0e, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x8f81, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1f9f, gbc.sp());
        EXPECT(0x8f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f81));
        EXPECT(0x37, gbc.readMem(0x8f82));
        // CB 37 02D2
        gbc.setState(0x3e5a, 0xbff4, 0x1850, 0x90dd, 0xa7e1, 0x8343, 0x0, 0x1);
        gbc.writeMem(0x3e5a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbff4, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02D3
        gbc.setState(0x332b, 0x777a, 0x9080, 0xf4f1, 0x2e3c, 0xc3a4, 0x0, 0x1);
        gbc.writeMem(0x332b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x777a, gbc.sp());
        EXPECT(0x332d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02D5
        gbc.setState(0xe30a, 0x16a8, 0xcb70, 0x4b7, 0x39a1, 0x455a, 0x1, 0x0);
        gbc.writeMem(0xe30a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x16a8, gbc.sp());
        EXPECT(0xe30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe30a));
        EXPECT(0x37, gbc.readMem(0xe30b));
        // CB 37 02D6
        gbc.setState(0x321a, 0x6df3, 0x2a10, 0x6e48, 0x6dc0, 0x70c9, 0x1, 0x1);
        gbc.writeMem(0x321a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6df3, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02D7
        gbc.setState(0xcd36, 0x3e5a, 0x9f10, 0xbca6, 0x555a, 0x9b5e, 0x0, 0x1);
        gbc.writeMem(0xcd36, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3e5a, gbc.sp());
        EXPECT(0xcd38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd36));
        EXPECT(0x37, gbc.readMem(0xcd37));
        // CB 37 02D8
        gbc.setState(0x212d, 0x2e62, 0x4c0, 0xe0cb, 0x660e, 0x4b9d, 0x0, 0x1);
        gbc.writeMem(0x212d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2e62, gbc.sp());
        EXPECT(0x212f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02D9
        gbc.setState(0xb2d5, 0x59e6, 0x5be0, 0xd4a9, 0xa3d0, 0xa5a4, 0x0, 0x1);
        gbc.writeMem(0xb2d5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x59e6, gbc.sp());
        EXPECT(0xb2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2d5));
        EXPECT(0x37, gbc.readMem(0xb2d6));
        // CB 37 02DA
        gbc.setState(0x7730, 0x4d2a, 0xa880, 0x2fd5, 0xf1bb, 0xde0e, 0x0, 0x1);
        gbc.writeMem(0x7730, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d2a, gbc.sp());
        EXPECT(0x7732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02DB
        gbc.setState(0x56c3, 0x8f21, 0xb90, 0x5d44, 0x9cc9, 0xa4b7, 0x1, 0x0);
        gbc.writeMem(0x56c3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8f21, gbc.sp());
        EXPECT(0x56c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02DC
        gbc.setState(0x31b5, 0x370c, 0xa630, 0x991c, 0xe174, 0x4a56, 0x0, 0x1);
        gbc.writeMem(0x31b5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x370c, gbc.sp());
        EXPECT(0x31b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02DD
        gbc.setState(0xce23, 0xf02b, 0xa180, 0x27c, 0x19d8, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0xce23, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf02b, gbc.sp());
        EXPECT(0xce25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce23));
        EXPECT(0x37, gbc.readMem(0xce24));
        // CB 37 02DE
        gbc.setState(0xc2cc, 0x1408, 0xe6d0, 0xb210, 0xfa24, 0x211, 0x1, 0x1);
        gbc.writeMem(0xc2cc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x1408, gbc.sp());
        EXPECT(0xc2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cc));
        EXPECT(0x37, gbc.readMem(0xc2cd));
        // CB 37 02DF
        gbc.setState(0x36ba, 0xcd24, 0x4d80, 0xcc72, 0x3646, 0xdce4, 0x0, 0x1);
        gbc.writeMem(0x36ba, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcd24, gbc.sp());
        EXPECT(0x36bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02E0
        gbc.setState(0x5130, 0xd48e, 0xe190, 0xbe9b, 0x9554, 0x70c6, 0x0, 0x1);
        gbc.writeMem(0x5130, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd48e, gbc.sp());
        EXPECT(0x5132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02E1
        gbc.setState(0xcef7, 0x8088, 0x77b0, 0xf163, 0x8301, 0x8bea, 0x0, 0x0);
        gbc.writeMem(0xcef7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8088, gbc.sp());
        EXPECT(0xcef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef7));
        EXPECT(0x37, gbc.readMem(0xcef8));
        // CB 37 02E2
        gbc.setState(0x5cfe, 0x54bb, 0xede0, 0x8b20, 0x8c46, 0x6595, 0x1, 0x1);
        gbc.writeMem(0x5cfe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x54bb, gbc.sp());
        EXPECT(0x5d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02E3
        gbc.setState(0xcffd, 0xd9e3, 0x630, 0xcf0f, 0x71c8, 0x727f, 0x1, 0x1);
        gbc.writeMem(0xcffd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0xcfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffd));
        EXPECT(0x37, gbc.readMem(0xcffe));
        // CB 37 02E4
        gbc.setState(0x68d, 0xb82d, 0xd860, 0x1e51, 0xf964, 0x448d, 0x1, 0x0);
        gbc.writeMem(0x68d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb82d, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02E5
        gbc.setState(0xa76b, 0xa6ec, 0xa620, 0xfa70, 0x5741, 0xd7a7, 0x0, 0x0);
        gbc.writeMem(0xa76b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa6ec, gbc.sp());
        EXPECT(0xa76d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76b));
        EXPECT(0x37, gbc.readMem(0xa76c));
        // CB 37 02E6
        gbc.setState(0xecc9, 0xf136, 0x8130, 0xa6c2, 0x6861, 0x5815, 0x0, 0x1);
        gbc.writeMem(0xecc9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf136, gbc.sp());
        EXPECT(0xeccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc9));
        EXPECT(0x37, gbc.readMem(0xecca));
        // CB 37 02E8
        gbc.setState(0xa8d3, 0x9de2, 0x3f60, 0x5885, 0x6bed, 0xca5, 0x0, 0x0);
        gbc.writeMem(0xa8d3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0xa8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d3));
        EXPECT(0x37, gbc.readMem(0xa8d4));
        // CB 37 02E9
        gbc.setState(0x199a, 0xe933, 0x5bd0, 0x3304, 0xf1f3, 0x2cfa, 0x1, 0x1);
        gbc.writeMem(0x199a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe933, gbc.sp());
        EXPECT(0x199c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02EA
        gbc.setState(0x8961, 0x4e3e, 0x4430, 0xc436, 0xbe62, 0x6289, 0x1, 0x1);
        gbc.writeMem(0x8961, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4e3e, gbc.sp());
        EXPECT(0x8963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8961));
        EXPECT(0x37, gbc.readMem(0x8962));
        // CB 37 02EB
        gbc.setState(0x81c1, 0xbba2, 0x1110, 0x757e, 0xe71, 0x4aa1, 0x1, 0x1);
        gbc.writeMem(0x81c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbba2, gbc.sp());
        EXPECT(0x81c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c1));
        EXPECT(0x37, gbc.readMem(0x81c2));
        // CB 37 02EC
        gbc.setState(0x7157, 0xb2f0, 0x3660, 0x392a, 0xfc18, 0xc568, 0x0, 0x1);
        gbc.writeMem(0x7157, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb2f0, gbc.sp());
        EXPECT(0x7159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02ED
        gbc.setState(0xc503, 0x8300, 0x2e70, 0xf3c0, 0xdb9e, 0xc6ee, 0x1, 0x0);
        gbc.writeMem(0xc503, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8300, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0x37, gbc.readMem(0xc504));
        // CB 37 02EE
        gbc.setState(0x7b1d, 0xc989, 0xca10, 0x7224, 0xba6c, 0x9fea, 0x0, 0x1);
        gbc.writeMem(0x7b1d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc989, gbc.sp());
        EXPECT(0x7b1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02EF
        gbc.setState(0xc4b0, 0x8e9f, 0xfd20, 0xb6e5, 0x24ed, 0x2d24, 0x0, 0x1);
        gbc.writeMem(0xc4b0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8e9f, gbc.sp());
        EXPECT(0xc4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b0));
        EXPECT(0x37, gbc.readMem(0xc4b1));
        // CB 37 02F0
        gbc.setState(0x3d61, 0x22df, 0xdb0, 0x4a37, 0x90ca, 0xab87, 0x0, 0x1);
        gbc.writeMem(0x3d61, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x22df, gbc.sp());
        EXPECT(0x3d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02F1
        gbc.setState(0x132e, 0xe030, 0x9500, 0x4760, 0x5a27, 0x246e, 0x0, 0x1);
        gbc.writeMem(0x132e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe030, gbc.sp());
        EXPECT(0x1330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02F2
        gbc.setState(0x999a, 0x4205, 0xf680, 0xf6d1, 0x72b6, 0xb8bc, 0x1, 0x0);
        gbc.writeMem(0x999a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4205, gbc.sp());
        EXPECT(0x999c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999a));
        EXPECT(0x37, gbc.readMem(0x999b));
        // CB 37 02F3
        gbc.setState(0x49d6, 0xd48a, 0xb090, 0x553e, 0x66fb, 0x18e5, 0x1, 0x1);
        gbc.writeMem(0x49d6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd48a, gbc.sp());
        EXPECT(0x49d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02F4
        gbc.setState(0x790f, 0x60a0, 0x3b90, 0x27ff, 0xd315, 0xb8d8, 0x1, 0x0);
        gbc.writeMem(0x790f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x60a0, gbc.sp());
        EXPECT(0x7911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02F5
        gbc.setState(0xcbbe, 0xd676, 0x5c80, 0x4a57, 0xb54e, 0xea80, 0x1, 0x0);
        gbc.writeMem(0xcbbe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd676, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbe));
        EXPECT(0x37, gbc.readMem(0xcbbf));
        // CB 37 02F6
        gbc.setState(0xc40f, 0xe71, 0x6420, 0x6ffa, 0x48f1, 0x9eab, 0x1, 0x0);
        gbc.writeMem(0xc40f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe71, gbc.sp());
        EXPECT(0xc411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc40f));
        EXPECT(0x37, gbc.readMem(0xc410));
        // CB 37 02F7
        gbc.setState(0x3e93, 0x9155, 0xe260, 0xdc51, 0xf652, 0x190, 0x1, 0x0);
        gbc.writeMem(0x3e93, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9155, gbc.sp());
        EXPECT(0x3e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02F8
        gbc.setState(0xd7a9, 0xa198, 0xd2a0, 0x8390, 0xee81, 0xb24c, 0x1, 0x1);
        gbc.writeMem(0xd7a9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa198, gbc.sp());
        EXPECT(0xd7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7a9));
        EXPECT(0x37, gbc.readMem(0xd7aa));
        // CB 37 02F9
        gbc.setState(0xed63, 0xe09b, 0xbc00, 0xefd4, 0x23dc, 0x8191, 0x0, 0x1);
        gbc.writeMem(0xed63, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe09b, gbc.sp());
        EXPECT(0xed65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed63));
        EXPECT(0x37, gbc.readMem(0xed64));
        // CB 37 02FA
        gbc.setState(0x87c6, 0xbba6, 0x70d0, 0xf5af, 0x458b, 0xe6f8, 0x1, 0x1);
        gbc.writeMem(0x87c6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87c6));
        EXPECT(0x37, gbc.readMem(0x87c7));
        // CB 37 02FB
        gbc.setState(0x2314, 0x977, 0x2860, 0x630f, 0xf342, 0x6141, 0x0, 0x1);
        gbc.writeMem(0x2314, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x2316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 02FD
        gbc.setState(0xa483, 0xa2c6, 0x50e0, 0x5a54, 0x4817, 0xb644, 0x1, 0x0);
        gbc.writeMem(0xa483, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa2c6, gbc.sp());
        EXPECT(0xa485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa483));
        EXPECT(0x37, gbc.readMem(0xa484));
        // CB 37 02FE
        gbc.setState(0xbca3, 0x500c, 0xd0b0, 0xdffa, 0xfc28, 0xaa26, 0x0, 0x0);
        gbc.writeMem(0xbca3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x500c, gbc.sp());
        EXPECT(0xbca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca3));
        EXPECT(0x37, gbc.readMem(0xbca4));
        // CB 37 02FF
        gbc.setState(0xa096, 0x1426, 0xcda0, 0x9f4c, 0x525c, 0xf174, 0x1, 0x1);
        gbc.writeMem(0xa096, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1426, gbc.sp());
        EXPECT(0xa098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa096));
        EXPECT(0x37, gbc.readMem(0xa097));
        // CB 37 0300
        gbc.setState(0x6fb2, 0x309, 0x96b0, 0xfd2d, 0xaaa, 0xd6b3, 0x0, 0x1);
        gbc.writeMem(0x6fb2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x309, gbc.sp());
        EXPECT(0x6fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0302
        gbc.setState(0x4eb3, 0xe8f5, 0xceb0, 0x7574, 0x5223, 0x3e5f, 0x0, 0x1);
        gbc.writeMem(0x4eb3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe8f5, gbc.sp());
        EXPECT(0x4eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0303
        gbc.setState(0xd060, 0x1178, 0xa90, 0x4113, 0xb9f2, 0x66e9, 0x0, 0x1);
        gbc.writeMem(0xd060, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1178, gbc.sp());
        EXPECT(0xd062, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd060));
        EXPECT(0x37, gbc.readMem(0xd061));
        // CB 37 0304
        gbc.setState(0x821d, 0x21a4, 0x48f0, 0xa885, 0x4119, 0xe525, 0x1, 0x0);
        gbc.writeMem(0x821d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x21a4, gbc.sp());
        EXPECT(0x821f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821d));
        EXPECT(0x37, gbc.readMem(0x821e));
        // CB 37 0305
        gbc.setState(0x4ed4, 0x5d1a, 0xd4a0, 0xf8f9, 0x2717, 0xab0c, 0x1, 0x1);
        gbc.writeMem(0x4ed4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5d1a, gbc.sp());
        EXPECT(0x4ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0307
        gbc.setState(0x347a, 0x4cdf, 0x9a50, 0x3c8f, 0xea98, 0xda07, 0x1, 0x0);
        gbc.writeMem(0x347a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4cdf, gbc.sp());
        EXPECT(0x347c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0308
        gbc.setState(0x7f0a, 0x5320, 0x7ef0, 0x6433, 0x17e0, 0xc3f0, 0x0, 0x1);
        gbc.writeMem(0x7f0a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5320, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0309
        gbc.setState(0x37f0, 0x5345, 0xf690, 0x7c25, 0xced0, 0x70a7, 0x1, 0x1);
        gbc.writeMem(0x37f0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5345, gbc.sp());
        EXPECT(0x37f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 030A
        gbc.setState(0x8599, 0x6987, 0x6fa0, 0xbdea, 0xafcd, 0x1d6c, 0x1, 0x1);
        gbc.writeMem(0x8599, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6987, gbc.sp());
        EXPECT(0x859b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8599));
        EXPECT(0x37, gbc.readMem(0x859a));
        // CB 37 030B
        gbc.setState(0x20ae, 0x442d, 0xd4f0, 0x5727, 0x4ea0, 0x2c9b, 0x0, 0x1);
        gbc.writeMem(0x20ae, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x442d, gbc.sp());
        EXPECT(0x20b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 030C
        gbc.setState(0xad3d, 0xc9b6, 0x9880, 0xe670, 0xfd48, 0x7575, 0x0, 0x0);
        gbc.writeMem(0xad3d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc9b6, gbc.sp());
        EXPECT(0xad3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad3d));
        EXPECT(0x37, gbc.readMem(0xad3e));
        // CB 37 030D
        gbc.setState(0x2405, 0xd9bc, 0xdcb0, 0xea74, 0x9924, 0xff01, 0x0, 0x0);
        gbc.writeMem(0x2405, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9bc, gbc.sp());
        EXPECT(0x2407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 030E
        gbc.setState(0x5c1a, 0x67a6, 0x71b0, 0x8ce4, 0x27de, 0x9e7e, 0x1, 0x0);
        gbc.writeMem(0x5c1a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x67a6, gbc.sp());
        EXPECT(0x5c1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 030F
        gbc.setState(0x4de4, 0xa996, 0x3440, 0xa18, 0x7792, 0x1f1, 0x1, 0x0);
        gbc.writeMem(0x4de4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa996, gbc.sp());
        EXPECT(0x4de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0310
        gbc.setState(0x4f8d, 0x294b, 0xacb0, 0x7f4e, 0x1bc1, 0x22ed, 0x1, 0x0);
        gbc.writeMem(0x4f8d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x294b, gbc.sp());
        EXPECT(0x4f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0311
        gbc.setState(0xa866, 0xcd4d, 0x7360, 0x4374, 0x8c66, 0xafb4, 0x1, 0x0);
        gbc.writeMem(0xa866, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcd4d, gbc.sp());
        EXPECT(0xa868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa866));
        EXPECT(0x37, gbc.readMem(0xa867));
        // CB 37 0312
        gbc.setState(0x80e1, 0xd556, 0x6220, 0x5851, 0x8204, 0xeeb2, 0x1, 0x1);
        gbc.writeMem(0x80e1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd556, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0x37, gbc.readMem(0x80e2));
        // CB 37 0313
        gbc.setState(0x2c7c, 0xaaca, 0xbdb0, 0xc5e9, 0xef4d, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0x2c7c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaaca, gbc.sp());
        EXPECT(0x2c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0314
        gbc.setState(0x8c18, 0xc2a3, 0xae80, 0x44af, 0x7827, 0x82c, 0x1, 0x0);
        gbc.writeMem(0x8c18, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc2a3, gbc.sp());
        EXPECT(0x8c1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c18));
        EXPECT(0x37, gbc.readMem(0x8c19));
        // CB 37 0315
        gbc.setState(0x1695, 0x354c, 0x4cb0, 0xdaba, 0xa3ce, 0xcf90, 0x1, 0x0);
        gbc.writeMem(0x1695, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x354c, gbc.sp());
        EXPECT(0x1697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0316
        gbc.setState(0x9c6, 0x686b, 0x4ce0, 0xb3b2, 0x6413, 0xe40a, 0x0, 0x0);
        gbc.writeMem(0x9c6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x686b, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0317
        gbc.setState(0x8efe, 0x29f5, 0xf450, 0x2ac6, 0x81e5, 0x84ad, 0x0, 0x0);
        gbc.writeMem(0x8efe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x29f5, gbc.sp());
        EXPECT(0x8f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8efe));
        EXPECT(0x37, gbc.readMem(0x8eff));
        // CB 37 0318
        gbc.setState(0x3e7e, 0x954, 0xf000, 0xa63c, 0xa7a5, 0x66c8, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x954, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0319
        gbc.setState(0x70d5, 0x5db8, 0x5380, 0x63fc, 0x3678, 0x21db, 0x0, 0x0);
        gbc.writeMem(0x70d5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0x70d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 031A
        gbc.setState(0x98a2, 0xb968, 0xdde0, 0x349, 0x5fd6, 0xf463, 0x0, 0x1);
        gbc.writeMem(0x98a2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb968, gbc.sp());
        EXPECT(0x98a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a2));
        EXPECT(0x37, gbc.readMem(0x98a3));
        // CB 37 031B
        gbc.setState(0x9603, 0xaba4, 0xbc20, 0x528c, 0xf4fa, 0xbc0e, 0x0, 0x1);
        gbc.writeMem(0x9603, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaba4, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9603));
        EXPECT(0x37, gbc.readMem(0x9604));
        // CB 37 031C
        gbc.setState(0xed59, 0xf54e, 0xab0, 0xee03, 0xcb78, 0xdb67, 0x0, 0x0);
        gbc.writeMem(0xed59, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf54e, gbc.sp());
        EXPECT(0xed5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed59));
        EXPECT(0x37, gbc.readMem(0xed5a));
        // CB 37 031D
        gbc.setState(0x1dd8, 0x1b56, 0xc2e0, 0xfd3e, 0x43ba, 0x2404, 0x1, 0x1);
        gbc.writeMem(0x1dd8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1b56, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 031E
        gbc.setState(0x85c1, 0x6c77, 0x4ed0, 0x37a0, 0xf0ec, 0xa5bc, 0x1, 0x1);
        gbc.writeMem(0x85c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6c77, gbc.sp());
        EXPECT(0x85c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c1));
        EXPECT(0x37, gbc.readMem(0x85c2));
        // CB 37 031F
        gbc.setState(0xd0f9, 0x69fa, 0xf070, 0xf4f9, 0x111b, 0x4e4f, 0x1, 0x0);
        gbc.writeMem(0xd0f9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x69fa, gbc.sp());
        EXPECT(0xd0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f9));
        EXPECT(0x37, gbc.readMem(0xd0fa));
        // CB 37 0320
        gbc.setState(0x9332, 0xc932, 0x3010, 0x4d1f, 0x2960, 0x5ebe, 0x0, 0x0);
        gbc.writeMem(0x9332, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc932, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9332));
        EXPECT(0x37, gbc.readMem(0x9333));
        // CB 37 0321
        gbc.setState(0x22c1, 0x4812, 0x2c50, 0x681c, 0xd720, 0x431c, 0x0, 0x1);
        gbc.writeMem(0x22c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4812, gbc.sp());
        EXPECT(0x22c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0322
        gbc.setState(0x6fc9, 0xe44c, 0xdb90, 0xe74b, 0xe4a5, 0xde44, 0x0, 0x0);
        gbc.writeMem(0x6fc9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe44c, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0323
        gbc.setState(0x3878, 0x468b, 0x2380, 0x56d2, 0xde52, 0x4ec, 0x0, 0x1);
        gbc.writeMem(0x3878, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x468b, gbc.sp());
        EXPECT(0x387a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0325
        gbc.setState(0xa691, 0x6590, 0x4a0, 0x49a2, 0x7b8f, 0xea5d, 0x1, 0x1);
        gbc.writeMem(0xa691, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6590, gbc.sp());
        EXPECT(0xa693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa691));
        EXPECT(0x37, gbc.readMem(0xa692));
        // CB 37 0326
        gbc.setState(0x4423, 0xf301, 0x5070, 0xb3cd, 0xad55, 0x680a, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf301, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0327
        gbc.setState(0x1542, 0xe214, 0xf270, 0xda6a, 0xa316, 0x8f13, 0x0, 0x1);
        gbc.writeMem(0x1542, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe214, gbc.sp());
        EXPECT(0x1544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0328
        gbc.setState(0xad7c, 0xbb46, 0xb350, 0xff7b, 0x6642, 0xd9eb, 0x0, 0x1);
        gbc.writeMem(0xad7c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xbb46, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7c));
        EXPECT(0x37, gbc.readMem(0xad7d));
        // CB 37 0329
        gbc.setState(0x4dfa, 0x7a1c, 0x65d0, 0xd616, 0x51d2, 0x53e5, 0x1, 0x0);
        gbc.writeMem(0x4dfa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7a1c, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 032A
        gbc.setState(0xc1c3, 0xe9b, 0x84b0, 0xe618, 0x1be0, 0x9950, 0x1, 0x1);
        gbc.writeMem(0xc1c3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe9b, gbc.sp());
        EXPECT(0xc1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c3));
        EXPECT(0x37, gbc.readMem(0xc1c4));
        // CB 37 032B
        gbc.setState(0x41af, 0x4917, 0xfe50, 0x9f7a, 0x8a58, 0x5ce3, 0x1, 0x1);
        gbc.writeMem(0x41af, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4917, gbc.sp());
        EXPECT(0x41b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 032C
        gbc.setState(0xda52, 0x908, 0xf940, 0x8e33, 0x4a5c, 0x3b6b, 0x0, 0x0);
        gbc.writeMem(0xda52, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0xda54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda52));
        EXPECT(0x37, gbc.readMem(0xda53));
        // CB 37 032D
        gbc.setState(0x945b, 0xe4e2, 0xad70, 0xdb92, 0xe312, 0xaeb9, 0x1, 0x1);
        gbc.writeMem(0x945b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe4e2, gbc.sp());
        EXPECT(0x945d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x945b));
        EXPECT(0x37, gbc.readMem(0x945c));
        // CB 37 032E
        gbc.setState(0x6a33, 0x3853, 0xf170, 0x15fd, 0xfd5e, 0xf34e, 0x0, 0x0);
        gbc.writeMem(0x6a33, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3853, gbc.sp());
        EXPECT(0x6a35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 032F
        gbc.setState(0x8065, 0xa0ec, 0xd20, 0xbd3e, 0x7a66, 0x1657, 0x1, 0x0);
        gbc.writeMem(0x8065, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8065));
        EXPECT(0x37, gbc.readMem(0x8066));
        // CB 37 0330
        gbc.setState(0xc00f, 0x133b, 0x14f0, 0xbdb8, 0x799f, 0xd97f, 0x0, 0x0);
        gbc.writeMem(0xc00f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x133b, gbc.sp());
        EXPECT(0xc011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00f));
        EXPECT(0x37, gbc.readMem(0xc010));
        // CB 37 0331
        gbc.setState(0xdd80, 0x192f, 0xcd00, 0xb241, 0xe3c6, 0x4162, 0x1, 0x0);
        gbc.writeMem(0xdd80, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x192f, gbc.sp());
        EXPECT(0xdd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd80));
        EXPECT(0x37, gbc.readMem(0xdd81));
        // CB 37 0332
        gbc.setState(0xba25, 0x99ba, 0x5d0, 0xc10a, 0xd674, 0x18cc, 0x0, 0x0);
        gbc.writeMem(0xba25, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x99ba, gbc.sp());
        EXPECT(0xba27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba25));
        EXPECT(0x37, gbc.readMem(0xba26));
        // CB 37 0333
        gbc.setState(0xd368, 0xdb7e, 0x84e0, 0x6697, 0x78cb, 0xb5ec, 0x0, 0x1);
        gbc.writeMem(0xd368, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb7e, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd368));
        EXPECT(0x37, gbc.readMem(0xd369));
        // CB 37 0334
        gbc.setState(0x1c6d, 0xb86b, 0x55b0, 0x9502, 0xaacc, 0x473e, 0x0, 0x1);
        gbc.writeMem(0x1c6d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb86b, gbc.sp());
        EXPECT(0x1c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0335
        gbc.setState(0xe815, 0x2a42, 0x3110, 0xc642, 0x889, 0xbfbc, 0x0, 0x1);
        gbc.writeMem(0xe815, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2a42, gbc.sp());
        EXPECT(0xe817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe815));
        EXPECT(0x37, gbc.readMem(0xe816));
        // CB 37 0337
        gbc.setState(0xc77d, 0x11b4, 0x2080, 0x6820, 0xcc1b, 0xd745, 0x0, 0x0);
        gbc.writeMem(0xc77d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x11b4, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77d));
        EXPECT(0x37, gbc.readMem(0xc77e));
        // CB 37 0338
        gbc.setState(0x781b, 0xf163, 0x62e0, 0x9693, 0xaf11, 0xc2df, 0x0, 0x0);
        gbc.writeMem(0x781b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf163, gbc.sp());
        EXPECT(0x781d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0339
        gbc.setState(0x2bbe, 0x335a, 0x69f0, 0xad81, 0x27ff, 0xdfb0, 0x0, 0x1);
        gbc.writeMem(0x2bbe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x335a, gbc.sp());
        EXPECT(0x2bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033A
        gbc.setState(0xd5c, 0xda42, 0x9bb0, 0xcbf0, 0xe41f, 0x1159, 0x1, 0x0);
        gbc.writeMem(0xd5c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xda42, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033B
        gbc.setState(0x5038, 0xbd3d, 0x9f40, 0x23ff, 0x75ab, 0xa7f5, 0x0, 0x0);
        gbc.writeMem(0x5038, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd3d, gbc.sp());
        EXPECT(0x503a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033C
        gbc.setState(0x46f0, 0x58e0, 0xf870, 0x155f, 0xb9e6, 0xa67a, 0x0, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x58e0, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033D
        gbc.setState(0x333b, 0xe554, 0xc0b0, 0x766d, 0x613d, 0x36be, 0x0, 0x1);
        gbc.writeMem(0x333b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0x333d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033E
        gbc.setState(0x1987, 0xcfab, 0x3690, 0xb043, 0xd2e1, 0xc72e, 0x0, 0x1);
        gbc.writeMem(0x1987, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcfab, gbc.sp());
        EXPECT(0x1989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 033F
        gbc.setState(0x5b2b, 0xfb31, 0x8120, 0xa707, 0x7569, 0x427e, 0x0, 0x0);
        gbc.writeMem(0x5b2b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfb31, gbc.sp());
        EXPECT(0x5b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0340
        gbc.setState(0xb8d8, 0x7a0, 0x3a70, 0xdbdf, 0x2cea, 0xe92d, 0x0, 0x0);
        gbc.writeMem(0xb8d8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0xb8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8d8));
        EXPECT(0x37, gbc.readMem(0xb8d9));
        // CB 37 0341
        gbc.setState(0x9faa, 0x5f9e, 0x1f30, 0x7337, 0x7791, 0x481b, 0x0, 0x0);
        gbc.writeMem(0x9faa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x9fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9faa));
        EXPECT(0x37, gbc.readMem(0x9fab));
        // CB 37 0342
        gbc.setState(0x4f52, 0x5d3f, 0xa640, 0x146, 0xd7f5, 0xc407, 0x0, 0x1);
        gbc.writeMem(0x4f52, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d3f, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0343
        gbc.setState(0x22a5, 0x52a1, 0xc3c0, 0x5b82, 0xeb62, 0x417d, 0x0, 0x1);
        gbc.writeMem(0x22a5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0344
        gbc.setState(0x12fd, 0x97e9, 0x1a50, 0xf4e4, 0x711b, 0x9c70, 0x0, 0x0);
        gbc.writeMem(0x12fd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x97e9, gbc.sp());
        EXPECT(0x12ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0345
        gbc.setState(0x26e4, 0xd79b, 0x29e0, 0xe42d, 0x7020, 0x83b4, 0x0, 0x0);
        gbc.writeMem(0x26e4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0346
        gbc.setState(0x135c, 0x98c7, 0x7350, 0xa3c8, 0xe602, 0xe848, 0x1, 0x0);
        gbc.writeMem(0x135c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x98c7, gbc.sp());
        EXPECT(0x135e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0347
        gbc.setState(0x899d, 0x3958, 0x6050, 0xa327, 0xb2f3, 0x2e3e, 0x0, 0x0);
        gbc.writeMem(0x899d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3958, gbc.sp());
        EXPECT(0x899f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x899d));
        EXPECT(0x37, gbc.readMem(0x899e));
        // CB 37 0348
        gbc.setState(0xbda, 0x3807, 0x4b00, 0x5995, 0x2a82, 0xe6ab, 0x1, 0x1);
        gbc.writeMem(0xbda, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0xbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0349
        gbc.setState(0x5c62, 0x82a0, 0x6b0, 0x8521, 0x7245, 0x75e2, 0x1, 0x0);
        gbc.writeMem(0x5c62, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x5c64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 034A
        gbc.setState(0xe740, 0x694f, 0xd900, 0x6c18, 0x7dd1, 0x96e6, 0x0, 0x0);
        gbc.writeMem(0xe740, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x694f, gbc.sp());
        EXPECT(0xe742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe740));
        EXPECT(0x37, gbc.readMem(0xe741));
        // CB 37 034B
        gbc.setState(0x3588, 0xd705, 0xfda0, 0xf021, 0xa05f, 0x10fd, 0x1, 0x0);
        gbc.writeMem(0x3588, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd705, gbc.sp());
        EXPECT(0x358a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 034C
        gbc.setState(0x10e3, 0xf0b0, 0xe350, 0x31eb, 0xfa9c, 0x249e, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf0b0, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 034D
        gbc.setState(0x6b00, 0x42e0, 0xe4a0, 0x9e78, 0x431a, 0x6d75, 0x1, 0x0);
        gbc.writeMem(0x6b00, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x42e0, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 034E
        gbc.setState(0xbd4e, 0xb9f1, 0x2710, 0xba39, 0xb5f7, 0x54d3, 0x1, 0x0);
        gbc.writeMem(0xbd4e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb9f1, gbc.sp());
        EXPECT(0xbd50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4e));
        EXPECT(0x37, gbc.readMem(0xbd4f));
        // CB 37 034F
        gbc.setState(0xe069, 0xa816, 0xa000, 0x65a0, 0x7769, 0x97e9, 0x0, 0x1);
        gbc.writeMem(0xe069, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa816, gbc.sp());
        EXPECT(0xe06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe069));
        EXPECT(0x37, gbc.readMem(0xe06a));
        // CB 37 0350
        gbc.setState(0x2758, 0xf62a, 0x3780, 0x4428, 0xb69b, 0x975, 0x0, 0x1);
        gbc.writeMem(0x2758, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf62a, gbc.sp());
        EXPECT(0x275a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0351
        gbc.setState(0xda82, 0x18da, 0x60d0, 0xc585, 0x7990, 0x7d41, 0x0, 0x1);
        gbc.writeMem(0xda82, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x18da, gbc.sp());
        EXPECT(0xda84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda82));
        EXPECT(0x37, gbc.readMem(0xda83));
        // CB 37 0352
        gbc.setState(0x10c4, 0x51f7, 0x9d60, 0xcd47, 0x67d4, 0x41ae, 0x1, 0x0);
        gbc.writeMem(0x10c4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x51f7, gbc.sp());
        EXPECT(0x10c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0353
        gbc.setState(0xda60, 0xa09c, 0x5ed0, 0x6768, 0xd536, 0x2350, 0x1, 0x0);
        gbc.writeMem(0xda60, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa09c, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda60));
        EXPECT(0x37, gbc.readMem(0xda61));
        // CB 37 0354
        gbc.setState(0x72eb, 0xebb6, 0x660, 0xd4c3, 0xd680, 0x7ab8, 0x1, 0x1);
        gbc.writeMem(0x72eb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xebb6, gbc.sp());
        EXPECT(0x72ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0355
        gbc.setState(0x10c5, 0x5ddf, 0x5060, 0x2b, 0x931a, 0x47b3, 0x1, 0x1);
        gbc.writeMem(0x10c5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5ddf, gbc.sp());
        EXPECT(0x10c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0356
        gbc.setState(0x2454, 0x1fbb, 0x8de0, 0xb942, 0x4f85, 0xf151, 0x0, 0x1);
        gbc.writeMem(0x2454, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0x2456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0357
        gbc.setState(0x505d, 0x4337, 0x9be0, 0xd2c, 0x4caa, 0xd591, 0x0, 0x0);
        gbc.writeMem(0x505d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x4337, gbc.sp());
        EXPECT(0x505f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0358
        gbc.setState(0x3820, 0xa24f, 0xe170, 0x1894, 0x933c, 0x2a96, 0x0, 0x0);
        gbc.writeMem(0x3820, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa24f, gbc.sp());
        EXPECT(0x3822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0359
        gbc.setState(0x178f, 0x3bc1, 0x7770, 0xc649, 0xf03c, 0x7b43, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3bc1, gbc.sp());
        EXPECT(0x1791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 035A
        gbc.setState(0x3a49, 0xd282, 0x10d0, 0x7cdc, 0x762b, 0xe1e7, 0x1, 0x1);
        gbc.writeMem(0x3a49, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd282, gbc.sp());
        EXPECT(0x3a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 035B
        gbc.setState(0x30ed, 0x1a27, 0xe1d0, 0x9140, 0xf5f1, 0x5bd9, 0x1, 0x0);
        gbc.writeMem(0x30ed, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1a27, gbc.sp());
        EXPECT(0x30ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 035C
        gbc.setState(0x8f6, 0xe1c7, 0x9aa0, 0x73c4, 0xe679, 0x6f21, 0x1, 0x1);
        gbc.writeMem(0x8f6, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe1c7, gbc.sp());
        EXPECT(0x8f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 035D
        gbc.setState(0xc46c, 0xe27b, 0xbe20, 0x60ad, 0x236a, 0x5ee8, 0x0, 0x0);
        gbc.writeMem(0xc46c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe27b, gbc.sp());
        EXPECT(0xc46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc46c));
        EXPECT(0x37, gbc.readMem(0xc46d));
        // CB 37 035E
        gbc.setState(0xb19, 0xb8b6, 0x110, 0x6cf9, 0x2d40, 0xc0f6, 0x1, 0x1);
        gbc.writeMem(0xb19, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb8b6, gbc.sp());
        EXPECT(0xb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 035F
        gbc.setState(0x71ea, 0x3b61, 0x2eb0, 0xdf5b, 0xb83f, 0xfe5, 0x0, 0x0);
        gbc.writeMem(0x71ea, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b61, gbc.sp());
        EXPECT(0x71ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0360
        gbc.setState(0x5a75, 0x78fc, 0xcac0, 0x847, 0xa962, 0x21d, 0x1, 0x1);
        gbc.writeMem(0x5a75, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x78fc, gbc.sp());
        EXPECT(0x5a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0361
        gbc.setState(0x130a, 0x839a, 0x580, 0xf2f6, 0x8bc8, 0x9504, 0x1, 0x0);
        gbc.writeMem(0x130a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x839a, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0362
        gbc.setState(0x2adc, 0xbc9b, 0x8b80, 0x2401, 0x88d0, 0x674e, 0x1, 0x1);
        gbc.writeMem(0x2adc, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbc9b, gbc.sp());
        EXPECT(0x2ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0363
        gbc.setState(0x5330, 0x9ca3, 0xc1c0, 0x66dd, 0x614, 0xb7cd, 0x1, 0x0);
        gbc.writeMem(0x5330, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x5332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0364
        gbc.setState(0x4d58, 0x7def, 0x50f0, 0x10eb, 0x7cd7, 0xf8f8, 0x0, 0x1);
        gbc.writeMem(0x4d58, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7def, gbc.sp());
        EXPECT(0x4d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0365
        gbc.setState(0x4e3e, 0xe6b3, 0x7680, 0x2d05, 0x81b8, 0x9f13, 0x1, 0x1);
        gbc.writeMem(0x4e3e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe6b3, gbc.sp());
        EXPECT(0x4e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0366
        gbc.setState(0xae6a, 0x51b6, 0xee80, 0xaa8b, 0x5480, 0x9e93, 0x1, 0x1);
        gbc.writeMem(0xae6a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x51b6, gbc.sp());
        EXPECT(0xae6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae6a));
        EXPECT(0x37, gbc.readMem(0xae6b));
        // CB 37 0367
        gbc.setState(0xc50c, 0xcd8, 0x650, 0x8565, 0x8267, 0x9bb6, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcd8, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50c));
        EXPECT(0x37, gbc.readMem(0xc50d));
        // CB 37 0368
        gbc.setState(0xceae, 0xa491, 0x8ab0, 0xf6e8, 0x7069, 0x2352, 0x1, 0x1);
        gbc.writeMem(0xceae, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xa491, gbc.sp());
        EXPECT(0xceb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceae));
        EXPECT(0x37, gbc.readMem(0xceaf));
        // CB 37 0369
        gbc.setState(0x7872, 0x564f, 0xa010, 0x2d15, 0x7795, 0xd488, 0x0, 0x1);
        gbc.writeMem(0x7872, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x564f, gbc.sp());
        EXPECT(0x7874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 036A
        gbc.setState(0x8c9b, 0x428, 0xeed0, 0x2232, 0xa2bc, 0xd77b, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0x8c9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c9b));
        EXPECT(0x37, gbc.readMem(0x8c9c));
        // CB 37 036B
        gbc.setState(0x1d9d, 0xae74, 0xa010, 0x602c, 0xb25d, 0x69ad, 0x0, 0x1);
        gbc.writeMem(0x1d9d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xae74, gbc.sp());
        EXPECT(0x1d9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 036C
        gbc.setState(0x6ab4, 0x88fb, 0x4920, 0x5c97, 0x7166, 0x47ce, 0x1, 0x1);
        gbc.writeMem(0x6ab4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x88fb, gbc.sp());
        EXPECT(0x6ab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 036D
        gbc.setState(0xac09, 0x472a, 0x81a0, 0xf83d, 0x420c, 0x98f2, 0x0, 0x0);
        gbc.writeMem(0xac09, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x472a, gbc.sp());
        EXPECT(0xac0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac09));
        EXPECT(0x37, gbc.readMem(0xac0a));
        // CB 37 036E
        gbc.setState(0x9313, 0x152f, 0xa0e0, 0xaa22, 0x8ff0, 0xaf41, 0x0, 0x0);
        gbc.writeMem(0x9313, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x152f, gbc.sp());
        EXPECT(0x9315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9313));
        EXPECT(0x37, gbc.readMem(0x9314));
        // CB 37 036F
        gbc.setState(0x9df0, 0x1dc5, 0x1590, 0x7f63, 0xaab9, 0x31cb, 0x0, 0x0);
        gbc.writeMem(0x9df0, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1dc5, gbc.sp());
        EXPECT(0x9df2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df0));
        EXPECT(0x37, gbc.readMem(0x9df1));
        // CB 37 0370
        gbc.setState(0x2c06, 0xa72a, 0x5ce0, 0x785, 0xa417, 0x3271, 0x0, 0x1);
        gbc.writeMem(0x2c06, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0x2c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0371
        gbc.setState(0x9f79, 0x73d7, 0x1370, 0x129a, 0x18d9, 0xce61, 0x0, 0x0);
        gbc.writeMem(0x9f79, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x73d7, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f79));
        EXPECT(0x37, gbc.readMem(0x9f7a));
        // CB 37 0372
        gbc.setState(0x57a7, 0x420b, 0x18b0, 0x9fc7, 0x8c90, 0xc0b, 0x1, 0x0);
        gbc.writeMem(0x57a7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x420b, gbc.sp());
        EXPECT(0x57a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0373
        gbc.setState(0x2329, 0x82e6, 0x5f40, 0x1061, 0x9d3c, 0x3fb5, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x82e6, gbc.sp());
        EXPECT(0x232b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0374
        gbc.setState(0x7cd, 0x6c68, 0xe090, 0x23ea, 0x2327, 0x5cf8, 0x1, 0x1);
        gbc.writeMem(0x7cd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c68, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0375
        gbc.setState(0x6063, 0xc5f6, 0xa9d0, 0xc51b, 0xf481, 0x9f1f, 0x0, 0x1);
        gbc.writeMem(0x6063, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc5f6, gbc.sp());
        EXPECT(0x6065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0376
        gbc.setState(0xd19, 0xf894, 0xb010, 0x4288, 0x7b8f, 0xd4c7, 0x1, 0x0);
        gbc.writeMem(0xd19, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf894, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0377
        gbc.setState(0xc388, 0xef5e, 0x9f10, 0xee0d, 0x342e, 0xad15, 0x0, 0x1);
        gbc.writeMem(0xc388, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xef5e, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc388));
        EXPECT(0x37, gbc.readMem(0xc389));
        // CB 37 0378
        gbc.setState(0x55b3, 0xcf8e, 0xe300, 0x24d2, 0x4aa9, 0x1285, 0x1, 0x0);
        gbc.writeMem(0x55b3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcf8e, gbc.sp());
        EXPECT(0x55b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0379
        gbc.setState(0xc224, 0xcad8, 0xc0, 0xeb30, 0x8a59, 0xaee9, 0x0, 0x1);
        gbc.writeMem(0xc224, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0xc226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc224));
        EXPECT(0x37, gbc.readMem(0xc225));
        // CB 37 037A
        gbc.setState(0x64aa, 0xb018, 0xc2b0, 0x93b2, 0x22c, 0x1931, 0x1, 0x1);
        gbc.writeMem(0x64aa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb018, gbc.sp());
        EXPECT(0x64ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 037B
        gbc.setState(0x7606, 0x4866, 0xd810, 0x75b3, 0xeb0b, 0xb01a, 0x0, 0x0);
        gbc.writeMem(0x7606, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4866, gbc.sp());
        EXPECT(0x7608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 037C
        gbc.setState(0xa3b5, 0x1ea8, 0x4e60, 0x43cc, 0x39c2, 0x89ca, 0x0, 0x1);
        gbc.writeMem(0xa3b5, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1ea8, gbc.sp());
        EXPECT(0xa3b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b5));
        EXPECT(0x37, gbc.readMem(0xa3b6));
        // CB 37 037E
        gbc.setState(0x7a75, 0xee0a, 0xc500, 0x1d70, 0xc323, 0xf625, 0x1, 0x0);
        gbc.writeMem(0x7a75, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xee0a, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 037F
        gbc.setState(0x3602, 0x6a90, 0x7f0, 0x1e80, 0x3698, 0x813e, 0x1, 0x1);
        gbc.writeMem(0x3602, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6a90, gbc.sp());
        EXPECT(0x3604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0380
        gbc.setState(0xda5f, 0xfc80, 0x9d00, 0x8424, 0xfdbc, 0xbdc7, 0x1, 0x0);
        gbc.writeMem(0xda5f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfc80, gbc.sp());
        EXPECT(0xda61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5f));
        EXPECT(0x37, gbc.readMem(0xda60));
        // CB 37 0381
        gbc.setState(0x4f3f, 0x13ce, 0xd790, 0xd664, 0x9d29, 0x86be, 0x0, 0x0);
        gbc.writeMem(0x4f3f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x13ce, gbc.sp());
        EXPECT(0x4f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0382
        gbc.setState(0x7d89, 0x6d0e, 0xeaf0, 0x832e, 0xd5, 0x6be2, 0x1, 0x1);
        gbc.writeMem(0x7d89, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6d0e, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0383
        gbc.setState(0x9052, 0x953f, 0xf1a0, 0x9cf9, 0x2a74, 0x160f, 0x0, 0x0);
        gbc.writeMem(0x9052, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0x9054, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9052));
        EXPECT(0x37, gbc.readMem(0x9053));
        // CB 37 0384
        gbc.setState(0x932a, 0x6623, 0x13b0, 0x572e, 0xe2e4, 0xb6fb, 0x1, 0x1);
        gbc.writeMem(0x932a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6623, gbc.sp());
        EXPECT(0x932c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x932a));
        EXPECT(0x37, gbc.readMem(0x932b));
        // CB 37 0385
        gbc.setState(0x9b9a, 0xecf7, 0x89b0, 0x5cc8, 0xb4da, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0x9b9a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xecf7, gbc.sp());
        EXPECT(0x9b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b9a));
        EXPECT(0x37, gbc.readMem(0x9b9b));
        // CB 37 0386
        gbc.setState(0x3fa1, 0x7f71, 0xd240, 0x8302, 0xcc70, 0xfd9a, 0x1, 0x0);
        gbc.writeMem(0x3fa1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7f71, gbc.sp());
        EXPECT(0x3fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0387
        gbc.setState(0x15fe, 0x563d, 0x2940, 0x2d01, 0xfba, 0x1435, 0x1, 0x1);
        gbc.writeMem(0x15fe, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x563d, gbc.sp());
        EXPECT(0x1600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0388
        gbc.setState(0x572a, 0x2aa2, 0x2b50, 0x4b2f, 0x2cd7, 0x9b5e, 0x1, 0x1);
        gbc.writeMem(0x572a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0x572c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0389
        gbc.setState(0x7f9, 0x9817, 0x260, 0xb73d, 0xf6e0, 0xa8d7, 0x1, 0x0);
        gbc.writeMem(0x7f9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9817, gbc.sp());
        EXPECT(0x7fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 038A
        gbc.setState(0x1664, 0x52ff, 0x66d0, 0x97d7, 0x61f8, 0x1dab, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x52ff, gbc.sp());
        EXPECT(0x1666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 038B
        gbc.setState(0x4db2, 0xc373, 0x9480, 0x369a, 0x216b, 0x1a22, 0x0, 0x0);
        gbc.writeMem(0x4db2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc373, gbc.sp());
        EXPECT(0x4db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 038C
        gbc.setState(0xacb3, 0xe9a0, 0x3700, 0xee4b, 0x8cc2, 0x51ff, 0x1, 0x1);
        gbc.writeMem(0xacb3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe9a0, gbc.sp());
        EXPECT(0xacb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb3));
        EXPECT(0x37, gbc.readMem(0xacb4));
        // CB 37 038D
        gbc.setState(0x28ef, 0x651f, 0x3620, 0xd214, 0xdc57, 0xca91, 0x0, 0x0);
        gbc.writeMem(0x28ef, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x651f, gbc.sp());
        EXPECT(0x28f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 038E
        gbc.setState(0xb3ba, 0xd5b4, 0x650, 0x16ff, 0x9347, 0xdfab, 0x0, 0x0);
        gbc.writeMem(0xb3ba, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd5b4, gbc.sp());
        EXPECT(0xb3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ba));
        EXPECT(0x37, gbc.readMem(0xb3bb));
        // CB 37 038F
        gbc.setState(0xd43, 0xb59, 0x13a0, 0xdac0, 0xdab8, 0xa911, 0x0, 0x0);
        gbc.writeMem(0xd43, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb59, gbc.sp());
        EXPECT(0xd45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0390
        gbc.setState(0x9e34, 0xd749, 0xa200, 0x7c95, 0xa166, 0xaa96, 0x1, 0x0);
        gbc.writeMem(0x9e34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd749, gbc.sp());
        EXPECT(0x9e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e34));
        EXPECT(0x37, gbc.readMem(0x9e35));
        // CB 37 0391
        gbc.setState(0x3b93, 0x54f0, 0x9020, 0xb3cd, 0xf5a5, 0xed, 0x0, 0x0);
        gbc.writeMem(0x3b93, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x54f0, gbc.sp());
        EXPECT(0x3b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0392
        gbc.setState(0x5afa, 0x433f, 0x7430, 0x137e, 0x10aa, 0xfd8f, 0x0, 0x0);
        gbc.writeMem(0x5afa, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0393
        gbc.setState(0xa3ca, 0x2490, 0x2fe0, 0xb23, 0xe828, 0xc444, 0x0, 0x0);
        gbc.writeMem(0xa3ca, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2490, gbc.sp());
        EXPECT(0xa3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ca));
        EXPECT(0x37, gbc.readMem(0xa3cb));
        // CB 37 0394
        gbc.setState(0xb90, 0xf1b1, 0x2eb0, 0x43fb, 0xdca9, 0xc46a, 0x0, 0x1);
        gbc.writeMem(0xb90, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf1b1, gbc.sp());
        EXPECT(0xb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0395
        gbc.setState(0x8d5e, 0x9c3f, 0xd6a0, 0x2f7e, 0xd7c7, 0x54b4, 0x1, 0x1);
        gbc.writeMem(0x8d5e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5e));
        EXPECT(0x37, gbc.readMem(0x8d5f));
        // CB 37 0396
        gbc.setState(0xaf88, 0xe9cc, 0xa320, 0x5e04, 0x97a3, 0xcffb, 0x1, 0x1);
        gbc.writeMem(0xaf88, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0xaf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf88));
        EXPECT(0x37, gbc.readMem(0xaf89));
        // CB 37 0397
        gbc.setState(0x6c34, 0xa851, 0xea00, 0x35f3, 0xae1c, 0xdbc7, 0x1, 0x1);
        gbc.writeMem(0x6c34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa851, gbc.sp());
        EXPECT(0x6c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0398
        gbc.setState(0x6151, 0xa7b4, 0xbff0, 0xc78a, 0x4c31, 0x6ac2, 0x1, 0x1);
        gbc.writeMem(0x6151, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa7b4, gbc.sp());
        EXPECT(0x6153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 0399
        gbc.setState(0xdb8f, 0xab46, 0x1eb0, 0x94dc, 0xe63d, 0xb2d3, 0x1, 0x0);
        gbc.writeMem(0xdb8f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xab46, gbc.sp());
        EXPECT(0xdb91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8f));
        EXPECT(0x37, gbc.readMem(0xdb90));
        // CB 37 039A
        gbc.setState(0x470a, 0xc1fd, 0x6fc0, 0x19b3, 0x669f, 0x8f01, 0x0, 0x0);
        gbc.writeMem(0x470a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0x470c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 039B
        gbc.setState(0xe91b, 0x744a, 0x370, 0xb96, 0xead9, 0x197, 0x1, 0x0);
        gbc.writeMem(0xe91b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x744a, gbc.sp());
        EXPECT(0xe91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe91b));
        EXPECT(0x37, gbc.readMem(0xe91c));
        // CB 37 039C
        gbc.setState(0x8151, 0x4e74, 0x9990, 0x1253, 0x2411, 0xc005, 0x0, 0x0);
        gbc.writeMem(0x8151, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4e74, gbc.sp());
        EXPECT(0x8153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8151));
        EXPECT(0x37, gbc.readMem(0x8152));
        // CB 37 039D
        gbc.setState(0xd7d4, 0x517c, 0x50, 0x1a91, 0x9bd1, 0x6dd9, 0x0, 0x1);
        gbc.writeMem(0xd7d4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x517c, gbc.sp());
        EXPECT(0xd7d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7d4));
        EXPECT(0x37, gbc.readMem(0xd7d5));
        // CB 37 039E
        gbc.setState(0x988f, 0x86c, 0x3ae0, 0x57c6, 0xdc99, 0xf85e, 0x0, 0x0);
        gbc.writeMem(0x988f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x86c, gbc.sp());
        EXPECT(0x9891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x988f));
        EXPECT(0x37, gbc.readMem(0x9890));
        // CB 37 039F
        gbc.setState(0x7aa4, 0x20ea, 0xc3b0, 0x64d1, 0xf17a, 0x4033, 0x0, 0x0);
        gbc.writeMem(0x7aa4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x20ea, gbc.sp());
        EXPECT(0x7aa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A0
        gbc.setState(0x190b, 0x4988, 0xb440, 0x9f15, 0x498b, 0x5ec9, 0x1, 0x0);
        gbc.writeMem(0x190b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A1
        gbc.setState(0x4069, 0x783, 0x7470, 0x6e55, 0x642, 0xf8e5, 0x0, 0x1);
        gbc.writeMem(0x4069, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x783, gbc.sp());
        EXPECT(0x406b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A2
        gbc.setState(0x5998, 0x13c2, 0x3cb0, 0x6048, 0x4506, 0xd89f, 0x0, 0x0);
        gbc.writeMem(0x5998, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0x599a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A3
        gbc.setState(0x5b34, 0x57f4, 0x3a10, 0xb962, 0x72ec, 0x6882, 0x1, 0x0);
        gbc.writeMem(0x5b34, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x57f4, gbc.sp());
        EXPECT(0x5b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A4
        gbc.setState(0x546f, 0x29ea, 0x17d0, 0xf6b2, 0x40b2, 0x3d0d, 0x0, 0x1);
        gbc.writeMem(0x546f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x29ea, gbc.sp());
        EXPECT(0x5471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A5
        gbc.setState(0xbec7, 0xe80e, 0x2d30, 0x6cfa, 0xb9d4, 0xc4d4, 0x0, 0x1);
        gbc.writeMem(0xbec7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec7));
        EXPECT(0x37, gbc.readMem(0xbec8));
        // CB 37 03A6
        gbc.setState(0xaf32, 0x6cd7, 0xa0b0, 0x3038, 0x1cb3, 0xe7aa, 0x0, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6cd7, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0x37, gbc.readMem(0xaf33));
        // CB 37 03A7
        gbc.setState(0x14e7, 0x3ada, 0xdae0, 0x9b01, 0xcd0e, 0x77b0, 0x0, 0x1);
        gbc.writeMem(0x14e7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3ada, gbc.sp());
        EXPECT(0x14e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A8
        gbc.setState(0x25eb, 0x51f, 0xf000, 0x1d4e, 0x4fb, 0x217e, 0x1, 0x1);
        gbc.writeMem(0x25eb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x51f, gbc.sp());
        EXPECT(0x25ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03A9
        gbc.setState(0x495f, 0x2d13, 0x1e20, 0x3de1, 0xb710, 0xc226, 0x0, 0x0);
        gbc.writeMem(0x495f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03AA
        gbc.setState(0x8b11, 0x29c1, 0xcfb0, 0xeeed, 0x2930, 0xf0d1, 0x0, 0x0);
        gbc.writeMem(0x8b11, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x29c1, gbc.sp());
        EXPECT(0x8b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b11));
        EXPECT(0x37, gbc.readMem(0x8b12));
        // CB 37 03AB
        gbc.setState(0x3773, 0xb750, 0x7360, 0xae09, 0xf5a5, 0x33b6, 0x1, 0x1);
        gbc.writeMem(0x3773, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb750, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03AC
        gbc.setState(0x420a, 0x7300, 0x30f0, 0xfcc3, 0x9990, 0x8fa0, 0x1, 0x1);
        gbc.writeMem(0x420a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7300, gbc.sp());
        EXPECT(0x420c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03AD
        gbc.setState(0x832a, 0xd0e2, 0x61d0, 0x63, 0x556, 0xa000, 0x1, 0x0);
        gbc.writeMem(0x832a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd0e2, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832a));
        EXPECT(0x37, gbc.readMem(0x832b));
        // CB 37 03AF
        gbc.setState(0x9f6e, 0x43c8, 0x90c0, 0x7078, 0x5c8a, 0x3c21, 0x0, 0x1);
        gbc.writeMem(0x9f6e, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0x9f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f6e));
        EXPECT(0x37, gbc.readMem(0x9f6f));
        // CB 37 03B0
        gbc.setState(0xa461, 0xbfec, 0x1f80, 0x53d0, 0xd463, 0x1dd4, 0x1, 0x1);
        gbc.writeMem(0xa461, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbfec, gbc.sp());
        EXPECT(0xa463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa461));
        EXPECT(0x37, gbc.readMem(0xa462));
        // CB 37 03B1
        gbc.setState(0xdf2, 0x1c9e, 0x2790, 0xf6a6, 0x174, 0x37cb, 0x0, 0x0);
        gbc.writeMem(0xdf2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1c9e, gbc.sp());
        EXPECT(0xdf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03B2
        gbc.setState(0x3187, 0x11e9, 0xdd30, 0xb747, 0xb266, 0xa37f, 0x1, 0x0);
        gbc.writeMem(0x3187, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x11e9, gbc.sp());
        EXPECT(0x3189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03B3
        gbc.setState(0x9157, 0x5fb6, 0x40a0, 0xd7a7, 0xb5dc, 0x7ad9, 0x1, 0x0);
        gbc.writeMem(0x9157, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5fb6, gbc.sp());
        EXPECT(0x9159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9157));
        EXPECT(0x37, gbc.readMem(0x9158));
        // CB 37 03B4
        gbc.setState(0xa7a2, 0x98cd, 0x2cd0, 0xdf92, 0x1311, 0x3692, 0x0, 0x1);
        gbc.writeMem(0xa7a2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a2));
        EXPECT(0x37, gbc.readMem(0xa7a3));
        // CB 37 03B5
        gbc.setState(0x79cd, 0x311e, 0x440, 0xd729, 0x9e59, 0x1934, 0x1, 0x1);
        gbc.writeMem(0x79cd, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x311e, gbc.sp());
        EXPECT(0x79cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03B6
        gbc.setState(0xa2b9, 0x3e78, 0x70f0, 0x2be2, 0x55bd, 0x6ce7, 0x0, 0x1);
        gbc.writeMem(0xa2b9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3e78, gbc.sp());
        EXPECT(0xa2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b9));
        EXPECT(0x37, gbc.readMem(0xa2ba));
        // CB 37 03B7
        gbc.setState(0x9e02, 0xa614, 0x5000, 0x1abc, 0x6a4c, 0x7da4, 0x0, 0x0);
        gbc.writeMem(0x9e02, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0x37, gbc.readMem(0x9e03));
        // CB 37 03B8
        gbc.setState(0x94cf, 0x6aaa, 0x3960, 0x7e2f, 0x7f43, 0xd4b, 0x1, 0x1);
        gbc.writeMem(0x94cf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6aaa, gbc.sp());
        EXPECT(0x94d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94cf));
        EXPECT(0x37, gbc.readMem(0x94d0));
        // CB 37 03BA
        gbc.setState(0xd46b, 0x5032, 0xcb80, 0xd35d, 0x602b, 0xab6f, 0x1, 0x1);
        gbc.writeMem(0xd46b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5032, gbc.sp());
        EXPECT(0xd46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46b));
        EXPECT(0x37, gbc.readMem(0xd46c));
        // CB 37 03BB
        gbc.setState(0x76a, 0x70a6, 0xbb70, 0x574b, 0xcdb3, 0xe36c, 0x1, 0x1);
        gbc.writeMem(0x76a, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x70a6, gbc.sp());
        EXPECT(0x76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03BC
        gbc.setState(0x804c, 0x1ec2, 0xd610, 0x7526, 0x7d59, 0xf27d, 0x1, 0x1);
        gbc.writeMem(0x804c, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1ec2, gbc.sp());
        EXPECT(0x804e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x804c));
        EXPECT(0x37, gbc.readMem(0x804d));
        // CB 37 03BD
        gbc.setState(0x1736, 0xd1f8, 0x9770, 0x75e8, 0xa9ca, 0x6c4f, 0x1, 0x0);
        gbc.writeMem(0x1736, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd1f8, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03BE
        gbc.setState(0xe3d7, 0xd79f, 0xbed0, 0x1fca, 0x4171, 0xb0f2, 0x0, 0x1);
        gbc.writeMem(0xe3d7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0xe3d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d7));
        EXPECT(0x37, gbc.readMem(0xe3d8));
        // CB 37 03BF
        gbc.setState(0xbc4d, 0xbee9, 0xa130, 0xf81, 0x9930, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0xbc4d, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbee9, gbc.sp());
        EXPECT(0xbc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc4d));
        EXPECT(0x37, gbc.readMem(0xbc4e));
        // CB 37 03C0
        gbc.setState(0x6b1b, 0x16fc, 0xfc90, 0x671f, 0x5a40, 0x72f2, 0x1, 0x1);
        gbc.writeMem(0x6b1b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x16fc, gbc.sp());
        EXPECT(0x6b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03C1
        gbc.setState(0xaf90, 0xaa6, 0xc310, 0x6d50, 0x1ffc, 0x836e, 0x0, 0x0);
        gbc.writeMem(0xaf90, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xaa6, gbc.sp());
        EXPECT(0xaf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf90));
        EXPECT(0x37, gbc.readMem(0xaf91));
        // CB 37 03C2
        gbc.setState(0x34f9, 0xb86a, 0x9950, 0xdd9, 0xcb3a, 0x549, 0x1, 0x1);
        gbc.writeMem(0x34f9, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb86a, gbc.sp());
        EXPECT(0x34fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03C3
        gbc.setState(0x8b11, 0xa700, 0xe4e0, 0xdef3, 0xd446, 0xf973, 0x0, 0x1);
        gbc.writeMem(0x8b11, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x8b13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b11));
        EXPECT(0x37, gbc.readMem(0x8b12));
        // CB 37 03C4
        gbc.setState(0x2e99, 0xcc7e, 0x7020, 0xeed5, 0x5b87, 0xd8a4, 0x1, 0x0);
        gbc.writeMem(0x2e99, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcc7e, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03C5
        gbc.setState(0x58e3, 0xd540, 0x3b00, 0xbaa5, 0xbc3f, 0x6755, 0x0, 0x1);
        gbc.writeMem(0x58e3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd540, gbc.sp());
        EXPECT(0x58e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03C6
        gbc.setState(0xb977, 0x42c0, 0xd690, 0xdc79, 0x6eb6, 0x7016, 0x0, 0x1);
        gbc.writeMem(0xb977, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x42c0, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb977));
        EXPECT(0x37, gbc.readMem(0xb978));
        // CB 37 03C7
        gbc.setState(0xce18, 0x54b8, 0x78e0, 0xdb6, 0xa40c, 0x6648, 0x1, 0x0);
        gbc.writeMem(0xce18, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0xce1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce18));
        EXPECT(0x37, gbc.readMem(0xce19));
        // CB 37 03C8
        gbc.setState(0x21ea, 0xae10, 0xc330, 0xdf4, 0x6e20, 0x7a57, 0x0, 0x0);
        gbc.writeMem(0x21ea, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xae10, gbc.sp());
        EXPECT(0x21ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03C9
        gbc.setState(0xbb86, 0x968f, 0x24f0, 0x4aa5, 0xd542, 0xa739, 0x0, 0x1);
        gbc.writeMem(0xbb86, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x968f, gbc.sp());
        EXPECT(0xbb88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb86));
        EXPECT(0x37, gbc.readMem(0xbb87));
        // CB 37 03CA
        gbc.setState(0x8e3f, 0x5d09, 0x8470, 0x64a8, 0xbe31, 0x69c7, 0x0, 0x0);
        gbc.writeMem(0x8e3f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5d09, gbc.sp());
        EXPECT(0x8e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e3f));
        EXPECT(0x37, gbc.readMem(0x8e40));
        // CB 37 03CC
        gbc.setState(0x5c32, 0x828c, 0x6040, 0x1843, 0xbd91, 0xf0f, 0x0, 0x0);
        gbc.writeMem(0x5c32, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x828c, gbc.sp());
        EXPECT(0x5c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03CD
        gbc.setState(0xb643, 0xc57e, 0xea10, 0x98ac, 0xe26e, 0x4d40, 0x0, 0x1);
        gbc.writeMem(0xb643, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc57e, gbc.sp());
        EXPECT(0xb645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb643));
        EXPECT(0x37, gbc.readMem(0xb644));
        // CB 37 03CE
        gbc.setState(0xcab4, 0x723a, 0x71d0, 0x48af, 0xfa4d, 0x47e6, 0x1, 0x0);
        gbc.writeMem(0xcab4, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x723a, gbc.sp());
        EXPECT(0xcab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab4));
        EXPECT(0x37, gbc.readMem(0xcab5));
        // CB 37 03CF
        gbc.setState(0xbed3, 0xb3e7, 0x4c30, 0x2d72, 0x288f, 0xd99e, 0x0, 0x0);
        gbc.writeMem(0xbed3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0xbed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed3));
        EXPECT(0x37, gbc.readMem(0xbed4));
        // CB 37 03D0
        gbc.setState(0x67c1, 0xce26, 0x6dc0, 0x9f21, 0x1336, 0xc64f, 0x1, 0x0);
        gbc.writeMem(0x67c1, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xce26, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03D1
        gbc.setState(0xb272, 0x620c, 0x9f90, 0x83eb, 0xd87f, 0x545d, 0x1, 0x1);
        gbc.writeMem(0xb272, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x620c, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb272));
        EXPECT(0x37, gbc.readMem(0xb273));
        // CB 37 03D2
        gbc.setState(0xa933, 0x83c8, 0x69e0, 0x34fb, 0x9730, 0x3c3a, 0x0, 0x1);
        gbc.writeMem(0xa933, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa933));
        EXPECT(0x37, gbc.readMem(0xa934));
        // CB 37 03D3
        gbc.setState(0x76b2, 0xff64, 0x8660, 0x74d1, 0xe01, 0xaf43, 0x1, 0x0);
        gbc.writeMem(0x76b2, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xff64, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03D4
        gbc.setState(0x5832, 0x2707, 0x7ce0, 0x94b3, 0x585b, 0xbb84, 0x0, 0x1);
        gbc.writeMem(0x5832, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0x5834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03D5
        gbc.setState(0x47da, 0x393b, 0x5bc0, 0x8492, 0x95d3, 0x3162, 0x0, 0x1);
        gbc.writeMem(0x47da, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x393b, gbc.sp());
        EXPECT(0x47dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03D7
        gbc.setState(0xb2e8, 0x782, 0x3310, 0xfe1a, 0xdc0d, 0xd277, 0x1, 0x0);
        gbc.writeMem(0xb2e8, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x782, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e8));
        EXPECT(0x37, gbc.readMem(0xb2e9));
        // CB 37 03D9
        gbc.setState(0xadaf, 0xe284, 0x4c0, 0x4650, 0x7783, 0xb549, 0x1, 0x1);
        gbc.writeMem(0xadaf, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe284, gbc.sp());
        EXPECT(0xadb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadaf));
        EXPECT(0x37, gbc.readMem(0xadb0));
        // CB 37 03DA
        gbc.setState(0x5bbb, 0xaf9f, 0xfea0, 0xf5b, 0xa4ed, 0xc3ee, 0x0, 0x0);
        gbc.writeMem(0x5bbb, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaf9f, gbc.sp());
        EXPECT(0x5bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03DB
        gbc.setState(0xdd2b, 0x3e07, 0x70a0, 0xb679, 0x664c, 0x63ec, 0x1, 0x1);
        gbc.writeMem(0xdd2b, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3e07, gbc.sp());
        EXPECT(0xdd2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2b));
        EXPECT(0x37, gbc.readMem(0xdd2c));
        // CB 37 03DC
        gbc.setState(0x180f, 0x2a21, 0xbd00, 0x7fde, 0xacf1, 0xa05c, 0x1, 0x1);
        gbc.writeMem(0x180f, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2a21, gbc.sp());
        EXPECT(0x1811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03DD
        gbc.setState(0x6ac3, 0x683c, 0x2250, 0xb489, 0x25af, 0x7202, 0x1, 0x1);
        gbc.writeMem(0x6ac3, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03DE
        gbc.setState(0x9be7, 0x3418, 0x2e60, 0x8cc8, 0x78c3, 0x93f0, 0x1, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3418, gbc.sp());
        EXPECT(0x9be9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9be7));
        EXPECT(0x37, gbc.readMem(0x9be8));
        // CB 37 03DF
        gbc.setState(0x38f7, 0xa73f, 0x2150, 0xb653, 0x5670, 0x16dd, 0x0, 0x1);
        gbc.writeMem(0x38f7, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa73f, gbc.sp());
        EXPECT(0x38f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E0
        gbc.setState(0xaade, 0x7bb7, 0x8c0, 0xa6c0, 0xbcbb, 0x3824, 0x1, 0x0);
        gbc.writeMem(0xaade, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7bb7, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaade));
        EXPECT(0x37, gbc.readMem(0xaadf));
        // CB 37 03E1
        gbc.setState(0x3539, 0x9963, 0xf1d0, 0xce7, 0x18a0, 0xce8c, 0x1, 0x0);
        gbc.writeMem(0x3539, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9963, gbc.sp());
        EXPECT(0x353b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E2
        gbc.setState(0x1f80, 0xd6af, 0x3380, 0x4025, 0x4faf, 0x226c, 0x1, 0x0);
        gbc.writeMem(0x1f80, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd6af, gbc.sp());
        EXPECT(0x1f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E3
        gbc.setState(0x6930, 0xca98, 0xe060, 0xe027, 0x36a1, 0x43a9, 0x0, 0x1);
        gbc.writeMem(0x6930, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xca98, gbc.sp());
        EXPECT(0x6932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E4
        gbc.setState(0x5521, 0xafd2, 0x5600, 0xdcde, 0xb8e2, 0x2451, 0x0, 0x0);
        gbc.writeMem(0x5521, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xafd2, gbc.sp());
        EXPECT(0x5523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E5
        gbc.setState(0xac02, 0x3173, 0xb450, 0x79f0, 0x6b87, 0x10ae, 0x0, 0x1);
        gbc.writeMem(0xac02, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3173, gbc.sp());
        EXPECT(0xac04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac02));
        EXPECT(0x37, gbc.readMem(0xac03));
        // CB 37 03E6
        gbc.setState(0x4d01, 0xf36c, 0x3f90, 0x203e, 0xaefd, 0xd878, 0x0, 0x1);
        gbc.writeMem(0x4d01, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf36c, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 37 03E7
        gbc.setState(0x1d89, 0x7480, 0x9610, 0xf148, 0xe5ae, 0x2d9e, 0x0, 0x1);
        gbc.writeMem(0x1d89, { 0xcb, 0x37 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7480, gbc.sp());
        EXPECT(0x1d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
