    TEST(gbcemu, opcode_cb_90) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 90 0000
        gbc.setState(0xa3b7, 0xe16a, 0x880, 0xe139, 0xef7d, 0x2629, 0x0, 0x0);
        gbc.writeMem(0xa3b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe16a);
        EXPECT(gbc.pc(), 0xa3b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3b7), 0xcb);
        EXPECT(gbc.readMem(0xa3b8), 0x90);
        // CB 90 0001
        gbc.setState(0x2eb5, 0x10d6, 0xa790, 0x36e, 0x7782, 0x6286, 0x0, 0x0);
        gbc.writeMem(0x2eb5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x10d6);
        EXPECT(gbc.pc(), 0x2eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0002
        gbc.setState(0x57ff, 0x4f08, 0x2200, 0xb154, 0xdc1c, 0x188a, 0x1, 0x1);
        gbc.writeMem(0x57ff, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x5801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0003
        gbc.setState(0x3b3c, 0x6030, 0xc140, 0xd8e2, 0xa870, 0xcb87, 0x0, 0x0);
        gbc.writeMem(0x3b3c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6030);
        EXPECT(gbc.pc(), 0x3b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0005
        gbc.setState(0xd6a2, 0x771b, 0xed90, 0xbda7, 0x3b25, 0xd2c5, 0x0, 0x0);
        gbc.writeMem(0xd6a2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x771b);
        EXPECT(gbc.pc(), 0xd6a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a2), 0xcb);
        EXPECT(gbc.readMem(0xd6a3), 0x90);
        // CB 90 0006
        gbc.setState(0xb8c6, 0x7229, 0x4630, 0x5257, 0xd7a5, 0x112f, 0x1, 0x1);
        gbc.writeMem(0xb8c6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7229);
        EXPECT(gbc.pc(), 0xb8c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c6), 0xcb);
        EXPECT(gbc.readMem(0xb8c7), 0x90);
        // CB 90 0007
        gbc.setState(0xd57, 0x58c9, 0x7320, 0xe86d, 0x7092, 0x1402, 0x0, 0x0);
        gbc.writeMem(0xd57, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x58c9);
        EXPECT(gbc.pc(), 0xd59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0008
        gbc.setState(0xb497, 0x284b, 0x7fc0, 0xa17d, 0xbe71, 0x97c, 0x0, 0x0);
        gbc.writeMem(0xb497, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x284b);
        EXPECT(gbc.pc(), 0xb499);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb497), 0xcb);
        EXPECT(gbc.readMem(0xb498), 0x90);
        // CB 90 0009
        gbc.setState(0xe3eb, 0x6065, 0x2e00, 0x65e, 0xfef7, 0xcd7a, 0x0, 0x1);
        gbc.writeMem(0xe3eb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6065);
        EXPECT(gbc.pc(), 0xe3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3eb), 0xcb);
        EXPECT(gbc.readMem(0xe3ec), 0x90);
        // CB 90 000A
        gbc.setState(0xc4cb, 0x8921, 0x660, 0x1f9f, 0xc113, 0xd38c, 0x0, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8921);
        EXPECT(gbc.pc(), 0xc4cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4cb), 0xcb);
        EXPECT(gbc.readMem(0xc4cc), 0x90);
        // CB 90 000B
        gbc.setState(0xe1e1, 0xc3dd, 0xfa70, 0x80b3, 0xc6cb, 0x1a0c, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc3dd);
        EXPECT(gbc.pc(), 0xe1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1e1), 0xcb);
        EXPECT(gbc.readMem(0xe1e2), 0x90);
        // CB 90 000C
        gbc.setState(0x294e, 0xf461, 0x5b20, 0x865c, 0xdc2d, 0xc26f, 0x0, 0x1);
        gbc.writeMem(0x294e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf461);
        EXPECT(gbc.pc(), 0x2950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 000D
        gbc.setState(0xc556, 0x75d3, 0xbc80, 0xe7b6, 0x5f92, 0xdf84, 0x0, 0x0);
        gbc.writeMem(0xc556, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x75d3);
        EXPECT(gbc.pc(), 0xc558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc556), 0xcb);
        EXPECT(gbc.readMem(0xc557), 0x90);
        // CB 90 000E
        gbc.setState(0x48f9, 0xc985, 0x5c50, 0x2b6c, 0xaa18, 0x7525, 0x0, 0x0);
        gbc.writeMem(0x48f9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc985);
        EXPECT(gbc.pc(), 0x48fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 000F
        gbc.setState(0x72c1, 0xc61a, 0x96c0, 0xc4d6, 0x189, 0x8b75, 0x0, 0x1);
        gbc.writeMem(0x72c1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc61a);
        EXPECT(gbc.pc(), 0x72c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0010
        gbc.setState(0xf57, 0xbef8, 0xc5e0, 0xae49, 0xa9a9, 0x22d8, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbef8);
        EXPECT(gbc.pc(), 0xf59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0011
        gbc.setState(0xbb81, 0xb7d4, 0xce40, 0x7e0d, 0x500f, 0xda11, 0x1, 0x0);
        gbc.writeMem(0xbb81, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb7d4);
        EXPECT(gbc.pc(), 0xbb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0xcb);
        EXPECT(gbc.readMem(0xbb82), 0x90);
        // CB 90 0012
        gbc.setState(0x4998, 0x7ba3, 0x1710, 0xc4fb, 0x91ba, 0xb70a, 0x1, 0x0);
        gbc.writeMem(0x4998, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7ba3);
        EXPECT(gbc.pc(), 0x499a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0013
        gbc.setState(0x28ab, 0xfd6f, 0xfd30, 0x1f27, 0x1f1d, 0xaa43, 0x1, 0x1);
        gbc.writeMem(0x28ab, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfd6f);
        EXPECT(gbc.pc(), 0x28ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0014
        gbc.setState(0xe5ca, 0xac2a, 0x6a40, 0xd655, 0x3cc3, 0x9905, 0x0, 0x1);
        gbc.writeMem(0xe5ca, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xac2a);
        EXPECT(gbc.pc(), 0xe5cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ca), 0xcb);
        EXPECT(gbc.readMem(0xe5cb), 0x90);
        // CB 90 0015
        gbc.setState(0xbe6a, 0x7991, 0xdb90, 0xe353, 0x9a06, 0x6ab2, 0x0, 0x0);
        gbc.writeMem(0xbe6a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7991);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6a), 0xcb);
        EXPECT(gbc.readMem(0xbe6b), 0x90);
        // CB 90 0016
        gbc.setState(0xe4c6, 0x12c, 0xc50, 0x202, 0x30f5, 0x3f1a, 0x0, 0x0);
        gbc.writeMem(0xe4c6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x12c);
        EXPECT(gbc.pc(), 0xe4c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c6), 0xcb);
        EXPECT(gbc.readMem(0xe4c7), 0x90);
        // CB 90 0017
        gbc.setState(0x7196, 0xf21c, 0xeb10, 0x20af, 0x36c5, 0x57d8, 0x1, 0x1);
        gbc.writeMem(0x7196, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf21c);
        EXPECT(gbc.pc(), 0x7198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 001A
        gbc.setState(0xcc57, 0x2cb5, 0x7b60, 0x9c0a, 0x6a0c, 0x9d49, 0x1, 0x0);
        gbc.writeMem(0xcc57, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2cb5);
        EXPECT(gbc.pc(), 0xcc59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc57), 0xcb);
        EXPECT(gbc.readMem(0xcc58), 0x90);
        // CB 90 001B
        gbc.setState(0xccd5, 0xcb0c, 0xcc90, 0x438a, 0xb17c, 0x45a8, 0x0, 0x0);
        gbc.writeMem(0xccd5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcb0c);
        EXPECT(gbc.pc(), 0xccd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccd5), 0xcb);
        EXPECT(gbc.readMem(0xccd6), 0x90);
        // CB 90 001C
        gbc.setState(0x5402, 0x2764, 0xfd20, 0x3f75, 0xb2a1, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0x5402, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0x5404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 001D
        gbc.setState(0x6fed, 0xe561, 0xfaf0, 0x7ff4, 0x8aab, 0x2b61, 0x1, 0x1);
        gbc.writeMem(0x6fed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe561);
        EXPECT(gbc.pc(), 0x6fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 001E
        gbc.setState(0xe23d, 0xd7b, 0x84b0, 0xba0f, 0xcb0, 0x6928, 0x1, 0x0);
        gbc.writeMem(0xe23d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0xe23f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe23d), 0xcb);
        EXPECT(gbc.readMem(0xe23e), 0x90);
        // CB 90 001F
        gbc.setState(0xe02a, 0xc6f, 0xf490, 0xd94, 0xfbe8, 0x8650, 0x0, 0x1);
        gbc.writeMem(0xe02a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc6f);
        EXPECT(gbc.pc(), 0xe02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe02a), 0xcb);
        EXPECT(gbc.readMem(0xe02b), 0x90);
        // CB 90 0020
        gbc.setState(0x16cf, 0x5b5e, 0x89a0, 0x14b0, 0xe589, 0x117c, 0x1, 0x1);
        gbc.writeMem(0x16cf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5b5e);
        EXPECT(gbc.pc(), 0x16d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0021
        gbc.setState(0xd5b9, 0xc471, 0xadf0, 0x19f2, 0x201, 0xea65, 0x0, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc471);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0x90);
        // CB 90 0022
        gbc.setState(0x820d, 0x15b0, 0xd2d0, 0xcde5, 0x746f, 0xda5c, 0x1, 0x0);
        gbc.writeMem(0x820d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x15b0);
        EXPECT(gbc.pc(), 0x820f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820d), 0xcb);
        EXPECT(gbc.readMem(0x820e), 0x90);
        // CB 90 0023
        gbc.setState(0x7d59, 0x9b91, 0xaa20, 0xc580, 0xede9, 0x29b6, 0x0, 0x0);
        gbc.writeMem(0x7d59, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9b91);
        EXPECT(gbc.pc(), 0x7d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0024
        gbc.setState(0xda53, 0xb760, 0x2ed0, 0x55b5, 0x1fb7, 0xe206, 0x1, 0x1);
        gbc.writeMem(0xda53, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb760);
        EXPECT(gbc.pc(), 0xda55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda53), 0xcb);
        EXPECT(gbc.readMem(0xda54), 0x90);
        // CB 90 0025
        gbc.setState(0x22a8, 0xe81f, 0x2e70, 0xa080, 0x9d6e, 0xd5d1, 0x1, 0x0);
        gbc.writeMem(0x22a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe81f);
        EXPECT(gbc.pc(), 0x22aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0026
        gbc.setState(0xbf88, 0xe942, 0x3890, 0x17ef, 0xdf45, 0x4b11, 0x0, 0x1);
        gbc.writeMem(0xbf88, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xe942);
        EXPECT(gbc.pc(), 0xbf8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf88), 0xcb);
        EXPECT(gbc.readMem(0xbf89), 0x90);
        // CB 90 0027
        gbc.setState(0xe4dd, 0x1375, 0xfb30, 0x1e79, 0x8c22, 0x5e93, 0x0, 0x1);
        gbc.writeMem(0xe4dd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1375);
        EXPECT(gbc.pc(), 0xe4df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4dd), 0xcb);
        EXPECT(gbc.readMem(0xe4de), 0x90);
        // CB 90 0028
        gbc.setState(0x265f, 0x70eb, 0x160, 0x63ab, 0x9ae7, 0xcb2d, 0x0, 0x0);
        gbc.writeMem(0x265f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x70eb);
        EXPECT(gbc.pc(), 0x2661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0029
        gbc.setState(0x8ff8, 0xce30, 0x2940, 0xccec, 0xf9e0, 0x9f4b, 0x1, 0x1);
        gbc.writeMem(0x8ff8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0x8ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ff8), 0xcb);
        EXPECT(gbc.readMem(0x8ff9), 0x90);
        // CB 90 002A
        gbc.setState(0xb98a, 0xbdba, 0xed90, 0xd600, 0xa94, 0x3c42, 0x0, 0x1);
        gbc.writeMem(0xb98a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xbdba);
        EXPECT(gbc.pc(), 0xb98c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98a), 0xcb);
        EXPECT(gbc.readMem(0xb98b), 0x90);
        // CB 90 002B
        gbc.setState(0x6dab, 0x7443, 0xf680, 0xc5ce, 0x59e7, 0x87a2, 0x0, 0x0);
        gbc.writeMem(0x6dab, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7443);
        EXPECT(gbc.pc(), 0x6dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 002C
        gbc.setState(0x70f8, 0xb00b, 0x1df0, 0x1f07, 0x2bb0, 0xb123, 0x1, 0x0);
        gbc.writeMem(0x70f8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb00b);
        EXPECT(gbc.pc(), 0x70fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 002D
        gbc.setState(0x4090, 0xaccc, 0x1e70, 0x2022, 0x8030, 0xc528, 0x1, 0x0);
        gbc.writeMem(0x4090, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaccc);
        EXPECT(gbc.pc(), 0x4092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 002E
        gbc.setState(0x35b8, 0xa046, 0x2440, 0x9b1a, 0xa546, 0xa6f7, 0x1, 0x0);
        gbc.writeMem(0x35b8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa046);
        EXPECT(gbc.pc(), 0x35ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 002F
        gbc.setState(0xea1e, 0xdb8d, 0xa700, 0x8db6, 0x546, 0x9128, 0x1, 0x1);
        gbc.writeMem(0xea1e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdb8d);
        EXPECT(gbc.pc(), 0xea20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea1e), 0xcb);
        EXPECT(gbc.readMem(0xea1f), 0x90);
        // CB 90 0030
        gbc.setState(0x50fc, 0x150a, 0xc350, 0x4a84, 0x639a, 0xe57e, 0x1, 0x0);
        gbc.writeMem(0x50fc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x150a);
        EXPECT(gbc.pc(), 0x50fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0031
        gbc.setState(0x57f, 0x2ec6, 0xb910, 0x2fb4, 0x13a7, 0x724b, 0x1, 0x1);
        gbc.writeMem(0x57f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2ec6);
        EXPECT(gbc.pc(), 0x581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0032
        gbc.setState(0x9b56, 0x37ae, 0x27a0, 0x9a4d, 0xeaab, 0xeae4, 0x1, 0x1);
        gbc.writeMem(0x9b56, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x37ae);
        EXPECT(gbc.pc(), 0x9b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b56), 0xcb);
        EXPECT(gbc.readMem(0x9b57), 0x90);
        // CB 90 0033
        gbc.setState(0x92c6, 0x9a79, 0x29d0, 0x90e2, 0xb93b, 0xeb9d, 0x0, 0x0);
        gbc.writeMem(0x92c6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9a79);
        EXPECT(gbc.pc(), 0x92c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92c6), 0xcb);
        EXPECT(gbc.readMem(0x92c7), 0x90);
        // CB 90 0034
        gbc.setState(0xa68c, 0x9d9d, 0x1850, 0xaa4, 0x89d9, 0x9b59, 0x0, 0x0);
        gbc.writeMem(0xa68c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9d9d);
        EXPECT(gbc.pc(), 0xa68e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0xcb);
        EXPECT(gbc.readMem(0xa68d), 0x90);
        // CB 90 0035
        gbc.setState(0x3127, 0x7624, 0x83f0, 0xe8f3, 0x721e, 0x8969, 0x1, 0x0);
        gbc.writeMem(0x3127, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7624);
        EXPECT(gbc.pc(), 0x3129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0036
        gbc.setState(0x6cc8, 0x5402, 0x1860, 0x2793, 0xa691, 0x4ac, 0x0, 0x1);
        gbc.writeMem(0x6cc8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5402);
        EXPECT(gbc.pc(), 0x6cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0037
        gbc.setState(0x14b8, 0x4b19, 0xc270, 0x21be, 0xfb1d, 0x5232, 0x1, 0x0);
        gbc.writeMem(0x14b8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4b19);
        EXPECT(gbc.pc(), 0x14ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0038
        gbc.setState(0x5323, 0x5ded, 0xdb60, 0x27a5, 0x1990, 0xfc15, 0x1, 0x1);
        gbc.writeMem(0x5323, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5ded);
        EXPECT(gbc.pc(), 0x5325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0039
        gbc.setState(0x16bd, 0x8d03, 0x7a70, 0x4d87, 0x14f7, 0x3e42, 0x1, 0x0);
        gbc.writeMem(0x16bd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8d03);
        EXPECT(gbc.pc(), 0x16bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 003A
        gbc.setState(0x190e, 0x6d06, 0x8120, 0x5266, 0xa92a, 0xd3c5, 0x0, 0x0);
        gbc.writeMem(0x190e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6d06);
        EXPECT(gbc.pc(), 0x1910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 003B
        gbc.setState(0x3904, 0xb731, 0x38b0, 0xe0d0, 0xe317, 0x6e98, 0x0, 0x1);
        gbc.writeMem(0x3904, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xb731);
        EXPECT(gbc.pc(), 0x3906);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 003C
        gbc.setState(0x698c, 0xd341, 0x8960, 0xf295, 0xe2e6, 0x7ccd, 0x1, 0x0);
        gbc.writeMem(0x698c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd341);
        EXPECT(gbc.pc(), 0x698e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 003D
        gbc.setState(0xe9ac, 0xff35, 0xa3d0, 0xf7d6, 0xa859, 0x6997, 0x1, 0x0);
        gbc.writeMem(0xe9ac, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xff35);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ac), 0xcb);
        EXPECT(gbc.readMem(0xe9ad), 0x90);
        // CB 90 003E
        gbc.setState(0x5e88, 0xaf24, 0x710, 0x72d6, 0xbe38, 0xcb38, 0x1, 0x1);
        gbc.writeMem(0x5e88, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xaf24);
        EXPECT(gbc.pc(), 0x5e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 003F
        gbc.setState(0x4083, 0x3c43, 0xbe40, 0xc14f, 0x26c1, 0x605, 0x0, 0x0);
        gbc.writeMem(0x4083, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x3c43);
        EXPECT(gbc.pc(), 0x4085);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0040
        gbc.setState(0x95f4, 0x8edc, 0x5b50, 0xfee8, 0x3119, 0x794c, 0x1, 0x0);
        gbc.writeMem(0x95f4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8edc);
        EXPECT(gbc.pc(), 0x95f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f4), 0xcb);
        EXPECT(gbc.readMem(0x95f5), 0x90);
        // CB 90 0041
        gbc.setState(0xd38c, 0xf2c, 0x7090, 0x62d9, 0xea8f, 0xe073, 0x0, 0x1);
        gbc.writeMem(0xd38c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf2c);
        EXPECT(gbc.pc(), 0xd38e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38c), 0xcb);
        EXPECT(gbc.readMem(0xd38d), 0x90);
        // CB 90 0042
        gbc.setState(0x5443, 0xc3d1, 0x3e30, 0x245a, 0x3f94, 0x65f0, 0x1, 0x1);
        gbc.writeMem(0x5443, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc3d1);
        EXPECT(gbc.pc(), 0x5445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0043
        gbc.setState(0x7aa8, 0xd4e5, 0x9cf0, 0xce9f, 0x5884, 0x760f, 0x1, 0x1);
        gbc.writeMem(0x7aa8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0x7aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0044
        gbc.setState(0xbd7, 0x6419, 0xa5d0, 0x5472, 0x694e, 0x7811, 0x1, 0x1);
        gbc.writeMem(0xbd7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6419);
        EXPECT(gbc.pc(), 0xbd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0045
        gbc.setState(0x62c9, 0x8ec1, 0x9270, 0xcd53, 0x3805, 0x313b, 0x1, 0x1);
        gbc.writeMem(0x62c9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8ec1);
        EXPECT(gbc.pc(), 0x62cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0046
        gbc.setState(0xd328, 0xdc0a, 0xc550, 0xf359, 0xeab1, 0xbcf8, 0x0, 0x1);
        gbc.writeMem(0xd328, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdc0a);
        EXPECT(gbc.pc(), 0xd32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd328), 0xcb);
        EXPECT(gbc.readMem(0xd329), 0x90);
        // CB 90 0047
        gbc.setState(0x3148, 0x31b6, 0x6c80, 0xdf3f, 0x32b5, 0x75ed, 0x0, 0x1);
        gbc.writeMem(0x3148, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x31b6);
        EXPECT(gbc.pc(), 0x314a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0048
        gbc.setState(0xaf5d, 0xe63, 0x4a70, 0x31f2, 0x4a38, 0x41f0, 0x1, 0x1);
        gbc.writeMem(0xaf5d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe63);
        EXPECT(gbc.pc(), 0xaf5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5d), 0xcb);
        EXPECT(gbc.readMem(0xaf5e), 0x90);
        // CB 90 0049
        gbc.setState(0x7c55, 0x46d2, 0x72e0, 0xa9b3, 0x2eee, 0x9ac0, 0x0, 0x1);
        gbc.writeMem(0x7c55, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x46d2);
        EXPECT(gbc.pc(), 0x7c57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 004B
        gbc.setState(0x7895, 0x89ef, 0xa9d0, 0xa5c2, 0x8f7b, 0x37dc, 0x1, 0x0);
        gbc.writeMem(0x7895, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x89ef);
        EXPECT(gbc.pc(), 0x7897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 004C
        gbc.setState(0x6c06, 0x677d, 0x6a80, 0x1a0b, 0xebf8, 0x56a1, 0x0, 0x0);
        gbc.writeMem(0x6c06, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x677d);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 004D
        gbc.setState(0xa83f, 0xaf21, 0xc310, 0x365, 0x1ad, 0x5b49, 0x1, 0x0);
        gbc.writeMem(0xa83f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaf21);
        EXPECT(gbc.pc(), 0xa841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa83f), 0xcb);
        EXPECT(gbc.readMem(0xa840), 0x90);
        // CB 90 004E
        gbc.setState(0x3a01, 0xf83e, 0xf770, 0x5d57, 0x4d80, 0xa47d, 0x0, 0x0);
        gbc.writeMem(0x3a01, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf83e);
        EXPECT(gbc.pc(), 0x3a03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 004F
        gbc.setState(0x5e22, 0x8560, 0x4960, 0xc21, 0x6694, 0xca5b, 0x0, 0x0);
        gbc.writeMem(0x5e22, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8560);
        EXPECT(gbc.pc(), 0x5e24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0050
        gbc.setState(0xbcd0, 0x12a1, 0xc930, 0x7b6f, 0x1891, 0x7928, 0x1, 0x1);
        gbc.writeMem(0xbcd0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x12a1);
        EXPECT(gbc.pc(), 0xbcd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd0), 0xcb);
        EXPECT(gbc.readMem(0xbcd1), 0x90);
        // CB 90 0051
        gbc.setState(0x9fe, 0xd628, 0xcf00, 0xb3bd, 0xfd6c, 0x56c3, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd628);
        EXPECT(gbc.pc(), 0xa00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0053
        gbc.setState(0xd70a, 0xf410, 0x1d40, 0x3961, 0xada8, 0xee87, 0x0, 0x0);
        gbc.writeMem(0xd70a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf410);
        EXPECT(gbc.pc(), 0xd70c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70a), 0xcb);
        EXPECT(gbc.readMem(0xd70b), 0x90);
        // CB 90 0054
        gbc.setState(0x4582, 0xf4b6, 0xb2f0, 0xa50a, 0x5b2c, 0xb6ef, 0x0, 0x1);
        gbc.writeMem(0x4582, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf4b6);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0055
        gbc.setState(0xc87f, 0xf00c, 0x4c50, 0x695e, 0xe8e5, 0x8c0d, 0x0, 0x0);
        gbc.writeMem(0xc87f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf00c);
        EXPECT(gbc.pc(), 0xc881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87f), 0xcb);
        EXPECT(gbc.readMem(0xc880), 0x90);
        // CB 90 0056
        gbc.setState(0x8bc5, 0x1b67, 0x9fe0, 0xf594, 0x5000, 0x3829, 0x1, 0x1);
        gbc.writeMem(0x8bc5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1b67);
        EXPECT(gbc.pc(), 0x8bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc5), 0xcb);
        EXPECT(gbc.readMem(0x8bc6), 0x90);
        // CB 90 0057
        gbc.setState(0x832d, 0x3b4a, 0xe8b0, 0x772f, 0x7623, 0xf1ba, 0x0, 0x0);
        gbc.writeMem(0x832d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3b4a);
        EXPECT(gbc.pc(), 0x832f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832d), 0xcb);
        EXPECT(gbc.readMem(0x832e), 0x90);
        // CB 90 0058
        gbc.setState(0x402, 0x2a6e, 0x63d0, 0x9458, 0x5cde, 0x2eb5, 0x1, 0x0);
        gbc.writeMem(0x402, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2a6e);
        EXPECT(gbc.pc(), 0x404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0059
        gbc.setState(0xdeca, 0x49f9, 0x9420, 0xf62a, 0x7727, 0xe6fc, 0x0, 0x1);
        gbc.writeMem(0xdeca, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x49f9);
        EXPECT(gbc.pc(), 0xdecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeca), 0xcb);
        EXPECT(gbc.readMem(0xdecb), 0x90);
        // CB 90 005B
        gbc.setState(0xe4dd, 0x743b, 0xd6b0, 0xb4e5, 0x31c4, 0x3c99, 0x1, 0x1);
        gbc.writeMem(0xe4dd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0xe4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4dd), 0xcb);
        EXPECT(gbc.readMem(0xe4de), 0x90);
        // CB 90 005C
        gbc.setState(0x1684, 0x6466, 0x9490, 0x8799, 0x2f67, 0x73f9, 0x0, 0x1);
        gbc.writeMem(0x1684, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6466);
        EXPECT(gbc.pc(), 0x1686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 005D
        gbc.setState(0x66c1, 0x36e5, 0x6b30, 0x2980, 0x7962, 0xb012, 0x0, 0x0);
        gbc.writeMem(0x66c1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x36e5);
        EXPECT(gbc.pc(), 0x66c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 005E
        gbc.setState(0x5777, 0x6bd4, 0x5820, 0x57a4, 0xbead, 0x4761, 0x1, 0x1);
        gbc.writeMem(0x5777, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x6bd4);
        EXPECT(gbc.pc(), 0x5779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 005F
        gbc.setState(0xeaf0, 0x5417, 0xca00, 0xf895, 0x11f8, 0x45b9, 0x1, 0x0);
        gbc.writeMem(0xeaf0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5417);
        EXPECT(gbc.pc(), 0xeaf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf0), 0xcb);
        EXPECT(gbc.readMem(0xeaf1), 0x90);
        // CB 90 0060
        gbc.setState(0x1bea, 0xef4a, 0x3820, 0xa673, 0x9097, 0x8e37, 0x1, 0x1);
        gbc.writeMem(0x1bea, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0x1bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0061
        gbc.setState(0x5a34, 0x4b08, 0x93c0, 0x864f, 0x6721, 0x51c2, 0x0, 0x1);
        gbc.writeMem(0x5a34, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x4b08);
        EXPECT(gbc.pc(), 0x5a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0062
        gbc.setState(0x164e, 0xba, 0x6a0, 0xbf36, 0xd958, 0xaf76, 0x0, 0x0);
        gbc.writeMem(0x164e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xba);
        EXPECT(gbc.pc(), 0x1650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0063
        gbc.setState(0xd5bb, 0x74bf, 0xd020, 0xa3a, 0x93c3, 0x2dde, 0x1, 0x0);
        gbc.writeMem(0xd5bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x74bf);
        EXPECT(gbc.pc(), 0xd5bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5bb), 0xcb);
        EXPECT(gbc.readMem(0xd5bc), 0x90);
        // CB 90 0064
        gbc.setState(0x4dd1, 0xc1ec, 0x610, 0x3d6d, 0xdd65, 0xdabb, 0x0, 0x1);
        gbc.writeMem(0x4dd1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xc1ec);
        EXPECT(gbc.pc(), 0x4dd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0065
        gbc.setState(0x77a9, 0xdac, 0xa920, 0x399a, 0x8fe, 0x622d, 0x1, 0x0);
        gbc.writeMem(0x77a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdac);
        EXPECT(gbc.pc(), 0x77ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0066
        gbc.setState(0xed74, 0xaf6c, 0x58a0, 0x4b29, 0x545a, 0xe06a, 0x1, 0x0);
        gbc.writeMem(0xed74, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaf6c);
        EXPECT(gbc.pc(), 0xed76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed74), 0xcb);
        EXPECT(gbc.readMem(0xed75), 0x90);
        // CB 90 0067
        gbc.setState(0xbc49, 0xc274, 0x5800, 0xc0a7, 0x4f5, 0xbff1, 0x1, 0x0);
        gbc.writeMem(0xbc49, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc274);
        EXPECT(gbc.pc(), 0xbc4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc49), 0xcb);
        EXPECT(gbc.readMem(0xbc4a), 0x90);
        // CB 90 0068
        gbc.setState(0x9c1a, 0xecd8, 0xa1b0, 0x8918, 0x5e33, 0xbd94, 0x1, 0x1);
        gbc.writeMem(0x9c1a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xecd8);
        EXPECT(gbc.pc(), 0x9c1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c1a), 0xcb);
        EXPECT(gbc.readMem(0x9c1b), 0x90);
        // CB 90 0069
        gbc.setState(0x203a, 0xa0, 0x40b0, 0x8a9b, 0xafc, 0x1dfa, 0x0, 0x1);
        gbc.writeMem(0x203a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa0);
        EXPECT(gbc.pc(), 0x203c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 006A
        gbc.setState(0x4d3c, 0x2a97, 0x5b40, 0xcd66, 0x9ac4, 0xc64, 0x0, 0x1);
        gbc.writeMem(0x4d3c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2a97);
        EXPECT(gbc.pc(), 0x4d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 006C
        gbc.setState(0x50d6, 0x57a9, 0x7d0, 0xe8b0, 0x304, 0xc820, 0x0, 0x1);
        gbc.writeMem(0x50d6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x57a9);
        EXPECT(gbc.pc(), 0x50d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 006D
        gbc.setState(0xbefa, 0xfcaa, 0x5b10, 0xf894, 0xc0da, 0x2ce1, 0x1, 0x1);
        gbc.writeMem(0xbefa, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfcaa);
        EXPECT(gbc.pc(), 0xbefc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbefa), 0xcb);
        EXPECT(gbc.readMem(0xbefb), 0x90);
        // CB 90 006F
        gbc.setState(0xe999, 0x24c6, 0xbe10, 0xc6f1, 0xff52, 0x4d06, 0x0, 0x0);
        gbc.writeMem(0xe999, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x24c6);
        EXPECT(gbc.pc(), 0xe99b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe999), 0xcb);
        EXPECT(gbc.readMem(0xe99a), 0x90);
        // CB 90 0070
        gbc.setState(0x2602, 0x17d0, 0x59b0, 0x9cdb, 0x9bde, 0x5cfa, 0x0, 0x0);
        gbc.writeMem(0x2602, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x17d0);
        EXPECT(gbc.pc(), 0x2604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0071
        gbc.setState(0x2c8f, 0x2716, 0xee20, 0x1efe, 0xd1c3, 0x14d4, 0x0, 0x1);
        gbc.writeMem(0x2c8f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2716);
        EXPECT(gbc.pc(), 0x2c91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0072
        gbc.setState(0x6473, 0x6822, 0xad0, 0x3c12, 0x41fc, 0xabc3, 0x0, 0x1);
        gbc.writeMem(0x6473, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6822);
        EXPECT(gbc.pc(), 0x6475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0073
        gbc.setState(0x6331, 0xa14b, 0x4260, 0xad18, 0xf293, 0x87a7, 0x0, 0x0);
        gbc.writeMem(0x6331, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa14b);
        EXPECT(gbc.pc(), 0x6333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0074
        gbc.setState(0xb766, 0x9638, 0xfea0, 0x9e3f, 0x6174, 0x6f4f, 0x0, 0x0);
        gbc.writeMem(0xb766, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9638);
        EXPECT(gbc.pc(), 0xb768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb766), 0xcb);
        EXPECT(gbc.readMem(0xb767), 0x90);
        // CB 90 0075
        gbc.setState(0xde8a, 0x1644, 0xf270, 0x198e, 0xe66f, 0xa4b0, 0x0, 0x1);
        gbc.writeMem(0xde8a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1644);
        EXPECT(gbc.pc(), 0xde8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde8a), 0xcb);
        EXPECT(gbc.readMem(0xde8b), 0x90);
        // CB 90 0076
        gbc.setState(0x28f3, 0x9f72, 0xd740, 0x1d72, 0xf9de, 0x6833, 0x1, 0x1);
        gbc.writeMem(0x28f3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x9f72);
        EXPECT(gbc.pc(), 0x28f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0077
        gbc.setState(0x8a9c, 0xb273, 0xc250, 0xc045, 0x2707, 0x4763, 0x0, 0x0);
        gbc.writeMem(0x8a9c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb273);
        EXPECT(gbc.pc(), 0x8a9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a9c), 0xcb);
        EXPECT(gbc.readMem(0x8a9d), 0x90);
        // CB 90 0078
        gbc.setState(0xc7b, 0xff4a, 0xd0e0, 0xf43f, 0x8c1f, 0x3c54, 0x1, 0x0);
        gbc.writeMem(0xc7b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xff4a);
        EXPECT(gbc.pc(), 0xc7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0079
        gbc.setState(0xa58a, 0x53a1, 0xb9f0, 0x5bd3, 0x404e, 0xe51d, 0x0, 0x0);
        gbc.writeMem(0xa58a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x53a1);
        EXPECT(gbc.pc(), 0xa58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58a), 0xcb);
        EXPECT(gbc.readMem(0xa58b), 0x90);
        // CB 90 007A
        gbc.setState(0x36c5, 0xa313, 0x7640, 0xfef8, 0x2092, 0xc543, 0x0, 0x0);
        gbc.writeMem(0x36c5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa313);
        EXPECT(gbc.pc(), 0x36c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 007B
        gbc.setState(0xd731, 0xa60c, 0xcfb0, 0xcbc4, 0xde3a, 0xab3a, 0x0, 0x1);
        gbc.writeMem(0xd731, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa60c);
        EXPECT(gbc.pc(), 0xd733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd731), 0xcb);
        EXPECT(gbc.readMem(0xd732), 0x90);
        // CB 90 007C
        gbc.setState(0x284a, 0xd145, 0x3430, 0xb367, 0x62b6, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x284a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd145);
        EXPECT(gbc.pc(), 0x284c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 007D
        gbc.setState(0x54c0, 0x2675, 0xaa00, 0x59b1, 0x932f, 0x4496, 0x1, 0x0);
        gbc.writeMem(0x54c0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2675);
        EXPECT(gbc.pc(), 0x54c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 007E
        gbc.setState(0xbc2a, 0xaec4, 0x2910, 0xef3c, 0xabda, 0x62, 0x1, 0x1);
        gbc.writeMem(0xbc2a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0xbc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc2a), 0xcb);
        EXPECT(gbc.readMem(0xbc2b), 0x90);
        // CB 90 007F
        gbc.setState(0x3d77, 0x8ccd, 0xbc30, 0xb4a3, 0x4758, 0x7d61, 0x0, 0x1);
        gbc.writeMem(0x3d77, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x3d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0081
        gbc.setState(0x8c56, 0x8719, 0xac00, 0x17ca, 0x1e8e, 0x9422, 0x1, 0x1);
        gbc.writeMem(0x8c56, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x8719);
        EXPECT(gbc.pc(), 0x8c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c56), 0xcb);
        EXPECT(gbc.readMem(0x8c57), 0x90);
        // CB 90 0082
        gbc.setState(0x611d, 0xd35c, 0x7d40, 0x14eb, 0x393d, 0x3fa1, 0x0, 0x0);
        gbc.writeMem(0x611d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd35c);
        EXPECT(gbc.pc(), 0x611f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0084
        gbc.setState(0x88b3, 0x8448, 0x80b0, 0x4a8d, 0x89b9, 0xef05, 0x0, 0x1);
        gbc.writeMem(0x88b3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8448);
        EXPECT(gbc.pc(), 0x88b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b3), 0xcb);
        EXPECT(gbc.readMem(0x88b4), 0x90);
        // CB 90 0085
        gbc.setState(0xc37d, 0x5ff7, 0xbb70, 0x5e8a, 0xd88d, 0x991e, 0x1, 0x0);
        gbc.writeMem(0xc37d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5ff7);
        EXPECT(gbc.pc(), 0xc37f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37d), 0xcb);
        EXPECT(gbc.readMem(0xc37e), 0x90);
        // CB 90 0086
        gbc.setState(0xaf39, 0xb152, 0x4800, 0x79f2, 0xc04d, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0xaf39, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb152);
        EXPECT(gbc.pc(), 0xaf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf39), 0xcb);
        EXPECT(gbc.readMem(0xaf3a), 0x90);
        // CB 90 0087
        gbc.setState(0x1c23, 0x9e14, 0xce30, 0x3b2e, 0xb908, 0x4277, 0x1, 0x0);
        gbc.writeMem(0x1c23, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9e14);
        EXPECT(gbc.pc(), 0x1c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0088
        gbc.setState(0x75f0, 0x867, 0x3e80, 0x7609, 0x8025, 0x4065, 0x0, 0x0);
        gbc.writeMem(0x75f0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x867);
        EXPECT(gbc.pc(), 0x75f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0089
        gbc.setState(0xa17b, 0x599c, 0x5f60, 0xa7aa, 0x8a39, 0xa30f, 0x0, 0x0);
        gbc.writeMem(0xa17b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x599c);
        EXPECT(gbc.pc(), 0xa17d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa17b), 0xcb);
        EXPECT(gbc.readMem(0xa17c), 0x90);
        // CB 90 008A
        gbc.setState(0xec9c, 0xc14c, 0xfa60, 0x2b31, 0x61c6, 0xdf3d, 0x1, 0x0);
        gbc.writeMem(0xec9c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc14c);
        EXPECT(gbc.pc(), 0xec9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec9c), 0xcb);
        EXPECT(gbc.readMem(0xec9d), 0x90);
        // CB 90 008B
        gbc.setState(0xc3df, 0xfeb3, 0x47e0, 0x88ff, 0x5ea8, 0xf11, 0x0, 0x0);
        gbc.writeMem(0xc3df, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfeb3);
        EXPECT(gbc.pc(), 0xc3e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3df), 0xcb);
        EXPECT(gbc.readMem(0xc3e0), 0x90);
        // CB 90 008C
        gbc.setState(0x105d, 0xdc0c, 0xee0, 0xf45b, 0x84ec, 0xce79, 0x0, 0x1);
        gbc.writeMem(0x105d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdc0c);
        EXPECT(gbc.pc(), 0x105f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 008D
        gbc.setState(0x3558, 0xc0f2, 0x20d0, 0xcb66, 0xf612, 0xa02f, 0x0, 0x0);
        gbc.writeMem(0x3558, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc0f2);
        EXPECT(gbc.pc(), 0x355a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 008E
        gbc.setState(0x28f4, 0xe9c3, 0x5d90, 0x79fc, 0x77ce, 0xb70b, 0x1, 0x1);
        gbc.writeMem(0x28f4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe9c3);
        EXPECT(gbc.pc(), 0x28f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 008F
        gbc.setState(0xcb35, 0xa1de, 0x8eb0, 0x847e, 0xfff8, 0x485f, 0x0, 0x0);
        gbc.writeMem(0xcb35, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa1de);
        EXPECT(gbc.pc(), 0xcb37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb35), 0xcb);
        EXPECT(gbc.readMem(0xcb36), 0x90);
        // CB 90 0090
        gbc.setState(0x5a9f, 0x1e0f, 0xca90, 0xe307, 0x5dfa, 0x9056, 0x1, 0x1);
        gbc.writeMem(0x5a9f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1e0f);
        EXPECT(gbc.pc(), 0x5aa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0091
        gbc.setState(0x61df, 0x8718, 0x4800, 0x1e4a, 0x5a37, 0x782f, 0x0, 0x1);
        gbc.writeMem(0x61df, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8718);
        EXPECT(gbc.pc(), 0x61e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0092
        gbc.setState(0xd29b, 0xe509, 0x7590, 0x5f62, 0x4edc, 0xd8df, 0x1, 0x0);
        gbc.writeMem(0xd29b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe509);
        EXPECT(gbc.pc(), 0xd29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd29b), 0xcb);
        EXPECT(gbc.readMem(0xd29c), 0x90);
        // CB 90 0093
        gbc.setState(0x2064, 0x35b5, 0xc420, 0x14de, 0xd543, 0x1f8d, 0x1, 0x0);
        gbc.writeMem(0x2064, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x35b5);
        EXPECT(gbc.pc(), 0x2066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0094
        gbc.setState(0xb7de, 0x862f, 0xf140, 0x3c27, 0x2210, 0x153d, 0x0, 0x1);
        gbc.writeMem(0xb7de, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x862f);
        EXPECT(gbc.pc(), 0xb7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7de), 0xcb);
        EXPECT(gbc.readMem(0xb7df), 0x90);
        // CB 90 0095
        gbc.setState(0x7455, 0x52d1, 0x87b0, 0xb23e, 0xabe9, 0xd2ca, 0x1, 0x1);
        gbc.writeMem(0x7455, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x52d1);
        EXPECT(gbc.pc(), 0x7457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0096
        gbc.setState(0x3ed5, 0x9a33, 0x4e80, 0x4a75, 0x53ed, 0x2267, 0x0, 0x0);
        gbc.writeMem(0x3ed5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9a33);
        EXPECT(gbc.pc(), 0x3ed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0097
        gbc.setState(0xb042, 0xbce6, 0xa9a0, 0xf387, 0xfa3e, 0x87bd, 0x1, 0x0);
        gbc.writeMem(0xb042, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xbce6);
        EXPECT(gbc.pc(), 0xb044);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb042), 0xcb);
        EXPECT(gbc.readMem(0xb043), 0x90);
        // CB 90 0098
        gbc.setState(0xd29b, 0x6b45, 0x6880, 0x9bf7, 0x3ba1, 0x8b73, 0x1, 0x0);
        gbc.writeMem(0xd29b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6b45);
        EXPECT(gbc.pc(), 0xd29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd29b), 0xcb);
        EXPECT(gbc.readMem(0xd29c), 0x90);
        // CB 90 0099
        gbc.setState(0x8e71, 0xdf2c, 0xe980, 0x501d, 0x7856, 0x194c, 0x1, 0x0);
        gbc.writeMem(0x8e71, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdf2c);
        EXPECT(gbc.pc(), 0x8e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e71), 0xcb);
        EXPECT(gbc.readMem(0x8e72), 0x90);
        // CB 90 009B
        gbc.setState(0xde2c, 0xf866, 0xd60, 0xf4a0, 0x24d, 0xa1d9, 0x1, 0x1);
        gbc.writeMem(0xde2c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf866);
        EXPECT(gbc.pc(), 0xde2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2c), 0xcb);
        EXPECT(gbc.readMem(0xde2d), 0x90);
        // CB 90 009C
        gbc.setState(0xc446, 0x6fd, 0x8030, 0xe860, 0x6196, 0x3a73, 0x0, 0x1);
        gbc.writeMem(0xc446, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6fd);
        EXPECT(gbc.pc(), 0xc448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc446), 0xcb);
        EXPECT(gbc.readMem(0xc447), 0x90);
        // CB 90 009D
        gbc.setState(0x98ba, 0x6b64, 0x9e10, 0x9400, 0x6fbd, 0x51a3, 0x0, 0x0);
        gbc.writeMem(0x98ba, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6b64);
        EXPECT(gbc.pc(), 0x98bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ba), 0xcb);
        EXPECT(gbc.readMem(0x98bb), 0x90);
        // CB 90 009E
        gbc.setState(0x276b, 0x841, 0x6110, 0x59bd, 0x6288, 0xdb14, 0x0, 0x1);
        gbc.writeMem(0x276b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x841);
        EXPECT(gbc.pc(), 0x276d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 009F
        gbc.setState(0xbe91, 0x457a, 0x9730, 0x3bd0, 0x548e, 0x2bcd, 0x1, 0x0);
        gbc.writeMem(0xbe91, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x457a);
        EXPECT(gbc.pc(), 0xbe93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe91), 0xcb);
        EXPECT(gbc.readMem(0xbe92), 0x90);
        // CB 90 00A0
        gbc.setState(0xa396, 0x9b4b, 0x44f0, 0xdeff, 0x740a, 0x5195, 0x1, 0x1);
        gbc.writeMem(0xa396, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9b4b);
        EXPECT(gbc.pc(), 0xa398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa396), 0xcb);
        EXPECT(gbc.readMem(0xa397), 0x90);
        // CB 90 00A1
        gbc.setState(0x607a, 0x44f, 0x3e30, 0x64fe, 0x575d, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0x607a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x44f);
        EXPECT(gbc.pc(), 0x607c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00A3
        gbc.setState(0xca86, 0xe75b, 0x3200, 0xdea8, 0xe47a, 0xd228, 0x1, 0x0);
        gbc.writeMem(0xca86, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe75b);
        EXPECT(gbc.pc(), 0xca88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca86), 0xcb);
        EXPECT(gbc.readMem(0xca87), 0x90);
        // CB 90 00A4
        gbc.setState(0x76cc, 0x5cac, 0xf970, 0x538a, 0x771c, 0x55ff, 0x0, 0x1);
        gbc.writeMem(0x76cc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5cac);
        EXPECT(gbc.pc(), 0x76ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00A5
        gbc.setState(0x832a, 0x8952, 0x2e10, 0x2433, 0xb34f, 0x6f6, 0x0, 0x1);
        gbc.writeMem(0x832a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8952);
        EXPECT(gbc.pc(), 0x832c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832a), 0xcb);
        EXPECT(gbc.readMem(0x832b), 0x90);
        // CB 90 00A6
        gbc.setState(0x11cb, 0xd3e7, 0x9120, 0xca87, 0xe513, 0x2ca2, 0x1, 0x0);
        gbc.writeMem(0x11cb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xd3e7);
        EXPECT(gbc.pc(), 0x11cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00A7
        gbc.setState(0xe05d, 0xce89, 0xcd0, 0x8903, 0xe847, 0xefb1, 0x0, 0x0);
        gbc.writeMem(0xe05d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xce89);
        EXPECT(gbc.pc(), 0xe05f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe05d), 0xcb);
        EXPECT(gbc.readMem(0xe05e), 0x90);
        // CB 90 00A8
        gbc.setState(0xb27f, 0x5f22, 0xf0a0, 0xd2f0, 0x34b9, 0x5320, 0x1, 0x0);
        gbc.writeMem(0xb27f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x5f22);
        EXPECT(gbc.pc(), 0xb281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb27f), 0xcb);
        EXPECT(gbc.readMem(0xb280), 0x90);
        // CB 90 00A9
        gbc.setState(0xb22c, 0x8437, 0xa8d0, 0xaa4c, 0xfb3a, 0xdf6d, 0x1, 0x0);
        gbc.writeMem(0xb22c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8437);
        EXPECT(gbc.pc(), 0xb22e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb22c), 0xcb);
        EXPECT(gbc.readMem(0xb22d), 0x90);
        // CB 90 00AA
        gbc.setState(0xef32, 0x800d, 0x5460, 0x7b34, 0x36bd, 0x3321, 0x0, 0x1);
        gbc.writeMem(0xef32, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x800d);
        EXPECT(gbc.pc(), 0xef34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef32), 0xcb);
        EXPECT(gbc.readMem(0xef33), 0x90);
        // CB 90 00AB
        gbc.setState(0x8, 0xf5c0, 0x2e40, 0x2f99, 0x123e, 0x50c, 0x1, 0x0);
        gbc.writeMem(0x8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf5c0);
        EXPECT(gbc.pc(), 0xa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00AC
        gbc.setState(0xabd2, 0xd0f7, 0x50, 0x60fe, 0xd36c, 0x15e6, 0x1, 0x0);
        gbc.writeMem(0xabd2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xd0f7);
        EXPECT(gbc.pc(), 0xabd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd2), 0xcb);
        EXPECT(gbc.readMem(0xabd3), 0x90);
        // CB 90 00AD
        gbc.setState(0xe618, 0xb802, 0x33a0, 0x2d5e, 0x29ee, 0x72b5, 0x0, 0x1);
        gbc.writeMem(0xe618, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb802);
        EXPECT(gbc.pc(), 0xe61a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe618), 0xcb);
        EXPECT(gbc.readMem(0xe619), 0x90);
        // CB 90 00AF
        gbc.setState(0x866, 0x91f7, 0xf5f0, 0x53b4, 0xfb71, 0x3f3f, 0x0, 0x0);
        gbc.writeMem(0x866, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x91f7);
        EXPECT(gbc.pc(), 0x868);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00B0
        gbc.setState(0x3f7c, 0x190b, 0xce50, 0xc4c8, 0x4055, 0xce7e, 0x1, 0x0);
        gbc.writeMem(0x3f7c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x190b);
        EXPECT(gbc.pc(), 0x3f7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00B1
        gbc.setState(0x7874, 0xd0a3, 0x3460, 0x7c46, 0xd989, 0x2e5f, 0x1, 0x1);
        gbc.writeMem(0x7874, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd0a3);
        EXPECT(gbc.pc(), 0x7876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00B2
        gbc.setState(0x887f, 0xc3a7, 0x30c0, 0xbd8f, 0x9cac, 0x2988, 0x0, 0x1);
        gbc.writeMem(0x887f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc3a7);
        EXPECT(gbc.pc(), 0x8881);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887f), 0xcb);
        EXPECT(gbc.readMem(0x8880), 0x90);
        // CB 90 00B3
        gbc.setState(0x6aa3, 0x37d2, 0x2d70, 0xa04b, 0x1455, 0xf718, 0x0, 0x0);
        gbc.writeMem(0x6aa3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x37d2);
        EXPECT(gbc.pc(), 0x6aa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00B4
        gbc.setState(0x375e, 0xbe46, 0x67e0, 0x764c, 0xb615, 0xef81, 0x1, 0x1);
        gbc.writeMem(0x375e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbe46);
        EXPECT(gbc.pc(), 0x3760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00B5
        gbc.setState(0x84bf, 0x3f0b, 0xd1f0, 0xf2, 0x445e, 0x113b, 0x0, 0x0);
        gbc.writeMem(0x84bf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3f0b);
        EXPECT(gbc.pc(), 0x84c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bf), 0xcb);
        EXPECT(gbc.readMem(0x84c0), 0x90);
        // CB 90 00B6
        gbc.setState(0x6e77, 0xf031, 0x4320, 0x62a, 0x62b9, 0xd6a5, 0x1, 0x1);
        gbc.writeMem(0x6e77, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf031);
        EXPECT(gbc.pc(), 0x6e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00B7
        gbc.setState(0x1a10, 0x4a2, 0x5e70, 0x538b, 0x6d8, 0x7785, 0x0, 0x0);
        gbc.writeMem(0x1a10, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4a2);
        EXPECT(gbc.pc(), 0x1a12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00B8
        gbc.setState(0x5adf, 0x996e, 0x8880, 0x5bee, 0x1276, 0xb87f, 0x1, 0x0);
        gbc.writeMem(0x5adf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x996e);
        EXPECT(gbc.pc(), 0x5ae1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00B9
        gbc.setState(0x5e7b, 0xff4e, 0xc4b0, 0x1927, 0x52fa, 0xdf03, 0x0, 0x0);
        gbc.writeMem(0x5e7b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xff4e);
        EXPECT(gbc.pc(), 0x5e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00BA
        gbc.setState(0x9c1, 0x397e, 0xcf0, 0x3e36, 0xaf6c, 0x40a1, 0x1, 0x1);
        gbc.writeMem(0x9c1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x397e);
        EXPECT(gbc.pc(), 0x9c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00BB
        gbc.setState(0xedaf, 0x1c1a, 0x1fb0, 0x9aec, 0xda97, 0x4cb4, 0x1, 0x0);
        gbc.writeMem(0xedaf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1c1a);
        EXPECT(gbc.pc(), 0xedb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedaf), 0xcb);
        EXPECT(gbc.readMem(0xedb0), 0x90);
        // CB 90 00BC
        gbc.setState(0x5c9f, 0x4447, 0x4c10, 0xdb58, 0xdabf, 0xdd89, 0x1, 0x1);
        gbc.writeMem(0x5c9f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4447);
        EXPECT(gbc.pc(), 0x5ca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00BD
        gbc.setState(0x7557, 0xd10, 0xdc40, 0xf402, 0x2f13, 0x1db1, 0x1, 0x0);
        gbc.writeMem(0x7557, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd10);
        EXPECT(gbc.pc(), 0x7559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00BE
        gbc.setState(0x9924, 0x1525, 0xe580, 0xec8a, 0xa785, 0x85c5, 0x1, 0x1);
        gbc.writeMem(0x9924, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1525);
        EXPECT(gbc.pc(), 0x9926);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9924), 0xcb);
        EXPECT(gbc.readMem(0x9925), 0x90);
        // CB 90 00C0
        gbc.setState(0xed0a, 0x7697, 0x8cb0, 0x82c7, 0xd4e7, 0x2ee8, 0x0, 0x0);
        gbc.writeMem(0xed0a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7697);
        EXPECT(gbc.pc(), 0xed0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0a), 0xcb);
        EXPECT(gbc.readMem(0xed0b), 0x90);
        // CB 90 00C1
        gbc.setState(0x644d, 0x7977, 0x3220, 0xe022, 0x9ee2, 0x5281, 0x0, 0x1);
        gbc.writeMem(0x644d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x7977);
        EXPECT(gbc.pc(), 0x644f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00C2
        gbc.setState(0xb822, 0x38d1, 0xf150, 0xe2bd, 0xfe50, 0x7d93, 0x1, 0x1);
        gbc.writeMem(0xb822, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x38d1);
        EXPECT(gbc.pc(), 0xb824);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb822), 0xcb);
        EXPECT(gbc.readMem(0xb823), 0x90);
        // CB 90 00C3
        gbc.setState(0x9cc2, 0x5fa1, 0x95a0, 0x228f, 0x18bf, 0x81ce, 0x0, 0x0);
        gbc.writeMem(0x9cc2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5fa1);
        EXPECT(gbc.pc(), 0x9cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cc2), 0xcb);
        EXPECT(gbc.readMem(0x9cc3), 0x90);
        // CB 90 00C4
        gbc.setState(0x7de6, 0x3c0f, 0xe1f0, 0x16a0, 0xc93b, 0x83eb, 0x0, 0x0);
        gbc.writeMem(0x7de6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3c0f);
        EXPECT(gbc.pc(), 0x7de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00C5
        gbc.setState(0x4e9, 0x2881, 0x2e50, 0x61a9, 0x6524, 0xfa45, 0x1, 0x0);
        gbc.writeMem(0x4e9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2881);
        EXPECT(gbc.pc(), 0x4eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00C6
        gbc.setState(0xde3f, 0xcdaf, 0xd740, 0xc860, 0xc571, 0xa04d, 0x1, 0x0);
        gbc.writeMem(0xde3f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcdaf);
        EXPECT(gbc.pc(), 0xde41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde3f), 0xcb);
        EXPECT(gbc.readMem(0xde40), 0x90);
        // CB 90 00C7
        gbc.setState(0x6833, 0x65c6, 0x15b0, 0x2209, 0x5ca6, 0x1813, 0x0, 0x1);
        gbc.writeMem(0x6833, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x65c6);
        EXPECT(gbc.pc(), 0x6835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00C8
        gbc.setState(0xd545, 0xba57, 0xb830, 0x54f2, 0x28f0, 0xaa29, 0x0, 0x0);
        gbc.writeMem(0xd545, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xba57);
        EXPECT(gbc.pc(), 0xd547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd545), 0xcb);
        EXPECT(gbc.readMem(0xd546), 0x90);
        // CB 90 00C9
        gbc.setState(0xe935, 0x62ee, 0xdd40, 0x3f9, 0x599a, 0xe32f, 0x0, 0x0);
        gbc.writeMem(0xe935, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x62ee);
        EXPECT(gbc.pc(), 0xe937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe935), 0xcb);
        EXPECT(gbc.readMem(0xe936), 0x90);
        // CB 90 00CA
        gbc.setState(0xafca, 0x1f7f, 0x1220, 0x506f, 0x9f20, 0x7c43, 0x0, 0x1);
        gbc.writeMem(0xafca, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1f7f);
        EXPECT(gbc.pc(), 0xafcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafca), 0xcb);
        EXPECT(gbc.readMem(0xafcb), 0x90);
        // CB 90 00CB
        gbc.setState(0xe216, 0xab1e, 0x16c0, 0x9bd8, 0x5b4d, 0xef19, 0x1, 0x0);
        gbc.writeMem(0xe216, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xab1e);
        EXPECT(gbc.pc(), 0xe218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe216), 0xcb);
        EXPECT(gbc.readMem(0xe217), 0x90);
        // CB 90 00CC
        gbc.setState(0x66c5, 0x9c61, 0xb7f0, 0x9bba, 0xbc22, 0x7825, 0x0, 0x1);
        gbc.writeMem(0x66c5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x9c61);
        EXPECT(gbc.pc(), 0x66c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00CD
        gbc.setState(0x753b, 0xea6a, 0xd590, 0x9f59, 0x9edd, 0xce5e, 0x0, 0x1);
        gbc.writeMem(0x753b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xea6a);
        EXPECT(gbc.pc(), 0x753d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00CE
        gbc.setState(0xed6a, 0x25f0, 0xac30, 0xe77b, 0x8829, 0xcc1b, 0x0, 0x0);
        gbc.writeMem(0xed6a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x25f0);
        EXPECT(gbc.pc(), 0xed6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed6a), 0xcb);
        EXPECT(gbc.readMem(0xed6b), 0x90);
        // CB 90 00CF
        gbc.setState(0xc05, 0x534c, 0xc870, 0xa921, 0xd487, 0x3cad, 0x1, 0x0);
        gbc.writeMem(0xc05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x534c);
        EXPECT(gbc.pc(), 0xc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00D0
        gbc.setState(0x7951, 0x1a0f, 0x81b0, 0x218, 0x3e3, 0xa505, 0x1, 0x1);
        gbc.writeMem(0x7951, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1a0f);
        EXPECT(gbc.pc(), 0x7953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00D1
        gbc.setState(0x405a, 0x70cc, 0xe380, 0x606b, 0x2096, 0x2e29, 0x1, 0x0);
        gbc.writeMem(0x405a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x70cc);
        EXPECT(gbc.pc(), 0x405c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00D2
        gbc.setState(0x9694, 0xf663, 0x7920, 0x6b4b, 0x6a57, 0xe5ff, 0x1, 0x0);
        gbc.writeMem(0x9694, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf663);
        EXPECT(gbc.pc(), 0x9696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9694), 0xcb);
        EXPECT(gbc.readMem(0x9695), 0x90);
        // CB 90 00D3
        gbc.setState(0xcbb4, 0xefef, 0xb8c0, 0x80f1, 0x4e2e, 0xef8d, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xefef);
        EXPECT(gbc.pc(), 0xcbb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb4), 0xcb);
        EXPECT(gbc.readMem(0xcbb5), 0x90);
        // CB 90 00D4
        gbc.setState(0x9714, 0x8293, 0x4c80, 0xbe02, 0xb0ac, 0xaa6, 0x1, 0x0);
        gbc.writeMem(0x9714, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x8293);
        EXPECT(gbc.pc(), 0x9716);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9714), 0xcb);
        EXPECT(gbc.readMem(0x9715), 0x90);
        // CB 90 00D5
        gbc.setState(0x8f9e, 0x1f67, 0x3fa0, 0xc3d8, 0xce39, 0x3b95, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1f67);
        EXPECT(gbc.pc(), 0x8fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9e), 0xcb);
        EXPECT(gbc.readMem(0x8f9f), 0x90);
        // CB 90 00D6
        gbc.setState(0x3857, 0x7bcb, 0x2b0, 0x1f3c, 0x2e03, 0x91aa, 0x1, 0x1);
        gbc.writeMem(0x3857, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7bcb);
        EXPECT(gbc.pc(), 0x3859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00D7
        gbc.setState(0x9b73, 0x497b, 0x9650, 0x9a9, 0x7389, 0xa9ea, 0x0, 0x1);
        gbc.writeMem(0x9b73, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x497b);
        EXPECT(gbc.pc(), 0x9b75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b73), 0xcb);
        EXPECT(gbc.readMem(0x9b74), 0x90);
        // CB 90 00D8
        gbc.setState(0x49d0, 0x433f, 0xa070, 0x7da, 0x5fd9, 0xa90e, 0x0, 0x0);
        gbc.writeMem(0x49d0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x433f);
        EXPECT(gbc.pc(), 0x49d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00D9
        gbc.setState(0x16cb, 0x13ba, 0x5490, 0x7a3e, 0x31bf, 0x886b, 0x0, 0x1);
        gbc.writeMem(0x16cb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x13ba);
        EXPECT(gbc.pc(), 0x16cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00DA
        gbc.setState(0x8efc, 0xb1ad, 0xa910, 0xaae9, 0xd936, 0xad6d, 0x0, 0x1);
        gbc.writeMem(0x8efc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb1ad);
        EXPECT(gbc.pc(), 0x8efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efc), 0xcb);
        EXPECT(gbc.readMem(0x8efd), 0x90);
        // CB 90 00DC
        gbc.setState(0x37a3, 0x429d, 0xb9f0, 0xb80d, 0xf214, 0xbfb8, 0x1, 0x1);
        gbc.writeMem(0x37a3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x37a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00DD
        gbc.setState(0x459b, 0xe007, 0xa050, 0xaf9c, 0xbb40, 0x87b4, 0x1, 0x1);
        gbc.writeMem(0x459b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe007);
        EXPECT(gbc.pc(), 0x459d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00DE
        gbc.setState(0xbbc7, 0xd893, 0xa6e0, 0xbd14, 0xea14, 0xd4ff, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xd893);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc7), 0xcb);
        EXPECT(gbc.readMem(0xbbc8), 0x90);
        // CB 90 00DF
        gbc.setState(0x9b74, 0x6274, 0x3f00, 0xb44f, 0xdbac, 0xcf46, 0x0, 0x0);
        gbc.writeMem(0x9b74, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x6274);
        EXPECT(gbc.pc(), 0x9b76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b74), 0xcb);
        EXPECT(gbc.readMem(0x9b75), 0x90);
        // CB 90 00E0
        gbc.setState(0x7dd4, 0x8137, 0x5da0, 0xe640, 0x5c50, 0xdb69, 0x1, 0x0);
        gbc.writeMem(0x7dd4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8137);
        EXPECT(gbc.pc(), 0x7dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00E2
        gbc.setState(0x930f, 0xceff, 0x5050, 0xf4c1, 0x7407, 0x1c9a, 0x0, 0x0);
        gbc.writeMem(0x930f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xceff);
        EXPECT(gbc.pc(), 0x9311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x930f), 0xcb);
        EXPECT(gbc.readMem(0x9310), 0x90);
        // CB 90 00E3
        gbc.setState(0x35fc, 0x834d, 0xe10, 0x2f95, 0x4326, 0xf2fb, 0x0, 0x1);
        gbc.writeMem(0x35fc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x834d);
        EXPECT(gbc.pc(), 0x35fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00E4
        gbc.setState(0x23f4, 0xe4a5, 0xbf60, 0x2881, 0xac88, 0xa3c, 0x0, 0x0);
        gbc.writeMem(0x23f4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe4a5);
        EXPECT(gbc.pc(), 0x23f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00E5
        gbc.setState(0x9436, 0xc238, 0xbaf0, 0xfd27, 0x2814, 0xe6c8, 0x0, 0x0);
        gbc.writeMem(0x9436, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc238);
        EXPECT(gbc.pc(), 0x9438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9436), 0xcb);
        EXPECT(gbc.readMem(0x9437), 0x90);
        // CB 90 00E6
        gbc.setState(0x7cfc, 0x1f43, 0x31e0, 0xe2d9, 0xa9e9, 0x5997, 0x1, 0x0);
        gbc.writeMem(0x7cfc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1f43);
        EXPECT(gbc.pc(), 0x7cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00E8
        gbc.setState(0x8bce, 0x65a5, 0x9d0, 0xddbe, 0xcf95, 0xec64, 0x1, 0x0);
        gbc.writeMem(0x8bce, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x65a5);
        EXPECT(gbc.pc(), 0x8bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bce), 0xcb);
        EXPECT(gbc.readMem(0x8bcf), 0x90);
        // CB 90 00E9
        gbc.setState(0xc315, 0xbe61, 0x55e0, 0x286c, 0x5a57, 0x196b, 0x1, 0x0);
        gbc.writeMem(0xc315, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbe61);
        EXPECT(gbc.pc(), 0xc317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc315), 0xcb);
        EXPECT(gbc.readMem(0xc316), 0x90);
        // CB 90 00EA
        gbc.setState(0xecf7, 0x762b, 0xe540, 0x774c, 0x8ea4, 0x3cbb, 0x1, 0x1);
        gbc.writeMem(0xecf7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x762b);
        EXPECT(gbc.pc(), 0xecf9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecf7), 0xcb);
        EXPECT(gbc.readMem(0xecf8), 0x90);
        // CB 90 00EB
        gbc.setState(0x5b0f, 0x56f1, 0xd370, 0xdad4, 0x4634, 0xaf81, 0x1, 0x1);
        gbc.writeMem(0x5b0f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x56f1);
        EXPECT(gbc.pc(), 0x5b11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00EC
        gbc.setState(0xebfd, 0xa30e, 0x8a30, 0xb61a, 0x447c, 0x3afa, 0x0, 0x1);
        gbc.writeMem(0xebfd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa30e);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfd), 0xcb);
        EXPECT(gbc.readMem(0xebfe), 0x90);
        // CB 90 00ED
        gbc.setState(0x61b, 0xc411, 0xc0e0, 0xe0ee, 0x6bb3, 0x365a, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc411);
        EXPECT(gbc.pc(), 0x61d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00EE
        gbc.setState(0x19e7, 0x5556, 0xf4c0, 0x1a08, 0x3099, 0x9c8, 0x0, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5556);
        EXPECT(gbc.pc(), 0x19e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00EF
        gbc.setState(0xe09f, 0xfc8a, 0x7ed0, 0x2798, 0xd4e, 0x4156, 0x0, 0x1);
        gbc.writeMem(0xe09f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfc8a);
        EXPECT(gbc.pc(), 0xe0a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe09f), 0xcb);
        EXPECT(gbc.readMem(0xe0a0), 0x90);
        // CB 90 00F0
        gbc.setState(0x56bd, 0x232c, 0x4990, 0xd05b, 0x4c34, 0x7042, 0x1, 0x0);
        gbc.writeMem(0x56bd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x232c);
        EXPECT(gbc.pc(), 0x56bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00F1
        gbc.setState(0xe38c, 0xf852, 0xd040, 0xf370, 0xa7de, 0xa0b7, 0x1, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf852);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38c), 0xcb);
        EXPECT(gbc.readMem(0xe38d), 0x90);
        // CB 90 00F2
        gbc.setState(0x186d, 0x2a35, 0xacd0, 0x7b8d, 0x6779, 0x43eb, 0x0, 0x1);
        gbc.writeMem(0x186d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2a35);
        EXPECT(gbc.pc(), 0x186f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00F3
        gbc.setState(0x16a9, 0x93c, 0x46c0, 0x69ad, 0xd1be, 0xfb4e, 0x1, 0x1);
        gbc.writeMem(0x16a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x93c);
        EXPECT(gbc.pc(), 0x16ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00F4
        gbc.setState(0x53b3, 0xcf3a, 0xa220, 0xbfbc, 0x51b3, 0x5e22, 0x0, 0x1);
        gbc.writeMem(0x53b3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcf3a);
        EXPECT(gbc.pc(), 0x53b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00F5
        gbc.setState(0x62db, 0x6cd0, 0x6980, 0x61a8, 0x3837, 0xbdee, 0x1, 0x1);
        gbc.writeMem(0x62db, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6cd0);
        EXPECT(gbc.pc(), 0x62dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00F6
        gbc.setState(0x2fb4, 0x98b5, 0x1460, 0x65cb, 0x9c96, 0x344a, 0x1, 0x0);
        gbc.writeMem(0x2fb4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x98b5);
        EXPECT(gbc.pc(), 0x2fb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00F7
        gbc.setState(0xc591, 0xd7bd, 0x4210, 0xd3e5, 0xf08c, 0xdfb6, 0x0, 0x0);
        gbc.writeMem(0xc591, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd7bd);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc591), 0xcb);
        EXPECT(gbc.readMem(0xc592), 0x90);
        // CB 90 00F8
        gbc.setState(0xd181, 0x292, 0xba80, 0x909f, 0xb621, 0xa8dd, 0x0, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x292);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0x90);
        // CB 90 00F9
        gbc.setState(0x654c, 0x6da7, 0x44e0, 0xdb07, 0xc0a6, 0x3d58, 0x1, 0x0);
        gbc.writeMem(0x654c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6da7);
        EXPECT(gbc.pc(), 0x654e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 00FA
        gbc.setState(0x1a91, 0x1bac, 0xf290, 0x51ed, 0x6e27, 0x98c3, 0x0, 0x1);
        gbc.writeMem(0x1a91, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x1bac);
        EXPECT(gbc.pc(), 0x1a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00FB
        gbc.setState(0xe7dc, 0x776a, 0xfa70, 0xc2c0, 0x3506, 0x6ff, 0x1, 0x0);
        gbc.writeMem(0xe7dc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x776a);
        EXPECT(gbc.pc(), 0xe7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7dc), 0xcb);
        EXPECT(gbc.readMem(0xe7dd), 0x90);
        // CB 90 00FC
        gbc.setState(0x3837, 0xe3d1, 0x9cb0, 0xe9a7, 0x8c22, 0xc2fc, 0x1, 0x1);
        gbc.writeMem(0x3837, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe3d1);
        EXPECT(gbc.pc(), 0x3839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00FD
        gbc.setState(0x6360, 0xb478, 0x26d0, 0x40ff, 0xc403, 0xd3f0, 0x1, 0x1);
        gbc.writeMem(0x6360, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb478);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00FE
        gbc.setState(0x5796, 0x90e0, 0x2770, 0x4902, 0xccef, 0x3f06, 0x1, 0x1);
        gbc.writeMem(0x5796, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x90e0);
        EXPECT(gbc.pc(), 0x5798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 00FF
        gbc.setState(0xcc66, 0xc441, 0x8040, 0xed6d, 0xcef6, 0x53d2, 0x1, 0x0);
        gbc.writeMem(0xcc66, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc441);
        EXPECT(gbc.pc(), 0xcc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc66), 0xcb);
        EXPECT(gbc.readMem(0xcc67), 0x90);
        // CB 90 0100
        gbc.setState(0x12a5, 0x8a02, 0xd580, 0x5e57, 0x419d, 0xc64a, 0x0, 0x0);
        gbc.writeMem(0x12a5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x8a02);
        EXPECT(gbc.pc(), 0x12a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0101
        gbc.setState(0x9247, 0x78ec, 0xc3b0, 0x303d, 0xbbed, 0xa734, 0x1, 0x0);
        gbc.writeMem(0x9247, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x78ec);
        EXPECT(gbc.pc(), 0x9249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9247), 0xcb);
        EXPECT(gbc.readMem(0x9248), 0x90);
        // CB 90 0102
        gbc.setState(0x2a1e, 0xa04e, 0x8b60, 0x62be, 0xf7d0, 0x9cda, 0x1, 0x0);
        gbc.writeMem(0x2a1e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa04e);
        EXPECT(gbc.pc(), 0x2a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0103
        gbc.setState(0xd2f3, 0xe1ad, 0x1b90, 0x40b6, 0xc0f0, 0xcdfd, 0x0, 0x1);
        gbc.writeMem(0xd2f3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe1ad);
        EXPECT(gbc.pc(), 0xd2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f3), 0xcb);
        EXPECT(gbc.readMem(0xd2f4), 0x90);
        // CB 90 0104
        gbc.setState(0xc535, 0xef4a, 0x360, 0x6342, 0xb4a6, 0x1949, 0x1, 0x0);
        gbc.writeMem(0xc535, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xef4a);
        EXPECT(gbc.pc(), 0xc537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc535), 0xcb);
        EXPECT(gbc.readMem(0xc536), 0x90);
        // CB 90 0105
        gbc.setState(0x557e, 0x754f, 0x4150, 0x9e0f, 0xb791, 0xe2ad, 0x0, 0x0);
        gbc.writeMem(0x557e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x754f);
        EXPECT(gbc.pc(), 0x5580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0106
        gbc.setState(0xb289, 0xe677, 0x6cb0, 0x6605, 0x7b8e, 0xcafe, 0x0, 0x1);
        gbc.writeMem(0xb289, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe677);
        EXPECT(gbc.pc(), 0xb28b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb289), 0xcb);
        EXPECT(gbc.readMem(0xb28a), 0x90);
        // CB 90 0107
        gbc.setState(0x419e, 0x59d8, 0x4bf0, 0x4552, 0x8e3f, 0x3e59, 0x0, 0x1);
        gbc.writeMem(0x419e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x59d8);
        EXPECT(gbc.pc(), 0x41a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0108
        gbc.setState(0xdeff, 0x20e1, 0xdf20, 0x727c, 0xf1a2, 0x2782, 0x0, 0x1);
        gbc.writeMem(0xdeff, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0xdf01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeff), 0xcb);
        EXPECT(gbc.readMem(0xdf00), 0x90);
        // CB 90 0109
        gbc.setState(0xb723, 0x7511, 0x3840, 0xd5b7, 0xd2bd, 0xd14a, 0x1, 0x1);
        gbc.writeMem(0xb723, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0xb725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb723), 0xcb);
        EXPECT(gbc.readMem(0xb724), 0x90);
        // CB 90 010A
        gbc.setState(0x4b4d, 0x2c3, 0xc240, 0x1606, 0xf7db, 0x22ee, 0x1, 0x0);
        gbc.writeMem(0x4b4d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2c3);
        EXPECT(gbc.pc(), 0x4b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 010B
        gbc.setState(0x3591, 0xebb4, 0xe260, 0xecc1, 0xac79, 0x5f14, 0x0, 0x1);
        gbc.writeMem(0x3591, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xebb4);
        EXPECT(gbc.pc(), 0x3593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 010C
        gbc.setState(0x351e, 0x87d7, 0x7d10, 0x9b47, 0xa96d, 0x1536, 0x1, 0x1);
        gbc.writeMem(0x351e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x87d7);
        EXPECT(gbc.pc(), 0x3520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 010E
        gbc.setState(0x921f, 0xeb89, 0x8840, 0xb4c6, 0xe48, 0xd532, 0x0, 0x0);
        gbc.writeMem(0x921f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xeb89);
        EXPECT(gbc.pc(), 0x9221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x921f), 0xcb);
        EXPECT(gbc.readMem(0x9220), 0x90);
        // CB 90 0110
        gbc.setState(0xea7b, 0xb5d6, 0xda70, 0x48e6, 0xdaab, 0x48fc, 0x0, 0x0);
        gbc.writeMem(0xea7b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb5d6);
        EXPECT(gbc.pc(), 0xea7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7b), 0xcb);
        EXPECT(gbc.readMem(0xea7c), 0x90);
        // CB 90 0111
        gbc.setState(0x442f, 0x4e97, 0xfd80, 0x2c0b, 0xa231, 0x7bc3, 0x1, 0x1);
        gbc.writeMem(0x442f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4e97);
        EXPECT(gbc.pc(), 0x4431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0112
        gbc.setState(0xf84, 0x57c7, 0x5940, 0x46c3, 0x5799, 0x6955, 0x0, 0x0);
        gbc.writeMem(0xf84, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x57c7);
        EXPECT(gbc.pc(), 0xf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0113
        gbc.setState(0x6d59, 0x7f0f, 0x8780, 0xccc2, 0x18f8, 0xccd0, 0x1, 0x1);
        gbc.writeMem(0x6d59, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7f0f);
        EXPECT(gbc.pc(), 0x6d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0114
        gbc.setState(0xa445, 0xdde3, 0x40f0, 0x3a2, 0xa934, 0x3ffd, 0x1, 0x1);
        gbc.writeMem(0xa445, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xdde3);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa445), 0xcb);
        EXPECT(gbc.readMem(0xa446), 0x90);
        // CB 90 0115
        gbc.setState(0x2b4, 0x6dc6, 0x2990, 0xa6ac, 0x1c82, 0xec26, 0x1, 0x0);
        gbc.writeMem(0x2b4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6dc6);
        EXPECT(gbc.pc(), 0x2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0116
        gbc.setState(0x263d, 0xa3ff, 0x38b0, 0xd6b8, 0x95a6, 0x5b99, 0x1, 0x1);
        gbc.writeMem(0x263d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa3ff);
        EXPECT(gbc.pc(), 0x263f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0118
        gbc.setState(0x6504, 0xa90f, 0xd760, 0xf5d2, 0xe55e, 0x6270, 0x0, 0x1);
        gbc.writeMem(0x6504, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa90f);
        EXPECT(gbc.pc(), 0x6506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0119
        gbc.setState(0xeb48, 0xa69, 0xc280, 0xcd26, 0x2a03, 0x345, 0x1, 0x1);
        gbc.writeMem(0xeb48, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa69);
        EXPECT(gbc.pc(), 0xeb4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb48), 0xcb);
        EXPECT(gbc.readMem(0xeb49), 0x90);
        // CB 90 011A
        gbc.setState(0x4b98, 0xcf5b, 0xf7b0, 0xcc30, 0x65e, 0xc691, 0x0, 0x0);
        gbc.writeMem(0x4b98, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcf5b);
        EXPECT(gbc.pc(), 0x4b9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 011B
        gbc.setState(0x80e, 0xdb40, 0x6a20, 0xc7d7, 0xd6f0, 0x1aaf, 0x1, 0x1);
        gbc.writeMem(0x80e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xdb40);
        EXPECT(gbc.pc(), 0x810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 011C
        gbc.setState(0x89f5, 0xfe76, 0x7820, 0x8f8d, 0x736, 0xa7ed, 0x1, 0x1);
        gbc.writeMem(0x89f5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xfe76);
        EXPECT(gbc.pc(), 0x89f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f5), 0xcb);
        EXPECT(gbc.readMem(0x89f6), 0x90);
        // CB 90 011D
        gbc.setState(0x2b23, 0xd9f9, 0xace0, 0x5ebb, 0xa03e, 0xad67, 0x1, 0x0);
        gbc.writeMem(0x2b23, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd9f9);
        EXPECT(gbc.pc(), 0x2b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 011F
        gbc.setState(0x1bed, 0xb2a5, 0x54e0, 0xf6cd, 0x12c0, 0xeede, 0x0, 0x1);
        gbc.writeMem(0x1bed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb2a5);
        EXPECT(gbc.pc(), 0x1bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0120
        gbc.setState(0x7f28, 0xa1b6, 0xde20, 0x74e8, 0x65a5, 0x1336, 0x1, 0x1);
        gbc.writeMem(0x7f28, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa1b6);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0121
        gbc.setState(0x8814, 0x2cbe, 0x68f0, 0xaa28, 0x27a1, 0x68c3, 0x0, 0x0);
        gbc.writeMem(0x8814, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x8816);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8814), 0xcb);
        EXPECT(gbc.readMem(0x8815), 0x90);
        // CB 90 0122
        gbc.setState(0x80b1, 0x34c5, 0xd440, 0x368c, 0x1122, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0x80b1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x34c5);
        EXPECT(gbc.pc(), 0x80b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80b1), 0xcb);
        EXPECT(gbc.readMem(0x80b2), 0x90);
        // CB 90 0123
        gbc.setState(0xa306, 0xc513, 0x70a0, 0xe7a6, 0xd596, 0x3c2b, 0x0, 0x0);
        gbc.writeMem(0xa306, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc513);
        EXPECT(gbc.pc(), 0xa308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa306), 0xcb);
        EXPECT(gbc.readMem(0xa307), 0x90);
        // CB 90 0124
        gbc.setState(0xc51c, 0x6e8e, 0x71c0, 0xab46, 0xcccd, 0x5a2e, 0x1, 0x1);
        gbc.writeMem(0xc51c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6e8e);
        EXPECT(gbc.pc(), 0xc51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc51c), 0xcb);
        EXPECT(gbc.readMem(0xc51d), 0x90);
        // CB 90 0125
        gbc.setState(0x7078, 0x2c4c, 0xcce0, 0xe408, 0x6dda, 0x1077, 0x0, 0x0);
        gbc.writeMem(0x7078, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2c4c);
        EXPECT(gbc.pc(), 0x707a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0126
        gbc.setState(0xb8c2, 0x16cc, 0x77c0, 0x34e1, 0x591d, 0xec7e, 0x0, 0x1);
        gbc.writeMem(0xb8c2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x16cc);
        EXPECT(gbc.pc(), 0xb8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8c2), 0xcb);
        EXPECT(gbc.readMem(0xb8c3), 0x90);
        // CB 90 0127
        gbc.setState(0x14a9, 0x10ee, 0x6c60, 0xda75, 0x7581, 0x6900, 0x1, 0x0);
        gbc.writeMem(0x14a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x10ee);
        EXPECT(gbc.pc(), 0x14ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0128
        gbc.setState(0x1de6, 0x2ef1, 0xff10, 0x3a3b, 0x6e99, 0xd445, 0x1, 0x1);
        gbc.writeMem(0x1de6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2ef1);
        EXPECT(gbc.pc(), 0x1de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0129
        gbc.setState(0x24f8, 0x4b5, 0xa3b0, 0x14, 0x6f75, 0x5f71, 0x1, 0x0);
        gbc.writeMem(0x24f8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x4b5);
        EXPECT(gbc.pc(), 0x24fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 012A
        gbc.setState(0xccc3, 0x1c06, 0xef70, 0x358f, 0xb302, 0x7c13, 0x1, 0x0);
        gbc.writeMem(0xccc3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1c06);
        EXPECT(gbc.pc(), 0xccc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc3), 0xcb);
        EXPECT(gbc.readMem(0xccc4), 0x90);
        // CB 90 012B
        gbc.setState(0xbc6a, 0x758c, 0x57f0, 0xebd0, 0xa068, 0x296a, 0x1, 0x1);
        gbc.writeMem(0xbc6a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x758c);
        EXPECT(gbc.pc(), 0xbc6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6a), 0xcb);
        EXPECT(gbc.readMem(0xbc6b), 0x90);
        // CB 90 012C
        gbc.setState(0x2c81, 0xbb9b, 0x3120, 0x4fc8, 0x9a1a, 0xfc6e, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbb9b);
        EXPECT(gbc.pc(), 0x2c83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 012D
        gbc.setState(0x2fed, 0x5382, 0x2dc0, 0xdc03, 0xeca6, 0xab65, 0x1, 0x1);
        gbc.writeMem(0x2fed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5382);
        EXPECT(gbc.pc(), 0x2fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 012E
        gbc.setState(0x778e, 0x8292, 0xe6d0, 0x5489, 0xcb80, 0xefdf, 0x1, 0x1);
        gbc.writeMem(0x778e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8292);
        EXPECT(gbc.pc(), 0x7790);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 012F
        gbc.setState(0x6788, 0x50e3, 0xce0, 0x758e, 0x2a00, 0xc994, 0x0, 0x1);
        gbc.writeMem(0x6788, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x50e3);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0130
        gbc.setState(0xc8b5, 0xb264, 0x370, 0x402f, 0xc12a, 0x8a6a, 0x0, 0x0);
        gbc.writeMem(0xc8b5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb264);
        EXPECT(gbc.pc(), 0xc8b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b5), 0xcb);
        EXPECT(gbc.readMem(0xc8b6), 0x90);
        // CB 90 0131
        gbc.setState(0x7f18, 0xf69f, 0xbd80, 0xa58a, 0x47bc, 0x8c8e, 0x1, 0x1);
        gbc.writeMem(0x7f18, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf69f);
        EXPECT(gbc.pc(), 0x7f1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0132
        gbc.setState(0x3cb8, 0x6ccc, 0x1480, 0x6854, 0x1f06, 0x9e21, 0x1, 0x1);
        gbc.writeMem(0x3cb8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6ccc);
        EXPECT(gbc.pc(), 0x3cba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0133
        gbc.setState(0xd56a, 0xf7ab, 0x4a0, 0xc5ec, 0xfee8, 0x5250, 0x1, 0x1);
        gbc.writeMem(0xd56a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf7ab);
        EXPECT(gbc.pc(), 0xd56c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56a), 0xcb);
        EXPECT(gbc.readMem(0xd56b), 0x90);
        // CB 90 0134
        gbc.setState(0xc572, 0xc5da, 0x9740, 0x468, 0x5616, 0xe56e, 0x1, 0x1);
        gbc.writeMem(0xc572, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc5da);
        EXPECT(gbc.pc(), 0xc574);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc572), 0xcb);
        EXPECT(gbc.readMem(0xc573), 0x90);
        // CB 90 0136
        gbc.setState(0x910c, 0x9ae, 0x5070, 0x15f0, 0xc7f0, 0x33d3, 0x1, 0x0);
        gbc.writeMem(0x910c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9ae);
        EXPECT(gbc.pc(), 0x910e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910c), 0xcb);
        EXPECT(gbc.readMem(0x910d), 0x90);
        // CB 90 0137
        gbc.setState(0x8967, 0x14e8, 0x9e90, 0x3c7d, 0xd276, 0xc789, 0x0, 0x0);
        gbc.writeMem(0x8967, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x14e8);
        EXPECT(gbc.pc(), 0x8969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8967), 0xcb);
        EXPECT(gbc.readMem(0x8968), 0x90);
        // CB 90 0138
        gbc.setState(0xe5bb, 0x13cd, 0xd530, 0xd521, 0x475e, 0x47b8, 0x0, 0x0);
        gbc.writeMem(0xe5bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x13cd);
        EXPECT(gbc.pc(), 0xe5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5bb), 0xcb);
        EXPECT(gbc.readMem(0xe5bc), 0x90);
        // CB 90 0139
        gbc.setState(0xcceb, 0x9416, 0xac60, 0x845f, 0xe9ea, 0x6d90, 0x1, 0x1);
        gbc.writeMem(0xcceb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9416);
        EXPECT(gbc.pc(), 0xcced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcceb), 0xcb);
        EXPECT(gbc.readMem(0xccec), 0x90);
        // CB 90 013A
        gbc.setState(0x26c1, 0xb95, 0x4610, 0x3992, 0x3be8, 0xe40, 0x0, 0x0);
        gbc.writeMem(0x26c1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb95);
        EXPECT(gbc.pc(), 0x26c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 013B
        gbc.setState(0x6373, 0x412e, 0x4a00, 0x90c0, 0x1c81, 0x5a92, 0x1, 0x1);
        gbc.writeMem(0x6373, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x412e);
        EXPECT(gbc.pc(), 0x6375);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 013C
        gbc.setState(0xc756, 0xae5f, 0x5c10, 0x9a99, 0xd94, 0x9747, 0x0, 0x1);
        gbc.writeMem(0xc756, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xae5f);
        EXPECT(gbc.pc(), 0xc758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc756), 0xcb);
        EXPECT(gbc.readMem(0xc757), 0x90);
        // CB 90 013D
        gbc.setState(0x3e62, 0xf790, 0xb9a0, 0xadd0, 0x4809, 0xc906, 0x1, 0x0);
        gbc.writeMem(0x3e62, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf790);
        EXPECT(gbc.pc(), 0x3e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 013E
        gbc.setState(0x2e75, 0x54f6, 0x7cb0, 0x4511, 0x13b1, 0xe054, 0x0, 0x0);
        gbc.writeMem(0x2e75, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x54f6);
        EXPECT(gbc.pc(), 0x2e77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 013F
        gbc.setState(0x8f7e, 0xf694, 0xa930, 0xdc56, 0x38f2, 0xd3b6, 0x0, 0x0);
        gbc.writeMem(0x8f7e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf694);
        EXPECT(gbc.pc(), 0x8f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f7e), 0xcb);
        EXPECT(gbc.readMem(0x8f7f), 0x90);
        // CB 90 0140
        gbc.setState(0x4141, 0x9069, 0xf0e0, 0xece0, 0xd141, 0xdf6c, 0x0, 0x1);
        gbc.writeMem(0x4141, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9069);
        EXPECT(gbc.pc(), 0x4143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0141
        gbc.setState(0x69ea, 0xb72, 0x15b0, 0xada6, 0x7a0c, 0x31bf, 0x1, 0x1);
        gbc.writeMem(0x69ea, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb72);
        EXPECT(gbc.pc(), 0x69ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0142
        gbc.setState(0x8908, 0x8be3, 0xbea0, 0x94b1, 0x17f6, 0x3215, 0x0, 0x0);
        gbc.writeMem(0x8908, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8be3);
        EXPECT(gbc.pc(), 0x890a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8908), 0xcb);
        EXPECT(gbc.readMem(0x8909), 0x90);
        // CB 90 0143
        gbc.setState(0xd8a0, 0xea57, 0xb2a0, 0x8174, 0x7de0, 0xa9cc, 0x0, 0x0);
        gbc.writeMem(0xd8a0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xea57);
        EXPECT(gbc.pc(), 0xd8a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a0), 0xcb);
        EXPECT(gbc.readMem(0xd8a1), 0x90);
        // CB 90 0144
        gbc.setState(0x2509, 0xed98, 0x18a0, 0xac4c, 0x6b77, 0x7f6b, 0x1, 0x0);
        gbc.writeMem(0x2509, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xed98);
        EXPECT(gbc.pc(), 0x250b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0145
        gbc.setState(0x2afa, 0xb9d7, 0x4c0, 0xdbfe, 0xe79a, 0x946c, 0x0, 0x0);
        gbc.writeMem(0x2afa, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb9d7);
        EXPECT(gbc.pc(), 0x2afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0146
        gbc.setState(0x8c0c, 0x2c23, 0x560, 0xbc05, 0xf088, 0x32d1, 0x0, 0x1);
        gbc.writeMem(0x8c0c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2c23);
        EXPECT(gbc.pc(), 0x8c0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c0c), 0xcb);
        EXPECT(gbc.readMem(0x8c0d), 0x90);
        // CB 90 0147
        gbc.setState(0x6ff6, 0x6016, 0xc80, 0x9948, 0x746f, 0x91c1, 0x1, 0x1);
        gbc.writeMem(0x6ff6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6016);
        EXPECT(gbc.pc(), 0x6ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0149
        gbc.setState(0x162a, 0xa9d6, 0x73d0, 0xedc1, 0xdebf, 0x8940, 0x1, 0x0);
        gbc.writeMem(0x162a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa9d6);
        EXPECT(gbc.pc(), 0x162c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 014A
        gbc.setState(0x4af, 0x9053, 0x3300, 0x99e1, 0x301f, 0xf2ed, 0x1, 0x1);
        gbc.writeMem(0x4af, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9053);
        EXPECT(gbc.pc(), 0x4b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 014B
        gbc.setState(0x298a, 0xb2d1, 0x1a30, 0xec8f, 0xfc2f, 0xe6c1, 0x0, 0x0);
        gbc.writeMem(0x298a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb2d1);
        EXPECT(gbc.pc(), 0x298c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 014C
        gbc.setState(0x45ac, 0xf7ba, 0x9d80, 0x53e3, 0xb154, 0x8913, 0x1, 0x1);
        gbc.writeMem(0x45ac, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf7ba);
        EXPECT(gbc.pc(), 0x45ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 014D
        gbc.setState(0x4a5f, 0xa4a7, 0xcbc0, 0xffb7, 0x94fe, 0x8a35, 0x1, 0x0);
        gbc.writeMem(0x4a5f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa4a7);
        EXPECT(gbc.pc(), 0x4a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 014E
        gbc.setState(0x8ec3, 0x5eef, 0x9610, 0x5271, 0x1fe2, 0xae8d, 0x0, 0x1);
        gbc.writeMem(0x8ec3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5eef);
        EXPECT(gbc.pc(), 0x8ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ec3), 0xcb);
        EXPECT(gbc.readMem(0x8ec4), 0x90);
        // CB 90 014F
        gbc.setState(0x7210, 0x28ee, 0x7870, 0xb4dd, 0x8c45, 0x13eb, 0x1, 0x1);
        gbc.writeMem(0x7210, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x28ee);
        EXPECT(gbc.pc(), 0x7212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0150
        gbc.setState(0x902e, 0xb860, 0x9230, 0x308b, 0x555a, 0x65a1, 0x1, 0x1);
        gbc.writeMem(0x902e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb860);
        EXPECT(gbc.pc(), 0x9030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x902e), 0xcb);
        EXPECT(gbc.readMem(0x902f), 0x90);
        // CB 90 0151
        gbc.setState(0xeb1c, 0x7347, 0x9850, 0x11d7, 0xd3, 0x3a5d, 0x0, 0x0);
        gbc.writeMem(0xeb1c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7347);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0x90);
        // CB 90 0152
        gbc.setState(0xb7bf, 0x506e, 0x4100, 0xda6a, 0x393b, 0x945f, 0x0, 0x0);
        gbc.writeMem(0xb7bf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x506e);
        EXPECT(gbc.pc(), 0xb7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7bf), 0xcb);
        EXPECT(gbc.readMem(0xb7c0), 0x90);
        // CB 90 0153
        gbc.setState(0x428c, 0x8c36, 0x6380, 0x2dc9, 0xf790, 0x7ba, 0x0, 0x0);
        gbc.writeMem(0x428c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8c36);
        EXPECT(gbc.pc(), 0x428e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0154
        gbc.setState(0x7b60, 0x6959, 0x63f0, 0xe2e8, 0x1e6c, 0x44f0, 0x1, 0x1);
        gbc.writeMem(0x7b60, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6959);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0155
        gbc.setState(0x1f9a, 0x90bc, 0xc370, 0x23d5, 0x930a, 0xaa1d, 0x1, 0x1);
        gbc.writeMem(0x1f9a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x90bc);
        EXPECT(gbc.pc(), 0x1f9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0156
        gbc.setState(0xac81, 0x5865, 0x42f0, 0x3884, 0xf2cd, 0xb28b, 0x0, 0x0);
        gbc.writeMem(0xac81, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5865);
        EXPECT(gbc.pc(), 0xac83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac81), 0xcb);
        EXPECT(gbc.readMem(0xac82), 0x90);
        // CB 90 0157
        gbc.setState(0x63d2, 0x87db, 0x6ff0, 0xcf6e, 0xae40, 0x3fa, 0x0, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x87db);
        EXPECT(gbc.pc(), 0x63d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0158
        gbc.setState(0x68a, 0x54bc, 0x7df0, 0xe48a, 0xe500, 0xb7c, 0x0, 0x0);
        gbc.writeMem(0x68a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x54bc);
        EXPECT(gbc.pc(), 0x68c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 015A
        gbc.setState(0xaf8b, 0x613c, 0x1dc0, 0x7530, 0xe4cc, 0xb220, 0x0, 0x1);
        gbc.writeMem(0xaf8b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x613c);
        EXPECT(gbc.pc(), 0xaf8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf8b), 0xcb);
        EXPECT(gbc.readMem(0xaf8c), 0x90);
        // CB 90 015B
        gbc.setState(0x3e4b, 0xe50d, 0x3940, 0x5a4f, 0xaac3, 0xafd, 0x1, 0x0);
        gbc.writeMem(0x3e4b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe50d);
        EXPECT(gbc.pc(), 0x3e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 015C
        gbc.setState(0x3a5f, 0x4332, 0x2b50, 0x3121, 0x8947, 0x2f4f, 0x0, 0x1);
        gbc.writeMem(0x3a5f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4332);
        EXPECT(gbc.pc(), 0x3a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 015D
        gbc.setState(0x18d, 0x7b7b, 0xb40, 0xb7c7, 0xc320, 0xcc4e, 0x0, 0x1);
        gbc.writeMem(0x18d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7b7b);
        EXPECT(gbc.pc(), 0x18f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 015E
        gbc.setState(0x6df3, 0xd5d4, 0x5d50, 0x50d3, 0x231f, 0xaee7, 0x0, 0x0);
        gbc.writeMem(0x6df3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd5d4);
        EXPECT(gbc.pc(), 0x6df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 015F
        gbc.setState(0x35f7, 0xe23, 0x6750, 0xd3d3, 0xa728, 0x14f, 0x1, 0x0);
        gbc.writeMem(0x35f7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe23);
        EXPECT(gbc.pc(), 0x35f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0160
        gbc.setState(0x5df7, 0xb120, 0x4770, 0x8bda, 0xc4c9, 0x56f1, 0x1, 0x0);
        gbc.writeMem(0x5df7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb120);
        EXPECT(gbc.pc(), 0x5df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0161
        gbc.setState(0x2ae3, 0xb9ee, 0x2220, 0x5deb, 0x4be8, 0xfc8a, 0x1, 0x1);
        gbc.writeMem(0x2ae3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0x2ae5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0162
        gbc.setState(0x11c6, 0xc612, 0xd70, 0x3073, 0xfff4, 0x69c0, 0x1, 0x0);
        gbc.writeMem(0x11c6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc612);
        EXPECT(gbc.pc(), 0x11c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0163
        gbc.setState(0x66c4, 0xe470, 0x3020, 0x9572, 0xfdd3, 0xe2db, 0x1, 0x1);
        gbc.writeMem(0x66c4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe470);
        EXPECT(gbc.pc(), 0x66c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0164
        gbc.setState(0x1ee0, 0x1113, 0x4aa0, 0xac8f, 0x8086, 0xf3e3, 0x1, 0x0);
        gbc.writeMem(0x1ee0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x1113);
        EXPECT(gbc.pc(), 0x1ee2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0165
        gbc.setState(0x76b7, 0x634, 0x7030, 0x3b6, 0xe93b, 0xc906, 0x0, 0x1);
        gbc.writeMem(0x76b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x634);
        EXPECT(gbc.pc(), 0x76b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0166
        gbc.setState(0x7820, 0x2bdf, 0xcbf0, 0x51a4, 0xf653, 0xeadf, 0x1, 0x0);
        gbc.writeMem(0x7820, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2bdf);
        EXPECT(gbc.pc(), 0x7822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0167
        gbc.setState(0x61b4, 0x8d22, 0x4de0, 0x3e09, 0x4e87, 0x101a, 0x0, 0x1);
        gbc.writeMem(0x61b4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8d22);
        EXPECT(gbc.pc(), 0x61b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0168
        gbc.setState(0x65, 0x9fd4, 0x9570, 0xf51f, 0xc55c, 0x22b8, 0x1, 0x1);
        gbc.writeMem(0x65, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x9fd4);
        EXPECT(gbc.pc(), 0x67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0169
        gbc.setState(0x93b8, 0xe78, 0x2d30, 0xe05e, 0x663a, 0xed6f, 0x1, 0x0);
        gbc.writeMem(0x93b8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xe78);
        EXPECT(gbc.pc(), 0x93ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93b8), 0xcb);
        EXPECT(gbc.readMem(0x93b9), 0x90);
        // CB 90 016A
        gbc.setState(0x85f6, 0x4771, 0x60c0, 0x4ab, 0xde94, 0x440d, 0x0, 0x1);
        gbc.writeMem(0x85f6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4771);
        EXPECT(gbc.pc(), 0x85f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f6), 0xcb);
        EXPECT(gbc.readMem(0x85f7), 0x90);
        // CB 90 016B
        gbc.setState(0x8bc4, 0xda42, 0x69c0, 0x9fd5, 0x1733, 0x6c15, 0x0, 0x1);
        gbc.writeMem(0x8bc4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xda42);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc4), 0xcb);
        EXPECT(gbc.readMem(0x8bc5), 0x90);
        // CB 90 016C
        gbc.setState(0x84a2, 0xe88c, 0xa180, 0xcae2, 0xeb, 0x3990, 0x0, 0x1);
        gbc.writeMem(0x84a2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe88c);
        EXPECT(gbc.pc(), 0x84a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84a2), 0xcb);
        EXPECT(gbc.readMem(0x84a3), 0x90);
        // CB 90 016D
        gbc.setState(0x973b, 0xedcc, 0x4ef0, 0xbe2d, 0x74f5, 0x96f5, 0x0, 0x1);
        gbc.writeMem(0x973b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xedcc);
        EXPECT(gbc.pc(), 0x973d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973b), 0xcb);
        EXPECT(gbc.readMem(0x973c), 0x90);
        // CB 90 016E
        gbc.setState(0xc1eb, 0xadc7, 0xf20, 0xf90a, 0xae6e, 0x2091, 0x1, 0x0);
        gbc.writeMem(0xc1eb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xadc7);
        EXPECT(gbc.pc(), 0xc1ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1eb), 0xcb);
        EXPECT(gbc.readMem(0xc1ec), 0x90);
        // CB 90 016F
        gbc.setState(0x552a, 0x6df8, 0x40, 0x7093, 0x6fd1, 0xfb10, 0x0, 0x0);
        gbc.writeMem(0x552a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6df8);
        EXPECT(gbc.pc(), 0x552c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0170
        gbc.setState(0xc96, 0xe636, 0xb810, 0x3db8, 0xa2dc, 0x4653, 0x0, 0x0);
        gbc.writeMem(0xc96, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0xc98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0171
        gbc.setState(0x802c, 0x78d1, 0x3d70, 0xb7e3, 0xafe0, 0x81bf, 0x0, 0x1);
        gbc.writeMem(0x802c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x78d1);
        EXPECT(gbc.pc(), 0x802e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x802c), 0xcb);
        EXPECT(gbc.readMem(0x802d), 0x90);
        // CB 90 0172
        gbc.setState(0x14af, 0x54e3, 0xdba0, 0x15ea, 0x87ce, 0xe760, 0x0, 0x1);
        gbc.writeMem(0x14af, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x54e3);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0173
        gbc.setState(0xa352, 0x9a4e, 0x9ae0, 0xa9d1, 0xf718, 0x3f87, 0x1, 0x1);
        gbc.writeMem(0xa352, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9a4e);
        EXPECT(gbc.pc(), 0xa354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa352), 0xcb);
        EXPECT(gbc.readMem(0xa353), 0x90);
        // CB 90 0174
        gbc.setState(0x710d, 0x60dd, 0x6a80, 0x51a, 0xc604, 0x2e06, 0x1, 0x0);
        gbc.writeMem(0x710d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x60dd);
        EXPECT(gbc.pc(), 0x710f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0175
        gbc.setState(0x3400, 0x80a6, 0x4560, 0x95f, 0x2670, 0xf543, 0x0, 0x1);
        gbc.writeMem(0x3400, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x80a6);
        EXPECT(gbc.pc(), 0x3402);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0176
        gbc.setState(0x5674, 0x46a8, 0x34c0, 0xad17, 0x7d24, 0xe5ef, 0x1, 0x1);
        gbc.writeMem(0x5674, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x46a8);
        EXPECT(gbc.pc(), 0x5676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0177
        gbc.setState(0x29b6, 0x2480, 0xf880, 0xabcc, 0x1d1e, 0x6f1e, 0x0, 0x0);
        gbc.writeMem(0x29b6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x2480);
        EXPECT(gbc.pc(), 0x29b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0178
        gbc.setState(0x9bed, 0x9144, 0x3e0, 0xa3f2, 0x3bb5, 0xe8b6, 0x0, 0x1);
        gbc.writeMem(0x9bed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0x9bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bed), 0xcb);
        EXPECT(gbc.readMem(0x9bee), 0x90);
        // CB 90 0179
        gbc.setState(0xe583, 0x8404, 0xd340, 0xb6b0, 0xad72, 0x224d, 0x0, 0x1);
        gbc.writeMem(0xe583, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8404);
        EXPECT(gbc.pc(), 0xe585);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe583), 0xcb);
        EXPECT(gbc.readMem(0xe584), 0x90);
        // CB 90 017A
        gbc.setState(0x1a24, 0x14cb, 0x16e0, 0x4d4f, 0x12ac, 0xf427, 0x1, 0x0);
        gbc.writeMem(0x1a24, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x14cb);
        EXPECT(gbc.pc(), 0x1a26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 017B
        gbc.setState(0x8c07, 0x6d30, 0x1f60, 0x6e42, 0x221, 0x4c7e, 0x0, 0x0);
        gbc.writeMem(0x8c07, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6d30);
        EXPECT(gbc.pc(), 0x8c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c07), 0xcb);
        EXPECT(gbc.readMem(0x8c08), 0x90);
        // CB 90 017C
        gbc.setState(0x2920, 0x2166, 0x40d0, 0x79f6, 0x9ba9, 0x45fd, 0x0, 0x0);
        gbc.writeMem(0x2920, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2166);
        EXPECT(gbc.pc(), 0x2922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 017D
        gbc.setState(0x13a1, 0xe2a6, 0xcbe0, 0x2eb4, 0x2abc, 0xd2a0, 0x1, 0x1);
        gbc.writeMem(0x13a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe2a6);
        EXPECT(gbc.pc(), 0x13a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 017E
        gbc.setState(0xa5ab, 0x6811, 0xc0a0, 0xe054, 0x6a84, 0x4920, 0x0, 0x0);
        gbc.writeMem(0xa5ab, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6811);
        EXPECT(gbc.pc(), 0xa5ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ab), 0xcb);
        EXPECT(gbc.readMem(0xa5ac), 0x90);
        // CB 90 017F
        gbc.setState(0x4d05, 0xf947, 0x4110, 0x2c77, 0x5392, 0xf263, 0x0, 0x0);
        gbc.writeMem(0x4d05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf947);
        EXPECT(gbc.pc(), 0x4d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0180
        gbc.setState(0xde95, 0x490b, 0xd230, 0x205f, 0xe052, 0x11e0, 0x1, 0x0);
        gbc.writeMem(0xde95, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x490b);
        EXPECT(gbc.pc(), 0xde97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde95), 0xcb);
        EXPECT(gbc.readMem(0xde96), 0x90);
        // CB 90 0181
        gbc.setState(0x5fd2, 0xdb20, 0xef30, 0xc886, 0xb851, 0x87c7, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdb20);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0182
        gbc.setState(0xb4c9, 0x288e, 0xab0, 0xa975, 0xa8e2, 0x4c60, 0x1, 0x0);
        gbc.writeMem(0xb4c9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x288e);
        EXPECT(gbc.pc(), 0xb4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c9), 0xcb);
        EXPECT(gbc.readMem(0xb4ca), 0x90);
        // CB 90 0183
        gbc.setState(0xaf72, 0x7718, 0xe2a0, 0xd0f9, 0xb1da, 0x5362, 0x0, 0x1);
        gbc.writeMem(0xaf72, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7718);
        EXPECT(gbc.pc(), 0xaf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf72), 0xcb);
        EXPECT(gbc.readMem(0xaf73), 0x90);
        // CB 90 0185
        gbc.setState(0x1499, 0x21ca, 0x5d90, 0x91d7, 0x6af9, 0x5051, 0x1, 0x1);
        gbc.writeMem(0x1499, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x21ca);
        EXPECT(gbc.pc(), 0x149b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0186
        gbc.setState(0xeb, 0x229, 0x7fa0, 0xc3c6, 0xf13f, 0x2244, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x229);
        EXPECT(gbc.pc(), 0xed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0187
        gbc.setState(0x94fa, 0xf093, 0x57b0, 0xb390, 0xaa2f, 0xc176, 0x0, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf093);
        EXPECT(gbc.pc(), 0x94fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94fa), 0xcb);
        EXPECT(gbc.readMem(0x94fb), 0x90);
        // CB 90 0188
        gbc.setState(0xe93d, 0x6ce, 0x3ca0, 0xb1eb, 0x689, 0xcd84, 0x0, 0x1);
        gbc.writeMem(0xe93d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6ce);
        EXPECT(gbc.pc(), 0xe93f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe93d), 0xcb);
        EXPECT(gbc.readMem(0xe93e), 0x90);
        // CB 90 0189
        gbc.setState(0x63cc, 0x6e83, 0xcfc0, 0xb9b6, 0x23f7, 0x4e5, 0x0, 0x1);
        gbc.writeMem(0x63cc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6e83);
        EXPECT(gbc.pc(), 0x63ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 018A
        gbc.setState(0x7741, 0x8eed, 0xb860, 0xbef0, 0xa406, 0xf065, 0x0, 0x0);
        gbc.writeMem(0x7741, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8eed);
        EXPECT(gbc.pc(), 0x7743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 018B
        gbc.setState(0x59d5, 0xb591, 0x18e0, 0xd9bd, 0x321f, 0x72e3, 0x1, 0x1);
        gbc.writeMem(0x59d5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb591);
        EXPECT(gbc.pc(), 0x59d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 018C
        gbc.setState(0x83f5, 0x37e1, 0x2aa0, 0x5e92, 0x654e, 0xab7e, 0x1, 0x0);
        gbc.writeMem(0x83f5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x37e1);
        EXPECT(gbc.pc(), 0x83f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83f5), 0xcb);
        EXPECT(gbc.readMem(0x83f6), 0x90);
        // CB 90 018D
        gbc.setState(0x450f, 0xf911, 0xf50, 0x6b7d, 0xdbe0, 0x7f6f, 0x1, 0x0);
        gbc.writeMem(0x450f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf911);
        EXPECT(gbc.pc(), 0x4511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 018E
        gbc.setState(0xe15c, 0x4b45, 0xf150, 0x3e35, 0xbc03, 0xbd90, 0x0, 0x1);
        gbc.writeMem(0xe15c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4b45);
        EXPECT(gbc.pc(), 0xe15e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15c), 0xcb);
        EXPECT(gbc.readMem(0xe15d), 0x90);
        // CB 90 018F
        gbc.setState(0xd09a, 0x7a05, 0x16f0, 0xebd7, 0x7341, 0x6497, 0x0, 0x1);
        gbc.writeMem(0xd09a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7a05);
        EXPECT(gbc.pc(), 0xd09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd09a), 0xcb);
        EXPECT(gbc.readMem(0xd09b), 0x90);
        // CB 90 0191
        gbc.setState(0x6aac, 0x180a, 0x9e20, 0xf5cb, 0xd805, 0x8b7e, 0x0, 0x0);
        gbc.writeMem(0x6aac, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x180a);
        EXPECT(gbc.pc(), 0x6aae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0192
        gbc.setState(0x43a, 0xc33, 0x5840, 0xfd44, 0xa314, 0xc7e9, 0x1, 0x1);
        gbc.writeMem(0x43a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc33);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0193
        gbc.setState(0x7fa7, 0xaa87, 0xdbd0, 0xc50e, 0xcde5, 0xe389, 0x0, 0x0);
        gbc.writeMem(0x7fa7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xaa87);
        EXPECT(gbc.pc(), 0x7fa9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0194
        gbc.setState(0xc22, 0x25e5, 0x9790, 0x7d76, 0x4afa, 0xdd4f, 0x0, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x25e5);
        EXPECT(gbc.pc(), 0xc24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0195
        gbc.setState(0x11f, 0xaa76, 0x280, 0xceff, 0xe24b, 0xf2ce, 0x1, 0x0);
        gbc.writeMem(0x11f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaa76);
        EXPECT(gbc.pc(), 0x121);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0196
        gbc.setState(0x322f, 0xdfec, 0xef30, 0xbe52, 0x6cb7, 0x3535, 0x1, 0x0);
        gbc.writeMem(0x322f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdfec);
        EXPECT(gbc.pc(), 0x3231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0197
        gbc.setState(0xad5d, 0x7b64, 0x1d80, 0xc086, 0x314, 0x738, 0x1, 0x1);
        gbc.writeMem(0xad5d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7b64);
        EXPECT(gbc.pc(), 0xad5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad5d), 0xcb);
        EXPECT(gbc.readMem(0xad5e), 0x90);
        // CB 90 0198
        gbc.setState(0xc990, 0x87e6, 0x33b0, 0x1457, 0x25ea, 0xeaa9, 0x0, 0x0);
        gbc.writeMem(0xc990, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x87e6);
        EXPECT(gbc.pc(), 0xc992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc990), 0xcb);
        EXPECT(gbc.readMem(0xc991), 0x90);
        // CB 90 0199
        gbc.setState(0x7c82, 0x359, 0x9010, 0xa3a0, 0x4c86, 0x81c, 0x0, 0x0);
        gbc.writeMem(0x7c82, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x359);
        EXPECT(gbc.pc(), 0x7c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 019A
        gbc.setState(0xe139, 0xcdbe, 0x1d90, 0x2079, 0x7693, 0xa36a, 0x0, 0x0);
        gbc.writeMem(0xe139, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcdbe);
        EXPECT(gbc.pc(), 0xe13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe139), 0xcb);
        EXPECT(gbc.readMem(0xe13a), 0x90);
        // CB 90 019B
        gbc.setState(0xb8dd, 0x1d9, 0xbd20, 0x4773, 0x3f8, 0xae4d, 0x0, 0x0);
        gbc.writeMem(0xb8dd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1d9);
        EXPECT(gbc.pc(), 0xb8df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8dd), 0xcb);
        EXPECT(gbc.readMem(0xb8de), 0x90);
        // CB 90 019D
        gbc.setState(0x316, 0x5625, 0xdd50, 0x6919, 0x9ddf, 0x7b52, 0x1, 0x0);
        gbc.writeMem(0x316, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5625);
        EXPECT(gbc.pc(), 0x318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 019E
        gbc.setState(0x320f, 0xb6d5, 0x2d50, 0xd043, 0xd49e, 0x3059, 0x1, 0x0);
        gbc.writeMem(0x320f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb6d5);
        EXPECT(gbc.pc(), 0x3211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 019F
        gbc.setState(0x39b7, 0x7d99, 0xedd0, 0x4f11, 0x1628, 0xa778, 0x1, 0x1);
        gbc.writeMem(0x39b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7d99);
        EXPECT(gbc.pc(), 0x39b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01A0
        gbc.setState(0xb0cc, 0xa310, 0x8940, 0x9e76, 0xccc3, 0x5b74, 0x1, 0x0);
        gbc.writeMem(0xb0cc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa310);
        EXPECT(gbc.pc(), 0xb0ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0cc), 0xcb);
        EXPECT(gbc.readMem(0xb0cd), 0x90);
        // CB 90 01A1
        gbc.setState(0xe943, 0xc5d1, 0x7040, 0x45e5, 0x6850, 0xd061, 0x0, 0x1);
        gbc.writeMem(0xe943, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc5d1);
        EXPECT(gbc.pc(), 0xe945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe943), 0xcb);
        EXPECT(gbc.readMem(0xe944), 0x90);
        // CB 90 01A2
        gbc.setState(0xa7b1, 0x7665, 0xbfe0, 0xb703, 0xd5bd, 0x3422, 0x0, 0x1);
        gbc.writeMem(0xa7b1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7665);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7b1), 0xcb);
        EXPECT(gbc.readMem(0xa7b2), 0x90);
        // CB 90 01A3
        gbc.setState(0x8243, 0x40a3, 0x70c0, 0x9dc3, 0xf564, 0x3e19, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x40a3);
        EXPECT(gbc.pc(), 0x8245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8243), 0xcb);
        EXPECT(gbc.readMem(0x8244), 0x90);
        // CB 90 01A4
        gbc.setState(0x6235, 0x4f3a, 0xb920, 0x3a6f, 0xced0, 0x8b38, 0x1, 0x1);
        gbc.writeMem(0x6235, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4f3a);
        EXPECT(gbc.pc(), 0x6237);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01A5
        gbc.setState(0x9f4b, 0x954e, 0x77c0, 0xd944, 0x75c4, 0x84a6, 0x1, 0x0);
        gbc.writeMem(0x9f4b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x954e);
        EXPECT(gbc.pc(), 0x9f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4b), 0xcb);
        EXPECT(gbc.readMem(0x9f4c), 0x90);
        // CB 90 01A6
        gbc.setState(0x1494, 0xcc5d, 0xf110, 0x594f, 0xc7e9, 0x2dd2, 0x1, 0x0);
        gbc.writeMem(0x1494, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0x1496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01A7
        gbc.setState(0x4a14, 0x75aa, 0x6230, 0xf591, 0x9f00, 0x17a8, 0x1, 0x0);
        gbc.writeMem(0x4a14, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x75aa);
        EXPECT(gbc.pc(), 0x4a16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01A8
        gbc.setState(0x1ad2, 0x42b2, 0x780, 0x660b, 0x8852, 0xcf7d, 0x0, 0x0);
        gbc.writeMem(0x1ad2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x42b2);
        EXPECT(gbc.pc(), 0x1ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01A9
        gbc.setState(0x4685, 0x6230, 0x3940, 0x7ca6, 0xb131, 0x659b, 0x0, 0x0);
        gbc.writeMem(0x4685, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6230);
        EXPECT(gbc.pc(), 0x4687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01AA
        gbc.setState(0x7792, 0x91cb, 0xcb90, 0x1ea2, 0xf852, 0xb5e, 0x1, 0x0);
        gbc.writeMem(0x7792, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x91cb);
        EXPECT(gbc.pc(), 0x7794);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01AB
        gbc.setState(0x99a, 0x248, 0xd700, 0x6d34, 0x138e, 0xf428, 0x0, 0x0);
        gbc.writeMem(0x99a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x248);
        EXPECT(gbc.pc(), 0x99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01AC
        gbc.setState(0x717a, 0xaa1f, 0x9b10, 0xdd70, 0x1948, 0xe711, 0x1, 0x1);
        gbc.writeMem(0x717a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xaa1f);
        EXPECT(gbc.pc(), 0x717c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01AD
        gbc.setState(0xe760, 0x5cf8, 0x9ba0, 0xd786, 0x666a, 0x8df1, 0x0, 0x1);
        gbc.writeMem(0xe760, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5cf8);
        EXPECT(gbc.pc(), 0xe762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe760), 0xcb);
        EXPECT(gbc.readMem(0xe761), 0x90);
        // CB 90 01AE
        gbc.setState(0x84e7, 0xcb5d, 0x8780, 0xec90, 0x7e80, 0x7180, 0x0, 0x1);
        gbc.writeMem(0x84e7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcb5d);
        EXPECT(gbc.pc(), 0x84e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84e7), 0xcb);
        EXPECT(gbc.readMem(0x84e8), 0x90);
        // CB 90 01AF
        gbc.setState(0xc08e, 0xf0ac, 0x7b40, 0x3412, 0x302, 0x9618, 0x0, 0x1);
        gbc.writeMem(0xc08e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf0ac);
        EXPECT(gbc.pc(), 0xc090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc08e), 0xcb);
        EXPECT(gbc.readMem(0xc08f), 0x90);
        // CB 90 01B0
        gbc.setState(0x4ab5, 0xffd0, 0x86b0, 0xfd04, 0x6b43, 0x972b, 0x0, 0x1);
        gbc.writeMem(0x4ab5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x4ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01B2
        gbc.setState(0x5d9b, 0xa866, 0x960, 0x525, 0x55fe, 0x9f3, 0x0, 0x1);
        gbc.writeMem(0x5d9b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa866);
        EXPECT(gbc.pc(), 0x5d9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01B3
        gbc.setState(0xa6e5, 0x9acf, 0x3420, 0x885, 0x404b, 0xd78a, 0x0, 0x1);
        gbc.writeMem(0xa6e5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9acf);
        EXPECT(gbc.pc(), 0xa6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6e5), 0xcb);
        EXPECT(gbc.readMem(0xa6e6), 0x90);
        // CB 90 01B4
        gbc.setState(0x9c05, 0xe748, 0x2850, 0x22ac, 0xbe8, 0x2cf1, 0x0, 0x1);
        gbc.writeMem(0x9c05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe748);
        EXPECT(gbc.pc(), 0x9c07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c05), 0xcb);
        EXPECT(gbc.readMem(0x9c06), 0x90);
        // CB 90 01B5
        gbc.setState(0x2ba2, 0x5366, 0xf9a0, 0xcaf7, 0x5ff4, 0x95e0, 0x1, 0x0);
        gbc.writeMem(0x2ba2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5366);
        EXPECT(gbc.pc(), 0x2ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01B6
        gbc.setState(0x3465, 0x54ca, 0x4840, 0x91d0, 0x452c, 0xe30c, 0x1, 0x0);
        gbc.writeMem(0x3465, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x54ca);
        EXPECT(gbc.pc(), 0x3467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01B7
        gbc.setState(0x5592, 0x7917, 0xef00, 0x416a, 0xd6a7, 0xe82b, 0x1, 0x0);
        gbc.writeMem(0x5592, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7917);
        EXPECT(gbc.pc(), 0x5594);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01B8
        gbc.setState(0x31fc, 0xcdc1, 0xef0, 0xcee7, 0x1c69, 0x1ab3, 0x0, 0x1);
        gbc.writeMem(0x31fc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xcdc1);
        EXPECT(gbc.pc(), 0x31fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01BA
        gbc.setState(0x10c2, 0xf198, 0x55a0, 0xedf1, 0xab43, 0x640, 0x0, 0x0);
        gbc.writeMem(0x10c2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf198);
        EXPECT(gbc.pc(), 0x10c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01BB
        gbc.setState(0xdd36, 0x9d5f, 0x75c0, 0x86d4, 0x17e5, 0x3ed, 0x1, 0x0);
        gbc.writeMem(0xdd36, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9d5f);
        EXPECT(gbc.pc(), 0xdd38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd36), 0xcb);
        EXPECT(gbc.readMem(0xdd37), 0x90);
        // CB 90 01BC
        gbc.setState(0x563c, 0x11ea, 0x46b0, 0x43a4, 0xc4a5, 0xb6e0, 0x1, 0x0);
        gbc.writeMem(0x563c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x11ea);
        EXPECT(gbc.pc(), 0x563e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01BD
        gbc.setState(0x9685, 0x638e, 0x5f40, 0x36e4, 0x8fd8, 0xb73f, 0x1, 0x0);
        gbc.writeMem(0x9685, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x638e);
        EXPECT(gbc.pc(), 0x9687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9685), 0xcb);
        EXPECT(gbc.readMem(0x9686), 0x90);
        // CB 90 01BE
        gbc.setState(0x3ce4, 0xd94a, 0x8e10, 0xfe96, 0xfd2, 0xdf76, 0x0, 0x0);
        gbc.writeMem(0x3ce4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd94a);
        EXPECT(gbc.pc(), 0x3ce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01BF
        gbc.setState(0x139f, 0xdb84, 0x7cf0, 0x93b5, 0x1980, 0xa3b3, 0x0, 0x1);
        gbc.writeMem(0x139f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xdb84);
        EXPECT(gbc.pc(), 0x13a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01C0
        gbc.setState(0xcb49, 0xc634, 0x8b90, 0x27f9, 0xbc0f, 0x9a20, 0x0, 0x1);
        gbc.writeMem(0xcb49, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc634);
        EXPECT(gbc.pc(), 0xcb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb49), 0xcb);
        EXPECT(gbc.readMem(0xcb4a), 0x90);
        // CB 90 01C1
        gbc.setState(0xcd96, 0x1fc8, 0x42e0, 0x20e6, 0x8031, 0xc3be, 0x1, 0x0);
        gbc.writeMem(0xcd96, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1fc8);
        EXPECT(gbc.pc(), 0xcd98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd96), 0xcb);
        EXPECT(gbc.readMem(0xcd97), 0x90);
        // CB 90 01C2
        gbc.setState(0x417d, 0xad83, 0x33b0, 0x9b4b, 0xd1e2, 0xc469, 0x1, 0x1);
        gbc.writeMem(0x417d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xad83);
        EXPECT(gbc.pc(), 0x417f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01C3
        gbc.setState(0x5d65, 0x937b, 0xf150, 0x709d, 0x79fd, 0xbb3e, 0x1, 0x0);
        gbc.writeMem(0x5d65, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x937b);
        EXPECT(gbc.pc(), 0x5d67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01C4
        gbc.setState(0x85d9, 0xdaf1, 0x6e20, 0x94ea, 0xfaae, 0x6d02, 0x1, 0x1);
        gbc.writeMem(0x85d9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdaf1);
        EXPECT(gbc.pc(), 0x85db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85d9), 0xcb);
        EXPECT(gbc.readMem(0x85da), 0x90);
        // CB 90 01C5
        gbc.setState(0xd235, 0x2297, 0x2e50, 0x40ce, 0xbf01, 0x9f53, 0x0, 0x1);
        gbc.writeMem(0xd235, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2297);
        EXPECT(gbc.pc(), 0xd237);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd235), 0xcb);
        EXPECT(gbc.readMem(0xd236), 0x90);
        // CB 90 01C6
        gbc.setState(0x8529, 0x73b, 0x5750, 0x3460, 0x7bb8, 0xb2ba, 0x1, 0x1);
        gbc.writeMem(0x8529, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x73b);
        EXPECT(gbc.pc(), 0x852b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8529), 0xcb);
        EXPECT(gbc.readMem(0x852a), 0x90);
        // CB 90 01C7
        gbc.setState(0x89f5, 0x1c57, 0x2ad0, 0xd7e8, 0x8ded, 0xa462, 0x0, 0x0);
        gbc.writeMem(0x89f5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1c57);
        EXPECT(gbc.pc(), 0x89f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f5), 0xcb);
        EXPECT(gbc.readMem(0x89f6), 0x90);
        // CB 90 01C8
        gbc.setState(0x237e, 0x1fdd, 0xd420, 0x6007, 0xaad7, 0x7341, 0x1, 0x0);
        gbc.writeMem(0x237e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1fdd);
        EXPECT(gbc.pc(), 0x2380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01C9
        gbc.setState(0x196d, 0x6fb3, 0xb180, 0x8ec2, 0xc89d, 0x733b, 0x1, 0x1);
        gbc.writeMem(0x196d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6fb3);
        EXPECT(gbc.pc(), 0x196f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01CA
        gbc.setState(0x1f74, 0x79f1, 0x1f80, 0x37cd, 0x3942, 0x2ebb, 0x1, 0x1);
        gbc.writeMem(0x1f74, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x79f1);
        EXPECT(gbc.pc(), 0x1f76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01CB
        gbc.setState(0x5742, 0xbc54, 0xd8c0, 0x3919, 0x4ba8, 0xf685, 0x0, 0x1);
        gbc.writeMem(0x5742, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbc54);
        EXPECT(gbc.pc(), 0x5744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01CC
        gbc.setState(0x60b6, 0xf4bc, 0xb0, 0x1f0, 0x30b6, 0xefa6, 0x0, 0x0);
        gbc.writeMem(0x60b6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf4bc);
        EXPECT(gbc.pc(), 0x60b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01CD
        gbc.setState(0xd237, 0xa546, 0x840, 0x46, 0x6f2, 0xf639, 0x1, 0x1);
        gbc.writeMem(0xd237, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa546);
        EXPECT(gbc.pc(), 0xd239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd237), 0xcb);
        EXPECT(gbc.readMem(0xd238), 0x90);
        // CB 90 01CF
        gbc.setState(0x16f9, 0xf597, 0x11e0, 0x54fc, 0x42f0, 0xa117, 0x0, 0x0);
        gbc.writeMem(0x16f9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf597);
        EXPECT(gbc.pc(), 0x16fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01D0
        gbc.setState(0x990e, 0x6c8c, 0xb430, 0xf618, 0xe5a9, 0xf06f, 0x0, 0x0);
        gbc.writeMem(0x990e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6c8c);
        EXPECT(gbc.pc(), 0x9910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990e), 0xcb);
        EXPECT(gbc.readMem(0x990f), 0x90);
        // CB 90 01D1
        gbc.setState(0x167b, 0x281a, 0x10d0, 0x9c67, 0xc950, 0xff5e, 0x0, 0x1);
        gbc.writeMem(0x167b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x281a);
        EXPECT(gbc.pc(), 0x167d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01D2
        gbc.setState(0x6e70, 0x921e, 0xb0d0, 0xee41, 0x5f35, 0x51f6, 0x1, 0x0);
        gbc.writeMem(0x6e70, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x921e);
        EXPECT(gbc.pc(), 0x6e72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01D3
        gbc.setState(0xa468, 0x86d, 0xf9e0, 0xb016, 0x8696, 0x8404, 0x0, 0x0);
        gbc.writeMem(0xa468, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x86d);
        EXPECT(gbc.pc(), 0xa46a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa468), 0xcb);
        EXPECT(gbc.readMem(0xa469), 0x90);
        // CB 90 01D4
        gbc.setState(0x4193, 0x2dd0, 0x1640, 0x3d2d, 0x2205, 0xe371, 0x1, 0x0);
        gbc.writeMem(0x4193, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2dd0);
        EXPECT(gbc.pc(), 0x4195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01D5
        gbc.setState(0x2c1, 0x588f, 0x8bb0, 0x3fe, 0xd219, 0xa41b, 0x1, 0x1);
        gbc.writeMem(0x2c1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x588f);
        EXPECT(gbc.pc(), 0x2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01D6
        gbc.setState(0x3cdb, 0x3882, 0x2990, 0x1954, 0xf75c, 0xd776, 0x0, 0x1);
        gbc.writeMem(0x3cdb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3882);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01D7
        gbc.setState(0x7a4b, 0x6862, 0xebe0, 0xd2b8, 0xf516, 0xa543, 0x0, 0x0);
        gbc.writeMem(0x7a4b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6862);
        EXPECT(gbc.pc(), 0x7a4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01D8
        gbc.setState(0xc287, 0x92e, 0x2c80, 0xd54e, 0x7530, 0xa1ee, 0x0, 0x1);
        gbc.writeMem(0xc287, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x92e);
        EXPECT(gbc.pc(), 0xc289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc287), 0xcb);
        EXPECT(gbc.readMem(0xc288), 0x90);
        // CB 90 01D9
        gbc.setState(0xd4b, 0x46bb, 0x6880, 0x2449, 0xf95c, 0xa447, 0x1, 0x1);
        gbc.writeMem(0xd4b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x46bb);
        EXPECT(gbc.pc(), 0xd4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01DA
        gbc.setState(0xc23a, 0x651b, 0xae90, 0x6d9d, 0xfa19, 0x503b, 0x1, 0x1);
        gbc.writeMem(0xc23a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x651b);
        EXPECT(gbc.pc(), 0xc23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23a), 0xcb);
        EXPECT(gbc.readMem(0xc23b), 0x90);
        // CB 90 01DB
        gbc.setState(0x304, 0x7d76, 0x480, 0xceb2, 0xba29, 0xb439, 0x1, 0x0);
        gbc.writeMem(0x304, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7d76);
        EXPECT(gbc.pc(), 0x306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01DC
        gbc.setState(0x33a7, 0x6c35, 0x5ba0, 0x7a13, 0xf2e0, 0x502d, 0x0, 0x0);
        gbc.writeMem(0x33a7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6c35);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01DD
        gbc.setState(0xb8ff, 0xc46e, 0x210, 0x10c1, 0xc06b, 0xdd6d, 0x0, 0x1);
        gbc.writeMem(0xb8ff, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc46e);
        EXPECT(gbc.pc(), 0xb901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8ff), 0xcb);
        EXPECT(gbc.readMem(0xb900), 0x90);
        // CB 90 01DE
        gbc.setState(0x28ed, 0xba9b, 0x8940, 0x9022, 0x4958, 0x165f, 0x1, 0x0);
        gbc.writeMem(0x28ed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xba9b);
        EXPECT(gbc.pc(), 0x28ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01DF
        gbc.setState(0x3fe0, 0x4a29, 0x480, 0xf5e, 0x2f3a, 0xc46e, 0x0, 0x1);
        gbc.writeMem(0x3fe0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4a29);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01E0
        gbc.setState(0xd514, 0x69c4, 0x1040, 0x4a11, 0x468, 0x8579, 0x0, 0x0);
        gbc.writeMem(0xd514, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0xd516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd514), 0xcb);
        EXPECT(gbc.readMem(0xd515), 0x90);
        // CB 90 01E1
        gbc.setState(0xc957, 0x2b44, 0x3590, 0x96c, 0xf6fc, 0xacf6, 0x0, 0x0);
        gbc.writeMem(0xc957, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2b44);
        EXPECT(gbc.pc(), 0xc959);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc957), 0xcb);
        EXPECT(gbc.readMem(0xc958), 0x90);
        // CB 90 01E3
        gbc.setState(0x50b0, 0x9608, 0x96f0, 0x81e2, 0x9255, 0x6ee3, 0x1, 0x0);
        gbc.writeMem(0x50b0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x9608);
        EXPECT(gbc.pc(), 0x50b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01E4
        gbc.setState(0x2f69, 0x94a8, 0x7eb0, 0x7774, 0xf02f, 0x174e, 0x0, 0x1);
        gbc.writeMem(0x2f69, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x94a8);
        EXPECT(gbc.pc(), 0x2f6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01E5
        gbc.setState(0x61d6, 0xf4ce, 0xdc30, 0x3022, 0x993b, 0x8a2, 0x0, 0x1);
        gbc.writeMem(0x61d6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf4ce);
        EXPECT(gbc.pc(), 0x61d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01E6
        gbc.setState(0x1c39, 0x15e7, 0x77a0, 0x8695, 0x8119, 0xb62d, 0x1, 0x1);
        gbc.writeMem(0x1c39, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x15e7);
        EXPECT(gbc.pc(), 0x1c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01E8
        gbc.setState(0x89a4, 0x43ed, 0x8ca0, 0xbea3, 0xa25f, 0x2a0e, 0x0, 0x1);
        gbc.writeMem(0x89a4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x43ed);
        EXPECT(gbc.pc(), 0x89a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a4), 0xcb);
        EXPECT(gbc.readMem(0x89a5), 0x90);
        // CB 90 01EB
        gbc.setState(0x49bb, 0x7615, 0xd20, 0x66e3, 0x7ac3, 0x9de6, 0x0, 0x1);
        gbc.writeMem(0x49bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7615);
        EXPECT(gbc.pc(), 0x49bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01EC
        gbc.setState(0xe104, 0xf841, 0xf1e0, 0x8725, 0x86ed, 0x80a2, 0x0, 0x0);
        gbc.writeMem(0xe104, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xf841);
        EXPECT(gbc.pc(), 0xe106);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe104), 0xcb);
        EXPECT(gbc.readMem(0xe105), 0x90);
        // CB 90 01ED
        gbc.setState(0xabcc, 0xd1b3, 0x3500, 0x40c0, 0xd813, 0x296b, 0x1, 0x1);
        gbc.writeMem(0xabcc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd1b3);
        EXPECT(gbc.pc(), 0xabce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabcc), 0xcb);
        EXPECT(gbc.readMem(0xabcd), 0x90);
        // CB 90 01EE
        gbc.setState(0xf03, 0xf3c1, 0xa540, 0xf795, 0x6625, 0xcf1, 0x0, 0x0);
        gbc.writeMem(0xf03, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf3c1);
        EXPECT(gbc.pc(), 0xf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01EF
        gbc.setState(0x63c4, 0x7fa, 0xbd90, 0x4a8f, 0xa8f6, 0xe87c, 0x0, 0x0);
        gbc.writeMem(0x63c4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7fa);
        EXPECT(gbc.pc(), 0x63c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01F0
        gbc.setState(0xaab7, 0x970e, 0x7200, 0x8d1d, 0xf392, 0xfa14, 0x1, 0x1);
        gbc.writeMem(0xaab7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x970e);
        EXPECT(gbc.pc(), 0xaab9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab7), 0xcb);
        EXPECT(gbc.readMem(0xaab8), 0x90);
        // CB 90 01F1
        gbc.setState(0x22af, 0x168a, 0x6030, 0x3457, 0xc2fd, 0x13b, 0x1, 0x0);
        gbc.writeMem(0x22af, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x168a);
        EXPECT(gbc.pc(), 0x22b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01F2
        gbc.setState(0x1662, 0x5ef8, 0x98c0, 0x5318, 0x4792, 0x8b03, 0x0, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5ef8);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01F3
        gbc.setState(0xb5bf, 0xb088, 0x9930, 0x238a, 0xa719, 0x7d77, 0x1, 0x1);
        gbc.writeMem(0xb5bf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb088);
        EXPECT(gbc.pc(), 0xb5c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5bf), 0xcb);
        EXPECT(gbc.readMem(0xb5c0), 0x90);
        // CB 90 01F4
        gbc.setState(0xa422, 0x92ac, 0x9310, 0xeb27, 0x8763, 0xdbc0, 0x1, 0x0);
        gbc.writeMem(0xa422, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x92ac);
        EXPECT(gbc.pc(), 0xa424);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa422), 0xcb);
        EXPECT(gbc.readMem(0xa423), 0x90);
        // CB 90 01F5
        gbc.setState(0xe6d1, 0xbee0, 0x7c70, 0xe37, 0x490f, 0xb028, 0x0, 0x1);
        gbc.writeMem(0xe6d1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbee0);
        EXPECT(gbc.pc(), 0xe6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d1), 0xcb);
        EXPECT(gbc.readMem(0xe6d2), 0x90);
        // CB 90 01F6
        gbc.setState(0x379, 0x3822, 0x4560, 0x4651, 0x1c23, 0x408c, 0x1, 0x1);
        gbc.writeMem(0x379, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3822);
        EXPECT(gbc.pc(), 0x37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01F8
        gbc.setState(0x4c64, 0x986, 0xb9c0, 0x506a, 0xd1c6, 0x6056, 0x0, 0x1);
        gbc.writeMem(0x4c64, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x986);
        EXPECT(gbc.pc(), 0x4c66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01F9
        gbc.setState(0x488d, 0x4b8d, 0x7fe0, 0x9cde, 0xc7c7, 0xf255, 0x1, 0x1);
        gbc.writeMem(0x488d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4b8d);
        EXPECT(gbc.pc(), 0x488f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01FA
        gbc.setState(0xd1e5, 0xc5f7, 0x6460, 0x4f95, 0x5cee, 0x8bee, 0x1, 0x1);
        gbc.writeMem(0xd1e5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc5f7);
        EXPECT(gbc.pc(), 0xd1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e5), 0xcb);
        EXPECT(gbc.readMem(0xd1e6), 0x90);
        // CB 90 01FB
        gbc.setState(0x2729, 0x8b67, 0x55c0, 0xdca, 0x32f0, 0x40d3, 0x0, 0x1);
        gbc.writeMem(0x2729, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x8b67);
        EXPECT(gbc.pc(), 0x272b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 01FC
        gbc.setState(0x424a, 0x8a34, 0xb7b0, 0xc76f, 0xd8e4, 0x1f60, 0x1, 0x1);
        gbc.writeMem(0x424a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8a34);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 01FE
        gbc.setState(0xcaa3, 0x3d38, 0x93b0, 0x3cc6, 0xc2f4, 0xf830, 0x0, 0x1);
        gbc.writeMem(0xcaa3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3d38);
        EXPECT(gbc.pc(), 0xcaa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa3), 0xcb);
        EXPECT(gbc.readMem(0xcaa4), 0x90);
        // CB 90 01FF
        gbc.setState(0xc9f0, 0xebb4, 0xd590, 0x2aaa, 0x778b, 0xfe63, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xebb4);
        EXPECT(gbc.pc(), 0xc9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f0), 0xcb);
        EXPECT(gbc.readMem(0xc9f1), 0x90);
        // CB 90 0200
        gbc.setState(0xcea5, 0x3039, 0x73a0, 0x1eab, 0xd8b4, 0x9654, 0x1, 0x0);
        gbc.writeMem(0xcea5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x3039);
        EXPECT(gbc.pc(), 0xcea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea5), 0xcb);
        EXPECT(gbc.readMem(0xcea6), 0x90);
        // CB 90 0201
        gbc.setState(0x43f2, 0xefd, 0x5a60, 0x484c, 0x31f3, 0xc779, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xefd);
        EXPECT(gbc.pc(), 0x43f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0202
        gbc.setState(0x436b, 0xd325, 0x2820, 0x61a8, 0xf5ff, 0xe8e7, 0x0, 0x0);
        gbc.writeMem(0x436b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd325);
        EXPECT(gbc.pc(), 0x436d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0203
        gbc.setState(0xdf87, 0xbc29, 0x5d20, 0xc425, 0xd2b2, 0x2d59, 0x1, 0x0);
        gbc.writeMem(0xdf87, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbc29);
        EXPECT(gbc.pc(), 0xdf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf87), 0xcb);
        EXPECT(gbc.readMem(0xdf88), 0x90);
        // CB 90 0204
        gbc.setState(0x71b1, 0x5f5d, 0x3cc0, 0xfab0, 0x16, 0xc52d, 0x0, 0x0);
        gbc.writeMem(0x71b1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5f5d);
        EXPECT(gbc.pc(), 0x71b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0205
        gbc.setState(0xa68c, 0x4d65, 0xf650, 0xc353, 0xf2cc, 0xb502, 0x1, 0x0);
        gbc.writeMem(0xa68c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4d65);
        EXPECT(gbc.pc(), 0xa68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68c), 0xcb);
        EXPECT(gbc.readMem(0xa68d), 0x90);
        // CB 90 0206
        gbc.setState(0x9311, 0x1ea9, 0x19f0, 0x9101, 0xdd7e, 0x3cf0, 0x0, 0x1);
        gbc.writeMem(0x9311, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1ea9);
        EXPECT(gbc.pc(), 0x9313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9311), 0xcb);
        EXPECT(gbc.readMem(0x9312), 0x90);
        // CB 90 0207
        gbc.setState(0x3e4c, 0xf2c, 0x3040, 0x1bc2, 0x506, 0xf022, 0x1, 0x1);
        gbc.writeMem(0x3e4c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf2c);
        EXPECT(gbc.pc(), 0x3e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0208
        gbc.setState(0xe288, 0x6a94, 0xfa10, 0x374a, 0x1c7f, 0xae3c, 0x1, 0x1);
        gbc.writeMem(0xe288, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6a94);
        EXPECT(gbc.pc(), 0xe28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe288), 0xcb);
        EXPECT(gbc.readMem(0xe289), 0x90);
        // CB 90 0209
        gbc.setState(0x6d8a, 0xdf03, 0xae60, 0xcc1c, 0x6919, 0x6b33, 0x1, 0x0);
        gbc.writeMem(0x6d8a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xdf03);
        EXPECT(gbc.pc(), 0x6d8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 020A
        gbc.setState(0xeb64, 0xeeb6, 0x7f50, 0xe907, 0xc6ad, 0xb0e8, 0x0, 0x1);
        gbc.writeMem(0xeb64, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xeeb6);
        EXPECT(gbc.pc(), 0xeb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb64), 0xcb);
        EXPECT(gbc.readMem(0xeb65), 0x90);
        // CB 90 020B
        gbc.setState(0xde63, 0x2d26, 0x8020, 0x5489, 0x37ec, 0x65d7, 0x0, 0x1);
        gbc.writeMem(0xde63, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2d26);
        EXPECT(gbc.pc(), 0xde65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde63), 0xcb);
        EXPECT(gbc.readMem(0xde64), 0x90);
        // CB 90 020C
        gbc.setState(0x7b5d, 0x4c40, 0x2250, 0x2cca, 0xac3, 0xef15, 0x0, 0x0);
        gbc.writeMem(0x7b5d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4c40);
        EXPECT(gbc.pc(), 0x7b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 020D
        gbc.setState(0x14f4, 0x531f, 0xb0d0, 0x4767, 0xae62, 0x9aa, 0x0, 0x0);
        gbc.writeMem(0x14f4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x531f);
        EXPECT(gbc.pc(), 0x14f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 020E
        gbc.setState(0x6f60, 0x1de7, 0x1800, 0x3bd1, 0x7478, 0x8dee, 0x1, 0x0);
        gbc.writeMem(0x6f60, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1de7);
        EXPECT(gbc.pc(), 0x6f62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 020F
        gbc.setState(0x6d5a, 0x24f0, 0x1870, 0x515e, 0xa25b, 0x3f72, 0x1, 0x0);
        gbc.writeMem(0x6d5a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x24f0);
        EXPECT(gbc.pc(), 0x6d5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0210
        gbc.setState(0xef99, 0xe291, 0x7620, 0x1bcd, 0x2abd, 0xb2e4, 0x0, 0x0);
        gbc.writeMem(0xef99, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe291);
        EXPECT(gbc.pc(), 0xef9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef99), 0xcb);
        EXPECT(gbc.readMem(0xef9a), 0x90);
        // CB 90 0211
        gbc.setState(0xc928, 0xc946, 0x5630, 0x9fa3, 0xe5ea, 0xb31e, 0x1, 0x1);
        gbc.writeMem(0xc928, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc946);
        EXPECT(gbc.pc(), 0xc92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc928), 0xcb);
        EXPECT(gbc.readMem(0xc929), 0x90);
        // CB 90 0213
        gbc.setState(0x2efb, 0x2693, 0x44b0, 0x2066, 0x6450, 0x9d25, 0x0, 0x1);
        gbc.writeMem(0x2efb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2693);
        EXPECT(gbc.pc(), 0x2efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0214
        gbc.setState(0x7faf, 0x3792, 0x3770, 0x3b81, 0x9a55, 0xf7e2, 0x1, 0x0);
        gbc.writeMem(0x7faf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3792);
        EXPECT(gbc.pc(), 0x7fb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0215
        gbc.setState(0x6350, 0x1a78, 0xbab0, 0x733, 0xcb6f, 0x5289, 0x0, 0x0);
        gbc.writeMem(0x6350, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1a78);
        EXPECT(gbc.pc(), 0x6352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0216
        gbc.setState(0x280a, 0x449, 0x8640, 0x3442, 0xbc70, 0xa5ba, 0x1, 0x1);
        gbc.writeMem(0x280a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x449);
        EXPECT(gbc.pc(), 0x280c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0217
        gbc.setState(0xa12b, 0xd206, 0xdb00, 0x6674, 0xcb14, 0x9739, 0x1, 0x1);
        gbc.writeMem(0xa12b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd206);
        EXPECT(gbc.pc(), 0xa12d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa12b), 0xcb);
        EXPECT(gbc.readMem(0xa12c), 0x90);
        // CB 90 0218
        gbc.setState(0x19d, 0x5e2c, 0x8fb0, 0x9010, 0xb70d, 0x54df, 0x0, 0x1);
        gbc.writeMem(0x19d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0x19f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0219
        gbc.setState(0xc681, 0xdb34, 0x5df0, 0xb380, 0xbd70, 0x68c7, 0x1, 0x1);
        gbc.writeMem(0xc681, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdb34);
        EXPECT(gbc.pc(), 0xc683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc681), 0xcb);
        EXPECT(gbc.readMem(0xc682), 0x90);
        // CB 90 021A
        gbc.setState(0xd7b8, 0x33ce, 0x10a0, 0x2001, 0xb334, 0xedde, 0x1, 0x1);
        gbc.writeMem(0xd7b8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x33ce);
        EXPECT(gbc.pc(), 0xd7ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7b8), 0xcb);
        EXPECT(gbc.readMem(0xd7b9), 0x90);
        // CB 90 021B
        gbc.setState(0x80c, 0x71d5, 0x2060, 0x114f, 0x76ec, 0xaf3, 0x0, 0x0);
        gbc.writeMem(0x80c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x71d5);
        EXPECT(gbc.pc(), 0x80e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 021C
        gbc.setState(0x1d5c, 0x869a, 0x6750, 0xbc44, 0x6488, 0x79e1, 0x1, 0x1);
        gbc.writeMem(0x1d5c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0x1d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 021D
        gbc.setState(0x1288, 0xa527, 0xf730, 0xc33b, 0xf7ac, 0xf9d7, 0x1, 0x1);
        gbc.writeMem(0x1288, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa527);
        EXPECT(gbc.pc(), 0x128a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 021E
        gbc.setState(0x454d, 0xd407, 0x45a0, 0x67e8, 0xd1c, 0xff3f, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xd407);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 021F
        gbc.setState(0xbe6a, 0x1a90, 0xd820, 0x895f, 0xa330, 0x728d, 0x1, 0x1);
        gbc.writeMem(0xbe6a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1a90);
        EXPECT(gbc.pc(), 0xbe6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe6a), 0xcb);
        EXPECT(gbc.readMem(0xbe6b), 0x90);
        // CB 90 0220
        gbc.setState(0x47e7, 0xc987, 0x68b0, 0x58bd, 0xd1ee, 0x67da, 0x0, 0x1);
        gbc.writeMem(0x47e7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc987);
        EXPECT(gbc.pc(), 0x47e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0221
        gbc.setState(0x5b61, 0x46b7, 0x6ae0, 0x1031, 0x7f68, 0xbcf2, 0x0, 0x0);
        gbc.writeMem(0x5b61, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x46b7);
        EXPECT(gbc.pc(), 0x5b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0222
        gbc.setState(0x797a, 0xa70, 0x770, 0xc62, 0xf5f, 0x8ed9, 0x1, 0x1);
        gbc.writeMem(0x797a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa70);
        EXPECT(gbc.pc(), 0x797c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0223
        gbc.setState(0xc6f0, 0x1ad2, 0xae30, 0xa3ea, 0x126, 0xff26, 0x1, 0x0);
        gbc.writeMem(0xc6f0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1ad2);
        EXPECT(gbc.pc(), 0xc6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6f0), 0xcb);
        EXPECT(gbc.readMem(0xc6f1), 0x90);
        // CB 90 0224
        gbc.setState(0x1220, 0xf708, 0x4330, 0x38f0, 0x1cfe, 0xef51, 0x0, 0x1);
        gbc.writeMem(0x1220, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf708);
        EXPECT(gbc.pc(), 0x1222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0225
        gbc.setState(0xa252, 0x8c45, 0xbe0, 0x2b39, 0x1400, 0x500a, 0x1, 0x1);
        gbc.writeMem(0xa252, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8c45);
        EXPECT(gbc.pc(), 0xa254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa252), 0xcb);
        EXPECT(gbc.readMem(0xa253), 0x90);
        // CB 90 0226
        gbc.setState(0xc6e0, 0x7e96, 0xb650, 0x52f, 0x5dff, 0x297a, 0x1, 0x1);
        gbc.writeMem(0xc6e0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7e96);
        EXPECT(gbc.pc(), 0xc6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e0), 0xcb);
        EXPECT(gbc.readMem(0xc6e1), 0x90);
        // CB 90 0227
        gbc.setState(0x266a, 0x4189, 0xbc80, 0x28b2, 0xea2b, 0x1593, 0x1, 0x1);
        gbc.writeMem(0x266a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x4189);
        EXPECT(gbc.pc(), 0x266c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0228
        gbc.setState(0xbfed, 0x3323, 0xeb80, 0x6dfe, 0xa93b, 0x6ad0, 0x0, 0x1);
        gbc.writeMem(0xbfed, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3323);
        EXPECT(gbc.pc(), 0xbfef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfed), 0xcb);
        EXPECT(gbc.readMem(0xbfee), 0x90);
        // CB 90 0229
        gbc.setState(0xebf4, 0x6787, 0x7a60, 0xa030, 0xe032, 0xa1b6, 0x0, 0x1);
        gbc.writeMem(0xebf4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6787);
        EXPECT(gbc.pc(), 0xebf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf4), 0xcb);
        EXPECT(gbc.readMem(0xebf5), 0x90);
        // CB 90 022B
        gbc.setState(0xd4db, 0x559a, 0x49d0, 0x6e4e, 0x1bf1, 0xba33, 0x1, 0x1);
        gbc.writeMem(0xd4db, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x559a);
        EXPECT(gbc.pc(), 0xd4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4db), 0xcb);
        EXPECT(gbc.readMem(0xd4dc), 0x90);
        // CB 90 022C
        gbc.setState(0x1e9e, 0x1993, 0xa7a0, 0xcd4b, 0xdd48, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x1e9e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x1ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 022D
        gbc.setState(0x67a5, 0xfe98, 0x4230, 0x1fb9, 0xbbd4, 0x665f, 0x1, 0x0);
        gbc.writeMem(0x67a5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfe98);
        EXPECT(gbc.pc(), 0x67a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 022F
        gbc.setState(0xbfe2, 0xfc04, 0x9930, 0xb176, 0xc97d, 0x991c, 0x1, 0x1);
        gbc.writeMem(0xbfe2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xfc04);
        EXPECT(gbc.pc(), 0xbfe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfe2), 0xcb);
        EXPECT(gbc.readMem(0xbfe3), 0x90);
        // CB 90 0230
        gbc.setState(0x4b41, 0xd3e2, 0xf410, 0xa74d, 0xa563, 0x686b, 0x0, 0x1);
        gbc.writeMem(0x4b41, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd3e2);
        EXPECT(gbc.pc(), 0x4b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0231
        gbc.setState(0x3eea, 0x8eb8, 0x260, 0xa720, 0xb05c, 0xcf07, 0x1, 0x0);
        gbc.writeMem(0x3eea, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8eb8);
        EXPECT(gbc.pc(), 0x3eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0232
        gbc.setState(0xdb64, 0xdc53, 0xb2e0, 0x169a, 0xfdb7, 0x1341, 0x1, 0x1);
        gbc.writeMem(0xdb64, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdc53);
        EXPECT(gbc.pc(), 0xdb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb64), 0xcb);
        EXPECT(gbc.readMem(0xdb65), 0x90);
        // CB 90 0234
        gbc.setState(0x7d40, 0x3f8c, 0xb980, 0x5475, 0x820b, 0x60c8, 0x1, 0x0);
        gbc.writeMem(0x7d40, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3f8c);
        EXPECT(gbc.pc(), 0x7d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0236
        gbc.setState(0x7f50, 0x53bc, 0x8a50, 0x7e1f, 0xa8bb, 0x5151, 0x1, 0x0);
        gbc.writeMem(0x7f50, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x53bc);
        EXPECT(gbc.pc(), 0x7f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0237
        gbc.setState(0x9939, 0x8815, 0x62d0, 0x1b86, 0xf1c7, 0x1bd7, 0x0, 0x0);
        gbc.writeMem(0x9939, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8815);
        EXPECT(gbc.pc(), 0x993b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9939), 0xcb);
        EXPECT(gbc.readMem(0x993a), 0x90);
        // CB 90 0238
        gbc.setState(0x62cf, 0x285f, 0xb950, 0x9be9, 0x4fbe, 0xb620, 0x0, 0x0);
        gbc.writeMem(0x62cf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x285f);
        EXPECT(gbc.pc(), 0x62d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0239
        gbc.setState(0xa70, 0xf518, 0xd0, 0x386, 0x6d1a, 0x6061, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf518);
        EXPECT(gbc.pc(), 0xa72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 023A
        gbc.setState(0x27a8, 0xa253, 0x5d00, 0x992b, 0x1063, 0x6b2d, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0x27aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 023B
        gbc.setState(0x3386, 0x2, 0x7a50, 0xf285, 0xfd14, 0xfa8d, 0x1, 0x0);
        gbc.writeMem(0x3386, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2);
        EXPECT(gbc.pc(), 0x3388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 023C
        gbc.setState(0x83dc, 0x26f0, 0xb280, 0xaf59, 0xf493, 0xc5e2, 0x1, 0x1);
        gbc.writeMem(0x83dc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x26f0);
        EXPECT(gbc.pc(), 0x83de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83dc), 0xcb);
        EXPECT(gbc.readMem(0x83dd), 0x90);
        // CB 90 023D
        gbc.setState(0xc666, 0xd7f6, 0x4d30, 0x43a8, 0x822f, 0x75c5, 0x0, 0x1);
        gbc.writeMem(0xc666, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xd7f6);
        EXPECT(gbc.pc(), 0xc668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc666), 0xcb);
        EXPECT(gbc.readMem(0xc667), 0x90);
        // CB 90 023E
        gbc.setState(0x5752, 0x9f76, 0xda00, 0xdb38, 0x26d1, 0x414f, 0x1, 0x1);
        gbc.writeMem(0x5752, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9f76);
        EXPECT(gbc.pc(), 0x5754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 023F
        gbc.setState(0x5d5c, 0xac35, 0xdbe0, 0x3e56, 0x7e5b, 0xa791, 0x0, 0x1);
        gbc.writeMem(0x5d5c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xac35);
        EXPECT(gbc.pc(), 0x5d5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0240
        gbc.setState(0xed82, 0x252, 0x1f80, 0xdf8d, 0x9026, 0x6a98, 0x1, 0x1);
        gbc.writeMem(0xed82, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x252);
        EXPECT(gbc.pc(), 0xed84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed82), 0xcb);
        EXPECT(gbc.readMem(0xed83), 0x90);
        // CB 90 0241
        gbc.setState(0xa9fc, 0x5ccb, 0x8110, 0x3771, 0xd3ba, 0xa094, 0x1, 0x0);
        gbc.writeMem(0xa9fc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5ccb);
        EXPECT(gbc.pc(), 0xa9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fc), 0xcb);
        EXPECT(gbc.readMem(0xa9fd), 0x90);
        // CB 90 0242
        gbc.setState(0x2bd2, 0x6f54, 0xb760, 0x3cd, 0xe5ff, 0x53c0, 0x1, 0x0);
        gbc.writeMem(0x2bd2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x6f54);
        EXPECT(gbc.pc(), 0x2bd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0243
        gbc.setState(0xbed5, 0x948c, 0x4d80, 0x1090, 0xcb6b, 0x3c4, 0x0, 0x1);
        gbc.writeMem(0xbed5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x948c);
        EXPECT(gbc.pc(), 0xbed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed5), 0xcb);
        EXPECT(gbc.readMem(0xbed6), 0x90);
        // CB 90 0244
        gbc.setState(0x1ce5, 0x1347, 0x2100, 0xa576, 0x6092, 0xd636, 0x1, 0x0);
        gbc.writeMem(0x1ce5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1347);
        EXPECT(gbc.pc(), 0x1ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0245
        gbc.setState(0xb438, 0xd7dc, 0xd980, 0x2476, 0xae8, 0x8d7b, 0x0, 0x0);
        gbc.writeMem(0xb438, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd7dc);
        EXPECT(gbc.pc(), 0xb43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb438), 0xcb);
        EXPECT(gbc.readMem(0xb439), 0x90);
        // CB 90 0246
        gbc.setState(0x1eda, 0x9a37, 0x75f0, 0x647b, 0xf3b0, 0x92a6, 0x0, 0x1);
        gbc.writeMem(0x1eda, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9a37);
        EXPECT(gbc.pc(), 0x1edc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0247
        gbc.setState(0x3387, 0xe37c, 0x50a0, 0x5377, 0xd991, 0x3e66, 0x0, 0x1);
        gbc.writeMem(0x3387, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe37c);
        EXPECT(gbc.pc(), 0x3389);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0248
        gbc.setState(0xb921, 0x8ae7, 0x750, 0xa6b7, 0xeaf0, 0xbfb2, 0x0, 0x1);
        gbc.writeMem(0xb921, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8ae7);
        EXPECT(gbc.pc(), 0xb923);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb921), 0xcb);
        EXPECT(gbc.readMem(0xb922), 0x90);
        // CB 90 0249
        gbc.setState(0x933c, 0x690f, 0x5b80, 0x7463, 0x5888, 0x9ece, 0x1, 0x0);
        gbc.writeMem(0x933c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x690f);
        EXPECT(gbc.pc(), 0x933e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933c), 0xcb);
        EXPECT(gbc.readMem(0x933d), 0x90);
        // CB 90 024A
        gbc.setState(0xcb59, 0xba3c, 0x5710, 0xc23b, 0xbb5a, 0x17df, 0x1, 0x1);
        gbc.writeMem(0xcb59, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xba3c);
        EXPECT(gbc.pc(), 0xcb5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb59), 0xcb);
        EXPECT(gbc.readMem(0xcb5a), 0x90);
        // CB 90 024B
        gbc.setState(0xd696, 0xb148, 0x4710, 0x661b, 0x10aa, 0xe7fd, 0x1, 0x1);
        gbc.writeMem(0xd696, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb148);
        EXPECT(gbc.pc(), 0xd698);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd696), 0xcb);
        EXPECT(gbc.readMem(0xd697), 0x90);
        // CB 90 024C
        gbc.setState(0x2ba5, 0x87fb, 0xf00, 0xafef, 0x4737, 0xab39, 0x0, 0x0);
        gbc.writeMem(0x2ba5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x87fb);
        EXPECT(gbc.pc(), 0x2ba7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 024D
        gbc.setState(0x7f57, 0x3025, 0x4060, 0x605f, 0xaf97, 0x4458, 0x1, 0x0);
        gbc.writeMem(0x7f57, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3025);
        EXPECT(gbc.pc(), 0x7f59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 024E
        gbc.setState(0x583d, 0x8ec8, 0x7160, 0x1005, 0xf48f, 0x8296, 0x0, 0x0);
        gbc.writeMem(0x583d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x8ec8);
        EXPECT(gbc.pc(), 0x583f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 024F
        gbc.setState(0x2401, 0xa299, 0x9870, 0xafc6, 0x2889, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0x2401, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa299);
        EXPECT(gbc.pc(), 0x2403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0250
        gbc.setState(0xa82d, 0x6543, 0x71e0, 0xba20, 0xeee8, 0xae66, 0x0, 0x1);
        gbc.writeMem(0xa82d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6543);
        EXPECT(gbc.pc(), 0xa82f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82d), 0xcb);
        EXPECT(gbc.readMem(0xa82e), 0x90);
        // CB 90 0251
        gbc.setState(0x84b, 0x9301, 0xedf0, 0xae02, 0xd674, 0xa01f, 0x0, 0x0);
        gbc.writeMem(0x84b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9301);
        EXPECT(gbc.pc(), 0x84d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0252
        gbc.setState(0x4bd4, 0x2f4f, 0xe0c0, 0xcf86, 0xc79d, 0x3d51, 0x1, 0x0);
        gbc.writeMem(0x4bd4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2f4f);
        EXPECT(gbc.pc(), 0x4bd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0253
        gbc.setState(0xae53, 0x93bd, 0x59c0, 0xee7f, 0xf09c, 0xc2dc, 0x0, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x93bd);
        EXPECT(gbc.pc(), 0xae55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae53), 0xcb);
        EXPECT(gbc.readMem(0xae54), 0x90);
        // CB 90 0254
        gbc.setState(0xbd88, 0xb4c4, 0x23d0, 0x783e, 0x59cd, 0x41a1, 0x1, 0x0);
        gbc.writeMem(0xbd88, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb4c4);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd88), 0xcb);
        EXPECT(gbc.readMem(0xbd89), 0x90);
        // CB 90 0255
        gbc.setState(0x79a8, 0xc6bf, 0x88a0, 0x3342, 0xc757, 0x448d, 0x0, 0x0);
        gbc.writeMem(0x79a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc6bf);
        EXPECT(gbc.pc(), 0x79aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0256
        gbc.setState(0x150e, 0x948f, 0xac0, 0xacca, 0x48a7, 0xcbe3, 0x0, 0x0);
        gbc.writeMem(0x150e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x948f);
        EXPECT(gbc.pc(), 0x1510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0257
        gbc.setState(0xa908, 0xeaa7, 0x9a60, 0x24a0, 0xa63, 0x1ef1, 0x0, 0x0);
        gbc.writeMem(0xa908, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xeaa7);
        EXPECT(gbc.pc(), 0xa90a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa908), 0xcb);
        EXPECT(gbc.readMem(0xa909), 0x90);
        // CB 90 0258
        gbc.setState(0xac39, 0xfb62, 0xc4b0, 0xe9ae, 0x42f3, 0x3183, 0x0, 0x1);
        gbc.writeMem(0xac39, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xfb62);
        EXPECT(gbc.pc(), 0xac3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac39), 0xcb);
        EXPECT(gbc.readMem(0xac3a), 0x90);
        // CB 90 0259
        gbc.setState(0x6b02, 0xf571, 0xedb0, 0xe8ff, 0xdabb, 0x48e5, 0x0, 0x1);
        gbc.writeMem(0x6b02, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf571);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 025B
        gbc.setState(0xa87, 0x5b7a, 0x6f70, 0x3eef, 0xe16d, 0x84f5, 0x1, 0x0);
        gbc.writeMem(0xa87, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5b7a);
        EXPECT(gbc.pc(), 0xa89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 025C
        gbc.setState(0x7914, 0x5afb, 0xf0d0, 0x56c0, 0x7ee6, 0xfd2f, 0x1, 0x0);
        gbc.writeMem(0x7914, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5afb);
        EXPECT(gbc.pc(), 0x7916);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 025D
        gbc.setState(0x5cc6, 0xfbcf, 0x1200, 0x2957, 0x6f3f, 0xea96, 0x0, 0x1);
        gbc.writeMem(0x5cc6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfbcf);
        EXPECT(gbc.pc(), 0x5cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 025E
        gbc.setState(0xc8a6, 0x249a, 0xb7a0, 0xc8c, 0xd398, 0xbae1, 0x1, 0x1);
        gbc.writeMem(0xc8a6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x249a);
        EXPECT(gbc.pc(), 0xc8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a6), 0xcb);
        EXPECT(gbc.readMem(0xc8a7), 0x90);
        // CB 90 025F
        gbc.setState(0x9af8, 0x385, 0x8b50, 0x1b3c, 0xea88, 0x4bf9, 0x0, 0x1);
        gbc.writeMem(0x9af8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x385);
        EXPECT(gbc.pc(), 0x9afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af8), 0xcb);
        EXPECT(gbc.readMem(0x9af9), 0x90);
        // CB 90 0260
        gbc.setState(0x6227, 0x9ce2, 0x1580, 0x8ac5, 0xd713, 0x15fd, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9ce2);
        EXPECT(gbc.pc(), 0x6229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0261
        gbc.setState(0xa1d0, 0x8a47, 0xa830, 0x29d7, 0x475e, 0x6918, 0x0, 0x0);
        gbc.writeMem(0xa1d0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8a47);
        EXPECT(gbc.pc(), 0xa1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1d0), 0xcb);
        EXPECT(gbc.readMem(0xa1d1), 0x90);
        // CB 90 0262
        gbc.setState(0x9c95, 0x843f, 0x60c0, 0x541, 0x7fe, 0x3542, 0x0, 0x1);
        gbc.writeMem(0x9c95, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x843f);
        EXPECT(gbc.pc(), 0x9c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c95), 0xcb);
        EXPECT(gbc.readMem(0x9c96), 0x90);
        // CB 90 0263
        gbc.setState(0xcc5a, 0x25b5, 0x7ec0, 0xb637, 0x40f1, 0xc8d2, 0x0, 0x1);
        gbc.writeMem(0xcc5a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x25b5);
        EXPECT(gbc.pc(), 0xcc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5a), 0xcb);
        EXPECT(gbc.readMem(0xcc5b), 0x90);
        // CB 90 0264
        gbc.setState(0x1dc4, 0xc6d2, 0x100, 0xbf8, 0xa12d, 0x48da, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc6d2);
        EXPECT(gbc.pc(), 0x1dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0265
        gbc.setState(0xd5d0, 0xc24a, 0x14c0, 0x7c75, 0xee44, 0xbb93, 0x1, 0x0);
        gbc.writeMem(0xd5d0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc24a);
        EXPECT(gbc.pc(), 0xd5d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5d0), 0xcb);
        EXPECT(gbc.readMem(0xd5d1), 0x90);
        // CB 90 0266
        gbc.setState(0x7f8c, 0x8b1d, 0x39e0, 0xc82b, 0x3e1a, 0x5d9d, 0x0, 0x1);
        gbc.writeMem(0x7f8c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x8b1d);
        EXPECT(gbc.pc(), 0x7f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0267
        gbc.setState(0xe448, 0x91a2, 0xfd50, 0xf93, 0xa447, 0x2dcb, 0x1, 0x0);
        gbc.writeMem(0xe448, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x91a2);
        EXPECT(gbc.pc(), 0xe44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe448), 0xcb);
        EXPECT(gbc.readMem(0xe449), 0x90);
        // CB 90 0268
        gbc.setState(0xdd6d, 0x206c, 0x720, 0x3e58, 0x998, 0x86a7, 0x1, 0x1);
        gbc.writeMem(0xdd6d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x206c);
        EXPECT(gbc.pc(), 0xdd6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd6d), 0xcb);
        EXPECT(gbc.readMem(0xdd6e), 0x90);
        // CB 90 026A
        gbc.setState(0x8bca, 0x55c3, 0x5170, 0xbcbf, 0xb20f, 0x22b5, 0x1, 0x1);
        gbc.writeMem(0x8bca, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x55c3);
        EXPECT(gbc.pc(), 0x8bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bca), 0xcb);
        EXPECT(gbc.readMem(0x8bcb), 0x90);
        // CB 90 026B
        gbc.setState(0xa311, 0xae06, 0xb3a0, 0xbaa9, 0xf0d9, 0x56e6, 0x1, 0x0);
        gbc.writeMem(0xa311, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xae06);
        EXPECT(gbc.pc(), 0xa313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa311), 0xcb);
        EXPECT(gbc.readMem(0xa312), 0x90);
        // CB 90 026C
        gbc.setState(0x7e9, 0x1f9c, 0xc080, 0xb364, 0x397c, 0xd8a0, 0x1, 0x0);
        gbc.writeMem(0x7e9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1f9c);
        EXPECT(gbc.pc(), 0x7eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 026D
        gbc.setState(0xaa81, 0x7292, 0x9a90, 0x3764, 0xaae8, 0x6867, 0x1, 0x0);
        gbc.writeMem(0xaa81, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7292);
        EXPECT(gbc.pc(), 0xaa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa81), 0xcb);
        EXPECT(gbc.readMem(0xaa82), 0x90);
        // CB 90 026E
        gbc.setState(0x9574, 0xa770, 0x2b00, 0x300, 0x9544, 0x8b9, 0x0, 0x1);
        gbc.writeMem(0x9574, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa770);
        EXPECT(gbc.pc(), 0x9576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9574), 0xcb);
        EXPECT(gbc.readMem(0x9575), 0x90);
        // CB 90 026F
        gbc.setState(0x5736, 0x28d8, 0xd770, 0x93a, 0x59cd, 0x32f9, 0x1, 0x0);
        gbc.writeMem(0x5736, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x28d8);
        EXPECT(gbc.pc(), 0x5738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0270
        gbc.setState(0xce08, 0x3ee6, 0xf200, 0x58c2, 0xf00a, 0x7eac, 0x1, 0x1);
        gbc.writeMem(0xce08, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3ee6);
        EXPECT(gbc.pc(), 0xce0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce08), 0xcb);
        EXPECT(gbc.readMem(0xce09), 0x90);
        // CB 90 0271
        gbc.setState(0x17bd, 0x5985, 0x8360, 0x6d20, 0xaf24, 0x7360, 0x0, 0x1);
        gbc.writeMem(0x17bd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5985);
        EXPECT(gbc.pc(), 0x17bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0272
        gbc.setState(0x9045, 0x35b3, 0x3760, 0xf121, 0xff27, 0x527f, 0x1, 0x1);
        gbc.writeMem(0x9045, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x35b3);
        EXPECT(gbc.pc(), 0x9047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9045), 0xcb);
        EXPECT(gbc.readMem(0x9046), 0x90);
        // CB 90 0273
        gbc.setState(0x87ee, 0x1c07, 0x6890, 0x790a, 0xf2e2, 0xd3b5, 0x0, 0x1);
        gbc.writeMem(0x87ee, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1c07);
        EXPECT(gbc.pc(), 0x87f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87ee), 0xcb);
        EXPECT(gbc.readMem(0x87ef), 0x90);
        // CB 90 0274
        gbc.setState(0x6c06, 0xa20, 0x11a0, 0xb3d6, 0x4f88, 0xc96d, 0x0, 0x0);
        gbc.writeMem(0x6c06, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa20);
        EXPECT(gbc.pc(), 0x6c08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0275
        gbc.setState(0x2628, 0x1e2b, 0xccd0, 0x1e68, 0x5b7d, 0x5782, 0x1, 0x1);
        gbc.writeMem(0x2628, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1e2b);
        EXPECT(gbc.pc(), 0x262a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0276
        gbc.setState(0x8514, 0x57d8, 0x5c40, 0xc408, 0x6fcc, 0xefa1, 0x1, 0x1);
        gbc.writeMem(0x8514, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x57d8);
        EXPECT(gbc.pc(), 0x8516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8514), 0xcb);
        EXPECT(gbc.readMem(0x8515), 0x90);
        // CB 90 0277
        gbc.setState(0xbffb, 0xac7f, 0x2bb0, 0x7662, 0x5996, 0xed18, 0x1, 0x0);
        gbc.writeMem(0xbffb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xac7f);
        EXPECT(gbc.pc(), 0xbffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffb), 0xcb);
        EXPECT(gbc.readMem(0xbffc), 0x90);
        // CB 90 0278
        gbc.setState(0x5cbe, 0x64bd, 0x67a0, 0x21a6, 0xb513, 0x72d6, 0x0, 0x0);
        gbc.writeMem(0x5cbe, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x64bd);
        EXPECT(gbc.pc(), 0x5cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0279
        gbc.setState(0x8f01, 0xabaf, 0x2c90, 0x3aca, 0x3b9a, 0xfb84, 0x0, 0x1);
        gbc.writeMem(0x8f01, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xabaf);
        EXPECT(gbc.pc(), 0x8f03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f01), 0xcb);
        EXPECT(gbc.readMem(0x8f02), 0x90);
        // CB 90 027A
        gbc.setState(0x38dd, 0x434, 0x2b40, 0x3bf, 0x3f27, 0xa4e6, 0x0, 0x1);
        gbc.writeMem(0x38dd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x434);
        EXPECT(gbc.pc(), 0x38df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 027B
        gbc.setState(0xb0eb, 0xc250, 0xf640, 0xd32a, 0x20e1, 0x828f, 0x1, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc250);
        EXPECT(gbc.pc(), 0xb0ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0eb), 0xcb);
        EXPECT(gbc.readMem(0xb0ec), 0x90);
        // CB 90 027C
        gbc.setState(0xeb2d, 0x539b, 0x150, 0x3eed, 0x356e, 0xae8, 0x0, 0x1);
        gbc.writeMem(0xeb2d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x539b);
        EXPECT(gbc.pc(), 0xeb2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2d), 0xcb);
        EXPECT(gbc.readMem(0xeb2e), 0x90);
        // CB 90 027D
        gbc.setState(0xa152, 0xcc8d, 0x6e90, 0x7ca8, 0xa61b, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0xa152, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcc8d);
        EXPECT(gbc.pc(), 0xa154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa152), 0xcb);
        EXPECT(gbc.readMem(0xa153), 0x90);
        // CB 90 027E
        gbc.setState(0x3932, 0x898c, 0xf900, 0xc02e, 0x2233, 0x8085, 0x0, 0x0);
        gbc.writeMem(0x3932, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x898c);
        EXPECT(gbc.pc(), 0x3934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 027F
        gbc.setState(0x961e, 0xe83c, 0xed00, 0x1c15, 0x2e9a, 0xabed, 0x1, 0x1);
        gbc.writeMem(0x961e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe83c);
        EXPECT(gbc.pc(), 0x9620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x961e), 0xcb);
        EXPECT(gbc.readMem(0x961f), 0x90);
        // CB 90 0280
        gbc.setState(0x66df, 0x744a, 0x1ba0, 0xe869, 0x46b7, 0x8466, 0x0, 0x0);
        gbc.writeMem(0x66df, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x744a);
        EXPECT(gbc.pc(), 0x66e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0281
        gbc.setState(0x6360, 0x31e0, 0xcf80, 0x8ecf, 0xa642, 0xe49a, 0x1, 0x0);
        gbc.writeMem(0x6360, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x31e0);
        EXPECT(gbc.pc(), 0x6362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0282
        gbc.setState(0xeacd, 0xfd5b, 0x74f0, 0x9ad5, 0x8d29, 0xc5e5, 0x0, 0x0);
        gbc.writeMem(0xeacd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfd5b);
        EXPECT(gbc.pc(), 0xeacf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeacd), 0xcb);
        EXPECT(gbc.readMem(0xeace), 0x90);
        // CB 90 0283
        gbc.setState(0x4308, 0x2e98, 0xfe10, 0x8fa5, 0xf56e, 0x952e, 0x1, 0x0);
        gbc.writeMem(0x4308, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2e98);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0284
        gbc.setState(0x32b0, 0x3f93, 0xaaf0, 0x88d2, 0x6b25, 0x4407, 0x1, 0x0);
        gbc.writeMem(0x32b0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3f93);
        EXPECT(gbc.pc(), 0x32b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0285
        gbc.setState(0xea9a, 0x8bce, 0x2120, 0x8bcf, 0xf8d0, 0x2454, 0x1, 0x0);
        gbc.writeMem(0xea9a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8bce);
        EXPECT(gbc.pc(), 0xea9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9a), 0xcb);
        EXPECT(gbc.readMem(0xea9b), 0x90);
        // CB 90 0286
        gbc.setState(0xa291, 0xbe74, 0xf5d0, 0xf3b, 0x4916, 0x4b1, 0x0, 0x0);
        gbc.writeMem(0xa291, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbe74);
        EXPECT(gbc.pc(), 0xa293);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa291), 0xcb);
        EXPECT(gbc.readMem(0xa292), 0x90);
        // CB 90 0287
        gbc.setState(0x2cdc, 0xa552, 0xf60, 0x94db, 0x5adf, 0x2627, 0x0, 0x1);
        gbc.writeMem(0x2cdc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa552);
        EXPECT(gbc.pc(), 0x2cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0288
        gbc.setState(0x90b1, 0x7cac, 0x2380, 0xaa05, 0x1a92, 0x10f2, 0x0, 0x1);
        gbc.writeMem(0x90b1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7cac);
        EXPECT(gbc.pc(), 0x90b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90b1), 0xcb);
        EXPECT(gbc.readMem(0x90b2), 0x90);
        // CB 90 0289
        gbc.setState(0xdda2, 0xc2a1, 0xb6d0, 0x4c8e, 0x3195, 0x6f0b, 0x0, 0x0);
        gbc.writeMem(0xdda2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc2a1);
        EXPECT(gbc.pc(), 0xdda4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda2), 0xcb);
        EXPECT(gbc.readMem(0xdda3), 0x90);
        // CB 90 028A
        gbc.setState(0x45bf, 0xd163, 0x8970, 0x6846, 0x5174, 0x5dbe, 0x1, 0x1);
        gbc.writeMem(0x45bf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd163);
        EXPECT(gbc.pc(), 0x45c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 028B
        gbc.setState(0x1abb, 0xf6cf, 0x6e60, 0x94eb, 0x395b, 0x2f4d, 0x0, 0x0);
        gbc.writeMem(0x1abb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf6cf);
        EXPECT(gbc.pc(), 0x1abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 028C
        gbc.setState(0xc0aa, 0x7551, 0x1b00, 0x5247, 0xb5bd, 0xd7d2, 0x1, 0x1);
        gbc.writeMem(0xc0aa, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7551);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0aa), 0xcb);
        EXPECT(gbc.readMem(0xc0ab), 0x90);
        // CB 90 028D
        gbc.setState(0x17de, 0xc782, 0x300, 0xcd62, 0xac09, 0x432, 0x1, 0x1);
        gbc.writeMem(0x17de, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc782);
        EXPECT(gbc.pc(), 0x17e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 028E
        gbc.setState(0x62eb, 0x95fa, 0x8820, 0xb61a, 0xaa09, 0xfe1f, 0x1, 0x0);
        gbc.writeMem(0x62eb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x95fa);
        EXPECT(gbc.pc(), 0x62ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 028F
        gbc.setState(0xc0ea, 0xa5e7, 0xa3e0, 0xbfaf, 0x287a, 0x9083, 0x0, 0x0);
        gbc.writeMem(0xc0ea, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa5e7);
        EXPECT(gbc.pc(), 0xc0ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ea), 0xcb);
        EXPECT(gbc.readMem(0xc0eb), 0x90);
        // CB 90 0290
        gbc.setState(0xc102, 0xafcb, 0xa860, 0x615b, 0x8c59, 0xceb, 0x1, 0x0);
        gbc.writeMem(0xc102, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xafcb);
        EXPECT(gbc.pc(), 0xc104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc102), 0xcb);
        EXPECT(gbc.readMem(0xc103), 0x90);
        // CB 90 0291
        gbc.setState(0x229, 0x6b3, 0x2ba0, 0x25c2, 0xb5f4, 0xb143, 0x1, 0x0);
        gbc.writeMem(0x229, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6b3);
        EXPECT(gbc.pc(), 0x22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0292
        gbc.setState(0x20d2, 0xcb1c, 0x4ea0, 0x224, 0xddd6, 0x1f87, 0x1, 0x1);
        gbc.writeMem(0x20d2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xcb1c);
        EXPECT(gbc.pc(), 0x20d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0293
        gbc.setState(0xa7b4, 0x4c17, 0xed0, 0x3ecb, 0x92d0, 0xafb2, 0x1, 0x1);
        gbc.writeMem(0xa7b4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4c17);
        EXPECT(gbc.pc(), 0xa7b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b4), 0xcb);
        EXPECT(gbc.readMem(0xa7b5), 0x90);
        // CB 90 0294
        gbc.setState(0x3884, 0x3423, 0xf110, 0x3439, 0x3d81, 0x8757, 0x1, 0x1);
        gbc.writeMem(0x3884, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3423);
        EXPECT(gbc.pc(), 0x3886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0295
        gbc.setState(0x9d8, 0x21f0, 0x1d40, 0x5342, 0xcadc, 0xebfc, 0x1, 0x1);
        gbc.writeMem(0x9d8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x21f0);
        EXPECT(gbc.pc(), 0x9da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0296
        gbc.setState(0xd826, 0x298f, 0xe8e0, 0x4499, 0x9ed3, 0x1f63, 0x1, 0x0);
        gbc.writeMem(0xd826, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x298f);
        EXPECT(gbc.pc(), 0xd828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd826), 0xcb);
        EXPECT(gbc.readMem(0xd827), 0x90);
        // CB 90 0297
        gbc.setState(0x6291, 0x9779, 0x62f0, 0x43a5, 0x49bf, 0x7a5c, 0x1, 0x0);
        gbc.writeMem(0x6291, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9779);
        EXPECT(gbc.pc(), 0x6293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0298
        gbc.setState(0x4ec9, 0xe931, 0xe2d0, 0x29bc, 0x3457, 0xb5d7, 0x1, 0x1);
        gbc.writeMem(0x4ec9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe931);
        EXPECT(gbc.pc(), 0x4ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0299
        gbc.setState(0x7d30, 0xcc30, 0x79c0, 0xfbbe, 0x2bce, 0xfe0c, 0x1, 0x0);
        gbc.writeMem(0x7d30, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcc30);
        EXPECT(gbc.pc(), 0x7d32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 029A
        gbc.setState(0x62f1, 0x74ce, 0x4a0, 0x3a45, 0x2db8, 0x94f6, 0x0, 0x1);
        gbc.writeMem(0x62f1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x74ce);
        EXPECT(gbc.pc(), 0x62f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 029B
        gbc.setState(0xb46b, 0xe83b, 0x9010, 0xf545, 0xcbe4, 0x1198, 0x1, 0x0);
        gbc.writeMem(0xb46b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xe83b);
        EXPECT(gbc.pc(), 0xb46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb46b), 0xcb);
        EXPECT(gbc.readMem(0xb46c), 0x90);
        // CB 90 029C
        gbc.setState(0xdb66, 0xcbe3, 0x9cf0, 0x2c8f, 0xc0b, 0x39a7, 0x1, 0x1);
        gbc.writeMem(0xdb66, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcbe3);
        EXPECT(gbc.pc(), 0xdb68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb66), 0xcb);
        EXPECT(gbc.readMem(0xdb67), 0x90);
        // CB 90 029D
        gbc.setState(0x9a3c, 0xd49c, 0x6950, 0xdeb3, 0xa6ca, 0x47ba, 0x1, 0x1);
        gbc.writeMem(0x9a3c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd49c);
        EXPECT(gbc.pc(), 0x9a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3c), 0xcb);
        EXPECT(gbc.readMem(0x9a3d), 0x90);
        // CB 90 029E
        gbc.setState(0x3dcd, 0xd3fa, 0xf690, 0xa846, 0xe580, 0x7143, 0x1, 0x1);
        gbc.writeMem(0x3dcd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd3fa);
        EXPECT(gbc.pc(), 0x3dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 029F
        gbc.setState(0x511a, 0xa9e0, 0x7e80, 0x411c, 0xae1b, 0x114d, 0x0, 0x1);
        gbc.writeMem(0x511a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa9e0);
        EXPECT(gbc.pc(), 0x511c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02A0
        gbc.setState(0xde46, 0xa030, 0x2ac0, 0xc4aa, 0xf9e7, 0xb9a7, 0x0, 0x0);
        gbc.writeMem(0xde46, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa030);
        EXPECT(gbc.pc(), 0xde48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde46), 0xcb);
        EXPECT(gbc.readMem(0xde47), 0x90);
        // CB 90 02A1
        gbc.setState(0x2982, 0x9f32, 0xbd20, 0x5136, 0x70c4, 0xe6d2, 0x0, 0x0);
        gbc.writeMem(0x2982, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9f32);
        EXPECT(gbc.pc(), 0x2984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02A2
        gbc.setState(0x4727, 0x6672, 0xc620, 0xb59d, 0x7c59, 0x9e49, 0x0, 0x1);
        gbc.writeMem(0x4727, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x6672);
        EXPECT(gbc.pc(), 0x4729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02A3
        gbc.setState(0x4e3, 0x47e1, 0x94d0, 0x872b, 0x6191, 0x48ff, 0x0, 0x1);
        gbc.writeMem(0x4e3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x47e1);
        EXPECT(gbc.pc(), 0x4e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02A4
        gbc.setState(0xd07a, 0xca25, 0x87b0, 0x18e, 0x999b, 0x663a, 0x0, 0x1);
        gbc.writeMem(0xd07a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xca25);
        EXPECT(gbc.pc(), 0xd07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07a), 0xcb);
        EXPECT(gbc.readMem(0xd07b), 0x90);
        // CB 90 02A5
        gbc.setState(0xd8d3, 0xdc6f, 0xa10, 0x80b7, 0xcde5, 0x6449, 0x0, 0x1);
        gbc.writeMem(0xd8d3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xdc6f);
        EXPECT(gbc.pc(), 0xd8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d3), 0xcb);
        EXPECT(gbc.readMem(0xd8d4), 0x90);
        // CB 90 02A6
        gbc.setState(0xd293, 0x5f23, 0x8600, 0x1bf, 0x27ef, 0x70f8, 0x0, 0x0);
        gbc.writeMem(0xd293, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5f23);
        EXPECT(gbc.pc(), 0xd295);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd293), 0xcb);
        EXPECT(gbc.readMem(0xd294), 0x90);
        // CB 90 02A7
        gbc.setState(0xbdb3, 0xf586, 0x98a0, 0x98ea, 0xc7e, 0xa401, 0x1, 0x0);
        gbc.writeMem(0xbdb3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf586);
        EXPECT(gbc.pc(), 0xbdb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb3), 0xcb);
        EXPECT(gbc.readMem(0xbdb4), 0x90);
        // CB 90 02A8
        gbc.setState(0x6990, 0xb407, 0x9700, 0xa0a3, 0x9606, 0x1c1b, 0x0, 0x0);
        gbc.writeMem(0x6990, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb407);
        EXPECT(gbc.pc(), 0x6992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02A9
        gbc.setState(0x2376, 0x8df7, 0x1b30, 0xe0f1, 0xc3ff, 0x56da, 0x1, 0x1);
        gbc.writeMem(0x2376, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8df7);
        EXPECT(gbc.pc(), 0x2378);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02AA
        gbc.setState(0xc244, 0xd1c2, 0x86a0, 0x5a92, 0x531f, 0x5292, 0x0, 0x0);
        gbc.writeMem(0xc244, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd1c2);
        EXPECT(gbc.pc(), 0xc246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc244), 0xcb);
        EXPECT(gbc.readMem(0xc245), 0x90);
        // CB 90 02AB
        gbc.setState(0x5839, 0xa950, 0x6a0, 0x44bc, 0xe8a5, 0x41a8, 0x1, 0x0);
        gbc.writeMem(0x5839, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xa950);
        EXPECT(gbc.pc(), 0x583b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02AC
        gbc.setState(0x8d19, 0x2bfa, 0xb6b0, 0x4cf2, 0x1ea0, 0x3e5c, 0x0, 0x0);
        gbc.writeMem(0x8d19, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2bfa);
        EXPECT(gbc.pc(), 0x8d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d19), 0xcb);
        EXPECT(gbc.readMem(0x8d1a), 0x90);
        // CB 90 02AD
        gbc.setState(0x8067, 0x8ccd, 0x1450, 0x25f6, 0x8c58, 0xbf13, 0x1, 0x1);
        gbc.writeMem(0x8067, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x8069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8067), 0xcb);
        EXPECT(gbc.readMem(0x8068), 0x90);
        // CB 90 02AE
        gbc.setState(0x3418, 0x30ab, 0x14a0, 0x9d8f, 0x8f48, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0x3418, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x30ab);
        EXPECT(gbc.pc(), 0x341a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02AF
        gbc.setState(0x69a6, 0x7faa, 0x5c50, 0xc519, 0x7b49, 0xc50b, 0x1, 0x1);
        gbc.writeMem(0x69a6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7faa);
        EXPECT(gbc.pc(), 0x69a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02B0
        gbc.setState(0xebcb, 0xb539, 0x7f30, 0x8ef8, 0xd0cc, 0x214b, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0xebcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcb), 0xcb);
        EXPECT(gbc.readMem(0xebcc), 0x90);
        // CB 90 02B1
        gbc.setState(0x7f05, 0xf20f, 0xdaf0, 0x828, 0xb380, 0x64b, 0x1, 0x1);
        gbc.writeMem(0x7f05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf20f);
        EXPECT(gbc.pc(), 0x7f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02B2
        gbc.setState(0x36d2, 0x352d, 0x2e60, 0x2aee, 0x9d, 0xe369, 0x1, 0x0);
        gbc.writeMem(0x36d2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x352d);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02B3
        gbc.setState(0xa1e4, 0x66c1, 0xd10, 0xb767, 0xe613, 0xad51, 0x1, 0x0);
        gbc.writeMem(0xa1e4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0xa1e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e4), 0xcb);
        EXPECT(gbc.readMem(0xa1e5), 0x90);
        // CB 90 02B4
        gbc.setState(0xbfc0, 0xfd90, 0x30e0, 0xcac, 0x6eef, 0xdc45, 0x0, 0x0);
        gbc.writeMem(0xbfc0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfd90);
        EXPECT(gbc.pc(), 0xbfc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc0), 0xcb);
        EXPECT(gbc.readMem(0xbfc1), 0x90);
        // CB 90 02B5
        gbc.setState(0xcc63, 0xb627, 0x48b0, 0xe557, 0x4577, 0x7fe3, 0x1, 0x0);
        gbc.writeMem(0xcc63, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb627);
        EXPECT(gbc.pc(), 0xcc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc63), 0xcb);
        EXPECT(gbc.readMem(0xcc64), 0x90);
        // CB 90 02B6
        gbc.setState(0x760b, 0x566a, 0xb000, 0x4bc0, 0xa890, 0x3dc8, 0x0, 0x1);
        gbc.writeMem(0x760b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x566a);
        EXPECT(gbc.pc(), 0x760d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02B7
        gbc.setState(0x1e4b, 0xf2f5, 0x4400, 0x689b, 0xc9af, 0x24a, 0x0, 0x1);
        gbc.writeMem(0x1e4b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf2f5);
        EXPECT(gbc.pc(), 0x1e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02B8
        gbc.setState(0x69f7, 0xed0a, 0x11d0, 0x4687, 0x4675, 0xf660, 0x0, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xed0a);
        EXPECT(gbc.pc(), 0x69f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02B9
        gbc.setState(0xe2d0, 0x5379, 0xb690, 0xe484, 0x8937, 0xe1aa, 0x0, 0x0);
        gbc.writeMem(0xe2d0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5379);
        EXPECT(gbc.pc(), 0xe2d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d0), 0xcb);
        EXPECT(gbc.readMem(0xe2d1), 0x90);
        // CB 90 02BA
        gbc.setState(0x32fd, 0xd064, 0xc6d0, 0x2d1b, 0x8073, 0x73a1, 0x0, 0x0);
        gbc.writeMem(0x32fd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd064);
        EXPECT(gbc.pc(), 0x32ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02BB
        gbc.setState(0x5457, 0xf9da, 0xe740, 0xb74c, 0x364f, 0xb453, 0x0, 0x0);
        gbc.writeMem(0x5457, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf9da);
        EXPECT(gbc.pc(), 0x5459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02BC
        gbc.setState(0x9cc8, 0xfe27, 0x5cf0, 0x50b6, 0xa5b1, 0x69e8, 0x0, 0x1);
        gbc.writeMem(0x9cc8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfe27);
        EXPECT(gbc.pc(), 0x9cca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cc8), 0xcb);
        EXPECT(gbc.readMem(0x9cc9), 0x90);
        // CB 90 02BD
        gbc.setState(0x3107, 0xa93d, 0xd6e0, 0x4e26, 0x1685, 0x661f, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa93d);
        EXPECT(gbc.pc(), 0x3109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02BE
        gbc.setState(0x84fd, 0x93f2, 0x4e40, 0x3202, 0xe22f, 0x7148, 0x1, 0x1);
        gbc.writeMem(0x84fd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x93f2);
        EXPECT(gbc.pc(), 0x84ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84fd), 0xcb);
        EXPECT(gbc.readMem(0x84fe), 0x90);
        // CB 90 02BF
        gbc.setState(0x5654, 0xae69, 0x8d90, 0x3b18, 0x3b0b, 0x37ed, 0x1, 0x0);
        gbc.writeMem(0x5654, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xae69);
        EXPECT(gbc.pc(), 0x5656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02C0
        gbc.setState(0x5d4d, 0x274f, 0xece0, 0xa110, 0xc5fa, 0x4fcc, 0x0, 0x1);
        gbc.writeMem(0x5d4d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x274f);
        EXPECT(gbc.pc(), 0x5d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02C1
        gbc.setState(0x638b, 0x1a66, 0x3fc0, 0x9c6d, 0xa9e9, 0x53da, 0x1, 0x1);
        gbc.writeMem(0x638b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1a66);
        EXPECT(gbc.pc(), 0x638d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02C2
        gbc.setState(0xce3, 0x66d6, 0x7210, 0x6342, 0x5c9e, 0xeaeb, 0x0, 0x0);
        gbc.writeMem(0xce3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x66d6);
        EXPECT(gbc.pc(), 0xce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02C3
        gbc.setState(0x1d88, 0x5fa9, 0xa810, 0xe876, 0x3394, 0x2753, 0x0, 0x0);
        gbc.writeMem(0x1d88, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5fa9);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02C4
        gbc.setState(0x786, 0xbb96, 0x90f0, 0x9aab, 0x627, 0x6058, 0x1, 0x0);
        gbc.writeMem(0x786, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xbb96);
        EXPECT(gbc.pc(), 0x788);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02C5
        gbc.setState(0x7b77, 0x765d, 0x9ed0, 0xf4f0, 0x91ce, 0xd293, 0x0, 0x0);
        gbc.writeMem(0x7b77, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x765d);
        EXPECT(gbc.pc(), 0x7b79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02C6
        gbc.setState(0x34e4, 0x5765, 0x5660, 0xe486, 0xfc0a, 0x8ca7, 0x0, 0x1);
        gbc.writeMem(0x34e4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5765);
        EXPECT(gbc.pc(), 0x34e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02C7
        gbc.setState(0xe3a2, 0xc01f, 0x6af0, 0x18d2, 0x2519, 0x549e, 0x1, 0x0);
        gbc.writeMem(0xe3a2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc01f);
        EXPECT(gbc.pc(), 0xe3a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3a2), 0xcb);
        EXPECT(gbc.readMem(0xe3a3), 0x90);
        // CB 90 02C8
        gbc.setState(0x3d37, 0xfc4c, 0xedc0, 0x81df, 0x7267, 0x692d, 0x1, 0x1);
        gbc.writeMem(0x3d37, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xfc4c);
        EXPECT(gbc.pc(), 0x3d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02C9
        gbc.setState(0x5a33, 0xa6a3, 0xe500, 0xd73f, 0xe642, 0xe898, 0x0, 0x1);
        gbc.writeMem(0x5a33, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa6a3);
        EXPECT(gbc.pc(), 0x5a35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02CA
        gbc.setState(0xbeac, 0xf850, 0xdd00, 0xbe6d, 0x1db9, 0x9a45, 0x0, 0x0);
        gbc.writeMem(0xbeac, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf850);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeac), 0xcb);
        EXPECT(gbc.readMem(0xbead), 0x90);
        // CB 90 02CB
        gbc.setState(0xb980, 0x3241, 0x4020, 0xfd0, 0x39c, 0x8183, 0x0, 0x1);
        gbc.writeMem(0xb980, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3241);
        EXPECT(gbc.pc(), 0xb982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb980), 0xcb);
        EXPECT(gbc.readMem(0xb981), 0x90);
        // CB 90 02CC
        gbc.setState(0xe9a9, 0xc73a, 0x6d10, 0xdc2c, 0xca13, 0xe973, 0x1, 0x0);
        gbc.writeMem(0xe9a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc73a);
        EXPECT(gbc.pc(), 0xe9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9a9), 0xcb);
        EXPECT(gbc.readMem(0xe9aa), 0x90);
        // CB 90 02CD
        gbc.setState(0xef94, 0xf99b, 0xb00, 0xa713, 0xc45e, 0x7078, 0x0, 0x0);
        gbc.writeMem(0xef94, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0xef96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef94), 0xcb);
        EXPECT(gbc.readMem(0xef95), 0x90);
        // CB 90 02CE
        gbc.setState(0x7d18, 0xe9b1, 0x9da0, 0xe797, 0xa65b, 0x2532, 0x0, 0x1);
        gbc.writeMem(0x7d18, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe9b1);
        EXPECT(gbc.pc(), 0x7d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02D0
        gbc.setState(0xdf82, 0x491f, 0x7840, 0x1b0a, 0xe1b4, 0x253d, 0x0, 0x1);
        gbc.writeMem(0xdf82, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x491f);
        EXPECT(gbc.pc(), 0xdf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf82), 0xcb);
        EXPECT(gbc.readMem(0xdf83), 0x90);
        // CB 90 02D1
        gbc.setState(0xe343, 0xa87e, 0x3b60, 0x88b9, 0x4e46, 0x9680, 0x0, 0x0);
        gbc.writeMem(0xe343, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa87e);
        EXPECT(gbc.pc(), 0xe345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe343), 0xcb);
        EXPECT(gbc.readMem(0xe344), 0x90);
        // CB 90 02D2
        gbc.setState(0xa970, 0xc366, 0xc9b0, 0xbf8, 0x7fd9, 0x51c7, 0x0, 0x1);
        gbc.writeMem(0xa970, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0xa972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa970), 0xcb);
        EXPECT(gbc.readMem(0xa971), 0x90);
        // CB 90 02D3
        gbc.setState(0x8103, 0x3462, 0x36f0, 0xf53c, 0xf4ad, 0x5d7c, 0x0, 0x1);
        gbc.writeMem(0x8103, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x3462);
        EXPECT(gbc.pc(), 0x8105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8103), 0xcb);
        EXPECT(gbc.readMem(0x8104), 0x90);
        // CB 90 02D4
        gbc.setState(0xb854, 0xc02a, 0x3ba0, 0x233d, 0xdc0b, 0x341c, 0x1, 0x0);
        gbc.writeMem(0xb854, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc02a);
        EXPECT(gbc.pc(), 0xb856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb854), 0xcb);
        EXPECT(gbc.readMem(0xb855), 0x90);
        // CB 90 02D5
        gbc.setState(0xe8a3, 0x3c6a, 0xa790, 0x89a0, 0xcd7e, 0x157f, 0x1, 0x0);
        gbc.writeMem(0xe8a3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3c6a);
        EXPECT(gbc.pc(), 0xe8a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8a3), 0xcb);
        EXPECT(gbc.readMem(0xe8a4), 0x90);
        // CB 90 02D6
        gbc.setState(0x9b95, 0x3473, 0x1a00, 0x7bf9, 0xfe19, 0x4203, 0x0, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3473);
        EXPECT(gbc.pc(), 0x9b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b95), 0xcb);
        EXPECT(gbc.readMem(0x9b96), 0x90);
        // CB 90 02D7
        gbc.setState(0x36eb, 0xb550, 0x970, 0xef78, 0xb280, 0x6127, 0x1, 0x0);
        gbc.writeMem(0x36eb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xb550);
        EXPECT(gbc.pc(), 0x36ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02D8
        gbc.setState(0x6a9e, 0x493e, 0x1c70, 0x36dc, 0x9a6e, 0x6c5b, 0x0, 0x0);
        gbc.writeMem(0x6a9e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x493e);
        EXPECT(gbc.pc(), 0x6aa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02D9
        gbc.setState(0x85ef, 0xc9b, 0xf0f0, 0x29b5, 0x1972, 0x4065, 0x1, 0x1);
        gbc.writeMem(0x85ef, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc9b);
        EXPECT(gbc.pc(), 0x85f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ef), 0xcb);
        EXPECT(gbc.readMem(0x85f0), 0x90);
        // CB 90 02DA
        gbc.setState(0xe5bb, 0x9d98, 0x1b60, 0xe42, 0x51bb, 0x7e93, 0x0, 0x0);
        gbc.writeMem(0xe5bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0xe5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5bb), 0xcb);
        EXPECT(gbc.readMem(0xe5bc), 0x90);
        // CB 90 02DB
        gbc.setState(0x8fe8, 0x1306, 0x9960, 0x545, 0x605e, 0x727f, 0x0, 0x1);
        gbc.writeMem(0x8fe8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1306);
        EXPECT(gbc.pc(), 0x8fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe8), 0xcb);
        EXPECT(gbc.readMem(0x8fe9), 0x90);
        // CB 90 02DC
        gbc.setState(0x4239, 0xf302, 0x6810, 0xd753, 0x7c09, 0x70c7, 0x0, 0x1);
        gbc.writeMem(0x4239, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf302);
        EXPECT(gbc.pc(), 0x423b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02DD
        gbc.setState(0xe6d4, 0xcf95, 0xef50, 0xf8a7, 0x7c13, 0x6649, 0x1, 0x1);
        gbc.writeMem(0xe6d4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcf95);
        EXPECT(gbc.pc(), 0xe6d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d4), 0xcb);
        EXPECT(gbc.readMem(0xe6d5), 0x90);
        // CB 90 02DE
        gbc.setState(0x29b, 0xef51, 0x1240, 0x6327, 0xb4a, 0x50ee, 0x0, 0x1);
        gbc.writeMem(0x29b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xef51);
        EXPECT(gbc.pc(), 0x29d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02DF
        gbc.setState(0x1a8, 0x47c5, 0x8e0, 0xb3a, 0x1b86, 0x9e89, 0x0, 0x0);
        gbc.writeMem(0x1a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x47c5);
        EXPECT(gbc.pc(), 0x1aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02E0
        gbc.setState(0x94fa, 0x183a, 0x37a0, 0x4965, 0xbc08, 0xfa7c, 0x0, 0x0);
        gbc.writeMem(0x94fa, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x183a);
        EXPECT(gbc.pc(), 0x94fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94fa), 0xcb);
        EXPECT(gbc.readMem(0x94fb), 0x90);
        // CB 90 02E1
        gbc.setState(0x3310, 0xa6d1, 0x73a0, 0x96ff, 0x3f65, 0xf05f, 0x0, 0x0);
        gbc.writeMem(0x3310, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa6d1);
        EXPECT(gbc.pc(), 0x3312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02E2
        gbc.setState(0x71df, 0x12d2, 0x94a0, 0xb9c0, 0xfa76, 0x6d45, 0x0, 0x1);
        gbc.writeMem(0x71df, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x12d2);
        EXPECT(gbc.pc(), 0x71e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02E4
        gbc.setState(0xc705, 0x9e5d, 0x1b50, 0x9d62, 0x8113, 0x61a7, 0x1, 0x0);
        gbc.writeMem(0xc705, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9e5d);
        EXPECT(gbc.pc(), 0xc707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc705), 0xcb);
        EXPECT(gbc.readMem(0xc706), 0x90);
        // CB 90 02E5
        gbc.setState(0xf7f, 0xabc4, 0x91b0, 0xea8a, 0x92fc, 0xf305, 0x0, 0x1);
        gbc.writeMem(0xf7f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xabc4);
        EXPECT(gbc.pc(), 0xf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02E6
        gbc.setState(0xbc16, 0x2b1a, 0xa2c0, 0x4f13, 0xb9d6, 0xbbcc, 0x0, 0x0);
        gbc.writeMem(0xbc16, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x2b1a);
        EXPECT(gbc.pc(), 0xbc18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc16), 0xcb);
        EXPECT(gbc.readMem(0xbc17), 0x90);
        // CB 90 02E7
        gbc.setState(0x500b, 0xe9f8, 0x72c0, 0x7d98, 0x64ff, 0xbaf3, 0x1, 0x0);
        gbc.writeMem(0x500b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe9f8);
        EXPECT(gbc.pc(), 0x500d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02E8
        gbc.setState(0x892d, 0x9f76, 0x2e90, 0x3997, 0x59f, 0xbf68, 0x1, 0x0);
        gbc.writeMem(0x892d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9f76);
        EXPECT(gbc.pc(), 0x892f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892d), 0xcb);
        EXPECT(gbc.readMem(0x892e), 0x90);
        // CB 90 02E9
        gbc.setState(0xa8bb, 0x9e9f, 0xe5c0, 0xac98, 0x86d8, 0x8f45, 0x0, 0x0);
        gbc.writeMem(0xa8bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9e9f);
        EXPECT(gbc.pc(), 0xa8bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8bb), 0xcb);
        EXPECT(gbc.readMem(0xa8bc), 0x90);
        // CB 90 02EA
        gbc.setState(0xb447, 0x15c7, 0x45d0, 0x4294, 0xe057, 0x512c, 0x0, 0x1);
        gbc.writeMem(0xb447, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x15c7);
        EXPECT(gbc.pc(), 0xb449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb447), 0xcb);
        EXPECT(gbc.readMem(0xb448), 0x90);
        // CB 90 02EB
        gbc.setState(0xd491, 0xa807, 0xf3d0, 0x216d, 0x9131, 0x8e01, 0x0, 0x1);
        gbc.writeMem(0xd491, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa807);
        EXPECT(gbc.pc(), 0xd493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd491), 0xcb);
        EXPECT(gbc.readMem(0xd492), 0x90);
        // CB 90 02EC
        gbc.setState(0xe21a, 0x940c, 0x4400, 0x4227, 0x48ea, 0xa7bb, 0x0, 0x0);
        gbc.writeMem(0xe21a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x940c);
        EXPECT(gbc.pc(), 0xe21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe21a), 0xcb);
        EXPECT(gbc.readMem(0xe21b), 0x90);
        // CB 90 02ED
        gbc.setState(0x6464, 0x64c4, 0x99f0, 0xbbb9, 0xdd3b, 0x5c3b, 0x0, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x64c4);
        EXPECT(gbc.pc(), 0x6466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02EE
        gbc.setState(0x28d9, 0xc095, 0x35e0, 0x4fcf, 0x3003, 0x923c, 0x1, 0x0);
        gbc.writeMem(0x28d9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc095);
        EXPECT(gbc.pc(), 0x28db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02EF
        gbc.setState(0x4a05, 0x297e, 0xad10, 0xd47a, 0xfa53, 0xb684, 0x1, 0x1);
        gbc.writeMem(0x4a05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x297e);
        EXPECT(gbc.pc(), 0x4a07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02F0
        gbc.setState(0x1234, 0xcf40, 0x38a0, 0x322d, 0xdf26, 0x76cc, 0x1, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xcf40);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02F1
        gbc.setState(0xce02, 0x20ac, 0x6b50, 0xf1ad, 0x40aa, 0x73e4, 0x0, 0x1);
        gbc.writeMem(0xce02, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x20ac);
        EXPECT(gbc.pc(), 0xce04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce02), 0xcb);
        EXPECT(gbc.readMem(0xce03), 0x90);
        // CB 90 02F2
        gbc.setState(0x3aa4, 0x26f, 0xa1b0, 0x92af, 0x711d, 0xdcbe, 0x0, 0x1);
        gbc.writeMem(0x3aa4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x26f);
        EXPECT(gbc.pc(), 0x3aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02F3
        gbc.setState(0xee2e, 0xb9c7, 0x9090, 0x1cf, 0x207b, 0xd5ee, 0x0, 0x0);
        gbc.writeMem(0xee2e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb9c7);
        EXPECT(gbc.pc(), 0xee30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee2e), 0xcb);
        EXPECT(gbc.readMem(0xee2f), 0x90);
        // CB 90 02F4
        gbc.setState(0xa270, 0x6db, 0x5060, 0x61b1, 0xbfe8, 0xb7a, 0x0, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6db);
        EXPECT(gbc.pc(), 0xa272);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa270), 0xcb);
        EXPECT(gbc.readMem(0xa271), 0x90);
        // CB 90 02F5
        gbc.setState(0x51b7, 0xb74d, 0x2eb0, 0xea0d, 0xd94a, 0x7c6b, 0x1, 0x1);
        gbc.writeMem(0x51b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb74d);
        EXPECT(gbc.pc(), 0x51b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02F6
        gbc.setState(0x15a2, 0x4abf, 0x8d60, 0x3a74, 0x6982, 0x90c8, 0x0, 0x0);
        gbc.writeMem(0x15a2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4abf);
        EXPECT(gbc.pc(), 0x15a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02F7
        gbc.setState(0x256c, 0x7244, 0x9b80, 0xb259, 0x13fc, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x256c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7244);
        EXPECT(gbc.pc(), 0x256e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02F8
        gbc.setState(0x2222, 0xce09, 0x5040, 0xb1d3, 0xf10b, 0xf50c, 0x0, 0x0);
        gbc.writeMem(0x2222, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xce09);
        EXPECT(gbc.pc(), 0x2224);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02F9
        gbc.setState(0x3a01, 0xb518, 0x84d0, 0x6c80, 0x5de5, 0x849d, 0x1, 0x0);
        gbc.writeMem(0x3a01, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb518);
        EXPECT(gbc.pc(), 0x3a03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02FA
        gbc.setState(0xa905, 0xbeb7, 0x9030, 0xbb55, 0xee77, 0xa8d0, 0x0, 0x0);
        gbc.writeMem(0xa905, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0xa907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa905), 0xcb);
        EXPECT(gbc.readMem(0xa906), 0x90);
        // CB 90 02FB
        gbc.setState(0xa7ec, 0x3303, 0x16d0, 0xa548, 0x8f88, 0xc0c8, 0x1, 0x0);
        gbc.writeMem(0xa7ec, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3303);
        EXPECT(gbc.pc(), 0xa7ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ec), 0xcb);
        EXPECT(gbc.readMem(0xa7ed), 0x90);
        // CB 90 02FC
        gbc.setState(0xeba8, 0x912e, 0x3430, 0x8682, 0xa79d, 0x1e4f, 0x1, 0x1);
        gbc.writeMem(0xeba8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x912e);
        EXPECT(gbc.pc(), 0xebaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba8), 0xcb);
        EXPECT(gbc.readMem(0xeba9), 0x90);
        // CB 90 02FD
        gbc.setState(0x33ac, 0x22cd, 0x4a80, 0x1ba, 0xa927, 0x5baf, 0x1, 0x0);
        gbc.writeMem(0x33ac, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x22cd);
        EXPECT(gbc.pc(), 0x33ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 02FE
        gbc.setState(0x56a8, 0x1f0b, 0x7350, 0x300a, 0x3038, 0xcd7b, 0x0, 0x1);
        gbc.writeMem(0x56a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1f0b);
        EXPECT(gbc.pc(), 0x56aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 02FF
        gbc.setState(0x1d3d, 0xa5b0, 0x23c0, 0x5dd, 0x6a99, 0x5e4c, 0x0, 0x1);
        gbc.writeMem(0x1d3d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa5b0);
        EXPECT(gbc.pc(), 0x1d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0300
        gbc.setState(0x269, 0xdd4b, 0xe540, 0xef1d, 0xa690, 0xa676, 0x0, 0x0);
        gbc.writeMem(0x269, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdd4b);
        EXPECT(gbc.pc(), 0x26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0301
        gbc.setState(0x3fbb, 0x6760, 0xa3f0, 0x9ebd, 0xb7bc, 0xd058, 0x1, 0x1);
        gbc.writeMem(0x3fbb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6760);
        EXPECT(gbc.pc(), 0x3fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0302
        gbc.setState(0xdd1b, 0xe36, 0xa6f0, 0xe120, 0x4d57, 0x1f63, 0x0, 0x1);
        gbc.writeMem(0xdd1b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe36);
        EXPECT(gbc.pc(), 0xdd1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd1b), 0xcb);
        EXPECT(gbc.readMem(0xdd1c), 0x90);
        // CB 90 0304
        gbc.setState(0x50c8, 0xc700, 0x3220, 0x60b, 0xbf24, 0xc94d, 0x1, 0x1);
        gbc.writeMem(0x50c8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc700);
        EXPECT(gbc.pc(), 0x50ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0305
        gbc.setState(0x6611, 0x693a, 0xdd00, 0x811d, 0xb133, 0x5e80, 0x1, 0x0);
        gbc.writeMem(0x6611, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x693a);
        EXPECT(gbc.pc(), 0x6613);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0307
        gbc.setState(0x469d, 0x3908, 0x2690, 0x834f, 0x17dc, 0xb018, 0x1, 0x1);
        gbc.writeMem(0x469d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3908);
        EXPECT(gbc.pc(), 0x469f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0308
        gbc.setState(0x2cbf, 0xb1e5, 0x8670, 0x3c7a, 0x14cd, 0xfee5, 0x1, 0x1);
        gbc.writeMem(0x2cbf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0x2cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0309
        gbc.setState(0x69ff, 0x41f6, 0x90e0, 0x784e, 0x6042, 0x8d3, 0x0, 0x0);
        gbc.writeMem(0x69ff, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x41f6);
        EXPECT(gbc.pc(), 0x6a01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 030A
        gbc.setState(0x85ea, 0xf4be, 0x9930, 0xe8ac, 0x6f0d, 0x94fe, 0x1, 0x0);
        gbc.writeMem(0x85ea, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0x85ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ea), 0xcb);
        EXPECT(gbc.readMem(0x85eb), 0x90);
        // CB 90 030B
        gbc.setState(0x4997, 0x636d, 0x4c40, 0x7425, 0x2300, 0x50e9, 0x1, 0x0);
        gbc.writeMem(0x4997, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x636d);
        EXPECT(gbc.pc(), 0x4999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 030C
        gbc.setState(0x420f, 0x2050, 0x90e0, 0x9df4, 0xf5d9, 0xa3ea, 0x0, 0x0);
        gbc.writeMem(0x420f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x2050);
        EXPECT(gbc.pc(), 0x4211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 030D
        gbc.setState(0x9b1b, 0xafe7, 0x81f0, 0x3ff5, 0x888d, 0x6f43, 0x0, 0x0);
        gbc.writeMem(0x9b1b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xafe7);
        EXPECT(gbc.pc(), 0x9b1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1b), 0xcb);
        EXPECT(gbc.readMem(0x9b1c), 0x90);
        // CB 90 030E
        gbc.setState(0x5ce6, 0x37cf, 0x81b0, 0x2cd4, 0xf671, 0x2bf4, 0x1, 0x0);
        gbc.writeMem(0x5ce6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x37cf);
        EXPECT(gbc.pc(), 0x5ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 030F
        gbc.setState(0x3083, 0xe94c, 0x3260, 0x1b68, 0xc137, 0xb139, 0x1, 0x1);
        gbc.writeMem(0x3083, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe94c);
        EXPECT(gbc.pc(), 0x3085);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0310
        gbc.setState(0x15e4, 0xd8a4, 0x3380, 0xa1d1, 0x6514, 0xad69, 0x0, 0x0);
        gbc.writeMem(0x15e4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd8a4);
        EXPECT(gbc.pc(), 0x15e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0311
        gbc.setState(0x95b7, 0xeedb, 0x70c0, 0x6886, 0x9328, 0x7709, 0x1, 0x1);
        gbc.writeMem(0x95b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xeedb);
        EXPECT(gbc.pc(), 0x95b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b7), 0xcb);
        EXPECT(gbc.readMem(0x95b8), 0x90);
        // CB 90 0312
        gbc.setState(0x27b7, 0x5130, 0x2370, 0xdda0, 0x33bd, 0x2ba8, 0x1, 0x1);
        gbc.writeMem(0x27b7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5130);
        EXPECT(gbc.pc(), 0x27b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0313
        gbc.setState(0x666b, 0xf2a6, 0x7aa0, 0x7139, 0xe623, 0xf09d, 0x1, 0x0);
        gbc.writeMem(0x666b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf2a6);
        EXPECT(gbc.pc(), 0x666d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0314
        gbc.setState(0xd67d, 0x97b, 0x7d90, 0xe242, 0xec21, 0xc4ef, 0x1, 0x1);
        gbc.writeMem(0xd67d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x97b);
        EXPECT(gbc.pc(), 0xd67f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd67d), 0xcb);
        EXPECT(gbc.readMem(0xd67e), 0x90);
        // CB 90 0315
        gbc.setState(0x35b9, 0x4e59, 0x70a0, 0x4cc5, 0x2dc6, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0x35b9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4e59);
        EXPECT(gbc.pc(), 0x35bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0316
        gbc.setState(0x7a07, 0xdafa, 0x54b0, 0xbf56, 0x5d9f, 0x2cf9, 0x1, 0x1);
        gbc.writeMem(0x7a07, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdafa);
        EXPECT(gbc.pc(), 0x7a09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0317
        gbc.setState(0x3d62, 0x92fc, 0xfb10, 0xc0c7, 0xa69a, 0x175, 0x0, 0x1);
        gbc.writeMem(0x3d62, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x92fc);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0318
        gbc.setState(0x807b, 0x5b8, 0xbbf0, 0x4764, 0xafbb, 0xda09, 0x1, 0x0);
        gbc.writeMem(0x807b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5b8);
        EXPECT(gbc.pc(), 0x807d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x807b), 0xcb);
        EXPECT(gbc.readMem(0x807c), 0x90);
        // CB 90 0319
        gbc.setState(0xd6cf, 0xc27f, 0x9d50, 0x8fb6, 0x6826, 0xe075, 0x0, 0x0);
        gbc.writeMem(0xd6cf, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc27f);
        EXPECT(gbc.pc(), 0xd6d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6cf), 0xcb);
        EXPECT(gbc.readMem(0xd6d0), 0x90);
        // CB 90 031A
        gbc.setState(0x22, 0x8078, 0xc080, 0xd5f1, 0x36d1, 0xd300, 0x0, 0x1);
        gbc.writeMem(0x22, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8078);
        EXPECT(gbc.pc(), 0x24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 031B
        gbc.setState(0x9188, 0xc2fd, 0xfc00, 0xbed0, 0x3fa7, 0x94ee, 0x1, 0x1);
        gbc.writeMem(0x9188, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc2fd);
        EXPECT(gbc.pc(), 0x918a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9188), 0xcb);
        EXPECT(gbc.readMem(0x9189), 0x90);
        // CB 90 031C
        gbc.setState(0x7e17, 0xb2d6, 0xeac0, 0xb54e, 0x66ba, 0xcf3a, 0x0, 0x0);
        gbc.writeMem(0x7e17, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb2d6);
        EXPECT(gbc.pc(), 0x7e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 031D
        gbc.setState(0x8fa3, 0x49b6, 0x2c70, 0xef50, 0x1637, 0x6879, 0x0, 0x1);
        gbc.writeMem(0x8fa3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x49b6);
        EXPECT(gbc.pc(), 0x8fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fa3), 0xcb);
        EXPECT(gbc.readMem(0x8fa4), 0x90);
        // CB 90 031E
        gbc.setState(0x992e, 0x4e01, 0x97e0, 0x895e, 0x6672, 0x324c, 0x1, 0x1);
        gbc.writeMem(0x992e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4e01);
        EXPECT(gbc.pc(), 0x9930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992e), 0xcb);
        EXPECT(gbc.readMem(0x992f), 0x90);
        // CB 90 031F
        gbc.setState(0xa8dc, 0x4b7c, 0x8590, 0x2099, 0x3dbc, 0x83e6, 0x1, 0x1);
        gbc.writeMem(0xa8dc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4b7c);
        EXPECT(gbc.pc(), 0xa8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8dc), 0xcb);
        EXPECT(gbc.readMem(0xa8dd), 0x90);
        // CB 90 0320
        gbc.setState(0x5544, 0xedbb, 0x4f10, 0x43ce, 0xb036, 0xfb4f, 0x0, 0x0);
        gbc.writeMem(0x5544, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xedbb);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0321
        gbc.setState(0x35e2, 0x126b, 0x50e0, 0xa06d, 0xdba9, 0x4294, 0x1, 0x0);
        gbc.writeMem(0x35e2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x126b);
        EXPECT(gbc.pc(), 0x35e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0322
        gbc.setState(0xc608, 0x7f5, 0x74a0, 0x2b9b, 0xb6f3, 0x9e7e, 0x0, 0x1);
        gbc.writeMem(0xc608, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x7f5);
        EXPECT(gbc.pc(), 0xc60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc608), 0xcb);
        EXPECT(gbc.readMem(0xc609), 0x90);
        // CB 90 0323
        gbc.setState(0x2587, 0x4c86, 0xf410, 0x297a, 0x400a, 0x5c22, 0x0, 0x0);
        gbc.writeMem(0x2587, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4c86);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0324
        gbc.setState(0xbc45, 0xab78, 0xf090, 0x9bb0, 0xb6bc, 0xb428, 0x1, 0x0);
        gbc.writeMem(0xbc45, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xab78);
        EXPECT(gbc.pc(), 0xbc47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc45), 0xcb);
        EXPECT(gbc.readMem(0xbc46), 0x90);
        // CB 90 0325
        gbc.setState(0x490, 0x5f06, 0xb6a0, 0x8bad, 0xb290, 0x847b, 0x0, 0x1);
        gbc.writeMem(0x490, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5f06);
        EXPECT(gbc.pc(), 0x492);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0326
        gbc.setState(0x82e8, 0x2773, 0x1e30, 0x995a, 0xc349, 0xee72, 0x0, 0x0);
        gbc.writeMem(0x82e8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2773);
        EXPECT(gbc.pc(), 0x82ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e8), 0xcb);
        EXPECT(gbc.readMem(0x82e9), 0x90);
        // CB 90 0327
        gbc.setState(0x9ff5, 0xe973, 0x4330, 0x199, 0xf02c, 0x6e, 0x0, 0x0);
        gbc.writeMem(0x9ff5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe973);
        EXPECT(gbc.pc(), 0x9ff7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff5), 0xcb);
        EXPECT(gbc.readMem(0x9ff6), 0x90);
        // CB 90 0328
        gbc.setState(0xc658, 0x4910, 0x2470, 0x1bc6, 0xaa0d, 0xbd02, 0x1, 0x1);
        gbc.writeMem(0xc658, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4910);
        EXPECT(gbc.pc(), 0xc65a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc658), 0xcb);
        EXPECT(gbc.readMem(0xc659), 0x90);
        // CB 90 0329
        gbc.setState(0xe6dd, 0xb64d, 0xca70, 0x294d, 0x71b3, 0x8586, 0x0, 0x0);
        gbc.writeMem(0xe6dd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xb64d);
        EXPECT(gbc.pc(), 0xe6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6dd), 0xcb);
        EXPECT(gbc.readMem(0xe6de), 0x90);
        // CB 90 032A
        gbc.setState(0x5698, 0xe3cd, 0x13d0, 0x6312, 0x2450, 0xaa7d, 0x0, 0x1);
        gbc.writeMem(0x5698, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xe3cd);
        EXPECT(gbc.pc(), 0x569a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 032B
        gbc.setState(0xd3b3, 0x1213, 0x9790, 0x4541, 0x62e3, 0x589a, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1213);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0x90);
        // CB 90 032C
        gbc.setState(0x5eda, 0xf23d, 0x140, 0x2fcd, 0xd1e, 0x4391, 0x1, 0x1);
        gbc.writeMem(0x5eda, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf23d);
        EXPECT(gbc.pc(), 0x5edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 032D
        gbc.setState(0x955b, 0xb9d4, 0x3e70, 0x78f5, 0x90, 0x342f, 0x1, 0x1);
        gbc.writeMem(0x955b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xb9d4);
        EXPECT(gbc.pc(), 0x955d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955b), 0xcb);
        EXPECT(gbc.readMem(0x955c), 0x90);
        // CB 90 032F
        gbc.setState(0x519b, 0x3a99, 0xd8a0, 0x17a3, 0x80aa, 0xd8a9, 0x1, 0x1);
        gbc.writeMem(0x519b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3a99);
        EXPECT(gbc.pc(), 0x519d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0330
        gbc.setState(0x693a, 0x5ca4, 0xb50, 0xa50a, 0x7dda, 0x890c, 0x0, 0x1);
        gbc.writeMem(0x693a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5ca4);
        EXPECT(gbc.pc(), 0x693c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0331
        gbc.setState(0x349d, 0xe894, 0xc3a0, 0x8ba3, 0x462a, 0x31c1, 0x1, 0x0);
        gbc.writeMem(0x349d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe894);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0332
        gbc.setState(0x67bb, 0xb647, 0x3640, 0x4e7b, 0x60fb, 0x17a, 0x1, 0x1);
        gbc.writeMem(0x67bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb647);
        EXPECT(gbc.pc(), 0x67bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0333
        gbc.setState(0x213f, 0x8f76, 0xd0d0, 0x42ca, 0xe94b, 0x6d29, 0x0, 0x1);
        gbc.writeMem(0x213f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8f76);
        EXPECT(gbc.pc(), 0x2141);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0334
        gbc.setState(0x6ed1, 0xbd57, 0x9b90, 0xbb2d, 0xe2eb, 0xb2a, 0x1, 0x1);
        gbc.writeMem(0x6ed1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbd57);
        EXPECT(gbc.pc(), 0x6ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0335
        gbc.setState(0x806c, 0xb106, 0x3f0, 0xd222, 0xa0dd, 0xd07f, 0x0, 0x1);
        gbc.writeMem(0x806c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xb106);
        EXPECT(gbc.pc(), 0x806e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806c), 0xcb);
        EXPECT(gbc.readMem(0x806d), 0x90);
        // CB 90 0336
        gbc.setState(0x1c1e, 0xaba1, 0x2f20, 0x2180, 0x55ef, 0x81cc, 0x1, 0x1);
        gbc.writeMem(0x1c1e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaba1);
        EXPECT(gbc.pc(), 0x1c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0337
        gbc.setState(0x93ba, 0x3a7d, 0xba20, 0x779b, 0x76f5, 0x1d0f, 0x1, 0x0);
        gbc.writeMem(0x93ba, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3a7d);
        EXPECT(gbc.pc(), 0x93bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ba), 0xcb);
        EXPECT(gbc.readMem(0x93bb), 0x90);
        // CB 90 0338
        gbc.setState(0xdc4a, 0x4b9c, 0x6120, 0x54b9, 0xda50, 0x82da, 0x1, 0x1);
        gbc.writeMem(0xdc4a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4b9c);
        EXPECT(gbc.pc(), 0xdc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc4a), 0xcb);
        EXPECT(gbc.readMem(0xdc4b), 0x90);
        // CB 90 033A
        gbc.setState(0x9ccd, 0xc031, 0xf660, 0x7741, 0x30db, 0x41b7, 0x0, 0x0);
        gbc.writeMem(0x9ccd, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc031);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ccd), 0xcb);
        EXPECT(gbc.readMem(0x9cce), 0x90);
        // CB 90 033B
        gbc.setState(0x65c9, 0xb3e9, 0x3390, 0x75bc, 0xedb1, 0x2cee, 0x1, 0x0);
        gbc.writeMem(0x65c9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb3e9);
        EXPECT(gbc.pc(), 0x65cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 033D
        gbc.setState(0x8c00, 0x7d55, 0x4210, 0x5d81, 0xb347, 0x23d7, 0x0, 0x1);
        gbc.writeMem(0x8c00, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7d55);
        EXPECT(gbc.pc(), 0x8c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c00), 0xcb);
        EXPECT(gbc.readMem(0x8c01), 0x90);
        // CB 90 033E
        gbc.setState(0x76a1, 0xd3, 0x3f70, 0x49b7, 0x5f29, 0xac08, 0x0, 0x1);
        gbc.writeMem(0x76a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd3);
        EXPECT(gbc.pc(), 0x76a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 033F
        gbc.setState(0xd21f, 0x2299, 0xb3c0, 0x84af, 0x1009, 0xb564, 0x0, 0x0);
        gbc.writeMem(0xd21f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21f), 0xcb);
        EXPECT(gbc.readMem(0xd220), 0x90);
        // CB 90 0341
        gbc.setState(0x660d, 0x216c, 0x3530, 0xb6f9, 0xc3b, 0xa73a, 0x1, 0x1);
        gbc.writeMem(0x660d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x216c);
        EXPECT(gbc.pc(), 0x660f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0342
        gbc.setState(0x9fe0, 0x278c, 0x9910, 0x45c4, 0xf324, 0x32a8, 0x0, 0x0);
        gbc.writeMem(0x9fe0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0x9fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe0), 0xcb);
        EXPECT(gbc.readMem(0x9fe1), 0x90);
        // CB 90 0343
        gbc.setState(0xc304, 0x6c67, 0x9aa0, 0x44e0, 0xfeb5, 0x6e2d, 0x0, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6c67);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0x90);
        // CB 90 0344
        gbc.setState(0x2f76, 0xe896, 0xfc80, 0x673f, 0x1e99, 0x41e0, 0x1, 0x0);
        gbc.writeMem(0x2f76, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe896);
        EXPECT(gbc.pc(), 0x2f78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0345
        gbc.setState(0x6e8a, 0x6cae, 0x5a00, 0x6a44, 0x7ffe, 0x842c, 0x1, 0x0);
        gbc.writeMem(0x6e8a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6cae);
        EXPECT(gbc.pc(), 0x6e8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0346
        gbc.setState(0xcaf7, 0x8855, 0x7bd0, 0x28f3, 0x896d, 0xec75, 0x0, 0x1);
        gbc.writeMem(0xcaf7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8855);
        EXPECT(gbc.pc(), 0xcaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf7), 0xcb);
        EXPECT(gbc.readMem(0xcaf8), 0x90);
        // CB 90 0347
        gbc.setState(0x9396, 0xa63f, 0xaf0, 0xda9b, 0x790a, 0x79b8, 0x1, 0x0);
        gbc.writeMem(0x9396, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa63f);
        EXPECT(gbc.pc(), 0x9398);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9396), 0xcb);
        EXPECT(gbc.readMem(0x9397), 0x90);
        // CB 90 0348
        gbc.setState(0x5330, 0x913d, 0x2f30, 0xd3bb, 0x544e, 0x5d1a, 0x1, 0x1);
        gbc.writeMem(0x5330, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x913d);
        EXPECT(gbc.pc(), 0x5332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0349
        gbc.setState(0xca68, 0xca47, 0xcc30, 0xca09, 0x6589, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0xca68, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xca47);
        EXPECT(gbc.pc(), 0xca6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca68), 0xcb);
        EXPECT(gbc.readMem(0xca69), 0x90);
        // CB 90 034A
        gbc.setState(0x6219, 0x236f, 0x5c10, 0x8959, 0xeae1, 0xcb30, 0x1, 0x1);
        gbc.writeMem(0x6219, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0x621b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 034B
        gbc.setState(0x4368, 0xd79b, 0xb790, 0xace8, 0x26dc, 0xd938, 0x1, 0x1);
        gbc.writeMem(0x4368, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xd79b);
        EXPECT(gbc.pc(), 0x436a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 034C
        gbc.setState(0x4056, 0xafee, 0x9620, 0x2b5a, 0x8a3e, 0x82b9, 0x0, 0x0);
        gbc.writeMem(0x4056, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xafee);
        EXPECT(gbc.pc(), 0x4058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 034D
        gbc.setState(0x384f, 0x36, 0xdd00, 0x5180, 0x8d8, 0x3fc0, 0x1, 0x1);
        gbc.writeMem(0x384f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x36);
        EXPECT(gbc.pc(), 0x3851);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 034E
        gbc.setState(0xb706, 0x7335, 0x2c10, 0x777a, 0x7c84, 0xcc17, 0x1, 0x0);
        gbc.writeMem(0xb706, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7335);
        EXPECT(gbc.pc(), 0xb708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb706), 0xcb);
        EXPECT(gbc.readMem(0xb707), 0x90);
        // CB 90 034F
        gbc.setState(0x8f3c, 0xbc94, 0x3800, 0xbc22, 0x439d, 0x33dd, 0x0, 0x0);
        gbc.writeMem(0x8f3c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xbc94);
        EXPECT(gbc.pc(), 0x8f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f3c), 0xcb);
        EXPECT(gbc.readMem(0x8f3d), 0x90);
        // CB 90 0350
        gbc.setState(0xde3c, 0xa32e, 0x4490, 0xc365, 0x8c5d, 0xeef8, 0x0, 0x0);
        gbc.writeMem(0xde3c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xa32e);
        EXPECT(gbc.pc(), 0xde3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3c), 0xcb);
        EXPECT(gbc.readMem(0xde3d), 0x90);
        // CB 90 0351
        gbc.setState(0xa007, 0x119b, 0x150, 0x9b5, 0xe6db, 0x869b, 0x0, 0x1);
        gbc.writeMem(0xa007, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x119b);
        EXPECT(gbc.pc(), 0xa009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa007), 0xcb);
        EXPECT(gbc.readMem(0xa008), 0x90);
        // CB 90 0352
        gbc.setState(0x4385, 0xed7b, 0xd510, 0x5624, 0xd9cb, 0x2774, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xed7b);
        EXPECT(gbc.pc(), 0x4387);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0353
        gbc.setState(0x2164, 0x7148, 0xadd0, 0x1603, 0x128a, 0xb4df, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7148);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0354
        gbc.setState(0x258b, 0x4c1f, 0x8460, 0xba1e, 0x79da, 0x3155, 0x1, 0x1);
        gbc.writeMem(0x258b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4c1f);
        EXPECT(gbc.pc(), 0x258d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0355
        gbc.setState(0x2752, 0x3ac6, 0x39a0, 0x9531, 0xdd23, 0xae34, 0x1, 0x0);
        gbc.writeMem(0x2752, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3ac6);
        EXPECT(gbc.pc(), 0x2754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0356
        gbc.setState(0x4e9f, 0x969, 0xd3b0, 0x289e, 0xc7d5, 0xd53, 0x1, 0x1);
        gbc.writeMem(0x4e9f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x969);
        EXPECT(gbc.pc(), 0x4ea1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0357
        gbc.setState(0x845d, 0x2aed, 0xd310, 0x9bf8, 0x5b78, 0x5645, 0x0, 0x0);
        gbc.writeMem(0x845d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2aed);
        EXPECT(gbc.pc(), 0x845f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845d), 0xcb);
        EXPECT(gbc.readMem(0x845e), 0x90);
        // CB 90 0358
        gbc.setState(0x5f38, 0x13a9, 0x26c0, 0xc6ad, 0x5132, 0xa0ca, 0x0, 0x0);
        gbc.writeMem(0x5f38, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x13a9);
        EXPECT(gbc.pc(), 0x5f3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0359
        gbc.setState(0x72a8, 0x3f72, 0xc070, 0x530, 0xd35b, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0x72a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3f72);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 035A
        gbc.setState(0x87f4, 0xebff, 0x9870, 0x6281, 0x2708, 0x99c0, 0x0, 0x1);
        gbc.writeMem(0x87f4, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xebff);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87f4), 0xcb);
        EXPECT(gbc.readMem(0x87f5), 0x90);
        // CB 90 035B
        gbc.setState(0xabf3, 0x492, 0x6f20, 0x66fb, 0x2f4a, 0xff85, 0x0, 0x0);
        gbc.writeMem(0xabf3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x492);
        EXPECT(gbc.pc(), 0xabf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabf3), 0xcb);
        EXPECT(gbc.readMem(0xabf4), 0x90);
        // CB 90 035C
        gbc.setState(0xc44, 0x94fa, 0x40, 0x1024, 0x554d, 0x2276, 0x1, 0x0);
        gbc.writeMem(0xc44, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x94fa);
        EXPECT(gbc.pc(), 0xc46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 035D
        gbc.setState(0x9ab9, 0x1a8f, 0xbe70, 0x17b2, 0x3065, 0x531c, 0x0, 0x1);
        gbc.writeMem(0x9ab9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1a8f);
        EXPECT(gbc.pc(), 0x9abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab9), 0xcb);
        EXPECT(gbc.readMem(0x9aba), 0x90);
        // CB 90 035E
        gbc.setState(0x652f, 0xc06d, 0xc0b0, 0x9f8c, 0xd87e, 0xdf23, 0x1, 0x1);
        gbc.writeMem(0x652f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc06d);
        EXPECT(gbc.pc(), 0x6531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 035F
        gbc.setState(0xae1b, 0x34da, 0x6d0, 0x27b2, 0xdfe8, 0x5bac, 0x0, 0x1);
        gbc.writeMem(0xae1b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x34da);
        EXPECT(gbc.pc(), 0xae1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae1b), 0xcb);
        EXPECT(gbc.readMem(0xae1c), 0x90);
        // CB 90 0360
        gbc.setState(0xc841, 0xaac5, 0x560, 0x131b, 0x7ce3, 0x5f97, 0x1, 0x1);
        gbc.writeMem(0xc841, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0xc843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc841), 0xcb);
        EXPECT(gbc.readMem(0xc842), 0x90);
        // CB 90 0361
        gbc.setState(0x1a48, 0x27a9, 0x81a0, 0xa267, 0x7192, 0xcf98, 0x1, 0x1);
        gbc.writeMem(0x1a48, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x27a9);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0362
        gbc.setState(0xa746, 0x956, 0xdcc0, 0x9e12, 0xaad9, 0xa1af, 0x0, 0x0);
        gbc.writeMem(0xa746, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x956);
        EXPECT(gbc.pc(), 0xa748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa746), 0xcb);
        EXPECT(gbc.readMem(0xa747), 0x90);
        // CB 90 0363
        gbc.setState(0x2d15, 0x30bd, 0x1400, 0x1f1b, 0x35dd, 0xe05a, 0x1, 0x1);
        gbc.writeMem(0x2d15, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x30bd);
        EXPECT(gbc.pc(), 0x2d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0364
        gbc.setState(0x8238, 0x66a0, 0x5e60, 0xcc48, 0x9752, 0x310c, 0x0, 0x1);
        gbc.writeMem(0x8238, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x66a0);
        EXPECT(gbc.pc(), 0x823a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8238), 0xcb);
        EXPECT(gbc.readMem(0x8239), 0x90);
        // CB 90 0365
        gbc.setState(0xa007, 0x9479, 0x9ce0, 0x673f, 0x58bd, 0xd90, 0x0, 0x1);
        gbc.writeMem(0xa007, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9479);
        EXPECT(gbc.pc(), 0xa009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa007), 0xcb);
        EXPECT(gbc.readMem(0xa008), 0x90);
        // CB 90 0366
        gbc.setState(0xa726, 0x8984, 0x46b0, 0xd934, 0x1d63, 0xaf28, 0x0, 0x1);
        gbc.writeMem(0xa726, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8984);
        EXPECT(gbc.pc(), 0xa728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa726), 0xcb);
        EXPECT(gbc.readMem(0xa727), 0x90);
        // CB 90 0367
        gbc.setState(0xd8f9, 0x66df, 0xbf30, 0xe9fe, 0xeaba, 0xd150, 0x1, 0x0);
        gbc.writeMem(0xd8f9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x66df);
        EXPECT(gbc.pc(), 0xd8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8f9), 0xcb);
        EXPECT(gbc.readMem(0xd8fa), 0x90);
        // CB 90 0368
        gbc.setState(0x51c2, 0xa8e2, 0x5340, 0xe852, 0x3f1c, 0xa98, 0x1, 0x0);
        gbc.writeMem(0x51c2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa8e2);
        EXPECT(gbc.pc(), 0x51c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0369
        gbc.setState(0xb6dc, 0xc523, 0xc0d0, 0xfdb8, 0x3be0, 0xf20a, 0x1, 0x0);
        gbc.writeMem(0xb6dc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc523);
        EXPECT(gbc.pc(), 0xb6de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6dc), 0xcb);
        EXPECT(gbc.readMem(0xb6dd), 0x90);
        // CB 90 036A
        gbc.setState(0xafe8, 0x922b, 0x380, 0xff0a, 0xed0a, 0x4251, 0x0, 0x0);
        gbc.writeMem(0xafe8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x922b);
        EXPECT(gbc.pc(), 0xafea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafe8), 0xcb);
        EXPECT(gbc.readMem(0xafe9), 0x90);
        // CB 90 036B
        gbc.setState(0xa909, 0x6877, 0x3830, 0xbe81, 0xc956, 0xf57a, 0x0, 0x0);
        gbc.writeMem(0xa909, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6877);
        EXPECT(gbc.pc(), 0xa90b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa909), 0xcb);
        EXPECT(gbc.readMem(0xa90a), 0x90);
        // CB 90 036D
        gbc.setState(0xac6b, 0xc19f, 0x3f0, 0x7385, 0x473a, 0x5706, 0x0, 0x0);
        gbc.writeMem(0xac6b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc19f);
        EXPECT(gbc.pc(), 0xac6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6b), 0xcb);
        EXPECT(gbc.readMem(0xac6c), 0x90);
        // CB 90 036E
        gbc.setState(0xd72a, 0x375, 0x6090, 0xe78b, 0xef36, 0xcedb, 0x1, 0x0);
        gbc.writeMem(0xd72a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x375);
        EXPECT(gbc.pc(), 0xd72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72a), 0xcb);
        EXPECT(gbc.readMem(0xd72b), 0x90);
        // CB 90 036F
        gbc.setState(0x23a1, 0xb52d, 0x310, 0x8bad, 0xdde3, 0xa8e3, 0x0, 0x0);
        gbc.writeMem(0x23a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb52d);
        EXPECT(gbc.pc(), 0x23a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0370
        gbc.setState(0x76ef, 0x7049, 0x70d0, 0x423d, 0x2b32, 0xe9da, 0x0, 0x0);
        gbc.writeMem(0x76ef, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7049);
        EXPECT(gbc.pc(), 0x76f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0371
        gbc.setState(0xe963, 0xa7ba, 0xf50, 0xab0d, 0x93f7, 0x8b17, 0x1, 0x0);
        gbc.writeMem(0xe963, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa7ba);
        EXPECT(gbc.pc(), 0xe965);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe963), 0xcb);
        EXPECT(gbc.readMem(0xe964), 0x90);
        // CB 90 0372
        gbc.setState(0xaec3, 0xb235, 0x40a0, 0x26fd, 0x55d1, 0x68ef, 0x1, 0x1);
        gbc.writeMem(0xaec3, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb235);
        EXPECT(gbc.pc(), 0xaec5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaec3), 0xcb);
        EXPECT(gbc.readMem(0xaec4), 0x90);
        // CB 90 0373
        gbc.setState(0x5fa8, 0x8a5, 0x9ed0, 0x3987, 0x9e20, 0xfccc, 0x1, 0x1);
        gbc.writeMem(0x5fa8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8a5);
        EXPECT(gbc.pc(), 0x5faa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0374
        gbc.setState(0x37a5, 0x52b5, 0x2920, 0xf01f, 0xb2d1, 0xcd1e, 0x1, 0x1);
        gbc.writeMem(0x37a5, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x52b5);
        EXPECT(gbc.pc(), 0x37a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0376
        gbc.setState(0x6f78, 0xb34c, 0x6b30, 0x4680, 0x8f6c, 0x6a03, 0x1, 0x0);
        gbc.writeMem(0x6f78, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb34c);
        EXPECT(gbc.pc(), 0x6f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0377
        gbc.setState(0xc6d8, 0x8fd0, 0xe9c0, 0x3f2d, 0xd43f, 0xb629, 0x0, 0x1);
        gbc.writeMem(0xc6d8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8fd0);
        EXPECT(gbc.pc(), 0xc6da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6d8), 0xcb);
        EXPECT(gbc.readMem(0xc6d9), 0x90);
        // CB 90 0378
        gbc.setState(0x3b1e, 0x956c, 0xbc30, 0x1898, 0x3c41, 0x75c, 0x0, 0x1);
        gbc.writeMem(0x3b1e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x956c);
        EXPECT(gbc.pc(), 0x3b20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0379
        gbc.setState(0xcb64, 0x2f60, 0xa660, 0x2c4f, 0xb7a5, 0xac9, 0x1, 0x1);
        gbc.writeMem(0xcb64, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x2f60);
        EXPECT(gbc.pc(), 0xcb66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb64), 0xcb);
        EXPECT(gbc.readMem(0xcb65), 0x90);
        // CB 90 037A
        gbc.setState(0x25a8, 0xd496, 0x8940, 0xf5b0, 0x10b7, 0xcad1, 0x0, 0x1);
        gbc.writeMem(0x25a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd496);
        EXPECT(gbc.pc(), 0x25aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 037B
        gbc.setState(0xce15, 0x1a87, 0x1930, 0x754c, 0x36db, 0xe307, 0x1, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1a87);
        EXPECT(gbc.pc(), 0xce17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce15), 0xcb);
        EXPECT(gbc.readMem(0xce16), 0x90);
        // CB 90 037C
        gbc.setState(0x10bc, 0x3242, 0xb700, 0x81d5, 0x355a, 0x4be9, 0x0, 0x0);
        gbc.writeMem(0x10bc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x3242);
        EXPECT(gbc.pc(), 0x10be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 037D
        gbc.setState(0xb67a, 0x9cc, 0x13e0, 0x3dd1, 0x2033, 0x13d4, 0x0, 0x1);
        gbc.writeMem(0xb67a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9cc);
        EXPECT(gbc.pc(), 0xb67c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb67a), 0xcb);
        EXPECT(gbc.readMem(0xb67b), 0x90);
        // CB 90 037E
        gbc.setState(0xb623, 0xdc1, 0xa940, 0xa62d, 0x67b1, 0xf6da, 0x1, 0x1);
        gbc.writeMem(0xb623, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xdc1);
        EXPECT(gbc.pc(), 0xb625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb623), 0xcb);
        EXPECT(gbc.readMem(0xb624), 0x90);
        // CB 90 037F
        gbc.setState(0x3ba2, 0x62d8, 0xb880, 0x8f15, 0x6c7, 0xd482, 0x1, 0x1);
        gbc.writeMem(0x3ba2, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x62d8);
        EXPECT(gbc.pc(), 0x3ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0380
        gbc.setState(0x8e52, 0x6a24, 0x68c0, 0x592a, 0x98ed, 0x6334, 0x1, 0x0);
        gbc.writeMem(0x8e52, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6a24);
        EXPECT(gbc.pc(), 0x8e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e52), 0xcb);
        EXPECT(gbc.readMem(0x8e53), 0x90);
        // CB 90 0381
        gbc.setState(0x9329, 0x6263, 0xee70, 0xbfbd, 0xb980, 0x8602, 0x1, 0x0);
        gbc.writeMem(0x9329, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6263);
        EXPECT(gbc.pc(), 0x932b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9329), 0xcb);
        EXPECT(gbc.readMem(0x932a), 0x90);
        // CB 90 0382
        gbc.setState(0x8d85, 0xdc69, 0x1960, 0xc212, 0x737, 0xf2dd, 0x0, 0x0);
        gbc.writeMem(0x8d85, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xdc69);
        EXPECT(gbc.pc(), 0x8d87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d85), 0xcb);
        EXPECT(gbc.readMem(0x8d86), 0x90);
        // CB 90 0383
        gbc.setState(0xdc10, 0x8791, 0xecd0, 0xa43c, 0x2204, 0xb28f, 0x0, 0x1);
        gbc.writeMem(0xdc10, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8791);
        EXPECT(gbc.pc(), 0xdc12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc10), 0xcb);
        EXPECT(gbc.readMem(0xdc11), 0x90);
        // CB 90 0384
        gbc.setState(0x7dd1, 0x95fc, 0x5c90, 0x786e, 0x4ced, 0x8a9, 0x1, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x95fc);
        EXPECT(gbc.pc(), 0x7dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0386
        gbc.setState(0xd56b, 0x6494, 0xec0, 0x960a, 0x8bb7, 0x5998, 0x0, 0x0);
        gbc.writeMem(0xd56b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6494);
        EXPECT(gbc.pc(), 0xd56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56b), 0xcb);
        EXPECT(gbc.readMem(0xd56c), 0x90);
        // CB 90 0387
        gbc.setState(0xba7e, 0x7f31, 0x9ab0, 0x563b, 0x7a3d, 0xe0b1, 0x1, 0x0);
        gbc.writeMem(0xba7e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7f31);
        EXPECT(gbc.pc(), 0xba80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7e), 0xcb);
        EXPECT(gbc.readMem(0xba7f), 0x90);
        // CB 90 0388
        gbc.setState(0xea02, 0xd417, 0x8eb0, 0x559c, 0x2de, 0xd461, 0x1, 0x1);
        gbc.writeMem(0xea02, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xd417);
        EXPECT(gbc.pc(), 0xea04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea02), 0xcb);
        EXPECT(gbc.readMem(0xea03), 0x90);
        // CB 90 0389
        gbc.setState(0xbd37, 0x42c, 0x4bd0, 0x1b75, 0xadf6, 0xb616, 0x0, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x42c);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd37), 0xcb);
        EXPECT(gbc.readMem(0xbd38), 0x90);
        // CB 90 038A
        gbc.setState(0x4815, 0x314, 0xdb0, 0x2006, 0x4a0e, 0xd6f, 0x0, 0x1);
        gbc.writeMem(0x4815, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x314);
        EXPECT(gbc.pc(), 0x4817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 038B
        gbc.setState(0x41a8, 0x1677, 0x4570, 0x6b83, 0x3c03, 0x37ee, 0x0, 0x1);
        gbc.writeMem(0x41a8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1677);
        EXPECT(gbc.pc(), 0x41aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 038D
        gbc.setState(0xb14a, 0xbae7, 0x3d70, 0x36f4, 0x6c64, 0x9ee6, 0x1, 0x1);
        gbc.writeMem(0xb14a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0xb14c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14a), 0xcb);
        EXPECT(gbc.readMem(0xb14b), 0x90);
        // CB 90 038E
        gbc.setState(0xcf5a, 0x4b82, 0x5250, 0x4925, 0x76c2, 0xcf64, 0x1, 0x1);
        gbc.writeMem(0xcf5a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4b82);
        EXPECT(gbc.pc(), 0xcf5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5a), 0xcb);
        EXPECT(gbc.readMem(0xcf5b), 0x90);
        // CB 90 038F
        gbc.setState(0xae76, 0xc9f8, 0x48e0, 0x7188, 0xb00b, 0x141c, 0x0, 0x1);
        gbc.writeMem(0xae76, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc9f8);
        EXPECT(gbc.pc(), 0xae78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae76), 0xcb);
        EXPECT(gbc.readMem(0xae77), 0x90);
        // CB 90 0390
        gbc.setState(0x992c, 0x8426, 0xfb50, 0x7c30, 0x7329, 0x1aea, 0x0, 0x1);
        gbc.writeMem(0x992c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8426);
        EXPECT(gbc.pc(), 0x992e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992c), 0xcb);
        EXPECT(gbc.readMem(0x992d), 0x90);
        // CB 90 0391
        gbc.setState(0x2414, 0x1ed9, 0xaef0, 0xc388, 0xdbca, 0xdab3, 0x0, 0x0);
        gbc.writeMem(0x2414, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1ed9);
        EXPECT(gbc.pc(), 0x2416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0393
        gbc.setState(0xd8bb, 0x7c65, 0x7350, 0xfcac, 0x95fa, 0x8b13, 0x1, 0x1);
        gbc.writeMem(0xd8bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7c65);
        EXPECT(gbc.pc(), 0xd8bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8bb), 0xcb);
        EXPECT(gbc.readMem(0xd8bc), 0x90);
        // CB 90 0394
        gbc.setState(0x138d, 0x940b, 0xcbb0, 0xc5ff, 0xe176, 0x60a0, 0x0, 0x0);
        gbc.writeMem(0x138d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x940b);
        EXPECT(gbc.pc(), 0x138f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0395
        gbc.setState(0xa6f, 0xdbc9, 0x76a0, 0xd767, 0xeef4, 0x3476, 0x1, 0x1);
        gbc.writeMem(0xa6f, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdbc9);
        EXPECT(gbc.pc(), 0xa71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 0396
        gbc.setState(0xbc1d, 0x70af, 0x6a90, 0xbdcd, 0x8125, 0xbbb2, 0x1, 0x0);
        gbc.writeMem(0xbc1d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x70af);
        EXPECT(gbc.pc(), 0xbc1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1d), 0xcb);
        EXPECT(gbc.readMem(0xbc1e), 0x90);
        // CB 90 0397
        gbc.setState(0xc8a1, 0x662c, 0xdf70, 0xe382, 0x1338, 0xdfae, 0x0, 0x0);
        gbc.writeMem(0xc8a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x662c);
        EXPECT(gbc.pc(), 0xc8a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a1), 0xcb);
        EXPECT(gbc.readMem(0xc8a2), 0x90);
        // CB 90 0398
        gbc.setState(0x3af9, 0xaf5, 0x5bb0, 0xb9c5, 0x665b, 0xeebc, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaf5);
        EXPECT(gbc.pc(), 0x3afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 0399
        gbc.setState(0xe0e8, 0xfe07, 0x4520, 0x9cd5, 0xe121, 0xdad2, 0x1, 0x1);
        gbc.writeMem(0xe0e8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfe07);
        EXPECT(gbc.pc(), 0xe0ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e8), 0xcb);
        EXPECT(gbc.readMem(0xe0e9), 0x90);
        // CB 90 039A
        gbc.setState(0xecc6, 0xd330, 0x920, 0x420f, 0x2c18, 0x6d88, 0x1, 0x0);
        gbc.writeMem(0xecc6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0xecc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc6), 0xcb);
        EXPECT(gbc.readMem(0xecc7), 0x90);
        // CB 90 039B
        gbc.setState(0x9d48, 0xc9d9, 0x2b10, 0x2d76, 0x60ca, 0xc4ff, 0x0, 0x1);
        gbc.writeMem(0x9d48, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc9d9);
        EXPECT(gbc.pc(), 0x9d4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d48), 0xcb);
        EXPECT(gbc.readMem(0x9d49), 0x90);
        // CB 90 039C
        gbc.setState(0xd703, 0xe942, 0x83a0, 0x2ae8, 0x4e9b, 0xd5e7, 0x0, 0x1);
        gbc.writeMem(0xd703, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe942);
        EXPECT(gbc.pc(), 0xd705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd703), 0xcb);
        EXPECT(gbc.readMem(0xd704), 0x90);
        // CB 90 039D
        gbc.setState(0x39a9, 0x6e62, 0xaba0, 0x98d1, 0x8a6f, 0x536b, 0x0, 0x1);
        gbc.writeMem(0x39a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6e62);
        EXPECT(gbc.pc(), 0x39ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 039E
        gbc.setState(0x52a1, 0xf895, 0xeef0, 0xb7d9, 0x2be4, 0x1ca7, 0x0, 0x0);
        gbc.writeMem(0x52a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf895);
        EXPECT(gbc.pc(), 0x52a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 039F
        gbc.setState(0x7d72, 0xb3cc, 0xd650, 0xe243, 0x62a6, 0xdf1d, 0x1, 0x0);
        gbc.writeMem(0x7d72, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb3cc);
        EXPECT(gbc.pc(), 0x7d74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03A1
        gbc.setState(0x9873, 0x157e, 0xa60, 0x4f87, 0x14c6, 0x28e4, 0x1, 0x1);
        gbc.writeMem(0x9873, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x157e);
        EXPECT(gbc.pc(), 0x9875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9873), 0xcb);
        EXPECT(gbc.readMem(0x9874), 0x90);
        // CB 90 03A2
        gbc.setState(0x1dda, 0x28b6, 0xa60, 0x41d9, 0x5766, 0x8beb, 0x1, 0x1);
        gbc.writeMem(0x1dda, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x28b6);
        EXPECT(gbc.pc(), 0x1ddc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03A3
        gbc.setState(0xe97, 0xa1d5, 0x8890, 0x960d, 0xca20, 0xab2f, 0x1, 0x1);
        gbc.writeMem(0xe97, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa1d5);
        EXPECT(gbc.pc(), 0xe99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03A5
        gbc.setState(0x575c, 0xdb08, 0xfbf0, 0x6eb3, 0xb4bc, 0x2ee9, 0x1, 0x1);
        gbc.writeMem(0x575c, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdb08);
        EXPECT(gbc.pc(), 0x575e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03A6
        gbc.setState(0xdb17, 0xdffb, 0x8ae0, 0xdce4, 0xfa76, 0xbb50, 0x1, 0x1);
        gbc.writeMem(0xdb17, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdffb);
        EXPECT(gbc.pc(), 0xdb19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb17), 0xcb);
        EXPECT(gbc.readMem(0xdb18), 0x90);
        // CB 90 03A7
        gbc.setState(0x81d6, 0x16fd, 0x6d90, 0xb276, 0x7eea, 0xd824, 0x1, 0x1);
        gbc.writeMem(0x81d6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x16fd);
        EXPECT(gbc.pc(), 0x81d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d6), 0xcb);
        EXPECT(gbc.readMem(0x81d7), 0x90);
        // CB 90 03A8
        gbc.setState(0x3e7d, 0xe1d9, 0x38b0, 0x610, 0xf87f, 0x96df, 0x0, 0x1);
        gbc.writeMem(0x3e7d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe1d9);
        EXPECT(gbc.pc(), 0x3e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03A9
        gbc.setState(0xbb98, 0x890b, 0xf50, 0xd0c1, 0xb236, 0xb9e1, 0x0, 0x0);
        gbc.writeMem(0xbb98, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x890b);
        EXPECT(gbc.pc(), 0xbb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb98), 0xcb);
        EXPECT(gbc.readMem(0xbb99), 0x90);
        // CB 90 03AA
        gbc.setState(0xc542, 0x8e4a, 0x2530, 0x8723, 0x51e2, 0x914d, 0x0, 0x1);
        gbc.writeMem(0xc542, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8e4a);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0x90);
        // CB 90 03AB
        gbc.setState(0xe44a, 0xfb4, 0x64a0, 0x2a76, 0xe514, 0xa8c0, 0x0, 0x0);
        gbc.writeMem(0xe44a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfb4);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe44a), 0xcb);
        EXPECT(gbc.readMem(0xe44b), 0x90);
        // CB 90 03AC
        gbc.setState(0x9372, 0xae5f, 0x330, 0xc6ec, 0x78b6, 0x82e8, 0x0, 0x0);
        gbc.writeMem(0x9372, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xae5f);
        EXPECT(gbc.pc(), 0x9374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9372), 0xcb);
        EXPECT(gbc.readMem(0x9373), 0x90);
        // CB 90 03AD
        gbc.setState(0x14d6, 0x16d3, 0x6250, 0xbc6c, 0x2925, 0xc2d3, 0x1, 0x0);
        gbc.writeMem(0x14d6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x16d3);
        EXPECT(gbc.pc(), 0x14d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03AE
        gbc.setState(0x4c65, 0x1e0d, 0xf210, 0x131e, 0x3c9a, 0x19e0, 0x1, 0x0);
        gbc.writeMem(0x4c65, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1e0d);
        EXPECT(gbc.pc(), 0x4c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03AF
        gbc.setState(0x500e, 0xe2c0, 0x6410, 0xb0df, 0x62df, 0x804, 0x1, 0x0);
        gbc.writeMem(0x500e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe2c0);
        EXPECT(gbc.pc(), 0x5010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03B0
        gbc.setState(0xaf05, 0xe330, 0x1e70, 0xdc92, 0x6e47, 0xb881, 0x1, 0x1);
        gbc.writeMem(0xaf05, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe330);
        EXPECT(gbc.pc(), 0xaf07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf05), 0xcb);
        EXPECT(gbc.readMem(0xaf06), 0x90);
        // CB 90 03B1
        gbc.setState(0x4680, 0x63a8, 0xae70, 0xd5e4, 0x3b4a, 0xb525, 0x0, 0x1);
        gbc.writeMem(0x4680, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x63a8);
        EXPECT(gbc.pc(), 0x4682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03B2
        gbc.setState(0x9666, 0x52ba, 0x3090, 0xf567, 0xf289, 0x6675, 0x1, 0x0);
        gbc.writeMem(0x9666, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0x9668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9666), 0xcb);
        EXPECT(gbc.readMem(0x9667), 0x90);
        // CB 90 03B4
        gbc.setState(0x55cb, 0x8f70, 0x5920, 0x96f1, 0xa29, 0x747a, 0x0, 0x0);
        gbc.writeMem(0x55cb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8f70);
        EXPECT(gbc.pc(), 0x55cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03B5
        gbc.setState(0x61f9, 0xce11, 0xcd00, 0x3b8, 0x8573, 0x5b47, 0x1, 0x0);
        gbc.writeMem(0x61f9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xce11);
        EXPECT(gbc.pc(), 0x61fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03B6
        gbc.setState(0x2c95, 0x6244, 0xc5a0, 0x4382, 0x839c, 0xd16f, 0x1, 0x0);
        gbc.writeMem(0x2c95, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6244);
        EXPECT(gbc.pc(), 0x2c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03B7
        gbc.setState(0x7711, 0x5439, 0xf60, 0x17a8, 0xae7a, 0x1ef7, 0x1, 0x1);
        gbc.writeMem(0x7711, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5439);
        EXPECT(gbc.pc(), 0x7713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03B8
        gbc.setState(0x5a1, 0xa693, 0xb850, 0x7011, 0x61f3, 0x520, 0x0, 0x0);
        gbc.writeMem(0x5a1, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa693);
        EXPECT(gbc.pc(), 0x5a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03B9
        gbc.setState(0x20d6, 0x47f7, 0x8780, 0xe98e, 0xcf4d, 0x6216, 0x0, 0x1);
        gbc.writeMem(0x20d6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x47f7);
        EXPECT(gbc.pc(), 0x20d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03BA
        gbc.setState(0x9eb9, 0x743b, 0x7750, 0xb5d7, 0x1c43, 0xf3, 0x0, 0x0);
        gbc.writeMem(0x9eb9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0x9ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb9), 0xcb);
        EXPECT(gbc.readMem(0x9eba), 0x90);
        // CB 90 03BB
        gbc.setState(0xb285, 0x1b8e, 0x7bb0, 0x8eec, 0xd575, 0x7e1d, 0x0, 0x0);
        gbc.writeMem(0xb285, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1b8e);
        EXPECT(gbc.pc(), 0xb287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb285), 0xcb);
        EXPECT(gbc.readMem(0xb286), 0x90);
        // CB 90 03BC
        gbc.setState(0xd1e9, 0x8f1, 0x3490, 0xfb, 0x5c97, 0x6c4d, 0x1, 0x0);
        gbc.writeMem(0xd1e9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8f1);
        EXPECT(gbc.pc(), 0xd1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1e9), 0xcb);
        EXPECT(gbc.readMem(0xd1ea), 0x90);
        // CB 90 03BD
        gbc.setState(0xc9a9, 0x9bcf, 0x5e00, 0x5307, 0xdb31, 0xecd0, 0x1, 0x1);
        gbc.writeMem(0xc9a9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9bcf);
        EXPECT(gbc.pc(), 0xc9ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a9), 0xcb);
        EXPECT(gbc.readMem(0xc9aa), 0x90);
        // CB 90 03BE
        gbc.setState(0xa5bb, 0x8167, 0x2fa0, 0xe3f8, 0xc208, 0xd379, 0x0, 0x0);
        gbc.writeMem(0xa5bb, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8167);
        EXPECT(gbc.pc(), 0xa5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bb), 0xcb);
        EXPECT(gbc.readMem(0xa5bc), 0x90);
        // CB 90 03C0
        gbc.setState(0xc406, 0xc56, 0x5a40, 0xd964, 0x51be, 0x9757, 0x1, 0x0);
        gbc.writeMem(0xc406, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc56);
        EXPECT(gbc.pc(), 0xc408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc406), 0xcb);
        EXPECT(gbc.readMem(0xc407), 0x90);
        // CB 90 03C1
        gbc.setState(0xb289, 0x5bf5, 0xeae0, 0x57d5, 0x441c, 0x6b78, 0x1, 0x1);
        gbc.writeMem(0xb289, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0xb28b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb289), 0xcb);
        EXPECT(gbc.readMem(0xb28a), 0x90);
        // CB 90 03C2
        gbc.setState(0xc90b, 0x6ab2, 0x1460, 0x77cb, 0xc459, 0xfe74, 0x0, 0x1);
        gbc.writeMem(0xc90b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6ab2);
        EXPECT(gbc.pc(), 0xc90d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc90b), 0xcb);
        EXPECT(gbc.readMem(0xc90c), 0x90);
        // CB 90 03C3
        gbc.setState(0x6015, 0xb7fd, 0x6d30, 0x43b0, 0x2d0a, 0x8134, 0x1, 0x1);
        gbc.writeMem(0x6015, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb7fd);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03C4
        gbc.setState(0xcf98, 0x63a0, 0xacc0, 0x8e60, 0x6bbb, 0xd9be, 0x1, 0x1);
        gbc.writeMem(0xcf98, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x63a0);
        EXPECT(gbc.pc(), 0xcf9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf98), 0xcb);
        EXPECT(gbc.readMem(0xcf99), 0x90);
        // CB 90 03C5
        gbc.setState(0x1340, 0x7226, 0xaae0, 0x811e, 0xd9ce, 0x224e, 0x0, 0x0);
        gbc.writeMem(0x1340, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7226);
        EXPECT(gbc.pc(), 0x1342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03C6
        gbc.setState(0xd8d9, 0xe949, 0x48f0, 0x5b7f, 0xfad2, 0x927e, 0x0, 0x0);
        gbc.writeMem(0xd8d9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe949);
        EXPECT(gbc.pc(), 0xd8db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8d9), 0xcb);
        EXPECT(gbc.readMem(0xd8da), 0x90);
        // CB 90 03C7
        gbc.setState(0x7c18, 0xd5ab, 0x4230, 0x19a9, 0xcd40, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x7c18, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd5ab);
        EXPECT(gbc.pc(), 0x7c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03C8
        gbc.setState(0xdf66, 0xc446, 0xbbf0, 0x4f86, 0x4cb6, 0x8f9, 0x0, 0x1);
        gbc.writeMem(0xdf66, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc446);
        EXPECT(gbc.pc(), 0xdf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf66), 0xcb);
        EXPECT(gbc.readMem(0xdf67), 0x90);
        // CB 90 03C9
        gbc.setState(0x91b8, 0xc3bb, 0xba60, 0x1254, 0xfb, 0x3e9b, 0x0, 0x0);
        gbc.writeMem(0x91b8, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x91ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b8), 0xcb);
        EXPECT(gbc.readMem(0x91b9), 0x90);
        // CB 90 03CA
        gbc.setState(0x3274, 0x5ae, 0x4420, 0x74f5, 0xa971, 0x73ec, 0x0, 0x0);
        gbc.writeMem(0x3274, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5ae);
        EXPECT(gbc.pc(), 0x3276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03CB
        gbc.setState(0x4b9d, 0xee69, 0x1110, 0x6c1c, 0xe115, 0x1d9e, 0x1, 0x1);
        gbc.writeMem(0x4b9d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xee69);
        EXPECT(gbc.pc(), 0x4b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03CC
        gbc.setState(0x1604, 0xdfe7, 0x5120, 0x9415, 0x890f, 0x6ec4, 0x0, 0x1);
        gbc.writeMem(0x1604, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0x1606);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03CD
        gbc.setState(0x2d81, 0xd780, 0xfe20, 0x9e30, 0xa9cf, 0x2dcc, 0x0, 0x1);
        gbc.writeMem(0x2d81, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd780);
        EXPECT(gbc.pc(), 0x2d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03CE
        gbc.setState(0x7436, 0xc99d, 0xa430, 0xa3fd, 0xa30f, 0x278, 0x0, 0x0);
        gbc.writeMem(0x7436, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc99d);
        EXPECT(gbc.pc(), 0x7438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03D0
        gbc.setState(0x8732, 0xf50b, 0x3680, 0x5b54, 0x19b5, 0x728, 0x1, 0x1);
        gbc.writeMem(0x8732, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf50b);
        EXPECT(gbc.pc(), 0x8734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8732), 0xcb);
        EXPECT(gbc.readMem(0x8733), 0x90);
        // CB 90 03D1
        gbc.setState(0x6493, 0x9b4f, 0xc490, 0xb228, 0x6e7, 0xafef, 0x0, 0x1);
        gbc.writeMem(0x6493, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9b4f);
        EXPECT(gbc.pc(), 0x6495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03D3
        gbc.setState(0x391, 0x83ef, 0xf00, 0x647d, 0xeddd, 0x659, 0x0, 0x0);
        gbc.writeMem(0x391, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x83ef);
        EXPECT(gbc.pc(), 0x393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03D4
        gbc.setState(0xe2a7, 0x6a4e, 0x3590, 0x979b, 0x3932, 0xf2ed, 0x0, 0x1);
        gbc.writeMem(0xe2a7, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6a4e);
        EXPECT(gbc.pc(), 0xe2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a7), 0xcb);
        EXPECT(gbc.readMem(0xe2a8), 0x90);
        // CB 90 03D5
        gbc.setState(0x4b6, 0x5ec, 0xe050, 0xe8cf, 0xb0f2, 0x581, 0x1, 0x1);
        gbc.writeMem(0x4b6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5ec);
        EXPECT(gbc.pc(), 0x4b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03D6
        gbc.setState(0xd8c6, 0x705a, 0xebc0, 0xe4a2, 0x3247, 0xb01, 0x0, 0x0);
        gbc.writeMem(0xd8c6, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x705a);
        EXPECT(gbc.pc(), 0xd8c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c6), 0xcb);
        EXPECT(gbc.readMem(0xd8c7), 0x90);
        // CB 90 03D7
        gbc.setState(0x997d, 0xe20f, 0x4140, 0x8de9, 0xc09c, 0x7414, 0x0, 0x1);
        gbc.writeMem(0x997d, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe20f);
        EXPECT(gbc.pc(), 0x997f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x997d), 0xcb);
        EXPECT(gbc.readMem(0x997e), 0x90);
        // CB 90 03D8
        gbc.setState(0x83dc, 0x1166, 0x17b0, 0x9ebe, 0x1295, 0x1f21, 0x0, 0x0);
        gbc.writeMem(0x83dc, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1166);
        EXPECT(gbc.pc(), 0x83de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83dc), 0xcb);
        EXPECT(gbc.readMem(0x83dd), 0x90);
        // CB 90 03D9
        gbc.setState(0x2ab9, 0xc9b0, 0xe320, 0x57e1, 0x71b3, 0x49e7, 0x1, 0x1);
        gbc.writeMem(0x2ab9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc9b0);
        EXPECT(gbc.pc(), 0x2abb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03DA
        gbc.setState(0xaf31, 0xf61b, 0x60f0, 0xfe6, 0x121c, 0xc801, 0x0, 0x1);
        gbc.writeMem(0xaf31, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf61b);
        EXPECT(gbc.pc(), 0xaf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf31), 0xcb);
        EXPECT(gbc.readMem(0xaf32), 0x90);
        // CB 90 03DC
        gbc.setState(0xed8b, 0x4e2e, 0x7270, 0x9abc, 0x9303, 0x622, 0x0, 0x1);
        gbc.writeMem(0xed8b, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4e2e);
        EXPECT(gbc.pc(), 0xed8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8b), 0xcb);
        EXPECT(gbc.readMem(0xed8c), 0x90);
        // CB 90 03DD
        gbc.setState(0x5717, 0xd7f3, 0xc890, 0xfee0, 0xb6c6, 0x46f1, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0x5719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03DE
        gbc.setState(0x1498, 0xd1ef, 0x11d0, 0x3f53, 0xfdb0, 0x746e, 0x1, 0x0);
        gbc.writeMem(0x1498, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd1ef);
        EXPECT(gbc.pc(), 0x149a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03DF
        gbc.setState(0x8373, 0x4d4, 0xbdb0, 0xe7dc, 0x7d58, 0x4d98, 0x0, 0x1);
        gbc.writeMem(0x8373, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4d4);
        EXPECT(gbc.pc(), 0x8375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8373), 0xcb);
        EXPECT(gbc.readMem(0x8374), 0x90);
        // CB 90 03E0
        gbc.setState(0xce3a, 0x778e, 0x3de0, 0x15eb, 0xd83c, 0xa7b4, 0x1, 0x0);
        gbc.writeMem(0xce3a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x778e);
        EXPECT(gbc.pc(), 0xce3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce3a), 0xcb);
        EXPECT(gbc.readMem(0xce3b), 0x90);
        // CB 90 03E1
        gbc.setState(0x4b8a, 0xecf8, 0xc240, 0xd4a6, 0xb933, 0xbd76, 0x1, 0x0);
        gbc.writeMem(0x4b8a, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xecf8);
        EXPECT(gbc.pc(), 0x4b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03E3
        gbc.setState(0x5330, 0x94c, 0x1a40, 0x29ab, 0x19dc, 0x34f1, 0x0, 0x0);
        gbc.writeMem(0x5330, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x94c);
        EXPECT(gbc.pc(), 0x5332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 90 03E4
        gbc.setState(0xede0, 0x502b, 0xa000, 0x3a0a, 0xdc16, 0x28a0, 0x0, 0x1);
        gbc.writeMem(0xede0, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x502b);
        EXPECT(gbc.pc(), 0xede2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede0), 0xcb);
        EXPECT(gbc.readMem(0xede1), 0x90);
        // CB 90 03E5
        gbc.setState(0x8538, 0xc0a4, 0x5a90, 0xe399, 0x6800, 0x60e9, 0x0, 0x0);
        gbc.writeMem(0x8538, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc0a4);
        EXPECT(gbc.pc(), 0x853a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8538), 0xcb);
        EXPECT(gbc.readMem(0x8539), 0x90);
        // CB 90 03E6
        gbc.setState(0x5a6e, 0xedc1, 0xe190, 0x2165, 0xabe, 0xdd8f, 0x1, 0x1);
        gbc.writeMem(0x5a6e, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xedc1);
        EXPECT(gbc.pc(), 0x5a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 90 03E7
        gbc.setState(0xe5e9, 0x8c51, 0x26a0, 0x7f03, 0x483c, 0xc58f, 0x1, 0x1);
        gbc.writeMem(0xe5e9, { 0xcb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8c51);
        EXPECT(gbc.pc(), 0xe5eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e9), 0xcb);
        EXPECT(gbc.readMem(0xe5ea), 0x90);
    }
