    TEST(gbcemu, opcode_cb_5c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 5C 0000
        gbc.setState(0x4776, 0x1e74, 0xb200, 0xbcd5, 0xb4d1, 0xda0d, 0x1, 0x0);
        gbc.writeMem(0x4776, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0x4778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0001
        gbc.setState(0x9ca, 0xf79a, 0xb580, 0xfccc, 0xb89f, 0x26f7, 0x0, 0x1);
        gbc.writeMem(0x9ca, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf79a, gbc.sp());
        EXPECT(0x9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0003
        gbc.setState(0x448a, 0x546b, 0x2540, 0xfdf3, 0xaf24, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x448a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x546b, gbc.sp());
        EXPECT(0x448c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0004
        gbc.setState(0x19b1, 0x123, 0xa260, 0xb05, 0x218c, 0xfe2c, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x123, gbc.sp());
        EXPECT(0x19b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0005
        gbc.setState(0xc77, 0xde88, 0x4c90, 0xe15e, 0xeb0f, 0xa33b, 0x1, 0x0);
        gbc.writeMem(0xc77, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xde88, gbc.sp());
        EXPECT(0xc79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0006
        gbc.setState(0x8a6e, 0x531a, 0xdf00, 0x962d, 0x25ea, 0x1208, 0x1, 0x1);
        gbc.writeMem(0x8a6e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x531a, gbc.sp());
        EXPECT(0x8a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a6e));
        EXPECT(0x5c, gbc.readMem(0x8a6f));
        // CB 5C 0007
        gbc.setState(0xa2a7, 0xf3f8, 0x7700, 0xa0f, 0xbe9d, 0x64e9, 0x0, 0x0);
        gbc.writeMem(0xa2a7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf3f8, gbc.sp());
        EXPECT(0xa2a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a7));
        EXPECT(0x5c, gbc.readMem(0xa2a8));
        // CB 5C 0008
        gbc.setState(0x2487, 0x2c5c, 0x4ad0, 0x808d, 0x5006, 0x3755, 0x1, 0x1);
        gbc.writeMem(0x2487, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2c5c, gbc.sp());
        EXPECT(0x2489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 000A
        gbc.setState(0x2620, 0xffab, 0x3670, 0x297c, 0x46b6, 0xd738, 0x1, 0x1);
        gbc.writeMem(0x2620, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xffab, gbc.sp());
        EXPECT(0x2622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 000B
        gbc.setState(0x4a82, 0xa211, 0x6ad0, 0x58d1, 0xdeeb, 0x211f, 0x0, 0x1);
        gbc.writeMem(0x4a82, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa211, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 000C
        gbc.setState(0xc9fd, 0x69c1, 0x7010, 0xcb20, 0x41ea, 0x1df, 0x1, 0x1);
        gbc.writeMem(0xc9fd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x69c1, gbc.sp());
        EXPECT(0xc9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9fd));
        EXPECT(0x5c, gbc.readMem(0xc9fe));
        // CB 5C 000D
        gbc.setState(0x4abf, 0x4bb8, 0x8650, 0x8a35, 0xf41, 0xe7aa, 0x1, 0x1);
        gbc.writeMem(0x4abf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4bb8, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 000E
        gbc.setState(0x8c60, 0x6edb, 0x4f0, 0x644d, 0xd854, 0x537b, 0x1, 0x0);
        gbc.writeMem(0x8c60, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0x8c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c60));
        EXPECT(0x5c, gbc.readMem(0x8c61));
        // CB 5C 000F
        gbc.setState(0x6edb, 0x764c, 0x7540, 0xba36, 0x1e0c, 0x89f8, 0x0, 0x1);
        gbc.writeMem(0x6edb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x764c, gbc.sp());
        EXPECT(0x6edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0010
        gbc.setState(0x7e2a, 0x2f08, 0xa8c0, 0x386c, 0x8274, 0x828b, 0x1, 0x0);
        gbc.writeMem(0x7e2a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2f08, gbc.sp());
        EXPECT(0x7e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0011
        gbc.setState(0xde40, 0xd521, 0x3ee0, 0xa6a5, 0x8402, 0x465b, 0x0, 0x0);
        gbc.writeMem(0xde40, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd521, gbc.sp());
        EXPECT(0xde42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde40));
        EXPECT(0x5c, gbc.readMem(0xde41));
        // CB 5C 0012
        gbc.setState(0xddb2, 0x6415, 0xfba0, 0x8bc, 0x2ba2, 0xdae0, 0x0, 0x0);
        gbc.writeMem(0xddb2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6415, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb2));
        EXPECT(0x5c, gbc.readMem(0xddb3));
        // CB 5C 0013
        gbc.setState(0xe6c8, 0x2df0, 0x8bf0, 0x432f, 0x61ee, 0x3e7a, 0x0, 0x1);
        gbc.writeMem(0xe6c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xe6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c8));
        EXPECT(0x5c, gbc.readMem(0xe6c9));
        // CB 5C 0015
        gbc.setState(0xcd4, 0x6436, 0x2dd0, 0x4c8f, 0xe033, 0x3fef, 0x0, 0x1);
        gbc.writeMem(0xcd4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0xcd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0016
        gbc.setState(0x765f, 0x4713, 0xf070, 0xbd71, 0xe08, 0x14dc, 0x1, 0x1);
        gbc.writeMem(0x765f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4713, gbc.sp());
        EXPECT(0x7661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0017
        gbc.setState(0xdc63, 0x5dfd, 0x1360, 0x43a9, 0x5151, 0xf94a, 0x0, 0x0);
        gbc.writeMem(0xdc63, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0xdc65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc63));
        EXPECT(0x5c, gbc.readMem(0xdc64));
        // CB 5C 0018
        gbc.setState(0x3b42, 0x76e, 0x1b60, 0xd730, 0xc861, 0x6d72, 0x0, 0x1);
        gbc.writeMem(0x3b42, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0x3b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 001A
        gbc.setState(0x977a, 0x1328, 0x1fc0, 0x7202, 0xf1a9, 0xe145, 0x1, 0x0);
        gbc.writeMem(0x977a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1328, gbc.sp());
        EXPECT(0x977c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977a));
        EXPECT(0x5c, gbc.readMem(0x977b));
        // CB 5C 001B
        gbc.setState(0x7007, 0xbdce, 0x1d50, 0xe9bf, 0x156f, 0xed93, 0x1, 0x1);
        gbc.writeMem(0x7007, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xbdce, gbc.sp());
        EXPECT(0x7009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 001C
        gbc.setState(0x6549, 0x5b7c, 0x6170, 0xbcf6, 0xaed3, 0xfb8, 0x1, 0x0);
        gbc.writeMem(0x6549, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5b7c, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 001D
        gbc.setState(0x6201, 0x86ab, 0x5bb0, 0x4e35, 0x3f27, 0xf696, 0x0, 0x0);
        gbc.writeMem(0x6201, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x86ab, gbc.sp());
        EXPECT(0x6203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 001E
        gbc.setState(0xc9ab, 0xec9f, 0x42d0, 0xa737, 0xa219, 0x365b, 0x1, 0x1);
        gbc.writeMem(0xc9ab, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xec9f, gbc.sp());
        EXPECT(0xc9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ab));
        EXPECT(0x5c, gbc.readMem(0xc9ac));
        // CB 5C 001F
        gbc.setState(0xd144, 0xadfb, 0x2320, 0x1fda, 0x87c3, 0x7748, 0x1, 0x0);
        gbc.writeMem(0xd144, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xadfb, gbc.sp());
        EXPECT(0xd146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd144));
        EXPECT(0x5c, gbc.readMem(0xd145));
        // CB 5C 0020
        gbc.setState(0x5890, 0xdcf4, 0x7f60, 0x38b1, 0xcb67, 0xba2c, 0x1, 0x0);
        gbc.writeMem(0x5890, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xdcf4, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0021
        gbc.setState(0xdde1, 0xfc32, 0xcc30, 0x9ba3, 0x1936, 0xf262, 0x0, 0x0);
        gbc.writeMem(0xdde1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfc32, gbc.sp());
        EXPECT(0xdde3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdde1));
        EXPECT(0x5c, gbc.readMem(0xdde2));
        // CB 5C 0022
        gbc.setState(0xd257, 0xcb66, 0x76f0, 0x3bac, 0x90a5, 0xfba3, 0x0, 0x1);
        gbc.writeMem(0xd257, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcb66, gbc.sp());
        EXPECT(0xd259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd257));
        EXPECT(0x5c, gbc.readMem(0xd258));
        // CB 5C 0023
        gbc.setState(0xc7a7, 0x13cf, 0xe340, 0x8f30, 0xdd7d, 0xb95e, 0x1, 0x1);
        gbc.writeMem(0xc7a7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x13cf, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0x5c, gbc.readMem(0xc7a8));
        // CB 5C 0024
        gbc.setState(0xd87b, 0x8709, 0x1e00, 0x59a3, 0x534c, 0x23ad, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87b));
        EXPECT(0x5c, gbc.readMem(0xd87c));
        // CB 5C 0025
        gbc.setState(0x4a2e, 0x27b9, 0x1bd0, 0x1360, 0xa534, 0xbceb, 0x0, 0x0);
        gbc.writeMem(0x4a2e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x27b9, gbc.sp());
        EXPECT(0x4a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0026
        gbc.setState(0xd5e7, 0x23ea, 0x39e0, 0xf8b5, 0x7fd9, 0xde10, 0x0, 0x0);
        gbc.writeMem(0xd5e7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0xd5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e7));
        EXPECT(0x5c, gbc.readMem(0xd5e8));
        // CB 5C 0028
        gbc.setState(0x457d, 0x463b, 0xe540, 0xc149, 0x4972, 0x4a1, 0x0, 0x1);
        gbc.writeMem(0x457d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x463b, gbc.sp());
        EXPECT(0x457f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0029
        gbc.setState(0x58ba, 0x2709, 0x2a00, 0x56b2, 0xfdff, 0xa4fe, 0x0, 0x0);
        gbc.writeMem(0x58ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0x58bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 002A
        gbc.setState(0x47ff, 0x41b5, 0x3820, 0xfad, 0x9e4, 0x45e1, 0x1, 0x1);
        gbc.writeMem(0x47ff, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x41b5, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 002B
        gbc.setState(0x562e, 0xf754, 0x9a0, 0xd6fc, 0xece8, 0x8713, 0x1, 0x1);
        gbc.writeMem(0x562e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf754, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 002C
        gbc.setState(0x2866, 0x4cc2, 0xfa90, 0xd934, 0x2256, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0x2866, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4cc2, gbc.sp());
        EXPECT(0x2868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 002D
        gbc.setState(0x6f29, 0x5fa5, 0xdcb0, 0x2c7a, 0x7312, 0x7f94, 0x0, 0x0);
        gbc.writeMem(0x6f29, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5fa5, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 002F
        gbc.setState(0x368e, 0x16fe, 0xbdf0, 0x15f4, 0xa174, 0x9a74, 0x0, 0x0);
        gbc.writeMem(0x368e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x16fe, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0030
        gbc.setState(0x7d6f, 0x9ef8, 0x7e00, 0xfda0, 0xab8c, 0x9191, 0x1, 0x0);
        gbc.writeMem(0x7d6f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ef8, gbc.sp());
        EXPECT(0x7d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0031
        gbc.setState(0xe6f9, 0x6e3c, 0xfba0, 0x3f1f, 0x78b6, 0xced, 0x0, 0x1);
        gbc.writeMem(0xe6f9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0xe6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f9));
        EXPECT(0x5c, gbc.readMem(0xe6fa));
        // CB 5C 0032
        gbc.setState(0x9383, 0x3ff3, 0x72c0, 0xf0e4, 0x2f59, 0x1b56, 0x0, 0x1);
        gbc.writeMem(0x9383, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3ff3, gbc.sp());
        EXPECT(0x9385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9383));
        EXPECT(0x5c, gbc.readMem(0x9384));
        // CB 5C 0033
        gbc.setState(0x5fcc, 0xf6e1, 0x6fe0, 0xb419, 0xae52, 0x6813, 0x0, 0x1);
        gbc.writeMem(0x5fcc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf6e1, gbc.sp());
        EXPECT(0x5fce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0035
        gbc.setState(0xde15, 0xf1d0, 0xfde0, 0xff65, 0x6583, 0x3d91, 0x0, 0x1);
        gbc.writeMem(0xde15, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf1d0, gbc.sp());
        EXPECT(0xde17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde15));
        EXPECT(0x5c, gbc.readMem(0xde16));
        // CB 5C 0036
        gbc.setState(0x9846, 0xd59, 0x4d10, 0x992e, 0x8492, 0x5f89, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd59, gbc.sp());
        EXPECT(0x9848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9846));
        EXPECT(0x5c, gbc.readMem(0x9847));
        // CB 5C 0037
        gbc.setState(0x63e4, 0x7c67, 0x1460, 0x993a, 0xd0b9, 0x84fc, 0x1, 0x1);
        gbc.writeMem(0x63e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7c67, gbc.sp());
        EXPECT(0x63e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0038
        gbc.setState(0xe728, 0xf854, 0x8470, 0x8142, 0xcb1e, 0xe280, 0x0, 0x1);
        gbc.writeMem(0xe728, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf854, gbc.sp());
        EXPECT(0xe72a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe728));
        EXPECT(0x5c, gbc.readMem(0xe729));
        // CB 5C 0039
        gbc.setState(0x989b, 0x382a, 0x3d70, 0x38f4, 0xb50b, 0xd673, 0x1, 0x0);
        gbc.writeMem(0x989b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x382a, gbc.sp());
        EXPECT(0x989d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989b));
        EXPECT(0x5c, gbc.readMem(0x989c));
        // CB 5C 003A
        gbc.setState(0x6f6c, 0x6d96, 0x8160, 0x3f49, 0xde87, 0x7226, 0x0, 0x0);
        gbc.writeMem(0x6f6c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6d96, gbc.sp());
        EXPECT(0x6f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 003C
        gbc.setState(0xfa7, 0xef7c, 0xc3f0, 0xe424, 0x710e, 0x385, 0x0, 0x1);
        gbc.writeMem(0xfa7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xef7c, gbc.sp());
        EXPECT(0xfa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 003D
        gbc.setState(0xd71a, 0xbdcc, 0x67c0, 0x557b, 0x7fd7, 0x109b, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbdcc, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71a));
        EXPECT(0x5c, gbc.readMem(0xd71b));
        // CB 5C 003E
        gbc.setState(0xb216, 0xf651, 0x3930, 0x3659, 0x6135, 0xa68e, 0x1, 0x1);
        gbc.writeMem(0xb216, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf651, gbc.sp());
        EXPECT(0xb218, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb216));
        EXPECT(0x5c, gbc.readMem(0xb217));
        // CB 5C 003F
        gbc.setState(0xa00e, 0x156c, 0x2f70, 0x243a, 0xab4, 0xa724, 0x1, 0x1);
        gbc.writeMem(0xa00e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x156c, gbc.sp());
        EXPECT(0xa010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa00e));
        EXPECT(0x5c, gbc.readMem(0xa00f));
        // CB 5C 0040
        gbc.setState(0xe934, 0xbbc2, 0xff70, 0x23f3, 0xaacc, 0x4a48, 0x0, 0x1);
        gbc.writeMem(0xe934, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xe936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe934));
        EXPECT(0x5c, gbc.readMem(0xe935));
        // CB 5C 0041
        gbc.setState(0x6d25, 0xf7a0, 0x980, 0xc7b1, 0xf4a3, 0x2205, 0x0, 0x1);
        gbc.writeMem(0x6d25, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf7a0, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0042
        gbc.setState(0x43ba, 0xb8a0, 0xcae0, 0xf266, 0x3622, 0x4378, 0x0, 0x0);
        gbc.writeMem(0x43ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb8a0, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0043
        gbc.setState(0x94be, 0x4611, 0x8d20, 0xa36c, 0x1bc3, 0x8d9, 0x1, 0x0);
        gbc.writeMem(0x94be, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0x94c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94be));
        EXPECT(0x5c, gbc.readMem(0x94bf));
        // CB 5C 0044
        gbc.setState(0x5dc7, 0xf6e5, 0x3450, 0xa4c3, 0xdf70, 0x9fe9, 0x1, 0x1);
        gbc.writeMem(0x5dc7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf6e5, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0045
        gbc.setState(0xb216, 0xef07, 0x7460, 0x56a8, 0x1bb5, 0x617b, 0x0, 0x0);
        gbc.writeMem(0xb216, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0xb218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb216));
        EXPECT(0x5c, gbc.readMem(0xb217));
        // CB 5C 0046
        gbc.setState(0x3006, 0xd6f3, 0x9f40, 0x831c, 0x52e7, 0x38ee, 0x1, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd6f3, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0047
        gbc.setState(0xc249, 0xe9eb, 0x4ea0, 0x6444, 0xac86, 0xca54, 0x1, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe9eb, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x5c, gbc.readMem(0xc24a));
        // CB 5C 0048
        gbc.setState(0x3376, 0x9c06, 0x7470, 0xc3d1, 0xac4a, 0x2b11, 0x0, 0x0);
        gbc.writeMem(0x3376, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9c06, gbc.sp());
        EXPECT(0x3378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0049
        gbc.setState(0xb83a, 0xadee, 0xf140, 0xff20, 0x5b8d, 0x92fe, 0x1, 0x0);
        gbc.writeMem(0xb83a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xadee, gbc.sp());
        EXPECT(0xb83c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb83a));
        EXPECT(0x5c, gbc.readMem(0xb83b));
        // CB 5C 004A
        gbc.setState(0xbff5, 0x2b25, 0x9d40, 0x64b3, 0x1957, 0x684, 0x0, 0x0);
        gbc.writeMem(0xbff5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2b25, gbc.sp());
        EXPECT(0xbff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbff5));
        EXPECT(0x5c, gbc.readMem(0xbff6));
        // CB 5C 004B
        gbc.setState(0xa362, 0xc029, 0x3b30, 0xff0, 0x2953, 0x8eea, 0x0, 0x0);
        gbc.writeMem(0xa362, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0xa364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa362));
        EXPECT(0x5c, gbc.readMem(0xa363));
        // CB 5C 004C
        gbc.setState(0x20b2, 0xdd4a, 0x42e0, 0xf03b, 0x69ec, 0x4a3f, 0x0, 0x1);
        gbc.writeMem(0x20b2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdd4a, gbc.sp());
        EXPECT(0x20b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 004D
        gbc.setState(0x417b, 0x835a, 0x9df0, 0xabed, 0xa8eb, 0x5789, 0x1, 0x0);
        gbc.writeMem(0x417b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x835a, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 004E
        gbc.setState(0xd50b, 0x79c4, 0xa700, 0xaf3a, 0x163c, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0xd50b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x79c4, gbc.sp());
        EXPECT(0xd50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50b));
        EXPECT(0x5c, gbc.readMem(0xd50c));
        // CB 5C 004F
        gbc.setState(0x3a0d, 0x3b39, 0xe240, 0x8318, 0x1945, 0xf892, 0x0, 0x1);
        gbc.writeMem(0x3a0d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3b39, gbc.sp());
        EXPECT(0x3a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0050
        gbc.setState(0x5eca, 0xffe1, 0x41b0, 0xc742, 0xcf8f, 0xaa28, 0x1, 0x0);
        gbc.writeMem(0x5eca, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0x5ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0051
        gbc.setState(0x85d7, 0x6c13, 0x5a90, 0xa30f, 0xda55, 0xae49, 0x1, 0x1);
        gbc.writeMem(0x85d7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6c13, gbc.sp());
        EXPECT(0x85d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d7));
        EXPECT(0x5c, gbc.readMem(0x85d8));
        // CB 5C 0052
        gbc.setState(0x99f5, 0x3efd, 0xdb70, 0xddeb, 0x57bd, 0x15d1, 0x0, 0x1);
        gbc.writeMem(0x99f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3efd, gbc.sp());
        EXPECT(0x99f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99f5));
        EXPECT(0x5c, gbc.readMem(0x99f6));
        // CB 5C 0053
        gbc.setState(0x7cdf, 0x7e38, 0xe7c0, 0xf122, 0xad22, 0x7bbb, 0x0, 0x1);
        gbc.writeMem(0x7cdf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7e38, gbc.sp());
        EXPECT(0x7ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0054
        gbc.setState(0xe014, 0x3e65, 0xc4f0, 0x509b, 0x4372, 0x547e, 0x0, 0x1);
        gbc.writeMem(0xe014, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3e65, gbc.sp());
        EXPECT(0xe016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe014));
        EXPECT(0x5c, gbc.readMem(0xe015));
        // CB 5C 0055
        gbc.setState(0x46ba, 0xce07, 0xcce0, 0xc0ad, 0xf988, 0x23b3, 0x1, 0x0);
        gbc.writeMem(0x46ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xce07, gbc.sp());
        EXPECT(0x46bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0056
        gbc.setState(0xc036, 0xd368, 0x90c0, 0xd8b6, 0x5191, 0x6f27, 0x1, 0x1);
        gbc.writeMem(0xc036, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xc038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc036));
        EXPECT(0x5c, gbc.readMem(0xc037));
        // CB 5C 0057
        gbc.setState(0x8e3, 0x3403, 0xef40, 0x6f73, 0x241e, 0x8364, 0x1, 0x1);
        gbc.writeMem(0x8e3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3403, gbc.sp());
        EXPECT(0x8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0058
        gbc.setState(0x3a8, 0x8096, 0x48d0, 0x11fa, 0x9069, 0x8bc5, 0x1, 0x1);
        gbc.writeMem(0x3a8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8096, gbc.sp());
        EXPECT(0x3aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0059
        gbc.setState(0xd4ea, 0x8119, 0x4b20, 0x798c, 0xf4b9, 0x3d1d, 0x0, 0x0);
        gbc.writeMem(0xd4ea, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8119, gbc.sp());
        EXPECT(0xd4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ea));
        EXPECT(0x5c, gbc.readMem(0xd4eb));
        // CB 5C 005A
        gbc.setState(0xb835, 0x5df5, 0x3170, 0x2161, 0x4b24, 0xb67d, 0x0, 0x1);
        gbc.writeMem(0xb835, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0xb837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb835));
        EXPECT(0x5c, gbc.readMem(0xb836));
        // CB 5C 005B
        gbc.setState(0x6319, 0x5e20, 0x5d10, 0x4ba8, 0xb15a, 0xe3bc, 0x0, 0x0);
        gbc.writeMem(0x6319, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5e20, gbc.sp());
        EXPECT(0x631b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 005C
        gbc.setState(0x60a5, 0x9ed0, 0xeda0, 0x85b, 0xe1d3, 0x57b5, 0x1, 0x0);
        gbc.writeMem(0x60a5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 005D
        gbc.setState(0x136e, 0xb223, 0xe0c0, 0x6eb9, 0x96c2, 0x82cc, 0x0, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 005E
        gbc.setState(0xcd83, 0x23be, 0xc9b0, 0x825, 0x78a4, 0xcd84, 0x0, 0x1);
        gbc.writeMem(0xcd83, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0xcd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd83));
        EXPECT(0x5c, gbc.readMem(0xcd84));
        // CB 5C 005F
        gbc.setState(0x985c, 0xc5b1, 0x9a50, 0x1372, 0xe429, 0x1567, 0x1, 0x1);
        gbc.writeMem(0x985c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc5b1, gbc.sp());
        EXPECT(0x985e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985c));
        EXPECT(0x5c, gbc.readMem(0x985d));
        // CB 5C 0060
        gbc.setState(0xdfde, 0xa439, 0xe330, 0x4eca, 0x693b, 0xc03a, 0x1, 0x1);
        gbc.writeMem(0xdfde, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa439, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfde));
        EXPECT(0x5c, gbc.readMem(0xdfdf));
        // CB 5C 0061
        gbc.setState(0x28d6, 0x896a, 0xee70, 0x9741, 0xb90a, 0xb751, 0x1, 0x0);
        gbc.writeMem(0x28d6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x896a, gbc.sp());
        EXPECT(0x28d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0062
        gbc.setState(0xefb2, 0xcabb, 0xae30, 0xe34, 0x2c05, 0x93de, 0x0, 0x1);
        gbc.writeMem(0xefb2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcabb, gbc.sp());
        EXPECT(0xefb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb2));
        EXPECT(0x5c, gbc.readMem(0xefb3));
        // CB 5C 0063
        gbc.setState(0x4b86, 0xaf4c, 0xb150, 0x316b, 0x613d, 0x94c4, 0x0, 0x0);
        gbc.writeMem(0x4b86, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaf4c, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0064
        gbc.setState(0xcb53, 0xd966, 0x9720, 0x37fe, 0x180d, 0xf53d, 0x0, 0x0);
        gbc.writeMem(0xcb53, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd966, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb53));
        EXPECT(0x5c, gbc.readMem(0xcb54));
        // CB 5C 0065
        gbc.setState(0x7274, 0xc506, 0xec10, 0x7537, 0x1b34, 0x8b8f, 0x1, 0x0);
        gbc.writeMem(0x7274, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc506, gbc.sp());
        EXPECT(0x7276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0066
        gbc.setState(0xeb78, 0x89ea, 0xeca0, 0xe789, 0x63a4, 0x53f0, 0x1, 0x0);
        gbc.writeMem(0xeb78, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x89ea, gbc.sp());
        EXPECT(0xeb7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb78));
        EXPECT(0x5c, gbc.readMem(0xeb79));
        // CB 5C 0067
        gbc.setState(0x18af, 0xdad1, 0xccf0, 0xa1aa, 0x38bd, 0xeabe, 0x1, 0x0);
        gbc.writeMem(0x18af, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xdad1, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0068
        gbc.setState(0xa384, 0x6f9c, 0x5b10, 0xf027, 0xf840, 0x6906, 0x0, 0x0);
        gbc.writeMem(0xa384, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6f9c, gbc.sp());
        EXPECT(0xa386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa384));
        EXPECT(0x5c, gbc.readMem(0xa385));
        // CB 5C 0069
        gbc.setState(0x6b76, 0xf349, 0x4450, 0x1553, 0x5737, 0xa7bf, 0x1, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf349, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 006A
        gbc.setState(0x7db6, 0x2f0a, 0xf80, 0x81c, 0x5d71, 0x603e, 0x0, 0x1);
        gbc.writeMem(0x7db6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2f0a, gbc.sp());
        EXPECT(0x7db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 006B
        gbc.setState(0x71b4, 0xe447, 0x3730, 0x5845, 0x6775, 0x765, 0x1, 0x0);
        gbc.writeMem(0x71b4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x71b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 006C
        gbc.setState(0xccf3, 0x9eaf, 0x4b0, 0xfbd, 0x4a1, 0xf6ad, 0x1, 0x0);
        gbc.writeMem(0xccf3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9eaf, gbc.sp());
        EXPECT(0xccf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccf3));
        EXPECT(0x5c, gbc.readMem(0xccf4));
        // CB 5C 006D
        gbc.setState(0x195, 0x5aa9, 0x8f80, 0x3471, 0xae5c, 0xb3a4, 0x0, 0x1);
        gbc.writeMem(0x195, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5aa9, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 006E
        gbc.setState(0x57db, 0xb591, 0x2740, 0xe701, 0xceac, 0x5fb9, 0x1, 0x0);
        gbc.writeMem(0x57db, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb591, gbc.sp());
        EXPECT(0x57dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 006F
        gbc.setState(0x346, 0xce84, 0x1b10, 0x742b, 0x8bc, 0x316b, 0x0, 0x1);
        gbc.writeMem(0x346, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xce84, gbc.sp());
        EXPECT(0x348, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0070
        gbc.setState(0x6ff0, 0xe6f3, 0x22a0, 0xa1e4, 0x300b, 0xbcf5, 0x0, 0x0);
        gbc.writeMem(0x6ff0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe6f3, gbc.sp());
        EXPECT(0x6ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0071
        gbc.setState(0x6f9f, 0x2d43, 0xfc50, 0x6eec, 0x6aa7, 0x9e83, 0x1, 0x1);
        gbc.writeMem(0x6f9f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0x6fa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0072
        gbc.setState(0xd432, 0x6ccc, 0x2a60, 0xeb46, 0xad8c, 0x9f31, 0x0, 0x0);
        gbc.writeMem(0xd432, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0xd434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd432));
        EXPECT(0x5c, gbc.readMem(0xd433));
        // CB 5C 0073
        gbc.setState(0x8558, 0x2d68, 0xe230, 0xa47, 0x6e0d, 0x46c1, 0x0, 0x0);
        gbc.writeMem(0x8558, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2d68, gbc.sp());
        EXPECT(0x855a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8558));
        EXPECT(0x5c, gbc.readMem(0x8559));
        // CB 5C 0074
        gbc.setState(0x56ac, 0x7a48, 0x2e30, 0xb66c, 0x2303, 0x80a9, 0x1, 0x1);
        gbc.writeMem(0x56ac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7a48, gbc.sp());
        EXPECT(0x56ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0075
        gbc.setState(0x7ab2, 0xf6aa, 0x8d0, 0x53a0, 0xfa01, 0x8261, 0x0, 0x0);
        gbc.writeMem(0x7ab2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf6aa, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0076
        gbc.setState(0xdca1, 0x1c2, 0xefe0, 0x1381, 0x96c0, 0xebd2, 0x0, 0x0);
        gbc.writeMem(0xdca1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0xdca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca1));
        EXPECT(0x5c, gbc.readMem(0xdca2));
        // CB 5C 0077
        gbc.setState(0x7633, 0x6511, 0xcfa0, 0x1947, 0x2a50, 0x73f5, 0x0, 0x0);
        gbc.writeMem(0x7633, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6511, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0078
        gbc.setState(0x19d3, 0xd778, 0x93b0, 0x4d1d, 0x2778, 0x3357, 0x0, 0x0);
        gbc.writeMem(0x19d3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd778, gbc.sp());
        EXPECT(0x19d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0079
        gbc.setState(0x69b0, 0x261f, 0xac70, 0x61ae, 0x1a30, 0xaefb, 0x0, 0x1);
        gbc.writeMem(0x69b0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x261f, gbc.sp());
        EXPECT(0x69b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 007B
        gbc.setState(0xbfe3, 0xf76a, 0x5260, 0xaff5, 0xd9d5, 0xd55c, 0x0, 0x0);
        gbc.writeMem(0xbfe3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf76a, gbc.sp());
        EXPECT(0xbfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe3));
        EXPECT(0x5c, gbc.readMem(0xbfe4));
        // CB 5C 007C
        gbc.setState(0x9488, 0xe7f2, 0xf5e0, 0x2c29, 0x5443, 0x7ba9, 0x1, 0x0);
        gbc.writeMem(0x9488, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe7f2, gbc.sp());
        EXPECT(0x948a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9488));
        EXPECT(0x5c, gbc.readMem(0x9489));
        // CB 5C 007E
        gbc.setState(0x4ea2, 0xd298, 0xf550, 0xe467, 0xafe5, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x4ea2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd298, gbc.sp());
        EXPECT(0x4ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 007F
        gbc.setState(0x36e4, 0xabf8, 0x3560, 0x6ff6, 0xbb11, 0x58b2, 0x0, 0x0);
        gbc.writeMem(0x36e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xabf8, gbc.sp());
        EXPECT(0x36e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0080
        gbc.setState(0x5bb3, 0x2125, 0xde10, 0x80a5, 0xa238, 0xa38e, 0x1, 0x0);
        gbc.writeMem(0x5bb3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2125, gbc.sp());
        EXPECT(0x5bb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0081
        gbc.setState(0x843d, 0xdb24, 0x61a0, 0x2aaf, 0x6e42, 0x39c4, 0x0, 0x0);
        gbc.writeMem(0x843d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdb24, gbc.sp());
        EXPECT(0x843f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x843d));
        EXPECT(0x5c, gbc.readMem(0x843e));
        // CB 5C 0083
        gbc.setState(0xb875, 0xcff8, 0x4ca0, 0xb8c, 0xe206, 0xda1d, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcff8, gbc.sp());
        EXPECT(0xb877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb875));
        EXPECT(0x5c, gbc.readMem(0xb876));
        // CB 5C 0084
        gbc.setState(0x8fb6, 0x2a8c, 0x4eb0, 0xde43, 0xe553, 0xe634, 0x1, 0x0);
        gbc.writeMem(0x8fb6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2a8c, gbc.sp());
        EXPECT(0x8fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb6));
        EXPECT(0x5c, gbc.readMem(0x8fb7));
        // CB 5C 0085
        gbc.setState(0x8179, 0xed0, 0x68a0, 0xfc5f, 0xb670, 0xed8, 0x0, 0x0);
        gbc.writeMem(0x8179, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8179));
        EXPECT(0x5c, gbc.readMem(0x817a));
        // CB 5C 0086
        gbc.setState(0x2545, 0x92cc, 0x8e30, 0xbca9, 0x987e, 0x9346, 0x1, 0x0);
        gbc.writeMem(0x2545, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x92cc, gbc.sp());
        EXPECT(0x2547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0087
        gbc.setState(0x77af, 0x8b21, 0xe580, 0xb168, 0x34a, 0x542, 0x1, 0x1);
        gbc.writeMem(0x77af, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0x77b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0088
        gbc.setState(0x8c14, 0x7eb0, 0x48c0, 0xd46, 0xc4fa, 0xf925, 0x1, 0x1);
        gbc.writeMem(0x8c14, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c14));
        EXPECT(0x5c, gbc.readMem(0x8c15));
        // CB 5C 0089
        gbc.setState(0x55ca, 0xf8af, 0x7050, 0x8c1c, 0x9b2f, 0x2db, 0x0, 0x1);
        gbc.writeMem(0x55ca, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf8af, gbc.sp());
        EXPECT(0x55cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 008A
        gbc.setState(0x6a2e, 0x505c, 0x1dc0, 0xa3cb, 0x6f54, 0x4e49, 0x0, 0x0);
        gbc.writeMem(0x6a2e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x6a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 008B
        gbc.setState(0x5a03, 0xf6bd, 0x5210, 0x3d3e, 0x17ca, 0x503f, 0x0, 0x0);
        gbc.writeMem(0x5a03, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf6bd, gbc.sp());
        EXPECT(0x5a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 008C
        gbc.setState(0xce28, 0xd5c1, 0xa0a0, 0xdcc, 0x3427, 0x8b93, 0x0, 0x0);
        gbc.writeMem(0xce28, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd5c1, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce28));
        EXPECT(0x5c, gbc.readMem(0xce29));
        // CB 5C 008D
        gbc.setState(0x83ef, 0xaf5a, 0xc20, 0x7a90, 0x4950, 0x9e70, 0x1, 0x1);
        gbc.writeMem(0x83ef, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xaf5a, gbc.sp());
        EXPECT(0x83f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ef));
        EXPECT(0x5c, gbc.readMem(0x83f0));
        // CB 5C 008E
        gbc.setState(0x45b7, 0x43e6, 0x90e0, 0xffdc, 0xc51a, 0xfd57, 0x1, 0x1);
        gbc.writeMem(0x45b7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x43e6, gbc.sp());
        EXPECT(0x45b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 008F
        gbc.setState(0xe963, 0xbeb5, 0x4610, 0x470f, 0x1fd3, 0x1101, 0x0, 0x0);
        gbc.writeMem(0xe963, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbeb5, gbc.sp());
        EXPECT(0xe965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe963));
        EXPECT(0x5c, gbc.readMem(0xe964));
        // CB 5C 0090
        gbc.setState(0xc143, 0xd220, 0xb950, 0x3106, 0xd7fa, 0xc2b9, 0x1, 0x1);
        gbc.writeMem(0xc143, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0xc145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc143));
        EXPECT(0x5c, gbc.readMem(0xc144));
        // CB 5C 0091
        gbc.setState(0xcca8, 0x53e9, 0x5f30, 0x97b4, 0x59b1, 0x2fc3, 0x1, 0x1);
        gbc.writeMem(0xcca8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x53e9, gbc.sp());
        EXPECT(0xccaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca8));
        EXPECT(0x5c, gbc.readMem(0xcca9));
        // CB 5C 0092
        gbc.setState(0x1634, 0x9ea3, 0x6440, 0x348c, 0x5d6d, 0x8959, 0x0, 0x1);
        gbc.writeMem(0x1634, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9ea3, gbc.sp());
        EXPECT(0x1636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0094
        gbc.setState(0xa48b, 0x97db, 0xdf0, 0x3b45, 0x7fd, 0x265b, 0x1, 0x1);
        gbc.writeMem(0xa48b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x97db, gbc.sp());
        EXPECT(0xa48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48b));
        EXPECT(0x5c, gbc.readMem(0xa48c));
        // CB 5C 0095
        gbc.setState(0xd910, 0x219, 0x86f0, 0x6f1d, 0xf7f3, 0xe94a, 0x1, 0x1);
        gbc.writeMem(0xd910, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0xd912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd910));
        EXPECT(0x5c, gbc.readMem(0xd911));
        // CB 5C 0096
        gbc.setState(0x9d9e, 0x53a, 0x4750, 0x614d, 0x73e8, 0x1dc9, 0x1, 0x1);
        gbc.writeMem(0x9d9e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x53a, gbc.sp());
        EXPECT(0x9da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9e));
        EXPECT(0x5c, gbc.readMem(0x9d9f));
        // CB 5C 0097
        gbc.setState(0x662a, 0x11d3, 0xb090, 0x768f, 0xc914, 0x1caf, 0x1, 0x1);
        gbc.writeMem(0x662a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x11d3, gbc.sp());
        EXPECT(0x662c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0098
        gbc.setState(0xb272, 0x97a2, 0xf070, 0xf861, 0x968d, 0xad3d, 0x1, 0x1);
        gbc.writeMem(0xb272, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x97a2, gbc.sp());
        EXPECT(0xb274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb272));
        EXPECT(0x5c, gbc.readMem(0xb273));
        // CB 5C 0099
        gbc.setState(0xd85, 0xa7d8, 0x1090, 0x90, 0xe71f, 0x796, 0x1, 0x0);
        gbc.writeMem(0xd85, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa7d8, gbc.sp());
        EXPECT(0xd87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 009A
        gbc.setState(0xaa63, 0xbf5a, 0x50a0, 0xf8e9, 0x9df2, 0xd885, 0x1, 0x1);
        gbc.writeMem(0xaa63, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbf5a, gbc.sp());
        EXPECT(0xaa65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa63));
        EXPECT(0x5c, gbc.readMem(0xaa64));
        // CB 5C 009B
        gbc.setState(0xab7, 0xd69e, 0x5c60, 0x85c4, 0x9a72, 0x1451, 0x0, 0x0);
        gbc.writeMem(0xab7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd69e, gbc.sp());
        EXPECT(0xab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 009C
        gbc.setState(0xc55f, 0x5d7b, 0x1350, 0xf472, 0x6d53, 0x8746, 0x0, 0x0);
        gbc.writeMem(0xc55f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5d7b, gbc.sp());
        EXPECT(0xc561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55f));
        EXPECT(0x5c, gbc.readMem(0xc560));
        // CB 5C 009D
        gbc.setState(0xa27, 0xf6f5, 0xb2e0, 0xa335, 0xee63, 0xc6b2, 0x1, 0x1);
        gbc.writeMem(0xa27, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf6f5, gbc.sp());
        EXPECT(0xa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 009E
        gbc.setState(0x209a, 0x344d, 0x2470, 0x5644, 0x7d9, 0x7be2, 0x1, 0x1);
        gbc.writeMem(0x209a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x344d, gbc.sp());
        EXPECT(0x209c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 009F
        gbc.setState(0x4c24, 0x71e2, 0xe540, 0x67b5, 0x8814, 0x49c9, 0x1, 0x1);
        gbc.writeMem(0x4c24, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x71e2, gbc.sp());
        EXPECT(0x4c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00A1
        gbc.setState(0x15f, 0xd014, 0x78e0, 0xc221, 0x5d7e, 0xf261, 0x0, 0x1);
        gbc.writeMem(0x15f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00A2
        gbc.setState(0x20f6, 0x31fa, 0x3a30, 0x4688, 0xcbc, 0x9c8a, 0x1, 0x1);
        gbc.writeMem(0x20f6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x31fa, gbc.sp());
        EXPECT(0x20f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00A4
        gbc.setState(0x9ada, 0xa4b, 0xb490, 0x537f, 0xbfbf, 0xc490, 0x0, 0x1);
        gbc.writeMem(0x9ada, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa4b, gbc.sp());
        EXPECT(0x9adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ada));
        EXPECT(0x5c, gbc.readMem(0x9adb));
        // CB 5C 00A5
        gbc.setState(0x8aa6, 0x58c4, 0x4ca0, 0x2129, 0x36a, 0xd194, 0x1, 0x1);
        gbc.writeMem(0x8aa6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0x8aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa6));
        EXPECT(0x5c, gbc.readMem(0x8aa7));
        // CB 5C 00A6
        gbc.setState(0x8d95, 0x9270, 0x8990, 0x3cb0, 0x99fb, 0x2042, 0x1, 0x0);
        gbc.writeMem(0x8d95, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9270, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d95));
        EXPECT(0x5c, gbc.readMem(0x8d96));
        // CB 5C 00A7
        gbc.setState(0x5fe6, 0x1d3c, 0x2c90, 0x73c2, 0x85df, 0x4380, 0x1, 0x1);
        gbc.writeMem(0x5fe6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1d3c, gbc.sp());
        EXPECT(0x5fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00A8
        gbc.setState(0x3ea8, 0x35c8, 0xee0, 0x1aa5, 0x1c99, 0xf429, 0x0, 0x1);
        gbc.writeMem(0x3ea8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x35c8, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00A9
        gbc.setState(0x2dfa, 0xa5a2, 0x2b30, 0xe76a, 0x5ccd, 0x67ac, 0x0, 0x1);
        gbc.writeMem(0x2dfa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa5a2, gbc.sp());
        EXPECT(0x2dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00AA
        gbc.setState(0x9a15, 0x6dd0, 0xffe0, 0x7577, 0x8b76, 0xe7e9, 0x0, 0x0);
        gbc.writeMem(0x9a15, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6dd0, gbc.sp());
        EXPECT(0x9a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a15));
        EXPECT(0x5c, gbc.readMem(0x9a16));
        // CB 5C 00AB
        gbc.setState(0x7292, 0x3eda, 0x2f40, 0xa033, 0x33ea, 0x8c58, 0x1, 0x1);
        gbc.writeMem(0x7292, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3eda, gbc.sp());
        EXPECT(0x7294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00AC
        gbc.setState(0x71ad, 0x2f13, 0x4e10, 0x4c31, 0x8348, 0xfd34, 0x1, 0x0);
        gbc.writeMem(0x71ad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2f13, gbc.sp());
        EXPECT(0x71af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00AD
        gbc.setState(0xe479, 0x8b31, 0x90a0, 0x2247, 0x685d, 0x7c0a, 0x0, 0x0);
        gbc.writeMem(0xe479, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8b31, gbc.sp());
        EXPECT(0xe47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe479));
        EXPECT(0x5c, gbc.readMem(0xe47a));
        // CB 5C 00AE
        gbc.setState(0xe5d9, 0xa883, 0xd30, 0x500d, 0xf578, 0xf325, 0x0, 0x1);
        gbc.writeMem(0xe5d9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa883, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d9));
        EXPECT(0x5c, gbc.readMem(0xe5da));
        // CB 5C 00AF
        gbc.setState(0x724e, 0x190e, 0x4e00, 0xd6a5, 0x210e, 0x7d16, 0x1, 0x0);
        gbc.writeMem(0x724e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00B1
        gbc.setState(0xb69f, 0x9c41, 0xc90, 0xc399, 0xb62f, 0x80c9, 0x0, 0x1);
        gbc.writeMem(0xb69f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0xb6a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69f));
        EXPECT(0x5c, gbc.readMem(0xb6a0));
        // CB 5C 00B2
        gbc.setState(0xcf85, 0x4365, 0x8580, 0xdcb8, 0xc030, 0x3d9e, 0x0, 0x1);
        gbc.writeMem(0xcf85, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4365, gbc.sp());
        EXPECT(0xcf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf85));
        EXPECT(0x5c, gbc.readMem(0xcf86));
        // CB 5C 00B3
        gbc.setState(0x4abf, 0x95fa, 0x8540, 0x1f57, 0x722e, 0x3dc5, 0x1, 0x0);
        gbc.writeMem(0x4abf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x95fa, gbc.sp());
        EXPECT(0x4ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00B4
        gbc.setState(0x9b98, 0x352a, 0x1ba0, 0xc0b7, 0xecb8, 0x3eb9, 0x0, 0x0);
        gbc.writeMem(0x9b98, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x352a, gbc.sp());
        EXPECT(0x9b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b98));
        EXPECT(0x5c, gbc.readMem(0x9b99));
        // CB 5C 00B5
        gbc.setState(0xdd2a, 0x2c43, 0x9230, 0xa2a6, 0x71a7, 0x1695, 0x1, 0x0);
        gbc.writeMem(0xdd2a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2c43, gbc.sp());
        EXPECT(0xdd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd2a));
        EXPECT(0x5c, gbc.readMem(0xdd2b));
        // CB 5C 00B6
        gbc.setState(0x42d2, 0x7f39, 0xaf10, 0xc467, 0xb6de, 0x1c04, 0x0, 0x0);
        gbc.writeMem(0x42d2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f39, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00B7
        gbc.setState(0x592b, 0xeb3f, 0x30, 0xaefb, 0xb96d, 0x9bc7, 0x0, 0x0);
        gbc.writeMem(0x592b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x592d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00B9
        gbc.setState(0xa40d, 0xc551, 0x4e90, 0x84b4, 0x9737, 0xe291, 0x1, 0x1);
        gbc.writeMem(0xa40d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc551, gbc.sp());
        EXPECT(0xa40f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40d));
        EXPECT(0x5c, gbc.readMem(0xa40e));
        // CB 5C 00BA
        gbc.setState(0x9905, 0x85d, 0x4ce0, 0x3c0d, 0x282e, 0x2453, 0x1, 0x0);
        gbc.writeMem(0x9905, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x85d, gbc.sp());
        EXPECT(0x9907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9905));
        EXPECT(0x5c, gbc.readMem(0x9906));
        // CB 5C 00BB
        gbc.setState(0x9501, 0xfc43, 0xf460, 0x9282, 0xe130, 0xeeb5, 0x1, 0x1);
        gbc.writeMem(0x9501, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0x9503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9501));
        EXPECT(0x5c, gbc.readMem(0x9502));
        // CB 5C 00BC
        gbc.setState(0x3e99, 0xdb29, 0xf520, 0x4e5d, 0xaccc, 0x54db, 0x1, 0x1);
        gbc.writeMem(0x3e99, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xdb29, gbc.sp());
        EXPECT(0x3e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00BD
        gbc.setState(0x3184, 0x3c18, 0xd450, 0x94ee, 0x1da6, 0x1ea5, 0x1, 0x0);
        gbc.writeMem(0x3184, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3c18, gbc.sp());
        EXPECT(0x3186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00BE
        gbc.setState(0x838d, 0x5bd6, 0x7920, 0xd9f9, 0x6488, 0x313a, 0x0, 0x0);
        gbc.writeMem(0x838d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0x838f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x838d));
        EXPECT(0x5c, gbc.readMem(0x838e));
        // CB 5C 00BF
        gbc.setState(0x9db1, 0x249, 0x880, 0xa62, 0x31c8, 0xe320, 0x0, 0x0);
        gbc.writeMem(0x9db1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x249, gbc.sp());
        EXPECT(0x9db3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db1));
        EXPECT(0x5c, gbc.readMem(0x9db2));
        // CB 5C 00C0
        gbc.setState(0xb5eb, 0xc5d6, 0xd7e0, 0x1156, 0xa002, 0xe76b, 0x0, 0x1);
        gbc.writeMem(0xb5eb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc5d6, gbc.sp());
        EXPECT(0xb5ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5eb));
        EXPECT(0x5c, gbc.readMem(0xb5ec));
        // CB 5C 00C1
        gbc.setState(0x1683, 0x81d2, 0x540, 0xbd37, 0x5dd, 0x785d, 0x0, 0x1);
        gbc.writeMem(0x1683, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x81d2, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00C2
        gbc.setState(0xcccd, 0xd2a8, 0x930, 0xa856, 0xd2e9, 0x6dfb, 0x0, 0x0);
        gbc.writeMem(0xcccd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd2a8, gbc.sp());
        EXPECT(0xcccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcccd));
        EXPECT(0x5c, gbc.readMem(0xccce));
        // CB 5C 00C3
        gbc.setState(0x6e2a, 0x594a, 0x25e0, 0x5940, 0xf52, 0xca8b, 0x1, 0x0);
        gbc.writeMem(0x6e2a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x594a, gbc.sp());
        EXPECT(0x6e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00C4
        gbc.setState(0x33f4, 0x33bb, 0x2ea0, 0xfb91, 0x939b, 0x83cf, 0x0, 0x0);
        gbc.writeMem(0x33f4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x33bb, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00C5
        gbc.setState(0x5ce3, 0x7f29, 0x7330, 0xd2d1, 0x30fd, 0xd731, 0x0, 0x1);
        gbc.writeMem(0x5ce3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7f29, gbc.sp());
        EXPECT(0x5ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00C6
        gbc.setState(0x8f52, 0xd56, 0xbd50, 0x9990, 0x4dac, 0xea47, 0x1, 0x1);
        gbc.writeMem(0x8f52, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd56, gbc.sp());
        EXPECT(0x8f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f52));
        EXPECT(0x5c, gbc.readMem(0x8f53));
        // CB 5C 00C7
        gbc.setState(0x463, 0xc95c, 0x5db0, 0x3159, 0x42cd, 0x9222, 0x0, 0x1);
        gbc.writeMem(0x463, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc95c, gbc.sp());
        EXPECT(0x465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00C8
        gbc.setState(0x7075, 0xab0f, 0x80e0, 0xf1cf, 0xfb7e, 0x3640, 0x1, 0x1);
        gbc.writeMem(0x7075, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xab0f, gbc.sp());
        EXPECT(0x7077, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00C9
        gbc.setState(0xc7ba, 0x1d96, 0x4750, 0xa148, 0x76b0, 0x4855, 0x1, 0x1);
        gbc.writeMem(0xc7ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1d96, gbc.sp());
        EXPECT(0xc7bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ba));
        EXPECT(0x5c, gbc.readMem(0xc7bb));
        // CB 5C 00CA
        gbc.setState(0x7554, 0x3068, 0x1290, 0x481e, 0xf2e0, 0xc59c, 0x1, 0x1);
        gbc.writeMem(0x7554, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3068, gbc.sp());
        EXPECT(0x7556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00CB
        gbc.setState(0x3e02, 0xd0e5, 0xb700, 0x1657, 0xc075, 0x91ba, 0x0, 0x0);
        gbc.writeMem(0x3e02, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd0e5, gbc.sp());
        EXPECT(0x3e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00CC
        gbc.setState(0xb454, 0x8f70, 0xc1d0, 0xdd12, 0x1f96, 0x5543, 0x0, 0x1);
        gbc.writeMem(0xb454, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8f70, gbc.sp());
        EXPECT(0xb456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb454));
        EXPECT(0x5c, gbc.readMem(0xb455));
        // CB 5C 00CE
        gbc.setState(0x8436, 0xc514, 0x63b0, 0x4c34, 0xd426, 0x2bf4, 0x1, 0x1);
        gbc.writeMem(0x8436, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc514, gbc.sp());
        EXPECT(0x8438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8436));
        EXPECT(0x5c, gbc.readMem(0x8437));
        // CB 5C 00CF
        gbc.setState(0x175c, 0x9681, 0xd8e0, 0x399f, 0x917d, 0x8467, 0x1, 0x1);
        gbc.writeMem(0x175c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9681, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00D0
        gbc.setState(0xe83f, 0x8d6f, 0x2940, 0xfb55, 0x7ea9, 0x854b, 0x1, 0x1);
        gbc.writeMem(0xe83f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8d6f, gbc.sp());
        EXPECT(0xe841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83f));
        EXPECT(0x5c, gbc.readMem(0xe840));
        // CB 5C 00D1
        gbc.setState(0xab34, 0x52e, 0x2030, 0x9409, 0x236d, 0x2b33, 0x0, 0x1);
        gbc.writeMem(0xab34, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x52e, gbc.sp());
        EXPECT(0xab36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab34));
        EXPECT(0x5c, gbc.readMem(0xab35));
        // CB 5C 00D2
        gbc.setState(0x3b18, 0x8998, 0x32c0, 0xd983, 0x3986, 0xfcba, 0x1, 0x1);
        gbc.writeMem(0x3b18, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00D3
        gbc.setState(0x5ee5, 0xe336, 0xa990, 0xa63f, 0xddd8, 0x62a9, 0x0, 0x1);
        gbc.writeMem(0x5ee5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe336, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00D4
        gbc.setState(0xa516, 0xb521, 0xc2c0, 0xd381, 0x5d80, 0x70ca, 0x1, 0x0);
        gbc.writeMem(0xa516, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb521, gbc.sp());
        EXPECT(0xa518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa516));
        EXPECT(0x5c, gbc.readMem(0xa517));
        // CB 5C 00D5
        gbc.setState(0x2f71, 0xd48f, 0x69b0, 0x30e9, 0x3896, 0xdbfe, 0x1, 0x0);
        gbc.writeMem(0x2f71, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd48f, gbc.sp());
        EXPECT(0x2f73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00D7
        gbc.setState(0x63d9, 0xbc86, 0xcb0, 0x135d, 0xa5fa, 0x7ee7, 0x1, 0x0);
        gbc.writeMem(0x63d9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbc86, gbc.sp());
        EXPECT(0x63db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00D8
        gbc.setState(0x3297, 0x76f7, 0xa6e0, 0x4b57, 0x4d76, 0xc663, 0x1, 0x0);
        gbc.writeMem(0x3297, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x76f7, gbc.sp());
        EXPECT(0x3299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00DA
        gbc.setState(0xe8dd, 0x6a17, 0x4920, 0x7ea1, 0x185, 0x798d, 0x0, 0x0);
        gbc.writeMem(0xe8dd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6a17, gbc.sp());
        EXPECT(0xe8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8dd));
        EXPECT(0x5c, gbc.readMem(0xe8de));
        // CB 5C 00DB
        gbc.setState(0x162c, 0xbc10, 0x76f0, 0xc263, 0x19c1, 0xc6ad, 0x0, 0x1);
        gbc.writeMem(0x162c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbc10, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00DC
        gbc.setState(0x9b57, 0x4c21, 0xc570, 0x8dae, 0x4e43, 0x5b79, 0x1, 0x0);
        gbc.writeMem(0x9b57, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b57));
        EXPECT(0x5c, gbc.readMem(0x9b58));
        // CB 5C 00DD
        gbc.setState(0x15d7, 0xcf6a, 0x4c30, 0x3422, 0x8637, 0xa8c0, 0x1, 0x1);
        gbc.writeMem(0x15d7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0x15d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00DE
        gbc.setState(0x9b82, 0xd41e, 0x4270, 0xcb5c, 0xd418, 0xbd39, 0x1, 0x1);
        gbc.writeMem(0x9b82, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd41e, gbc.sp());
        EXPECT(0x9b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b82));
        EXPECT(0x5c, gbc.readMem(0x9b83));
        // CB 5C 00DF
        gbc.setState(0xc22, 0x4c30, 0x7f20, 0x80d2, 0x654d, 0x788, 0x0, 0x0);
        gbc.writeMem(0xc22, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4c30, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00E0
        gbc.setState(0x9081, 0x934e, 0xbc70, 0xb1c7, 0xa08, 0x1755, 0x0, 0x1);
        gbc.writeMem(0x9081, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x934e, gbc.sp());
        EXPECT(0x9083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9081));
        EXPECT(0x5c, gbc.readMem(0x9082));
        // CB 5C 00E1
        gbc.setState(0xeb59, 0x52eb, 0xdc40, 0x6331, 0x4635, 0x93c9, 0x1, 0x1);
        gbc.writeMem(0xeb59, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x52eb, gbc.sp());
        EXPECT(0xeb5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb59));
        EXPECT(0x5c, gbc.readMem(0xeb5a));
        // CB 5C 00E2
        gbc.setState(0x13fc, 0x673e, 0xba0, 0x5401, 0x9ce5, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x13fc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x13fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00E3
        gbc.setState(0xee32, 0x4056, 0xf0b0, 0x1120, 0x6c8a, 0x8b2c, 0x1, 0x1);
        gbc.writeMem(0xee32, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4056, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee32));
        EXPECT(0x5c, gbc.readMem(0xee33));
        // CB 5C 00E4
        gbc.setState(0x8ae0, 0xf385, 0xffc0, 0x3606, 0x1d6d, 0x7144, 0x0, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf385, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae0));
        EXPECT(0x5c, gbc.readMem(0x8ae1));
        // CB 5C 00E5
        gbc.setState(0x314d, 0x2cd0, 0xd6f0, 0x7acc, 0x824d, 0x96c0, 0x0, 0x1);
        gbc.writeMem(0x314d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2cd0, gbc.sp());
        EXPECT(0x314f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00E6
        gbc.setState(0x1f27, 0xcd64, 0xadf0, 0x3e53, 0xf40d, 0x3d1e, 0x0, 0x1);
        gbc.writeMem(0x1f27, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcd64, gbc.sp());
        EXPECT(0x1f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00E7
        gbc.setState(0xb38, 0x32be, 0x90d0, 0xccba, 0xa2ed, 0xbdf5, 0x1, 0x0);
        gbc.writeMem(0xb38, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x32be, gbc.sp());
        EXPECT(0xb3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00E8
        gbc.setState(0xaca, 0x19c2, 0x78f0, 0x3ee4, 0x2210, 0x76dd, 0x0, 0x1);
        gbc.writeMem(0xaca, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0xacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00E9
        gbc.setState(0xb5ba, 0x309a, 0xbb60, 0x7160, 0x59f7, 0x4198, 0x0, 0x1);
        gbc.writeMem(0xb5ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x309a, gbc.sp());
        EXPECT(0xb5bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ba));
        EXPECT(0x5c, gbc.readMem(0xb5bb));
        // CB 5C 00EA
        gbc.setState(0x8ebe, 0xa2cf, 0xdcb0, 0xb14a, 0x3b09, 0x73f5, 0x0, 0x1);
        gbc.writeMem(0x8ebe, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa2cf, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ebe));
        EXPECT(0x5c, gbc.readMem(0x8ebf));
        // CB 5C 00EB
        gbc.setState(0x850, 0x6e17, 0x44e0, 0xbbb4, 0x9b77, 0x2f50, 0x0, 0x1);
        gbc.writeMem(0x850, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0x852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00EC
        gbc.setState(0x7d76, 0xb0a3, 0x15a0, 0x11f7, 0x6479, 0xa02a, 0x0, 0x1);
        gbc.writeMem(0x7d76, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb0a3, gbc.sp());
        EXPECT(0x7d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00ED
        gbc.setState(0x7bf, 0xbfd3, 0xa4c0, 0xdd6a, 0x9e50, 0x4709, 0x0, 0x0);
        gbc.writeMem(0x7bf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbfd3, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00EE
        gbc.setState(0x37cb, 0x91b, 0x5440, 0xff83, 0x6f6, 0x8464, 0x1, 0x0);
        gbc.writeMem(0x37cb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x91b, gbc.sp());
        EXPECT(0x37cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00EF
        gbc.setState(0x93b3, 0xc28e, 0x5190, 0x4473, 0xdb12, 0x6760, 0x1, 0x1);
        gbc.writeMem(0x93b3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc28e, gbc.sp());
        EXPECT(0x93b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b3));
        EXPECT(0x5c, gbc.readMem(0x93b4));
        // CB 5C 00F0
        gbc.setState(0xcecf, 0xa80d, 0x5160, 0xc59f, 0x748b, 0x27ad, 0x1, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa80d, gbc.sp());
        EXPECT(0xced1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecf));
        EXPECT(0x5c, gbc.readMem(0xced0));
        // CB 5C 00F1
        gbc.setState(0x998d, 0x5ae7, 0x370, 0xe04d, 0x1220, 0xc7c6, 0x1, 0x0);
        gbc.writeMem(0x998d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5ae7, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998d));
        EXPECT(0x5c, gbc.readMem(0x998e));
        // CB 5C 00F2
        gbc.setState(0xdcdf, 0x93b5, 0xf260, 0xe4e2, 0x51fe, 0xc997, 0x1, 0x0);
        gbc.writeMem(0xdcdf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x93b5, gbc.sp());
        EXPECT(0xdce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcdf));
        EXPECT(0x5c, gbc.readMem(0xdce0));
        // CB 5C 00F3
        gbc.setState(0x5ae9, 0x3a73, 0x3b90, 0x1dda, 0x8dde, 0x117c, 0x1, 0x1);
        gbc.writeMem(0x5ae9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3a73, gbc.sp());
        EXPECT(0x5aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00F4
        gbc.setState(0x299e, 0xaaf1, 0xaee0, 0x5e98, 0xd2b3, 0x9966, 0x0, 0x0);
        gbc.writeMem(0x299e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xaaf1, gbc.sp());
        EXPECT(0x29a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00F5
        gbc.setState(0x4939, 0x6413, 0x5530, 0xb24b, 0x1e05, 0x9fe8, 0x0, 0x0);
        gbc.writeMem(0x4939, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6413, gbc.sp());
        EXPECT(0x493b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00F6
        gbc.setState(0x9fe4, 0x4f6a, 0x3ec0, 0x640d, 0xd326, 0x1322, 0x1, 0x1);
        gbc.writeMem(0x9fe4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe4));
        EXPECT(0x5c, gbc.readMem(0x9fe5));
        // CB 5C 00F7
        gbc.setState(0x5066, 0x912d, 0x8530, 0xaf53, 0x20b2, 0xfe9a, 0x1, 0x0);
        gbc.writeMem(0x5066, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x912d, gbc.sp());
        EXPECT(0x5068, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00F8
        gbc.setState(0x7a4e, 0xfed9, 0xeec0, 0x9f19, 0x6494, 0xdb3, 0x1, 0x0);
        gbc.writeMem(0x7a4e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfed9, gbc.sp());
        EXPECT(0x7a50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00F9
        gbc.setState(0x61fb, 0x917c, 0x70c0, 0xec60, 0x136b, 0xe510, 0x0, 0x0);
        gbc.writeMem(0x61fb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x917c, gbc.sp());
        EXPECT(0x61fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00FA
        gbc.setState(0xcaad, 0x60c7, 0xd7a0, 0x2a29, 0xf257, 0x866b, 0x1, 0x0);
        gbc.writeMem(0xcaad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x60c7, gbc.sp());
        EXPECT(0xcaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaad));
        EXPECT(0x5c, gbc.readMem(0xcaae));
        // CB 5C 00FB
        gbc.setState(0x3170, 0xc3da, 0xd620, 0xd0a8, 0x3b67, 0xbef9, 0x0, 0x1);
        gbc.writeMem(0x3170, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0x3172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 00FC
        gbc.setState(0x113a, 0x1f43, 0x8bf0, 0xae44, 0xf26e, 0x8def, 0x1, 0x1);
        gbc.writeMem(0x113a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f43, gbc.sp());
        EXPECT(0x113c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00FD
        gbc.setState(0x5ae5, 0x479c, 0xfff0, 0x2880, 0xb054, 0xab22, 0x0, 0x1);
        gbc.writeMem(0x5ae5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0x5ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 00FF
        gbc.setState(0xde5, 0x90c8, 0x980, 0xbd19, 0x8879, 0xcacb, 0x1, 0x0);
        gbc.writeMem(0xde5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x90c8, gbc.sp());
        EXPECT(0xde7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0100
        gbc.setState(0x7a67, 0xe7d1, 0xf9d0, 0x3223, 0x999a, 0xf254, 0x0, 0x0);
        gbc.writeMem(0x7a67, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe7d1, gbc.sp());
        EXPECT(0x7a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0101
        gbc.setState(0xb036, 0x8d5d, 0x7fb0, 0xef58, 0xb05f, 0xf86f, 0x1, 0x1);
        gbc.writeMem(0xb036, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8d5d, gbc.sp());
        EXPECT(0xb038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb036));
        EXPECT(0x5c, gbc.readMem(0xb037));
        // CB 5C 0102
        gbc.setState(0x10e8, 0xb05e, 0x7c20, 0xcd89, 0x6ba4, 0x730a, 0x0, 0x1);
        gbc.writeMem(0x10e8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb05e, gbc.sp());
        EXPECT(0x10ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0103
        gbc.setState(0xbe60, 0x5092, 0x9050, 0xa267, 0xbbe4, 0x16ba, 0x0, 0x1);
        gbc.writeMem(0xbe60, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0xbe62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe60));
        EXPECT(0x5c, gbc.readMem(0xbe61));
        // CB 5C 0104
        gbc.setState(0xe0a4, 0x3163, 0xcb10, 0xee0b, 0x92ab, 0x1004, 0x0, 0x0);
        gbc.writeMem(0xe0a4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3163, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a4));
        EXPECT(0x5c, gbc.readMem(0xe0a5));
        // CB 5C 0105
        gbc.setState(0xa513, 0xa609, 0xdf70, 0xe164, 0x4a1c, 0x804f, 0x1, 0x1);
        gbc.writeMem(0xa513, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa609, gbc.sp());
        EXPECT(0xa515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa513));
        EXPECT(0x5c, gbc.readMem(0xa514));
        // CB 5C 0106
        gbc.setState(0x7f22, 0xee88, 0x5ee0, 0x1b59, 0x3ed7, 0x9b8, 0x0, 0x1);
        gbc.writeMem(0x7f22, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0x7f24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0107
        gbc.setState(0xb6f7, 0x77e7, 0xafa0, 0xdff1, 0xbbf, 0xa356, 0x1, 0x0);
        gbc.writeMem(0xb6f7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x77e7, gbc.sp());
        EXPECT(0xb6f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f7));
        EXPECT(0x5c, gbc.readMem(0xb6f8));
        // CB 5C 0108
        gbc.setState(0x6995, 0xb670, 0xd6b0, 0x6df6, 0x59bc, 0x11a5, 0x0, 0x0);
        gbc.writeMem(0x6995, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb670, gbc.sp());
        EXPECT(0x6997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0109
        gbc.setState(0x4b5d, 0xdda0, 0x8860, 0xd36d, 0x1c68, 0x4a16, 0x0, 0x1);
        gbc.writeMem(0x4b5d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdda0, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 010A
        gbc.setState(0xac4e, 0xe948, 0x97f0, 0xbb94, 0x945c, 0x82dd, 0x0, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4e));
        EXPECT(0x5c, gbc.readMem(0xac4f));
        // CB 5C 010B
        gbc.setState(0x257f, 0x1632, 0x9070, 0x495c, 0xab91, 0x23ee, 0x0, 0x1);
        gbc.writeMem(0x257f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1632, gbc.sp());
        EXPECT(0x2581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 010C
        gbc.setState(0xb81c, 0x5f6c, 0x7e20, 0xf819, 0x3aeb, 0xff8, 0x1, 0x0);
        gbc.writeMem(0xb81c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f6c, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81c));
        EXPECT(0x5c, gbc.readMem(0xb81d));
        // CB 5C 010D
        gbc.setState(0xb045, 0x8027, 0xb770, 0x7a1b, 0x6c2c, 0x6d8c, 0x0, 0x0);
        gbc.writeMem(0xb045, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0xb047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb045));
        EXPECT(0x5c, gbc.readMem(0xb046));
        // CB 5C 010E
        gbc.setState(0xcc07, 0x29e8, 0x6a60, 0x57b5, 0xf57f, 0xf3ec, 0x0, 0x1);
        gbc.writeMem(0xcc07, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x29e8, gbc.sp());
        EXPECT(0xcc09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc07));
        EXPECT(0x5c, gbc.readMem(0xcc08));
        // CB 5C 0110
        gbc.setState(0x4ccd, 0xc7b9, 0xb670, 0x9d09, 0xe872, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0x4ccd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc7b9, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0111
        gbc.setState(0xda72, 0x5e54, 0x3520, 0xc9c9, 0xe0cd, 0xb304, 0x1, 0x0);
        gbc.writeMem(0xda72, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5e54, gbc.sp());
        EXPECT(0xda74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda72));
        EXPECT(0x5c, gbc.readMem(0xda73));
        // CB 5C 0112
        gbc.setState(0x1cab, 0x2ae9, 0x17b0, 0xb3d0, 0x13ba, 0x19e8, 0x0, 0x0);
        gbc.writeMem(0x1cab, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2ae9, gbc.sp());
        EXPECT(0x1cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0113
        gbc.setState(0xa097, 0x6013, 0x2500, 0x345f, 0xe93a, 0xd581, 0x0, 0x1);
        gbc.writeMem(0xa097, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6013, gbc.sp());
        EXPECT(0xa099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa097));
        EXPECT(0x5c, gbc.readMem(0xa098));
        // CB 5C 0114
        gbc.setState(0x7c11, 0x595, 0xacc0, 0x915c, 0xcbe8, 0x73d0, 0x1, 0x0);
        gbc.writeMem(0x7c11, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0x7c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0115
        gbc.setState(0x8fd, 0x79d9, 0x2b10, 0x7336, 0xd558, 0x6a80, 0x0, 0x1);
        gbc.writeMem(0x8fd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x79d9, gbc.sp());
        EXPECT(0x8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0116
        gbc.setState(0x69f2, 0x7665, 0x8a90, 0x7f72, 0x21cb, 0x1ad6, 0x0, 0x1);
        gbc.writeMem(0x69f2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7665, gbc.sp());
        EXPECT(0x69f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0117
        gbc.setState(0x2570, 0xeedb, 0x6770, 0x330c, 0xc9c6, 0xae1d, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0x2572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0118
        gbc.setState(0x2c97, 0xa136, 0xc040, 0x24fa, 0xdf4c, 0xcfee, 0x1, 0x0);
        gbc.writeMem(0x2c97, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0x2c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0119
        gbc.setState(0x3e21, 0x946c, 0x7370, 0x6004, 0x159d, 0x9aa1, 0x1, 0x0);
        gbc.writeMem(0x3e21, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x946c, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 011A
        gbc.setState(0x1bc3, 0x44c3, 0x4050, 0xde08, 0x9341, 0xe38d, 0x0, 0x0);
        gbc.writeMem(0x1bc3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x44c3, gbc.sp());
        EXPECT(0x1bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 011B
        gbc.setState(0x6ca3, 0x120b, 0x1080, 0x493b, 0xfaff, 0xeb67, 0x0, 0x1);
        gbc.writeMem(0x6ca3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x120b, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 011C
        gbc.setState(0xeb8d, 0x90b8, 0x7ef0, 0xe0bc, 0x1c36, 0x3794, 0x0, 0x1);
        gbc.writeMem(0xeb8d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x90b8, gbc.sp());
        EXPECT(0xeb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb8d));
        EXPECT(0x5c, gbc.readMem(0xeb8e));
        // CB 5C 011D
        gbc.setState(0xa68a, 0x6bb7, 0xbdb0, 0xdbe, 0xceef, 0x9223, 0x0, 0x1);
        gbc.writeMem(0xa68a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6bb7, gbc.sp());
        EXPECT(0xa68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68a));
        EXPECT(0x5c, gbc.readMem(0xa68b));
        // CB 5C 011E
        gbc.setState(0xe1a5, 0xfa10, 0xfcc0, 0x45a6, 0xbb7b, 0xb9d4, 0x1, 0x0);
        gbc.writeMem(0xe1a5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfa10, gbc.sp());
        EXPECT(0xe1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a5));
        EXPECT(0x5c, gbc.readMem(0xe1a6));
        // CB 5C 011F
        gbc.setState(0x5106, 0x31e, 0xd290, 0x169, 0x41d8, 0x2ff0, 0x0, 0x0);
        gbc.writeMem(0x5106, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x31e, gbc.sp());
        EXPECT(0x5108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0120
        gbc.setState(0xe197, 0x6250, 0x1a70, 0x9c3a, 0x6985, 0xa3df, 0x0, 0x1);
        gbc.writeMem(0xe197, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6250, gbc.sp());
        EXPECT(0xe199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe197));
        EXPECT(0x5c, gbc.readMem(0xe198));
        // CB 5C 0121
        gbc.setState(0xbe35, 0x4d0d, 0xecf0, 0x745d, 0x48b2, 0xa431, 0x1, 0x0);
        gbc.writeMem(0xbe35, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4d0d, gbc.sp());
        EXPECT(0xbe37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe35));
        EXPECT(0x5c, gbc.readMem(0xbe36));
        // CB 5C 0122
        gbc.setState(0x7728, 0x2a67, 0xbde0, 0x1467, 0x6a85, 0x980f, 0x0, 0x0);
        gbc.writeMem(0x7728, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x772a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0123
        gbc.setState(0x5559, 0x8bad, 0x4820, 0xfe4, 0xa028, 0x85ba, 0x1, 0x0);
        gbc.writeMem(0x5559, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8bad, gbc.sp());
        EXPECT(0x555b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0124
        gbc.setState(0x2f25, 0xbb81, 0x9c0, 0x2700, 0x10f4, 0x8740, 0x1, 0x1);
        gbc.writeMem(0x2f25, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0x2f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0126
        gbc.setState(0x5c9b, 0x718f, 0x54a0, 0x5fb9, 0xa06, 0x13a3, 0x1, 0x0);
        gbc.writeMem(0x5c9b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x718f, gbc.sp());
        EXPECT(0x5c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0127
        gbc.setState(0x7491, 0x385c, 0x1970, 0x437a, 0x5231, 0xe01d, 0x0, 0x0);
        gbc.writeMem(0x7491, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x385c, gbc.sp());
        EXPECT(0x7493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0128
        gbc.setState(0x1b76, 0x5178, 0x5980, 0x5d3d, 0x5b13, 0x9a1c, 0x1, 0x0);
        gbc.writeMem(0x1b76, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5178, gbc.sp());
        EXPECT(0x1b78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0129
        gbc.setState(0x14b9, 0x35c8, 0x85d0, 0x27df, 0x16e, 0x63d6, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x35c8, gbc.sp());
        EXPECT(0x14bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 012A
        gbc.setState(0x622, 0xb9d8, 0xeab0, 0x1b06, 0x9155, 0xfe40, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb9d8, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 012B
        gbc.setState(0xef30, 0x7309, 0xde90, 0x9f50, 0x5ed0, 0x8abd, 0x0, 0x0);
        gbc.writeMem(0xef30, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7309, gbc.sp());
        EXPECT(0xef32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef30));
        EXPECT(0x5c, gbc.readMem(0xef31));
        // CB 5C 012C
        gbc.setState(0xd7b7, 0x3181, 0x6bf0, 0xa2c5, 0xa1ad, 0x6376, 0x0, 0x1);
        gbc.writeMem(0xd7b7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0xd7b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b7));
        EXPECT(0x5c, gbc.readMem(0xd7b8));
        // CB 5C 012E
        gbc.setState(0x50a6, 0x8c12, 0x2730, 0xd5dc, 0xebf7, 0x9c91, 0x0, 0x1);
        gbc.writeMem(0x50a6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8c12, gbc.sp());
        EXPECT(0x50a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 012F
        gbc.setState(0xb0d5, 0xae89, 0xa9d0, 0x1ef9, 0xf212, 0xfaea, 0x1, 0x0);
        gbc.writeMem(0xb0d5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xae89, gbc.sp());
        EXPECT(0xb0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d5));
        EXPECT(0x5c, gbc.readMem(0xb0d6));
        // CB 5C 0130
        gbc.setState(0xbc1, 0xefa9, 0x4740, 0xd488, 0xe5d5, 0x9331, 0x1, 0x1);
        gbc.writeMem(0xbc1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xefa9, gbc.sp());
        EXPECT(0xbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0131
        gbc.setState(0x51e5, 0x4b06, 0x9000, 0xbf43, 0x8a09, 0x7a24, 0x0, 0x0);
        gbc.writeMem(0x51e5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0x51e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0132
        gbc.setState(0x697e, 0xe8d4, 0x9c40, 0x92fc, 0xae23, 0xf162, 0x0, 0x1);
        gbc.writeMem(0x697e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe8d4, gbc.sp());
        EXPECT(0x6980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0133
        gbc.setState(0xab4c, 0x4de6, 0x53c0, 0x46be, 0x588d, 0x4865, 0x1, 0x1);
        gbc.writeMem(0xab4c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0xab4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4c));
        EXPECT(0x5c, gbc.readMem(0xab4d));
        // CB 5C 0134
        gbc.setState(0xb5c4, 0x3fed, 0x4e70, 0x6112, 0xa1e, 0x2548, 0x0, 0x1);
        gbc.writeMem(0xb5c4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3fed, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c4));
        EXPECT(0x5c, gbc.readMem(0xb5c5));
        // CB 5C 0135
        gbc.setState(0x1b67, 0x5f4d, 0x9fd0, 0x12c7, 0x1ece, 0xb7c9, 0x0, 0x1);
        gbc.writeMem(0x1b67, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5f4d, gbc.sp());
        EXPECT(0x1b69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0136
        gbc.setState(0x22fd, 0xd7d9, 0xc0d0, 0xcc72, 0xd8d, 0xca1b, 0x1, 0x0);
        gbc.writeMem(0x22fd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0x22ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0137
        gbc.setState(0x11ed, 0x8b74, 0xbd20, 0x9607, 0x8b93, 0x13a9, 0x0, 0x0);
        gbc.writeMem(0x11ed, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8b74, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0138
        gbc.setState(0x5119, 0x125e, 0xdfc0, 0x9801, 0x9de5, 0x64f8, 0x1, 0x0);
        gbc.writeMem(0x5119, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x125e, gbc.sp());
        EXPECT(0x511b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0139
        gbc.setState(0x176a, 0x94c0, 0xee0, 0x4ff4, 0xe3b0, 0xf1ca, 0x1, 0x1);
        gbc.writeMem(0x176a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x94c0, gbc.sp());
        EXPECT(0x176c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 013B
        gbc.setState(0x7dc3, 0xffa6, 0x3870, 0x1f81, 0x507a, 0x7869, 0x0, 0x0);
        gbc.writeMem(0x7dc3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xffa6, gbc.sp());
        EXPECT(0x7dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 013C
        gbc.setState(0x85bb, 0x7098, 0x61b0, 0x95db, 0xf1a6, 0x9d50, 0x1, 0x0);
        gbc.writeMem(0x85bb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7098, gbc.sp());
        EXPECT(0x85bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85bb));
        EXPECT(0x5c, gbc.readMem(0x85bc));
        // CB 5C 013D
        gbc.setState(0x91ce, 0x525f, 0xb20, 0xc5f9, 0x3de7, 0xb9df, 0x1, 0x1);
        gbc.writeMem(0x91ce, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x525f, gbc.sp());
        EXPECT(0x91d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ce));
        EXPECT(0x5c, gbc.readMem(0x91cf));
        // CB 5C 013E
        gbc.setState(0xac51, 0xd720, 0xf4b0, 0x123c, 0xeb74, 0x5753, 0x1, 0x1);
        gbc.writeMem(0xac51, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd720, gbc.sp());
        EXPECT(0xac53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac51));
        EXPECT(0x5c, gbc.readMem(0xac52));
        // CB 5C 013F
        gbc.setState(0x9760, 0x4bfa, 0x5000, 0x5fc5, 0xa63d, 0x9892, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4bfa, gbc.sp());
        EXPECT(0x9762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9760));
        EXPECT(0x5c, gbc.readMem(0x9761));
        // CB 5C 0140
        gbc.setState(0x3a4f, 0xe74c, 0x51c0, 0xf5ed, 0xe987, 0xa1c7, 0x0, 0x1);
        gbc.writeMem(0x3a4f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0x3a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0142
        gbc.setState(0xc322, 0x7756, 0x420, 0xd433, 0x7b86, 0xcb1b, 0x0, 0x0);
        gbc.writeMem(0xc322, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7756, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc322));
        EXPECT(0x5c, gbc.readMem(0xc323));
        // CB 5C 0143
        gbc.setState(0x90b7, 0x9c3f, 0x7e60, 0x2b9d, 0xd3ad, 0xfcd1, 0x0, 0x1);
        gbc.writeMem(0x90b7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9c3f, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0x5c, gbc.readMem(0x90b8));
        // CB 5C 0144
        gbc.setState(0xbe9d, 0xeb25, 0x30a0, 0xb6ac, 0x6c1b, 0x8623, 0x1, 0x1);
        gbc.writeMem(0xbe9d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0xbe9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9d));
        EXPECT(0x5c, gbc.readMem(0xbe9e));
        // CB 5C 0145
        gbc.setState(0x2ff3, 0x7551, 0x8260, 0x976e, 0xd8f2, 0xad0, 0x1, 0x1);
        gbc.writeMem(0x2ff3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7551, gbc.sp());
        EXPECT(0x2ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0146
        gbc.setState(0xc670, 0xfddb, 0x3520, 0x2dc8, 0x816b, 0xefff, 0x0, 0x0);
        gbc.writeMem(0xc670, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfddb, gbc.sp());
        EXPECT(0xc672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc670));
        EXPECT(0x5c, gbc.readMem(0xc671));
        // CB 5C 0147
        gbc.setState(0x494a, 0x7c61, 0x1a50, 0xb6ed, 0xed01, 0x4ed4, 0x0, 0x0);
        gbc.writeMem(0x494a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7c61, gbc.sp());
        EXPECT(0x494c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0148
        gbc.setState(0x19f5, 0xe993, 0xf8d0, 0xcfdb, 0x1457, 0x656c, 0x0, 0x0);
        gbc.writeMem(0x19f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0x19f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0149
        gbc.setState(0xda42, 0x6431, 0xdc00, 0x4a2e, 0xb503, 0xc739, 0x1, 0x1);
        gbc.writeMem(0xda42, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0xda44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda42));
        EXPECT(0x5c, gbc.readMem(0xda43));
        // CB 5C 014A
        gbc.setState(0xab16, 0xcef4, 0xf350, 0x54ce, 0x38e9, 0x21d5, 0x0, 0x1);
        gbc.writeMem(0xab16, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcef4, gbc.sp());
        EXPECT(0xab18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab16));
        EXPECT(0x5c, gbc.readMem(0xab17));
        // CB 5C 014B
        gbc.setState(0x5a4a, 0x612, 0x3a70, 0x4ff7, 0x8d33, 0xde2b, 0x0, 0x0);
        gbc.writeMem(0x5a4a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x612, gbc.sp());
        EXPECT(0x5a4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 014C
        gbc.setState(0x6a18, 0xb39e, 0xc8a0, 0xadfb, 0xa66d, 0xe817, 0x0, 0x1);
        gbc.writeMem(0x6a18, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb39e, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 014E
        gbc.setState(0xd844, 0xecdd, 0x25e0, 0xb1b3, 0xeb77, 0xe367, 0x1, 0x0);
        gbc.writeMem(0xd844, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xecdd, gbc.sp());
        EXPECT(0xd846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd844));
        EXPECT(0x5c, gbc.readMem(0xd845));
        // CB 5C 014F
        gbc.setState(0xdff8, 0x577e, 0xf30, 0x4f3d, 0xd59e, 0x4ccd, 0x0, 0x0);
        gbc.writeMem(0xdff8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x577e, gbc.sp());
        EXPECT(0xdffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff8));
        EXPECT(0x5c, gbc.readMem(0xdff9));
        // CB 5C 0150
        gbc.setState(0xad93, 0xaf22, 0x5930, 0xa092, 0xf25a, 0x183f, 0x0, 0x1);
        gbc.writeMem(0xad93, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf22, gbc.sp());
        EXPECT(0xad95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad93));
        EXPECT(0x5c, gbc.readMem(0xad94));
        // CB 5C 0151
        gbc.setState(0x457d, 0xa2c0, 0x6ed0, 0x61fe, 0x3c7, 0x23a4, 0x1, 0x1);
        gbc.writeMem(0x457d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa2c0, gbc.sp());
        EXPECT(0x457f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0152
        gbc.setState(0xd716, 0xebcf, 0xaa50, 0xb7ab, 0x9711, 0xe9, 0x1, 0x0);
        gbc.writeMem(0xd716, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0xd718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd716));
        EXPECT(0x5c, gbc.readMem(0xd717));
        // CB 5C 0153
        gbc.setState(0x627, 0x795c, 0x2ac0, 0x36f7, 0x9101, 0x5819, 0x0, 0x0);
        gbc.writeMem(0x627, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x795c, gbc.sp());
        EXPECT(0x629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0154
        gbc.setState(0xd90b, 0x3473, 0xabe0, 0xce2b, 0xc6aa, 0xa7a9, 0x0, 0x1);
        gbc.writeMem(0xd90b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3473, gbc.sp());
        EXPECT(0xd90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90b));
        EXPECT(0x5c, gbc.readMem(0xd90c));
        // CB 5C 0155
        gbc.setState(0x81dc, 0x1979, 0x2a40, 0x4893, 0x60f5, 0xe36e, 0x0, 0x1);
        gbc.writeMem(0x81dc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1979, gbc.sp());
        EXPECT(0x81de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81dc));
        EXPECT(0x5c, gbc.readMem(0x81dd));
        // CB 5C 0156
        gbc.setState(0x8532, 0xe94, 0x8980, 0xb97c, 0xa383, 0xfd91, 0x1, 0x1);
        gbc.writeMem(0x8532, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe94, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8532));
        EXPECT(0x5c, gbc.readMem(0x8533));
        // CB 5C 0158
        gbc.setState(0xc220, 0x59b7, 0xd640, 0xfa90, 0xabf4, 0xbc8e, 0x0, 0x0);
        gbc.writeMem(0xc220, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0xc222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc220));
        EXPECT(0x5c, gbc.readMem(0xc221));
        // CB 5C 0159
        gbc.setState(0x2d90, 0x87cd, 0x45d0, 0xd638, 0x85b8, 0x44a, 0x1, 0x0);
        gbc.writeMem(0x2d90, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x2d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 015A
        gbc.setState(0xe600, 0x464, 0x8bf0, 0x2f82, 0xff5c, 0x31e3, 0x0, 0x1);
        gbc.writeMem(0xe600, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x464, gbc.sp());
        EXPECT(0xe602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe600));
        EXPECT(0x5c, gbc.readMem(0xe601));
        // CB 5C 015B
        gbc.setState(0x315e, 0x126, 0xa870, 0xdff9, 0x1668, 0x2fef, 0x0, 0x0);
        gbc.writeMem(0x315e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x126, gbc.sp());
        EXPECT(0x3160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 015C
        gbc.setState(0x5b74, 0x3f99, 0xaf0, 0xea11, 0x15ea, 0x5e4, 0x1, 0x0);
        gbc.writeMem(0x5b74, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3f99, gbc.sp());
        EXPECT(0x5b76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 015D
        gbc.setState(0x7a40, 0xca86, 0x7ee0, 0xf044, 0xa84e, 0x38f, 0x1, 0x0);
        gbc.writeMem(0x7a40, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xca86, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 015E
        gbc.setState(0xb44b, 0xff4e, 0x3ff0, 0xc31e, 0x1ee8, 0x17b2, 0x0, 0x0);
        gbc.writeMem(0xb44b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xff4e, gbc.sp());
        EXPECT(0xb44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb44b));
        EXPECT(0x5c, gbc.readMem(0xb44c));
        // CB 5C 015F
        gbc.setState(0xc118, 0xa29e, 0x9620, 0x68b9, 0x3ed4, 0x5b55, 0x1, 0x0);
        gbc.writeMem(0xc118, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0xc11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc118));
        EXPECT(0x5c, gbc.readMem(0xc119));
        // CB 5C 0160
        gbc.setState(0x3fb0, 0xc0f6, 0xcd90, 0x5f7e, 0x492e, 0xe7d2, 0x0, 0x0);
        gbc.writeMem(0x3fb0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc0f6, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0161
        gbc.setState(0x8e61, 0xbd01, 0xb5e0, 0x3e15, 0x1d33, 0x5136, 0x1, 0x1);
        gbc.writeMem(0x8e61, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbd01, gbc.sp());
        EXPECT(0x8e63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e61));
        EXPECT(0x5c, gbc.readMem(0x8e62));
        // CB 5C 0162
        gbc.setState(0x21f8, 0xbb5e, 0x27d0, 0x66c6, 0xc2a4, 0xed77, 0x1, 0x1);
        gbc.writeMem(0x21f8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbb5e, gbc.sp());
        EXPECT(0x21fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0163
        gbc.setState(0xdeeb, 0xf412, 0x7400, 0xf3f3, 0xde99, 0x855f, 0x1, 0x1);
        gbc.writeMem(0xdeeb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf412, gbc.sp());
        EXPECT(0xdeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeeb));
        EXPECT(0x5c, gbc.readMem(0xdeec));
        // CB 5C 0164
        gbc.setState(0x7a2f, 0x77b2, 0xe690, 0x8407, 0x5941, 0x5e15, 0x1, 0x0);
        gbc.writeMem(0x7a2f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x77b2, gbc.sp());
        EXPECT(0x7a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0165
        gbc.setState(0x9805, 0xd064, 0x6a00, 0xc83e, 0xc474, 0xb16f, 0x1, 0x0);
        gbc.writeMem(0x9805, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd064, gbc.sp());
        EXPECT(0x9807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9805));
        EXPECT(0x5c, gbc.readMem(0x9806));
        // CB 5C 0166
        gbc.setState(0x4cbb, 0x9891, 0xb200, 0xb2d6, 0xafe0, 0xc156, 0x1, 0x1);
        gbc.writeMem(0x4cbb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0x4cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0167
        gbc.setState(0xa09, 0xcf9c, 0x8570, 0xfc2d, 0x59f9, 0x8d, 0x1, 0x1);
        gbc.writeMem(0xa09, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xcf9c, gbc.sp());
        EXPECT(0xa0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0168
        gbc.setState(0xd2dd, 0x9176, 0xd2b0, 0x220b, 0xc587, 0x315f, 0x0, 0x0);
        gbc.writeMem(0xd2dd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9176, gbc.sp());
        EXPECT(0xd2df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2dd));
        EXPECT(0x5c, gbc.readMem(0xd2de));
        // CB 5C 0169
        gbc.setState(0x808, 0x986, 0xd80, 0x6325, 0x3cba, 0xcaf5, 0x1, 0x0);
        gbc.writeMem(0x808, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x986, gbc.sp());
        EXPECT(0x80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 016B
        gbc.setState(0x8f06, 0x5add, 0xf150, 0x7be, 0xca84, 0xa44f, 0x0, 0x1);
        gbc.writeMem(0x8f06, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x5add, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f06));
        EXPECT(0x5c, gbc.readMem(0x8f07));
        // CB 5C 016C
        gbc.setState(0xe6e0, 0xb178, 0xc2e0, 0x11fc, 0xb10f, 0xfd3f, 0x1, 0x0);
        gbc.writeMem(0xe6e0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e0));
        EXPECT(0x5c, gbc.readMem(0xe6e1));
        // CB 5C 016D
        gbc.setState(0x2a6, 0x95c7, 0x2fa0, 0x2b94, 0xa94c, 0x27b7, 0x0, 0x1);
        gbc.writeMem(0x2a6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x95c7, gbc.sp());
        EXPECT(0x2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 016E
        gbc.setState(0x6980, 0x6c1, 0x4a60, 0x882d, 0xc769, 0x97b2, 0x0, 0x0);
        gbc.writeMem(0x6980, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6c1, gbc.sp());
        EXPECT(0x6982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 016F
        gbc.setState(0x945, 0xbe81, 0xb870, 0x86dc, 0xce11, 0xac62, 0x1, 0x1);
        gbc.writeMem(0x945, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbe81, gbc.sp());
        EXPECT(0x947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0170
        gbc.setState(0x90ed, 0x5cf0, 0xbc30, 0xf6b9, 0x3d8, 0xa976, 0x1, 0x1);
        gbc.writeMem(0x90ed, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5cf0, gbc.sp());
        EXPECT(0x90ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ed));
        EXPECT(0x5c, gbc.readMem(0x90ee));
        // CB 5C 0171
        gbc.setState(0x8454, 0x1322, 0xd7c0, 0x616e, 0xb2ef, 0xfd01, 0x1, 0x1);
        gbc.writeMem(0x8454, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1322, gbc.sp());
        EXPECT(0x8456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8454));
        EXPECT(0x5c, gbc.readMem(0x8455));
        // CB 5C 0172
        gbc.setState(0xbb8, 0x904b, 0xb720, 0xeeb8, 0x83e9, 0x16a9, 0x1, 0x1);
        gbc.writeMem(0xbb8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x904b, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0173
        gbc.setState(0xde47, 0x50f9, 0x20c0, 0x67d5, 0x7cba, 0x829a, 0x0, 0x0);
        gbc.writeMem(0xde47, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0xde49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde47));
        EXPECT(0x5c, gbc.readMem(0xde48));
        // CB 5C 0174
        gbc.setState(0xac93, 0x7494, 0x5400, 0x7fa9, 0x64ea, 0xc099, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7494, gbc.sp());
        EXPECT(0xac95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac93));
        EXPECT(0x5c, gbc.readMem(0xac94));
        // CB 5C 0175
        gbc.setState(0x13f1, 0x24a8, 0x94b0, 0xab5d, 0xdbbe, 0x1b6d, 0x0, 0x1);
        gbc.writeMem(0x13f1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x24a8, gbc.sp());
        EXPECT(0x13f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0176
        gbc.setState(0xec90, 0x6603, 0xb180, 0xeb93, 0x6f5, 0x3ab1, 0x0, 0x0);
        gbc.writeMem(0xec90, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6603, gbc.sp());
        EXPECT(0xec92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec90));
        EXPECT(0x5c, gbc.readMem(0xec91));
        // CB 5C 0177
        gbc.setState(0xd623, 0x4d97, 0x30b0, 0x9bf4, 0xc524, 0x464b, 0x0, 0x1);
        gbc.writeMem(0xd623, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4d97, gbc.sp());
        EXPECT(0xd625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd623));
        EXPECT(0x5c, gbc.readMem(0xd624));
        // CB 5C 0179
        gbc.setState(0x436e, 0x5f0c, 0xee30, 0xb4e7, 0xe561, 0xe1e1, 0x0, 0x0);
        gbc.writeMem(0x436e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0x4370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 017A
        gbc.setState(0xae9b, 0xb124, 0xd160, 0x8d89, 0x16b6, 0xb8dd, 0x1, 0x0);
        gbc.writeMem(0xae9b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb124, gbc.sp());
        EXPECT(0xae9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae9b));
        EXPECT(0x5c, gbc.readMem(0xae9c));
        // CB 5C 017C
        gbc.setState(0x52e0, 0x6aeb, 0x1680, 0xd468, 0xa3dd, 0x6dd5, 0x1, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6aeb, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 017D
        gbc.setState(0xdc21, 0x839e, 0xacf0, 0x4492, 0x7a3f, 0x7df, 0x0, 0x0);
        gbc.writeMem(0xdc21, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x839e, gbc.sp());
        EXPECT(0xdc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc21));
        EXPECT(0x5c, gbc.readMem(0xdc22));
        // CB 5C 017E
        gbc.setState(0x3605, 0x3bc4, 0x1100, 0x6e53, 0x2415, 0xce63, 0x0, 0x0);
        gbc.writeMem(0x3605, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3bc4, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 017F
        gbc.setState(0x85ff, 0x330a, 0x9240, 0x451d, 0xadaa, 0xbcb6, 0x1, 0x0);
        gbc.writeMem(0x85ff, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x330a, gbc.sp());
        EXPECT(0x8601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ff));
        EXPECT(0x5c, gbc.readMem(0x8600));
        // CB 5C 0180
        gbc.setState(0x5434, 0x6653, 0x8110, 0xd300, 0x672b, 0x516d, 0x1, 0x1);
        gbc.writeMem(0x5434, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6653, gbc.sp());
        EXPECT(0x5436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0181
        gbc.setState(0x713c, 0xda4a, 0x400, 0xf6b5, 0x2a7b, 0x2c42, 0x1, 0x0);
        gbc.writeMem(0x713c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0x713e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0182
        gbc.setState(0x96a2, 0x1308, 0xaea0, 0x2316, 0xf6a9, 0xd299, 0x0, 0x1);
        gbc.writeMem(0x96a2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1308, gbc.sp());
        EXPECT(0x96a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a2));
        EXPECT(0x5c, gbc.readMem(0x96a3));
        // CB 5C 0183
        gbc.setState(0xb0e4, 0x89d7, 0xee40, 0xb247, 0x9054, 0x601c, 0x0, 0x0);
        gbc.writeMem(0xb0e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x89d7, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e4));
        EXPECT(0x5c, gbc.readMem(0xb0e5));
        // CB 5C 0184
        gbc.setState(0x6b0b, 0x3dc6, 0x10, 0xb395, 0x3786, 0xeb3a, 0x1, 0x1);
        gbc.writeMem(0x6b0b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0185
        gbc.setState(0xeb57, 0xe123, 0x9460, 0x9e8e, 0xc50, 0x8dbe, 0x0, 0x0);
        gbc.writeMem(0xeb57, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe123, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb57));
        EXPECT(0x5c, gbc.readMem(0xeb58));
        // CB 5C 0186
        gbc.setState(0xe6ca, 0xc334, 0x9720, 0x5a96, 0xf648, 0x9384, 0x0, 0x0);
        gbc.writeMem(0xe6ca, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc334, gbc.sp());
        EXPECT(0xe6cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ca));
        EXPECT(0x5c, gbc.readMem(0xe6cb));
        // CB 5C 0187
        gbc.setState(0xa9e8, 0x9a29, 0x5610, 0xb47d, 0x829d, 0xf4bf, 0x1, 0x1);
        gbc.writeMem(0xa9e8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0xa9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e8));
        EXPECT(0x5c, gbc.readMem(0xa9e9));
        // CB 5C 0188
        gbc.setState(0x64bd, 0x8a2d, 0x8540, 0xfa54, 0xc783, 0xd94d, 0x1, 0x1);
        gbc.writeMem(0x64bd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0x64bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0189
        gbc.setState(0xb8b, 0xf9ef, 0x51a0, 0x5ba8, 0x39a, 0xb5b6, 0x1, 0x1);
        gbc.writeMem(0xb8b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0xb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 018A
        gbc.setState(0x8534, 0x61ba, 0x8ed0, 0x27e, 0x5488, 0xfd7f, 0x0, 0x1);
        gbc.writeMem(0x8534, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x61ba, gbc.sp());
        EXPECT(0x8536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8534));
        EXPECT(0x5c, gbc.readMem(0x8535));
        // CB 5C 018B
        gbc.setState(0x5c6, 0xb00e, 0x5e40, 0x545c, 0xe3e5, 0xd546, 0x1, 0x1);
        gbc.writeMem(0x5c6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb00e, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 018C
        gbc.setState(0xe5ea, 0x87be, 0x2d30, 0x9da1, 0xa4fa, 0xf1a3, 0x0, 0x1);
        gbc.writeMem(0xe5ea, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x87be, gbc.sp());
        EXPECT(0xe5ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ea));
        EXPECT(0x5c, gbc.readMem(0xe5eb));
        // CB 5C 018D
        gbc.setState(0x500e, 0xf6f3, 0x650, 0x9d6b, 0x26e0, 0x58fa, 0x0, 0x1);
        gbc.writeMem(0x500e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf6f3, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 018E
        gbc.setState(0xc940, 0x4455, 0xf070, 0x973b, 0xb212, 0xb398, 0x1, 0x1);
        gbc.writeMem(0xc940, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4455, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc940));
        EXPECT(0x5c, gbc.readMem(0xc941));
        // CB 5C 018F
        gbc.setState(0x7efd, 0x61c9, 0x8b30, 0x6270, 0x4ddc, 0xdab9, 0x0, 0x0);
        gbc.writeMem(0x7efd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x61c9, gbc.sp());
        EXPECT(0x7eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0190
        gbc.setState(0x8ba3, 0xc2ca, 0xad20, 0x44e, 0x6c9f, 0x328, 0x1, 0x0);
        gbc.writeMem(0x8ba3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc2ca, gbc.sp());
        EXPECT(0x8ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba3));
        EXPECT(0x5c, gbc.readMem(0x8ba4));
        // CB 5C 0191
        gbc.setState(0x8718, 0x4588, 0x5120, 0x2639, 0xafbe, 0x7506, 0x0, 0x1);
        gbc.writeMem(0x8718, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4588, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8718));
        EXPECT(0x5c, gbc.readMem(0x8719));
        // CB 5C 0192
        gbc.setState(0x983f, 0xe16f, 0xf410, 0x27f1, 0x1b47, 0xa9d5, 0x0, 0x1);
        gbc.writeMem(0x983f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983f));
        EXPECT(0x5c, gbc.readMem(0x9840));
        // CB 5C 0193
        gbc.setState(0x5ba7, 0x1588, 0xaeb0, 0x24de, 0x1502, 0xf694, 0x1, 0x0);
        gbc.writeMem(0x5ba7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x5ba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0194
        gbc.setState(0xa874, 0x84a, 0x2ff0, 0xce75, 0x433b, 0x5735, 0x1, 0x1);
        gbc.writeMem(0xa874, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x84a, gbc.sp());
        EXPECT(0xa876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa874));
        EXPECT(0x5c, gbc.readMem(0xa875));
        // CB 5C 0195
        gbc.setState(0x30a5, 0x5e8f, 0xbd0, 0x9de8, 0x8995, 0x52a5, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5e8f, gbc.sp());
        EXPECT(0x30a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0197
        gbc.setState(0x452b, 0x995c, 0xb3f0, 0xfbdb, 0x695b, 0xc415, 0x1, 0x1);
        gbc.writeMem(0x452b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0x452d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0198
        gbc.setState(0xa966, 0xb6ec, 0x8c10, 0xa4cb, 0x438c, 0x1bb2, 0x1, 0x0);
        gbc.writeMem(0xa966, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb6ec, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa966));
        EXPECT(0x5c, gbc.readMem(0xa967));
        // CB 5C 0199
        gbc.setState(0xbd0, 0x7b7d, 0x76d0, 0xcc12, 0xe5f0, 0x6848, 0x0, 0x1);
        gbc.writeMem(0xbd0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7b7d, gbc.sp());
        EXPECT(0xbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 019A
        gbc.setState(0x8900, 0x7e6e, 0x4070, 0x2cf2, 0x30d9, 0x316e, 0x1, 0x1);
        gbc.writeMem(0x8900, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7e6e, gbc.sp());
        EXPECT(0x8902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8900));
        EXPECT(0x5c, gbc.readMem(0x8901));
        // CB 5C 019B
        gbc.setState(0x8c54, 0xbdde, 0x5f80, 0xd07e, 0x8f3c, 0x30e3, 0x1, 0x0);
        gbc.writeMem(0x8c54, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbdde, gbc.sp());
        EXPECT(0x8c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c54));
        EXPECT(0x5c, gbc.readMem(0x8c55));
        // CB 5C 019C
        gbc.setState(0xe81e, 0x59a4, 0x8f50, 0x614f, 0x3aa0, 0xee29, 0x1, 0x1);
        gbc.writeMem(0xe81e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x59a4, gbc.sp());
        EXPECT(0xe820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe81e));
        EXPECT(0x5c, gbc.readMem(0xe81f));
        // CB 5C 019D
        gbc.setState(0xb697, 0x1211, 0xc490, 0xb328, 0x1e81, 0x7e79, 0x0, 0x1);
        gbc.writeMem(0xb697, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1211, gbc.sp());
        EXPECT(0xb699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb697));
        EXPECT(0x5c, gbc.readMem(0xb698));
        // CB 5C 019F
        gbc.setState(0xbec0, 0xaac8, 0x8330, 0x2992, 0xa012, 0x602f, 0x1, 0x1);
        gbc.writeMem(0xbec0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0xbec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec0));
        EXPECT(0x5c, gbc.readMem(0xbec1));
        // CB 5C 01A0
        gbc.setState(0xea93, 0xa585, 0x8d30, 0x3047, 0x63c5, 0xdb35, 0x1, 0x1);
        gbc.writeMem(0xea93, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa585, gbc.sp());
        EXPECT(0xea95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea93));
        EXPECT(0x5c, gbc.readMem(0xea94));
        // CB 5C 01A1
        gbc.setState(0xa757, 0xf111, 0x8350, 0x3bd1, 0x64e6, 0x918, 0x1, 0x0);
        gbc.writeMem(0xa757, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf111, gbc.sp());
        EXPECT(0xa759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa757));
        EXPECT(0x5c, gbc.readMem(0xa758));
        // CB 5C 01A3
        gbc.setState(0x7905, 0x70cf, 0x6c80, 0xeef8, 0xff1d, 0x50da, 0x0, 0x0);
        gbc.writeMem(0x7905, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x70cf, gbc.sp());
        EXPECT(0x7907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01A4
        gbc.setState(0xe228, 0xb1d2, 0x780, 0x8698, 0x608, 0x51af, 0x0, 0x1);
        gbc.writeMem(0xe228, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb1d2, gbc.sp());
        EXPECT(0xe22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe228));
        EXPECT(0x5c, gbc.readMem(0xe229));
        // CB 5C 01A5
        gbc.setState(0x672e, 0xd0c8, 0x72d0, 0x3d26, 0x8682, 0x8271, 0x0, 0x1);
        gbc.writeMem(0x672e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd0c8, gbc.sp());
        EXPECT(0x6730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01A7
        gbc.setState(0x47d4, 0xb6b1, 0x380, 0x4360, 0x893f, 0xa6ec, 0x0, 0x1);
        gbc.writeMem(0x47d4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb6b1, gbc.sp());
        EXPECT(0x47d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01A8
        gbc.setState(0xc677, 0x5dd, 0x2930, 0x248f, 0x58e9, 0x785, 0x0, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5dd, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc677));
        EXPECT(0x5c, gbc.readMem(0xc678));
        // CB 5C 01A9
        gbc.setState(0xcd88, 0x2bb4, 0x3be0, 0xcf14, 0x5e6c, 0x9f32, 0x1, 0x0);
        gbc.writeMem(0xcd88, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2bb4, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd88));
        EXPECT(0x5c, gbc.readMem(0xcd89));
        // CB 5C 01AA
        gbc.setState(0x5926, 0xcb60, 0x4410, 0x5809, 0x70cb, 0x4afc, 0x1, 0x1);
        gbc.writeMem(0x5926, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcb60, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01AB
        gbc.setState(0xa54d, 0x3c77, 0xd6b0, 0x6c0f, 0x7df3, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0xa54d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0xa54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54d));
        EXPECT(0x5c, gbc.readMem(0xa54e));
        // CB 5C 01AC
        gbc.setState(0x5482, 0x97a7, 0x66f0, 0x2fd, 0xf95d, 0x51a8, 0x1, 0x0);
        gbc.writeMem(0x5482, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x97a7, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01AD
        gbc.setState(0xea0, 0x336d, 0x5910, 0x335b, 0x933e, 0xe63b, 0x1, 0x1);
        gbc.writeMem(0xea0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x336d, gbc.sp());
        EXPECT(0xea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01B0
        gbc.setState(0x2f8d, 0x1fc3, 0xd0a0, 0x2b58, 0x8450, 0x208d, 0x1, 0x0);
        gbc.writeMem(0x2f8d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1fc3, gbc.sp());
        EXPECT(0x2f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01B1
        gbc.setState(0x46bb, 0x67bb, 0x6e30, 0xb29a, 0x28f0, 0x9ad5, 0x1, 0x0);
        gbc.writeMem(0x46bb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0x46bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01B2
        gbc.setState(0xca78, 0x9ecf, 0xb350, 0x148b, 0x8219, 0xf28, 0x1, 0x0);
        gbc.writeMem(0xca78, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0xca7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca78));
        EXPECT(0x5c, gbc.readMem(0xca79));
        // CB 5C 01B3
        gbc.setState(0x26e4, 0x503e, 0xa210, 0x985c, 0xc3c1, 0x666a, 0x1, 0x0);
        gbc.writeMem(0x26e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x503e, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01B4
        gbc.setState(0x8020, 0xe658, 0x4020, 0x6314, 0xe571, 0xd29f, 0x1, 0x1);
        gbc.writeMem(0x8020, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe658, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8020));
        EXPECT(0x5c, gbc.readMem(0x8021));
        // CB 5C 01B5
        gbc.setState(0x89fc, 0x9258, 0x8890, 0x4302, 0xbce, 0xed28, 0x1, 0x1);
        gbc.writeMem(0x89fc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9258, gbc.sp());
        EXPECT(0x89fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fc));
        EXPECT(0x5c, gbc.readMem(0x89fd));
        // CB 5C 01B6
        gbc.setState(0x61ef, 0x88bc, 0xba80, 0x4501, 0x49fa, 0xfc35, 0x1, 0x1);
        gbc.writeMem(0x61ef, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x88bc, gbc.sp());
        EXPECT(0x61f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01B7
        gbc.setState(0x606a, 0x43c4, 0x3c00, 0x1518, 0x5970, 0x1009, 0x0, 0x1);
        gbc.writeMem(0x606a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x43c4, gbc.sp());
        EXPECT(0x606c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01B8
        gbc.setState(0x92c5, 0x8e94, 0x1490, 0xaeaa, 0xf5d1, 0xe5b3, 0x1, 0x0);
        gbc.writeMem(0x92c5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8e94, gbc.sp());
        EXPECT(0x92c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92c5));
        EXPECT(0x5c, gbc.readMem(0x92c6));
        // CB 5C 01B9
        gbc.setState(0x73bb, 0xbcf4, 0x3950, 0x138c, 0x7281, 0x3bf9, 0x0, 0x0);
        gbc.writeMem(0x73bb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbcf4, gbc.sp());
        EXPECT(0x73bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01BA
        gbc.setState(0x34b0, 0x8e23, 0x2d50, 0x3074, 0x5582, 0x311c, 0x1, 0x0);
        gbc.writeMem(0x34b0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8e23, gbc.sp());
        EXPECT(0x34b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01BB
        gbc.setState(0x3880, 0x2cd9, 0x16e0, 0x4a72, 0xb996, 0x1a2c, 0x1, 0x1);
        gbc.writeMem(0x3880, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2cd9, gbc.sp());
        EXPECT(0x3882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01BC
        gbc.setState(0x8552, 0x4168, 0xcfc0, 0x2b92, 0x7c61, 0x3007, 0x1, 0x1);
        gbc.writeMem(0x8552, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4168, gbc.sp());
        EXPECT(0x8554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8552));
        EXPECT(0x5c, gbc.readMem(0x8553));
        // CB 5C 01BD
        gbc.setState(0x2b39, 0x5dc2, 0xb0, 0x5f15, 0xeb3, 0x12a2, 0x1, 0x1);
        gbc.writeMem(0x2b39, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5dc2, gbc.sp());
        EXPECT(0x2b3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01BE
        gbc.setState(0xc472, 0x8c48, 0xbd90, 0x5a9e, 0x3bdf, 0x1b0a, 0x1, 0x1);
        gbc.writeMem(0xc472, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8c48, gbc.sp());
        EXPECT(0xc474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc472));
        EXPECT(0x5c, gbc.readMem(0xc473));
        // CB 5C 01BF
        gbc.setState(0x1fdc, 0x5d0e, 0x4a60, 0xaa5e, 0x4887, 0x9924, 0x0, 0x1);
        gbc.writeMem(0x1fdc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5d0e, gbc.sp());
        EXPECT(0x1fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01C0
        gbc.setState(0x6ba1, 0x237b, 0x56f0, 0xf517, 0x71c6, 0x8aa6, 0x0, 0x1);
        gbc.writeMem(0x6ba1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x237b, gbc.sp());
        EXPECT(0x6ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01C1
        gbc.setState(0x46dc, 0x349a, 0xcfa0, 0xe12b, 0xa8bf, 0x12f1, 0x1, 0x0);
        gbc.writeMem(0x46dc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x349a, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01C2
        gbc.setState(0x29bc, 0x5eaa, 0xe1e0, 0x80f9, 0x28ba, 0x1428, 0x1, 0x1);
        gbc.writeMem(0x29bc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5eaa, gbc.sp());
        EXPECT(0x29be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01C3
        gbc.setState(0x9d2e, 0x8a37, 0x68d0, 0x98b6, 0x3fa2, 0x290e, 0x0, 0x0);
        gbc.writeMem(0x9d2e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8a37, gbc.sp());
        EXPECT(0x9d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2e));
        EXPECT(0x5c, gbc.readMem(0x9d2f));
        // CB 5C 01C4
        gbc.setState(0x85d6, 0x5fa7, 0x8e00, 0xded6, 0xe9b2, 0xb0ac, 0x1, 0x0);
        gbc.writeMem(0x85d6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5fa7, gbc.sp());
        EXPECT(0x85d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d6));
        EXPECT(0x5c, gbc.readMem(0x85d7));
        // CB 5C 01C5
        gbc.setState(0xa88b, 0x4b32, 0xb000, 0x493e, 0xb438, 0x7b65, 0x1, 0x1);
        gbc.writeMem(0xa88b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4b32, gbc.sp());
        EXPECT(0xa88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88b));
        EXPECT(0x5c, gbc.readMem(0xa88c));
        // CB 5C 01C6
        gbc.setState(0x6281, 0xe04c, 0x7bf0, 0x4d66, 0xcf55, 0x7666, 0x1, 0x0);
        gbc.writeMem(0x6281, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe04c, gbc.sp());
        EXPECT(0x6283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01C8
        gbc.setState(0x1bfe, 0x24d5, 0x6380, 0xe678, 0x4276, 0x95bd, 0x0, 0x0);
        gbc.writeMem(0x1bfe, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0x1c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01C9
        gbc.setState(0xdba9, 0xf7ab, 0x8740, 0x690e, 0x4700, 0xa3db, 0x0, 0x0);
        gbc.writeMem(0xdba9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf7ab, gbc.sp());
        EXPECT(0xdbab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba9));
        EXPECT(0x5c, gbc.readMem(0xdbaa));
        // CB 5C 01CA
        gbc.setState(0x1402, 0x7a71, 0x5fe0, 0x2c83, 0x39d4, 0x9d63, 0x1, 0x1);
        gbc.writeMem(0x1402, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7a71, gbc.sp());
        EXPECT(0x1404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01CB
        gbc.setState(0xde37, 0x8997, 0x7ff0, 0xf98f, 0xd774, 0x5ed3, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0xde39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde37));
        EXPECT(0x5c, gbc.readMem(0xde38));
        // CB 5C 01CC
        gbc.setState(0x3d1d, 0x16f4, 0x820, 0xac90, 0x302f, 0xdb06, 0x1, 0x0);
        gbc.writeMem(0x3d1d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01CD
        gbc.setState(0x6f0f, 0xf6c0, 0x3170, 0xe9f9, 0xe05a, 0xa47d, 0x0, 0x1);
        gbc.writeMem(0x6f0f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf6c0, gbc.sp());
        EXPECT(0x6f11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01CE
        gbc.setState(0xabbf, 0xaa6c, 0xbf0, 0x21db, 0x5922, 0x192, 0x1, 0x1);
        gbc.writeMem(0xabbf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaa6c, gbc.sp());
        EXPECT(0xabc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbf));
        EXPECT(0x5c, gbc.readMem(0xabc0));
        // CB 5C 01CF
        gbc.setState(0x5b31, 0x4f66, 0x5850, 0x7cd8, 0x57c7, 0x5718, 0x1, 0x0);
        gbc.writeMem(0x5b31, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0x5b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01D0
        gbc.setState(0xbe32, 0xf72d, 0xb910, 0xcb6c, 0xd56e, 0x4ccf, 0x1, 0x0);
        gbc.writeMem(0xbe32, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf72d, gbc.sp());
        EXPECT(0xbe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe32));
        EXPECT(0x5c, gbc.readMem(0xbe33));
        // CB 5C 01D1
        gbc.setState(0x865f, 0x4d44, 0x3ed0, 0x8fb4, 0x48b5, 0x258e, 0x1, 0x1);
        gbc.writeMem(0x865f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4d44, gbc.sp());
        EXPECT(0x8661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865f));
        EXPECT(0x5c, gbc.readMem(0x8660));
        // CB 5C 01D2
        gbc.setState(0x88aa, 0x9823, 0x5590, 0x6299, 0xd24b, 0xfb8f, 0x1, 0x1);
        gbc.writeMem(0x88aa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9823, gbc.sp());
        EXPECT(0x88ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88aa));
        EXPECT(0x5c, gbc.readMem(0x88ab));
        // CB 5C 01D3
        gbc.setState(0x18cb, 0x9d6a, 0xd40, 0xc73b, 0xacd3, 0xfd7f, 0x1, 0x0);
        gbc.writeMem(0x18cb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0x18cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01D4
        gbc.setState(0xb445, 0x1a63, 0x1ce0, 0x2073, 0xb48, 0x2095, 0x1, 0x1);
        gbc.writeMem(0xb445, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1a63, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb445));
        EXPECT(0x5c, gbc.readMem(0xb446));
        // CB 5C 01D5
        gbc.setState(0xb783, 0x437f, 0x9e00, 0x416d, 0xff8c, 0x6b05, 0x1, 0x0);
        gbc.writeMem(0xb783, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0xb785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb783));
        EXPECT(0x5c, gbc.readMem(0xb784));
        // CB 5C 01D6
        gbc.setState(0x51c3, 0xbae4, 0x6800, 0x7102, 0x819c, 0xbde5, 0x1, 0x0);
        gbc.writeMem(0x51c3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbae4, gbc.sp());
        EXPECT(0x51c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01D7
        gbc.setState(0x8424, 0x236e, 0x5150, 0x37c, 0xaf89, 0xbb8, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x236e, gbc.sp());
        EXPECT(0x8426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8424));
        EXPECT(0x5c, gbc.readMem(0x8425));
        // CB 5C 01D8
        gbc.setState(0xc49d, 0x724f, 0x1c00, 0xa24a, 0xd124, 0x3c76, 0x1, 0x1);
        gbc.writeMem(0xc49d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x724f, gbc.sp());
        EXPECT(0xc49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49d));
        EXPECT(0x5c, gbc.readMem(0xc49e));
        // CB 5C 01DA
        gbc.setState(0xa315, 0x5d89, 0xd620, 0xcc67, 0x2fb4, 0x1b49, 0x1, 0x1);
        gbc.writeMem(0xa315, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5d89, gbc.sp());
        EXPECT(0xa317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa315));
        EXPECT(0x5c, gbc.readMem(0xa316));
        // CB 5C 01DB
        gbc.setState(0x83af, 0x4c1c, 0x1d0, 0x7bab, 0x2e76, 0xa829, 0x0, 0x1);
        gbc.writeMem(0x83af, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4c1c, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83af));
        EXPECT(0x5c, gbc.readMem(0x83b0));
        // CB 5C 01DC
        gbc.setState(0x1910, 0x6206, 0x1e10, 0xadfe, 0x998e, 0x8c2a, 0x0, 0x0);
        gbc.writeMem(0x1910, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6206, gbc.sp());
        EXPECT(0x1912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01DD
        gbc.setState(0x42a9, 0xcaf6, 0x9970, 0xd99, 0xe56, 0x5e8e, 0x0, 0x0);
        gbc.writeMem(0x42a9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcaf6, gbc.sp());
        EXPECT(0x42ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01DE
        gbc.setState(0x3b9d, 0x2e2d, 0x8810, 0x771e, 0xdb02, 0x5541, 0x0, 0x1);
        gbc.writeMem(0x3b9d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2e2d, gbc.sp());
        EXPECT(0x3b9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01DF
        gbc.setState(0x2e7d, 0xa3d2, 0xf8b0, 0x61de, 0x7ddc, 0x1532, 0x1, 0x1);
        gbc.writeMem(0x2e7d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa3d2, gbc.sp());
        EXPECT(0x2e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01E0
        gbc.setState(0xe6b2, 0x72b7, 0x9140, 0x3b94, 0xa7e8, 0xd2d5, 0x0, 0x1);
        gbc.writeMem(0xe6b2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x72b7, gbc.sp());
        EXPECT(0xe6b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b2));
        EXPECT(0x5c, gbc.readMem(0xe6b3));
        // CB 5C 01E1
        gbc.setState(0x480d, 0x366f, 0x8660, 0xfbfe, 0xfbd3, 0xbb4c, 0x0, 0x1);
        gbc.writeMem(0x480d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x366f, gbc.sp());
        EXPECT(0x480f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01E2
        gbc.setState(0xe257, 0x79, 0x3af0, 0xddbb, 0x4781, 0x991d, 0x0, 0x1);
        gbc.writeMem(0xe257, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x79, gbc.sp());
        EXPECT(0xe259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe257));
        EXPECT(0x5c, gbc.readMem(0xe258));
        // CB 5C 01E3
        gbc.setState(0x7742, 0xe10e, 0x860, 0x6abc, 0x26be, 0x3a70, 0x1, 0x0);
        gbc.writeMem(0x7742, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe10e, gbc.sp());
        EXPECT(0x7744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01E4
        gbc.setState(0xc82d, 0x19e5, 0x7ab0, 0x53df, 0xfffc, 0x1e5e, 0x1, 0x0);
        gbc.writeMem(0xc82d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x19e5, gbc.sp());
        EXPECT(0xc82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc82d));
        EXPECT(0x5c, gbc.readMem(0xc82e));
        // CB 5C 01E5
        gbc.setState(0xb861, 0xc1bd, 0x2230, 0xfbf8, 0x361f, 0xe035, 0x0, 0x1);
        gbc.writeMem(0xb861, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0xb863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb861));
        EXPECT(0x5c, gbc.readMem(0xb862));
        // CB 5C 01E6
        gbc.setState(0xe3ac, 0x143e, 0xb6d0, 0x44e6, 0xadba, 0x4347, 0x1, 0x1);
        gbc.writeMem(0xe3ac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x143e, gbc.sp());
        EXPECT(0xe3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ac));
        EXPECT(0x5c, gbc.readMem(0xe3ad));
        // CB 5C 01E8
        gbc.setState(0x6f19, 0x55c7, 0xffd0, 0xd502, 0xbb26, 0x5750, 0x1, 0x0);
        gbc.writeMem(0x6f19, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x55c7, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01EA
        gbc.setState(0x334c, 0x4357, 0xa120, 0xbd29, 0x59d6, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x334c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4357, gbc.sp());
        EXPECT(0x334e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01EB
        gbc.setState(0x9dd1, 0x4727, 0xb9e0, 0x4214, 0x2c75, 0xbbee, 0x1, 0x0);
        gbc.writeMem(0x9dd1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0x9dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd1));
        EXPECT(0x5c, gbc.readMem(0x9dd2));
        // CB 5C 01EC
        gbc.setState(0xce3b, 0xbbc2, 0xdff0, 0xb2a5, 0x2052, 0x9c38, 0x0, 0x0);
        gbc.writeMem(0xce3b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbbc2, gbc.sp());
        EXPECT(0xce3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce3b));
        EXPECT(0x5c, gbc.readMem(0xce3c));
        // CB 5C 01ED
        gbc.setState(0x53c, 0x7a4e, 0x1100, 0xfc29, 0x8a7d, 0xaa49, 0x1, 0x1);
        gbc.writeMem(0x53c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7a4e, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01EE
        gbc.setState(0xa220, 0x1708, 0x6110, 0x23e3, 0xd213, 0xb02f, 0x0, 0x1);
        gbc.writeMem(0xa220, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1708, gbc.sp());
        EXPECT(0xa222, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa220));
        EXPECT(0x5c, gbc.readMem(0xa221));
        // CB 5C 01EF
        gbc.setState(0x5400, 0x3409, 0x40c0, 0x3d67, 0x1f76, 0xe1ab, 0x0, 0x1);
        gbc.writeMem(0x5400, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0x5402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01F0
        gbc.setState(0x6bcc, 0xc010, 0x4850, 0x6685, 0x931e, 0xf6d6, 0x0, 0x1);
        gbc.writeMem(0x6bcc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc010, gbc.sp());
        EXPECT(0x6bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01F1
        gbc.setState(0x661d, 0xda98, 0xa110, 0xb2ba, 0xde6a, 0x9986, 0x0, 0x0);
        gbc.writeMem(0x661d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x661f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01F2
        gbc.setState(0xae51, 0xe39c, 0x4d00, 0x567d, 0x26e6, 0x44e6, 0x1, 0x0);
        gbc.writeMem(0xae51, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe39c, gbc.sp());
        EXPECT(0xae53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae51));
        EXPECT(0x5c, gbc.readMem(0xae52));
        // CB 5C 01F3
        gbc.setState(0x47fc, 0xbeee, 0x2450, 0x8b34, 0x95e2, 0x3f2f, 0x0, 0x1);
        gbc.writeMem(0x47fc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbeee, gbc.sp());
        EXPECT(0x47fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01F4
        gbc.setState(0x66f6, 0x144f, 0xdca0, 0xb2d8, 0x1793, 0x91fe, 0x0, 0x0);
        gbc.writeMem(0x66f6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x144f, gbc.sp());
        EXPECT(0x66f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01F5
        gbc.setState(0x49dd, 0xb38e, 0xb030, 0x7ad, 0xda5e, 0x5bb4, 0x0, 0x0);
        gbc.writeMem(0x49dd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb38e, gbc.sp());
        EXPECT(0x49df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01F6
        gbc.setState(0x85ec, 0x9b31, 0x13b0, 0x5cf1, 0x69b4, 0xfd15, 0x0, 0x1);
        gbc.writeMem(0x85ec, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b31, gbc.sp());
        EXPECT(0x85ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ec));
        EXPECT(0x5c, gbc.readMem(0x85ed));
        // CB 5C 01F8
        gbc.setState(0x822f, 0xac6, 0x3cb0, 0x53a5, 0x973, 0x336b, 0x1, 0x0);
        gbc.writeMem(0x822f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac6, gbc.sp());
        EXPECT(0x8231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822f));
        EXPECT(0x5c, gbc.readMem(0x8230));
        // CB 5C 01F9
        gbc.setState(0xb0ba, 0x6bb7, 0x9c10, 0xb8c3, 0x91c9, 0xb2e0, 0x0, 0x1);
        gbc.writeMem(0xb0ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6bb7, gbc.sp());
        EXPECT(0xb0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ba));
        EXPECT(0x5c, gbc.readMem(0xb0bb));
        // CB 5C 01FA
        gbc.setState(0xcd65, 0xd036, 0x80c0, 0x4e30, 0x51b5, 0x38d0, 0x0, 0x0);
        gbc.writeMem(0xcd65, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd036, gbc.sp());
        EXPECT(0xcd67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd65));
        EXPECT(0x5c, gbc.readMem(0xcd66));
        // CB 5C 01FB
        gbc.setState(0x2e1d, 0xdbb8, 0x8a80, 0x86fd, 0x2953, 0x90ec, 0x0, 0x0);
        gbc.writeMem(0x2e1d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdbb8, gbc.sp());
        EXPECT(0x2e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01FC
        gbc.setState(0x4046, 0x42d7, 0xc020, 0xb72d, 0x8dd3, 0xe906, 0x0, 0x0);
        gbc.writeMem(0x4046, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x42d7, gbc.sp());
        EXPECT(0x4048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 01FD
        gbc.setState(0x4ddb, 0xc0ef, 0x26d0, 0x9119, 0x6bbf, 0xb7fc, 0x0, 0x1);
        gbc.writeMem(0x4ddb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc0ef, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01FE
        gbc.setState(0x596, 0x64b0, 0x4670, 0x4cf4, 0x85a4, 0xfebf, 0x1, 0x1);
        gbc.writeMem(0x596, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x64b0, gbc.sp());
        EXPECT(0x598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 01FF
        gbc.setState(0x948b, 0x4d0, 0xcf20, 0x8fd, 0x5ea2, 0xee4a, 0x0, 0x1);
        gbc.writeMem(0x948b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x4d0, gbc.sp());
        EXPECT(0x948d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948b));
        EXPECT(0x5c, gbc.readMem(0x948c));
        // CB 5C 0200
        gbc.setState(0x5986, 0xedbe, 0x4050, 0x8fcc, 0x294c, 0x7882, 0x1, 0x1);
        gbc.writeMem(0x5986, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xedbe, gbc.sp());
        EXPECT(0x5988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0201
        gbc.setState(0xaa5, 0x93f7, 0xc8a0, 0xbd70, 0xff4d, 0xd75c, 0x1, 0x0);
        gbc.writeMem(0xaa5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0xaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0202
        gbc.setState(0xab70, 0x5d92, 0xf270, 0x298b, 0x5fcf, 0xa122, 0x1, 0x1);
        gbc.writeMem(0xab70, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5d92, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab70));
        EXPECT(0x5c, gbc.readMem(0xab71));
        // CB 5C 0203
        gbc.setState(0x1963, 0x390c, 0xf30, 0xcf3e, 0x6d08, 0x217c, 0x1, 0x1);
        gbc.writeMem(0x1963, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x390c, gbc.sp());
        EXPECT(0x1965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0204
        gbc.setState(0x9c9b, 0xa4c5, 0x9610, 0x88de, 0x809b, 0xaf51, 0x1, 0x0);
        gbc.writeMem(0x9c9b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa4c5, gbc.sp());
        EXPECT(0x9c9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9b));
        EXPECT(0x5c, gbc.readMem(0x9c9c));
        // CB 5C 0205
        gbc.setState(0x3833, 0xf8cc, 0xb360, 0x682b, 0xe064, 0xc289, 0x1, 0x1);
        gbc.writeMem(0x3833, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf8cc, gbc.sp());
        EXPECT(0x3835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0206
        gbc.setState(0x8f7f, 0xaceb, 0xb510, 0xbd, 0x58e3, 0xc30b, 0x1, 0x0);
        gbc.writeMem(0x8f7f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xaceb, gbc.sp());
        EXPECT(0x8f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7f));
        EXPECT(0x5c, gbc.readMem(0x8f80));
        // CB 5C 0207
        gbc.setState(0x107c, 0xb802, 0x8d00, 0xbd0f, 0xe843, 0xf14e, 0x0, 0x0);
        gbc.writeMem(0x107c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x107e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0209
        gbc.setState(0x4cac, 0x862, 0xae0, 0x2894, 0x134e, 0xc1b3, 0x0, 0x0);
        gbc.writeMem(0x4cac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x862, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 020A
        gbc.setState(0x750b, 0x2dec, 0xc080, 0xfd43, 0xdcc4, 0xaec1, 0x0, 0x0);
        gbc.writeMem(0x750b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2dec, gbc.sp());
        EXPECT(0x750d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 020B
        gbc.setState(0xb81a, 0xa01a, 0xa6d0, 0x433b, 0x47db, 0x1fae, 0x0, 0x1);
        gbc.writeMem(0xb81a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa01a, gbc.sp());
        EXPECT(0xb81c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81a));
        EXPECT(0x5c, gbc.readMem(0xb81b));
        // CB 5C 020C
        gbc.setState(0xaa5a, 0xb2e9, 0x7bf0, 0xd9f7, 0xff4b, 0xa2c3, 0x0, 0x1);
        gbc.writeMem(0xaa5a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb2e9, gbc.sp());
        EXPECT(0xaa5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5a));
        EXPECT(0x5c, gbc.readMem(0xaa5b));
        // CB 5C 020D
        gbc.setState(0x4a98, 0xf8b1, 0xafe0, 0x6e21, 0x1837, 0xe113, 0x0, 0x0);
        gbc.writeMem(0x4a98, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf8b1, gbc.sp());
        EXPECT(0x4a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 020E
        gbc.setState(0xefe7, 0xc9ac, 0xfe90, 0x112a, 0x8cbf, 0xce92, 0x1, 0x1);
        gbc.writeMem(0xefe7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc9ac, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe7));
        EXPECT(0x5c, gbc.readMem(0xefe8));
        // CB 5C 020F
        gbc.setState(0x23c3, 0xa938, 0x3d00, 0xfa75, 0xd9b8, 0x53a2, 0x0, 0x1);
        gbc.writeMem(0x23c3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa938, gbc.sp());
        EXPECT(0x23c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0210
        gbc.setState(0xc52e, 0x2b57, 0x8190, 0x77d8, 0xc9f7, 0x3eb3, 0x0, 0x0);
        gbc.writeMem(0xc52e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0xc530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52e));
        EXPECT(0x5c, gbc.readMem(0xc52f));
        // CB 5C 0211
        gbc.setState(0x8344, 0x6079, 0xf550, 0xbef9, 0x218f, 0x9906, 0x0, 0x1);
        gbc.writeMem(0x8344, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6079, gbc.sp());
        EXPECT(0x8346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8344));
        EXPECT(0x5c, gbc.readMem(0x8345));
        // CB 5C 0212
        gbc.setState(0xaf00, 0x2823, 0x74f0, 0x4457, 0x9c89, 0x369e, 0x1, 0x0);
        gbc.writeMem(0xaf00, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf00));
        EXPECT(0x5c, gbc.readMem(0xaf01));
        // CB 5C 0213
        gbc.setState(0xed18, 0x7dc2, 0xd3e0, 0x7512, 0x5a23, 0xa026, 0x0, 0x0);
        gbc.writeMem(0xed18, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7dc2, gbc.sp());
        EXPECT(0xed1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed18));
        EXPECT(0x5c, gbc.readMem(0xed19));
        // CB 5C 0214
        gbc.setState(0x35d3, 0x7dcb, 0x9fc0, 0xab84, 0xa87, 0x94ca, 0x1, 0x0);
        gbc.writeMem(0x35d3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7dcb, gbc.sp());
        EXPECT(0x35d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0215
        gbc.setState(0x4c65, 0x48b8, 0xc9e0, 0xb45a, 0xe53a, 0xc8f, 0x0, 0x0);
        gbc.writeMem(0x4c65, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x48b8, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0216
        gbc.setState(0xaf99, 0x1644, 0x21e0, 0xc1a1, 0x2c33, 0x18cb, 0x1, 0x0);
        gbc.writeMem(0xaf99, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1644, gbc.sp());
        EXPECT(0xaf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf99));
        EXPECT(0x5c, gbc.readMem(0xaf9a));
        // CB 5C 0217
        gbc.setState(0x8065, 0xa65e, 0x5820, 0xa59f, 0x734c, 0xe818, 0x0, 0x1);
        gbc.writeMem(0x8065, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa65e, gbc.sp());
        EXPECT(0x8067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8065));
        EXPECT(0x5c, gbc.readMem(0x8066));
        // CB 5C 0218
        gbc.setState(0xc, 0x6bd3, 0x4500, 0x60e2, 0xc9fb, 0x73b2, 0x0, 0x0);
        gbc.writeMem(0xc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6bd3, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0219
        gbc.setState(0xbd69, 0xaca, 0xa610, 0xc68e, 0xfe38, 0x63fe, 0x1, 0x0);
        gbc.writeMem(0xbd69, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaca, gbc.sp());
        EXPECT(0xbd6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd69));
        EXPECT(0x5c, gbc.readMem(0xbd6a));
        // CB 5C 021A
        gbc.setState(0xdd5a, 0x5cfc, 0xa5c0, 0x47ca, 0x805d, 0xdabf, 0x1, 0x0);
        gbc.writeMem(0xdd5a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5cfc, gbc.sp());
        EXPECT(0xdd5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5a));
        EXPECT(0x5c, gbc.readMem(0xdd5b));
        // CB 5C 021B
        gbc.setState(0x5969, 0xa6d2, 0xfd00, 0x100, 0x475c, 0xe25d, 0x1, 0x1);
        gbc.writeMem(0x5969, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa6d2, gbc.sp());
        EXPECT(0x596b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 021E
        gbc.setState(0xb1a4, 0xd412, 0x5680, 0xfb0, 0x4633, 0xc60e, 0x0, 0x0);
        gbc.writeMem(0xb1a4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd412, gbc.sp());
        EXPECT(0xb1a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a4));
        EXPECT(0x5c, gbc.readMem(0xb1a5));
        // CB 5C 021F
        gbc.setState(0x9142, 0xe0a6, 0x11e0, 0x31e7, 0x6a74, 0x5c87, 0x1, 0x1);
        gbc.writeMem(0x9142, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe0a6, gbc.sp());
        EXPECT(0x9144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9142));
        EXPECT(0x5c, gbc.readMem(0x9143));
        // CB 5C 0220
        gbc.setState(0x922a, 0x9657, 0x6ba0, 0x1a8, 0xd22e, 0x55a1, 0x0, 0x0);
        gbc.writeMem(0x922a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9657, gbc.sp());
        EXPECT(0x922c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922a));
        EXPECT(0x5c, gbc.readMem(0x922b));
        // CB 5C 0221
        gbc.setState(0x754b, 0x3ca3, 0xaaa0, 0x65a5, 0x80e6, 0x865e, 0x1, 0x1);
        gbc.writeMem(0x754b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3ca3, gbc.sp());
        EXPECT(0x754d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0222
        gbc.setState(0xe1f7, 0x9483, 0xa2e0, 0x466d, 0x2ab6, 0x22de, 0x0, 0x1);
        gbc.writeMem(0xe1f7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9483, gbc.sp());
        EXPECT(0xe1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f7));
        EXPECT(0x5c, gbc.readMem(0xe1f8));
        // CB 5C 0223
        gbc.setState(0x172a, 0x12a2, 0x5e90, 0xa28a, 0xca21, 0x1265, 0x1, 0x1);
        gbc.writeMem(0x172a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x12a2, gbc.sp());
        EXPECT(0x172c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0224
        gbc.setState(0x48cb, 0x3136, 0x6900, 0x6466, 0x8c52, 0x8792, 0x0, 0x0);
        gbc.writeMem(0x48cb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3136, gbc.sp());
        EXPECT(0x48cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0225
        gbc.setState(0x792c, 0xfc1b, 0xe920, 0x3d40, 0xa6cb, 0x45cf, 0x1, 0x0);
        gbc.writeMem(0x792c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xfc1b, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0226
        gbc.setState(0xd5ae, 0xd5eb, 0x4380, 0x9ba2, 0x656a, 0x30b4, 0x1, 0x0);
        gbc.writeMem(0xd5ae, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd5eb, gbc.sp());
        EXPECT(0xd5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ae));
        EXPECT(0x5c, gbc.readMem(0xd5af));
        // CB 5C 0227
        gbc.setState(0x46c6, 0x4827, 0x8f60, 0x3322, 0xf3b8, 0x2d15, 0x0, 0x0);
        gbc.writeMem(0x46c6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4827, gbc.sp());
        EXPECT(0x46c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0228
        gbc.setState(0x37ce, 0x8aa0, 0x1090, 0x5100, 0x6fa0, 0x6df7, 0x0, 0x0);
        gbc.writeMem(0x37ce, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8aa0, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0229
        gbc.setState(0x19d7, 0xf815, 0x5610, 0x3a42, 0x1960, 0xc064, 0x1, 0x1);
        gbc.writeMem(0x19d7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0x19d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 022A
        gbc.setState(0xdb26, 0x2289, 0xa240, 0x6e08, 0x3987, 0x3d7b, 0x1, 0x1);
        gbc.writeMem(0xdb26, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x2289, gbc.sp());
        EXPECT(0xdb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb26));
        EXPECT(0x5c, gbc.readMem(0xdb27));
        // CB 5C 022B
        gbc.setState(0xd26e, 0x544c, 0x2df0, 0x43b1, 0xabb9, 0x807b, 0x1, 0x1);
        gbc.writeMem(0xd26e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x544c, gbc.sp());
        EXPECT(0xd270, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26e));
        EXPECT(0x5c, gbc.readMem(0xd26f));
        // CB 5C 022C
        gbc.setState(0xdd29, 0xf0c, 0xe4e0, 0x1130, 0x85bb, 0x9377, 0x0, 0x0);
        gbc.writeMem(0xdd29, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd29));
        EXPECT(0x5c, gbc.readMem(0xdd2a));
        // CB 5C 022D
        gbc.setState(0x1e93, 0x4585, 0xd070, 0xd810, 0xaae2, 0xbf86, 0x1, 0x1);
        gbc.writeMem(0x1e93, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4585, gbc.sp());
        EXPECT(0x1e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 022E
        gbc.setState(0x229c, 0x1440, 0x7dd0, 0xc920, 0x41d2, 0x66c2, 0x1, 0x0);
        gbc.writeMem(0x229c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1440, gbc.sp());
        EXPECT(0x229e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 022F
        gbc.setState(0xea90, 0x3a68, 0xcc10, 0x44fe, 0x4b8f, 0xf651, 0x0, 0x0);
        gbc.writeMem(0xea90, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3a68, gbc.sp());
        EXPECT(0xea92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea90));
        EXPECT(0x5c, gbc.readMem(0xea91));
        // CB 5C 0230
        gbc.setState(0xe2d4, 0xb85c, 0x8cb0, 0x96f7, 0x9e67, 0x70aa, 0x1, 0x0);
        gbc.writeMem(0xe2d4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb85c, gbc.sp());
        EXPECT(0xe2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d4));
        EXPECT(0x5c, gbc.readMem(0xe2d5));
        // CB 5C 0231
        gbc.setState(0xd723, 0x9afe, 0x8b70, 0xcfd3, 0x9c26, 0x6e86, 0x0, 0x0);
        gbc.writeMem(0xd723, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9afe, gbc.sp());
        EXPECT(0xd725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd723));
        EXPECT(0x5c, gbc.readMem(0xd724));
        // CB 5C 0232
        gbc.setState(0xef71, 0x13d, 0xbc40, 0x82d7, 0x9c44, 0xaeb8, 0x0, 0x1);
        gbc.writeMem(0xef71, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x13d, gbc.sp());
        EXPECT(0xef73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef71));
        EXPECT(0x5c, gbc.readMem(0xef72));
        // CB 5C 0233
        gbc.setState(0xaad3, 0x27a2, 0xec90, 0x531b, 0x4aeb, 0x96b8, 0x0, 0x0);
        gbc.writeMem(0xaad3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x27a2, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0x5c, gbc.readMem(0xaad4));
        // CB 5C 0234
        gbc.setState(0x30ad, 0x587e, 0xfe90, 0x516d, 0xafe5, 0x51dd, 0x0, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x587e, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0235
        gbc.setState(0x833f, 0xad79, 0x12c0, 0x2fa8, 0x458c, 0x8a43, 0x1, 0x1);
        gbc.writeMem(0x833f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xad79, gbc.sp());
        EXPECT(0x8341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833f));
        EXPECT(0x5c, gbc.readMem(0x8340));
        // CB 5C 0236
        gbc.setState(0xbed0, 0xe009, 0x8030, 0xad47, 0x70d5, 0xd27b, 0x1, 0x1);
        gbc.writeMem(0xbed0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe009, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0x5c, gbc.readMem(0xbed1));
        // CB 5C 0237
        gbc.setState(0x1a63, 0x1867, 0x9db0, 0x4876, 0xb92c, 0x653, 0x0, 0x1);
        gbc.writeMem(0x1a63, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0x1a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0238
        gbc.setState(0x99d0, 0x760d, 0x83a0, 0x38b9, 0x19b2, 0xac02, 0x1, 0x0);
        gbc.writeMem(0x99d0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0x99d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d0));
        EXPECT(0x5c, gbc.readMem(0x99d1));
        // CB 5C 0239
        gbc.setState(0x9f36, 0x9e24, 0xff40, 0xe81a, 0x7bf1, 0xe829, 0x0, 0x0);
        gbc.writeMem(0x9f36, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9e24, gbc.sp());
        EXPECT(0x9f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f36));
        EXPECT(0x5c, gbc.readMem(0x9f37));
        // CB 5C 023A
        gbc.setState(0xcff6, 0xe304, 0x88f0, 0xf1df, 0xafd7, 0xb381, 0x0, 0x1);
        gbc.writeMem(0xcff6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe304, gbc.sp());
        EXPECT(0xcff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff6));
        EXPECT(0x5c, gbc.readMem(0xcff7));
        // CB 5C 023B
        gbc.setState(0x498, 0x883c, 0x9800, 0x5c1, 0xc03e, 0xbd84, 0x1, 0x1);
        gbc.writeMem(0x498, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x883c, gbc.sp());
        EXPECT(0x49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 023C
        gbc.setState(0xd884, 0xadf, 0xe0a0, 0x1d1, 0x1809, 0xa6e9, 0x1, 0x0);
        gbc.writeMem(0xd884, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xadf, gbc.sp());
        EXPECT(0xd886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd884));
        EXPECT(0x5c, gbc.readMem(0xd885));
        // CB 5C 023D
        gbc.setState(0x4188, 0x1e48, 0x7d20, 0xca53, 0x7201, 0x5ee7, 0x0, 0x1);
        gbc.writeMem(0x4188, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x418a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 023E
        gbc.setState(0xedd2, 0x6cc9, 0x88f0, 0x2d2f, 0xadb4, 0x90a2, 0x0, 0x1);
        gbc.writeMem(0xedd2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6cc9, gbc.sp());
        EXPECT(0xedd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedd2));
        EXPECT(0x5c, gbc.readMem(0xedd3));
        // CB 5C 023F
        gbc.setState(0x32ce, 0x812d, 0x6cb0, 0xeb70, 0xf656, 0x9a91, 0x1, 0x0);
        gbc.writeMem(0x32ce, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x812d, gbc.sp());
        EXPECT(0x32d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0240
        gbc.setState(0x810d, 0xf64d, 0x9df0, 0x2ed9, 0x97ce, 0x78, 0x0, 0x1);
        gbc.writeMem(0x810d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf64d, gbc.sp());
        EXPECT(0x810f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810d));
        EXPECT(0x5c, gbc.readMem(0x810e));
        // CB 5C 0241
        gbc.setState(0x3e9c, 0x268d, 0x4d00, 0xbaeb, 0xa989, 0xd14b, 0x1, 0x0);
        gbc.writeMem(0x3e9c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x268d, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0242
        gbc.setState(0x109e, 0x75b9, 0xf600, 0xbe27, 0x865b, 0xc399, 0x1, 0x0);
        gbc.writeMem(0x109e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x75b9, gbc.sp());
        EXPECT(0x10a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0243
        gbc.setState(0x97c0, 0x88a9, 0x15d0, 0x8385, 0x2e95, 0x5856, 0x1, 0x0);
        gbc.writeMem(0x97c0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x88a9, gbc.sp());
        EXPECT(0x97c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c0));
        EXPECT(0x5c, gbc.readMem(0x97c1));
        // CB 5C 0244
        gbc.setState(0x8104, 0xb7ae, 0xd10, 0x12cd, 0x7164, 0x2bf, 0x0, 0x0);
        gbc.writeMem(0x8104, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb7ae, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8104));
        EXPECT(0x5c, gbc.readMem(0x8105));
        // CB 5C 0245
        gbc.setState(0x1ac2, 0x9350, 0xbcf0, 0xb167, 0x7289, 0x707, 0x0, 0x0);
        gbc.writeMem(0x1ac2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0x1ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0246
        gbc.setState(0x3072, 0xb9ae, 0x3790, 0xd5a4, 0x3771, 0x1680, 0x0, 0x1);
        gbc.writeMem(0x3072, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb9ae, gbc.sp());
        EXPECT(0x3074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0247
        gbc.setState(0x7cfc, 0x12b0, 0x66c0, 0xcbaf, 0xc807, 0x8656, 0x0, 0x1);
        gbc.writeMem(0x7cfc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x12b0, gbc.sp());
        EXPECT(0x7cfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0248
        gbc.setState(0xc9a7, 0xbdb0, 0xf450, 0x4e6e, 0x604b, 0xc37b, 0x0, 0x1);
        gbc.writeMem(0xc9a7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbdb0, gbc.sp());
        EXPECT(0xc9a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9a7));
        EXPECT(0x5c, gbc.readMem(0xc9a8));
        // CB 5C 0249
        gbc.setState(0x6be, 0xb586, 0x86b0, 0x7a19, 0x53e2, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0x6be, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb586, gbc.sp());
        EXPECT(0x6c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 024A
        gbc.setState(0x4054, 0xff19, 0xd650, 0x8ce0, 0x63a1, 0xae20, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff19, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 024B
        gbc.setState(0x96b6, 0xd3ce, 0x50e0, 0x9d56, 0x99b0, 0xedc3, 0x1, 0x1);
        gbc.writeMem(0x96b6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd3ce, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b6));
        EXPECT(0x5c, gbc.readMem(0x96b7));
        // CB 5C 024C
        gbc.setState(0xe765, 0x5354, 0x8450, 0x54cb, 0xc220, 0x2c0, 0x1, 0x1);
        gbc.writeMem(0xe765, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5354, gbc.sp());
        EXPECT(0xe767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe765));
        EXPECT(0x5c, gbc.readMem(0xe766));
        // CB 5C 024D
        gbc.setState(0xcba7, 0xcdef, 0x6be0, 0x73a, 0x5c87, 0xeb81, 0x1, 0x1);
        gbc.writeMem(0xcba7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcdef, gbc.sp());
        EXPECT(0xcba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba7));
        EXPECT(0x5c, gbc.readMem(0xcba8));
        // CB 5C 024E
        gbc.setState(0xec7, 0x9201, 0xb540, 0xe7af, 0x87a2, 0x9659, 0x0, 0x0);
        gbc.writeMem(0xec7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9201, gbc.sp());
        EXPECT(0xec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 024F
        gbc.setState(0x700c, 0xf92a, 0xa30, 0x1713, 0x1952, 0x9249, 0x0, 0x1);
        gbc.writeMem(0x700c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf92a, gbc.sp());
        EXPECT(0x700e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0252
        gbc.setState(0xe3e, 0x1813, 0xacf0, 0x3490, 0xbb0f, 0x48f6, 0x1, 0x0);
        gbc.writeMem(0xe3e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1813, gbc.sp());
        EXPECT(0xe40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0253
        gbc.setState(0xe69e, 0x2ec6, 0xaa90, 0x9a2c, 0x6e5c, 0xf407, 0x0, 0x0);
        gbc.writeMem(0xe69e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69e));
        EXPECT(0x5c, gbc.readMem(0xe69f));
        // CB 5C 0255
        gbc.setState(0x85c2, 0x89d8, 0x63e0, 0xba05, 0x209a, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x85c2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x89d8, gbc.sp());
        EXPECT(0x85c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85c2));
        EXPECT(0x5c, gbc.readMem(0x85c3));
        // CB 5C 0256
        gbc.setState(0x1ed3, 0xb590, 0x4890, 0x3445, 0xba61, 0xb431, 0x0, 0x1);
        gbc.writeMem(0x1ed3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0258
        gbc.setState(0xda92, 0x32f, 0x1c10, 0xa1d9, 0x2953, 0x3eac, 0x1, 0x0);
        gbc.writeMem(0xda92, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x32f, gbc.sp());
        EXPECT(0xda94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda92));
        EXPECT(0x5c, gbc.readMem(0xda93));
        // CB 5C 0259
        gbc.setState(0xee6e, 0x4b5c, 0x83f0, 0x2bcb, 0xf71, 0x92e4, 0x0, 0x0);
        gbc.writeMem(0xee6e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4b5c, gbc.sp());
        EXPECT(0xee70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6e));
        EXPECT(0x5c, gbc.readMem(0xee6f));
        // CB 5C 025A
        gbc.setState(0x8a82, 0x3620, 0x48d0, 0x404f, 0xe590, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x8a82, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3620, gbc.sp());
        EXPECT(0x8a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a82));
        EXPECT(0x5c, gbc.readMem(0x8a83));
        // CB 5C 025B
        gbc.setState(0xc42b, 0x292c, 0x1290, 0xe188, 0x6657, 0xc261, 0x1, 0x0);
        gbc.writeMem(0xc42b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x292c, gbc.sp());
        EXPECT(0xc42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42b));
        EXPECT(0x5c, gbc.readMem(0xc42c));
        // CB 5C 025C
        gbc.setState(0xe881, 0xc30d, 0x6f70, 0x696e, 0xfb81, 0x6a02, 0x1, 0x1);
        gbc.writeMem(0xe881, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc30d, gbc.sp());
        EXPECT(0xe883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe881));
        EXPECT(0x5c, gbc.readMem(0xe882));
        // CB 5C 025D
        gbc.setState(0x1895, 0xc424, 0xbea0, 0x5c2d, 0x5e1d, 0x7ddf, 0x1, 0x0);
        gbc.writeMem(0x1895, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 025E
        gbc.setState(0xa076, 0x48fc, 0xc800, 0x3f53, 0xa3f1, 0x911c, 0x0, 0x1);
        gbc.writeMem(0xa076, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x48fc, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa076));
        EXPECT(0x5c, gbc.readMem(0xa077));
        // CB 5C 025F
        gbc.setState(0x677a, 0xcae7, 0xd3b0, 0x6ae8, 0xe838, 0xcfdc, 0x1, 0x1);
        gbc.writeMem(0x677a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcae7, gbc.sp());
        EXPECT(0x677c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0260
        gbc.setState(0xe2c0, 0xe727, 0x53e0, 0xc4a, 0xc075, 0x192c, 0x0, 0x1);
        gbc.writeMem(0xe2c0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe727, gbc.sp());
        EXPECT(0xe2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c0));
        EXPECT(0x5c, gbc.readMem(0xe2c1));
        // CB 5C 0261
        gbc.setState(0xe342, 0x97df, 0x71f0, 0x9e17, 0x60d9, 0x47b3, 0x1, 0x1);
        gbc.writeMem(0xe342, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x97df, gbc.sp());
        EXPECT(0xe344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe342));
        EXPECT(0x5c, gbc.readMem(0xe343));
        // CB 5C 0262
        gbc.setState(0x98c5, 0x2af1, 0x7690, 0x3309, 0xc92b, 0xaba5, 0x1, 0x1);
        gbc.writeMem(0x98c5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2af1, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c5));
        EXPECT(0x5c, gbc.readMem(0x98c6));
        // CB 5C 0264
        gbc.setState(0x9767, 0x5b5c, 0x720, 0x9ea1, 0xc84d, 0x2c04, 0x1, 0x1);
        gbc.writeMem(0x9767, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5b5c, gbc.sp());
        EXPECT(0x9769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9767));
        EXPECT(0x5c, gbc.readMem(0x9768));
        // CB 5C 0265
        gbc.setState(0x8f60, 0xeaf2, 0xba0, 0x6864, 0x6126, 0x6503, 0x1, 0x0);
        gbc.writeMem(0x8f60, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeaf2, gbc.sp());
        EXPECT(0x8f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f60));
        EXPECT(0x5c, gbc.readMem(0x8f61));
        // CB 5C 0266
        gbc.setState(0xd3a1, 0x628, 0x7de0, 0xda2c, 0x746, 0xbe52, 0x0, 0x1);
        gbc.writeMem(0xd3a1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x628, gbc.sp());
        EXPECT(0xd3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a1));
        EXPECT(0x5c, gbc.readMem(0xd3a2));
        // CB 5C 0267
        gbc.setState(0x833b, 0x6833, 0x7f60, 0x283d, 0xd116, 0x51b5, 0x0, 0x0);
        gbc.writeMem(0x833b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x833d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x833b));
        EXPECT(0x5c, gbc.readMem(0x833c));
        // CB 5C 0268
        gbc.setState(0xb1f6, 0xb3e0, 0x880, 0xdfb, 0x8a72, 0xcbd5, 0x0, 0x0);
        gbc.writeMem(0xb1f6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0xb1f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f6));
        EXPECT(0x5c, gbc.readMem(0xb1f7));
        // CB 5C 0269
        gbc.setState(0xdb0, 0x840f, 0x77c0, 0x1c6f, 0x7927, 0x8250, 0x1, 0x1);
        gbc.writeMem(0xdb0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0xdb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 026A
        gbc.setState(0x2321, 0xade, 0x94a0, 0xa708, 0x2ae, 0x6c90, 0x1, 0x0);
        gbc.writeMem(0x2321, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xade, gbc.sp());
        EXPECT(0x2323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 026C
        gbc.setState(0x745, 0x4d9d, 0xf6f0, 0xc9ec, 0x8867, 0x41e2, 0x1, 0x1);
        gbc.writeMem(0x745, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d9d, gbc.sp());
        EXPECT(0x747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 026D
        gbc.setState(0x7df9, 0xa291, 0x1430, 0xec53, 0x4ea4, 0xccd6, 0x1, 0x1);
        gbc.writeMem(0x7df9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa291, gbc.sp());
        EXPECT(0x7dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 026E
        gbc.setState(0xaee9, 0x4e7b, 0xde50, 0x4c31, 0x2ef3, 0x4d65, 0x0, 0x1);
        gbc.writeMem(0xaee9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0xaeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee9));
        EXPECT(0x5c, gbc.readMem(0xaeea));
        // CB 5C 026F
        gbc.setState(0xbd9f, 0x683c, 0xc6a0, 0xa732, 0xbbb5, 0x2bb, 0x0, 0x1);
        gbc.writeMem(0xbd9f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x683c, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0x5c, gbc.readMem(0xbda0));
        // CB 5C 0270
        gbc.setState(0x9090, 0x6089, 0x9e20, 0x1637, 0xfa62, 0x2f56, 0x1, 0x0);
        gbc.writeMem(0x9090, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6089, gbc.sp());
        EXPECT(0x9092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9090));
        EXPECT(0x5c, gbc.readMem(0x9091));
        // CB 5C 0271
        gbc.setState(0x8fc9, 0x673e, 0xb120, 0xe28e, 0x7e45, 0xa56d, 0x0, 0x0);
        gbc.writeMem(0x8fc9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x673e, gbc.sp());
        EXPECT(0x8fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc9));
        EXPECT(0x5c, gbc.readMem(0x8fca));
        // CB 5C 0272
        gbc.setState(0x4aa7, 0x3ad7, 0x38c0, 0x870f, 0x8380, 0xfa64, 0x1, 0x1);
        gbc.writeMem(0x4aa7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3ad7, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0273
        gbc.setState(0xda3c, 0x9b0c, 0xbf50, 0x993d, 0x1764, 0x3d77, 0x0, 0x1);
        gbc.writeMem(0xda3c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9b0c, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3c));
        EXPECT(0x5c, gbc.readMem(0xda3d));
        // CB 5C 0274
        gbc.setState(0xc2f5, 0x74f2, 0x6d80, 0x3a85, 0xc1a3, 0x555b, 0x1, 0x1);
        gbc.writeMem(0xc2f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x74f2, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0x5c, gbc.readMem(0xc2f6));
        // CB 5C 0275
        gbc.setState(0xc9cf, 0x9fbf, 0x95a0, 0xe6ab, 0x326f, 0xe1a9, 0x1, 0x0);
        gbc.writeMem(0xc9cf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9fbf, gbc.sp());
        EXPECT(0xc9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cf));
        EXPECT(0x5c, gbc.readMem(0xc9d0));
        // CB 5C 0276
        gbc.setState(0x4ab0, 0x16ac, 0xccd0, 0x8fdd, 0x550, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0x4ab0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x16ac, gbc.sp());
        EXPECT(0x4ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0277
        gbc.setState(0xb540, 0xae2b, 0x5900, 0xdd01, 0xeef2, 0x368a, 0x1, 0x0);
        gbc.writeMem(0xb540, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xae2b, gbc.sp());
        EXPECT(0xb542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb540));
        EXPECT(0x5c, gbc.readMem(0xb541));
        // CB 5C 0278
        gbc.setState(0x8206, 0x489, 0xf700, 0x1193, 0x8c2d, 0x91ca, 0x1, 0x0);
        gbc.writeMem(0x8206, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x489, gbc.sp());
        EXPECT(0x8208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8206));
        EXPECT(0x5c, gbc.readMem(0x8207));
        // CB 5C 0279
        gbc.setState(0x8aee, 0xaf92, 0xd5d0, 0x992a, 0x990c, 0x6ad6, 0x1, 0x0);
        gbc.writeMem(0x8aee, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xaf92, gbc.sp());
        EXPECT(0x8af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aee));
        EXPECT(0x5c, gbc.readMem(0x8aef));
        // CB 5C 027A
        gbc.setState(0xd974, 0x2ff4, 0x6a60, 0x171c, 0xe93, 0x4fb1, 0x1, 0x1);
        gbc.writeMem(0xd974, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2ff4, gbc.sp());
        EXPECT(0xd976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd974));
        EXPECT(0x5c, gbc.readMem(0xd975));
        // CB 5C 027B
        gbc.setState(0x656d, 0xa0e8, 0xff50, 0x94e, 0xf9b1, 0xb0f3, 0x0, 0x1);
        gbc.writeMem(0x656d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0x656f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 027C
        gbc.setState(0x99e2, 0xf6f9, 0x8050, 0x9632, 0x35c8, 0x3534, 0x1, 0x1);
        gbc.writeMem(0x99e2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf6f9, gbc.sp());
        EXPECT(0x99e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e2));
        EXPECT(0x5c, gbc.readMem(0x99e3));
        // CB 5C 027D
        gbc.setState(0x7ff7, 0x37c7, 0xede0, 0xd278, 0xd319, 0xa2cb, 0x1, 0x0);
        gbc.writeMem(0x7ff7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0x7ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 027E
        gbc.setState(0x8616, 0xd781, 0xa7d0, 0xb3c2, 0x4d9e, 0xa8ae, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0x8618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8616));
        EXPECT(0x5c, gbc.readMem(0x8617));
        // CB 5C 027F
        gbc.setState(0x4d1a, 0xd8ff, 0x4640, 0xa8ef, 0xa8fb, 0xb618, 0x0, 0x1);
        gbc.writeMem(0x4d1a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x4d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0280
        gbc.setState(0x47a5, 0x82c4, 0xa120, 0x44e1, 0xb3a1, 0xe335, 0x0, 0x0);
        gbc.writeMem(0x47a5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x47a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0281
        gbc.setState(0x2a23, 0x1693, 0x6a40, 0xa7ec, 0x84a8, 0x6110, 0x1, 0x1);
        gbc.writeMem(0x2a23, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0x2a25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0282
        gbc.setState(0xa1f5, 0x480c, 0x24d0, 0x81d2, 0x803c, 0x8025, 0x1, 0x1);
        gbc.writeMem(0xa1f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0x5c, gbc.readMem(0xa1f6));
        // CB 5C 0283
        gbc.setState(0xa27b, 0xdfec, 0xb0a0, 0x45c9, 0xbd0a, 0x3d3d, 0x1, 0x0);
        gbc.writeMem(0xa27b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdfec, gbc.sp());
        EXPECT(0xa27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27b));
        EXPECT(0x5c, gbc.readMem(0xa27c));
        // CB 5C 0284
        gbc.setState(0xe8d4, 0xde20, 0x36b0, 0x33b4, 0x5a69, 0x45e7, 0x1, 0x0);
        gbc.writeMem(0xe8d4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xde20, gbc.sp());
        EXPECT(0xe8d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d4));
        EXPECT(0x5c, gbc.readMem(0xe8d5));
        // CB 5C 0285
        gbc.setState(0x1c88, 0xc56d, 0x4d50, 0x6654, 0x5af9, 0xff50, 0x0, 0x0);
        gbc.writeMem(0x1c88, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc56d, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0286
        gbc.setState(0xaa1c, 0x9afa, 0x4ec0, 0x45ca, 0xdacd, 0x188a, 0x1, 0x0);
        gbc.writeMem(0xaa1c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9afa, gbc.sp());
        EXPECT(0xaa1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1c));
        EXPECT(0x5c, gbc.readMem(0xaa1d));
        // CB 5C 0287
        gbc.setState(0x12d2, 0x6c2, 0x5060, 0x7879, 0x75a0, 0xcfca, 0x0, 0x0);
        gbc.writeMem(0x12d2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6c2, gbc.sp());
        EXPECT(0x12d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0288
        gbc.setState(0x24b2, 0xcb53, 0xa760, 0xd37e, 0x6050, 0x52d8, 0x1, 0x0);
        gbc.writeMem(0x24b2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcb53, gbc.sp());
        EXPECT(0x24b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0289
        gbc.setState(0x28b8, 0x1f3a, 0x3dc0, 0x9510, 0x2984, 0x2672, 0x0, 0x1);
        gbc.writeMem(0x28b8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1f3a, gbc.sp());
        EXPECT(0x28ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 028A
        gbc.setState(0x157b, 0x49ab, 0x7c0, 0xc122, 0xd550, 0xde7e, 0x1, 0x0);
        gbc.writeMem(0x157b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x49ab, gbc.sp());
        EXPECT(0x157d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 028B
        gbc.setState(0x3fdd, 0xf65, 0xea60, 0x294a, 0xcaa6, 0xa6c5, 0x1, 0x0);
        gbc.writeMem(0x3fdd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x3fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 028C
        gbc.setState(0xc71c, 0x87a5, 0xf220, 0x7228, 0xe0f7, 0x9992, 0x0, 0x1);
        gbc.writeMem(0xc71c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x87a5, gbc.sp());
        EXPECT(0xc71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71c));
        EXPECT(0x5c, gbc.readMem(0xc71d));
        // CB 5C 028D
        gbc.setState(0x6f5c, 0x6a05, 0x70e0, 0x712b, 0x519a, 0x1ef9, 0x0, 0x1);
        gbc.writeMem(0x6f5c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6a05, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 028E
        gbc.setState(0x6f2d, 0xa676, 0x75d0, 0x4c08, 0x5381, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0x6f2d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa676, gbc.sp());
        EXPECT(0x6f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 028F
        gbc.setState(0xcfa5, 0x2a53, 0xb2c0, 0x55ea, 0xd39e, 0x39c9, 0x1, 0x0);
        gbc.writeMem(0xcfa5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2a53, gbc.sp());
        EXPECT(0xcfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa5));
        EXPECT(0x5c, gbc.readMem(0xcfa6));
        // CB 5C 0290
        gbc.setState(0x9d3b, 0xeee1, 0x950, 0xeda6, 0xb592, 0xb272, 0x0, 0x0);
        gbc.writeMem(0x9d3b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xeee1, gbc.sp());
        EXPECT(0x9d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3b));
        EXPECT(0x5c, gbc.readMem(0x9d3c));
        // CB 5C 0291
        gbc.setState(0x231a, 0x7e9, 0x4920, 0xa76c, 0xb1ae, 0xab09, 0x1, 0x0);
        gbc.writeMem(0x231a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x231c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0292
        gbc.setState(0xc91f, 0xa8df, 0x2fa0, 0xdfd8, 0x7a9e, 0xc7e, 0x1, 0x0);
        gbc.writeMem(0xc91f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa8df, gbc.sp());
        EXPECT(0xc921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91f));
        EXPECT(0x5c, gbc.readMem(0xc920));
        // CB 5C 0293
        gbc.setState(0xa185, 0xd1e5, 0xf220, 0x6507, 0x6898, 0xfd5a, 0x1, 0x0);
        gbc.writeMem(0xa185, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd1e5, gbc.sp());
        EXPECT(0xa187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa185));
        EXPECT(0x5c, gbc.readMem(0xa186));
        // CB 5C 0294
        gbc.setState(0x6f5e, 0x9ed1, 0x750, 0xd63f, 0x904d, 0xbc20, 0x1, 0x0);
        gbc.writeMem(0x6f5e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0295
        gbc.setState(0x3afa, 0x70a0, 0x9440, 0x858f, 0x9879, 0x159c, 0x0, 0x0);
        gbc.writeMem(0x3afa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0x3afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0296
        gbc.setState(0x82ef, 0x1272, 0x8dc0, 0x10dc, 0x92f, 0x95ab, 0x0, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1272, gbc.sp());
        EXPECT(0x82f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ef));
        EXPECT(0x5c, gbc.readMem(0x82f0));
        // CB 5C 0297
        gbc.setState(0x3292, 0x3d57, 0x1880, 0xc41f, 0x4bf9, 0x6868, 0x1, 0x1);
        gbc.writeMem(0x3292, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3d57, gbc.sp());
        EXPECT(0x3294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0298
        gbc.setState(0xb99, 0x6109, 0xc870, 0xd5db, 0xd462, 0x6e25, 0x1, 0x1);
        gbc.writeMem(0xb99, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6109, gbc.sp());
        EXPECT(0xb9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0299
        gbc.setState(0x935b, 0x6ec7, 0x5fb0, 0xfb80, 0xe605, 0x2f32, 0x1, 0x1);
        gbc.writeMem(0x935b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6ec7, gbc.sp());
        EXPECT(0x935d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935b));
        EXPECT(0x5c, gbc.readMem(0x935c));
        // CB 5C 029A
        gbc.setState(0x47b1, 0xce89, 0x350, 0x2ddc, 0xda63, 0x6ed1, 0x0, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xce89, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 029B
        gbc.setState(0x252a, 0xc987, 0x6ec0, 0xfa8, 0xf77e, 0xafc3, 0x1, 0x1);
        gbc.writeMem(0x252a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc987, gbc.sp());
        EXPECT(0x252c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 029C
        gbc.setState(0x2524, 0xc81c, 0x17a0, 0xa35b, 0x5aa2, 0xb85a, 0x1, 0x0);
        gbc.writeMem(0x2524, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc81c, gbc.sp());
        EXPECT(0x2526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 029D
        gbc.setState(0xc378, 0x7c63, 0x8fb0, 0x7f94, 0x6edf, 0x78b6, 0x0, 0x1);
        gbc.writeMem(0xc378, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7c63, gbc.sp());
        EXPECT(0xc37a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc378));
        EXPECT(0x5c, gbc.readMem(0xc379));
        // CB 5C 029E
        gbc.setState(0x9c4c, 0xdce8, 0x58d0, 0xbdb7, 0x5dbc, 0x59eb, 0x1, 0x0);
        gbc.writeMem(0x9c4c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdce8, gbc.sp());
        EXPECT(0x9c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4c));
        EXPECT(0x5c, gbc.readMem(0x9c4d));
        // CB 5C 029F
        gbc.setState(0x27a4, 0x72ac, 0x5cf0, 0x8e36, 0x7999, 0xae19, 0x0, 0x1);
        gbc.writeMem(0x27a4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x72ac, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02A0
        gbc.setState(0x145a, 0x5a00, 0x7e50, 0xcc7b, 0xcf3a, 0x576c, 0x1, 0x0);
        gbc.writeMem(0x145a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5a00, gbc.sp());
        EXPECT(0x145c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02A1
        gbc.setState(0x6924, 0xa032, 0xe250, 0x357c, 0x5fef, 0x19e3, 0x1, 0x1);
        gbc.writeMem(0x6924, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa032, gbc.sp());
        EXPECT(0x6926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02A2
        gbc.setState(0x94f4, 0xdae5, 0x4c10, 0x879a, 0xe079, 0x6638, 0x0, 0x0);
        gbc.writeMem(0x94f4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdae5, gbc.sp());
        EXPECT(0x94f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f4));
        EXPECT(0x5c, gbc.readMem(0x94f5));
        // CB 5C 02A3
        gbc.setState(0xe555, 0xd2c5, 0xc80, 0x66b8, 0xd11f, 0x350f, 0x1, 0x0);
        gbc.writeMem(0xe555, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd2c5, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe555));
        EXPECT(0x5c, gbc.readMem(0xe556));
        // CB 5C 02A5
        gbc.setState(0xb4a2, 0xa55c, 0xe720, 0x3f0, 0x121d, 0x5d0d, 0x1, 0x0);
        gbc.writeMem(0xb4a2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa55c, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a2));
        EXPECT(0x5c, gbc.readMem(0xb4a3));
        // CB 5C 02A6
        gbc.setState(0x8f70, 0xa0ff, 0xc830, 0xac08, 0x40f1, 0x81e4, 0x0, 0x0);
        gbc.writeMem(0x8f70, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa0ff, gbc.sp());
        EXPECT(0x8f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f70));
        EXPECT(0x5c, gbc.readMem(0x8f71));
        // CB 5C 02A7
        gbc.setState(0xca25, 0xf6a3, 0x1700, 0xcfc, 0x1ea1, 0x7f7b, 0x1, 0x1);
        gbc.writeMem(0xca25, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf6a3, gbc.sp());
        EXPECT(0xca27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca25));
        EXPECT(0x5c, gbc.readMem(0xca26));
        // CB 5C 02A8
        gbc.setState(0x47d3, 0xfa30, 0x22c0, 0xcf88, 0x831a, 0x4c38, 0x0, 0x1);
        gbc.writeMem(0x47d3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfa30, gbc.sp());
        EXPECT(0x47d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02A9
        gbc.setState(0xb6cb, 0x46ee, 0xcb10, 0x735e, 0x40eb, 0x95bb, 0x1, 0x0);
        gbc.writeMem(0xb6cb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x46ee, gbc.sp());
        EXPECT(0xb6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6cb));
        EXPECT(0x5c, gbc.readMem(0xb6cc));
        // CB 5C 02AA
        gbc.setState(0x4025, 0x94bd, 0xc0a0, 0xcb56, 0x25b5, 0xa8e6, 0x0, 0x1);
        gbc.writeMem(0x4025, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x94bd, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02AB
        gbc.setState(0x82f, 0x783a, 0x3fc0, 0xbcf6, 0xf314, 0xbeae, 0x1, 0x0);
        gbc.writeMem(0x82f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0x831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02AC
        gbc.setState(0xee51, 0xd549, 0x3080, 0x39bb, 0xec36, 0x6257, 0x0, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd549, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0x5c, gbc.readMem(0xee52));
        // CB 5C 02AD
        gbc.setState(0xcb9d, 0xe29e, 0xe290, 0x56d9, 0xabe1, 0x45c1, 0x0, 0x0);
        gbc.writeMem(0xcb9d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe29e, gbc.sp());
        EXPECT(0xcb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9d));
        EXPECT(0x5c, gbc.readMem(0xcb9e));
        // CB 5C 02AE
        gbc.setState(0x3a5e, 0x906b, 0xa2b0, 0x55d1, 0xa949, 0x9050, 0x0, 0x0);
        gbc.writeMem(0x3a5e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x906b, gbc.sp());
        EXPECT(0x3a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02AF
        gbc.setState(0xc54, 0x967c, 0x1b70, 0xbab2, 0xcfd1, 0x814d, 0x1, 0x1);
        gbc.writeMem(0xc54, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02B0
        gbc.setState(0xdc45, 0x898, 0xa520, 0xb6b9, 0x8a6, 0xaaa9, 0x0, 0x1);
        gbc.writeMem(0xdc45, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x898, gbc.sp());
        EXPECT(0xdc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc45));
        EXPECT(0x5c, gbc.readMem(0xdc46));
        // CB 5C 02B2
        gbc.setState(0xc367, 0x26e7, 0xb140, 0xa4e, 0x861, 0xf1a9, 0x0, 0x0);
        gbc.writeMem(0xc367, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x26e7, gbc.sp());
        EXPECT(0xc369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc367));
        EXPECT(0x5c, gbc.readMem(0xc368));
        // CB 5C 02B3
        gbc.setState(0xa7bf, 0x16b6, 0x3720, 0x7ea5, 0x32df, 0x4578, 0x1, 0x1);
        gbc.writeMem(0xa7bf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x16b6, gbc.sp());
        EXPECT(0xa7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7bf));
        EXPECT(0x5c, gbc.readMem(0xa7c0));
        // CB 5C 02B4
        gbc.setState(0xe047, 0x91e9, 0x2e30, 0xe0cf, 0xc95e, 0xa3a6, 0x1, 0x0);
        gbc.writeMem(0xe047, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x91e9, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe047));
        EXPECT(0x5c, gbc.readMem(0xe048));
        // CB 5C 02B5
        gbc.setState(0xeb1e, 0x664f, 0x4740, 0xb563, 0x716c, 0x8732, 0x1, 0x0);
        gbc.writeMem(0xeb1e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x664f, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb1e));
        EXPECT(0x5c, gbc.readMem(0xeb1f));
        // CB 5C 02B6
        gbc.setState(0xd228, 0x9276, 0xb2f0, 0x39cd, 0xb17e, 0x5d38, 0x1, 0x0);
        gbc.writeMem(0xd228, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0xd22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd228));
        EXPECT(0x5c, gbc.readMem(0xd229));
        // CB 5C 02B7
        gbc.setState(0xe40e, 0x91dd, 0x1d90, 0x1069, 0x83ff, 0x20cd, 0x0, 0x0);
        gbc.writeMem(0xe40e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x91dd, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe40e));
        EXPECT(0x5c, gbc.readMem(0xe40f));
        // CB 5C 02B8
        gbc.setState(0x80e1, 0xbae9, 0x96f0, 0x61ff, 0x62a0, 0xebd5, 0x0, 0x0);
        gbc.writeMem(0x80e1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xbae9, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e1));
        EXPECT(0x5c, gbc.readMem(0x80e2));
        // CB 5C 02B9
        gbc.setState(0x39ac, 0x9fbe, 0x1ed0, 0x433b, 0xf4f1, 0xf563, 0x1, 0x1);
        gbc.writeMem(0x39ac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0x39ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02BB
        gbc.setState(0xb4c3, 0xe540, 0x5f00, 0x2cf, 0xc5ee, 0xb925, 0x1, 0x0);
        gbc.writeMem(0xb4c3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe540, gbc.sp());
        EXPECT(0xb4c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c3));
        EXPECT(0x5c, gbc.readMem(0xb4c4));
        // CB 5C 02BC
        gbc.setState(0x790f, 0x9c24, 0x3f0, 0x210a, 0x1ee, 0xe4b9, 0x0, 0x0);
        gbc.writeMem(0x790f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0x7911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02BD
        gbc.setState(0xec7e, 0xd97c, 0x3d10, 0x3aec, 0x3c27, 0x2307, 0x0, 0x0);
        gbc.writeMem(0xec7e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd97c, gbc.sp());
        EXPECT(0xec80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7e));
        EXPECT(0x5c, gbc.readMem(0xec7f));
        // CB 5C 02BE
        gbc.setState(0xbbd5, 0xda02, 0xf300, 0x3002, 0xe1bc, 0x393d, 0x0, 0x0);
        gbc.writeMem(0xbbd5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xda02, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0x5c, gbc.readMem(0xbbd6));
        // CB 5C 02BF
        gbc.setState(0x7aba, 0xd784, 0xe760, 0xf1ce, 0x5fa5, 0x8eff, 0x0, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd784, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02C1
        gbc.setState(0xe949, 0x2d9c, 0xe010, 0x1296, 0x44a5, 0xa40d, 0x1, 0x1);
        gbc.writeMem(0xe949, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2d9c, gbc.sp());
        EXPECT(0xe94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe949));
        EXPECT(0x5c, gbc.readMem(0xe94a));
        // CB 5C 02C2
        gbc.setState(0x29be, 0x9e82, 0xb380, 0xe249, 0xb212, 0xa586, 0x0, 0x1);
        gbc.writeMem(0x29be, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9e82, gbc.sp());
        EXPECT(0x29c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02C3
        gbc.setState(0x152b, 0x96fc, 0x7b50, 0xd6d9, 0x6048, 0x7b22, 0x1, 0x1);
        gbc.writeMem(0x152b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x96fc, gbc.sp());
        EXPECT(0x152d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02C4
        gbc.setState(0xce63, 0x1d88, 0x35c0, 0x670c, 0x29bd, 0x7b8a, 0x0, 0x0);
        gbc.writeMem(0xce63, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1d88, gbc.sp());
        EXPECT(0xce65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce63));
        EXPECT(0x5c, gbc.readMem(0xce64));
        // CB 5C 02C5
        gbc.setState(0x237f, 0x2899, 0xda50, 0x162f, 0x15a7, 0x8c48, 0x0, 0x0);
        gbc.writeMem(0x237f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2899, gbc.sp());
        EXPECT(0x2381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02C6
        gbc.setState(0x1804, 0x56f9, 0xe090, 0x9dab, 0xfbd, 0xcfbb, 0x0, 0x0);
        gbc.writeMem(0x1804, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0x1806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02C8
        gbc.setState(0xebde, 0x3b79, 0xad50, 0xbaac, 0x504b, 0xa02a, 0x1, 0x0);
        gbc.writeMem(0xebde, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3b79, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0x5c, gbc.readMem(0xebdf));
        // CB 5C 02C9
        gbc.setState(0x79c8, 0x772c, 0x1470, 0xa26c, 0xe79c, 0xad69, 0x1, 0x0);
        gbc.writeMem(0x79c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x772c, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02CA
        gbc.setState(0x5482, 0x4717, 0x58d0, 0x8b50, 0x20de, 0xfa15, 0x1, 0x1);
        gbc.writeMem(0x5482, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4717, gbc.sp());
        EXPECT(0x5484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02CB
        gbc.setState(0xb239, 0x9e5d, 0x8fb0, 0xbf9c, 0x45ec, 0x9d09, 0x1, 0x1);
        gbc.writeMem(0xb239, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9e5d, gbc.sp());
        EXPECT(0xb23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb239));
        EXPECT(0x5c, gbc.readMem(0xb23a));
        // CB 5C 02CC
        gbc.setState(0x4a52, 0xd939, 0xce70, 0x76b5, 0xe9f6, 0x898b, 0x1, 0x0);
        gbc.writeMem(0x4a52, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd939, gbc.sp());
        EXPECT(0x4a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02CD
        gbc.setState(0xdd94, 0x9ce1, 0x8710, 0xf12f, 0x4295, 0xb14b, 0x0, 0x0);
        gbc.writeMem(0xdd94, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9ce1, gbc.sp());
        EXPECT(0xdd96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd94));
        EXPECT(0x5c, gbc.readMem(0xdd95));
        // CB 5C 02CE
        gbc.setState(0xa9b1, 0x7a77, 0xd670, 0x1469, 0xb2cc, 0x6d36, 0x1, 0x0);
        gbc.writeMem(0xa9b1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7a77, gbc.sp());
        EXPECT(0xa9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b1));
        EXPECT(0x5c, gbc.readMem(0xa9b2));
        // CB 5C 02CF
        gbc.setState(0x8428, 0xdb1c, 0xbe50, 0x67fa, 0xf9c1, 0x1b1b, 0x0, 0x0);
        gbc.writeMem(0x8428, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdb1c, gbc.sp());
        EXPECT(0x842a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8428));
        EXPECT(0x5c, gbc.readMem(0x8429));
        // CB 5C 02D0
        gbc.setState(0xbc8f, 0x90bb, 0x5220, 0x86ee, 0x3c72, 0xada6, 0x0, 0x1);
        gbc.writeMem(0xbc8f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x90bb, gbc.sp());
        EXPECT(0xbc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8f));
        EXPECT(0x5c, gbc.readMem(0xbc90));
        // CB 5C 02D2
        gbc.setState(0x33c8, 0xdcb1, 0xd2d0, 0xd4cd, 0x3437, 0x4de4, 0x1, 0x0);
        gbc.writeMem(0x33c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0x33ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02D3
        gbc.setState(0x7cd6, 0x4cb5, 0x81c0, 0xb24a, 0x7de4, 0x5d73, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4cb5, gbc.sp());
        EXPECT(0x7cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02D4
        gbc.setState(0x972, 0xfaf1, 0x94b0, 0x5833, 0x9b84, 0x1680, 0x0, 0x0);
        gbc.writeMem(0x972, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfaf1, gbc.sp());
        EXPECT(0x974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02D5
        gbc.setState(0x6f82, 0x28f3, 0x7c50, 0xdecf, 0xb56a, 0x23c5, 0x1, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x28f3, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02D6
        gbc.setState(0xa8e4, 0x3c2e, 0x32a0, 0xfe19, 0x371a, 0x3a22, 0x0, 0x0);
        gbc.writeMem(0xa8e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3c2e, gbc.sp());
        EXPECT(0xa8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e4));
        EXPECT(0x5c, gbc.readMem(0xa8e5));
        // CB 5C 02D7
        gbc.setState(0x3393, 0x68b7, 0x1200, 0x3706, 0xc0c, 0xb984, 0x1, 0x1);
        gbc.writeMem(0x3393, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x68b7, gbc.sp());
        EXPECT(0x3395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02D8
        gbc.setState(0xe68f, 0x77f6, 0xfe90, 0x3462, 0xd40c, 0x8975, 0x1, 0x1);
        gbc.writeMem(0xe68f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xe691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe68f));
        EXPECT(0x5c, gbc.readMem(0xe690));
        // CB 5C 02D9
        gbc.setState(0x5cee, 0xac94, 0x1420, 0xf839, 0x935, 0xc2ff, 0x1, 0x1);
        gbc.writeMem(0x5cee, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xac94, gbc.sp());
        EXPECT(0x5cf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02DA
        gbc.setState(0xc491, 0xc9d6, 0x5760, 0x5d92, 0x3494, 0x8670, 0x0, 0x0);
        gbc.writeMem(0xc491, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc9d6, gbc.sp());
        EXPECT(0xc493, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc491));
        EXPECT(0x5c, gbc.readMem(0xc492));
        // CB 5C 02DB
        gbc.setState(0x2234, 0x9654, 0x50, 0xaeed, 0x31e8, 0xc450, 0x1, 0x0);
        gbc.writeMem(0x2234, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9654, gbc.sp());
        EXPECT(0x2236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02DC
        gbc.setState(0x1242, 0xdfcf, 0xfc90, 0x5bdf, 0x79f2, 0xaf5c, 0x0, 0x1);
        gbc.writeMem(0x1242, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdfcf, gbc.sp());
        EXPECT(0x1244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02DD
        gbc.setState(0xe396, 0xe47b, 0x5090, 0x1245, 0x310b, 0x5a89, 0x1, 0x0);
        gbc.writeMem(0xe396, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe47b, gbc.sp());
        EXPECT(0xe398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe396));
        EXPECT(0x5c, gbc.readMem(0xe397));
        // CB 5C 02DE
        gbc.setState(0x1cfc, 0x1b63, 0x2620, 0x28e2, 0x3191, 0x37da, 0x1, 0x1);
        gbc.writeMem(0x1cfc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1b63, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02DF
        gbc.setState(0x2941, 0x68e9, 0x92b0, 0x6ec3, 0x7751, 0x540f, 0x1, 0x1);
        gbc.writeMem(0x2941, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x68e9, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E0
        gbc.setState(0x5d8, 0x457, 0x1170, 0x1e01, 0xb2f2, 0xa987, 0x0, 0x1);
        gbc.writeMem(0x5d8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x457, gbc.sp());
        EXPECT(0x5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E1
        gbc.setState(0xac7f, 0x4b38, 0x4780, 0xc0b2, 0x6842, 0x337c, 0x0, 0x1);
        gbc.writeMem(0xac7f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4b38, gbc.sp());
        EXPECT(0xac81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7f));
        EXPECT(0x5c, gbc.readMem(0xac80));
        // CB 5C 02E2
        gbc.setState(0x4758, 0xafbb, 0x3ab0, 0xd632, 0xa240, 0xa677, 0x0, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xafbb, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E3
        gbc.setState(0xa82e, 0x566d, 0x9cf0, 0xf115, 0xd418, 0xe3d0, 0x0, 0x1);
        gbc.writeMem(0xa82e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x566d, gbc.sp());
        EXPECT(0xa830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82e));
        EXPECT(0x5c, gbc.readMem(0xa82f));
        // CB 5C 02E4
        gbc.setState(0x46dd, 0x4288, 0xb0, 0x1177, 0xc46f, 0x7f50, 0x1, 0x0);
        gbc.writeMem(0x46dd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0x46df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E5
        gbc.setState(0xba0, 0xfbf8, 0xbff0, 0xd393, 0x1337, 0x5532, 0x1, 0x1);
        gbc.writeMem(0xba0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfbf8, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E6
        gbc.setState(0x501d, 0x9bd0, 0xd570, 0x97ec, 0x46a4, 0x92a0, 0x1, 0x0);
        gbc.writeMem(0x501d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9bd0, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02E7
        gbc.setState(0xd776, 0xa2b6, 0x9030, 0x52b7, 0xaba4, 0x2e7c, 0x1, 0x0);
        gbc.writeMem(0xd776, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0xd778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd776));
        EXPECT(0x5c, gbc.readMem(0xd777));
        // CB 5C 02E8
        gbc.setState(0x7f97, 0x284, 0xaa00, 0x749e, 0xbbb, 0xe293, 0x1, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x284, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02E9
        gbc.setState(0x7564, 0x295c, 0xcfd0, 0xec84, 0x6025, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x7564, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x295c, gbc.sp());
        EXPECT(0x7566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02EA
        gbc.setState(0x798c, 0xb464, 0x3ce0, 0x4b9c, 0xb180, 0x7200, 0x0, 0x1);
        gbc.writeMem(0x798c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb464, gbc.sp());
        EXPECT(0x798e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02EB
        gbc.setState(0xa27, 0xdde2, 0x4990, 0x1a96, 0x970f, 0xfe12, 0x0, 0x1);
        gbc.writeMem(0xa27, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdde2, gbc.sp());
        EXPECT(0xa29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02EC
        gbc.setState(0x28b5, 0x2118, 0xd7a0, 0xfce7, 0x62ab, 0x5852, 0x0, 0x0);
        gbc.writeMem(0x28b5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2118, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02ED
        gbc.setState(0x77ba, 0xc336, 0x3f0, 0xde89, 0xd81e, 0x22cf, 0x0, 0x1);
        gbc.writeMem(0x77ba, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc336, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02EE
        gbc.setState(0x8f1b, 0x7e14, 0xe9b0, 0x34b0, 0xb532, 0xc992, 0x0, 0x0);
        gbc.writeMem(0x8f1b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7e14, gbc.sp());
        EXPECT(0x8f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f1b));
        EXPECT(0x5c, gbc.readMem(0x8f1c));
        // CB 5C 02EF
        gbc.setState(0xdbaa, 0x60b5, 0x3b0, 0x8dea, 0xeceb, 0xe44e, 0x0, 0x0);
        gbc.writeMem(0xdbaa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x60b5, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0x5c, gbc.readMem(0xdbab));
        // CB 5C 02F0
        gbc.setState(0xb7ad, 0x6e11, 0xefa0, 0xcbf2, 0x4879, 0x346a, 0x0, 0x0);
        gbc.writeMem(0xb7ad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6e11, gbc.sp());
        EXPECT(0xb7af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ad));
        EXPECT(0x5c, gbc.readMem(0xb7ae));
        // CB 5C 02F1
        gbc.setState(0x8d8a, 0xdf65, 0xb5b0, 0xab94, 0x8eb, 0x785, 0x1, 0x1);
        gbc.writeMem(0x8d8a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdf65, gbc.sp());
        EXPECT(0x8d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8a));
        EXPECT(0x5c, gbc.readMem(0x8d8b));
        // CB 5C 02F2
        gbc.setState(0x271e, 0xde11, 0xff90, 0x9e7e, 0x8614, 0x2f56, 0x1, 0x0);
        gbc.writeMem(0x271e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xde11, gbc.sp());
        EXPECT(0x2720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02F3
        gbc.setState(0x56fd, 0x3df2, 0x5840, 0xfbad, 0x407e, 0xbd1, 0x1, 0x0);
        gbc.writeMem(0x56fd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3df2, gbc.sp());
        EXPECT(0x56ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02F4
        gbc.setState(0x169c, 0xcc41, 0x5410, 0x648e, 0xf796, 0x1479, 0x1, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcc41, gbc.sp());
        EXPECT(0x169e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02F5
        gbc.setState(0xd09f, 0xe4bd, 0xfd00, 0xbf65, 0xa26b, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0xd09f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe4bd, gbc.sp());
        EXPECT(0xd0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd09f));
        EXPECT(0x5c, gbc.readMem(0xd0a0));
        // CB 5C 02F6
        gbc.setState(0x1e8e, 0xeb23, 0x4a60, 0x81af, 0x28e0, 0x5368, 0x1, 0x1);
        gbc.writeMem(0x1e8e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xeb23, gbc.sp());
        EXPECT(0x1e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02F7
        gbc.setState(0xc962, 0x93e9, 0x7330, 0x7f3d, 0xfca1, 0xbb65, 0x1, 0x1);
        gbc.writeMem(0xc962, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x93e9, gbc.sp());
        EXPECT(0xc964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc962));
        EXPECT(0x5c, gbc.readMem(0xc963));
        // CB 5C 02F8
        gbc.setState(0xccf, 0x5aaa, 0xa420, 0x4571, 0xa3d2, 0xbde2, 0x1, 0x1);
        gbc.writeMem(0xccf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5aaa, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02F9
        gbc.setState(0xa50c, 0x9893, 0x8d70, 0xdec1, 0x757b, 0xecce, 0x0, 0x0);
        gbc.writeMem(0xa50c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9893, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50c));
        EXPECT(0x5c, gbc.readMem(0xa50d));
        // CB 5C 02FA
        gbc.setState(0xd297, 0x1833, 0xafd0, 0x14c6, 0x4311, 0x32a1, 0x1, 0x0);
        gbc.writeMem(0xd297, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0x5c, gbc.readMem(0xd298));
        // CB 5C 02FB
        gbc.setState(0x69a0, 0x4383, 0x84b0, 0x606e, 0xcf91, 0x2b64, 0x0, 0x0);
        gbc.writeMem(0x69a0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4383, gbc.sp());
        EXPECT(0x69a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 02FC
        gbc.setState(0x1bad, 0x8b89, 0x4e00, 0xcd93, 0xe4be, 0xba16, 0x1, 0x0);
        gbc.writeMem(0x1bad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8b89, gbc.sp());
        EXPECT(0x1baf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02FD
        gbc.setState(0x300, 0xea8a, 0x8240, 0x7bd3, 0x5cec, 0x890, 0x1, 0x1);
        gbc.writeMem(0x300, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xea8a, gbc.sp());
        EXPECT(0x302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02FE
        gbc.setState(0x47d0, 0x2ea5, 0x3ae0, 0xe21f, 0x495, 0x3048, 0x1, 0x1);
        gbc.writeMem(0x47d0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2ea5, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 02FF
        gbc.setState(0x118d, 0xd698, 0xc9e0, 0x9d7e, 0xbe77, 0xd5d1, 0x0, 0x1);
        gbc.writeMem(0x118d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x118f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0300
        gbc.setState(0x362b, 0xa226, 0x2f80, 0x2eb0, 0xd4c6, 0x43d7, 0x0, 0x1);
        gbc.writeMem(0x362b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa226, gbc.sp());
        EXPECT(0x362d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0301
        gbc.setState(0x9006, 0x6513, 0x61d0, 0xa8c1, 0x20d, 0x7c59, 0x1, 0x1);
        gbc.writeMem(0x9006, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6513, gbc.sp());
        EXPECT(0x9008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9006));
        EXPECT(0x5c, gbc.readMem(0x9007));
        // CB 5C 0302
        gbc.setState(0xab68, 0xf528, 0xcee0, 0x2acf, 0x5f20, 0x826b, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf528, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab68));
        EXPECT(0x5c, gbc.readMem(0xab69));
        // CB 5C 0303
        gbc.setState(0x2c72, 0x208f, 0xa860, 0x7c83, 0xc2f0, 0x968, 0x0, 0x1);
        gbc.writeMem(0x2c72, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x208f, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0304
        gbc.setState(0x6a1d, 0x1396, 0xfe50, 0x1264, 0x76ee, 0x9634, 0x1, 0x1);
        gbc.writeMem(0x6a1d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x6a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0305
        gbc.setState(0xdda5, 0x6e38, 0x8f70, 0xccc3, 0xaf44, 0x61a9, 0x0, 0x1);
        gbc.writeMem(0xdda5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6e38, gbc.sp());
        EXPECT(0xdda7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda5));
        EXPECT(0x5c, gbc.readMem(0xdda6));
        // CB 5C 0306
        gbc.setState(0x860e, 0x84af, 0xad0, 0xf048, 0x2d19, 0x3cd5, 0x1, 0x0);
        gbc.writeMem(0x860e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x84af, gbc.sp());
        EXPECT(0x8610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x860e));
        EXPECT(0x5c, gbc.readMem(0x860f));
        // CB 5C 0307
        gbc.setState(0x303e, 0x7465, 0xf110, 0x28bc, 0x1438, 0x4f5, 0x0, 0x0);
        gbc.writeMem(0x303e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7465, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0308
        gbc.setState(0xa50c, 0xed4a, 0x4c80, 0x379e, 0x33c2, 0x5768, 0x1, 0x1);
        gbc.writeMem(0xa50c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xed4a, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50c));
        EXPECT(0x5c, gbc.readMem(0xa50d));
        // CB 5C 0309
        gbc.setState(0x4d66, 0x9b6d, 0xe4d0, 0xe0d2, 0x444b, 0x1e24, 0x0, 0x0);
        gbc.writeMem(0x4d66, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9b6d, gbc.sp());
        EXPECT(0x4d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 030A
        gbc.setState(0x8589, 0xa18e, 0xb1c0, 0x7042, 0x1197, 0x4c7a, 0x1, 0x0);
        gbc.writeMem(0x8589, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0x858b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8589));
        EXPECT(0x5c, gbc.readMem(0x858a));
        // CB 5C 030B
        gbc.setState(0x13bc, 0x80dd, 0xddc0, 0xde0a, 0x33a5, 0xac2, 0x0, 0x0);
        gbc.writeMem(0x13bc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 030C
        gbc.setState(0xb030, 0x71be, 0x3ca0, 0x704f, 0x275, 0x209e, 0x0, 0x1);
        gbc.writeMem(0xb030, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x71be, gbc.sp());
        EXPECT(0xb032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb030));
        EXPECT(0x5c, gbc.readMem(0xb031));
        // CB 5C 030D
        gbc.setState(0xca57, 0x6773, 0x1d00, 0xf215, 0x870e, 0xc871, 0x0, 0x0);
        gbc.writeMem(0xca57, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6773, gbc.sp());
        EXPECT(0xca59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca57));
        EXPECT(0x5c, gbc.readMem(0xca58));
        // CB 5C 030E
        gbc.setState(0xe706, 0xcccb, 0x7e90, 0x53ab, 0x638, 0xe8d5, 0x0, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcccb, gbc.sp());
        EXPECT(0xe708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe706));
        EXPECT(0x5c, gbc.readMem(0xe707));
        // CB 5C 030F
        gbc.setState(0x7cd3, 0xfd25, 0x6150, 0xd2b0, 0x4f13, 0x8b2f, 0x0, 0x1);
        gbc.writeMem(0x7cd3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfd25, gbc.sp());
        EXPECT(0x7cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0310
        gbc.setState(0xd350, 0x89d2, 0x1b30, 0x2869, 0x7cdc, 0xd326, 0x0, 0x0);
        gbc.writeMem(0xd350, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x89d2, gbc.sp());
        EXPECT(0xd352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd350));
        EXPECT(0x5c, gbc.readMem(0xd351));
        // CB 5C 0311
        gbc.setState(0xa3d9, 0xc0e9, 0x9b70, 0xd79d, 0xece5, 0x36b5, 0x1, 0x0);
        gbc.writeMem(0xa3d9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc0e9, gbc.sp());
        EXPECT(0xa3db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3d9));
        EXPECT(0x5c, gbc.readMem(0xa3da));
        // CB 5C 0312
        gbc.setState(0x1253, 0xc8a1, 0x9860, 0xe8de, 0xed16, 0x9395, 0x1, 0x1);
        gbc.writeMem(0x1253, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0313
        gbc.setState(0xa1f5, 0x6784, 0x4a50, 0xd8ec, 0xec3a, 0x92a2, 0x0, 0x1);
        gbc.writeMem(0xa1f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0xa1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f5));
        EXPECT(0x5c, gbc.readMem(0xa1f6));
        // CB 5C 0315
        gbc.setState(0x69e2, 0xb073, 0x7f10, 0xea7a, 0x3237, 0x5e00, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb073, gbc.sp());
        EXPECT(0x69e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0316
        gbc.setState(0x8403, 0x9f0c, 0x6af0, 0x7b82, 0xc3f2, 0xf60, 0x0, 0x1);
        gbc.writeMem(0x8403, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9f0c, gbc.sp());
        EXPECT(0x8405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8403));
        EXPECT(0x5c, gbc.readMem(0x8404));
        // CB 5C 0317
        gbc.setState(0xd714, 0xbc7a, 0xf580, 0xcbed, 0xd473, 0x2912, 0x1, 0x0);
        gbc.writeMem(0xd714, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0xd716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd714));
        EXPECT(0x5c, gbc.readMem(0xd715));
        // CB 5C 0318
        gbc.setState(0x2d57, 0x885a, 0x18b0, 0x34bd, 0x85a7, 0x4a9, 0x0, 0x0);
        gbc.writeMem(0x2d57, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x885a, gbc.sp());
        EXPECT(0x2d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0319
        gbc.setState(0xa619, 0x6dad, 0x7ce0, 0xb0b1, 0x36f2, 0xd9d7, 0x1, 0x0);
        gbc.writeMem(0xa619, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6dad, gbc.sp());
        EXPECT(0xa61b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa619));
        EXPECT(0x5c, gbc.readMem(0xa61a));
        // CB 5C 031A
        gbc.setState(0x5225, 0x3ba9, 0x18c0, 0x5fe9, 0xc6cf, 0x5c7e, 0x0, 0x1);
        gbc.writeMem(0x5225, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0x5227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 031B
        gbc.setState(0x1882, 0xfe54, 0xbc10, 0xdf9, 0x60dc, 0x7dd5, 0x1, 0x0);
        gbc.writeMem(0x1882, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfe54, gbc.sp());
        EXPECT(0x1884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 031C
        gbc.setState(0x7627, 0x9ab1, 0xfae0, 0x9a67, 0xc4ec, 0x89c7, 0x0, 0x0);
        gbc.writeMem(0x7627, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9ab1, gbc.sp());
        EXPECT(0x7629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 031D
        gbc.setState(0x34b, 0xbc1e, 0x28b0, 0xcec4, 0x2, 0x2d5d, 0x1, 0x1);
        gbc.writeMem(0x34b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbc1e, gbc.sp());
        EXPECT(0x34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 031E
        gbc.setState(0xcad1, 0x744b, 0x8a80, 0xd133, 0x5be5, 0x636e, 0x0, 0x1);
        gbc.writeMem(0xcad1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x744b, gbc.sp());
        EXPECT(0xcad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcad1));
        EXPECT(0x5c, gbc.readMem(0xcad2));
        // CB 5C 031F
        gbc.setState(0x4d2d, 0xba12, 0x4f20, 0xdfa0, 0x6d1b, 0x7872, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xba12, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0320
        gbc.setState(0x79f, 0x6879, 0x7260, 0x268e, 0x813, 0xc48e, 0x1, 0x0);
        gbc.writeMem(0x79f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6879, gbc.sp());
        EXPECT(0x7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0322
        gbc.setState(0x446e, 0x12d7, 0xd0, 0x291b, 0xf0f4, 0x9ada, 0x0, 0x1);
        gbc.writeMem(0x446e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x12d7, gbc.sp());
        EXPECT(0x4470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0323
        gbc.setState(0x4183, 0xd1ac, 0xf8b0, 0xd19f, 0x3591, 0xd1dc, 0x0, 0x0);
        gbc.writeMem(0x4183, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd1ac, gbc.sp());
        EXPECT(0x4185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0324
        gbc.setState(0xc8b0, 0xa279, 0xad70, 0x24fd, 0x214a, 0xe31a, 0x1, 0x0);
        gbc.writeMem(0xc8b0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xa279, gbc.sp());
        EXPECT(0xc8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b0));
        EXPECT(0x5c, gbc.readMem(0xc8b1));
        // CB 5C 0325
        gbc.setState(0x62ab, 0x57b, 0x4d0, 0xd03c, 0x655c, 0xff03, 0x1, 0x1);
        gbc.writeMem(0x62ab, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x57b, gbc.sp());
        EXPECT(0x62ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0327
        gbc.setState(0x3927, 0x61b5, 0x40c0, 0x8b36, 0x27ec, 0x78a1, 0x1, 0x1);
        gbc.writeMem(0x3927, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x61b5, gbc.sp());
        EXPECT(0x3929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0328
        gbc.setState(0xd39d, 0x9a68, 0x6250, 0xb28, 0x789b, 0x48ae, 0x0, 0x1);
        gbc.writeMem(0xd39d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9a68, gbc.sp());
        EXPECT(0xd39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39d));
        EXPECT(0x5c, gbc.readMem(0xd39e));
        // CB 5C 0329
        gbc.setState(0xefc4, 0x8d5b, 0x890, 0x1ea1, 0xa746, 0xe1e, 0x0, 0x1);
        gbc.writeMem(0xefc4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0xefc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc4));
        EXPECT(0x5c, gbc.readMem(0xefc5));
        // CB 5C 032A
        gbc.setState(0xe43c, 0x9888, 0xf970, 0xa168, 0xfedb, 0xc581, 0x1, 0x1);
        gbc.writeMem(0xe43c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9888, gbc.sp());
        EXPECT(0xe43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43c));
        EXPECT(0x5c, gbc.readMem(0xe43d));
        // CB 5C 032B
        gbc.setState(0x3e83, 0x3492, 0x1670, 0x2581, 0xefa6, 0x17a2, 0x0, 0x1);
        gbc.writeMem(0x3e83, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0x3e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 032C
        gbc.setState(0x891, 0xb7b1, 0xd90, 0xf99a, 0x7749, 0x31e0, 0x1, 0x1);
        gbc.writeMem(0x891, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb7b1, gbc.sp());
        EXPECT(0x893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 032D
        gbc.setState(0xab40, 0x7e3, 0xec0, 0x1fc4, 0x863f, 0x7f83, 0x1, 0x0);
        gbc.writeMem(0xab40, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7e3, gbc.sp());
        EXPECT(0xab42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab40));
        EXPECT(0x5c, gbc.readMem(0xab41));
        // CB 5C 032E
        gbc.setState(0xbdc9, 0x7d42, 0xa3f0, 0x8679, 0xc7fc, 0x528c, 0x0, 0x1);
        gbc.writeMem(0xbdc9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7d42, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc9));
        EXPECT(0x5c, gbc.readMem(0xbdca));
        // CB 5C 032F
        gbc.setState(0xceb8, 0x5470, 0x8050, 0x4a35, 0x48dd, 0xd920, 0x1, 0x0);
        gbc.writeMem(0xceb8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5470, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb8));
        EXPECT(0x5c, gbc.readMem(0xceb9));
        // CB 5C 0330
        gbc.setState(0xc12a, 0x5428, 0x2d90, 0x1792, 0xac72, 0xac7d, 0x0, 0x1);
        gbc.writeMem(0xc12a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5428, gbc.sp());
        EXPECT(0xc12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12a));
        EXPECT(0x5c, gbc.readMem(0xc12b));
        // CB 5C 0331
        gbc.setState(0x7796, 0x4ccd, 0x23e0, 0x626a, 0xa9ab, 0x6736, 0x0, 0x1);
        gbc.writeMem(0x7796, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4ccd, gbc.sp());
        EXPECT(0x7798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0333
        gbc.setState(0x8c67, 0x4a60, 0x4cc0, 0xd7ca, 0x6286, 0x49a4, 0x0, 0x0);
        gbc.writeMem(0x8c67, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4a60, gbc.sp());
        EXPECT(0x8c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c67));
        EXPECT(0x5c, gbc.readMem(0x8c68));
        // CB 5C 0334
        gbc.setState(0x7a45, 0xc849, 0x5f30, 0x2ded, 0x93c3, 0x710, 0x0, 0x1);
        gbc.writeMem(0x7a45, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc849, gbc.sp());
        EXPECT(0x7a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0335
        gbc.setState(0x5b6d, 0x26c9, 0xa4b0, 0x71f7, 0x1029, 0xc25, 0x1, 0x0);
        gbc.writeMem(0x5b6d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x26c9, gbc.sp());
        EXPECT(0x5b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0336
        gbc.setState(0xeebd, 0x9327, 0x1190, 0x445d, 0xfda3, 0xe5e7, 0x1, 0x1);
        gbc.writeMem(0xeebd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9327, gbc.sp());
        EXPECT(0xeebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebd));
        EXPECT(0x5c, gbc.readMem(0xeebe));
        // CB 5C 0337
        gbc.setState(0x154, 0x22a9, 0x8860, 0xb9c1, 0xbc7c, 0x84c3, 0x1, 0x1);
        gbc.writeMem(0x154, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x22a9, gbc.sp());
        EXPECT(0x156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0338
        gbc.setState(0xc249, 0x17bc, 0x8a90, 0xf395, 0x8d2c, 0x1014, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x17bc, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0x5c, gbc.readMem(0xc24a));
        // CB 5C 0339
        gbc.setState(0x9516, 0x89a3, 0xa6b0, 0xcbf0, 0x692a, 0x136d, 0x0, 0x0);
        gbc.writeMem(0x9516, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x89a3, gbc.sp());
        EXPECT(0x9518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9516));
        EXPECT(0x5c, gbc.readMem(0x9517));
        // CB 5C 033A
        gbc.setState(0x7b2f, 0x9555, 0x6840, 0xd5d8, 0x3745, 0xca49, 0x0, 0x1);
        gbc.writeMem(0x7b2f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9555, gbc.sp());
        EXPECT(0x7b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 033B
        gbc.setState(0xb077, 0xb350, 0x8260, 0x229a, 0x4d07, 0xc412, 0x0, 0x0);
        gbc.writeMem(0xb077, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb350, gbc.sp());
        EXPECT(0xb079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb077));
        EXPECT(0x5c, gbc.readMem(0xb078));
        // CB 5C 033C
        gbc.setState(0xc53e, 0xffc1, 0x8110, 0xf8da, 0xf9a8, 0xbdf6, 0x1, 0x1);
        gbc.writeMem(0xc53e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xffc1, gbc.sp());
        EXPECT(0xc540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53e));
        EXPECT(0x5c, gbc.readMem(0xc53f));
        // CB 5C 033D
        gbc.setState(0xd7c8, 0x5fa, 0xbcd0, 0x4678, 0x8f4c, 0x4de8, 0x0, 0x0);
        gbc.writeMem(0xd7c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c8));
        EXPECT(0x5c, gbc.readMem(0xd7c9));
        // CB 5C 033E
        gbc.setState(0x3e00, 0x34e1, 0x8180, 0x35e0, 0x8d64, 0x1758, 0x0, 0x1);
        gbc.writeMem(0x3e00, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x34e1, gbc.sp());
        EXPECT(0x3e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 033F
        gbc.setState(0x3335, 0x735f, 0xb650, 0x3bcf, 0xd67, 0xf0a5, 0x1, 0x1);
        gbc.writeMem(0x3335, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x735f, gbc.sp());
        EXPECT(0x3337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0340
        gbc.setState(0x3016, 0xab43, 0x6600, 0x88f, 0xd448, 0xc959, 0x0, 0x1);
        gbc.writeMem(0x3016, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xab43, gbc.sp());
        EXPECT(0x3018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0341
        gbc.setState(0x3cc, 0x30ad, 0xb940, 0x39db, 0xebfe, 0x514d, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x30ad, gbc.sp());
        EXPECT(0x3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0342
        gbc.setState(0x4238, 0x4bb6, 0x19c0, 0xb193, 0x6885, 0x35dc, 0x1, 0x1);
        gbc.writeMem(0x4238, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4bb6, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0343
        gbc.setState(0xc2f5, 0x4335, 0x2800, 0xd373, 0x65fe, 0x58bd, 0x0, 0x1);
        gbc.writeMem(0xc2f5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4335, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0x5c, gbc.readMem(0xc2f6));
        // CB 5C 0345
        gbc.setState(0x9279, 0x2911, 0xc8a0, 0x23d3, 0x7bf9, 0x330b, 0x1, 0x1);
        gbc.writeMem(0x9279, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x927b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9279));
        EXPECT(0x5c, gbc.readMem(0x927a));
        // CB 5C 0346
        gbc.setState(0x4d4c, 0xd1a7, 0x750, 0x3c50, 0x9122, 0x826a, 0x1, 0x1);
        gbc.writeMem(0x4d4c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd1a7, gbc.sp());
        EXPECT(0x4d4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0347
        gbc.setState(0x4d4a, 0x34fe, 0x3230, 0x8609, 0x12df, 0x44aa, 0x1, 0x1);
        gbc.writeMem(0x4d4a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x34fe, gbc.sp());
        EXPECT(0x4d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0348
        gbc.setState(0x9148, 0x1c2, 0x8d10, 0x2916, 0xb032, 0x8507, 0x0, 0x0);
        gbc.writeMem(0x9148, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c2, gbc.sp());
        EXPECT(0x914a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9148));
        EXPECT(0x5c, gbc.readMem(0x9149));
        // CB 5C 0349
        gbc.setState(0x7243, 0xafb, 0x6d50, 0x8f20, 0x24d6, 0xf62a, 0x1, 0x0);
        gbc.writeMem(0x7243, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xafb, gbc.sp());
        EXPECT(0x7245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 034A
        gbc.setState(0xcd15, 0x7c76, 0x8fb0, 0x3c0c, 0xd65a, 0x6310, 0x0, 0x1);
        gbc.writeMem(0xcd15, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7c76, gbc.sp());
        EXPECT(0xcd17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd15));
        EXPECT(0x5c, gbc.readMem(0xcd16));
        // CB 5C 034B
        gbc.setState(0x794f, 0x8a94, 0x4890, 0x95dc, 0xdd3, 0x4f10, 0x1, 0x1);
        gbc.writeMem(0x794f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8a94, gbc.sp());
        EXPECT(0x7951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 034C
        gbc.setState(0x6ff1, 0x39ba, 0xe360, 0x79e, 0x6834, 0x61ab, 0x0, 0x1);
        gbc.writeMem(0x6ff1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x39ba, gbc.sp());
        EXPECT(0x6ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 034D
        gbc.setState(0x6536, 0xba02, 0xbf30, 0x5010, 0x2d42, 0x9fa4, 0x1, 0x0);
        gbc.writeMem(0x6536, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xba02, gbc.sp());
        EXPECT(0x6538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 034E
        gbc.setState(0x8157, 0x9244, 0x3950, 0xcb48, 0xf30b, 0xc98, 0x1, 0x1);
        gbc.writeMem(0x8157, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9244, gbc.sp());
        EXPECT(0x8159, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8157));
        EXPECT(0x5c, gbc.readMem(0x8158));
        // CB 5C 034F
        gbc.setState(0xc3e3, 0x4d09, 0x17b0, 0x592c, 0xcf81, 0x47ef, 0x0, 0x1);
        gbc.writeMem(0xc3e3, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4d09, gbc.sp());
        EXPECT(0xc3e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3e3));
        EXPECT(0x5c, gbc.readMem(0xc3e4));
        // CB 5C 0350
        gbc.setState(0x52b1, 0xb18a, 0xcf60, 0xdb50, 0xb5c8, 0x949a, 0x0, 0x1);
        gbc.writeMem(0x52b1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb18a, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0351
        gbc.setState(0x338f, 0x209b, 0xfcd0, 0x14aa, 0x68e0, 0x9b82, 0x0, 0x1);
        gbc.writeMem(0x338f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x209b, gbc.sp());
        EXPECT(0x3391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0352
        gbc.setState(0x8acd, 0x342, 0x5fc0, 0xeb16, 0x7d0, 0xee30, 0x0, 0x1);
        gbc.writeMem(0x8acd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x342, gbc.sp());
        EXPECT(0x8acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8acd));
        EXPECT(0x5c, gbc.readMem(0x8ace));
        // CB 5C 0353
        gbc.setState(0x8b41, 0x7591, 0x1630, 0x5645, 0x1d82, 0x1978, 0x1, 0x0);
        gbc.writeMem(0x8b41, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b41));
        EXPECT(0x5c, gbc.readMem(0x8b42));
        // CB 5C 0354
        gbc.setState(0xc30, 0xb8bc, 0x41f0, 0x1810, 0x326a, 0xb0b3, 0x0, 0x1);
        gbc.writeMem(0xc30, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb8bc, gbc.sp());
        EXPECT(0xc32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0355
        gbc.setState(0x9abd, 0xe7cb, 0x3350, 0x5297, 0x15a5, 0x49a0, 0x1, 0x0);
        gbc.writeMem(0x9abd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe7cb, gbc.sp());
        EXPECT(0x9abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abd));
        EXPECT(0x5c, gbc.readMem(0x9abe));
        // CB 5C 0356
        gbc.setState(0xe95d, 0x3571, 0x22f0, 0x351d, 0x2185, 0xf4ac, 0x1, 0x1);
        gbc.writeMem(0xe95d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3571, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95d));
        EXPECT(0x5c, gbc.readMem(0xe95e));
        // CB 5C 0357
        gbc.setState(0x8ea8, 0xabce, 0xce70, 0xd08c, 0xe1f0, 0x41de, 0x0, 0x1);
        gbc.writeMem(0x8ea8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xabce, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0x5c, gbc.readMem(0x8ea9));
        // CB 5C 0358
        gbc.setState(0xd77e, 0x1188, 0x8610, 0x2149, 0x3b62, 0xaba0, 0x0, 0x1);
        gbc.writeMem(0xd77e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1188, gbc.sp());
        EXPECT(0xd780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77e));
        EXPECT(0x5c, gbc.readMem(0xd77f));
        // CB 5C 0359
        gbc.setState(0x8143, 0xa3bd, 0x30, 0x9f35, 0x1576, 0xbd54, 0x1, 0x0);
        gbc.writeMem(0x8143, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa3bd, gbc.sp());
        EXPECT(0x8145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8143));
        EXPECT(0x5c, gbc.readMem(0x8144));
        // CB 5C 035A
        gbc.setState(0xb516, 0x2a3a, 0x62f0, 0xba5, 0xa8a4, 0x2cf, 0x1, 0x0);
        gbc.writeMem(0xb516, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2a3a, gbc.sp());
        EXPECT(0xb518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb516));
        EXPECT(0x5c, gbc.readMem(0xb517));
        // CB 5C 035B
        gbc.setState(0xcea8, 0xa758, 0xcd80, 0x6170, 0x37cb, 0xef2e, 0x1, 0x1);
        gbc.writeMem(0xcea8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa758, gbc.sp());
        EXPECT(0xceaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea8));
        EXPECT(0x5c, gbc.readMem(0xcea9));
        // CB 5C 035C
        gbc.setState(0x4350, 0xf8ac, 0xea10, 0x7932, 0xca77, 0x7afe, 0x1, 0x0);
        gbc.writeMem(0x4350, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf8ac, gbc.sp());
        EXPECT(0x4352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 035D
        gbc.setState(0xc1f0, 0x1510, 0x50a0, 0x3909, 0xa72f, 0xd6d8, 0x0, 0x1);
        gbc.writeMem(0xc1f0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1510, gbc.sp());
        EXPECT(0xc1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f0));
        EXPECT(0x5c, gbc.readMem(0xc1f1));
        // CB 5C 035E
        gbc.setState(0x9088, 0x6945, 0x68c0, 0xc7f9, 0x6001, 0x8678, 0x0, 0x1);
        gbc.writeMem(0x9088, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6945, gbc.sp());
        EXPECT(0x908a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9088));
        EXPECT(0x5c, gbc.readMem(0x9089));
        // CB 5C 035F
        gbc.setState(0x279, 0x7bc8, 0xd590, 0x9734, 0x8db7, 0x762f, 0x0, 0x1);
        gbc.writeMem(0x279, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7bc8, gbc.sp());
        EXPECT(0x27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0360
        gbc.setState(0x2434, 0x19de, 0xe6e0, 0xcb84, 0x527e, 0x577c, 0x0, 0x0);
        gbc.writeMem(0x2434, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x19de, gbc.sp());
        EXPECT(0x2436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0361
        gbc.setState(0x5a59, 0x8035, 0xc7b0, 0x2b51, 0xc3a3, 0x203b, 0x1, 0x1);
        gbc.writeMem(0x5a59, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8035, gbc.sp());
        EXPECT(0x5a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0362
        gbc.setState(0x48cf, 0x705c, 0x3960, 0x93a2, 0x6a88, 0xcad2, 0x1, 0x1);
        gbc.writeMem(0x48cf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x705c, gbc.sp());
        EXPECT(0x48d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0363
        gbc.setState(0xb412, 0x7b0f, 0xb650, 0x996f, 0x2eb8, 0xdb98, 0x1, 0x0);
        gbc.writeMem(0xb412, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7b0f, gbc.sp());
        EXPECT(0xb414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb412));
        EXPECT(0x5c, gbc.readMem(0xb413));
        // CB 5C 0364
        gbc.setState(0xc5aa, 0xa381, 0xdff0, 0x516, 0xf559, 0xe2a1, 0x0, 0x0);
        gbc.writeMem(0xc5aa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa381, gbc.sp());
        EXPECT(0xc5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5aa));
        EXPECT(0x5c, gbc.readMem(0xc5ab));
        // CB 5C 0365
        gbc.setState(0xb1c8, 0x4ca3, 0xd0f0, 0xc007, 0x5cc6, 0x17c8, 0x1, 0x0);
        gbc.writeMem(0xb1c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4ca3, gbc.sp());
        EXPECT(0xb1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c8));
        EXPECT(0x5c, gbc.readMem(0xb1c9));
        // CB 5C 0366
        gbc.setState(0xd91a, 0x80ac, 0x23e0, 0xc48, 0xc865, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0xd91a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x80ac, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91a));
        EXPECT(0x5c, gbc.readMem(0xd91b));
        // CB 5C 0367
        gbc.setState(0x5446, 0x82be, 0x8380, 0x955b, 0xe21b, 0xcb1a, 0x1, 0x1);
        gbc.writeMem(0x5446, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x82be, gbc.sp());
        EXPECT(0x5448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0368
        gbc.setState(0xe822, 0x846, 0x51a0, 0xc7db, 0xc2b6, 0x5ae8, 0x0, 0x1);
        gbc.writeMem(0xe822, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe822));
        EXPECT(0x5c, gbc.readMem(0xe823));
        // CB 5C 0369
        gbc.setState(0xac4e, 0x2207, 0xbbe0, 0xc433, 0x4f0a, 0x6de4, 0x0, 0x1);
        gbc.writeMem(0xac4e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4e));
        EXPECT(0x5c, gbc.readMem(0xac4f));
        // CB 5C 036A
        gbc.setState(0x8460, 0xc1e4, 0xa8e0, 0x3a14, 0x9d5e, 0x28a4, 0x1, 0x0);
        gbc.writeMem(0x8460, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc1e4, gbc.sp());
        EXPECT(0x8462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8460));
        EXPECT(0x5c, gbc.readMem(0x8461));
        // CB 5C 036B
        gbc.setState(0x78a2, 0xf4e5, 0x5a30, 0x9aa6, 0x56a3, 0x6da1, 0x0, 0x1);
        gbc.writeMem(0x78a2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf4e5, gbc.sp());
        EXPECT(0x78a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 036C
        gbc.setState(0xe09a, 0x411a, 0xe420, 0x37f2, 0x989f, 0x83c7, 0x0, 0x0);
        gbc.writeMem(0xe09a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0xe09c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe09a));
        EXPECT(0x5c, gbc.readMem(0xe09b));
        // CB 5C 036D
        gbc.setState(0x8195, 0xb729, 0xbab0, 0x30dd, 0x3e19, 0x13ab, 0x0, 0x1);
        gbc.writeMem(0x8195, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb729, gbc.sp());
        EXPECT(0x8197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8195));
        EXPECT(0x5c, gbc.readMem(0x8196));
        // CB 5C 036F
        gbc.setState(0xb96a, 0x366b, 0x4c50, 0x65bc, 0x7cf2, 0xf1d5, 0x0, 0x1);
        gbc.writeMem(0xb96a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0xb96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96a));
        EXPECT(0x5c, gbc.readMem(0xb96b));
        // CB 5C 0371
        gbc.setState(0xa846, 0xe8ab, 0x3b40, 0x44fd, 0x2a3b, 0x5c9c, 0x1, 0x1);
        gbc.writeMem(0xa846, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0xa848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa846));
        EXPECT(0x5c, gbc.readMem(0xa847));
        // CB 5C 0372
        gbc.setState(0x1003, 0x56f9, 0x5200, 0xd534, 0x7363, 0xad69, 0x0, 0x1);
        gbc.writeMem(0x1003, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0x1005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0373
        gbc.setState(0x3fd1, 0x987d, 0x1900, 0xf64f, 0x4546, 0xd611, 0x0, 0x1);
        gbc.writeMem(0x3fd1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x987d, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0374
        gbc.setState(0xc6ed, 0x2672, 0x78b0, 0x3145, 0xdd46, 0x851f, 0x0, 0x1);
        gbc.writeMem(0xc6ed, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0xc6ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6ed));
        EXPECT(0x5c, gbc.readMem(0xc6ee));
        // CB 5C 0375
        gbc.setState(0xc523, 0x6664, 0x96f0, 0x178, 0x2191, 0x78b7, 0x1, 0x0);
        gbc.writeMem(0xc523, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6664, gbc.sp());
        EXPECT(0xc525, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc523));
        EXPECT(0x5c, gbc.readMem(0xc524));
        // CB 5C 0376
        gbc.setState(0xaea7, 0x6925, 0x4b30, 0xda6c, 0x262d, 0x8351, 0x0, 0x1);
        gbc.writeMem(0xaea7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6925, gbc.sp());
        EXPECT(0xaea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea7));
        EXPECT(0x5c, gbc.readMem(0xaea8));
        // CB 5C 0377
        gbc.setState(0xe22f, 0xc839, 0x49c0, 0x83b2, 0x2bd1, 0x1d2c, 0x1, 0x0);
        gbc.writeMem(0xe22f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc839, gbc.sp());
        EXPECT(0xe231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe22f));
        EXPECT(0x5c, gbc.readMem(0xe230));
        // CB 5C 0378
        gbc.setState(0x24aa, 0xdf7e, 0x400, 0xf30d, 0xebef, 0xaafe, 0x1, 0x0);
        gbc.writeMem(0x24aa, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdf7e, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0379
        gbc.setState(0x7207, 0x754, 0x1c10, 0x596a, 0x47a1, 0xd083, 0x0, 0x0);
        gbc.writeMem(0x7207, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x754, gbc.sp());
        EXPECT(0x7209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 037A
        gbc.setState(0x576f, 0x834c, 0x980, 0x37aa, 0x6442, 0x532d, 0x0, 0x1);
        gbc.writeMem(0x576f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x834c, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 037B
        gbc.setState(0x1156, 0x6608, 0xfa00, 0xe551, 0x48d5, 0x4894, 0x0, 0x0);
        gbc.writeMem(0x1156, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6608, gbc.sp());
        EXPECT(0x1158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 037C
        gbc.setState(0x648f, 0x4e80, 0xb000, 0x5ff9, 0xded8, 0x2432, 0x0, 0x1);
        gbc.writeMem(0x648f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0x6491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 037D
        gbc.setState(0xacd, 0xad29, 0xbb30, 0xd33e, 0x955, 0x5118, 0x1, 0x0);
        gbc.writeMem(0xacd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xad29, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 037E
        gbc.setState(0x2ab2, 0x3aa8, 0x62c0, 0x5a61, 0x7d16, 0x248f, 0x1, 0x1);
        gbc.writeMem(0x2ab2, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 037F
        gbc.setState(0xd50f, 0xae12, 0x25f0, 0x2757, 0xef3a, 0x3d56, 0x1, 0x1);
        gbc.writeMem(0xd50f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xae12, gbc.sp());
        EXPECT(0xd511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd50f));
        EXPECT(0x5c, gbc.readMem(0xd510));
        // CB 5C 0380
        gbc.setState(0x11e4, 0xb66, 0x2a10, 0x6ae6, 0x3628, 0x4d64, 0x1, 0x1);
        gbc.writeMem(0x11e4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0381
        gbc.setState(0x301, 0x25db, 0x7d10, 0x30c1, 0xbd4a, 0xc6b5, 0x1, 0x0);
        gbc.writeMem(0x301, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x25db, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0382
        gbc.setState(0xb453, 0xff0, 0xd70, 0x6fa, 0xfa2a, 0xcf07, 0x1, 0x1);
        gbc.writeMem(0xb453, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xff0, gbc.sp());
        EXPECT(0xb455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb453));
        EXPECT(0x5c, gbc.readMem(0xb454));
        // CB 5C 0383
        gbc.setState(0xa99b, 0x387d, 0x1960, 0xd1b1, 0xa2d5, 0xec7d, 0x1, 0x1);
        gbc.writeMem(0xa99b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x387d, gbc.sp());
        EXPECT(0xa99d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99b));
        EXPECT(0x5c, gbc.readMem(0xa99c));
        // CB 5C 0385
        gbc.setState(0x656, 0x2151, 0xdda0, 0x3f21, 0x30b0, 0x23ef, 0x1, 0x1);
        gbc.writeMem(0x656, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0x658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0386
        gbc.setState(0xc76c, 0x8525, 0x3de0, 0xb2b5, 0xb3aa, 0x8039, 0x1, 0x0);
        gbc.writeMem(0xc76c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8525, gbc.sp());
        EXPECT(0xc76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76c));
        EXPECT(0x5c, gbc.readMem(0xc76d));
        // CB 5C 0387
        gbc.setState(0x76e9, 0x3f40, 0x4850, 0x9182, 0xc5d8, 0x29b0, 0x1, 0x0);
        gbc.writeMem(0x76e9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3f40, gbc.sp());
        EXPECT(0x76eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0388
        gbc.setState(0xd0cd, 0xd961, 0x5ef0, 0x461a, 0xc402, 0x1e88, 0x1, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd961, gbc.sp());
        EXPECT(0xd0cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0cd));
        EXPECT(0x5c, gbc.readMem(0xd0ce));
        // CB 5C 038B
        gbc.setState(0xa632, 0x8a56, 0x4b30, 0x1477, 0xda21, 0x11f6, 0x1, 0x1);
        gbc.writeMem(0xa632, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8a56, gbc.sp());
        EXPECT(0xa634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa632));
        EXPECT(0x5c, gbc.readMem(0xa633));
        // CB 5C 038C
        gbc.setState(0x371b, 0x338c, 0x99c0, 0xea86, 0xd94b, 0xcca8, 0x0, 0x1);
        gbc.writeMem(0x371b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0x371d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 038D
        gbc.setState(0xa74, 0xa00c, 0x13c0, 0xf40f, 0x11f0, 0xc35e, 0x0, 0x1);
        gbc.writeMem(0xa74, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa00c, gbc.sp());
        EXPECT(0xa76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 038F
        gbc.setState(0x3767, 0x408d, 0xe660, 0xeee4, 0x598c, 0x1ebf, 0x0, 0x0);
        gbc.writeMem(0x3767, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x408d, gbc.sp());
        EXPECT(0x3769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0390
        gbc.setState(0x45d0, 0x536a, 0x2ba0, 0xee87, 0x1493, 0xac40, 0x1, 0x0);
        gbc.writeMem(0x45d0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x536a, gbc.sp());
        EXPECT(0x45d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0391
        gbc.setState(0xc466, 0xc0d1, 0x3c70, 0x95e, 0x6df7, 0xb4c1, 0x1, 0x0);
        gbc.writeMem(0xc466, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc0d1, gbc.sp());
        EXPECT(0xc468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc466));
        EXPECT(0x5c, gbc.readMem(0xc467));
        // CB 5C 0393
        gbc.setState(0x7a70, 0x7703, 0xed60, 0x5777, 0x83c0, 0xdbcf, 0x0, 0x1);
        gbc.writeMem(0x7a70, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7703, gbc.sp());
        EXPECT(0x7a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0394
        gbc.setState(0x947d, 0x3555, 0x4b50, 0x964, 0x5493, 0x9f60, 0x1, 0x1);
        gbc.writeMem(0x947d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x3555, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947d));
        EXPECT(0x5c, gbc.readMem(0x947e));
        // CB 5C 0395
        gbc.setState(0x7d80, 0x50f6, 0xac0, 0x4d16, 0x9f7f, 0xfa6d, 0x0, 0x0);
        gbc.writeMem(0x7d80, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x50f6, gbc.sp());
        EXPECT(0x7d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0396
        gbc.setState(0x9b5c, 0xe0a, 0xe700, 0x5d5c, 0xb6b5, 0xbbb2, 0x0, 0x1);
        gbc.writeMem(0x9b5c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe0a, gbc.sp());
        EXPECT(0x9b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b5c));
        EXPECT(0x5c, gbc.readMem(0x9b5d));
        // CB 5C 0397
        gbc.setState(0x64b1, 0xadba, 0x10e0, 0x4173, 0x42fa, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x64b1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 0398
        gbc.setState(0x1634, 0xa276, 0x7830, 0x95c6, 0x3a68, 0x1f4f, 0x0, 0x1);
        gbc.writeMem(0x1634, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0x1636, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 0399
        gbc.setState(0x90df, 0x96c8, 0x14e0, 0x712b, 0xcb52, 0xd99b, 0x1, 0x0);
        gbc.writeMem(0x90df, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x96c8, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0x5c, gbc.readMem(0x90e0));
        // CB 5C 039A
        gbc.setState(0x23fd, 0x5f1a, 0xb100, 0x50f8, 0x6fae, 0x4f10, 0x1, 0x0);
        gbc.writeMem(0x23fd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5f1a, gbc.sp());
        EXPECT(0x23ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 039B
        gbc.setState(0xc654, 0x974e, 0xe4d0, 0xdad3, 0xa909, 0xce46, 0x0, 0x0);
        gbc.writeMem(0xc654, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x974e, gbc.sp());
        EXPECT(0xc656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc654));
        EXPECT(0x5c, gbc.readMem(0xc655));
        // CB 5C 039C
        gbc.setState(0x76e9, 0xb9e5, 0xa250, 0xc457, 0x7e57, 0xe62, 0x1, 0x0);
        gbc.writeMem(0x76e9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb9e5, gbc.sp());
        EXPECT(0x76eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 039D
        gbc.setState(0x4442, 0x41b0, 0xd790, 0x6db4, 0x6358, 0x4b36, 0x1, 0x1);
        gbc.writeMem(0x4442, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x41b0, gbc.sp());
        EXPECT(0x4444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 039E
        gbc.setState(0x88ad, 0xfccd, 0x7d20, 0xdc43, 0xdbeb, 0x7953, 0x0, 0x0);
        gbc.writeMem(0x88ad, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0x88af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ad));
        EXPECT(0x5c, gbc.readMem(0x88ae));
        // CB 5C 03A0
        gbc.setState(0x3ca7, 0xce18, 0x26b0, 0x1b0d, 0x8701, 0xa7f0, 0x0, 0x1);
        gbc.writeMem(0x3ca7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0x3ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03A1
        gbc.setState(0xaa5, 0xf85b, 0x9aa0, 0x2061, 0xa2d6, 0xfee8, 0x1, 0x0);
        gbc.writeMem(0xaa5, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf85b, gbc.sp());
        EXPECT(0xaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03A2
        gbc.setState(0xc269, 0x6989, 0xcd20, 0xd7cd, 0x23a2, 0x4714, 0x1, 0x1);
        gbc.writeMem(0xc269, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6989, gbc.sp());
        EXPECT(0xc26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc269));
        EXPECT(0x5c, gbc.readMem(0xc26a));
        // CB 5C 03A3
        gbc.setState(0x9220, 0x442b, 0x3cb0, 0xcc43, 0xe1b7, 0x7026, 0x1, 0x0);
        gbc.writeMem(0x9220, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x442b, gbc.sp());
        EXPECT(0x9222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9220));
        EXPECT(0x5c, gbc.readMem(0x9221));
        // CB 5C 03A4
        gbc.setState(0x12b4, 0x408d, 0xbdd0, 0xd0dc, 0xb77d, 0x4497, 0x1, 0x1);
        gbc.writeMem(0x12b4, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x408d, gbc.sp());
        EXPECT(0x12b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03A5
        gbc.setState(0x4055, 0xf53, 0xb6f0, 0x9164, 0x834c, 0x9d05, 0x0, 0x1);
        gbc.writeMem(0x4055, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf53, gbc.sp());
        EXPECT(0x4057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03A6
        gbc.setState(0x7686, 0x77ba, 0x1610, 0xabbf, 0x2cfa, 0xe34, 0x1, 0x1);
        gbc.writeMem(0x7686, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x77ba, gbc.sp());
        EXPECT(0x7688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03A7
        gbc.setState(0x24fc, 0xb54, 0x8dd0, 0x966f, 0xb2c6, 0x2c38, 0x0, 0x1);
        gbc.writeMem(0x24fc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0x24fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03A8
        gbc.setState(0x1e9d, 0x5235, 0x5880, 0x94d, 0x62c4, 0x13e6, 0x1, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0x1e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03A9
        gbc.setState(0x2935, 0x1a26, 0x8d50, 0x9b2f, 0x2f16, 0xf841, 0x0, 0x0);
        gbc.writeMem(0x2935, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1a26, gbc.sp());
        EXPECT(0x2937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03AA
        gbc.setState(0xec68, 0xc20b, 0xeee0, 0xd0a8, 0x7b79, 0xdea9, 0x0, 0x0);
        gbc.writeMem(0xec68, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0xec6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec68));
        EXPECT(0x5c, gbc.readMem(0xec69));
        // CB 5C 03AB
        gbc.setState(0x9d11, 0x156d, 0xc930, 0x727d, 0xe14a, 0x5cd1, 0x0, 0x0);
        gbc.writeMem(0x9d11, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x156d, gbc.sp());
        EXPECT(0x9d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d11));
        EXPECT(0x5c, gbc.readMem(0x9d12));
        // CB 5C 03AC
        gbc.setState(0x9f10, 0x5957, 0xbb60, 0x3670, 0xdb26, 0xab52, 0x1, 0x0);
        gbc.writeMem(0x9f10, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5957, gbc.sp());
        EXPECT(0x9f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f10));
        EXPECT(0x5c, gbc.readMem(0x9f11));
        // CB 5C 03AD
        gbc.setState(0x609a, 0xda4d, 0x9750, 0xe15e, 0xee97, 0xb2b0, 0x0, 0x0);
        gbc.writeMem(0x609a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xda4d, gbc.sp());
        EXPECT(0x609c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03AE
        gbc.setState(0xbee, 0x44db, 0x78c0, 0x86c5, 0x2d7a, 0x646c, 0x0, 0x0);
        gbc.writeMem(0xbee, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x44db, gbc.sp());
        EXPECT(0xbf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03AF
        gbc.setState(0x6c53, 0x415a, 0xee20, 0xebc3, 0x60d9, 0xf17c, 0x0, 0x0);
        gbc.writeMem(0x6c53, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x415a, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B0
        gbc.setState(0x6b2e, 0x88c, 0x740, 0x125, 0xa881, 0xce7a, 0x1, 0x0);
        gbc.writeMem(0x6b2e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x88c, gbc.sp());
        EXPECT(0x6b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B1
        gbc.setState(0x4edc, 0xa297, 0x92d0, 0xd13b, 0x88ae, 0xb2d7, 0x1, 0x1);
        gbc.writeMem(0x4edc, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa297, gbc.sp());
        EXPECT(0x4ede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03B2
        gbc.setState(0x4ccd, 0xfeb9, 0x9740, 0xc2af, 0xb6b5, 0xff9a, 0x1, 0x0);
        gbc.writeMem(0x4ccd, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfeb9, gbc.sp());
        EXPECT(0x4ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B3
        gbc.setState(0x4d8d, 0xf74b, 0xa1c0, 0x9609, 0xc227, 0xe7e5, 0x0, 0x0);
        gbc.writeMem(0x4d8d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf74b, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B4
        gbc.setState(0x9fa7, 0x1d94, 0x3210, 0x9b4d, 0xf08, 0xf78f, 0x0, 0x0);
        gbc.writeMem(0x9fa7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0x9fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa7));
        EXPECT(0x5c, gbc.readMem(0x9fa8));
        // CB 5C 03B5
        gbc.setState(0xa51, 0x73b1, 0xb170, 0xe91f, 0x63b3, 0x63b4, 0x0, 0x1);
        gbc.writeMem(0xa51, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03B6
        gbc.setState(0x1f9f, 0x77a5, 0x3940, 0x1390, 0xe65b, 0xe53f, 0x0, 0x1);
        gbc.writeMem(0x1f9f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x1fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B7
        gbc.setState(0x22ac, 0x5ba9, 0x610, 0xec34, 0xb0e2, 0x9a7a, 0x1, 0x0);
        gbc.writeMem(0x22ac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5ba9, gbc.sp());
        EXPECT(0x22ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03B8
        gbc.setState(0x6cf, 0xba36, 0x6a80, 0xb4c0, 0xf3b1, 0x1d3e, 0x1, 0x0);
        gbc.writeMem(0x6cf, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xba36, gbc.sp());
        EXPECT(0x6d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03B9
        gbc.setState(0x7235, 0xa2a3, 0xc950, 0x8ab9, 0x935f, 0x2f1d, 0x0, 0x1);
        gbc.writeMem(0x7235, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa2a3, gbc.sp());
        EXPECT(0x7237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03BA
        gbc.setState(0xc8ee, 0x56a0, 0xfca0, 0x9223, 0x3012, 0x1f67, 0x0, 0x1);
        gbc.writeMem(0xc8ee, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x56a0, gbc.sp());
        EXPECT(0xc8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ee));
        EXPECT(0x5c, gbc.readMem(0xc8ef));
        // CB 5C 03BB
        gbc.setState(0x20d, 0x5db8, 0xbe10, 0x2049, 0xc1c9, 0xb001, 0x1, 0x1);
        gbc.writeMem(0x20d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5db8, gbc.sp());
        EXPECT(0x20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03BC
        gbc.setState(0x26b7, 0xd8be, 0x76c0, 0xfe25, 0x8ca8, 0xd27f, 0x1, 0x1);
        gbc.writeMem(0x26b7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd8be, gbc.sp());
        EXPECT(0x26b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03BD
        gbc.setState(0x52c8, 0x3e08, 0x2f10, 0xbb6b, 0x21b6, 0xe1e3, 0x1, 0x0);
        gbc.writeMem(0x52c8, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3e08, gbc.sp());
        EXPECT(0x52ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03BE
        gbc.setState(0x7b7b, 0xca67, 0x1a60, 0xaa4d, 0xc418, 0x6844, 0x0, 0x0);
        gbc.writeMem(0x7b7b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xca67, gbc.sp());
        EXPECT(0x7b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03BF
        gbc.setState(0x7902, 0x1f77, 0x90c0, 0x8188, 0x55e7, 0x9fee, 0x0, 0x1);
        gbc.writeMem(0x7902, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1f77, gbc.sp());
        EXPECT(0x7904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03C0
        gbc.setState(0xc319, 0x2c6b, 0x5940, 0xd0a3, 0x2c9a, 0x57dd, 0x1, 0x1);
        gbc.writeMem(0xc319, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2c6b, gbc.sp());
        EXPECT(0xc31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc319));
        EXPECT(0x5c, gbc.readMem(0xc31a));
        // CB 5C 03C1
        gbc.setState(0x2747, 0xbaba, 0x3140, 0x8322, 0x9d5b, 0x369f, 0x1, 0x0);
        gbc.writeMem(0x2747, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbaba, gbc.sp());
        EXPECT(0x2749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03C2
        gbc.setState(0x2cc7, 0xbc8a, 0x4820, 0x564e, 0xced2, 0x936f, 0x1, 0x1);
        gbc.writeMem(0x2cc7, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbc8a, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03C3
        gbc.setState(0xe35d, 0x6e28, 0x6ee0, 0x3cfb, 0xa98d, 0xdbb0, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6e28, gbc.sp());
        EXPECT(0xe35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35d));
        EXPECT(0x5c, gbc.readMem(0xe35e));
        // CB 5C 03C4
        gbc.setState(0x548, 0xc59a, 0x9b80, 0x98b1, 0x8a9e, 0x1f0e, 0x0, 0x0);
        gbc.writeMem(0x548, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0x54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03C5
        gbc.setState(0xd474, 0x435e, 0xcd30, 0x58aa, 0x6492, 0x7661, 0x0, 0x1);
        gbc.writeMem(0xd474, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0xd476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd474));
        EXPECT(0x5c, gbc.readMem(0xd475));
        // CB 5C 03C7
        gbc.setState(0x9d0d, 0x714, 0xa0a0, 0x433d, 0x9d12, 0x3e5, 0x1, 0x1);
        gbc.writeMem(0x9d0d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x714, gbc.sp());
        EXPECT(0x9d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0d));
        EXPECT(0x5c, gbc.readMem(0x9d0e));
        // CB 5C 03C8
        gbc.setState(0x1236, 0x216a, 0x1db0, 0xef63, 0x85d, 0xba9e, 0x1, 0x0);
        gbc.writeMem(0x1236, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x216a, gbc.sp());
        EXPECT(0x1238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03C9
        gbc.setState(0x287, 0xdba6, 0x7890, 0xe1bc, 0x67f9, 0x86f7, 0x1, 0x0);
        gbc.writeMem(0x287, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdba6, gbc.sp());
        EXPECT(0x289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03CA
        gbc.setState(0x9078, 0x4025, 0xeda0, 0x8a00, 0xe267, 0xfe1f, 0x0, 0x0);
        gbc.writeMem(0x9078, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4025, gbc.sp());
        EXPECT(0x907a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9078));
        EXPECT(0x5c, gbc.readMem(0x9079));
        // CB 5C 03CB
        gbc.setState(0x399b, 0x143a, 0xb8f0, 0x10a5, 0xc180, 0x8a3e, 0x1, 0x1);
        gbc.writeMem(0x399b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x143a, gbc.sp());
        EXPECT(0x399d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03CC
        gbc.setState(0x865a, 0x5e3e, 0xd120, 0xf645, 0x1966, 0x5b74, 0x1, 0x0);
        gbc.writeMem(0x865a, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e3e, gbc.sp());
        EXPECT(0x865c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865a));
        EXPECT(0x5c, gbc.readMem(0x865b));
        // CB 5C 03CD
        gbc.setState(0x7f89, 0x553b, 0xc100, 0xb78d, 0xcf6c, 0x98, 0x1, 0x0);
        gbc.writeMem(0x7f89, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x553b, gbc.sp());
        EXPECT(0x7f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03CE
        gbc.setState(0x994c, 0x2c8b, 0xa40, 0xdbd1, 0x6015, 0xfb8e, 0x0, 0x1);
        gbc.writeMem(0x994c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2c8b, gbc.sp());
        EXPECT(0x994e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994c));
        EXPECT(0x5c, gbc.readMem(0x994d));
        // CB 5C 03CF
        gbc.setState(0x98cb, 0xc876, 0xa5a0, 0x5bae, 0x1bd5, 0x9f5f, 0x0, 0x0);
        gbc.writeMem(0x98cb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc876, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cb));
        EXPECT(0x5c, gbc.readMem(0x98cc));
        // CB 5C 03D0
        gbc.setState(0xd31b, 0xfc20, 0x1ec0, 0x6be7, 0x8522, 0xff8c, 0x0, 0x1);
        gbc.writeMem(0xd31b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfc20, gbc.sp());
        EXPECT(0xd31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd31b));
        EXPECT(0x5c, gbc.readMem(0xd31c));
        // CB 5C 03D1
        gbc.setState(0x5619, 0x2c70, 0x7590, 0x7877, 0xe5e1, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x5619, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2c70, gbc.sp());
        EXPECT(0x561b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03D2
        gbc.setState(0x9d04, 0x4814, 0x4be0, 0xe1b8, 0x2f19, 0xd1d1, 0x1, 0x1);
        gbc.writeMem(0x9d04, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4814, gbc.sp());
        EXPECT(0x9d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d04));
        EXPECT(0x5c, gbc.readMem(0x9d05));
        // CB 5C 03D3
        gbc.setState(0x72ce, 0x8d6b, 0xd0c0, 0x583b, 0xa69b, 0x2947, 0x0, 0x0);
        gbc.writeMem(0x72ce, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8d6b, gbc.sp());
        EXPECT(0x72d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03D4
        gbc.setState(0x4080, 0x5396, 0x9a80, 0x8abf, 0xc10c, 0x1633, 0x1, 0x0);
        gbc.writeMem(0x4080, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5396, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03D5
        gbc.setState(0x68f, 0xa6e, 0xd6e0, 0x790, 0x2e8a, 0x525b, 0x0, 0x1);
        gbc.writeMem(0x68f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa6e, gbc.sp());
        EXPECT(0x691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03D7
        gbc.setState(0x98bb, 0xd541, 0xf800, 0xfcaf, 0xd9d, 0x3bb2, 0x0, 0x1);
        gbc.writeMem(0x98bb, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0x98bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98bb));
        EXPECT(0x5c, gbc.readMem(0x98bc));
        // CB 5C 03D9
        gbc.setState(0x704b, 0x1f9e, 0xeac0, 0x2e18, 0x976d, 0xe657, 0x1, 0x1);
        gbc.writeMem(0x704b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1f9e, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03DA
        gbc.setState(0xb659, 0x6464, 0xbdb0, 0x8f16, 0x45cd, 0xa66, 0x1, 0x1);
        gbc.writeMem(0xb659, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6464, gbc.sp());
        EXPECT(0xb65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb659));
        EXPECT(0x5c, gbc.readMem(0xb65a));
        // CB 5C 03DB
        gbc.setState(0x8fac, 0x9877, 0x6e0, 0x43d3, 0x695f, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0x8fac, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9877, gbc.sp());
        EXPECT(0x8fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fac));
        EXPECT(0x5c, gbc.readMem(0x8fad));
        // CB 5C 03DC
        gbc.setState(0x4381, 0xcf38, 0xff80, 0xb843, 0x6045, 0x2e5a, 0x0, 0x0);
        gbc.writeMem(0x4381, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcf38, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03DD
        gbc.setState(0x2bf9, 0xa0d5, 0x1bb0, 0xcf4f, 0x631a, 0xde7, 0x0, 0x1);
        gbc.writeMem(0x2bf9, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0x2bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03DE
        gbc.setState(0x4795, 0xfbd2, 0x2c70, 0x936, 0xae1f, 0x3121, 0x0, 0x1);
        gbc.writeMem(0x4795, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xfbd2, gbc.sp());
        EXPECT(0x4797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03DF
        gbc.setState(0xc42e, 0xbb7e, 0xacc0, 0xde51, 0x3003, 0x8f2f, 0x1, 0x0);
        gbc.writeMem(0xc42e, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbb7e, gbc.sp());
        EXPECT(0xc430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc42e));
        EXPECT(0x5c, gbc.readMem(0xc42f));
        // CB 5C 03E0
        gbc.setState(0x861d, 0xa1c3, 0xa670, 0x9399, 0x4ce3, 0xe2ae, 0x0, 0x1);
        gbc.writeMem(0x861d, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa1c3, gbc.sp());
        EXPECT(0x861f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861d));
        EXPECT(0x5c, gbc.readMem(0x861e));
        // CB 5C 03E1
        gbc.setState(0x2e8f, 0x2df5, 0xa070, 0x6453, 0x4816, 0x6075, 0x0, 0x0);
        gbc.writeMem(0x2e8f, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2df5, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03E3
        gbc.setState(0x82d1, 0x7550, 0xa220, 0xc722, 0x396, 0xd735, 0x0, 0x0);
        gbc.writeMem(0x82d1, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7550, gbc.sp());
        EXPECT(0x82d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d1));
        EXPECT(0x5c, gbc.readMem(0x82d2));
        // CB 5C 03E4
        gbc.setState(0xc17, 0x195b, 0xfa60, 0xc33, 0xeac3, 0xf85a, 0x0, 0x0);
        gbc.writeMem(0xc17, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x195b, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 5C 03E5
        gbc.setState(0x408b, 0xc903, 0x210, 0x7235, 0x82b6, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0x408b, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0x408d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03E6
        gbc.setState(0x4e6c, 0x26f5, 0x60d0, 0x22f8, 0xb69a, 0x76fa, 0x1, 0x1);
        gbc.writeMem(0x4e6c, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x26f5, gbc.sp());
        EXPECT(0x4e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 5C 03E7
        gbc.setState(0x97e0, 0xb973, 0x4b80, 0x45a9, 0xacae, 0x9487, 0x1, 0x1);
        gbc.writeMem(0x97e0, { 0xcb, 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb973, gbc.sp());
        EXPECT(0x97e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e0));
        EXPECT(0x5c, gbc.readMem(0x97e1));
    }
