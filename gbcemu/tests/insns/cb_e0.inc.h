    TEST(gbcemu, opcode_cb_e0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E0 0000
        gbc.setState(0x593d, 0x38e7, 0x3690, 0x63bb, 0x1913, 0x91b8, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x38e7);
        EXPECT(gbc.pc(), 0x593f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0001
        gbc.setState(0xc257, 0x13f, 0xc540, 0xf2ca, 0x158f, 0xaece, 0x0, 0x1);
        gbc.writeMem(0xc257, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x13f);
        EXPECT(gbc.pc(), 0xc259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc257), 0xcb);
        EXPECT(gbc.readMem(0xc258), 0xe0);
        // CB E0 0002
        gbc.setState(0xf4f, 0xb772, 0x3250, 0x33cd, 0x9a1c, 0xadca, 0x1, 0x1);
        gbc.writeMem(0xf4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb772);
        EXPECT(gbc.pc(), 0xf51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0003
        gbc.setState(0x5342, 0x1381, 0xb3b0, 0xc135, 0xac25, 0x4001, 0x1, 0x1);
        gbc.writeMem(0x5342, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1381);
        EXPECT(gbc.pc(), 0x5344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0004
        gbc.setState(0xd77d, 0xb03a, 0x2c0, 0x1cb1, 0xb91b, 0xcc51, 0x1, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb03a);
        EXPECT(gbc.pc(), 0xd77f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77d), 0xcb);
        EXPECT(gbc.readMem(0xd77e), 0xe0);
        // CB E0 0005
        gbc.setState(0x9489, 0x885d, 0x2e40, 0xe9ad, 0xefa2, 0x8540, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x885d);
        EXPECT(gbc.pc(), 0x948b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9489), 0xcb);
        EXPECT(gbc.readMem(0x948a), 0xe0);
        // CB E0 0006
        gbc.setState(0x1001, 0xf0a0, 0x51a0, 0x8210, 0x6d21, 0xdc46, 0x1, 0x1);
        gbc.writeMem(0x1001, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf0a0);
        EXPECT(gbc.pc(), 0x1003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0007
        gbc.setState(0x77c3, 0x7115, 0x6fc0, 0x52dd, 0x8c7c, 0x2661, 0x1, 0x1);
        gbc.writeMem(0x77c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7115);
        EXPECT(gbc.pc(), 0x77c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0008
        gbc.setState(0x8d6, 0x942e, 0x3650, 0x7cc7, 0xe810, 0x8efa, 0x0, 0x0);
        gbc.writeMem(0x8d6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x942e);
        EXPECT(gbc.pc(), 0x8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0009
        gbc.setState(0x18d9, 0xd68, 0x9fe0, 0x41b5, 0x77ae, 0x264a, 0x1, 0x0);
        gbc.writeMem(0x18d9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x18db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 000A
        gbc.setState(0x153f, 0x34f3, 0xd5b0, 0x2ab2, 0x68b8, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x153f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x34f3);
        EXPECT(gbc.pc(), 0x1541);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 000B
        gbc.setState(0x2bc1, 0x4976, 0x1730, 0xa144, 0x8cef, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0x2bc1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x4976);
        EXPECT(gbc.pc(), 0x2bc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 000C
        gbc.setState(0x1ea0, 0x274a, 0x6e20, 0x7b16, 0x2a43, 0xfb37, 0x0, 0x0);
        gbc.writeMem(0x1ea0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x274a);
        EXPECT(gbc.pc(), 0x1ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 000D
        gbc.setState(0x277b, 0x516d, 0x18a0, 0xf3fb, 0x5748, 0x630, 0x1, 0x0);
        gbc.writeMem(0x277b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x516d);
        EXPECT(gbc.pc(), 0x277d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 000F
        gbc.setState(0xc3c7, 0xb53f, 0xddd0, 0xaaa, 0x93fe, 0x5d42, 0x0, 0x1);
        gbc.writeMem(0xc3c7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb53f);
        EXPECT(gbc.pc(), 0xc3c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3c7), 0xcb);
        EXPECT(gbc.readMem(0xc3c8), 0xe0);
        // CB E0 0010
        gbc.setState(0xa945, 0x2681, 0xe580, 0x1f05, 0xe94b, 0x6472, 0x0, 0x1);
        gbc.writeMem(0xa945, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2681);
        EXPECT(gbc.pc(), 0xa947);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa945), 0xcb);
        EXPECT(gbc.readMem(0xa946), 0xe0);
        // CB E0 0011
        gbc.setState(0x76e8, 0xbfb3, 0x5050, 0x3c76, 0x16a7, 0x1dff, 0x1, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xbfb3);
        EXPECT(gbc.pc(), 0x76ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0012
        gbc.setState(0x3a02, 0x2f17, 0x3ac0, 0x8633, 0xc668, 0x7275, 0x1, 0x0);
        gbc.writeMem(0x3a02, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x2f17);
        EXPECT(gbc.pc(), 0x3a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0013
        gbc.setState(0x50, 0x4f08, 0xea80, 0xd29e, 0xfecc, 0xe65d, 0x1, 0x1);
        gbc.writeMem(0x50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4f08);
        EXPECT(gbc.pc(), 0x52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0014
        gbc.setState(0xb321, 0x1b0b, 0xf2f0, 0x2958, 0x7ed7, 0x7e78, 0x1, 0x1);
        gbc.writeMem(0xb321, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1b0b);
        EXPECT(gbc.pc(), 0xb323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb321), 0xcb);
        EXPECT(gbc.readMem(0xb322), 0xe0);
        // CB E0 0015
        gbc.setState(0x1f6a, 0xe87e, 0xe4b0, 0xd5f5, 0x7623, 0x5b70, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x1f6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0016
        gbc.setState(0x66b0, 0x9b2d, 0x84c0, 0x2902, 0xeeb6, 0x30bd, 0x0, 0x0);
        gbc.writeMem(0x66b0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9b2d);
        EXPECT(gbc.pc(), 0x66b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0017
        gbc.setState(0xe847, 0x1953, 0xc230, 0x7196, 0x2572, 0x30de, 0x0, 0x1);
        gbc.writeMem(0xe847, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1953);
        EXPECT(gbc.pc(), 0xe849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe847), 0xcb);
        EXPECT(gbc.readMem(0xe848), 0xe0);
        // CB E0 0018
        gbc.setState(0xe61c, 0xf27d, 0xad50, 0x8ae8, 0x6d1b, 0x706c, 0x0, 0x1);
        gbc.writeMem(0xe61c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf27d);
        EXPECT(gbc.pc(), 0xe61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61c), 0xcb);
        EXPECT(gbc.readMem(0xe61d), 0xe0);
        // CB E0 0019
        gbc.setState(0x1c1f, 0xf0bf, 0x5c0, 0xef9d, 0x1eef, 0xcd1f, 0x0, 0x1);
        gbc.writeMem(0x1c1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf0bf);
        EXPECT(gbc.pc(), 0x1c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 001A
        gbc.setState(0xc545, 0xc425, 0x40e0, 0xd0f, 0xe795, 0x9513, 0x0, 0x1);
        gbc.writeMem(0xc545, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc425);
        EXPECT(gbc.pc(), 0xc547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc545), 0xcb);
        EXPECT(gbc.readMem(0xc546), 0xe0);
        // CB E0 001B
        gbc.setState(0x359b, 0xf99b, 0x5d40, 0x3c54, 0xe307, 0xfc84, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0x359d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 001C
        gbc.setState(0x333d, 0x480a, 0x60b0, 0x83f9, 0xca86, 0xd6, 0x0, 0x1);
        gbc.writeMem(0x333d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x480a);
        EXPECT(gbc.pc(), 0x333f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 001D
        gbc.setState(0xc820, 0xd12c, 0x8410, 0x1442, 0xab1a, 0x3723, 0x1, 0x0);
        gbc.writeMem(0xc820, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd12c);
        EXPECT(gbc.pc(), 0xc822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc820), 0xcb);
        EXPECT(gbc.readMem(0xc821), 0xe0);
        // CB E0 001E
        gbc.setState(0xdd41, 0x77ff, 0x5e20, 0xf412, 0x77aa, 0xed57, 0x0, 0x0);
        gbc.writeMem(0xdd41, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x77ff);
        EXPECT(gbc.pc(), 0xdd43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd41), 0xcb);
        EXPECT(gbc.readMem(0xdd42), 0xe0);
        // CB E0 001F
        gbc.setState(0xe2c3, 0x2d13, 0x1ad0, 0x5b13, 0x129c, 0x8fef, 0x1, 0x1);
        gbc.writeMem(0xe2c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2d13);
        EXPECT(gbc.pc(), 0xe2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c3), 0xcb);
        EXPECT(gbc.readMem(0xe2c4), 0xe0);
        // CB E0 0020
        gbc.setState(0xa5fe, 0xff, 0x6ee0, 0x738a, 0x341e, 0x86cb, 0x1, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xff);
        EXPECT(gbc.pc(), 0xa600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5fe), 0xcb);
        EXPECT(gbc.readMem(0xa5ff), 0xe0);
        // CB E0 0021
        gbc.setState(0xb9cd, 0x1c8b, 0x2f80, 0x7ee1, 0x874e, 0xa4b6, 0x1, 0x0);
        gbc.writeMem(0xb9cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1c8b);
        EXPECT(gbc.pc(), 0xb9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9cd), 0xcb);
        EXPECT(gbc.readMem(0xb9ce), 0xe0);
        // CB E0 0022
        gbc.setState(0xb92b, 0x8480, 0xd270, 0x8aaa, 0xa9e, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8480);
        EXPECT(gbc.pc(), 0xb92d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92b), 0xcb);
        EXPECT(gbc.readMem(0xb92c), 0xe0);
        // CB E0 0023
        gbc.setState(0xbab3, 0xfbd5, 0x2b00, 0xb36e, 0xcfee, 0x88c8, 0x1, 0x1);
        gbc.writeMem(0xbab3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfbd5);
        EXPECT(gbc.pc(), 0xbab5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab3), 0xcb);
        EXPECT(gbc.readMem(0xbab4), 0xe0);
        // CB E0 0024
        gbc.setState(0xba85, 0x275c, 0x2810, 0xbe1c, 0xb60c, 0x1c08, 0x0, 0x1);
        gbc.writeMem(0xba85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x275c);
        EXPECT(gbc.pc(), 0xba87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba85), 0xcb);
        EXPECT(gbc.readMem(0xba86), 0xe0);
        // CB E0 0025
        gbc.setState(0x6abb, 0x9a9e, 0x2970, 0x585b, 0xac47, 0x4c4c, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9a9e);
        EXPECT(gbc.pc(), 0x6abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0027
        gbc.setState(0xe9ef, 0x3309, 0x7f70, 0xc7e1, 0xc137, 0x34ac, 0x1, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3309);
        EXPECT(gbc.pc(), 0xe9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ef), 0xcb);
        EXPECT(gbc.readMem(0xe9f0), 0xe0);
        // CB E0 0028
        gbc.setState(0x5b85, 0xae3f, 0x9080, 0xccbb, 0xc172, 0xdaf9, 0x0, 0x0);
        gbc.writeMem(0x5b85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xae3f);
        EXPECT(gbc.pc(), 0x5b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0029
        gbc.setState(0x1ed3, 0x865e, 0xa590, 0xeb92, 0xb42d, 0xdc94, 0x0, 0x0);
        gbc.writeMem(0x1ed3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x865e);
        EXPECT(gbc.pc(), 0x1ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 002A
        gbc.setState(0x817f, 0x8052, 0x8f50, 0xe7a5, 0x51ea, 0xb17c, 0x1, 0x0);
        gbc.writeMem(0x817f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x8052);
        EXPECT(gbc.pc(), 0x8181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817f), 0xcb);
        EXPECT(gbc.readMem(0x8180), 0xe0);
        // CB E0 002B
        gbc.setState(0x36d6, 0x24d5, 0xbbb0, 0xd122, 0xdabd, 0xab39, 0x1, 0x1);
        gbc.writeMem(0x36d6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x24d5);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 002C
        gbc.setState(0x8d5f, 0x6e86, 0x3fc0, 0x1487, 0x1afd, 0xe7c9, 0x0, 0x1);
        gbc.writeMem(0x8d5f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6e86);
        EXPECT(gbc.pc(), 0x8d61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5f), 0xcb);
        EXPECT(gbc.readMem(0x8d60), 0xe0);
        // CB E0 002D
        gbc.setState(0xefb3, 0x1c4, 0xb480, 0x691, 0x77c7, 0x97e5, 0x1, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefb3), 0xcb);
        EXPECT(gbc.readMem(0xefb4), 0xe0);
        // CB E0 002E
        gbc.setState(0xb9f5, 0x1c2e, 0xb680, 0xcd95, 0xc293, 0xab34, 0x0, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1c2e);
        EXPECT(gbc.pc(), 0xb9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f5), 0xcb);
        EXPECT(gbc.readMem(0xb9f6), 0xe0);
        // CB E0 002F
        gbc.setState(0x3d6e, 0xa63c, 0x980, 0x8b01, 0x6258, 0x98fb, 0x1, 0x0);
        gbc.writeMem(0x3d6e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa63c);
        EXPECT(gbc.pc(), 0x3d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0030
        gbc.setState(0x3a55, 0xe79e, 0x46f0, 0x9404, 0xd07f, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x3a55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xe79e);
        EXPECT(gbc.pc(), 0x3a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0031
        gbc.setState(0xecf3, 0xc0c7, 0x4d0, 0x6c21, 0x8ed5, 0x8059, 0x0, 0x0);
        gbc.writeMem(0xecf3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc0c7);
        EXPECT(gbc.pc(), 0xecf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf3), 0xcb);
        EXPECT(gbc.readMem(0xecf4), 0xe0);
        // CB E0 0032
        gbc.setState(0x8b7, 0x1008, 0x5350, 0xd74a, 0xb913, 0x766c, 0x0, 0x0);
        gbc.writeMem(0x8b7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1008);
        EXPECT(gbc.pc(), 0x8b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0033
        gbc.setState(0x2e16, 0x8a68, 0x32c0, 0x11fc, 0xf45, 0x1cb, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8a68);
        EXPECT(gbc.pc(), 0x2e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0034
        gbc.setState(0x1f05, 0x8b37, 0x2580, 0x2927, 0xf32b, 0x9846, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x8b37);
        EXPECT(gbc.pc(), 0x1f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0035
        gbc.setState(0x2fe4, 0x313a, 0xe800, 0xcf44, 0x73e3, 0x9e43, 0x0, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x313a);
        EXPECT(gbc.pc(), 0x2fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0036
        gbc.setState(0x6fb5, 0x7182, 0x9460, 0x6f32, 0x151c, 0x826a, 0x1, 0x1);
        gbc.writeMem(0x6fb5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x7182);
        EXPECT(gbc.pc(), 0x6fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0037
        gbc.setState(0xadbc, 0x5bbd, 0xf40, 0x71f, 0xccf6, 0xa568, 0x1, 0x0);
        gbc.writeMem(0xadbc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5bbd);
        EXPECT(gbc.pc(), 0xadbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadbc), 0xcb);
        EXPECT(gbc.readMem(0xadbd), 0xe0);
        // CB E0 0038
        gbc.setState(0x35f9, 0x7eaa, 0x97a0, 0xce5e, 0x54c, 0x3802, 0x1, 0x1);
        gbc.writeMem(0x35f9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7eaa);
        EXPECT(gbc.pc(), 0x35fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0039
        gbc.setState(0x52c0, 0xabd8, 0x12c0, 0x64c2, 0xba53, 0xe420, 0x1, 0x1);
        gbc.writeMem(0x52c0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xabd8);
        EXPECT(gbc.pc(), 0x52c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 003B
        gbc.setState(0x7112, 0xf10c, 0x7730, 0x967f, 0xb4a5, 0x1287, 0x0, 0x0);
        gbc.writeMem(0x7112, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf10c);
        EXPECT(gbc.pc(), 0x7114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 003C
        gbc.setState(0x50bc, 0x8281, 0x5310, 0xe19d, 0xe775, 0xe0e3, 0x1, 0x1);
        gbc.writeMem(0x50bc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x8281);
        EXPECT(gbc.pc(), 0x50be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 003D
        gbc.setState(0x939a, 0x172a, 0xff10, 0x8b0d, 0xa46c, 0x4c62, 0x0, 0x1);
        gbc.writeMem(0x939a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x172a);
        EXPECT(gbc.pc(), 0x939c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x939a), 0xcb);
        EXPECT(gbc.readMem(0x939b), 0xe0);
        // CB E0 003E
        gbc.setState(0x3e1c, 0x2e5d, 0xe470, 0x846d, 0x167d, 0x96fa, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0x3e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 003F
        gbc.setState(0xb164, 0x1a36, 0xbf10, 0xab19, 0xab6b, 0x4c2e, 0x1, 0x0);
        gbc.writeMem(0xb164, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1a36);
        EXPECT(gbc.pc(), 0xb166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb164), 0xcb);
        EXPECT(gbc.readMem(0xb165), 0xe0);
        // CB E0 0040
        gbc.setState(0x64bd, 0x8517, 0x40d0, 0xd85d, 0x6453, 0xca13, 0x1, 0x1);
        gbc.writeMem(0x64bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8517);
        EXPECT(gbc.pc(), 0x64bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0041
        gbc.setState(0x5d88, 0x1ae7, 0x3160, 0xde3a, 0x14fa, 0xf1db, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1ae7);
        EXPECT(gbc.pc(), 0x5d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0042
        gbc.setState(0xaaf5, 0x1152, 0x8810, 0xf79d, 0x43d1, 0x6535, 0x0, 0x1);
        gbc.writeMem(0xaaf5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1152);
        EXPECT(gbc.pc(), 0xaaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf5), 0xcb);
        EXPECT(gbc.readMem(0xaaf6), 0xe0);
        // CB E0 0043
        gbc.setState(0x76f7, 0xea2f, 0x68d0, 0x355a, 0xe6f1, 0x2191, 0x1, 0x1);
        gbc.writeMem(0x76f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xea2f);
        EXPECT(gbc.pc(), 0x76f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0044
        gbc.setState(0x4e99, 0x241, 0x8440, 0x707f, 0xbc26, 0xba68, 0x0, 0x1);
        gbc.writeMem(0x4e99, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x241);
        EXPECT(gbc.pc(), 0x4e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0045
        gbc.setState(0x6154, 0xc8e, 0x84a0, 0x45ba, 0x5b8b, 0xe1ab, 0x1, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc8e);
        EXPECT(gbc.pc(), 0x6156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0046
        gbc.setState(0xdf21, 0x7502, 0x6f30, 0xa361, 0x2bd2, 0xd3f7, 0x1, 0x0);
        gbc.writeMem(0xdf21, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x7502);
        EXPECT(gbc.pc(), 0xdf23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf21), 0xcb);
        EXPECT(gbc.readMem(0xdf22), 0xe0);
        // CB E0 0047
        gbc.setState(0xe440, 0x4471, 0xbe00, 0xef64, 0x230b, 0xc0a6, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4471);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe440), 0xcb);
        EXPECT(gbc.readMem(0xe441), 0xe0);
        // CB E0 0048
        gbc.setState(0xd86, 0xb921, 0x76e0, 0x41b6, 0x87a2, 0x7b51, 0x1, 0x1);
        gbc.writeMem(0xd86, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb921);
        EXPECT(gbc.pc(), 0xd88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0049
        gbc.setState(0xe209, 0x714e, 0xa530, 0x581b, 0xdcf9, 0x1dce, 0x0, 0x0);
        gbc.writeMem(0xe209, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x714e);
        EXPECT(gbc.pc(), 0xe20b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe209), 0xcb);
        EXPECT(gbc.readMem(0xe20a), 0xe0);
        // CB E0 004A
        gbc.setState(0x3fc7, 0x9113, 0x4f60, 0xf1e, 0x215f, 0xf4c5, 0x1, 0x0);
        gbc.writeMem(0x3fc7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9113);
        EXPECT(gbc.pc(), 0x3fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 004B
        gbc.setState(0x6c09, 0x6066, 0x3c50, 0xec43, 0x3ac0, 0xea59, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6066);
        EXPECT(gbc.pc(), 0x6c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 004C
        gbc.setState(0x754a, 0x1842, 0x6da0, 0xe4d2, 0x84b8, 0x867c, 0x0, 0x1);
        gbc.writeMem(0x754a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1842);
        EXPECT(gbc.pc(), 0x754c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 004D
        gbc.setState(0x21ad, 0x66c5, 0xd900, 0x567e, 0x16d6, 0x86b4, 0x1, 0x0);
        gbc.writeMem(0x21ad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x66c5);
        EXPECT(gbc.pc(), 0x21af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 004E
        gbc.setState(0x5095, 0xb13e, 0x920, 0xf037, 0xdd51, 0x2baa, 0x0, 0x1);
        gbc.writeMem(0x5095, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb13e);
        EXPECT(gbc.pc(), 0x5097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 004F
        gbc.setState(0x344a, 0x9e44, 0xb6f0, 0x58a8, 0x3958, 0xf45e, 0x1, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9e44);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0050
        gbc.setState(0x4fef, 0x221d, 0x7a70, 0x562e, 0x35c3, 0x1c04, 0x0, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x221d);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0051
        gbc.setState(0x5e96, 0x6d1b, 0xc430, 0x57f, 0x3dc6, 0x1999, 0x0, 0x0);
        gbc.writeMem(0x5e96, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6d1b);
        EXPECT(gbc.pc(), 0x5e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0052
        gbc.setState(0x46a4, 0x47e8, 0xd3c0, 0xe202, 0xf18f, 0x4f2a, 0x0, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x47e8);
        EXPECT(gbc.pc(), 0x46a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0053
        gbc.setState(0x6334, 0xc7fa, 0xfd90, 0xbe5a, 0x3131, 0xb705, 0x1, 0x0);
        gbc.writeMem(0x6334, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xc7fa);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0054
        gbc.setState(0xea97, 0xf28, 0x6cd0, 0xe740, 0x8bbf, 0x4d97, 0x0, 0x0);
        gbc.writeMem(0xea97, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf28);
        EXPECT(gbc.pc(), 0xea99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea97), 0xcb);
        EXPECT(gbc.readMem(0xea98), 0xe0);
        // CB E0 0055
        gbc.setState(0xf, 0x9b7f, 0xf340, 0x844, 0xb2d3, 0x662f, 0x1, 0x0);
        gbc.writeMem(0xf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9b7f);
        EXPECT(gbc.pc(), 0x11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0057
        gbc.setState(0x9bef, 0x1c6f, 0x7f80, 0xe73d, 0x10c9, 0xf903, 0x0, 0x1);
        gbc.writeMem(0x9bef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1c6f);
        EXPECT(gbc.pc(), 0x9bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bef), 0xcb);
        EXPECT(gbc.readMem(0x9bf0), 0xe0);
        // CB E0 0059
        gbc.setState(0xcab8, 0x4190, 0x420, 0x3aa2, 0xcf83, 0xdadf, 0x0, 0x0);
        gbc.writeMem(0xcab8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4190);
        EXPECT(gbc.pc(), 0xcaba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcab8), 0xcb);
        EXPECT(gbc.readMem(0xcab9), 0xe0);
        // CB E0 005A
        gbc.setState(0x7586, 0x76f8, 0xa250, 0x1060, 0x3c07, 0x176e, 0x0, 0x1);
        gbc.writeMem(0x7586, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0x7588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 005B
        gbc.setState(0x8ea6, 0x937b, 0x9200, 0x26f9, 0xdb2b, 0x5921, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x937b);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea6), 0xcb);
        EXPECT(gbc.readMem(0x8ea7), 0xe0);
        // CB E0 005C
        gbc.setState(0xa63, 0x71af, 0x5400, 0x4244, 0x20dd, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0xa63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x71af);
        EXPECT(gbc.pc(), 0xa65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 005E
        gbc.setState(0xbf34, 0xe2a1, 0xf310, 0xab45, 0x37df, 0x82b8, 0x1, 0x0);
        gbc.writeMem(0xbf34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe2a1);
        EXPECT(gbc.pc(), 0xbf36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf34), 0xcb);
        EXPECT(gbc.readMem(0xbf35), 0xe0);
        // CB E0 005F
        gbc.setState(0x4b64, 0x59a9, 0x1850, 0x5b1d, 0x11, 0x7662, 0x0, 0x0);
        gbc.writeMem(0x4b64, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x59a9);
        EXPECT(gbc.pc(), 0x4b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0061
        gbc.setState(0x48d8, 0xa242, 0x9f70, 0x4fcb, 0x2444, 0x6d1f, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa242);
        EXPECT(gbc.pc(), 0x48da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0063
        gbc.setState(0xabe5, 0xfe0c, 0x7f60, 0x65b7, 0x7031, 0xcf4c, 0x0, 0x1);
        gbc.writeMem(0xabe5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xfe0c);
        EXPECT(gbc.pc(), 0xabe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe5), 0xcb);
        EXPECT(gbc.readMem(0xabe6), 0xe0);
        // CB E0 0064
        gbc.setState(0x6231, 0x1da9, 0x560, 0x52f4, 0x2666, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x6231, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1da9);
        EXPECT(gbc.pc(), 0x6233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0065
        gbc.setState(0x2dc3, 0xab58, 0x8f40, 0x6397, 0xc32c, 0x9341, 0x1, 0x1);
        gbc.writeMem(0x2dc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xab58);
        EXPECT(gbc.pc(), 0x2dc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0066
        gbc.setState(0x1160, 0xc90a, 0xdb00, 0x332d, 0x9b7a, 0xe74b, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc90a);
        EXPECT(gbc.pc(), 0x1162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0067
        gbc.setState(0x70f, 0x9629, 0x3bb0, 0x2861, 0x8268, 0x9ed5, 0x1, 0x1);
        gbc.writeMem(0x70f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9629);
        EXPECT(gbc.pc(), 0x711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0068
        gbc.setState(0xeca5, 0x17e9, 0x74f0, 0xd301, 0xbbd1, 0xde16, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x17e9);
        EXPECT(gbc.pc(), 0xeca7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca5), 0xcb);
        EXPECT(gbc.readMem(0xeca6), 0xe0);
        // CB E0 0069
        gbc.setState(0xada7, 0xd0ec, 0x7b50, 0xafbe, 0x5586, 0xe15b, 0x0, 0x0);
        gbc.writeMem(0xada7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd0ec);
        EXPECT(gbc.pc(), 0xada9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xada7), 0xcb);
        EXPECT(gbc.readMem(0xada8), 0xe0);
        // CB E0 006A
        gbc.setState(0x1fa2, 0x956, 0x1a00, 0x8300, 0x338b, 0xce92, 0x0, 0x1);
        gbc.writeMem(0x1fa2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x956);
        EXPECT(gbc.pc(), 0x1fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 006B
        gbc.setState(0x777e, 0x9d37, 0x4f50, 0x1852, 0xbd29, 0xfbb, 0x0, 0x0);
        gbc.writeMem(0x777e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9d37);
        EXPECT(gbc.pc(), 0x7780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 006C
        gbc.setState(0x840b, 0xfac2, 0x6560, 0xe7b0, 0xce87, 0x1fa7, 0x1, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xfac2);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0xe0);
        // CB E0 006D
        gbc.setState(0xb175, 0xda8e, 0x8700, 0x2b19, 0x589, 0x8901, 0x1, 0x1);
        gbc.writeMem(0xb175, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xda8e);
        EXPECT(gbc.pc(), 0xb177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb175), 0xcb);
        EXPECT(gbc.readMem(0xb176), 0xe0);
        // CB E0 006E
        gbc.setState(0x23a5, 0xb222, 0xe420, 0x541, 0x3613, 0x447, 0x1, 0x0);
        gbc.writeMem(0x23a5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb222);
        EXPECT(gbc.pc(), 0x23a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 006F
        gbc.setState(0x5fc4, 0xd0a9, 0x93d0, 0xb939, 0x44f4, 0xe17f, 0x1, 0x1);
        gbc.writeMem(0x5fc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0x5fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0070
        gbc.setState(0x3580, 0x85c, 0x38c0, 0x8370, 0x3a6b, 0x27, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x85c);
        EXPECT(gbc.pc(), 0x3582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0071
        gbc.setState(0xe8d5, 0xa551, 0xf300, 0x980e, 0x7be3, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0xe8d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa551);
        EXPECT(gbc.pc(), 0xe8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8d5), 0xcb);
        EXPECT(gbc.readMem(0xe8d6), 0xe0);
        // CB E0 0072
        gbc.setState(0xe8cb, 0x3db5, 0x1ea0, 0xd27c, 0xf5e5, 0xe4bd, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3db5);
        EXPECT(gbc.pc(), 0xe8cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cb), 0xcb);
        EXPECT(gbc.readMem(0xe8cc), 0xe0);
        // CB E0 0073
        gbc.setState(0x4ca8, 0x29dd, 0x4930, 0x36b6, 0x3a5b, 0xf14c, 0x1, 0x1);
        gbc.writeMem(0x4ca8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x29dd);
        EXPECT(gbc.pc(), 0x4caa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0074
        gbc.setState(0x4330, 0x6338, 0x9080, 0xe142, 0x4562, 0xd0b0, 0x1, 0x1);
        gbc.writeMem(0x4330, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6338);
        EXPECT(gbc.pc(), 0x4332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0075
        gbc.setState(0x35fb, 0x6613, 0xd500, 0xe647, 0x2e22, 0x75b5, 0x0, 0x1);
        gbc.writeMem(0x35fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6613);
        EXPECT(gbc.pc(), 0x35fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0076
        gbc.setState(0xcb1a, 0x6817, 0x6220, 0xf544, 0xcf34, 0x634c, 0x1, 0x0);
        gbc.writeMem(0xcb1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6817);
        EXPECT(gbc.pc(), 0xcb1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb1a), 0xcb);
        EXPECT(gbc.readMem(0xcb1b), 0xe0);
        // CB E0 0077
        gbc.setState(0xbf8f, 0xb0b4, 0xc560, 0x4871, 0xeab8, 0x5a91, 0x0, 0x0);
        gbc.writeMem(0xbf8f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb0b4);
        EXPECT(gbc.pc(), 0xbf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf8f), 0xcb);
        EXPECT(gbc.readMem(0xbf90), 0xe0);
        // CB E0 0078
        gbc.setState(0x66c4, 0xe0d3, 0xd160, 0xc55f, 0xc594, 0xce3c, 0x1, 0x0);
        gbc.writeMem(0x66c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe0d3);
        EXPECT(gbc.pc(), 0x66c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0079
        gbc.setState(0x6b76, 0x895, 0xeb90, 0x94b0, 0x22a8, 0x1820, 0x0, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x895);
        EXPECT(gbc.pc(), 0x6b78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 007A
        gbc.setState(0x8f39, 0xfd4e, 0x53e0, 0x1c53, 0x51f, 0xd2e6, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xfd4e);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0xe0);
        // CB E0 007B
        gbc.setState(0x5140, 0xf1e5, 0x4b80, 0xe343, 0xb781, 0x723, 0x0, 0x1);
        gbc.writeMem(0x5140, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf1e5);
        EXPECT(gbc.pc(), 0x5142);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 007C
        gbc.setState(0x7e44, 0x3908, 0xde70, 0x7c22, 0x9f37, 0xd183, 0x1, 0x1);
        gbc.writeMem(0x7e44, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3908);
        EXPECT(gbc.pc(), 0x7e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 007D
        gbc.setState(0x9413, 0xeaee, 0x7de0, 0x9b59, 0x194c, 0xf405, 0x1, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xeaee);
        EXPECT(gbc.pc(), 0x9415);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9413), 0xcb);
        EXPECT(gbc.readMem(0x9414), 0xe0);
        // CB E0 007E
        gbc.setState(0xbbd4, 0xaf9, 0x5150, 0x8f66, 0x1868, 0x9da, 0x1, 0x0);
        gbc.writeMem(0xbbd4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xaf9);
        EXPECT(gbc.pc(), 0xbbd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbd4), 0xcb);
        EXPECT(gbc.readMem(0xbbd5), 0xe0);
        // CB E0 007F
        gbc.setState(0x201a, 0x4f57, 0x84c0, 0xf5e, 0xa3a9, 0x69e, 0x0, 0x0);
        gbc.writeMem(0x201a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4f57);
        EXPECT(gbc.pc(), 0x201c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0080
        gbc.setState(0x604a, 0x15fb, 0x4860, 0x3820, 0xb692, 0xbeeb, 0x0, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x15fb);
        EXPECT(gbc.pc(), 0x604c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0081
        gbc.setState(0x46fd, 0x664, 0xd410, 0xdea, 0x7bc7, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0x46fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x664);
        EXPECT(gbc.pc(), 0x46ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0082
        gbc.setState(0xd969, 0x74ee, 0x1080, 0xf0f6, 0x6970, 0x285f, 0x0, 0x0);
        gbc.writeMem(0xd969, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0xd96b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd969), 0xcb);
        EXPECT(gbc.readMem(0xd96a), 0xe0);
        // CB E0 0083
        gbc.setState(0xa031, 0x530e, 0xe4a0, 0x4c38, 0xab78, 0x47e6, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x530e);
        EXPECT(gbc.pc(), 0xa033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa031), 0xcb);
        EXPECT(gbc.readMem(0xa032), 0xe0);
        // CB E0 0084
        gbc.setState(0xad38, 0x7cb7, 0xa520, 0x75f7, 0xa0ab, 0x6dbd, 0x1, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7cb7);
        EXPECT(gbc.pc(), 0xad3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad38), 0xcb);
        EXPECT(gbc.readMem(0xad39), 0xe0);
        // CB E0 0085
        gbc.setState(0x2fc9, 0x51fe, 0x4e40, 0xe503, 0xa5b, 0x33d1, 0x0, 0x0);
        gbc.writeMem(0x2fc9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x51fe);
        EXPECT(gbc.pc(), 0x2fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0087
        gbc.setState(0x5e65, 0x24b9, 0xd40, 0x3c4e, 0x8a26, 0x46bf, 0x0, 0x0);
        gbc.writeMem(0x5e65, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x24b9);
        EXPECT(gbc.pc(), 0x5e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0088
        gbc.setState(0xebde, 0xbb9b, 0x5c60, 0x2a61, 0x6b, 0x68c, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbb9b);
        EXPECT(gbc.pc(), 0xebe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebde), 0xcb);
        EXPECT(gbc.readMem(0xebdf), 0xe0);
        // CB E0 0089
        gbc.setState(0xa56, 0x2028, 0x6350, 0x9162, 0xc69f, 0xec1a, 0x1, 0x1);
        gbc.writeMem(0xa56, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2028);
        EXPECT(gbc.pc(), 0xa58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 008A
        gbc.setState(0xceed, 0xb0de, 0x9f0, 0x9370, 0xcc5d, 0xfc00, 0x1, 0x0);
        gbc.writeMem(0xceed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb0de);
        EXPECT(gbc.pc(), 0xceef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceed), 0xcb);
        EXPECT(gbc.readMem(0xceee), 0xe0);
        // CB E0 008B
        gbc.setState(0x25f8, 0x34fa, 0xd7a0, 0x5e93, 0x373b, 0x3fe4, 0x1, 0x1);
        gbc.writeMem(0x25f8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x34fa);
        EXPECT(gbc.pc(), 0x25fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 008C
        gbc.setState(0x2c8, 0x6eff, 0xf7c0, 0x3e5e, 0x23d0, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x2c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6eff);
        EXPECT(gbc.pc(), 0x2ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 008D
        gbc.setState(0x1463, 0xfa3d, 0xc300, 0x6820, 0xc6ce, 0xb63a, 0x0, 0x1);
        gbc.writeMem(0x1463, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xfa3d);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 008E
        gbc.setState(0x6588, 0xa27, 0xe480, 0x1aee, 0x2569, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x6588, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0x658a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 008F
        gbc.setState(0x305d, 0xa1c5, 0xc600, 0xf8b1, 0x26d1, 0x79fa, 0x1, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa1c5);
        EXPECT(gbc.pc(), 0x305f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0090
        gbc.setState(0xba68, 0x3e3d, 0xd060, 0xd3bb, 0xb647, 0x8867, 0x0, 0x0);
        gbc.writeMem(0xba68, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3e3d);
        EXPECT(gbc.pc(), 0xba6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba68), 0xcb);
        EXPECT(gbc.readMem(0xba69), 0xe0);
        // CB E0 0091
        gbc.setState(0xef04, 0xd0be, 0x3f50, 0x6554, 0x77d, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0xef04, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd0be);
        EXPECT(gbc.pc(), 0xef06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef04), 0xcb);
        EXPECT(gbc.readMem(0xef05), 0xe0);
        // CB E0 0092
        gbc.setState(0x6f94, 0x8dca, 0xec90, 0x6168, 0xc798, 0x8147, 0x1, 0x0);
        gbc.writeMem(0x6f94, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8dca);
        EXPECT(gbc.pc(), 0x6f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0093
        gbc.setState(0xae81, 0xdc9f, 0x5aa0, 0xf091, 0x9b08, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0xae81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xdc9f);
        EXPECT(gbc.pc(), 0xae83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae81), 0xcb);
        EXPECT(gbc.readMem(0xae82), 0xe0);
        // CB E0 0094
        gbc.setState(0x92e6, 0xf079, 0x2500, 0x5147, 0x7ca6, 0xbc1a, 0x0, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf079);
        EXPECT(gbc.pc(), 0x92e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92e6), 0xcb);
        EXPECT(gbc.readMem(0x92e7), 0xe0);
        // CB E0 0095
        gbc.setState(0x66db, 0x8427, 0x35d0, 0x5330, 0x6e33, 0x23b4, 0x1, 0x1);
        gbc.writeMem(0x66db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0x66dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0096
        gbc.setState(0xb933, 0xef04, 0x3f70, 0x38c6, 0x5651, 0xe0e2, 0x1, 0x1);
        gbc.writeMem(0xb933, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xef04);
        EXPECT(gbc.pc(), 0xb935);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb933), 0xcb);
        EXPECT(gbc.readMem(0xb934), 0xe0);
        // CB E0 0097
        gbc.setState(0x3f10, 0x702e, 0xd180, 0x31b9, 0xd876, 0xa5bd, 0x0, 0x0);
        gbc.writeMem(0x3f10, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x702e);
        EXPECT(gbc.pc(), 0x3f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0098
        gbc.setState(0x8c66, 0xdf2d, 0xb080, 0xe75e, 0x32c6, 0x28e8, 0x1, 0x1);
        gbc.writeMem(0x8c66, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdf2d);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c66), 0xcb);
        EXPECT(gbc.readMem(0x8c67), 0xe0);
        // CB E0 0099
        gbc.setState(0x95cb, 0x9c24, 0x5500, 0xb135, 0x305d, 0x6a36, 0x0, 0x1);
        gbc.writeMem(0x95cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9c24);
        EXPECT(gbc.pc(), 0x95cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95cb), 0xcb);
        EXPECT(gbc.readMem(0x95cc), 0xe0);
        // CB E0 009A
        gbc.setState(0xdd79, 0x7103, 0x79f0, 0x64ff, 0x3be3, 0xf613, 0x1, 0x0);
        gbc.writeMem(0xdd79, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7103);
        EXPECT(gbc.pc(), 0xdd7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd79), 0xcb);
        EXPECT(gbc.readMem(0xdd7a), 0xe0);
        // CB E0 009B
        gbc.setState(0xaf14, 0x1191, 0x82e0, 0xfd4, 0x3a4c, 0x3a9, 0x0, 0x0);
        gbc.writeMem(0xaf14, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x1191);
        EXPECT(gbc.pc(), 0xaf16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf14), 0xcb);
        EXPECT(gbc.readMem(0xaf15), 0xe0);
        // CB E0 009C
        gbc.setState(0x8884, 0x14f6, 0x6370, 0xc364, 0x2533, 0x67fe, 0x1, 0x0);
        gbc.writeMem(0x8884, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x14f6);
        EXPECT(gbc.pc(), 0x8886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8884), 0xcb);
        EXPECT(gbc.readMem(0x8885), 0xe0);
        // CB E0 009D
        gbc.setState(0x5780, 0x9b6a, 0xa840, 0x7cd0, 0x1271, 0x7c3e, 0x1, 0x1);
        gbc.writeMem(0x5780, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x9b6a);
        EXPECT(gbc.pc(), 0x5782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 009E
        gbc.setState(0x1cfc, 0xb24a, 0x99b0, 0x4975, 0xfc15, 0x569c, 0x1, 0x0);
        gbc.writeMem(0x1cfc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb24a);
        EXPECT(gbc.pc(), 0x1cfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 009F
        gbc.setState(0x3357, 0xe83f, 0x34c0, 0xfc1a, 0x6ef2, 0x5392, 0x0, 0x1);
        gbc.writeMem(0x3357, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe83f);
        EXPECT(gbc.pc(), 0x3359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00A0
        gbc.setState(0x64f4, 0x1fbe, 0xc8a0, 0xfc70, 0x578b, 0x6af5, 0x0, 0x0);
        gbc.writeMem(0x64f4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1fbe);
        EXPECT(gbc.pc(), 0x64f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00A1
        gbc.setState(0x9093, 0xc2c1, 0x7fb0, 0xe08b, 0x18d2, 0x3c6d, 0x1, 0x1);
        gbc.writeMem(0x9093, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc2c1);
        EXPECT(gbc.pc(), 0x9095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9093), 0xcb);
        EXPECT(gbc.readMem(0x9094), 0xe0);
        // CB E0 00A2
        gbc.setState(0x3cf, 0x3a60, 0xd9a0, 0xebe2, 0x8151, 0xbcef, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3a60);
        EXPECT(gbc.pc(), 0x3d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00A3
        gbc.setState(0x65be, 0xe2a7, 0x17f0, 0xe775, 0xf4e9, 0xbce3, 0x1, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe2a7);
        EXPECT(gbc.pc(), 0x65c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00A4
        gbc.setState(0xbdac, 0x4cb, 0xe1b0, 0x40ac, 0x908f, 0xfb62, 0x1, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4cb);
        EXPECT(gbc.pc(), 0xbdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdac), 0xcb);
        EXPECT(gbc.readMem(0xbdad), 0xe0);
        // CB E0 00A5
        gbc.setState(0x5ba7, 0x6dd1, 0x4650, 0xbb9a, 0xac41, 0x6980, 0x0, 0x1);
        gbc.writeMem(0x5ba7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6dd1);
        EXPECT(gbc.pc(), 0x5ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00A6
        gbc.setState(0x1ec2, 0xc0ce, 0xc6c0, 0x1947, 0xca67, 0x589e, 0x1, 0x1);
        gbc.writeMem(0x1ec2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc0ce);
        EXPECT(gbc.pc(), 0x1ec4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00A7
        gbc.setState(0x4dc4, 0x2af8, 0xef50, 0x5148, 0x936d, 0x7ea0, 0x0, 0x1);
        gbc.writeMem(0x4dc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2af8);
        EXPECT(gbc.pc(), 0x4dc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00A8
        gbc.setState(0x99fc, 0xf40b, 0xaf0, 0x6e04, 0xff1f, 0xdfbe, 0x1, 0x0);
        gbc.writeMem(0x99fc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf40b);
        EXPECT(gbc.pc(), 0x99fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fc), 0xcb);
        EXPECT(gbc.readMem(0x99fd), 0xe0);
        // CB E0 00A9
        gbc.setState(0xbc8b, 0xeafc, 0x5890, 0x92b5, 0xb63c, 0xa0c1, 0x1, 0x1);
        gbc.writeMem(0xbc8b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xeafc);
        EXPECT(gbc.pc(), 0xbc8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc8b), 0xcb);
        EXPECT(gbc.readMem(0xbc8c), 0xe0);
        // CB E0 00AA
        gbc.setState(0xc846, 0x1785, 0xaa40, 0xf0e0, 0x1576, 0x714, 0x1, 0x1);
        gbc.writeMem(0xc846, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1785);
        EXPECT(gbc.pc(), 0xc848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc846), 0xcb);
        EXPECT(gbc.readMem(0xc847), 0xe0);
        // CB E0 00AB
        gbc.setState(0x448c, 0x59de, 0x96e0, 0x37eb, 0xbc0f, 0xeb47, 0x0, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x59de);
        EXPECT(gbc.pc(), 0x448e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00AC
        gbc.setState(0x2aae, 0xd7d1, 0x3ae0, 0xf947, 0x2f59, 0xc745, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd7d1);
        EXPECT(gbc.pc(), 0x2ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00AD
        gbc.setState(0x5a03, 0xe1b2, 0xd980, 0x5f50, 0x6412, 0x98ab, 0x0, 0x0);
        gbc.writeMem(0x5a03, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe1b2);
        EXPECT(gbc.pc(), 0x5a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00AE
        gbc.setState(0x83b3, 0xeb47, 0x5490, 0x9099, 0xe590, 0x947b, 0x1, 0x0);
        gbc.writeMem(0x83b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeb47);
        EXPECT(gbc.pc(), 0x83b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83b3), 0xcb);
        EXPECT(gbc.readMem(0x83b4), 0xe0);
        // CB E0 00AF
        gbc.setState(0xd5f6, 0xe855, 0x3210, 0x8807, 0x712c, 0x31b2, 0x1, 0x0);
        gbc.writeMem(0xd5f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe855);
        EXPECT(gbc.pc(), 0xd5f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5f6), 0xcb);
        EXPECT(gbc.readMem(0xd5f7), 0xe0);
        // CB E0 00B0
        gbc.setState(0x4bcd, 0xced, 0x3910, 0xd60d, 0xbc13, 0x7cd9, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xced);
        EXPECT(gbc.pc(), 0x4bcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00B1
        gbc.setState(0x1c68, 0xcdff, 0x5410, 0xe7f2, 0x329e, 0x341d, 0x1, 0x1);
        gbc.writeMem(0x1c68, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcdff);
        EXPECT(gbc.pc(), 0x1c6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00B2
        gbc.setState(0xab1c, 0x8401, 0x8ca0, 0xcb0f, 0x63f0, 0x93a2, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8401);
        EXPECT(gbc.pc(), 0xab1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1c), 0xcb);
        EXPECT(gbc.readMem(0xab1d), 0xe0);
        // CB E0 00B3
        gbc.setState(0x3e13, 0x4c9f, 0x4cd0, 0x4283, 0xb056, 0x38cb, 0x1, 0x0);
        gbc.writeMem(0x3e13, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4c9f);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00B4
        gbc.setState(0xceee, 0x1d7d, 0x8930, 0x7f48, 0xde78, 0x8f87, 0x1, 0x1);
        gbc.writeMem(0xceee, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1d7d);
        EXPECT(gbc.pc(), 0xcef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceee), 0xcb);
        EXPECT(gbc.readMem(0xceef), 0xe0);
        // CB E0 00B5
        gbc.setState(0x8ad1, 0xfce9, 0xd980, 0x2ed0, 0x6849, 0xbede, 0x1, 0x1);
        gbc.writeMem(0x8ad1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfce9);
        EXPECT(gbc.pc(), 0x8ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ad1), 0xcb);
        EXPECT(gbc.readMem(0x8ad2), 0xe0);
        // CB E0 00B6
        gbc.setState(0x1bd8, 0xd5ff, 0x7ae0, 0x2735, 0xf778, 0x7ef3, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd5ff);
        EXPECT(gbc.pc(), 0x1bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00B7
        gbc.setState(0x7ba9, 0x2c44, 0x67b0, 0x9350, 0xab9d, 0x9e42, 0x1, 0x0);
        gbc.writeMem(0x7ba9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2c44);
        EXPECT(gbc.pc(), 0x7bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00B8
        gbc.setState(0x11aa, 0x4a2d, 0x36f0, 0x7982, 0x6a52, 0x25a5, 0x1, 0x0);
        gbc.writeMem(0x11aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4a2d);
        EXPECT(gbc.pc(), 0x11ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00B9
        gbc.setState(0xec2d, 0xa94b, 0x1d10, 0xc29e, 0x8eaf, 0xfa4d, 0x0, 0x0);
        gbc.writeMem(0xec2d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xa94b);
        EXPECT(gbc.pc(), 0xec2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec2d), 0xcb);
        EXPECT(gbc.readMem(0xec2e), 0xe0);
        // CB E0 00BA
        gbc.setState(0xbfc6, 0xfdb3, 0x9160, 0xb4f4, 0xbcd1, 0xfd1e, 0x0, 0x0);
        gbc.writeMem(0xbfc6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfdb3);
        EXPECT(gbc.pc(), 0xbfc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc6), 0xcb);
        EXPECT(gbc.readMem(0xbfc7), 0xe0);
        // CB E0 00BB
        gbc.setState(0x5809, 0xb44b, 0xb230, 0xeb3e, 0x60e9, 0x18e3, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb44b);
        EXPECT(gbc.pc(), 0x580b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00BC
        gbc.setState(0xd2ae, 0xa1e9, 0xe9e0, 0x745e, 0x9f43, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0xd2ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa1e9);
        EXPECT(gbc.pc(), 0xd2b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ae), 0xcb);
        EXPECT(gbc.readMem(0xd2af), 0xe0);
        // CB E0 00BD
        gbc.setState(0x43df, 0xdcc5, 0xcdd0, 0x7af4, 0xa19f, 0xa1c6, 0x1, 0x1);
        gbc.writeMem(0x43df, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xdcc5);
        EXPECT(gbc.pc(), 0x43e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00BE
        gbc.setState(0x46d7, 0x2e4d, 0xcb80, 0x48ff, 0x7034, 0xcf35, 0x1, 0x0);
        gbc.writeMem(0x46d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2e4d);
        EXPECT(gbc.pc(), 0x46d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00BF
        gbc.setState(0x79b8, 0xaad8, 0x4dd0, 0x5754, 0x7566, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0x79b8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xaad8);
        EXPECT(gbc.pc(), 0x79ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00C0
        gbc.setState(0x1864, 0x9198, 0xbe40, 0x5f38, 0xfe1e, 0xdfb, 0x0, 0x1);
        gbc.writeMem(0x1864, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9198);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00C1
        gbc.setState(0x5689, 0xc119, 0x17d0, 0xf75d, 0xb238, 0xc3d5, 0x1, 0x1);
        gbc.writeMem(0x5689, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc119);
        EXPECT(gbc.pc(), 0x568b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00C2
        gbc.setState(0xa9d, 0xf1c3, 0xf3b0, 0xe587, 0x487d, 0x5cb5, 0x1, 0x1);
        gbc.writeMem(0xa9d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf1c3);
        EXPECT(gbc.pc(), 0xa9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00C3
        gbc.setState(0xf35, 0xf1ff, 0xf8a0, 0xe5bb, 0xf4f, 0x3dc7, 0x1, 0x0);
        gbc.writeMem(0xf35, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf1ff);
        EXPECT(gbc.pc(), 0xf37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00C4
        gbc.setState(0x4ce9, 0xdc96, 0xa960, 0x5bd2, 0x76ea, 0x4cbc, 0x0, 0x1);
        gbc.writeMem(0x4ce9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdc96);
        EXPECT(gbc.pc(), 0x4ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00C5
        gbc.setState(0x6028, 0xd655, 0xaee0, 0xc434, 0xb421, 0x7428, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd655);
        EXPECT(gbc.pc(), 0x602a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00C6
        gbc.setState(0x4d99, 0x4ae5, 0xa040, 0x4bcb, 0x98bb, 0xede8, 0x1, 0x0);
        gbc.writeMem(0x4d99, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4ae5);
        EXPECT(gbc.pc(), 0x4d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00C7
        gbc.setState(0x8980, 0x2cbe, 0x7640, 0xe45c, 0xaa19, 0x6eef, 0x0, 0x1);
        gbc.writeMem(0x8980, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2cbe);
        EXPECT(gbc.pc(), 0x8982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8980), 0xcb);
        EXPECT(gbc.readMem(0x8981), 0xe0);
        // CB E0 00C8
        gbc.setState(0xaac0, 0x431a, 0xa70, 0x4548, 0xeecc, 0xb1ee, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x431a);
        EXPECT(gbc.pc(), 0xaac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaac0), 0xcb);
        EXPECT(gbc.readMem(0xaac1), 0xe0);
        // CB E0 00C9
        gbc.setState(0x6322, 0x656, 0x2320, 0x4903, 0x5999, 0xe91c, 0x0, 0x1);
        gbc.writeMem(0x6322, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x656);
        EXPECT(gbc.pc(), 0x6324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00CA
        gbc.setState(0x8123, 0xa5a9, 0x7e60, 0xd0d7, 0x4c34, 0x9ca7, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa5a9);
        EXPECT(gbc.pc(), 0x8125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8123), 0xcb);
        EXPECT(gbc.readMem(0x8124), 0xe0);
        // CB E0 00CB
        gbc.setState(0x6ea6, 0xb236, 0x2790, 0xe4d9, 0x84d4, 0x68d0, 0x1, 0x1);
        gbc.writeMem(0x6ea6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xb236);
        EXPECT(gbc.pc(), 0x6ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00CC
        gbc.setState(0x22cc, 0x7b8e, 0xd530, 0xd6f0, 0x4cd, 0x125d, 0x1, 0x1);
        gbc.writeMem(0x22cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7b8e);
        EXPECT(gbc.pc(), 0x22ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00CD
        gbc.setState(0x803e, 0x561f, 0x4ef0, 0x3b4f, 0x449b, 0x239a, 0x0, 0x0);
        gbc.writeMem(0x803e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x561f);
        EXPECT(gbc.pc(), 0x8040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803e), 0xcb);
        EXPECT(gbc.readMem(0x803f), 0xe0);
        // CB E0 00CE
        gbc.setState(0x12fb, 0xa890, 0xbac0, 0x152a, 0xc7f0, 0x7c2, 0x0, 0x0);
        gbc.writeMem(0x12fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa890);
        EXPECT(gbc.pc(), 0x12fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00CF
        gbc.setState(0x5824, 0x27aa, 0xb770, 0xfb09, 0xe797, 0xf598, 0x1, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x27aa);
        EXPECT(gbc.pc(), 0x5826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00D0
        gbc.setState(0xbedc, 0x2176, 0xe370, 0x7320, 0xc566, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2176);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbedc), 0xcb);
        EXPECT(gbc.readMem(0xbedd), 0xe0);
        // CB E0 00D1
        gbc.setState(0x3f78, 0x1c66, 0x32e0, 0xfe42, 0xf14c, 0x211b, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x1c66);
        EXPECT(gbc.pc(), 0x3f7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00D2
        gbc.setState(0xb704, 0x519f, 0xfff0, 0x881d, 0x31de, 0x99f4, 0x1, 0x0);
        gbc.writeMem(0xb704, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x519f);
        EXPECT(gbc.pc(), 0xb706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb704), 0xcb);
        EXPECT(gbc.readMem(0xb705), 0xe0);
        // CB E0 00D3
        gbc.setState(0x493f, 0x7255, 0x3d80, 0x6784, 0xf891, 0x3d58, 0x0, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7255);
        EXPECT(gbc.pc(), 0x4941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00D4
        gbc.setState(0x184c, 0x68d8, 0x2630, 0x3c68, 0x441f, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0x184c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x68d8);
        EXPECT(gbc.pc(), 0x184e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00D6
        gbc.setState(0xc439, 0xe905, 0x1230, 0x8c9c, 0x2700, 0x9f69, 0x1, 0x1);
        gbc.writeMem(0xc439, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe905);
        EXPECT(gbc.pc(), 0xc43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc439), 0xcb);
        EXPECT(gbc.readMem(0xc43a), 0xe0);
        // CB E0 00D7
        gbc.setState(0x1b36, 0x77a2, 0x8dd0, 0xedae, 0x9f84, 0x9b72, 0x1, 0x1);
        gbc.writeMem(0x1b36, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x77a2);
        EXPECT(gbc.pc(), 0x1b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00D8
        gbc.setState(0x1f1e, 0x356e, 0x7b0, 0x67ca, 0xc841, 0x6dfa, 0x0, 0x0);
        gbc.writeMem(0x1f1e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x356e);
        EXPECT(gbc.pc(), 0x1f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00D9
        gbc.setState(0xe017, 0xb170, 0x2ec0, 0x3a39, 0x87a0, 0xf68e, 0x1, 0x0);
        gbc.writeMem(0xe017, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0xe019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe017), 0xcb);
        EXPECT(gbc.readMem(0xe018), 0xe0);
        // CB E0 00DA
        gbc.setState(0xd32d, 0xa650, 0xcfd0, 0x69fe, 0x29a2, 0xd402, 0x0, 0x0);
        gbc.writeMem(0xd32d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa650);
        EXPECT(gbc.pc(), 0xd32f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd32d), 0xcb);
        EXPECT(gbc.readMem(0xd32e), 0xe0);
        // CB E0 00DB
        gbc.setState(0xd255, 0x3b80, 0x41d0, 0x5f1f, 0x3eef, 0x13a7, 0x1, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0xd257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd255), 0xcb);
        EXPECT(gbc.readMem(0xd256), 0xe0);
        // CB E0 00DD
        gbc.setState(0x2fdc, 0xf3b8, 0x79b0, 0x1fe5, 0x1060, 0x6d5, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xf3b8);
        EXPECT(gbc.pc(), 0x2fde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00DE
        gbc.setState(0x42cd, 0xf527, 0x3010, 0xcc6b, 0xd400, 0x8be9, 0x1, 0x0);
        gbc.writeMem(0x42cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf527);
        EXPECT(gbc.pc(), 0x42cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00DF
        gbc.setState(0xc792, 0x173f, 0x13c0, 0xb2db, 0xfa4d, 0xaf01, 0x0, 0x1);
        gbc.writeMem(0xc792, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x173f);
        EXPECT(gbc.pc(), 0xc794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc792), 0xcb);
        EXPECT(gbc.readMem(0xc793), 0xe0);
        // CB E0 00E0
        gbc.setState(0x5b53, 0x7ae1, 0xbf40, 0x68a5, 0x909, 0xf848, 0x1, 0x1);
        gbc.writeMem(0x5b53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7ae1);
        EXPECT(gbc.pc(), 0x5b55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00E1
        gbc.setState(0x27c3, 0x5b10, 0xd140, 0xc4a4, 0xa274, 0x7bdb, 0x1, 0x1);
        gbc.writeMem(0x27c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5b10);
        EXPECT(gbc.pc(), 0x27c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00E2
        gbc.setState(0xe127, 0xe023, 0xe9e0, 0xfef1, 0x8e40, 0x934e, 0x0, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe023);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe127), 0xcb);
        EXPECT(gbc.readMem(0xe128), 0xe0);
        // CB E0 00E3
        gbc.setState(0x237d, 0x2fab, 0x1ed0, 0x7f8e, 0x5e1b, 0x9f25, 0x1, 0x1);
        gbc.writeMem(0x237d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2fab);
        EXPECT(gbc.pc(), 0x237f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00E4
        gbc.setState(0x564d, 0xa9d7, 0x8cb0, 0x763f, 0xd958, 0xcce1, 0x1, 0x0);
        gbc.writeMem(0x564d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa9d7);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00E5
        gbc.setState(0x7c07, 0x45cf, 0xe200, 0x2438, 0xe56c, 0x66e8, 0x0, 0x0);
        gbc.writeMem(0x7c07, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x45cf);
        EXPECT(gbc.pc(), 0x7c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00E6
        gbc.setState(0xa489, 0x6c8c, 0xb2b0, 0x379d, 0x1bd6, 0xe6bb, 0x0, 0x1);
        gbc.writeMem(0xa489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6c8c);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa489), 0xcb);
        EXPECT(gbc.readMem(0xa48a), 0xe0);
        // CB E0 00E7
        gbc.setState(0x1127, 0x38ae, 0x67a0, 0x599b, 0x375e, 0x76f1, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x38ae);
        EXPECT(gbc.pc(), 0x1129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00E8
        gbc.setState(0x4e9b, 0x2665, 0x4430, 0x4f53, 0x3eba, 0x289f, 0x1, 0x1);
        gbc.writeMem(0x4e9b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2665);
        EXPECT(gbc.pc(), 0x4e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00E9
        gbc.setState(0xac7c, 0x7bf2, 0xc990, 0xe908, 0xc260, 0x15a1, 0x0, 0x1);
        gbc.writeMem(0xac7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x7bf2);
        EXPECT(gbc.pc(), 0xac7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7c), 0xcb);
        EXPECT(gbc.readMem(0xac7d), 0xe0);
        // CB E0 00EA
        gbc.setState(0xe9b3, 0x30af, 0x25c0, 0x13dc, 0xc37c, 0xe017, 0x0, 0x1);
        gbc.writeMem(0xe9b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x30af);
        EXPECT(gbc.pc(), 0xe9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b3), 0xcb);
        EXPECT(gbc.readMem(0xe9b4), 0xe0);
        // CB E0 00EB
        gbc.setState(0x9757, 0xcced, 0xe720, 0x8001, 0x8b2a, 0xdf7, 0x1, 0x0);
        gbc.writeMem(0x9757, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcced);
        EXPECT(gbc.pc(), 0x9759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9757), 0xcb);
        EXPECT(gbc.readMem(0x9758), 0xe0);
        // CB E0 00EC
        gbc.setState(0x3938, 0xabc7, 0x7860, 0xa942, 0x1b8c, 0x253c, 0x1, 0x1);
        gbc.writeMem(0x3938, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xabc7);
        EXPECT(gbc.pc(), 0x393a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00ED
        gbc.setState(0xad4d, 0xf3be, 0x4580, 0x74a4, 0xedc, 0x79a4, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xf3be);
        EXPECT(gbc.pc(), 0xad4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad4d), 0xcb);
        EXPECT(gbc.readMem(0xad4e), 0xe0);
        // CB E0 00EE
        gbc.setState(0x634b, 0x9f7f, 0x8550, 0x5505, 0xd18d, 0x5e74, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9f7f);
        EXPECT(gbc.pc(), 0x634d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00EF
        gbc.setState(0xd51a, 0x6e06, 0xf970, 0xdfb5, 0x5148, 0x2ac7, 0x1, 0x1);
        gbc.writeMem(0xd51a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x6e06);
        EXPECT(gbc.pc(), 0xd51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51a), 0xcb);
        EXPECT(gbc.readMem(0xd51b), 0xe0);
        // CB E0 00F0
        gbc.setState(0x5126, 0xb8b7, 0x8190, 0x96c, 0xa4f6, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0x5126, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb8b7);
        EXPECT(gbc.pc(), 0x5128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00F1
        gbc.setState(0x96f6, 0xafc8, 0xc030, 0xb11b, 0x5b26, 0xd604, 0x0, 0x0);
        gbc.writeMem(0x96f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xafc8);
        EXPECT(gbc.pc(), 0x96f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f6), 0xcb);
        EXPECT(gbc.readMem(0x96f7), 0xe0);
        // CB E0 00F2
        gbc.setState(0x3460, 0xaae7, 0x7a90, 0xdb3e, 0xb102, 0xb1d2, 0x1, 0x0);
        gbc.writeMem(0x3460, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaae7);
        EXPECT(gbc.pc(), 0x3462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00F3
        gbc.setState(0x6d7d, 0x7274, 0xfbc0, 0x5b79, 0xb884, 0x36ae, 0x0, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7274);
        EXPECT(gbc.pc(), 0x6d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00F4
        gbc.setState(0x51c2, 0xe831, 0xf670, 0x842c, 0x82c5, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0x51c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe831);
        EXPECT(gbc.pc(), 0x51c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 00F6
        gbc.setState(0x82fb, 0x3a26, 0x15c0, 0x491a, 0x7a70, 0x76b0, 0x0, 0x0);
        gbc.writeMem(0x82fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3a26);
        EXPECT(gbc.pc(), 0x82fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82fb), 0xcb);
        EXPECT(gbc.readMem(0x82fc), 0xe0);
        // CB E0 00F7
        gbc.setState(0x76c3, 0xb012, 0x2820, 0x1752, 0x30be, 0x15d5, 0x1, 0x0);
        gbc.writeMem(0x76c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb012);
        EXPECT(gbc.pc(), 0x76c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00F8
        gbc.setState(0xcdd6, 0xd52b, 0x62c0, 0x8c91, 0x4df3, 0x1889, 0x1, 0x0);
        gbc.writeMem(0xcdd6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd52b);
        EXPECT(gbc.pc(), 0xcdd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdd6), 0xcb);
        EXPECT(gbc.readMem(0xcdd7), 0xe0);
        // CB E0 00F9
        gbc.setState(0xcf64, 0x85de, 0xb5f0, 0x110f, 0x8c20, 0x829a, 0x1, 0x1);
        gbc.writeMem(0xcf64, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x85de);
        EXPECT(gbc.pc(), 0xcf66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf64), 0xcb);
        EXPECT(gbc.readMem(0xcf65), 0xe0);
        // CB E0 00FA
        gbc.setState(0xd02a, 0x5184, 0xed0, 0xb449, 0xfc96, 0x9121, 0x0, 0x0);
        gbc.writeMem(0xd02a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5184);
        EXPECT(gbc.pc(), 0xd02c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd02a), 0xcb);
        EXPECT(gbc.readMem(0xd02b), 0xe0);
        // CB E0 00FB
        gbc.setState(0x5c48, 0x23ac, 0xe6e0, 0xfe4f, 0xd0b9, 0x2f59, 0x0, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x23ac);
        EXPECT(gbc.pc(), 0x5c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00FC
        gbc.setState(0xd20f, 0x6576, 0x2810, 0xc7d3, 0xa8ea, 0x679e, 0x0, 0x0);
        gbc.writeMem(0xd20f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6576);
        EXPECT(gbc.pc(), 0xd211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20f), 0xcb);
        EXPECT(gbc.readMem(0xd210), 0xe0);
        // CB E0 00FD
        gbc.setState(0xb142, 0x24df, 0x30f0, 0x723f, 0x42e, 0xe53a, 0x1, 0x0);
        gbc.writeMem(0xb142, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x24df);
        EXPECT(gbc.pc(), 0xb144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb142), 0xcb);
        EXPECT(gbc.readMem(0xb143), 0xe0);
        // CB E0 00FE
        gbc.setState(0x163c, 0x6b4d, 0x4500, 0x1fe9, 0x9077, 0x6ddf, 0x1, 0x1);
        gbc.writeMem(0x163c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6b4d);
        EXPECT(gbc.pc(), 0x163e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 00FF
        gbc.setState(0x319a, 0xe8a9, 0xa010, 0xa4f6, 0x79c2, 0x93bf, 0x1, 0x1);
        gbc.writeMem(0x319a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe8a9);
        EXPECT(gbc.pc(), 0x319c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0100
        gbc.setState(0x4281, 0xca52, 0x33c0, 0x7b27, 0xd5cb, 0xc27a, 0x0, 0x0);
        gbc.writeMem(0x4281, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xca52);
        EXPECT(gbc.pc(), 0x4283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0101
        gbc.setState(0x6826, 0xacc0, 0x9220, 0xc36, 0xc281, 0x6905, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xacc0);
        EXPECT(gbc.pc(), 0x6828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0102
        gbc.setState(0x31c, 0xbff7, 0xc830, 0xe53e, 0x72e3, 0x9cd4, 0x1, 0x1);
        gbc.writeMem(0x31c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xbff7);
        EXPECT(gbc.pc(), 0x31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0103
        gbc.setState(0x8050, 0x3413, 0x1550, 0x2086, 0x6f62, 0x2913, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3413);
        EXPECT(gbc.pc(), 0x8052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8050), 0xcb);
        EXPECT(gbc.readMem(0x8051), 0xe0);
        // CB E0 0105
        gbc.setState(0x6fa9, 0x725b, 0xb5f0, 0x5619, 0xc41f, 0x3cde, 0x0, 0x1);
        gbc.writeMem(0x6fa9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x725b);
        EXPECT(gbc.pc(), 0x6fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0106
        gbc.setState(0x9c63, 0xe4a5, 0x4700, 0xd5d9, 0xc985, 0xeb54, 0x1, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xe4a5);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xcb);
        EXPECT(gbc.readMem(0x9c64), 0xe0);
        // CB E0 0107
        gbc.setState(0x1081, 0xbae7, 0xf300, 0xa6ce, 0x7f5f, 0xc0e4, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0x1083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0108
        gbc.setState(0x25c9, 0x3c5b, 0x1670, 0xd20f, 0x3417, 0x92bb, 0x0, 0x0);
        gbc.writeMem(0x25c9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3c5b);
        EXPECT(gbc.pc(), 0x25cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0109
        gbc.setState(0xc11, 0xc1eb, 0xf450, 0x2c6f, 0xf3be, 0xea20, 0x0, 0x1);
        gbc.writeMem(0xc11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc1eb);
        EXPECT(gbc.pc(), 0xc13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 010A
        gbc.setState(0x418b, 0x7ed, 0xa9e0, 0x5cea, 0x206e, 0x7676, 0x0, 0x0);
        gbc.writeMem(0x418b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7ed);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 010B
        gbc.setState(0x2597, 0x4fb0, 0x2280, 0x8493, 0xcad6, 0x8158, 0x0, 0x1);
        gbc.writeMem(0x2597, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4fb0);
        EXPECT(gbc.pc(), 0x2599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 010C
        gbc.setState(0x9237, 0xb27c, 0x4f40, 0xdf29, 0x69f7, 0x4b23, 0x1, 0x1);
        gbc.writeMem(0x9237, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb27c);
        EXPECT(gbc.pc(), 0x9239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9237), 0xcb);
        EXPECT(gbc.readMem(0x9238), 0xe0);
        // CB E0 010D
        gbc.setState(0x9b2, 0xa8d0, 0x4db0, 0x6a08, 0x745e, 0xdc3d, 0x0, 0x0);
        gbc.writeMem(0x9b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa8d0);
        EXPECT(gbc.pc(), 0x9b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 010E
        gbc.setState(0x7aca, 0x8141, 0x4810, 0x9610, 0xbc53, 0x4dc8, 0x0, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8141);
        EXPECT(gbc.pc(), 0x7acc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 010F
        gbc.setState(0x7657, 0x80ca, 0x3630, 0xb83b, 0x37b5, 0xbf1a, 0x1, 0x1);
        gbc.writeMem(0x7657, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x80ca);
        EXPECT(gbc.pc(), 0x7659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0111
        gbc.setState(0x8080, 0xf9d0, 0xa2b0, 0x9257, 0x1340, 0x7894, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf9d0);
        EXPECT(gbc.pc(), 0x8082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8080), 0xcb);
        EXPECT(gbc.readMem(0x8081), 0xe0);
        // CB E0 0112
        gbc.setState(0x62b6, 0xe271, 0x9e60, 0x97e1, 0x2143, 0x9f69, 0x0, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe271);
        EXPECT(gbc.pc(), 0x62b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0113
        gbc.setState(0x250a, 0xc493, 0xc640, 0x63e3, 0x5317, 0x8ff1, 0x0, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc493);
        EXPECT(gbc.pc(), 0x250c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0114
        gbc.setState(0xad89, 0x3918, 0x5500, 0xa141, 0x1ddd, 0x4e2, 0x1, 0x1);
        gbc.writeMem(0xad89, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3918);
        EXPECT(gbc.pc(), 0xad8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad89), 0xcb);
        EXPECT(gbc.readMem(0xad8a), 0xe0);
        // CB E0 0115
        gbc.setState(0x1768, 0xfc1d, 0x46c0, 0xefe2, 0xf7a0, 0xa31b, 0x0, 0x0);
        gbc.writeMem(0x1768, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfc1d);
        EXPECT(gbc.pc(), 0x176a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0116
        gbc.setState(0x9b6b, 0x89fd, 0xb070, 0x1a1b, 0x7805, 0x3e89, 0x1, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x89fd);
        EXPECT(gbc.pc(), 0x9b6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6b), 0xcb);
        EXPECT(gbc.readMem(0x9b6c), 0xe0);
        // CB E0 0117
        gbc.setState(0xc323, 0x18d7, 0x7510, 0x813e, 0x14ee, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x18d7);
        EXPECT(gbc.pc(), 0xc325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc323), 0xcb);
        EXPECT(gbc.readMem(0xc324), 0xe0);
        // CB E0 0118
        gbc.setState(0x8305, 0xcd6a, 0xa510, 0x731e, 0xed37, 0x9500, 0x1, 0x0);
        gbc.writeMem(0x8305, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xcd6a);
        EXPECT(gbc.pc(), 0x8307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8305), 0xcb);
        EXPECT(gbc.readMem(0x8306), 0xe0);
        // CB E0 0119
        gbc.setState(0xa994, 0x3460, 0x5710, 0x2e50, 0xc20b, 0xf959, 0x0, 0x0);
        gbc.writeMem(0xa994, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3460);
        EXPECT(gbc.pc(), 0xa996);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa994), 0xcb);
        EXPECT(gbc.readMem(0xa995), 0xe0);
        // CB E0 011A
        gbc.setState(0x49e6, 0x24ae, 0xf890, 0x3bf8, 0x4435, 0x41b9, 0x0, 0x1);
        gbc.writeMem(0x49e6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x24ae);
        EXPECT(gbc.pc(), 0x49e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 011B
        gbc.setState(0x8119, 0xec04, 0xb8f0, 0xe247, 0xab63, 0xb673, 0x1, 0x1);
        gbc.writeMem(0x8119, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xec04);
        EXPECT(gbc.pc(), 0x811b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8119), 0xcb);
        EXPECT(gbc.readMem(0x811a), 0xe0);
        // CB E0 011C
        gbc.setState(0x8f39, 0x3338, 0xc130, 0xca52, 0xa8d6, 0x2e8b, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3338);
        EXPECT(gbc.pc(), 0x8f3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f39), 0xcb);
        EXPECT(gbc.readMem(0x8f3a), 0xe0);
        // CB E0 011D
        gbc.setState(0xcf3e, 0x4bf6, 0x8f60, 0xf52e, 0x1ea, 0xcec1, 0x1, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4bf6);
        EXPECT(gbc.pc(), 0xcf40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf3e), 0xcb);
        EXPECT(gbc.readMem(0xcf3f), 0xe0);
        // CB E0 011E
        gbc.setState(0x7d43, 0x4cc5, 0xe6f0, 0x66f8, 0x1383, 0x3f27, 0x1, 0x0);
        gbc.writeMem(0x7d43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4cc5);
        EXPECT(gbc.pc(), 0x7d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 011F
        gbc.setState(0x8143, 0x4651, 0x3f0, 0x74de, 0xb4bc, 0x7cf4, 0x0, 0x0);
        gbc.writeMem(0x8143, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4651);
        EXPECT(gbc.pc(), 0x8145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8143), 0xcb);
        EXPECT(gbc.readMem(0x8144), 0xe0);
        // CB E0 0120
        gbc.setState(0x2268, 0x1f3e, 0xb860, 0x984b, 0xeee8, 0x52ca, 0x1, 0x1);
        gbc.writeMem(0x2268, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1f3e);
        EXPECT(gbc.pc(), 0x226a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0121
        gbc.setState(0x6034, 0x2253, 0x7140, 0xef31, 0xe37e, 0xc597, 0x1, 0x0);
        gbc.writeMem(0x6034, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2253);
        EXPECT(gbc.pc(), 0x6036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0122
        gbc.setState(0x2d37, 0x6bce, 0x9940, 0xb6cb, 0x8d9f, 0x4471, 0x0, 0x0);
        gbc.writeMem(0x2d37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6bce);
        EXPECT(gbc.pc(), 0x2d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0123
        gbc.setState(0x8f42, 0x7410, 0xfed0, 0xa03f, 0x85b8, 0x4e3a, 0x0, 0x1);
        gbc.writeMem(0x8f42, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x7410);
        EXPECT(gbc.pc(), 0x8f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f42), 0xcb);
        EXPECT(gbc.readMem(0x8f43), 0xe0);
        // CB E0 0124
        gbc.setState(0x397a, 0x63b0, 0xc2b0, 0x5b09, 0x1087, 0x9be2, 0x0, 0x1);
        gbc.writeMem(0x397a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x63b0);
        EXPECT(gbc.pc(), 0x397c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0125
        gbc.setState(0x4ce5, 0x5390, 0x98f0, 0x69ab, 0xf881, 0xdf44, 0x1, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x5390);
        EXPECT(gbc.pc(), 0x4ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0126
        gbc.setState(0xbd2e, 0x1ab8, 0x1640, 0x76e7, 0x1ac7, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1ab8);
        EXPECT(gbc.pc(), 0xbd30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd2e), 0xcb);
        EXPECT(gbc.readMem(0xbd2f), 0xe0);
        // CB E0 0127
        gbc.setState(0xc199, 0xf4a6, 0x93f0, 0xe50c, 0x6632, 0xb778, 0x1, 0x0);
        gbc.writeMem(0xc199, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf4a6);
        EXPECT(gbc.pc(), 0xc19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc199), 0xcb);
        EXPECT(gbc.readMem(0xc19a), 0xe0);
        // CB E0 0129
        gbc.setState(0xd58c, 0x4e52, 0xe260, 0xe455, 0x4ea6, 0x3f20, 0x0, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4e52);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58c), 0xcb);
        EXPECT(gbc.readMem(0xd58d), 0xe0);
        // CB E0 012A
        gbc.setState(0x769a, 0x9211, 0xb9f0, 0x8039, 0x5930, 0x4c18, 0x1, 0x1);
        gbc.writeMem(0x769a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9211);
        EXPECT(gbc.pc(), 0x769c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 012B
        gbc.setState(0x3e9c, 0x29b8, 0x2680, 0x8cc, 0xe009, 0x4956, 0x0, 0x0);
        gbc.writeMem(0x3e9c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x29b8);
        EXPECT(gbc.pc(), 0x3e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 012C
        gbc.setState(0x1976, 0xc8e2, 0x5da0, 0xd7bb, 0x7325, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x1976, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xc8e2);
        EXPECT(gbc.pc(), 0x1978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 012D
        gbc.setState(0x9f44, 0x3368, 0x7940, 0x7ac2, 0xa620, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x9f44, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3368);
        EXPECT(gbc.pc(), 0x9f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f44), 0xcb);
        EXPECT(gbc.readMem(0x9f45), 0xe0);
        // CB E0 012E
        gbc.setState(0x6c3e, 0xeecb, 0x3340, 0x8d5c, 0xf499, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x6c3e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xeecb);
        EXPECT(gbc.pc(), 0x6c40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 012F
        gbc.setState(0xa8de, 0x557d, 0xd2d0, 0xa54a, 0x1c62, 0xa49b, 0x1, 0x1);
        gbc.writeMem(0xa8de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x557d);
        EXPECT(gbc.pc(), 0xa8e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8de), 0xcb);
        EXPECT(gbc.readMem(0xa8df), 0xe0);
        // CB E0 0130
        gbc.setState(0xdcee, 0x72b, 0x1390, 0x6e00, 0x98e7, 0xf72a, 0x1, 0x1);
        gbc.writeMem(0xdcee, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x72b);
        EXPECT(gbc.pc(), 0xdcf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcee), 0xcb);
        EXPECT(gbc.readMem(0xdcef), 0xe0);
        // CB E0 0131
        gbc.setState(0x47ad, 0x5a54, 0x8b60, 0xd282, 0xdbd2, 0x59e9, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x5a54);
        EXPECT(gbc.pc(), 0x47af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0132
        gbc.setState(0xbaa9, 0xbf68, 0xfa60, 0x39de, 0xa9fc, 0xf389, 0x0, 0x1);
        gbc.writeMem(0xbaa9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xbf68);
        EXPECT(gbc.pc(), 0xbaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaa9), 0xcb);
        EXPECT(gbc.readMem(0xbaaa), 0xe0);
        // CB E0 0133
        gbc.setState(0x5ff3, 0x5f9b, 0x4620, 0x2c44, 0xcd8f, 0xca77, 0x1, 0x0);
        gbc.writeMem(0x5ff3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x5f9b);
        EXPECT(gbc.pc(), 0x5ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0134
        gbc.setState(0xb18e, 0x56cb, 0x15a0, 0xc25b, 0xd80f, 0x7d23, 0x1, 0x1);
        gbc.writeMem(0xb18e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x56cb);
        EXPECT(gbc.pc(), 0xb190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb18e), 0xcb);
        EXPECT(gbc.readMem(0xb18f), 0xe0);
        // CB E0 0135
        gbc.setState(0xa77a, 0x93f9, 0xae80, 0xb497, 0x4bf, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0xa77a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x93f9);
        EXPECT(gbc.pc(), 0xa77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77a), 0xcb);
        EXPECT(gbc.readMem(0xa77b), 0xe0);
        // CB E0 0136
        gbc.setState(0x2f50, 0x7b01, 0xf9f0, 0xb605, 0x669, 0xb27f, 0x0, 0x0);
        gbc.writeMem(0x2f50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7b01);
        EXPECT(gbc.pc(), 0x2f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0137
        gbc.setState(0x85e9, 0x3e74, 0x73e0, 0x8d48, 0x9940, 0x65f, 0x0, 0x1);
        gbc.writeMem(0x85e9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e74);
        EXPECT(gbc.pc(), 0x85eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0xcb);
        EXPECT(gbc.readMem(0x85ea), 0xe0);
        // CB E0 0138
        gbc.setState(0x52c3, 0x3176, 0x2670, 0x77f, 0x31fd, 0xfd04, 0x1, 0x0);
        gbc.writeMem(0x52c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3176);
        EXPECT(gbc.pc(), 0x52c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0139
        gbc.setState(0xdddc, 0xf24b, 0x41c0, 0xb4b9, 0x4507, 0x4264, 0x1, 0x1);
        gbc.writeMem(0xdddc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf24b);
        EXPECT(gbc.pc(), 0xddde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdddc), 0xcb);
        EXPECT(gbc.readMem(0xdddd), 0xe0);
        // CB E0 013A
        gbc.setState(0x9d91, 0x562c, 0x7da0, 0xeef1, 0x551c, 0xa60, 0x1, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x562c);
        EXPECT(gbc.pc(), 0x9d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d91), 0xcb);
        EXPECT(gbc.readMem(0x9d92), 0xe0);
        // CB E0 013B
        gbc.setState(0xbd90, 0xbc45, 0xb9c0, 0x80d0, 0xe0e9, 0x8ac8, 0x1, 0x0);
        gbc.writeMem(0xbd90, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbc45);
        EXPECT(gbc.pc(), 0xbd92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd90), 0xcb);
        EXPECT(gbc.readMem(0xbd91), 0xe0);
        // CB E0 013C
        gbc.setState(0x9422, 0x7b47, 0x43e0, 0x4bc7, 0x6e50, 0xd40a, 0x0, 0x1);
        gbc.writeMem(0x9422, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7b47);
        EXPECT(gbc.pc(), 0x9424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9422), 0xcb);
        EXPECT(gbc.readMem(0x9423), 0xe0);
        // CB E0 013D
        gbc.setState(0x5ba9, 0x8286, 0xf8c0, 0x9bd6, 0xbd40, 0x2c49, 0x1, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8286);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 013F
        gbc.setState(0x2328, 0x24a0, 0x6980, 0xeeb6, 0xcd55, 0x983b, 0x1, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x24a0);
        EXPECT(gbc.pc(), 0x232a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0140
        gbc.setState(0x4478, 0xd42e, 0x7160, 0x6fb2, 0x1b4e, 0x2c69, 0x1, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd42e);
        EXPECT(gbc.pc(), 0x447a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0143
        gbc.setState(0x6ef, 0x5232, 0x8f0, 0x6690, 0x8cbc, 0xb36f, 0x0, 0x0);
        gbc.writeMem(0x6ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5232);
        EXPECT(gbc.pc(), 0x6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0144
        gbc.setState(0xaef4, 0x5235, 0x33b0, 0x34c0, 0xb19e, 0x2582, 0x0, 0x1);
        gbc.writeMem(0xaef4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5235);
        EXPECT(gbc.pc(), 0xaef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef4), 0xcb);
        EXPECT(gbc.readMem(0xaef5), 0xe0);
        // CB E0 0145
        gbc.setState(0xa60c, 0x49a9, 0x8130, 0x5dfc, 0x270b, 0x18c1, 0x0, 0x1);
        gbc.writeMem(0xa60c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x49a9);
        EXPECT(gbc.pc(), 0xa60e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60c), 0xcb);
        EXPECT(gbc.readMem(0xa60d), 0xe0);
        // CB E0 0146
        gbc.setState(0xb791, 0xe104, 0xe870, 0x1b0a, 0xc0ea, 0x3492, 0x1, 0x0);
        gbc.writeMem(0xb791, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe104);
        EXPECT(gbc.pc(), 0xb793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb791), 0xcb);
        EXPECT(gbc.readMem(0xb792), 0xe0);
        // CB E0 0147
        gbc.setState(0x5f81, 0x2233, 0x6880, 0x966e, 0xd79, 0x9adf, 0x0, 0x0);
        gbc.writeMem(0x5f81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2233);
        EXPECT(gbc.pc(), 0x5f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0148
        gbc.setState(0x975c, 0x7567, 0xdc40, 0x3c03, 0xcfa7, 0x84c9, 0x1, 0x0);
        gbc.writeMem(0x975c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7567);
        EXPECT(gbc.pc(), 0x975e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975c), 0xcb);
        EXPECT(gbc.readMem(0x975d), 0xe0);
        // CB E0 0149
        gbc.setState(0x9bd, 0x7718, 0x5480, 0x7d8a, 0xf055, 0x5da, 0x0, 0x0);
        gbc.writeMem(0x9bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7718);
        EXPECT(gbc.pc(), 0x9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 014A
        gbc.setState(0x5ca4, 0xee18, 0x9090, 0x6ccb, 0xdaac, 0x534b, 0x1, 0x1);
        gbc.writeMem(0x5ca4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xee18);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 014B
        gbc.setState(0x1f4d, 0x8a87, 0x7880, 0x5695, 0x127, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x1f4d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x8a87);
        EXPECT(gbc.pc(), 0x1f4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 014C
        gbc.setState(0x22e5, 0x3cdf, 0xdf0, 0xb6b9, 0x90dc, 0xab94, 0x1, 0x1);
        gbc.writeMem(0x22e5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3cdf);
        EXPECT(gbc.pc(), 0x22e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 014D
        gbc.setState(0x6f23, 0x720d, 0xb470, 0x9789, 0xbbd7, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0x6f23, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x720d);
        EXPECT(gbc.pc(), 0x6f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 014E
        gbc.setState(0xe0f0, 0x6dfd, 0x2700, 0x1f3d, 0x95d4, 0xaeef, 0x1, 0x1);
        gbc.writeMem(0xe0f0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6dfd);
        EXPECT(gbc.pc(), 0xe0f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f0), 0xcb);
        EXPECT(gbc.readMem(0xe0f1), 0xe0);
        // CB E0 014F
        gbc.setState(0x5c6c, 0x3c08, 0x1750, 0x87dc, 0xe188, 0x89dc, 0x1, 0x1);
        gbc.writeMem(0x5c6c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3c08);
        EXPECT(gbc.pc(), 0x5c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0150
        gbc.setState(0x3ae6, 0x256b, 0x55d0, 0x3a40, 0x8dae, 0x8f9e, 0x0, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x256b);
        EXPECT(gbc.pc(), 0x3ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0151
        gbc.setState(0xaa9f, 0xb851, 0x94b0, 0xa2d3, 0x73e8, 0xe5cc, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb851);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9f), 0xcb);
        EXPECT(gbc.readMem(0xaaa0), 0xe0);
        // CB E0 0152
        gbc.setState(0x1008, 0x74e5, 0x9b80, 0x43ab, 0xcf64, 0xbaa4, 0x1, 0x1);
        gbc.writeMem(0x1008, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x74e5);
        EXPECT(gbc.pc(), 0x100a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0154
        gbc.setState(0x10a3, 0x676e, 0xced0, 0xce35, 0xf79f, 0x86dd, 0x1, 0x0);
        gbc.writeMem(0x10a3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x676e);
        EXPECT(gbc.pc(), 0x10a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0156
        gbc.setState(0xd9fd, 0xd002, 0xa970, 0x38ae, 0xaa31, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0xd9fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd002);
        EXPECT(gbc.pc(), 0xd9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9fd), 0xcb);
        EXPECT(gbc.readMem(0xd9fe), 0xe0);
        // CB E0 0157
        gbc.setState(0xd5ed, 0xcf6a, 0x1430, 0x5b32, 0x1dce, 0x2570, 0x0, 0x0);
        gbc.writeMem(0xd5ed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xcf6a);
        EXPECT(gbc.pc(), 0xd5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ed), 0xcb);
        EXPECT(gbc.readMem(0xd5ee), 0xe0);
        // CB E0 0158
        gbc.setState(0x858c, 0x4f8c, 0x2b0, 0xe4f2, 0x399b, 0x56a3, 0x0, 0x1);
        gbc.writeMem(0x858c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4f8c);
        EXPECT(gbc.pc(), 0x858e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858c), 0xcb);
        EXPECT(gbc.readMem(0x858d), 0xe0);
        // CB E0 0159
        gbc.setState(0x3c88, 0xad99, 0x60f0, 0x1775, 0xde8, 0xf948, 0x0, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xad99);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 015A
        gbc.setState(0x2737, 0xc007, 0xfa40, 0xc36f, 0x7766, 0xd350, 0x1, 0x1);
        gbc.writeMem(0x2737, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc007);
        EXPECT(gbc.pc(), 0x2739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 015B
        gbc.setState(0x6f37, 0xa925, 0xb8a0, 0xfec7, 0xd3a9, 0x9557, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa925);
        EXPECT(gbc.pc(), 0x6f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 015C
        gbc.setState(0xd234, 0x6830, 0xdb80, 0x14a7, 0x3c97, 0xda80, 0x0, 0x1);
        gbc.writeMem(0xd234, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6830);
        EXPECT(gbc.pc(), 0xd236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd234), 0xcb);
        EXPECT(gbc.readMem(0xd235), 0xe0);
        // CB E0 015D
        gbc.setState(0xa8b3, 0x37da, 0x8e00, 0x2ac5, 0x22b8, 0xd68, 0x0, 0x0);
        gbc.writeMem(0xa8b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x37da);
        EXPECT(gbc.pc(), 0xa8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8b3), 0xcb);
        EXPECT(gbc.readMem(0xa8b4), 0xe0);
        // CB E0 015E
        gbc.setState(0xa64b, 0xa594, 0x92c0, 0x6a4a, 0x80c0, 0xf222, 0x1, 0x1);
        gbc.writeMem(0xa64b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa594);
        EXPECT(gbc.pc(), 0xa64d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64b), 0xcb);
        EXPECT(gbc.readMem(0xa64c), 0xe0);
        // CB E0 015F
        gbc.setState(0x1ccf, 0x6d8, 0x770, 0xfa3f, 0xdb82, 0x7566, 0x0, 0x0);
        gbc.writeMem(0x1ccf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6d8);
        EXPECT(gbc.pc(), 0x1cd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0160
        gbc.setState(0x532c, 0xd1d5, 0xfa0, 0x60fa, 0xa83c, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x532c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd1d5);
        EXPECT(gbc.pc(), 0x532e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0161
        gbc.setState(0x6e28, 0x6d49, 0x5e80, 0x5f0b, 0x5c29, 0x6294, 0x1, 0x1);
        gbc.writeMem(0x6e28, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6d49);
        EXPECT(gbc.pc(), 0x6e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0162
        gbc.setState(0xaaa8, 0x2fd4, 0xe650, 0x5b0d, 0x2856, 0x303d, 0x1, 0x0);
        gbc.writeMem(0xaaa8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2fd4);
        EXPECT(gbc.pc(), 0xaaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa8), 0xcb);
        EXPECT(gbc.readMem(0xaaa9), 0xe0);
        // CB E0 0163
        gbc.setState(0xaeb, 0xdfc4, 0x3230, 0x3c0f, 0xd416, 0xb463, 0x1, 0x1);
        gbc.writeMem(0xaeb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdfc4);
        EXPECT(gbc.pc(), 0xaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0164
        gbc.setState(0xeaff, 0x7592, 0x2d00, 0xe8e7, 0xb847, 0x4286, 0x0, 0x0);
        gbc.writeMem(0xeaff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7592);
        EXPECT(gbc.pc(), 0xeb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaff), 0xcb);
        EXPECT(gbc.readMem(0xeb00), 0xe0);
        // CB E0 0165
        gbc.setState(0x1200, 0x20ab, 0xaaf0, 0xfb7a, 0xc457, 0x5797, 0x0, 0x0);
        gbc.writeMem(0x1200, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x20ab);
        EXPECT(gbc.pc(), 0x1202);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0166
        gbc.setState(0x656b, 0x588, 0x22f0, 0x8631, 0x392d, 0xa092, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x588);
        EXPECT(gbc.pc(), 0x656d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0167
        gbc.setState(0x36d5, 0x9f25, 0x63d0, 0x8d9d, 0x7f2c, 0xf222, 0x0, 0x1);
        gbc.writeMem(0x36d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9f25);
        EXPECT(gbc.pc(), 0x36d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0168
        gbc.setState(0xca1f, 0xdec7, 0x2080, 0xbf27, 0xe086, 0x6345, 0x1, 0x1);
        gbc.writeMem(0xca1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdec7);
        EXPECT(gbc.pc(), 0xca21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1f), 0xcb);
        EXPECT(gbc.readMem(0xca20), 0xe0);
        // CB E0 0169
        gbc.setState(0xd803, 0xe156, 0xd4d0, 0xcff5, 0x25e2, 0x5342, 0x1, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe156);
        EXPECT(gbc.pc(), 0xd805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd803), 0xcb);
        EXPECT(gbc.readMem(0xd804), 0xe0);
        // CB E0 016A
        gbc.setState(0xc675, 0x701e, 0x270, 0x3181, 0x392d, 0x807b, 0x1, 0x1);
        gbc.writeMem(0xc675, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x701e);
        EXPECT(gbc.pc(), 0xc677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc675), 0xcb);
        EXPECT(gbc.readMem(0xc676), 0xe0);
        // CB E0 016B
        gbc.setState(0x6829, 0xabc0, 0xf8b0, 0x771e, 0x3780, 0x2dd7, 0x1, 0x1);
        gbc.writeMem(0x6829, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xabc0);
        EXPECT(gbc.pc(), 0x682b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 016C
        gbc.setState(0xae53, 0x3717, 0x3ca0, 0xa546, 0x60, 0xaf68, 0x1, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3717);
        EXPECT(gbc.pc(), 0xae55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae53), 0xcb);
        EXPECT(gbc.readMem(0xae54), 0xe0);
        // CB E0 016D
        gbc.setState(0x9096, 0xe4f8, 0x2160, 0x9cac, 0x228c, 0xa673, 0x1, 0x1);
        gbc.writeMem(0x9096, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xe4f8);
        EXPECT(gbc.pc(), 0x9098);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9096), 0xcb);
        EXPECT(gbc.readMem(0x9097), 0xe0);
        // CB E0 016E
        gbc.setState(0xfb0, 0xe8bd, 0x5f40, 0xc2e1, 0xbe36, 0x1ea5, 0x0, 0x1);
        gbc.writeMem(0xfb0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe8bd);
        EXPECT(gbc.pc(), 0xfb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 016F
        gbc.setState(0x99d7, 0x6e4f, 0xa400, 0x29e3, 0xeb5d, 0xaec9, 0x0, 0x0);
        gbc.writeMem(0x99d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6e4f);
        EXPECT(gbc.pc(), 0x99d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d7), 0xcb);
        EXPECT(gbc.readMem(0x99d8), 0xe0);
        // CB E0 0170
        gbc.setState(0xb5c5, 0x1998, 0xd670, 0x6799, 0x4c0c, 0xe849, 0x1, 0x1);
        gbc.writeMem(0xb5c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1998);
        EXPECT(gbc.pc(), 0xb5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c5), 0xcb);
        EXPECT(gbc.readMem(0xb5c6), 0xe0);
        // CB E0 0171
        gbc.setState(0x2c5a, 0x5871, 0xc60, 0xfc51, 0x6a53, 0x698e, 0x1, 0x0);
        gbc.writeMem(0x2c5a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5871);
        EXPECT(gbc.pc(), 0x2c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0172
        gbc.setState(0x7c2b, 0xa0ec, 0x4a80, 0x4cff, 0x6e97, 0x7460, 0x1, 0x0);
        gbc.writeMem(0x7c2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0x7c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0173
        gbc.setState(0x5494, 0xff3, 0x9bb0, 0xaafa, 0x1cec, 0x2d9f, 0x0, 0x0);
        gbc.writeMem(0x5494, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xff3);
        EXPECT(gbc.pc(), 0x5496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0174
        gbc.setState(0x466d, 0xa76e, 0x8540, 0x2cad, 0x858e, 0x1cd7, 0x1, 0x1);
        gbc.writeMem(0x466d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa76e);
        EXPECT(gbc.pc(), 0x466f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0175
        gbc.setState(0x4c50, 0xc4c2, 0x650, 0x5eb2, 0x8223, 0xcb9e, 0x0, 0x1);
        gbc.writeMem(0x4c50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc4c2);
        EXPECT(gbc.pc(), 0x4c52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0176
        gbc.setState(0xd457, 0xd5cb, 0x6c40, 0x9000, 0xb0b0, 0x2170, 0x0, 0x1);
        gbc.writeMem(0xd457, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd5cb);
        EXPECT(gbc.pc(), 0xd459);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd457), 0xcb);
        EXPECT(gbc.readMem(0xd458), 0xe0);
        // CB E0 0177
        gbc.setState(0xa489, 0x3702, 0xcc90, 0x4f02, 0x13e8, 0xd0c9, 0x0, 0x1);
        gbc.writeMem(0xa489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3702);
        EXPECT(gbc.pc(), 0xa48b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa489), 0xcb);
        EXPECT(gbc.readMem(0xa48a), 0xe0);
        // CB E0 0178
        gbc.setState(0xa038, 0xb09d, 0xb100, 0x5a84, 0x5e79, 0xd557, 0x0, 0x0);
        gbc.writeMem(0xa038, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb09d);
        EXPECT(gbc.pc(), 0xa03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa038), 0xcb);
        EXPECT(gbc.readMem(0xa039), 0xe0);
        // CB E0 0179
        gbc.setState(0xb4a4, 0x1236, 0x4db0, 0xd0a3, 0xdab1, 0xd9d9, 0x0, 0x0);
        gbc.writeMem(0xb4a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1236);
        EXPECT(gbc.pc(), 0xb4a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a4), 0xcb);
        EXPECT(gbc.readMem(0xb4a5), 0xe0);
        // CB E0 017A
        gbc.setState(0x7449, 0xf65e, 0x1ea0, 0x4b2c, 0xfaaa, 0xf3d0, 0x1, 0x0);
        gbc.writeMem(0x7449, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xf65e);
        EXPECT(gbc.pc(), 0x744b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 017B
        gbc.setState(0xed83, 0xc872, 0xfd90, 0x5967, 0x2905, 0xfd89, 0x0, 0x1);
        gbc.writeMem(0xed83, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc872);
        EXPECT(gbc.pc(), 0xed85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed83), 0xcb);
        EXPECT(gbc.readMem(0xed84), 0xe0);
        // CB E0 017C
        gbc.setState(0xd37b, 0x6faa, 0x2580, 0x1682, 0x89f5, 0x7065, 0x0, 0x1);
        gbc.writeMem(0xd37b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6faa);
        EXPECT(gbc.pc(), 0xd37d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37b), 0xcb);
        EXPECT(gbc.readMem(0xd37c), 0xe0);
        // CB E0 017D
        gbc.setState(0xd38d, 0x63d6, 0x5970, 0x930d, 0x5571, 0x1525, 0x0, 0x1);
        gbc.writeMem(0xd38d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x63d6);
        EXPECT(gbc.pc(), 0xd38f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd38d), 0xcb);
        EXPECT(gbc.readMem(0xd38e), 0xe0);
        // CB E0 017E
        gbc.setState(0x582a, 0x430d, 0x39d0, 0xe3d5, 0x97a, 0x9017, 0x1, 0x1);
        gbc.writeMem(0x582a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x430d);
        EXPECT(gbc.pc(), 0x582c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 017F
        gbc.setState(0xa501, 0x7cd2, 0x3100, 0x7705, 0x92d9, 0xe66e, 0x0, 0x1);
        gbc.writeMem(0xa501, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7cd2);
        EXPECT(gbc.pc(), 0xa503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa501), 0xcb);
        EXPECT(gbc.readMem(0xa502), 0xe0);
        // CB E0 0180
        gbc.setState(0x1806, 0xe5eb, 0xf230, 0x9bff, 0x4c89, 0xf187, 0x1, 0x0);
        gbc.writeMem(0x1806, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe5eb);
        EXPECT(gbc.pc(), 0x1808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0181
        gbc.setState(0x1a45, 0xc96c, 0x2650, 0x9bc9, 0x4ab1, 0xcdf0, 0x0, 0x1);
        gbc.writeMem(0x1a45, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc96c);
        EXPECT(gbc.pc(), 0x1a47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0182
        gbc.setState(0x4892, 0xb8aa, 0xe3f0, 0xe8c4, 0xa71c, 0xed38, 0x0, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb8aa);
        EXPECT(gbc.pc(), 0x4894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0183
        gbc.setState(0xd494, 0x6bc3, 0xe780, 0xf18b, 0x195b, 0x7441, 0x0, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6bc3);
        EXPECT(gbc.pc(), 0xd496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd494), 0xcb);
        EXPECT(gbc.readMem(0xd495), 0xe0);
        // CB E0 0184
        gbc.setState(0xdae5, 0x5e7, 0xdaa0, 0xca46, 0xcc15, 0xdeab, 0x1, 0x0);
        gbc.writeMem(0xdae5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5e7);
        EXPECT(gbc.pc(), 0xdae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdae5), 0xcb);
        EXPECT(gbc.readMem(0xdae6), 0xe0);
        // CB E0 0185
        gbc.setState(0xd88e, 0x8d8d, 0x6600, 0x79bf, 0x99bc, 0x3a5, 0x1, 0x0);
        gbc.writeMem(0xd88e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8d8d);
        EXPECT(gbc.pc(), 0xd890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88e), 0xcb);
        EXPECT(gbc.readMem(0xd88f), 0xe0);
        // CB E0 0186
        gbc.setState(0x162b, 0xe3b2, 0xc180, 0xe6e2, 0xcf38, 0xa2bc, 0x0, 0x1);
        gbc.writeMem(0x162b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe3b2);
        EXPECT(gbc.pc(), 0x162d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0188
        gbc.setState(0xa92f, 0x9be6, 0xbd80, 0xbb4d, 0x869d, 0x27f3, 0x0, 0x0);
        gbc.writeMem(0xa92f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9be6);
        EXPECT(gbc.pc(), 0xa931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa92f), 0xcb);
        EXPECT(gbc.readMem(0xa930), 0xe0);
        // CB E0 0189
        gbc.setState(0xb1b9, 0xd5d1, 0x8be0, 0xac74, 0x612, 0xbe2, 0x1, 0x1);
        gbc.writeMem(0xb1b9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd5d1);
        EXPECT(gbc.pc(), 0xb1bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b9), 0xcb);
        EXPECT(gbc.readMem(0xb1ba), 0xe0);
        // CB E0 018A
        gbc.setState(0xc6a6, 0x2f91, 0x2110, 0xbdca, 0xf7ab, 0xcd54, 0x0, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2f91);
        EXPECT(gbc.pc(), 0xc6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6a6), 0xcb);
        EXPECT(gbc.readMem(0xc6a7), 0xe0);
        // CB E0 018B
        gbc.setState(0x400f, 0xe603, 0x250, 0x4bab, 0x88d3, 0x6026, 0x1, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe603);
        EXPECT(gbc.pc(), 0x4011);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 018C
        gbc.setState(0x81fd, 0x17ca, 0x7430, 0xac72, 0xd445, 0xd267, 0x1, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x17ca);
        EXPECT(gbc.pc(), 0x81ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81fd), 0xcb);
        EXPECT(gbc.readMem(0x81fe), 0xe0);
        // CB E0 018D
        gbc.setState(0x64e7, 0x954b, 0xea90, 0xe04f, 0xd82b, 0xdd32, 0x0, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x954b);
        EXPECT(gbc.pc(), 0x64e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 018E
        gbc.setState(0xf0b, 0xc85d, 0x470, 0x8c82, 0xb6b2, 0x6874, 0x1, 0x0);
        gbc.writeMem(0xf0b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xc85d);
        EXPECT(gbc.pc(), 0xf0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 018F
        gbc.setState(0x5003, 0x1ebd, 0x36d0, 0x4393, 0x6684, 0x1d84, 0x0, 0x0);
        gbc.writeMem(0x5003, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1ebd);
        EXPECT(gbc.pc(), 0x5005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0190
        gbc.setState(0x8ddd, 0xd3e5, 0x9c60, 0x9ab3, 0x2707, 0xc2ec, 0x0, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd3e5);
        EXPECT(gbc.pc(), 0x8ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ddd), 0xcb);
        EXPECT(gbc.readMem(0x8dde), 0xe0);
        // CB E0 0192
        gbc.setState(0xd21c, 0x3ec6, 0x7fa0, 0xc70d, 0xd8b4, 0xe15, 0x0, 0x1);
        gbc.writeMem(0xd21c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3ec6);
        EXPECT(gbc.pc(), 0xd21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd21c), 0xcb);
        EXPECT(gbc.readMem(0xd21d), 0xe0);
        // CB E0 0193
        gbc.setState(0xd815, 0xe329, 0xc9d0, 0xe7f0, 0xa1a7, 0x8909, 0x1, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe329);
        EXPECT(gbc.pc(), 0xd817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd815), 0xcb);
        EXPECT(gbc.readMem(0xd816), 0xe0);
        // CB E0 0194
        gbc.setState(0xd806, 0x2543, 0xfbf0, 0xe849, 0x7b9f, 0x5249, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2543);
        EXPECT(gbc.pc(), 0xd808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd806), 0xcb);
        EXPECT(gbc.readMem(0xd807), 0xe0);
        // CB E0 0195
        gbc.setState(0x18c6, 0xe657, 0xd5b0, 0x859a, 0xf98d, 0xc56c, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xe657);
        EXPECT(gbc.pc(), 0x18c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0196
        gbc.setState(0x55c8, 0x2fb2, 0xa470, 0x3271, 0x6e63, 0x9913, 0x0, 0x0);
        gbc.writeMem(0x55c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2fb2);
        EXPECT(gbc.pc(), 0x55ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0197
        gbc.setState(0xdebd, 0xd35d, 0x8fc0, 0xf935, 0x1c65, 0x9381, 0x0, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd35d);
        EXPECT(gbc.pc(), 0xdebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdebd), 0xcb);
        EXPECT(gbc.readMem(0xdebe), 0xe0);
        // CB E0 0198
        gbc.setState(0x8128, 0xbcb2, 0x2fe0, 0x8b52, 0x51b1, 0x5343, 0x0, 0x1);
        gbc.writeMem(0x8128, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbcb2);
        EXPECT(gbc.pc(), 0x812a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8128), 0xcb);
        EXPECT(gbc.readMem(0x8129), 0xe0);
        // CB E0 0199
        gbc.setState(0xcdd4, 0x593e, 0x36b0, 0xf21f, 0xb390, 0xb584, 0x1, 0x0);
        gbc.writeMem(0xcdd4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x593e);
        EXPECT(gbc.pc(), 0xcdd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd4), 0xcb);
        EXPECT(gbc.readMem(0xcdd5), 0xe0);
        // CB E0 019A
        gbc.setState(0xc50f, 0x6402, 0x1ed0, 0x36c1, 0x5dd1, 0x159d, 0x0, 0x0);
        gbc.writeMem(0xc50f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x6402);
        EXPECT(gbc.pc(), 0xc511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50f), 0xcb);
        EXPECT(gbc.readMem(0xc510), 0xe0);
        // CB E0 019B
        gbc.setState(0xe974, 0xd2f9, 0xb3e0, 0xac67, 0x4c07, 0x9280, 0x1, 0x0);
        gbc.writeMem(0xe974, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd2f9);
        EXPECT(gbc.pc(), 0xe976);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe974), 0xcb);
        EXPECT(gbc.readMem(0xe975), 0xe0);
        // CB E0 019C
        gbc.setState(0x28e2, 0x28d4, 0x7ae0, 0xaba7, 0x89fd, 0x31c1, 0x0, 0x0);
        gbc.writeMem(0x28e2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x28d4);
        EXPECT(gbc.pc(), 0x28e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 019D
        gbc.setState(0x2a1a, 0xcb6f, 0xe9e0, 0x52aa, 0x4f2, 0x1673, 0x1, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcb6f);
        EXPECT(gbc.pc(), 0x2a1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 019E
        gbc.setState(0x3600, 0x9c1, 0x83f0, 0x4d1, 0x9db5, 0x9dce, 0x0, 0x0);
        gbc.writeMem(0x3600, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x3602);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 019F
        gbc.setState(0x5cc7, 0x7f4a, 0x5620, 0xb22e, 0xccf6, 0x8604, 0x0, 0x0);
        gbc.writeMem(0x5cc7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x7f4a);
        EXPECT(gbc.pc(), 0x5cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01A0
        gbc.setState(0xa47e, 0xf910, 0x9ac0, 0x5177, 0xf379, 0xcb35, 0x1, 0x1);
        gbc.writeMem(0xa47e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf910);
        EXPECT(gbc.pc(), 0xa480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa47e), 0xcb);
        EXPECT(gbc.readMem(0xa47f), 0xe0);
        // CB E0 01A1
        gbc.setState(0x2dbd, 0x78f7, 0xb680, 0x926c, 0x7e02, 0x4c37, 0x0, 0x0);
        gbc.writeMem(0x2dbd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x78f7);
        EXPECT(gbc.pc(), 0x2dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01A2
        gbc.setState(0xca76, 0x1788, 0xc220, 0xc1e2, 0xdca5, 0x9e7c, 0x0, 0x1);
        gbc.writeMem(0xca76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1788);
        EXPECT(gbc.pc(), 0xca78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca76), 0xcb);
        EXPECT(gbc.readMem(0xca77), 0xe0);
        // CB E0 01A3
        gbc.setState(0xbd37, 0x35e5, 0xf540, 0x2c53, 0x448e, 0x26cd, 0x1, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x35e5);
        EXPECT(gbc.pc(), 0xbd39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd37), 0xcb);
        EXPECT(gbc.readMem(0xbd38), 0xe0);
        // CB E0 01A4
        gbc.setState(0x6c67, 0x19df, 0xb9e0, 0xe54c, 0x4c9, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x6c67, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x19df);
        EXPECT(gbc.pc(), 0x6c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01A5
        gbc.setState(0x3ccf, 0xbd6, 0xedd0, 0x35cf, 0x53f4, 0x29b8, 0x1, 0x1);
        gbc.writeMem(0x3ccf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xbd6);
        EXPECT(gbc.pc(), 0x3cd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01A6
        gbc.setState(0x4caa, 0x25a7, 0x93c0, 0xaded, 0x399, 0x5004, 0x0, 0x0);
        gbc.writeMem(0x4caa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x25a7);
        EXPECT(gbc.pc(), 0x4cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01A7
        gbc.setState(0x27c5, 0xb45e, 0x9700, 0xf881, 0x9776, 0x7cc4, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xb45e);
        EXPECT(gbc.pc(), 0x27c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01AA
        gbc.setState(0x5f11, 0x2220, 0x8ad0, 0xbade, 0xd46, 0x40ad, 0x0, 0x0);
        gbc.writeMem(0x5f11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2220);
        EXPECT(gbc.pc(), 0x5f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01AB
        gbc.setState(0x8a78, 0x1cf4, 0x2480, 0x1753, 0xea40, 0x4e27, 0x1, 0x1);
        gbc.writeMem(0x8a78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1cf4);
        EXPECT(gbc.pc(), 0x8a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a78), 0xcb);
        EXPECT(gbc.readMem(0x8a79), 0xe0);
        // CB E0 01AC
        gbc.setState(0x83b, 0x253e, 0x7740, 0xabdb, 0x9ef2, 0xbf53, 0x0, 0x1);
        gbc.writeMem(0x83b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x253e);
        EXPECT(gbc.pc(), 0x83d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01AE
        gbc.setState(0x2375, 0x535b, 0xbc70, 0xe46c, 0xf743, 0xa99c, 0x1, 0x0);
        gbc.writeMem(0x2375, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x535b);
        EXPECT(gbc.pc(), 0x2377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01AF
        gbc.setState(0xc30b, 0xa224, 0x8ec0, 0x788f, 0x9ae6, 0xb733, 0x1, 0x1);
        gbc.writeMem(0xc30b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa224);
        EXPECT(gbc.pc(), 0xc30d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30b), 0xcb);
        EXPECT(gbc.readMem(0xc30c), 0xe0);
        // CB E0 01B0
        gbc.setState(0x412e, 0xcb3, 0x1fb0, 0xabec, 0x407c, 0xfa4f, 0x0, 0x0);
        gbc.writeMem(0x412e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcb3);
        EXPECT(gbc.pc(), 0x4130);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01B1
        gbc.setState(0x4c63, 0x42aa, 0x1c30, 0x525, 0xad11, 0x8512, 0x1, 0x0);
        gbc.writeMem(0x4c63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x42aa);
        EXPECT(gbc.pc(), 0x4c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01B2
        gbc.setState(0x8a39, 0xf08d, 0xce20, 0xc70c, 0x2467, 0x76bb, 0x0, 0x0);
        gbc.writeMem(0x8a39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xf08d);
        EXPECT(gbc.pc(), 0x8a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a39), 0xcb);
        EXPECT(gbc.readMem(0x8a3a), 0xe0);
        // CB E0 01B3
        gbc.setState(0x2484, 0x9696, 0x3f90, 0x1f40, 0xee59, 0xf975, 0x0, 0x0);
        gbc.writeMem(0x2484, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9696);
        EXPECT(gbc.pc(), 0x2486);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01B4
        gbc.setState(0xe8f8, 0x221b, 0x810, 0x84cf, 0x7ca4, 0xa445, 0x1, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x221b);
        EXPECT(gbc.pc(), 0xe8fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8f8), 0xcb);
        EXPECT(gbc.readMem(0xe8f9), 0xe0);
        // CB E0 01B6
        gbc.setState(0x46ae, 0x9298, 0xe580, 0x5bed, 0xb642, 0x9e7f, 0x1, 0x1);
        gbc.writeMem(0x46ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9298);
        EXPECT(gbc.pc(), 0x46b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01B7
        gbc.setState(0x3c15, 0xde6f, 0x5c40, 0x33d1, 0x5ac2, 0x70ef, 0x0, 0x0);
        gbc.writeMem(0x3c15, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xde6f);
        EXPECT(gbc.pc(), 0x3c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01B8
        gbc.setState(0xcfd0, 0x1b22, 0x14a0, 0xfcb8, 0xfe1f, 0x760c, 0x1, 0x1);
        gbc.writeMem(0xcfd0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1b22);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfd0), 0xcb);
        EXPECT(gbc.readMem(0xcfd1), 0xe0);
        // CB E0 01B9
        gbc.setState(0x177, 0xe93c, 0x1a50, 0x5403, 0x5eb9, 0xa5a1, 0x0, 0x1);
        gbc.writeMem(0x177, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe93c);
        EXPECT(gbc.pc(), 0x179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01BA
        gbc.setState(0xe1f9, 0x4566, 0x9ce0, 0xc0ab, 0xb017, 0x64c4, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4566);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0xe0);
        // CB E0 01BB
        gbc.setState(0x117f, 0xc7f8, 0x4c50, 0x7523, 0x48fb, 0xb679, 0x0, 0x1);
        gbc.writeMem(0x117f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc7f8);
        EXPECT(gbc.pc(), 0x1181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01BC
        gbc.setState(0xdf55, 0x8a8c, 0xf180, 0xbdc3, 0x1f58, 0xd039, 0x1, 0x1);
        gbc.writeMem(0xdf55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8a8c);
        EXPECT(gbc.pc(), 0xdf57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf55), 0xcb);
        EXPECT(gbc.readMem(0xdf56), 0xe0);
        // CB E0 01BD
        gbc.setState(0xa940, 0x6453, 0xcc80, 0x7020, 0x9847, 0x3dfa, 0x0, 0x1);
        gbc.writeMem(0xa940, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6453);
        EXPECT(gbc.pc(), 0xa942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa940), 0xcb);
        EXPECT(gbc.readMem(0xa941), 0xe0);
        // CB E0 01BE
        gbc.setState(0x78fd, 0x74cd, 0x1c60, 0x69ff, 0x82d7, 0x845d, 0x0, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x74cd);
        EXPECT(gbc.pc(), 0x78ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01BF
        gbc.setState(0xc761, 0xfbeb, 0xf450, 0xd125, 0xbb70, 0xe5a, 0x1, 0x0);
        gbc.writeMem(0xc761, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfbeb);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc761), 0xcb);
        EXPECT(gbc.readMem(0xc762), 0xe0);
        // CB E0 01C0
        gbc.setState(0x6e81, 0x3fa6, 0x2b50, 0x6a2b, 0x167e, 0x3ede, 0x0, 0x0);
        gbc.writeMem(0x6e81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3fa6);
        EXPECT(gbc.pc(), 0x6e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01C1
        gbc.setState(0x59be, 0x9acb, 0x8050, 0x8f4c, 0x28c2, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9acb);
        EXPECT(gbc.pc(), 0x59c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01C2
        gbc.setState(0x1a1f, 0xa141, 0xd5f0, 0xdec4, 0x95c3, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0x1a1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa141);
        EXPECT(gbc.pc(), 0x1a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01C3
        gbc.setState(0x1a34, 0xdc9e, 0xa590, 0x2af8, 0x8d68, 0xbf7b, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xdc9e);
        EXPECT(gbc.pc(), 0x1a36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01C4
        gbc.setState(0x5188, 0x8f8b, 0xd120, 0x8a1a, 0xc7e9, 0xd0a1, 0x1, 0x0);
        gbc.writeMem(0x5188, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8f8b);
        EXPECT(gbc.pc(), 0x518a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01C5
        gbc.setState(0x33aa, 0x4a2, 0x9870, 0x421c, 0x8125, 0x939d, 0x1, 0x1);
        gbc.writeMem(0x33aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4a2);
        EXPECT(gbc.pc(), 0x33ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01C6
        gbc.setState(0xe28e, 0xb6e9, 0x63a0, 0x9cce, 0xcd25, 0x7e18, 0x0, 0x1);
        gbc.writeMem(0xe28e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb6e9);
        EXPECT(gbc.pc(), 0xe290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe28e), 0xcb);
        EXPECT(gbc.readMem(0xe28f), 0xe0);
        // CB E0 01C7
        gbc.setState(0x8623, 0x84c8, 0x6480, 0x55e1, 0x1a59, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x8623, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x84c8);
        EXPECT(gbc.pc(), 0x8625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8623), 0xcb);
        EXPECT(gbc.readMem(0x8624), 0xe0);
        // CB E0 01C8
        gbc.setState(0xbf97, 0x4a2b, 0x8bd0, 0x3c2a, 0x9e2b, 0x5730, 0x1, 0x1);
        gbc.writeMem(0xbf97, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x4a2b);
        EXPECT(gbc.pc(), 0xbf99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf97), 0xcb);
        EXPECT(gbc.readMem(0xbf98), 0xe0);
        // CB E0 01C9
        gbc.setState(0x5777, 0xc58c, 0xa5f0, 0xce81, 0xc769, 0xd650, 0x1, 0x1);
        gbc.writeMem(0x5777, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc58c);
        EXPECT(gbc.pc(), 0x5779);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01CA
        gbc.setState(0x479b, 0xa0e6, 0x62d0, 0x15f8, 0x4074, 0xfa1e, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa0e6);
        EXPECT(gbc.pc(), 0x479d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01CB
        gbc.setState(0x8d55, 0x5168, 0x2e90, 0x37bd, 0xaa01, 0x5f5, 0x1, 0x1);
        gbc.writeMem(0x8d55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0x8d57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d55), 0xcb);
        EXPECT(gbc.readMem(0x8d56), 0xe0);
        // CB E0 01CC
        gbc.setState(0x244d, 0x7706, 0xa6f0, 0x5ce3, 0xac7b, 0xb194, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x7706);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01CD
        gbc.setState(0x82e8, 0xf057, 0x7410, 0x630, 0xd272, 0x1ab2, 0x0, 0x1);
        gbc.writeMem(0x82e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf057);
        EXPECT(gbc.pc(), 0x82ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e8), 0xcb);
        EXPECT(gbc.readMem(0x82e9), 0xe0);
        // CB E0 01CE
        gbc.setState(0x1e0d, 0x4952, 0x1740, 0x8b5e, 0xa3ae, 0x5078, 0x1, 0x1);
        gbc.writeMem(0x1e0d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x4952);
        EXPECT(gbc.pc(), 0x1e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01CF
        gbc.setState(0x67f, 0x8cee, 0x73d0, 0xa853, 0x4b46, 0xd45a, 0x0, 0x0);
        gbc.writeMem(0x67f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0x681);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01D0
        gbc.setState(0x494a, 0x34f3, 0x9e20, 0xac04, 0xe92b, 0x84f, 0x1, 0x1);
        gbc.writeMem(0x494a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x34f3);
        EXPECT(gbc.pc(), 0x494c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01D1
        gbc.setState(0xe9f4, 0x49e7, 0xaf90, 0x1c5a, 0xfe18, 0x5ac7, 0x0, 0x1);
        gbc.writeMem(0xe9f4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x49e7);
        EXPECT(gbc.pc(), 0xe9f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f4), 0xcb);
        EXPECT(gbc.readMem(0xe9f5), 0xe0);
        // CB E0 01D2
        gbc.setState(0x1185, 0x9a2c, 0x1db0, 0xb0f6, 0x62b5, 0x8d49, 0x1, 0x1);
        gbc.writeMem(0x1185, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9a2c);
        EXPECT(gbc.pc(), 0x1187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01D3
        gbc.setState(0x8d09, 0x67d8, 0x9410, 0x3c49, 0xef80, 0x404d, 0x0, 0x0);
        gbc.writeMem(0x8d09, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x67d8);
        EXPECT(gbc.pc(), 0x8d0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d09), 0xcb);
        EXPECT(gbc.readMem(0x8d0a), 0xe0);
        // CB E0 01D4
        gbc.setState(0x81ca, 0xe8e8, 0x5590, 0xcd8c, 0x756d, 0x817e, 0x0, 0x1);
        gbc.writeMem(0x81ca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0x81cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81ca), 0xcb);
        EXPECT(gbc.readMem(0x81cb), 0xe0);
        // CB E0 01D5
        gbc.setState(0xdc31, 0xf72a, 0x9980, 0xa01c, 0xf1dd, 0x2885, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf72a);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc31), 0xcb);
        EXPECT(gbc.readMem(0xdc32), 0xe0);
        // CB E0 01D6
        gbc.setState(0xb16c, 0x2e8c, 0x8d10, 0xac05, 0x8aa7, 0xaf8a, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2e8c);
        EXPECT(gbc.pc(), 0xb16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16c), 0xcb);
        EXPECT(gbc.readMem(0xb16d), 0xe0);
        // CB E0 01D7
        gbc.setState(0x8421, 0xd088, 0xfff0, 0x7eef, 0x52b7, 0x49da, 0x1, 0x1);
        gbc.writeMem(0x8421, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd088);
        EXPECT(gbc.pc(), 0x8423);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8421), 0xcb);
        EXPECT(gbc.readMem(0x8422), 0xe0);
        // CB E0 01D8
        gbc.setState(0x7852, 0x3be1, 0x1210, 0xedb8, 0xbae1, 0x236f, 0x0, 0x1);
        gbc.writeMem(0x7852, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3be1);
        EXPECT(gbc.pc(), 0x7854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01D9
        gbc.setState(0x1f31, 0xd8f0, 0x1d30, 0x1178, 0x1817, 0x6ba, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd8f0);
        EXPECT(gbc.pc(), 0x1f33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01DA
        gbc.setState(0x832f, 0xe6c7, 0x33b0, 0x385e, 0x8b68, 0xf331, 0x0, 0x0);
        gbc.writeMem(0x832f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe6c7);
        EXPECT(gbc.pc(), 0x8331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x832f), 0xcb);
        EXPECT(gbc.readMem(0x8330), 0xe0);
        // CB E0 01DB
        gbc.setState(0x340a, 0x5623, 0xd870, 0xdb4b, 0x63a9, 0x3701, 0x0, 0x0);
        gbc.writeMem(0x340a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5623);
        EXPECT(gbc.pc(), 0x340c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01DD
        gbc.setState(0x60a9, 0x1e5c, 0x42b0, 0xde63, 0xc6b4, 0x177f, 0x1, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1e5c);
        EXPECT(gbc.pc(), 0x60ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01DF
        gbc.setState(0xaee7, 0x82a5, 0xc5e0, 0xddb, 0x7d1f, 0x5ace, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x82a5);
        EXPECT(gbc.pc(), 0xaee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee7), 0xcb);
        EXPECT(gbc.readMem(0xaee8), 0xe0);
        // CB E0 01E0
        gbc.setState(0xc76d, 0xbda8, 0x5560, 0x4d1c, 0x8a2d, 0xc268, 0x1, 0x1);
        gbc.writeMem(0xc76d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xbda8);
        EXPECT(gbc.pc(), 0xc76f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76d), 0xcb);
        EXPECT(gbc.readMem(0xc76e), 0xe0);
        // CB E0 01E1
        gbc.setState(0x9568, 0xadba, 0x4d20, 0xf23, 0x9f63, 0xd1fa, 0x0, 0x0);
        gbc.writeMem(0x9568, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xadba);
        EXPECT(gbc.pc(), 0x956a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9568), 0xcb);
        EXPECT(gbc.readMem(0x9569), 0xe0);
        // CB E0 01E2
        gbc.setState(0x4a12, 0x9668, 0x2b0, 0x7167, 0x990c, 0xe6d4, 0x0, 0x1);
        gbc.writeMem(0x4a12, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9668);
        EXPECT(gbc.pc(), 0x4a14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01E3
        gbc.setState(0x6fd6, 0xdfe0, 0x3dd0, 0x65aa, 0x5ec8, 0x6aa1, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdfe0);
        EXPECT(gbc.pc(), 0x6fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01E4
        gbc.setState(0x94f3, 0x1218, 0x75a0, 0x12e0, 0x549e, 0x4b3d, 0x1, 0x1);
        gbc.writeMem(0x94f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1218);
        EXPECT(gbc.pc(), 0x94f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f3), 0xcb);
        EXPECT(gbc.readMem(0x94f4), 0xe0);
        // CB E0 01E5
        gbc.setState(0xa92a, 0x73b1, 0x2050, 0xeb7c, 0x7c4e, 0xdc78, 0x0, 0x0);
        gbc.writeMem(0xa92a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x73b1);
        EXPECT(gbc.pc(), 0xa92c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92a), 0xcb);
        EXPECT(gbc.readMem(0xa92b), 0xe0);
        // CB E0 01E6
        gbc.setState(0xe6a, 0x4cb, 0x1e40, 0x78ba, 0x6a55, 0x6843, 0x0, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4cb);
        EXPECT(gbc.pc(), 0xe6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01E7
        gbc.setState(0x8133, 0x66d1, 0x430, 0x7b54, 0x6efd, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x8133, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x66d1);
        EXPECT(gbc.pc(), 0x8135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8133), 0xcb);
        EXPECT(gbc.readMem(0x8134), 0xe0);
        // CB E0 01E8
        gbc.setState(0x9558, 0xed5b, 0xda70, 0x5657, 0xef24, 0x841, 0x1, 0x0);
        gbc.writeMem(0x9558, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xed5b);
        EXPECT(gbc.pc(), 0x955a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9558), 0xcb);
        EXPECT(gbc.readMem(0x9559), 0xe0);
        // CB E0 01E9
        gbc.setState(0xc58, 0x73a, 0x5a0, 0x2a0b, 0xc58b, 0x17eb, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x73a);
        EXPECT(gbc.pc(), 0xc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01EA
        gbc.setState(0x4b26, 0x9309, 0x7030, 0x101f, 0x130d, 0xd501, 0x1, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9309);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01EB
        gbc.setState(0xbeaa, 0xc914, 0x15b0, 0x3ad7, 0x7ee0, 0x5b92, 0x0, 0x0);
        gbc.writeMem(0xbeaa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc914);
        EXPECT(gbc.pc(), 0xbeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeaa), 0xcb);
        EXPECT(gbc.readMem(0xbeab), 0xe0);
        // CB E0 01ED
        gbc.setState(0xb1a8, 0x13f0, 0xaf20, 0x614f, 0x62c2, 0x5b61, 0x1, 0x1);
        gbc.writeMem(0xb1a8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x13f0);
        EXPECT(gbc.pc(), 0xb1aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1a8), 0xcb);
        EXPECT(gbc.readMem(0xb1a9), 0xe0);
        // CB E0 01EE
        gbc.setState(0xeab1, 0x2e5d, 0xf020, 0xe162, 0x1952, 0xdfe, 0x0, 0x0);
        gbc.writeMem(0xeab1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x2e5d);
        EXPECT(gbc.pc(), 0xeab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab1), 0xcb);
        EXPECT(gbc.readMem(0xeab2), 0xe0);
        // CB E0 01EF
        gbc.setState(0xc3ec, 0x3f5e, 0x2f0, 0xe185, 0x7c40, 0x9e6d, 0x1, 0x0);
        gbc.writeMem(0xc3ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3f5e);
        EXPECT(gbc.pc(), 0xc3ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ec), 0xcb);
        EXPECT(gbc.readMem(0xc3ed), 0xe0);
        // CB E0 01F0
        gbc.setState(0x84ff, 0xa275, 0x7430, 0xf124, 0x84b9, 0x5b6e, 0x0, 0x0);
        gbc.writeMem(0x84ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa275);
        EXPECT(gbc.pc(), 0x8501);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ff), 0xcb);
        EXPECT(gbc.readMem(0x8500), 0xe0);
        // CB E0 01F1
        gbc.setState(0x1988, 0x70f0, 0xea10, 0x5142, 0x2e2e, 0x506, 0x1, 0x1);
        gbc.writeMem(0x1988, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x70f0);
        EXPECT(gbc.pc(), 0x198a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01F2
        gbc.setState(0x5419, 0x91, 0x64e0, 0x10c1, 0x89f4, 0xec74, 0x1, 0x0);
        gbc.writeMem(0x5419, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x91);
        EXPECT(gbc.pc(), 0x541b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01F3
        gbc.setState(0x3f7e, 0xda37, 0x2820, 0xc0ba, 0x7b1f, 0xad5a, 0x1, 0x0);
        gbc.writeMem(0x3f7e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0x3f80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01F4
        gbc.setState(0x1fb2, 0x1202, 0xdf60, 0x7bef, 0x88c, 0xa328, 0x1, 0x0);
        gbc.writeMem(0x1fb2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1202);
        EXPECT(gbc.pc(), 0x1fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01F5
        gbc.setState(0x30cd, 0x95ab, 0xf170, 0x833d, 0x6616, 0x620a, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x95ab);
        EXPECT(gbc.pc(), 0x30cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 01F6
        gbc.setState(0x884e, 0xb658, 0xeec0, 0x20ef, 0x13d7, 0xe080, 0x0, 0x0);
        gbc.writeMem(0x884e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb658);
        EXPECT(gbc.pc(), 0x8850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x884e), 0xcb);
        EXPECT(gbc.readMem(0x884f), 0xe0);
        // CB E0 01F8
        gbc.setState(0x2911, 0x37e7, 0xbf60, 0xd3de, 0x6739, 0xde98, 0x1, 0x0);
        gbc.writeMem(0x2911, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x37e7);
        EXPECT(gbc.pc(), 0x2913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01F9
        gbc.setState(0xb3f3, 0x185d, 0xabb0, 0x515e, 0x2788, 0x6e30, 0x0, 0x0);
        gbc.writeMem(0xb3f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x185d);
        EXPECT(gbc.pc(), 0xb3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f3), 0xcb);
        EXPECT(gbc.readMem(0xb3f4), 0xe0);
        // CB E0 01FA
        gbc.setState(0x553b, 0x586b, 0x2d80, 0x7a6a, 0xf23, 0x1b91, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x586b);
        EXPECT(gbc.pc(), 0x553d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01FB
        gbc.setState(0xb978, 0xcc1a, 0xbb00, 0x76d9, 0xe153, 0x4820, 0x1, 0x0);
        gbc.writeMem(0xb978, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcc1a);
        EXPECT(gbc.pc(), 0xb97a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb978), 0xcb);
        EXPECT(gbc.readMem(0xb979), 0xe0);
        // CB E0 01FD
        gbc.setState(0xc12b, 0x35aa, 0xd0e0, 0x406c, 0xdaff, 0x60e7, 0x0, 0x1);
        gbc.writeMem(0xc12b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x35aa);
        EXPECT(gbc.pc(), 0xc12d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12b), 0xcb);
        EXPECT(gbc.readMem(0xc12c), 0xe0);
        // CB E0 01FE
        gbc.setState(0x5080, 0x5bfc, 0x97c0, 0x38a2, 0x48e0, 0x4837, 0x0, 0x1);
        gbc.writeMem(0x5080, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5bfc);
        EXPECT(gbc.pc(), 0x5082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 01FF
        gbc.setState(0x9058, 0x53f, 0x6d60, 0x5113, 0x9945, 0x26a8, 0x1, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x53f);
        EXPECT(gbc.pc(), 0x905a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9058), 0xcb);
        EXPECT(gbc.readMem(0x9059), 0xe0);
        // CB E0 0200
        gbc.setState(0xe3c4, 0x2309, 0x6320, 0xf436, 0x53c3, 0xb624, 0x0, 0x0);
        gbc.writeMem(0xe3c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2309);
        EXPECT(gbc.pc(), 0xe3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c4), 0xcb);
        EXPECT(gbc.readMem(0xe3c5), 0xe0);
        // CB E0 0201
        gbc.setState(0x8b0a, 0xa8d7, 0x5c60, 0x6c33, 0xc5f3, 0x30a2, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa8d7);
        EXPECT(gbc.pc(), 0x8b0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0a), 0xcb);
        EXPECT(gbc.readMem(0x8b0b), 0xe0);
        // CB E0 0202
        gbc.setState(0x3447, 0x4f5, 0x1a10, 0xbf74, 0xd6f2, 0xd4f7, 0x0, 0x1);
        gbc.writeMem(0x3447, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4f5);
        EXPECT(gbc.pc(), 0x3449);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0203
        gbc.setState(0x8f05, 0x26c9, 0x31b0, 0x4583, 0x2a03, 0x3816, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x26c9);
        EXPECT(gbc.pc(), 0x8f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f05), 0xcb);
        EXPECT(gbc.readMem(0x8f06), 0xe0);
        // CB E0 0204
        gbc.setState(0x5a5b, 0xd8ec, 0xf720, 0xa8e8, 0x6f17, 0xea98, 0x0, 0x1);
        gbc.writeMem(0x5a5b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd8ec);
        EXPECT(gbc.pc(), 0x5a5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0205
        gbc.setState(0xd52, 0x8966, 0x9da0, 0x6a94, 0x4df3, 0x921a, 0x0, 0x1);
        gbc.writeMem(0xd52, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8966);
        EXPECT(gbc.pc(), 0xd54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0206
        gbc.setState(0xd87b, 0x5494, 0x3c70, 0x1a76, 0xf69c, 0x9e0e, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5494);
        EXPECT(gbc.pc(), 0xd87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87b), 0xcb);
        EXPECT(gbc.readMem(0xd87c), 0xe0);
        // CB E0 0207
        gbc.setState(0x9bf, 0x6d87, 0x2550, 0x35be, 0x10da, 0xb987, 0x1, 0x0);
        gbc.writeMem(0x9bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6d87);
        EXPECT(gbc.pc(), 0x9c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0208
        gbc.setState(0xae91, 0x5a5f, 0xf280, 0x929e, 0x1c7a, 0xf6c6, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5a5f);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae91), 0xcb);
        EXPECT(gbc.readMem(0xae92), 0xe0);
        // CB E0 0209
        gbc.setState(0xa70f, 0xc4, 0x6ef0, 0x2f09, 0x9b4a, 0x12ad, 0x0, 0x1);
        gbc.writeMem(0xa70f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc4);
        EXPECT(gbc.pc(), 0xa711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70f), 0xcb);
        EXPECT(gbc.readMem(0xa710), 0xe0);
        // CB E0 020A
        gbc.setState(0xe858, 0x30f2, 0x9b50, 0x87d0, 0x47f8, 0xe53, 0x1, 0x1);
        gbc.writeMem(0xe858, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x30f2);
        EXPECT(gbc.pc(), 0xe85a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe858), 0xcb);
        EXPECT(gbc.readMem(0xe859), 0xe0);
        // CB E0 020B
        gbc.setState(0xd41b, 0xdadc, 0x3480, 0xea76, 0xc3cf, 0x52a9, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdadc);
        EXPECT(gbc.pc(), 0xd41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41b), 0xcb);
        EXPECT(gbc.readMem(0xd41c), 0xe0);
        // CB E0 020C
        gbc.setState(0x372b, 0x49bb, 0x27a0, 0xa4dd, 0xe673, 0xdc97, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x49bb);
        EXPECT(gbc.pc(), 0x372d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 020D
        gbc.setState(0xe882, 0x8356, 0x91d0, 0xd59b, 0x119, 0xc758, 0x1, 0x1);
        gbc.writeMem(0xe882, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x8356);
        EXPECT(gbc.pc(), 0xe884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe882), 0xcb);
        EXPECT(gbc.readMem(0xe883), 0xe0);
        // CB E0 020E
        gbc.setState(0x253d, 0x87fb, 0xb620, 0x9a15, 0xdf1, 0x6092, 0x0, 0x0);
        gbc.writeMem(0x253d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x87fb);
        EXPECT(gbc.pc(), 0x253f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 020F
        gbc.setState(0x83e7, 0x913f, 0xe760, 0xe563, 0x670e, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x83e7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x913f);
        EXPECT(gbc.pc(), 0x83e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83e7), 0xcb);
        EXPECT(gbc.readMem(0x83e8), 0xe0);
        // CB E0 0210
        gbc.setState(0x75cd, 0x9a9, 0x3be0, 0x564b, 0xb8d4, 0xd34e, 0x1, 0x1);
        gbc.writeMem(0x75cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9a9);
        EXPECT(gbc.pc(), 0x75cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0211
        gbc.setState(0xacfe, 0xdecc, 0xb020, 0xb872, 0x45aa, 0x5e1b, 0x1, 0x1);
        gbc.writeMem(0xacfe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xdecc);
        EXPECT(gbc.pc(), 0xad00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacfe), 0xcb);
        EXPECT(gbc.readMem(0xacff), 0xe0);
        // CB E0 0212
        gbc.setState(0xeb4f, 0x1c4, 0x2120, 0xe2aa, 0xf391, 0xbb5, 0x0, 0x1);
        gbc.writeMem(0xeb4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1c4);
        EXPECT(gbc.pc(), 0xeb51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4f), 0xcb);
        EXPECT(gbc.readMem(0xeb50), 0xe0);
        // CB E0 0213
        gbc.setState(0x424b, 0xd1dc, 0x7420, 0xd358, 0x3137, 0xed1d, 0x0, 0x0);
        gbc.writeMem(0x424b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd1dc);
        EXPECT(gbc.pc(), 0x424d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0214
        gbc.setState(0xdc80, 0xdc34, 0xc080, 0x4c0d, 0x9e66, 0xcba4, 0x1, 0x1);
        gbc.writeMem(0xdc80, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdc34);
        EXPECT(gbc.pc(), 0xdc82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc80), 0xcb);
        EXPECT(gbc.readMem(0xdc81), 0xe0);
        // CB E0 0215
        gbc.setState(0x827c, 0x4375, 0xaff0, 0xa305, 0x5ad2, 0xcb6c, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4375);
        EXPECT(gbc.pc(), 0x827e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827c), 0xcb);
        EXPECT(gbc.readMem(0x827d), 0xe0);
        // CB E0 0216
        gbc.setState(0x8564, 0x7641, 0x47f0, 0xc8b6, 0xcbf, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x8564, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7641);
        EXPECT(gbc.pc(), 0x8566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8564), 0xcb);
        EXPECT(gbc.readMem(0x8565), 0xe0);
        // CB E0 0217
        gbc.setState(0xde11, 0x86db, 0xaf60, 0x41e6, 0x3f5e, 0x18c7, 0x1, 0x0);
        gbc.writeMem(0xde11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x86db);
        EXPECT(gbc.pc(), 0xde13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde11), 0xcb);
        EXPECT(gbc.readMem(0xde12), 0xe0);
        // CB E0 0218
        gbc.setState(0xa990, 0x20a8, 0xf3f0, 0xa637, 0xbb6b, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0xa990, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x20a8);
        EXPECT(gbc.pc(), 0xa992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa990), 0xcb);
        EXPECT(gbc.readMem(0xa991), 0xe0);
        // CB E0 0219
        gbc.setState(0xbb2b, 0x5528, 0x78c0, 0xe81f, 0x1322, 0xb894, 0x0, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5528);
        EXPECT(gbc.pc(), 0xbb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2b), 0xcb);
        EXPECT(gbc.readMem(0xbb2c), 0xe0);
        // CB E0 021A
        gbc.setState(0xa2e8, 0x8dfa, 0xed60, 0x4f52, 0x4966, 0xf971, 0x0, 0x1);
        gbc.writeMem(0xa2e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8dfa);
        EXPECT(gbc.pc(), 0xa2ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e8), 0xcb);
        EXPECT(gbc.readMem(0xa2e9), 0xe0);
        // CB E0 021B
        gbc.setState(0xaab5, 0xc287, 0x4770, 0xe17e, 0xc37f, 0xf2cf, 0x1, 0x0);
        gbc.writeMem(0xaab5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xc287);
        EXPECT(gbc.pc(), 0xaab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaab5), 0xcb);
        EXPECT(gbc.readMem(0xaab6), 0xe0);
        // CB E0 021C
        gbc.setState(0xb24f, 0xf03f, 0x4ac0, 0x4e49, 0x706f, 0x3905, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf03f);
        EXPECT(gbc.pc(), 0xb251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24f), 0xcb);
        EXPECT(gbc.readMem(0xb250), 0xe0);
        // CB E0 021D
        gbc.setState(0xefed, 0xfb7c, 0xa1a0, 0xc25a, 0x992, 0xd67b, 0x1, 0x1);
        gbc.writeMem(0xefed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xfb7c);
        EXPECT(gbc.pc(), 0xefef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefed), 0xcb);
        EXPECT(gbc.readMem(0xefee), 0xe0);
        // CB E0 021E
        gbc.setState(0x9365, 0x1c1a, 0xd460, 0xed54, 0xfb18, 0xcee0, 0x0, 0x0);
        gbc.writeMem(0x9365, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1c1a);
        EXPECT(gbc.pc(), 0x9367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9365), 0xcb);
        EXPECT(gbc.readMem(0x9366), 0xe0);
        // CB E0 021F
        gbc.setState(0xc672, 0xffba, 0x95a0, 0xbe9f, 0x2096, 0x7b65, 0x0, 0x0);
        gbc.writeMem(0xc672, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xffba);
        EXPECT(gbc.pc(), 0xc674);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc672), 0xcb);
        EXPECT(gbc.readMem(0xc673), 0xe0);
        // CB E0 0220
        gbc.setState(0x9ea9, 0xf661, 0x6200, 0x6399, 0xfc9e, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0x9ea9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf661);
        EXPECT(gbc.pc(), 0x9eab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea9), 0xcb);
        EXPECT(gbc.readMem(0x9eaa), 0xe0);
        // CB E0 0221
        gbc.setState(0x49c3, 0x58c4, 0x9b80, 0x15ab, 0xae4b, 0x12fd, 0x1, 0x1);
        gbc.writeMem(0x49c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x58c4);
        EXPECT(gbc.pc(), 0x49c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0223
        gbc.setState(0xef4f, 0xc60a, 0x3bc0, 0x8676, 0x7090, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0xef4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc60a);
        EXPECT(gbc.pc(), 0xef51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef4f), 0xcb);
        EXPECT(gbc.readMem(0xef50), 0xe0);
        // CB E0 0224
        gbc.setState(0x6182, 0xdba1, 0xc00, 0x4d8a, 0x403d, 0x8e4, 0x0, 0x1);
        gbc.writeMem(0x6182, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x6184);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0225
        gbc.setState(0x8e34, 0x95a9, 0x4670, 0x1a76, 0x3160, 0xb17b, 0x1, 0x1);
        gbc.writeMem(0x8e34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x95a9);
        EXPECT(gbc.pc(), 0x8e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e34), 0xcb);
        EXPECT(gbc.readMem(0x8e35), 0xe0);
        // CB E0 0226
        gbc.setState(0x5070, 0xe810, 0xd9d0, 0xead1, 0x138c, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0x5070, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe810);
        EXPECT(gbc.pc(), 0x5072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0228
        gbc.setState(0x7936, 0x3f4c, 0x1da0, 0x2da0, 0x155b, 0xfb22, 0x1, 0x1);
        gbc.writeMem(0x7936, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x3f4c);
        EXPECT(gbc.pc(), 0x7938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0229
        gbc.setState(0x3ea5, 0xeae1, 0x1af0, 0x6328, 0xb0b4, 0x9a21, 0x0, 0x1);
        gbc.writeMem(0x3ea5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeae1);
        EXPECT(gbc.pc(), 0x3ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 022A
        gbc.setState(0x5ddd, 0x62dc, 0xe0d0, 0x2497, 0xa222, 0x9152, 0x0, 0x1);
        gbc.writeMem(0x5ddd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x62dc);
        EXPECT(gbc.pc(), 0x5ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 022B
        gbc.setState(0xefc8, 0x5efa, 0x1ea0, 0xf786, 0xc8c4, 0x9ad7, 0x1, 0x1);
        gbc.writeMem(0xefc8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5efa);
        EXPECT(gbc.pc(), 0xefca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefc8), 0xcb);
        EXPECT(gbc.readMem(0xefc9), 0xe0);
        // CB E0 022D
        gbc.setState(0xdb6d, 0x3fa7, 0x2b0, 0x272d, 0x622c, 0x341d, 0x0, 0x1);
        gbc.writeMem(0xdb6d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3fa7);
        EXPECT(gbc.pc(), 0xdb6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6d), 0xcb);
        EXPECT(gbc.readMem(0xdb6e), 0xe0);
        // CB E0 022F
        gbc.setState(0xb3a0, 0xf1ab, 0x1270, 0x302a, 0x9158, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0xb3a0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf1ab);
        EXPECT(gbc.pc(), 0xb3a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a0), 0xcb);
        EXPECT(gbc.readMem(0xb3a1), 0xe0);
        // CB E0 0230
        gbc.setState(0x7dae, 0xad9, 0x1620, 0x2768, 0xf7c2, 0x3ed9, 0x0, 0x0);
        gbc.writeMem(0x7dae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xad9);
        EXPECT(gbc.pc(), 0x7db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0231
        gbc.setState(0xb93a, 0x971e, 0x3380, 0x5a35, 0xc206, 0xac3c, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x971e);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0xe0);
        // CB E0 0232
        gbc.setState(0x5655, 0x19fa, 0xa990, 0xe341, 0x6af5, 0xbdc1, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x19fa);
        EXPECT(gbc.pc(), 0x5657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0233
        gbc.setState(0x11ba, 0xe5d2, 0x7dd0, 0x1d6d, 0x42b2, 0x3004, 0x0, 0x1);
        gbc.writeMem(0x11ba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe5d2);
        EXPECT(gbc.pc(), 0x11bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0234
        gbc.setState(0x140c, 0x4cbf, 0x80f0, 0xf362, 0xaf15, 0x758c, 0x0, 0x0);
        gbc.writeMem(0x140c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4cbf);
        EXPECT(gbc.pc(), 0x140e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0235
        gbc.setState(0x6e88, 0x6f2c, 0x69c0, 0x689b, 0x6e18, 0x6eb1, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6f2c);
        EXPECT(gbc.pc(), 0x6e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0236
        gbc.setState(0x890f, 0x4a09, 0x9b20, 0x62be, 0x95c2, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x4a09);
        EXPECT(gbc.pc(), 0x8911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x890f), 0xcb);
        EXPECT(gbc.readMem(0x8910), 0xe0);
        // CB E0 0237
        gbc.setState(0x10fb, 0x9958, 0xea40, 0xb82b, 0x61e6, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9958);
        EXPECT(gbc.pc(), 0x10fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0238
        gbc.setState(0xef3f, 0xbcb6, 0xaf90, 0x357, 0x8f8f, 0x868b, 0x0, 0x0);
        gbc.writeMem(0xef3f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbcb6);
        EXPECT(gbc.pc(), 0xef41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3f), 0xcb);
        EXPECT(gbc.readMem(0xef40), 0xe0);
        // CB E0 0239
        gbc.setState(0x5949, 0xc167, 0x2590, 0x712e, 0x7fd7, 0x2731, 0x0, 0x1);
        gbc.writeMem(0x5949, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc167);
        EXPECT(gbc.pc(), 0x594b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 023A
        gbc.setState(0x36db, 0xcb02, 0x7430, 0xff7, 0x8dd0, 0x2a8a, 0x0, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xcb02);
        EXPECT(gbc.pc(), 0x36dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 023B
        gbc.setState(0x2711, 0xa0b6, 0xe9d0, 0xaf88, 0x12b8, 0x6eb6, 0x1, 0x1);
        gbc.writeMem(0x2711, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa0b6);
        EXPECT(gbc.pc(), 0x2713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 023D
        gbc.setState(0x328c, 0x62df, 0xf990, 0x6be1, 0xb7be, 0x9573, 0x0, 0x0);
        gbc.writeMem(0x328c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x62df);
        EXPECT(gbc.pc(), 0x328e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 023E
        gbc.setState(0xa139, 0x558d, 0x5500, 0x32f7, 0x40c6, 0xc777, 0x0, 0x1);
        gbc.writeMem(0xa139, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x558d);
        EXPECT(gbc.pc(), 0xa13b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa139), 0xcb);
        EXPECT(gbc.readMem(0xa13a), 0xe0);
        // CB E0 023F
        gbc.setState(0x3a4c, 0xb373, 0x11c0, 0x2c45, 0x744c, 0x3f03, 0x1, 0x0);
        gbc.writeMem(0x3a4c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb373);
        EXPECT(gbc.pc(), 0x3a4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0240
        gbc.setState(0x3dc3, 0x5c9b, 0x9f90, 0xd4f4, 0x523e, 0x7014, 0x0, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5c9b);
        EXPECT(gbc.pc(), 0x3dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0241
        gbc.setState(0x19da, 0x4896, 0xe690, 0x713a, 0xd437, 0x9dfa, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4896);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0243
        gbc.setState(0x7649, 0x8607, 0x99a0, 0x592c, 0xac7b, 0xa7a5, 0x0, 0x0);
        gbc.writeMem(0x7649, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8607);
        EXPECT(gbc.pc(), 0x764b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0245
        gbc.setState(0x3d8a, 0x5e0a, 0x4a80, 0xd33e, 0x77b6, 0x8d1c, 0x0, 0x0);
        gbc.writeMem(0x3d8a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5e0a);
        EXPECT(gbc.pc(), 0x3d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0246
        gbc.setState(0x6ee9, 0x937d, 0x69c0, 0x124d, 0xbbc1, 0x68c4, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x937d);
        EXPECT(gbc.pc(), 0x6eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0247
        gbc.setState(0xc650, 0x8eca, 0x1bd0, 0xbfd5, 0xc3d6, 0x801f, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8eca);
        EXPECT(gbc.pc(), 0xc652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc650), 0xcb);
        EXPECT(gbc.readMem(0xc651), 0xe0);
        // CB E0 0248
        gbc.setState(0x3902, 0xb4e1, 0x5c50, 0xf1f0, 0x4455, 0xc8a8, 0x0, 0x1);
        gbc.writeMem(0x3902, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb4e1);
        EXPECT(gbc.pc(), 0x3904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0249
        gbc.setState(0xb3d3, 0xf465, 0x8650, 0x507c, 0xcff9, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf465);
        EXPECT(gbc.pc(), 0xb3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d3), 0xcb);
        EXPECT(gbc.readMem(0xb3d4), 0xe0);
        // CB E0 024A
        gbc.setState(0xd97a, 0x7c7e, 0xa260, 0x1088, 0x317e, 0x957c, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7c7e);
        EXPECT(gbc.pc(), 0xd97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd97a), 0xcb);
        EXPECT(gbc.readMem(0xd97b), 0xe0);
        // CB E0 024B
        gbc.setState(0x18a, 0x3f68, 0x12f0, 0x3dd2, 0x5bbe, 0x98a1, 0x1, 0x1);
        gbc.writeMem(0x18a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3f68);
        EXPECT(gbc.pc(), 0x18c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 024C
        gbc.setState(0x15da, 0x6994, 0x92e0, 0x7208, 0x2300, 0x133f, 0x0, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6994);
        EXPECT(gbc.pc(), 0x15dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 024D
        gbc.setState(0xb7e0, 0xef87, 0x3630, 0x2c74, 0x4fdd, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0xb7e0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0xb7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0xcb);
        EXPECT(gbc.readMem(0xb7e1), 0xe0);
        // CB E0 024E
        gbc.setState(0x4b9, 0x432b, 0xdec0, 0xdab6, 0x16c6, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0x4b9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x432b);
        EXPECT(gbc.pc(), 0x4bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 024F
        gbc.setState(0xbd8, 0xb684, 0x65b0, 0x5702, 0x8e69, 0xc654, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb684);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0251
        gbc.setState(0x4647, 0x56e1, 0x6f00, 0x2d5f, 0x3f6e, 0xad12, 0x1, 0x1);
        gbc.writeMem(0x4647, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x56e1);
        EXPECT(gbc.pc(), 0x4649);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0252
        gbc.setState(0xc5cc, 0x7aae, 0x9a0, 0x6434, 0xbc0f, 0x600f, 0x1, 0x1);
        gbc.writeMem(0xc5cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7aae);
        EXPECT(gbc.pc(), 0xc5ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5cc), 0xcb);
        EXPECT(gbc.readMem(0xc5cd), 0xe0);
        // CB E0 0253
        gbc.setState(0x80c2, 0x422d, 0x2460, 0x9546, 0x9f4, 0xd3fc, 0x1, 0x0);
        gbc.writeMem(0x80c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x422d);
        EXPECT(gbc.pc(), 0x80c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80c2), 0xcb);
        EXPECT(gbc.readMem(0x80c3), 0xe0);
        // CB E0 0254
        gbc.setState(0xe1b3, 0xdcc8, 0xc2a0, 0x3268, 0x3152, 0x1c, 0x0, 0x0);
        gbc.writeMem(0xe1b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xdcc8);
        EXPECT(gbc.pc(), 0xe1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b3), 0xcb);
        EXPECT(gbc.readMem(0xe1b4), 0xe0);
        // CB E0 0255
        gbc.setState(0xb1ec, 0xff06, 0x3150, 0xe280, 0x3346, 0x862b, 0x1, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xff06);
        EXPECT(gbc.pc(), 0xb1ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ec), 0xcb);
        EXPECT(gbc.readMem(0xb1ed), 0xe0);
        // CB E0 0256
        gbc.setState(0xa01f, 0x1258, 0x26f0, 0x4a60, 0x23fa, 0xca28, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x1258);
        EXPECT(gbc.pc(), 0xa021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01f), 0xcb);
        EXPECT(gbc.readMem(0xa020), 0xe0);
        // CB E0 0257
        gbc.setState(0xce61, 0xe113, 0xf990, 0xe600, 0x2969, 0x6810, 0x1, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe113);
        EXPECT(gbc.pc(), 0xce63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce61), 0xcb);
        EXPECT(gbc.readMem(0xce62), 0xe0);
        // CB E0 0258
        gbc.setState(0x18c8, 0x8e80, 0x9500, 0xea1, 0x80e3, 0x266e, 0x1, 0x1);
        gbc.writeMem(0x18c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8e80);
        EXPECT(gbc.pc(), 0x18ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0259
        gbc.setState(0xbb21, 0x8eb2, 0xe700, 0xb257, 0xb889, 0x5e04, 0x1, 0x1);
        gbc.writeMem(0xbb21, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8eb2);
        EXPECT(gbc.pc(), 0xbb23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb21), 0xcb);
        EXPECT(gbc.readMem(0xbb22), 0xe0);
        // CB E0 025A
        gbc.setState(0x4227, 0x3125, 0xa4d0, 0xbbc6, 0x2c2e, 0x538a, 0x0, 0x1);
        gbc.writeMem(0x4227, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3125);
        EXPECT(gbc.pc(), 0x4229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 025B
        gbc.setState(0xe6d5, 0x24ec, 0x2200, 0x45a8, 0x1705, 0xcf72, 0x0, 0x0);
        gbc.writeMem(0xe6d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x24ec);
        EXPECT(gbc.pc(), 0xe6d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d5), 0xcb);
        EXPECT(gbc.readMem(0xe6d6), 0xe0);
        // CB E0 025D
        gbc.setState(0xc47, 0xa2b9, 0x19a0, 0x976a, 0x4837, 0xa8c5, 0x1, 0x1);
        gbc.writeMem(0xc47, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa2b9);
        EXPECT(gbc.pc(), 0xc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 025E
        gbc.setState(0xbbdf, 0x3689, 0x8700, 0x5566, 0xfb02, 0x1c73, 0x1, 0x1);
        gbc.writeMem(0xbbdf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3689);
        EXPECT(gbc.pc(), 0xbbe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbdf), 0xcb);
        EXPECT(gbc.readMem(0xbbe0), 0xe0);
        // CB E0 025F
        gbc.setState(0x435f, 0xd90d, 0xf140, 0x261, 0xf7ee, 0x23d9, 0x0, 0x0);
        gbc.writeMem(0x435f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd90d);
        EXPECT(gbc.pc(), 0x4361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0260
        gbc.setState(0x6b58, 0x8a2a, 0xbfc0, 0x41, 0x1a05, 0x82c9, 0x0, 0x0);
        gbc.writeMem(0x6b58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8a2a);
        EXPECT(gbc.pc(), 0x6b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0261
        gbc.setState(0x22ba, 0x6d62, 0x1220, 0x8b0d, 0x126c, 0xa973, 0x1, 0x1);
        gbc.writeMem(0x22ba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6d62);
        EXPECT(gbc.pc(), 0x22bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0262
        gbc.setState(0x9893, 0xb12, 0x9810, 0x405, 0xa156, 0x790d, 0x0, 0x1);
        gbc.writeMem(0x9893, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xb12);
        EXPECT(gbc.pc(), 0x9895);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9893), 0xcb);
        EXPECT(gbc.readMem(0x9894), 0xe0);
        // CB E0 0263
        gbc.setState(0xb375, 0x9bef, 0x81c0, 0xf2fd, 0xc266, 0xcbbc, 0x1, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9bef);
        EXPECT(gbc.pc(), 0xb377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb375), 0xcb);
        EXPECT(gbc.readMem(0xb376), 0xe0);
        // CB E0 0264
        gbc.setState(0x3240, 0xf999, 0x1be0, 0xfa4, 0x8219, 0x886, 0x0, 0x1);
        gbc.writeMem(0x3240, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf999);
        EXPECT(gbc.pc(), 0x3242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0265
        gbc.setState(0xc5e3, 0x6e78, 0x19f0, 0xa487, 0xd8e8, 0x23a5, 0x1, 0x0);
        gbc.writeMem(0xc5e3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6e78);
        EXPECT(gbc.pc(), 0xc5e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e3), 0xcb);
        EXPECT(gbc.readMem(0xc5e4), 0xe0);
        // CB E0 0266
        gbc.setState(0x5f63, 0x8a40, 0xbb30, 0xf2ac, 0xaec6, 0x4ee2, 0x0, 0x1);
        gbc.writeMem(0x5f63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8a40);
        EXPECT(gbc.pc(), 0x5f65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0267
        gbc.setState(0xd9ec, 0xe470, 0x8820, 0x33d1, 0x7dce, 0x2619, 0x0, 0x0);
        gbc.writeMem(0xd9ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe470);
        EXPECT(gbc.pc(), 0xd9ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ec), 0xcb);
        EXPECT(gbc.readMem(0xd9ed), 0xe0);
        // CB E0 0268
        gbc.setState(0x692e, 0x1656, 0xf420, 0x9db8, 0x377b, 0xd6b, 0x0, 0x0);
        gbc.writeMem(0x692e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1656);
        EXPECT(gbc.pc(), 0x6930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0269
        gbc.setState(0x6db, 0x58ec, 0xa440, 0x39b8, 0xb71b, 0xa4c, 0x0, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x58ec);
        EXPECT(gbc.pc(), 0x6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 026A
        gbc.setState(0x53ef, 0xa961, 0xe1e0, 0x116c, 0x8402, 0xa860, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa961);
        EXPECT(gbc.pc(), 0x53f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 026B
        gbc.setState(0x48a9, 0xc58e, 0xeba0, 0x321e, 0xe774, 0xc8f2, 0x0, 0x0);
        gbc.writeMem(0x48a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc58e);
        EXPECT(gbc.pc(), 0x48ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 026C
        gbc.setState(0x216f, 0x3a01, 0x78c0, 0xc0ad, 0x231b, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0x216f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3a01);
        EXPECT(gbc.pc(), 0x2171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 026D
        gbc.setState(0xd74a, 0x5f0c, 0x2ac0, 0x4547, 0x30d3, 0x82f9, 0x0, 0x1);
        gbc.writeMem(0xd74a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5f0c);
        EXPECT(gbc.pc(), 0xd74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd74a), 0xcb);
        EXPECT(gbc.readMem(0xd74b), 0xe0);
        // CB E0 026E
        gbc.setState(0x6db8, 0xdaa4, 0x6890, 0x6330, 0xe3b5, 0x5482, 0x1, 0x0);
        gbc.writeMem(0x6db8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xdaa4);
        EXPECT(gbc.pc(), 0x6dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 026F
        gbc.setState(0x32d5, 0x4ea6, 0x9990, 0xe31c, 0xbeed, 0x8f45, 0x0, 0x1);
        gbc.writeMem(0x32d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4ea6);
        EXPECT(gbc.pc(), 0x32d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0270
        gbc.setState(0xf7c, 0x813b, 0xed30, 0x32c5, 0xdbc2, 0xbc30, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x813b);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0271
        gbc.setState(0x7095, 0xa669, 0xb3e0, 0x1d24, 0x2488, 0xd044, 0x0, 0x1);
        gbc.writeMem(0x7095, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa669);
        EXPECT(gbc.pc(), 0x7097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0272
        gbc.setState(0xdc95, 0xd1ce, 0x1920, 0x8d5a, 0x5933, 0xf5c6, 0x0, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd1ce);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0xe0);
        // CB E0 0273
        gbc.setState(0x8334, 0xcf5a, 0x52a0, 0xb388, 0x8f7e, 0xc171, 0x1, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcf5a);
        EXPECT(gbc.pc(), 0x8336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8334), 0xcb);
        EXPECT(gbc.readMem(0x8335), 0xe0);
        // CB E0 0274
        gbc.setState(0xd1f5, 0x445f, 0xc4e0, 0x3d55, 0x42a9, 0x6567, 0x0, 0x1);
        gbc.writeMem(0xd1f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x445f);
        EXPECT(gbc.pc(), 0xd1f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f5), 0xcb);
        EXPECT(gbc.readMem(0xd1f6), 0xe0);
        // CB E0 0275
        gbc.setState(0x3e1c, 0x4149, 0x8ed0, 0xe221, 0xd525, 0x2cf1, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x4149);
        EXPECT(gbc.pc(), 0x3e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0276
        gbc.setState(0x308f, 0xdc81, 0xc0f0, 0xe9d2, 0xc151, 0x4a71, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdc81);
        EXPECT(gbc.pc(), 0x3091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0277
        gbc.setState(0x3466, 0x32c4, 0x2e50, 0x2a9c, 0x34f7, 0x9dd1, 0x0, 0x1);
        gbc.writeMem(0x3466, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x32c4);
        EXPECT(gbc.pc(), 0x3468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0278
        gbc.setState(0x312b, 0x99e7, 0xd990, 0xf24, 0x4181, 0x8eb1, 0x0, 0x0);
        gbc.writeMem(0x312b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x99e7);
        EXPECT(gbc.pc(), 0x312d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0279
        gbc.setState(0x36ac, 0x9fee, 0x36c0, 0x4403, 0x69b1, 0x1e54, 0x0, 0x0);
        gbc.writeMem(0x36ac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9fee);
        EXPECT(gbc.pc(), 0x36ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 027A
        gbc.setState(0xe36a, 0x436, 0xd610, 0xd2f5, 0x6690, 0x334d, 0x1, 0x0);
        gbc.writeMem(0xe36a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x436);
        EXPECT(gbc.pc(), 0xe36c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe36a), 0xcb);
        EXPECT(gbc.readMem(0xe36b), 0xe0);
        // CB E0 027B
        gbc.setState(0x2d20, 0xcd6a, 0x40a0, 0x3483, 0xace3, 0x143, 0x0, 0x1);
        gbc.writeMem(0x2d20, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcd6a);
        EXPECT(gbc.pc(), 0x2d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 027C
        gbc.setState(0x6d5, 0xe471, 0x4330, 0xda06, 0x28fd, 0xe5da, 0x1, 0x0);
        gbc.writeMem(0x6d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe471);
        EXPECT(gbc.pc(), 0x6d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 027D
        gbc.setState(0x4b30, 0xb9e7, 0xb960, 0x3051, 0x213c, 0xa09b, 0x0, 0x0);
        gbc.writeMem(0x4b30, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb9e7);
        EXPECT(gbc.pc(), 0x4b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 027E
        gbc.setState(0xd79, 0xe8be, 0x250, 0xc8a7, 0xfedd, 0xe463, 0x0, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xe8be);
        EXPECT(gbc.pc(), 0xd7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 027F
        gbc.setState(0xe1b, 0x4121, 0x72f0, 0x8280, 0x7dc7, 0x7782, 0x0, 0x0);
        gbc.writeMem(0xe1b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4121);
        EXPECT(gbc.pc(), 0xe1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0281
        gbc.setState(0xaf29, 0x8581, 0x3960, 0xe01e, 0x154, 0xd454, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x8581);
        EXPECT(gbc.pc(), 0xaf2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf29), 0xcb);
        EXPECT(gbc.readMem(0xaf2a), 0xe0);
        // CB E0 0282
        gbc.setState(0xab0, 0x269a, 0x58e0, 0xa7f, 0x63b, 0xb5bd, 0x0, 0x1);
        gbc.writeMem(0xab0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x269a);
        EXPECT(gbc.pc(), 0xab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0283
        gbc.setState(0x623e, 0xbcaa, 0x8090, 0x9746, 0xd7e2, 0xb521, 0x0, 0x1);
        gbc.writeMem(0x623e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbcaa);
        EXPECT(gbc.pc(), 0x6240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0284
        gbc.setState(0x96a8, 0x4b56, 0xd560, 0x2944, 0x12f6, 0x1dc3, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4b56);
        EXPECT(gbc.pc(), 0x96aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a8), 0xcb);
        EXPECT(gbc.readMem(0x96a9), 0xe0);
        // CB E0 0285
        gbc.setState(0x321a, 0x4984, 0x2010, 0x6f5, 0x8f02, 0x47bd, 0x1, 0x0);
        gbc.writeMem(0x321a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4984);
        EXPECT(gbc.pc(), 0x321c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0286
        gbc.setState(0x32aa, 0xffd1, 0x7290, 0x8034, 0xed10, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x32aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xffd1);
        EXPECT(gbc.pc(), 0x32ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0288
        gbc.setState(0xdb32, 0x2e7c, 0x59b0, 0x2c66, 0xdfc7, 0x9b87, 0x1, 0x1);
        gbc.writeMem(0xdb32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x2e7c);
        EXPECT(gbc.pc(), 0xdb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb32), 0xcb);
        EXPECT(gbc.readMem(0xdb33), 0xe0);
        // CB E0 0289
        gbc.setState(0x118b, 0x7f5b, 0xe150, 0xd7a1, 0x854b, 0xa458, 0x0, 0x0);
        gbc.writeMem(0x118b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x7f5b);
        EXPECT(gbc.pc(), 0x118d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 028A
        gbc.setState(0x8076, 0x9111, 0x40d0, 0xbc83, 0x87a, 0x197e, 0x1, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xe0);
        // CB E0 028B
        gbc.setState(0xaef0, 0x2d34, 0x9e50, 0x1822, 0xafe1, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0xaef0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2d34);
        EXPECT(gbc.pc(), 0xaef2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaef0), 0xcb);
        EXPECT(gbc.readMem(0xaef1), 0xe0);
        // CB E0 028C
        gbc.setState(0x2163, 0xd641, 0xe930, 0x7bfd, 0x5b8c, 0x6fbd, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd641);
        EXPECT(gbc.pc(), 0x2165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 028D
        gbc.setState(0x9736, 0x879f, 0x3160, 0xac24, 0xa923, 0xdd5a, 0x1, 0x1);
        gbc.writeMem(0x9736, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x879f);
        EXPECT(gbc.pc(), 0x9738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9736), 0xcb);
        EXPECT(gbc.readMem(0x9737), 0xe0);
        // CB E0 028E
        gbc.setState(0x5401, 0x9bd, 0x9820, 0xe560, 0x8178, 0x7d1, 0x0, 0x0);
        gbc.writeMem(0x5401, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9bd);
        EXPECT(gbc.pc(), 0x5403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 028F
        gbc.setState(0xf4c, 0x99a3, 0x12e0, 0xbf53, 0xbd1, 0x1f1e, 0x0, 0x0);
        gbc.writeMem(0xf4c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x99a3);
        EXPECT(gbc.pc(), 0xf4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0290
        gbc.setState(0xa154, 0x2707, 0xd420, 0x4e7b, 0x6086, 0x865e, 0x0, 0x0);
        gbc.writeMem(0xa154, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2707);
        EXPECT(gbc.pc(), 0xa156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa154), 0xcb);
        EXPECT(gbc.readMem(0xa155), 0xe0);
        // CB E0 0291
        gbc.setState(0x85f3, 0xceea, 0xd050, 0xf380, 0x543, 0x8ec8, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xceea);
        EXPECT(gbc.pc(), 0x85f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f3), 0xcb);
        EXPECT(gbc.readMem(0x85f4), 0xe0);
        // CB E0 0292
        gbc.setState(0x4ba6, 0xa230, 0x4720, 0xe9b, 0x2462, 0x72ec, 0x0, 0x1);
        gbc.writeMem(0x4ba6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa230);
        EXPECT(gbc.pc(), 0x4ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0293
        gbc.setState(0x6b7c, 0x8d7e, 0x8d00, 0xdeb7, 0x69c4, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8d7e);
        EXPECT(gbc.pc(), 0x6b7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0294
        gbc.setState(0xa88b, 0xfbda, 0xe830, 0xceb9, 0xaa1c, 0xd6e8, 0x0, 0x1);
        gbc.writeMem(0xa88b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xfbda);
        EXPECT(gbc.pc(), 0xa88d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa88b), 0xcb);
        EXPECT(gbc.readMem(0xa88c), 0xe0);
        // CB E0 0295
        gbc.setState(0x6d7e, 0xb682, 0x9ec0, 0x3951, 0xbd49, 0xe018, 0x0, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb682);
        EXPECT(gbc.pc(), 0x6d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0296
        gbc.setState(0x69a, 0xb366, 0x5f10, 0x7cf5, 0x68f3, 0xc755, 0x0, 0x1);
        gbc.writeMem(0x69a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb366);
        EXPECT(gbc.pc(), 0x69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0297
        gbc.setState(0x110e, 0x34e, 0xc810, 0x82fc, 0x3a28, 0x157c, 0x1, 0x0);
        gbc.writeMem(0x110e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x34e);
        EXPECT(gbc.pc(), 0x1110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0298
        gbc.setState(0x4f76, 0x9d44, 0xbcf0, 0x3f66, 0xcb, 0xea4f, 0x0, 0x0);
        gbc.writeMem(0x4f76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x9d44);
        EXPECT(gbc.pc(), 0x4f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0299
        gbc.setState(0x7212, 0x9cac, 0x5610, 0x13e9, 0xe4e3, 0x1326, 0x1, 0x0);
        gbc.writeMem(0x7212, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x9cac);
        EXPECT(gbc.pc(), 0x7214);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 029A
        gbc.setState(0xef2b, 0x84c3, 0xd950, 0xd0e3, 0x1dde, 0xa52c, 0x1, 0x1);
        gbc.writeMem(0xef2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x84c3);
        EXPECT(gbc.pc(), 0xef2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef2b), 0xcb);
        EXPECT(gbc.readMem(0xef2c), 0xe0);
        // CB E0 029B
        gbc.setState(0x289e, 0xb3, 0x5a50, 0xe574, 0x1a41, 0xf43f, 0x0, 0x1);
        gbc.writeMem(0x289e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb3);
        EXPECT(gbc.pc(), 0x28a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 029C
        gbc.setState(0x4f4a, 0xc228, 0x8fe0, 0xf30, 0x3ee1, 0x4092, 0x0, 0x0);
        gbc.writeMem(0x4f4a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc228);
        EXPECT(gbc.pc(), 0x4f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 029D
        gbc.setState(0x2e1b, 0x80b4, 0x7080, 0x4209, 0xd3d0, 0xa00f, 0x1, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x80b4);
        EXPECT(gbc.pc(), 0x2e1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 029E
        gbc.setState(0x9692, 0x4c92, 0x2120, 0x4d17, 0xc6eb, 0xe794, 0x0, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4c92);
        EXPECT(gbc.pc(), 0x9694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9692), 0xcb);
        EXPECT(gbc.readMem(0x9693), 0xe0);
        // CB E0 029F
        gbc.setState(0xd6b2, 0x72d3, 0xce80, 0x5802, 0x933e, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0xd6b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x72d3);
        EXPECT(gbc.pc(), 0xd6b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b2), 0xcb);
        EXPECT(gbc.readMem(0xd6b3), 0xe0);
        // CB E0 02A0
        gbc.setState(0xc4bd, 0xa34b, 0xe950, 0x30ba, 0xdd6, 0x4db0, 0x1, 0x0);
        gbc.writeMem(0xc4bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa34b);
        EXPECT(gbc.pc(), 0xc4bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bd), 0xcb);
        EXPECT(gbc.readMem(0xc4be), 0xe0);
        // CB E0 02A1
        gbc.setState(0x750e, 0x72ca, 0xdfc0, 0x6999, 0x6cf2, 0x695f, 0x0, 0x1);
        gbc.writeMem(0x750e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x72ca);
        EXPECT(gbc.pc(), 0x7510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02A2
        gbc.setState(0x14b, 0xf1d6, 0x70a0, 0x80d1, 0x5588, 0x12a1, 0x0, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf1d6);
        EXPECT(gbc.pc(), 0x14d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02A3
        gbc.setState(0x727d, 0x3557, 0xb40, 0xcdaf, 0x63ec, 0xca29, 0x1, 0x1);
        gbc.writeMem(0x727d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3557);
        EXPECT(gbc.pc(), 0x727f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02A4
        gbc.setState(0xa406, 0xcb77, 0x84d0, 0xb265, 0xe111, 0x2d63, 0x0, 0x0);
        gbc.writeMem(0xa406, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcb77);
        EXPECT(gbc.pc(), 0xa408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa406), 0xcb);
        EXPECT(gbc.readMem(0xa407), 0xe0);
        // CB E0 02A5
        gbc.setState(0x3bfe, 0x663, 0xb6f0, 0xaf51, 0x660c, 0xb4a5, 0x0, 0x0);
        gbc.writeMem(0x3bfe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x663);
        EXPECT(gbc.pc(), 0x3c00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02A6
        gbc.setState(0x3663, 0xf051, 0x4ad0, 0x5237, 0x1760, 0xbae4, 0x0, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf051);
        EXPECT(gbc.pc(), 0x3665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02A7
        gbc.setState(0xb8f7, 0xdf1b, 0x2a80, 0xb374, 0x65aa, 0xa1e5, 0x1, 0x0);
        gbc.writeMem(0xb8f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xdf1b);
        EXPECT(gbc.pc(), 0xb8f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8f7), 0xcb);
        EXPECT(gbc.readMem(0xb8f8), 0xe0);
        // CB E0 02A8
        gbc.setState(0x5c80, 0x90ee, 0x9d50, 0x197e, 0xddbd, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x5c80, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x90ee);
        EXPECT(gbc.pc(), 0x5c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02A9
        gbc.setState(0x3c3d, 0xbe2d, 0x6530, 0xdc1d, 0xb0b5, 0xe1ee, 0x0, 0x1);
        gbc.writeMem(0x3c3d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbe2d);
        EXPECT(gbc.pc(), 0x3c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02AA
        gbc.setState(0x2eaf, 0xe2ab, 0x6d10, 0xc94f, 0xa968, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0x2eaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe2ab);
        EXPECT(gbc.pc(), 0x2eb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02AB
        gbc.setState(0x8d76, 0xc236, 0xaba0, 0x781, 0x8978, 0x70c7, 0x1, 0x1);
        gbc.writeMem(0x8d76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc236);
        EXPECT(gbc.pc(), 0x8d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d76), 0xcb);
        EXPECT(gbc.readMem(0x8d77), 0xe0);
        // CB E0 02AC
        gbc.setState(0xbf41, 0xdeb, 0xb770, 0xa35, 0x54d3, 0x2f5a, 0x0, 0x0);
        gbc.writeMem(0xbf41, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdeb);
        EXPECT(gbc.pc(), 0xbf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf41), 0xcb);
        EXPECT(gbc.readMem(0xbf42), 0xe0);
        // CB E0 02AD
        gbc.setState(0xd366, 0x9284, 0xcda0, 0xea33, 0x69e9, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0xd366, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9284);
        EXPECT(gbc.pc(), 0xd368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd366), 0xcb);
        EXPECT(gbc.readMem(0xd367), 0xe0);
        // CB E0 02AE
        gbc.setState(0x7b1, 0x8950, 0x9d0, 0x22af, 0x75f2, 0xb986, 0x1, 0x0);
        gbc.writeMem(0x7b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8950);
        EXPECT(gbc.pc(), 0x7b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02AF
        gbc.setState(0x3160, 0x8d75, 0x8200, 0x6d25, 0xd63a, 0xaf15, 0x0, 0x0);
        gbc.writeMem(0x3160, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8d75);
        EXPECT(gbc.pc(), 0x3162);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02B0
        gbc.setState(0x72d5, 0x3bba, 0x4e20, 0x3c82, 0xfc92, 0x86bc, 0x0, 0x0);
        gbc.writeMem(0x72d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3bba);
        EXPECT(gbc.pc(), 0x72d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02B1
        gbc.setState(0xa58, 0xa007, 0x8ef0, 0xf2cf, 0x7933, 0xc316, 0x0, 0x1);
        gbc.writeMem(0xa58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa007);
        EXPECT(gbc.pc(), 0xa5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02B2
        gbc.setState(0xaf32, 0x40fb, 0xe110, 0xef60, 0x52f7, 0x52d, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x40fb);
        EXPECT(gbc.pc(), 0xaf34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf32), 0xcb);
        EXPECT(gbc.readMem(0xaf33), 0xe0);
        // CB E0 02B3
        gbc.setState(0xb829, 0xe65f, 0xd60, 0x2034, 0xff99, 0xf753, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe65f);
        EXPECT(gbc.pc(), 0xb82b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb829), 0xcb);
        EXPECT(gbc.readMem(0xb82a), 0xe0);
        // CB E0 02B4
        gbc.setState(0xd06, 0xf8ac, 0x4950, 0xb892, 0x2de0, 0x2a59, 0x0, 0x0);
        gbc.writeMem(0xd06, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf8ac);
        EXPECT(gbc.pc(), 0xd08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02B5
        gbc.setState(0x390b, 0x5710, 0x9ed0, 0x24e5, 0x2a21, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0x390b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5710);
        EXPECT(gbc.pc(), 0x390d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02B6
        gbc.setState(0xecc4, 0x35ea, 0xa050, 0x9557, 0x2065, 0x5c0f, 0x0, 0x1);
        gbc.writeMem(0xecc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x35ea);
        EXPECT(gbc.pc(), 0xecc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc4), 0xcb);
        EXPECT(gbc.readMem(0xecc5), 0xe0);
        // CB E0 02B8
        gbc.setState(0x38c4, 0x6392, 0xa9b0, 0x7aa0, 0x15a1, 0x6706, 0x1, 0x1);
        gbc.writeMem(0x38c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6392);
        EXPECT(gbc.pc(), 0x38c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02B9
        gbc.setState(0xe8bf, 0xbd63, 0x3770, 0x4ca2, 0x12a5, 0xd174, 0x1, 0x0);
        gbc.writeMem(0xe8bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xbd63);
        EXPECT(gbc.pc(), 0xe8c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8bf), 0xcb);
        EXPECT(gbc.readMem(0xe8c0), 0xe0);
        // CB E0 02BA
        gbc.setState(0xebc3, 0x7198, 0x9460, 0xcbb7, 0xb4bd, 0x3f50, 0x0, 0x0);
        gbc.writeMem(0xebc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7198);
        EXPECT(gbc.pc(), 0xebc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc3), 0xcb);
        EXPECT(gbc.readMem(0xebc4), 0xe0);
        // CB E0 02BB
        gbc.setState(0x4f10, 0x7efd, 0x9440, 0x57fa, 0x990d, 0x5efe, 0x1, 0x0);
        gbc.writeMem(0x4f10, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7efd);
        EXPECT(gbc.pc(), 0x4f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02BC
        gbc.setState(0x7938, 0x14f7, 0x1240, 0x4c22, 0xeb4b, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x14f7);
        EXPECT(gbc.pc(), 0x793a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02BD
        gbc.setState(0x4bcc, 0xd29a, 0x4240, 0xce4, 0x20ce, 0x78e7, 0x1, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd29a);
        EXPECT(gbc.pc(), 0x4bce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02BE
        gbc.setState(0x8ff, 0x77e3, 0x4dc0, 0x9700, 0x7db2, 0xc16, 0x0, 0x1);
        gbc.writeMem(0x8ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x77e3);
        EXPECT(gbc.pc(), 0x901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02BF
        gbc.setState(0x2ba4, 0x80c7, 0x4060, 0xb020, 0xa384, 0xd52, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x80c7);
        EXPECT(gbc.pc(), 0x2ba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02C0
        gbc.setState(0x4405, 0xdc7f, 0x8140, 0x8e4c, 0x189c, 0x7d7f, 0x0, 0x0);
        gbc.writeMem(0x4405, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xdc7f);
        EXPECT(gbc.pc(), 0x4407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02C1
        gbc.setState(0x9b8e, 0x2dc9, 0xf8e0, 0xbda1, 0xe670, 0xb90, 0x0, 0x0);
        gbc.writeMem(0x9b8e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2dc9);
        EXPECT(gbc.pc(), 0x9b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b8e), 0xcb);
        EXPECT(gbc.readMem(0x9b8f), 0xe0);
        // CB E0 02C2
        gbc.setState(0x1057, 0x2ea1, 0x1570, 0xca54, 0x1bdd, 0xd82c, 0x0, 0x1);
        gbc.writeMem(0x1057, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2ea1);
        EXPECT(gbc.pc(), 0x1059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02C3
        gbc.setState(0xdae6, 0xa3d3, 0x6c30, 0x327a, 0xa41b, 0xff86, 0x0, 0x1);
        gbc.writeMem(0xdae6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa3d3);
        EXPECT(gbc.pc(), 0xdae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdae6), 0xcb);
        EXPECT(gbc.readMem(0xdae7), 0xe0);
        // CB E0 02C4
        gbc.setState(0x4206, 0xf461, 0xe890, 0x1118, 0xd0d, 0x3035, 0x0, 0x0);
        gbc.writeMem(0x4206, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf461);
        EXPECT(gbc.pc(), 0x4208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02C5
        gbc.setState(0xc85, 0xbe4c, 0x92a0, 0x6461, 0x330f, 0x593b, 0x0, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbe4c);
        EXPECT(gbc.pc(), 0xc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02C6
        gbc.setState(0xc75c, 0x63cd, 0x5cb0, 0x832e, 0xf04b, 0xfc6d, 0x1, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x63cd);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75c), 0xcb);
        EXPECT(gbc.readMem(0xc75d), 0xe0);
        // CB E0 02C7
        gbc.setState(0x4508, 0xe1db, 0x1cf0, 0x9ad1, 0x6bff, 0xa12e, 0x0, 0x0);
        gbc.writeMem(0x4508, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe1db);
        EXPECT(gbc.pc(), 0x450a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02C8
        gbc.setState(0x2808, 0x1b38, 0x2880, 0xec02, 0x730f, 0xc22a, 0x1, 0x0);
        gbc.writeMem(0x2808, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1b38);
        EXPECT(gbc.pc(), 0x280a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02C9
        gbc.setState(0xcba3, 0x9805, 0x7e10, 0x9d94, 0xa68e, 0xad56, 0x1, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x9805);
        EXPECT(gbc.pc(), 0xcba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcba3), 0xcb);
        EXPECT(gbc.readMem(0xcba4), 0xe0);
        // CB E0 02CA
        gbc.setState(0x42db, 0x8776, 0xb9e0, 0x6ac0, 0x3a53, 0x54c0, 0x0, 0x1);
        gbc.writeMem(0x42db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8776);
        EXPECT(gbc.pc(), 0x42dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02CB
        gbc.setState(0xbed7, 0x97ab, 0x5760, 0x8d52, 0x3521, 0x146a, 0x1, 0x0);
        gbc.writeMem(0xbed7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x97ab);
        EXPECT(gbc.pc(), 0xbed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbed7), 0xcb);
        EXPECT(gbc.readMem(0xbed8), 0xe0);
        // CB E0 02CC
        gbc.setState(0xc0f2, 0xbc2f, 0xf3b0, 0x9f46, 0xa373, 0x8ff0, 0x1, 0x0);
        gbc.writeMem(0xc0f2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xbc2f);
        EXPECT(gbc.pc(), 0xc0f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f2), 0xcb);
        EXPECT(gbc.readMem(0xc0f3), 0xe0);
        // CB E0 02CD
        gbc.setState(0xa4c5, 0xa12, 0xcb90, 0x89b, 0x834a, 0xcad, 0x0, 0x1);
        gbc.writeMem(0xa4c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa12);
        EXPECT(gbc.pc(), 0xa4c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4c5), 0xcb);
        EXPECT(gbc.readMem(0xa4c6), 0xe0);
        // CB E0 02CE
        gbc.setState(0x57e3, 0xcf3c, 0x3d20, 0x8433, 0xb1e1, 0xc214, 0x0, 0x0);
        gbc.writeMem(0x57e3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xcf3c);
        EXPECT(gbc.pc(), 0x57e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02CF
        gbc.setState(0x7a53, 0xba07, 0x3ae0, 0x55ac, 0xd8d3, 0x1948, 0x0, 0x0);
        gbc.writeMem(0x7a53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xba07);
        EXPECT(gbc.pc(), 0x7a55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02D0
        gbc.setState(0x7051, 0x1c60, 0xa60, 0xf985, 0xed04, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1c60);
        EXPECT(gbc.pc(), 0x7053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02D1
        gbc.setState(0xd6e0, 0xe1c, 0xa3e0, 0x8b55, 0x6e30, 0xb0b1, 0x0, 0x1);
        gbc.writeMem(0xd6e0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe1c);
        EXPECT(gbc.pc(), 0xd6e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e0), 0xcb);
        EXPECT(gbc.readMem(0xd6e1), 0xe0);
        // CB E0 02D2
        gbc.setState(0x25fa, 0xaf16, 0xbb10, 0x4d04, 0xb638, 0xc515, 0x0, 0x1);
        gbc.writeMem(0x25fa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaf16);
        EXPECT(gbc.pc(), 0x25fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02D3
        gbc.setState(0x8d26, 0xca71, 0xbee0, 0x2cda, 0x8f82, 0xb820, 0x0, 0x1);
        gbc.writeMem(0x8d26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xca71);
        EXPECT(gbc.pc(), 0x8d28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d26), 0xcb);
        EXPECT(gbc.readMem(0x8d27), 0xe0);
        // CB E0 02D4
        gbc.setState(0xd49e, 0xf22, 0x2760, 0x31ee, 0xeae5, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf22);
        EXPECT(gbc.pc(), 0xd4a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd49e), 0xcb);
        EXPECT(gbc.readMem(0xd49f), 0xe0);
        // CB E0 02D5
        gbc.setState(0xaf, 0xcb62, 0xddd0, 0xa904, 0x3894, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0xaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcb62);
        EXPECT(gbc.pc(), 0xb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02D6
        gbc.setState(0xd5b2, 0x811e, 0x1a30, 0x43c1, 0x1430, 0x38a1, 0x0, 0x1);
        gbc.writeMem(0xd5b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x811e);
        EXPECT(gbc.pc(), 0xd5b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b2), 0xcb);
        EXPECT(gbc.readMem(0xd5b3), 0xe0);
        // CB E0 02D7
        gbc.setState(0x5d18, 0xc47f, 0x4f30, 0x853b, 0xd3dc, 0xcf50, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc47f);
        EXPECT(gbc.pc(), 0x5d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02D8
        gbc.setState(0x2be0, 0x6f12, 0xd1e0, 0xc8b7, 0x6fa1, 0x7801, 0x1, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6f12);
        EXPECT(gbc.pc(), 0x2be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02D9
        gbc.setState(0x2fc4, 0xbd5c, 0xa3c0, 0xf742, 0xc4d3, 0xe435, 0x1, 0x0);
        gbc.writeMem(0x2fc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xbd5c);
        EXPECT(gbc.pc(), 0x2fc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02DD
        gbc.setState(0x8bc1, 0x5136, 0x920, 0x50e2, 0xc080, 0x7940, 0x0, 0x0);
        gbc.writeMem(0x8bc1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5136);
        EXPECT(gbc.pc(), 0x8bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc1), 0xcb);
        EXPECT(gbc.readMem(0x8bc2), 0xe0);
        // CB E0 02DE
        gbc.setState(0xc252, 0x2a8e, 0x2280, 0x7cda, 0x886, 0x52e, 0x0, 0x1);
        gbc.writeMem(0xc252, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x2a8e);
        EXPECT(gbc.pc(), 0xc254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc252), 0xcb);
        EXPECT(gbc.readMem(0xc253), 0xe0);
        // CB E0 02DF
        gbc.setState(0x33ea, 0xcad3, 0xa440, 0xcdef, 0xe94a, 0x23b8, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcad3);
        EXPECT(gbc.pc(), 0x33ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02E0
        gbc.setState(0x28b5, 0x1a30, 0xbf90, 0xf5a9, 0x2b37, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1a30);
        EXPECT(gbc.pc(), 0x28b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02E1
        gbc.setState(0x62e5, 0xfb95, 0xe2a0, 0x2f5b, 0xb6aa, 0xad27, 0x1, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xfb95);
        EXPECT(gbc.pc(), 0x62e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02E3
        gbc.setState(0x83c8, 0xa506, 0x4590, 0xfc3c, 0x67ba, 0x8da5, 0x0, 0x1);
        gbc.writeMem(0x83c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0x83ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c8), 0xcb);
        EXPECT(gbc.readMem(0x83c9), 0xe0);
        // CB E0 02E4
        gbc.setState(0x7b95, 0x9d34, 0x8bb0, 0x8b5b, 0x6e04, 0x57c2, 0x0, 0x1);
        gbc.writeMem(0x7b95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9d34);
        EXPECT(gbc.pc(), 0x7b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02E5
        gbc.setState(0xabb, 0x2bb1, 0x8750, 0x8faf, 0xa174, 0xd2d9, 0x0, 0x1);
        gbc.writeMem(0xabb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2bb1);
        EXPECT(gbc.pc(), 0xabd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02E6
        gbc.setState(0x66ce, 0x5b67, 0xefd0, 0xdfa9, 0xae59, 0xe2b0, 0x1, 0x0);
        gbc.writeMem(0x66ce, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5b67);
        EXPECT(gbc.pc(), 0x66d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02E7
        gbc.setState(0x6ae2, 0x6915, 0x6490, 0xd885, 0xb5e5, 0x6a3e, 0x0, 0x1);
        gbc.writeMem(0x6ae2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6915);
        EXPECT(gbc.pc(), 0x6ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02E8
        gbc.setState(0xbf9, 0xe3fe, 0xace0, 0x63c8, 0xdc64, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0xbf9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe3fe);
        EXPECT(gbc.pc(), 0xbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02E9
        gbc.setState(0x7eef, 0xf949, 0xbdb0, 0xb3fb, 0x1d97, 0x652, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf949);
        EXPECT(gbc.pc(), 0x7ef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02EA
        gbc.setState(0xd66e, 0x3b9e, 0xaf0, 0x2ddd, 0x336c, 0x1a8c, 0x1, 0x1);
        gbc.writeMem(0xd66e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x3b9e);
        EXPECT(gbc.pc(), 0xd670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66e), 0xcb);
        EXPECT(gbc.readMem(0xd66f), 0xe0);
        // CB E0 02EB
        gbc.setState(0xc262, 0x522c, 0xccb0, 0xa961, 0x73e2, 0xba3c, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0xc264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc262), 0xcb);
        EXPECT(gbc.readMem(0xc263), 0xe0);
        // CB E0 02EC
        gbc.setState(0xbab1, 0x3a5a, 0x8cb0, 0x6e6e, 0x84d9, 0xd1ff, 0x0, 0x1);
        gbc.writeMem(0xbab1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3a5a);
        EXPECT(gbc.pc(), 0xbab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbab1), 0xcb);
        EXPECT(gbc.readMem(0xbab2), 0xe0);
        // CB E0 02ED
        gbc.setState(0x525d, 0x94a9, 0x9cc0, 0x1a98, 0x9c50, 0xba84, 0x0, 0x1);
        gbc.writeMem(0x525d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x94a9);
        EXPECT(gbc.pc(), 0x525f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02EE
        gbc.setState(0x48de, 0xbef7, 0xd40, 0xc492, 0x6d89, 0x9090, 0x1, 0x0);
        gbc.writeMem(0x48de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbef7);
        EXPECT(gbc.pc(), 0x48e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02EF
        gbc.setState(0x323f, 0x1630, 0x7e00, 0xed4e, 0x8f28, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0x323f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1630);
        EXPECT(gbc.pc(), 0x3241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02F0
        gbc.setState(0x9d9f, 0x8c35, 0x1c70, 0xd856, 0xebd2, 0xd528, 0x1, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8c35);
        EXPECT(gbc.pc(), 0x9da1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d9f), 0xcb);
        EXPECT(gbc.readMem(0x9da0), 0xe0);
        // CB E0 02F1
        gbc.setState(0x3f5, 0x2824, 0xc320, 0x63f2, 0x15af, 0x4b41, 0x0, 0x0);
        gbc.writeMem(0x3f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2824);
        EXPECT(gbc.pc(), 0x3f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 02F2
        gbc.setState(0xb9af, 0xbf34, 0xbae0, 0x7423, 0xb148, 0xaa62, 0x1, 0x1);
        gbc.writeMem(0xb9af, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbf34);
        EXPECT(gbc.pc(), 0xb9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9af), 0xcb);
        EXPECT(gbc.readMem(0xb9b0), 0xe0);
        // CB E0 02F3
        gbc.setState(0xda62, 0x4ab1, 0xb8b0, 0xbaff, 0x6e8b, 0xcc37, 0x0, 0x0);
        gbc.writeMem(0xda62, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4ab1);
        EXPECT(gbc.pc(), 0xda64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda62), 0xcb);
        EXPECT(gbc.readMem(0xda63), 0xe0);
        // CB E0 02F4
        gbc.setState(0x984e, 0x9bbc, 0x5b70, 0xf703, 0x242a, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9bbc);
        EXPECT(gbc.pc(), 0x9850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984e), 0xcb);
        EXPECT(gbc.readMem(0x984f), 0xe0);
        // CB E0 02F5
        gbc.setState(0x9982, 0xdeb7, 0x9e0, 0xb1f2, 0x3208, 0x3024, 0x1, 0x1);
        gbc.writeMem(0x9982, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xdeb7);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9982), 0xcb);
        EXPECT(gbc.readMem(0x9983), 0xe0);
        // CB E0 02F6
        gbc.setState(0xb7cd, 0x5ce2, 0x7060, 0xaa2b, 0x2181, 0x75cf, 0x0, 0x1);
        gbc.writeMem(0xb7cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0xb7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7cd), 0xcb);
        EXPECT(gbc.readMem(0xb7ce), 0xe0);
        // CB E0 02F7
        gbc.setState(0xc498, 0x3224, 0xccf0, 0x3f20, 0xf911, 0x7a4c, 0x0, 0x1);
        gbc.writeMem(0xc498, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3224);
        EXPECT(gbc.pc(), 0xc49a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc498), 0xcb);
        EXPECT(gbc.readMem(0xc499), 0xe0);
        // CB E0 02F9
        gbc.setState(0xedb5, 0xd511, 0xc2b0, 0x4dcc, 0xd0c8, 0x52be, 0x0, 0x0);
        gbc.writeMem(0xedb5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd511);
        EXPECT(gbc.pc(), 0xedb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedb5), 0xcb);
        EXPECT(gbc.readMem(0xedb6), 0xe0);
        // CB E0 02FA
        gbc.setState(0x3fa0, 0x22cd, 0xfb50, 0x28a2, 0xdcf1, 0xc199, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x22cd);
        EXPECT(gbc.pc(), 0x3fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 02FB
        gbc.setState(0xc84f, 0x97d5, 0x69f0, 0x4eb3, 0xc108, 0xb392, 0x0, 0x1);
        gbc.writeMem(0xc84f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x97d5);
        EXPECT(gbc.pc(), 0xc851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84f), 0xcb);
        EXPECT(gbc.readMem(0xc850), 0xe0);
        // CB E0 02FC
        gbc.setState(0xac95, 0x287, 0x9a50, 0x6654, 0x13c8, 0x13a4, 0x0, 0x1);
        gbc.writeMem(0xac95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x287);
        EXPECT(gbc.pc(), 0xac97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac95), 0xcb);
        EXPECT(gbc.readMem(0xac96), 0xe0);
        // CB E0 02FD
        gbc.setState(0x8e45, 0xa28e, 0xf40, 0xa792, 0x69d6, 0x2011, 0x0, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa28e);
        EXPECT(gbc.pc(), 0x8e47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e45), 0xcb);
        EXPECT(gbc.readMem(0x8e46), 0xe0);
        // CB E0 02FE
        gbc.setState(0xdb42, 0xf453, 0xa900, 0x6838, 0x77a1, 0x776d, 0x1, 0x1);
        gbc.writeMem(0xdb42, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xf453);
        EXPECT(gbc.pc(), 0xdb44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb42), 0xcb);
        EXPECT(gbc.readMem(0xdb43), 0xe0);
        // CB E0 02FF
        gbc.setState(0x2d40, 0xe210, 0xf120, 0xb4ef, 0xd79, 0x36cc, 0x0, 0x1);
        gbc.writeMem(0x2d40, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe210);
        EXPECT(gbc.pc(), 0x2d42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0300
        gbc.setState(0x7471, 0xe40b, 0xb630, 0xc7cd, 0x162d, 0x446e, 0x0, 0x1);
        gbc.writeMem(0x7471, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe40b);
        EXPECT(gbc.pc(), 0x7473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0301
        gbc.setState(0x2ac7, 0xfa76, 0x2630, 0xb753, 0x1669, 0x6aaf, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xfa76);
        EXPECT(gbc.pc(), 0x2ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0303
        gbc.setState(0x6507, 0x11e, 0x8f0, 0xb35a, 0x7d6f, 0x435, 0x0, 0x1);
        gbc.writeMem(0x6507, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x11e);
        EXPECT(gbc.pc(), 0x6509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0304
        gbc.setState(0x3c9e, 0x8b72, 0xeba0, 0x2806, 0x2b1b, 0x5b7, 0x1, 0x0);
        gbc.writeMem(0x3c9e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8b72);
        EXPECT(gbc.pc(), 0x3ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0305
        gbc.setState(0x3e1a, 0xc859, 0x9c60, 0x82d1, 0xc77f, 0x724a, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc859);
        EXPECT(gbc.pc(), 0x3e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0306
        gbc.setState(0x6443, 0x4d8f, 0x5b90, 0x8110, 0x117c, 0x583, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4d8f);
        EXPECT(gbc.pc(), 0x6445);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0307
        gbc.setState(0xb6b1, 0x1a8a, 0xaa50, 0x402b, 0xe061, 0xbac6, 0x1, 0x0);
        gbc.writeMem(0xb6b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1a8a);
        EXPECT(gbc.pc(), 0xb6b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6b1), 0xcb);
        EXPECT(gbc.readMem(0xb6b2), 0xe0);
        // CB E0 0308
        gbc.setState(0x35c3, 0xc246, 0xbc90, 0xe1e1, 0x6a05, 0x6f77, 0x0, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc246);
        EXPECT(gbc.pc(), 0x35c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0309
        gbc.setState(0x30f, 0xcc65, 0xf150, 0xd17c, 0x3e65, 0xb2e4, 0x1, 0x1);
        gbc.writeMem(0x30f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xcc65);
        EXPECT(gbc.pc(), 0x311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 030A
        gbc.setState(0x264a, 0xc63b, 0xf430, 0x1918, 0xfb9b, 0xc3c1, 0x0, 0x1);
        gbc.writeMem(0x264a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc63b);
        EXPECT(gbc.pc(), 0x264c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 030B
        gbc.setState(0x4a0d, 0xc73d, 0x4c0, 0x4806, 0xb60e, 0xbdc0, 0x1, 0x1);
        gbc.writeMem(0x4a0d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc73d);
        EXPECT(gbc.pc(), 0x4a0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 030C
        gbc.setState(0xafaf, 0xb939, 0xf3b0, 0x759d, 0x2056, 0xde72, 0x1, 0x0);
        gbc.writeMem(0xafaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb939);
        EXPECT(gbc.pc(), 0xafb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaf), 0xcb);
        EXPECT(gbc.readMem(0xafb0), 0xe0);
        // CB E0 030D
        gbc.setState(0x4ead, 0xb10, 0xf840, 0xc371, 0x5cbc, 0xc5a8, 0x1, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xb10);
        EXPECT(gbc.pc(), 0x4eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 030E
        gbc.setState(0x47dc, 0xa8c5, 0xd1d0, 0x63d1, 0x5f04, 0x32c5, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa8c5);
        EXPECT(gbc.pc(), 0x47de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 030F
        gbc.setState(0x2fe5, 0x15c8, 0x74b0, 0xc6e6, 0x979f, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0x2fe5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x15c8);
        EXPECT(gbc.pc(), 0x2fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0310
        gbc.setState(0xc7c6, 0x18ab, 0xa8d0, 0x5a8c, 0xf7b7, 0x3902, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x18ab);
        EXPECT(gbc.pc(), 0xc7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c6), 0xcb);
        EXPECT(gbc.readMem(0xc7c7), 0xe0);
        // CB E0 0311
        gbc.setState(0x4186, 0x7c85, 0x9bc0, 0xb01e, 0x6cb3, 0xde55, 0x1, 0x1);
        gbc.writeMem(0x4186, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7c85);
        EXPECT(gbc.pc(), 0x4188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0312
        gbc.setState(0xbc8d, 0xbc9c, 0x1800, 0x2b55, 0x409a, 0xd7bf, 0x1, 0x0);
        gbc.writeMem(0xbc8d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbc9c);
        EXPECT(gbc.pc(), 0xbc8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc8d), 0xcb);
        EXPECT(gbc.readMem(0xbc8e), 0xe0);
        // CB E0 0313
        gbc.setState(0x88d1, 0x2b47, 0xa440, 0x167f, 0x6dc7, 0x8fa3, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2b47);
        EXPECT(gbc.pc(), 0x88d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d1), 0xcb);
        EXPECT(gbc.readMem(0x88d2), 0xe0);
        // CB E0 0314
        gbc.setState(0xc6f5, 0xa776, 0x4640, 0xb28d, 0xfa06, 0x2cdd, 0x1, 0x0);
        gbc.writeMem(0xc6f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xa776);
        EXPECT(gbc.pc(), 0xc6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6f5), 0xcb);
        EXPECT(gbc.readMem(0xc6f6), 0xe0);
        // CB E0 0315
        gbc.setState(0x15b3, 0xdc50, 0x47d0, 0xb09e, 0xdaa, 0xfcfb, 0x1, 0x0);
        gbc.writeMem(0x15b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdc50);
        EXPECT(gbc.pc(), 0x15b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0316
        gbc.setState(0x44ea, 0x20a, 0xd7d0, 0x310e, 0x7e7e, 0xe767, 0x1, 0x1);
        gbc.writeMem(0x44ea, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x20a);
        EXPECT(gbc.pc(), 0x44ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0317
        gbc.setState(0x6805, 0x6ccd, 0x4060, 0x2592, 0xd3ed, 0x524b, 0x0, 0x0);
        gbc.writeMem(0x6805, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6ccd);
        EXPECT(gbc.pc(), 0x6807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0318
        gbc.setState(0xed88, 0xf08f, 0x76b0, 0x5551, 0xb030, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0xed88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf08f);
        EXPECT(gbc.pc(), 0xed8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed88), 0xcb);
        EXPECT(gbc.readMem(0xed89), 0xe0);
        // CB E0 0319
        gbc.setState(0xfa, 0x29fc, 0x6250, 0xa305, 0x7d23, 0x9891, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x29fc);
        EXPECT(gbc.pc(), 0xfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 031A
        gbc.setState(0x245c, 0x54ae, 0x5200, 0x42d6, 0x505, 0xec52, 0x1, 0x0);
        gbc.writeMem(0x245c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x54ae);
        EXPECT(gbc.pc(), 0x245e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 031B
        gbc.setState(0xaadc, 0x40b, 0xe680, 0x391b, 0x3939, 0xd701, 0x1, 0x1);
        gbc.writeMem(0xaadc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x40b);
        EXPECT(gbc.pc(), 0xaade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaadc), 0xcb);
        EXPECT(gbc.readMem(0xaadd), 0xe0);
        // CB E0 031C
        gbc.setState(0x3c26, 0x42dc, 0xd550, 0x91fa, 0x69d3, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x3c26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x42dc);
        EXPECT(gbc.pc(), 0x3c28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 031D
        gbc.setState(0xc183, 0xd96f, 0x73b0, 0xd89a, 0x5998, 0xac7f, 0x1, 0x1);
        gbc.writeMem(0xc183, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd96f);
        EXPECT(gbc.pc(), 0xc185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc183), 0xcb);
        EXPECT(gbc.readMem(0xc184), 0xe0);
        // CB E0 031E
        gbc.setState(0x49b1, 0x2108, 0xad30, 0x81f0, 0x6a06, 0xc0a, 0x0, 0x1);
        gbc.writeMem(0x49b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2108);
        EXPECT(gbc.pc(), 0x49b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 031F
        gbc.setState(0x8a30, 0xa252, 0x1f90, 0x7b2b, 0x716a, 0x46e3, 0x1, 0x0);
        gbc.writeMem(0x8a30, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa252);
        EXPECT(gbc.pc(), 0x8a32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a30), 0xcb);
        EXPECT(gbc.readMem(0x8a31), 0xe0);
        // CB E0 0320
        gbc.setState(0x2103, 0x606, 0x4b90, 0x17a9, 0x88cf, 0xb93e, 0x1, 0x0);
        gbc.writeMem(0x2103, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x606);
        EXPECT(gbc.pc(), 0x2105);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0321
        gbc.setState(0x28a9, 0xfafa, 0xca20, 0x2e31, 0x2c81, 0xe5dd, 0x1, 0x1);
        gbc.writeMem(0x28a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xfafa);
        EXPECT(gbc.pc(), 0x28ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0322
        gbc.setState(0x7ad7, 0xe57, 0x2940, 0x65f8, 0x5a42, 0x3aec, 0x1, 0x0);
        gbc.writeMem(0x7ad7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe57);
        EXPECT(gbc.pc(), 0x7ad9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0323
        gbc.setState(0x5734, 0xa3ee, 0xe6a0, 0x4dcc, 0xfd5e, 0x8de9, 0x1, 0x0);
        gbc.writeMem(0x5734, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa3ee);
        EXPECT(gbc.pc(), 0x5736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0324
        gbc.setState(0x6e50, 0xa295, 0x8910, 0x3248, 0x5ba5, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0x6e50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa295);
        EXPECT(gbc.pc(), 0x6e52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0325
        gbc.setState(0xc542, 0xf389, 0xbea0, 0x7183, 0xc1df, 0x929d, 0x1, 0x1);
        gbc.writeMem(0xc542, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf389);
        EXPECT(gbc.pc(), 0xc544);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc542), 0xcb);
        EXPECT(gbc.readMem(0xc543), 0xe0);
        // CB E0 0326
        gbc.setState(0x6aa0, 0xa14d, 0xf370, 0xa28b, 0xa372, 0xcc9, 0x1, 0x1);
        gbc.writeMem(0x6aa0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa14d);
        EXPECT(gbc.pc(), 0x6aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0327
        gbc.setState(0x1aef, 0xff75, 0xc3c0, 0x7ed6, 0x4539, 0xb666, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xff75);
        EXPECT(gbc.pc(), 0x1af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0328
        gbc.setState(0x94f3, 0x582f, 0x5e20, 0xb170, 0x87fc, 0x8420, 0x0, 0x0);
        gbc.writeMem(0x94f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x582f);
        EXPECT(gbc.pc(), 0x94f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f3), 0xcb);
        EXPECT(gbc.readMem(0x94f4), 0xe0);
        // CB E0 0329
        gbc.setState(0x227c, 0xc8fb, 0x6d00, 0xb1b5, 0xb0b9, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc8fb);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 032A
        gbc.setState(0x80ac, 0x851e, 0x2780, 0x4f2, 0xa10b, 0x6574, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x851e);
        EXPECT(gbc.pc(), 0x80ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ac), 0xcb);
        EXPECT(gbc.readMem(0x80ad), 0xe0);
        // CB E0 032B
        gbc.setState(0x2ebc, 0x784, 0x9320, 0xe1ac, 0x7e2b, 0x1dae, 0x0, 0x0);
        gbc.writeMem(0x2ebc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0x2ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 032C
        gbc.setState(0xa3c2, 0x8b6c, 0x7640, 0xe13f, 0x5f81, 0x818c, 0x1, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8b6c);
        EXPECT(gbc.pc(), 0xa3c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c2), 0xcb);
        EXPECT(gbc.readMem(0xa3c3), 0xe0);
        // CB E0 032D
        gbc.setState(0x2ff2, 0xddc7, 0x8230, 0x4791, 0xf45a, 0x67fa, 0x1, 0x0);
        gbc.writeMem(0x2ff2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xddc7);
        EXPECT(gbc.pc(), 0x2ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 032E
        gbc.setState(0x9e78, 0x4466, 0xa90, 0xa45b, 0xc7f4, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0x9e78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4466);
        EXPECT(gbc.pc(), 0x9e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e78), 0xcb);
        EXPECT(gbc.readMem(0x9e79), 0xe0);
        // CB E0 032F
        gbc.setState(0x4651, 0xb7c6, 0x83b0, 0x80f2, 0xe051, 0xbddb, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb7c6);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0330
        gbc.setState(0x3698, 0xac84, 0x3ed0, 0xcaf2, 0xb699, 0xb82e, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xac84);
        EXPECT(gbc.pc(), 0x369a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0331
        gbc.setState(0x33c5, 0xa119, 0x98f0, 0xc81f, 0x5384, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x33c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa119);
        EXPECT(gbc.pc(), 0x33c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0333
        gbc.setState(0xc67b, 0xb1ba, 0xb970, 0xeeb6, 0x3fbd, 0x9a13, 0x1, 0x0);
        gbc.writeMem(0xc67b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb1ba);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67b), 0xcb);
        EXPECT(gbc.readMem(0xc67c), 0xe0);
        // CB E0 0334
        gbc.setState(0x2cb4, 0x282e, 0x4fa0, 0x2210, 0x522e, 0xffde, 0x1, 0x0);
        gbc.writeMem(0x2cb4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x282e);
        EXPECT(gbc.pc(), 0x2cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0335
        gbc.setState(0x441d, 0x76f4, 0xda0, 0xcb0, 0x6f6b, 0x4f5, 0x0, 0x0);
        gbc.writeMem(0x441d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x76f4);
        EXPECT(gbc.pc(), 0x441f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0336
        gbc.setState(0x605d, 0x858a, 0x2ea0, 0xbb56, 0xe6b8, 0xafbf, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x858a);
        EXPECT(gbc.pc(), 0x605f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0337
        gbc.setState(0x404d, 0x7e53, 0x21a0, 0xfff4, 0xcbea, 0xa41d, 0x1, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7e53);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0338
        gbc.setState(0xe440, 0x5591, 0xff50, 0x85ec, 0x9a3, 0x1da, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x5591);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe440), 0xcb);
        EXPECT(gbc.readMem(0xe441), 0xe0);
        // CB E0 0339
        gbc.setState(0xa57b, 0x43e7, 0x31e0, 0xa5fa, 0xcfae, 0xd35b, 0x0, 0x1);
        gbc.writeMem(0xa57b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x43e7);
        EXPECT(gbc.pc(), 0xa57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa57b), 0xcb);
        EXPECT(gbc.readMem(0xa57c), 0xe0);
        // CB E0 033A
        gbc.setState(0x16dd, 0x746d, 0xf2f0, 0x99b0, 0x6501, 0x7728, 0x1, 0x0);
        gbc.writeMem(0x16dd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x746d);
        EXPECT(gbc.pc(), 0x16df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 033B
        gbc.setState(0x8213, 0xd1, 0xddb0, 0x452a, 0x6921, 0x8e49, 0x1, 0x1);
        gbc.writeMem(0x8213, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd1);
        EXPECT(gbc.pc(), 0x8215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8213), 0xcb);
        EXPECT(gbc.readMem(0x8214), 0xe0);
        // CB E0 033C
        gbc.setState(0xd05d, 0x3afb, 0x96e0, 0xabd3, 0x8cb1, 0xf210, 0x1, 0x0);
        gbc.writeMem(0xd05d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3afb);
        EXPECT(gbc.pc(), 0xd05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd05d), 0xcb);
        EXPECT(gbc.readMem(0xd05e), 0xe0);
        // CB E0 033D
        gbc.setState(0x72a4, 0x1130, 0x8490, 0xd8d1, 0xbdf0, 0x1dd3, 0x1, 0x0);
        gbc.writeMem(0x72a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1130);
        EXPECT(gbc.pc(), 0x72a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 033E
        gbc.setState(0x1631, 0xfdc0, 0x43d0, 0x5073, 0x38bb, 0x97c0, 0x1, 0x1);
        gbc.writeMem(0x1631, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfdc0);
        EXPECT(gbc.pc(), 0x1633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 033F
        gbc.setState(0xbdf6, 0x63c7, 0xe5f0, 0xa0fb, 0x5837, 0xe650, 0x0, 0x1);
        gbc.writeMem(0xbdf6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x63c7);
        EXPECT(gbc.pc(), 0xbdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf6), 0xcb);
        EXPECT(gbc.readMem(0xbdf7), 0xe0);
        // CB E0 0340
        gbc.setState(0xa856, 0xc16, 0x2f0, 0x632a, 0xf802, 0x85ff, 0x0, 0x1);
        gbc.writeMem(0xa856, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc16);
        EXPECT(gbc.pc(), 0xa858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa856), 0xcb);
        EXPECT(gbc.readMem(0xa857), 0xe0);
        // CB E0 0341
        gbc.setState(0x6c18, 0xff83, 0x9300, 0x3c79, 0xac78, 0x7527, 0x0, 0x0);
        gbc.writeMem(0x6c18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xff83);
        EXPECT(gbc.pc(), 0x6c1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0342
        gbc.setState(0xd362, 0x3170, 0x37c0, 0x8e2b, 0x9af5, 0x7c4b, 0x0, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3170);
        EXPECT(gbc.pc(), 0xd364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd362), 0xcb);
        EXPECT(gbc.readMem(0xd363), 0xe0);
        // CB E0 0343
        gbc.setState(0x74ae, 0x5b7a, 0xc90, 0xfe69, 0x39b9, 0xebee, 0x1, 0x0);
        gbc.writeMem(0x74ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x5b7a);
        EXPECT(gbc.pc(), 0x74b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0344
        gbc.setState(0xea6a, 0xf645, 0x3dc0, 0x8855, 0x6426, 0x219d, 0x0, 0x1);
        gbc.writeMem(0xea6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf645);
        EXPECT(gbc.pc(), 0xea6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6a), 0xcb);
        EXPECT(gbc.readMem(0xea6b), 0xe0);
        // CB E0 0345
        gbc.setState(0xc746, 0x6b59, 0x5d60, 0x53d0, 0xa20c, 0xeaf7, 0x1, 0x1);
        gbc.writeMem(0xc746, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6b59);
        EXPECT(gbc.pc(), 0xc748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc746), 0xcb);
        EXPECT(gbc.readMem(0xc747), 0xe0);
        // CB E0 0346
        gbc.setState(0xa7e2, 0x4d95, 0xf0d0, 0x7a0, 0xcab6, 0x1343, 0x1, 0x1);
        gbc.writeMem(0xa7e2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4d95);
        EXPECT(gbc.pc(), 0xa7e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e2), 0xcb);
        EXPECT(gbc.readMem(0xa7e3), 0xe0);
        // CB E0 0347
        gbc.setState(0x3a7, 0x7fad, 0xe9c0, 0xbb90, 0x8154, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x3a7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7fad);
        EXPECT(gbc.pc(), 0x3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0348
        gbc.setState(0xe448, 0x5929, 0xb810, 0x1d9, 0x6e48, 0x3483, 0x0, 0x0);
        gbc.writeMem(0xe448, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5929);
        EXPECT(gbc.pc(), 0xe44a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe448), 0xcb);
        EXPECT(gbc.readMem(0xe449), 0xe0);
        // CB E0 0349
        gbc.setState(0x968b, 0x40c4, 0x7640, 0xd714, 0x8f9d, 0x46ce, 0x0, 0x1);
        gbc.writeMem(0x968b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x40c4);
        EXPECT(gbc.pc(), 0x968d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968b), 0xcb);
        EXPECT(gbc.readMem(0x968c), 0xe0);
        // CB E0 034A
        gbc.setState(0xd565, 0x5e99, 0x1880, 0x13cc, 0xf201, 0x7135, 0x0, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x5e99);
        EXPECT(gbc.pc(), 0xd567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd565), 0xcb);
        EXPECT(gbc.readMem(0xd566), 0xe0);
        // CB E0 034B
        gbc.setState(0xa0a1, 0x235f, 0x1220, 0x1099, 0xd93f, 0xcd22, 0x1, 0x0);
        gbc.writeMem(0xa0a1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x235f);
        EXPECT(gbc.pc(), 0xa0a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a1), 0xcb);
        EXPECT(gbc.readMem(0xa0a2), 0xe0);
        // CB E0 034C
        gbc.setState(0x2418, 0xd1d3, 0xa490, 0x9c71, 0x9638, 0xe04d, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd1d3);
        EXPECT(gbc.pc(), 0x241a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 034D
        gbc.setState(0x3710, 0x42f1, 0x56d0, 0xfaaa, 0x5392, 0xe1d, 0x0, 0x0);
        gbc.writeMem(0x3710, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x42f1);
        EXPECT(gbc.pc(), 0x3712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 034E
        gbc.setState(0xc53b, 0xe7dc, 0x7cb0, 0xec42, 0x5594, 0x87f5, 0x0, 0x1);
        gbc.writeMem(0xc53b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe7dc);
        EXPECT(gbc.pc(), 0xc53d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc53b), 0xcb);
        EXPECT(gbc.readMem(0xc53c), 0xe0);
        // CB E0 034F
        gbc.setState(0x3d18, 0x7548, 0xa2d0, 0xa41c, 0x6267, 0x9f3d, 0x0, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7548);
        EXPECT(gbc.pc(), 0x3d1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0350
        gbc.setState(0x61f6, 0xb0d6, 0x3410, 0x8ab1, 0x46c7, 0x9fba, 0x1, 0x1);
        gbc.writeMem(0x61f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb0d6);
        EXPECT(gbc.pc(), 0x61f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0351
        gbc.setState(0x26f7, 0x6834, 0x4ce0, 0x90fb, 0x1a8a, 0xcc96, 0x1, 0x1);
        gbc.writeMem(0x26f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6834);
        EXPECT(gbc.pc(), 0x26f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0353
        gbc.setState(0x432f, 0x26b6, 0x30f0, 0x7c9b, 0xacf2, 0xd3fd, 0x0, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x26b6);
        EXPECT(gbc.pc(), 0x4331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0354
        gbc.setState(0xd7bf, 0x6c1a, 0x83d0, 0x784e, 0x71ff, 0x8f18, 0x0, 0x1);
        gbc.writeMem(0xd7bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6c1a);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7bf), 0xcb);
        EXPECT(gbc.readMem(0xd7c0), 0xe0);
        // CB E0 0355
        gbc.setState(0xef4f, 0x7e72, 0xe2b0, 0x93c0, 0xa695, 0x80ba, 0x1, 0x0);
        gbc.writeMem(0xef4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7e72);
        EXPECT(gbc.pc(), 0xef51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef4f), 0xcb);
        EXPECT(gbc.readMem(0xef50), 0xe0);
        // CB E0 0356
        gbc.setState(0x4554, 0x45, 0x4ca0, 0x899f, 0x1723, 0x4603, 0x0, 0x1);
        gbc.writeMem(0x4554, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x45);
        EXPECT(gbc.pc(), 0x4556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0357
        gbc.setState(0x3da9, 0x13d1, 0x7000, 0x4faf, 0xab6a, 0xd550, 0x1, 0x1);
        gbc.writeMem(0x3da9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x13d1);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0359
        gbc.setState(0x4181, 0xb987, 0x3b20, 0x5862, 0x2b9, 0xb8da, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb987);
        EXPECT(gbc.pc(), 0x4183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 035A
        gbc.setState(0x7e52, 0x8554, 0x4030, 0xd523, 0x578d, 0x7e5b, 0x1, 0x1);
        gbc.writeMem(0x7e52, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x8554);
        EXPECT(gbc.pc(), 0x7e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 035B
        gbc.setState(0xde55, 0x704c, 0x20a0, 0x2852, 0xb37c, 0x734f, 0x0, 0x1);
        gbc.writeMem(0xde55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde55), 0xcb);
        EXPECT(gbc.readMem(0xde56), 0xe0);
        // CB E0 035D
        gbc.setState(0x6f4a, 0x9ea8, 0x7a90, 0x5917, 0xbac1, 0x64e2, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9ea8);
        EXPECT(gbc.pc(), 0x6f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 035E
        gbc.setState(0x7df7, 0x7583, 0xa050, 0x9252, 0x8773, 0x4b72, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7583);
        EXPECT(gbc.pc(), 0x7df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 035F
        gbc.setState(0x8b8, 0xd9f2, 0x8800, 0x51bf, 0xe24, 0x366a, 0x0, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd9f2);
        EXPECT(gbc.pc(), 0x8ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0360
        gbc.setState(0xc97d, 0x7491, 0x4560, 0x9721, 0x8ef0, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0xc97d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7491);
        EXPECT(gbc.pc(), 0xc97f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97d), 0xcb);
        EXPECT(gbc.readMem(0xc97e), 0xe0);
        // CB E0 0361
        gbc.setState(0xc560, 0x8e72, 0x5270, 0x5c2c, 0x3c3a, 0x1d38, 0x1, 0x1);
        gbc.writeMem(0xc560, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8e72);
        EXPECT(gbc.pc(), 0xc562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc560), 0xcb);
        EXPECT(gbc.readMem(0xc561), 0xe0);
        // CB E0 0362
        gbc.setState(0x3ff, 0xa012, 0x51e0, 0x2921, 0xa54b, 0x5868, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa012);
        EXPECT(gbc.pc(), 0x401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0363
        gbc.setState(0x54c2, 0x52c6, 0x4d30, 0x40bb, 0x9fc0, 0xbaf2, 0x0, 0x0);
        gbc.writeMem(0x54c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x52c6);
        EXPECT(gbc.pc(), 0x54c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0364
        gbc.setState(0xb379, 0x4941, 0x44a0, 0xadc9, 0x7a3b, 0xed9d, 0x1, 0x1);
        gbc.writeMem(0xb379, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4941);
        EXPECT(gbc.pc(), 0xb37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb379), 0xcb);
        EXPECT(gbc.readMem(0xb37a), 0xe0);
        // CB E0 0365
        gbc.setState(0xd15f, 0x84be, 0x1940, 0xc04a, 0xab4d, 0xeab4, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x84be);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0xe0);
        // CB E0 0366
        gbc.setState(0x488a, 0x2c2d, 0xa490, 0xdeb7, 0x4034, 0x7d9e, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2c2d);
        EXPECT(gbc.pc(), 0x488c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0367
        gbc.setState(0x6b4b, 0x19cd, 0xb230, 0xa1fb, 0x4cdc, 0xfc5a, 0x1, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x19cd);
        EXPECT(gbc.pc(), 0x6b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0368
        gbc.setState(0xed43, 0x22e5, 0xedd0, 0xc2aa, 0xaa4b, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xed43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x22e5);
        EXPECT(gbc.pc(), 0xed45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed43), 0xcb);
        EXPECT(gbc.readMem(0xed44), 0xe0);
        // CB E0 0369
        gbc.setState(0x71c2, 0xbc07, 0xb6d0, 0xbb35, 0x30c1, 0xf324, 0x0, 0x0);
        gbc.writeMem(0x71c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbc07);
        EXPECT(gbc.pc(), 0x71c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 036A
        gbc.setState(0x2533, 0x7e6b, 0x19b0, 0xf59f, 0x7720, 0xe4ba, 0x0, 0x1);
        gbc.writeMem(0x2533, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x7e6b);
        EXPECT(gbc.pc(), 0x2535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 036B
        gbc.setState(0x8af1, 0xbca8, 0x2d00, 0x6910, 0x28c1, 0x9e5a, 0x1, 0x1);
        gbc.writeMem(0x8af1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbca8);
        EXPECT(gbc.pc(), 0x8af3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af1), 0xcb);
        EXPECT(gbc.readMem(0x8af2), 0xe0);
        // CB E0 036C
        gbc.setState(0xc2cc, 0xd8cb, 0x6460, 0x9c59, 0x978b, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0xc2cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xd8cb);
        EXPECT(gbc.pc(), 0xc2ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2cc), 0xcb);
        EXPECT(gbc.readMem(0xc2cd), 0xe0);
        // CB E0 036D
        gbc.setState(0xe177, 0xf39, 0xfc50, 0xeab4, 0xf046, 0xba08, 0x0, 0x0);
        gbc.writeMem(0xe177, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf39);
        EXPECT(gbc.pc(), 0xe179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe177), 0xcb);
        EXPECT(gbc.readMem(0xe178), 0xe0);
        // CB E0 036F
        gbc.setState(0x1e43, 0x5a24, 0x90a0, 0x8e78, 0xa4de, 0xffcd, 0x0, 0x0);
        gbc.writeMem(0x1e43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5a24);
        EXPECT(gbc.pc(), 0x1e45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0370
        gbc.setState(0x4178, 0xa8bc, 0x2340, 0xb16b, 0x39f2, 0x2459, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa8bc);
        EXPECT(gbc.pc(), 0x417a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0371
        gbc.setState(0x1747, 0xd77d, 0x9b90, 0x2d3f, 0x2ebf, 0xa9cc, 0x1, 0x0);
        gbc.writeMem(0x1747, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd77d);
        EXPECT(gbc.pc(), 0x1749);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0372
        gbc.setState(0x9202, 0x532e, 0x2cd0, 0x14c5, 0x1cf1, 0x6f8a, 0x1, 0x1);
        gbc.writeMem(0x9202, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x532e);
        EXPECT(gbc.pc(), 0x9204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9202), 0xcb);
        EXPECT(gbc.readMem(0x9203), 0xe0);
        // CB E0 0373
        gbc.setState(0x8c56, 0xdda7, 0x3290, 0xc7cc, 0x41a1, 0x4160, 0x1, 0x1);
        gbc.writeMem(0x8c56, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdda7);
        EXPECT(gbc.pc(), 0x8c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c56), 0xcb);
        EXPECT(gbc.readMem(0x8c57), 0xe0);
        // CB E0 0374
        gbc.setState(0x1d88, 0x891e, 0xb600, 0xadf4, 0xfa8f, 0xe01f, 0x1, 0x1);
        gbc.writeMem(0x1d88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x891e);
        EXPECT(gbc.pc(), 0x1d8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0375
        gbc.setState(0xc462, 0xa9d0, 0xa5d0, 0xc174, 0x3e31, 0x88c6, 0x1, 0x0);
        gbc.writeMem(0xc462, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0xc464);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc462), 0xcb);
        EXPECT(gbc.readMem(0xc463), 0xe0);
        // CB E0 0377
        gbc.setState(0xdf5c, 0x5620, 0xe990, 0x1fe9, 0x2223, 0xc722, 0x1, 0x1);
        gbc.writeMem(0xdf5c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5620);
        EXPECT(gbc.pc(), 0xdf5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf5c), 0xcb);
        EXPECT(gbc.readMem(0xdf5d), 0xe0);
        // CB E0 0379
        gbc.setState(0x6015, 0x187f, 0xcbd0, 0x70b1, 0xaae7, 0xdcf9, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037A
        gbc.setState(0x72f0, 0x9710, 0x3490, 0x6fd4, 0x58df, 0xfbc9, 0x0, 0x0);
        gbc.writeMem(0x72f0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9710);
        EXPECT(gbc.pc(), 0x72f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037B
        gbc.setState(0x4e4, 0x34eb, 0x2070, 0x7c42, 0x6bb5, 0xc6a8, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x34eb);
        EXPECT(gbc.pc(), 0x4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037C
        gbc.setState(0x214a, 0xcc81, 0x7290, 0xde04, 0x528b, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0x214a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcc81);
        EXPECT(gbc.pc(), 0x214c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037D
        gbc.setState(0x40a5, 0xd53f, 0x7dd0, 0xeee6, 0xd23a, 0x55a, 0x1, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd53f);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037E
        gbc.setState(0x710b, 0x5461, 0x81d0, 0x77e, 0x39dd, 0x5bc4, 0x1, 0x1);
        gbc.writeMem(0x710b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5461);
        EXPECT(gbc.pc(), 0x710d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 037F
        gbc.setState(0xd3a4, 0x52ab, 0xd4a0, 0x426b, 0x477c, 0x1921, 0x1, 0x1);
        gbc.writeMem(0xd3a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x52ab);
        EXPECT(gbc.pc(), 0xd3a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3a4), 0xcb);
        EXPECT(gbc.readMem(0xd3a5), 0xe0);
        // CB E0 0380
        gbc.setState(0x301e, 0x5938, 0xb470, 0xf009, 0xacf, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5938);
        EXPECT(gbc.pc(), 0x3020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0381
        gbc.setState(0xc64f, 0xfab2, 0xd360, 0x6446, 0x5560, 0x2db3, 0x0, 0x0);
        gbc.writeMem(0xc64f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xfab2);
        EXPECT(gbc.pc(), 0xc651);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc64f), 0xcb);
        EXPECT(gbc.readMem(0xc650), 0xe0);
        // CB E0 0382
        gbc.setState(0xa5f1, 0x8a11, 0xe5e0, 0x6bae, 0x7267, 0xedc2, 0x0, 0x1);
        gbc.writeMem(0xa5f1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8a11);
        EXPECT(gbc.pc(), 0xa5f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f1), 0xcb);
        EXPECT(gbc.readMem(0xa5f2), 0xe0);
        // CB E0 0383
        gbc.setState(0xb78b, 0x9628, 0xba40, 0xced8, 0x62ce, 0xd567, 0x1, 0x0);
        gbc.writeMem(0xb78b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9628);
        EXPECT(gbc.pc(), 0xb78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78b), 0xcb);
        EXPECT(gbc.readMem(0xb78c), 0xe0);
        // CB E0 0384
        gbc.setState(0x1e9b, 0x13ac, 0x7550, 0x937d, 0xf7a6, 0x98de, 0x1, 0x1);
        gbc.writeMem(0x1e9b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x13ac);
        EXPECT(gbc.pc(), 0x1e9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0385
        gbc.setState(0xa5cb, 0xd454, 0xe6e0, 0x8c2c, 0x6181, 0xab7e, 0x0, 0x0);
        gbc.writeMem(0xa5cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd454);
        EXPECT(gbc.pc(), 0xa5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5cb), 0xcb);
        EXPECT(gbc.readMem(0xa5cc), 0xe0);
        // CB E0 0386
        gbc.setState(0xebcf, 0x348a, 0x3130, 0x4d91, 0x5b77, 0xfa74, 0x1, 0x0);
        gbc.writeMem(0xebcf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x348a);
        EXPECT(gbc.pc(), 0xebd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcf), 0xcb);
        EXPECT(gbc.readMem(0xebd0), 0xe0);
        // CB E0 0387
        gbc.setState(0x6b5, 0xc5b0, 0xf580, 0xcb16, 0x2bf5, 0x9689, 0x1, 0x0);
        gbc.writeMem(0x6b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xc5b0);
        EXPECT(gbc.pc(), 0x6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0388
        gbc.setState(0xca32, 0x2447, 0x2910, 0x8f37, 0x8fc8, 0xeefb, 0x0, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2447);
        EXPECT(gbc.pc(), 0xca34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca32), 0xcb);
        EXPECT(gbc.readMem(0xca33), 0xe0);
        // CB E0 0389
        gbc.setState(0x477f, 0x7ab8, 0x20a0, 0x3f19, 0xd06a, 0x7faa, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7ab8);
        EXPECT(gbc.pc(), 0x4781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 038A
        gbc.setState(0x16d1, 0xd640, 0x5370, 0xbb0a, 0xbd8e, 0xed10, 0x0, 0x1);
        gbc.writeMem(0x16d1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xd640);
        EXPECT(gbc.pc(), 0x16d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 038B
        gbc.setState(0x65c3, 0xb89d, 0xf0d0, 0xf29c, 0x96e6, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x65c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb89d);
        EXPECT(gbc.pc(), 0x65c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 038C
        gbc.setState(0xaf0c, 0xfa63, 0x8860, 0x7187, 0xc56d, 0x7889, 0x1, 0x1);
        gbc.writeMem(0xaf0c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfa63);
        EXPECT(gbc.pc(), 0xaf0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf0c), 0xcb);
        EXPECT(gbc.readMem(0xaf0d), 0xe0);
        // CB E0 038D
        gbc.setState(0x41db, 0x37de, 0x9fc0, 0x14c4, 0x6f1c, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x37de);
        EXPECT(gbc.pc(), 0x41dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 038E
        gbc.setState(0x60e, 0x522c, 0x1300, 0xa68d, 0xc686, 0x28b5, 0x1, 0x1);
        gbc.writeMem(0x60e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0x610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 038F
        gbc.setState(0x7be1, 0xe973, 0x500, 0x88b5, 0xaa6c, 0x6fa7, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe973);
        EXPECT(gbc.pc(), 0x7be3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0390
        gbc.setState(0x605c, 0xfffc, 0x42f0, 0x2c19, 0x177d, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0x605c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfffc);
        EXPECT(gbc.pc(), 0x605e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0391
        gbc.setState(0x7e7d, 0x4291, 0xf3a0, 0xafba, 0x64b, 0xc914, 0x1, 0x0);
        gbc.writeMem(0x7e7d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4291);
        EXPECT(gbc.pc(), 0x7e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0392
        gbc.setState(0xe0b5, 0x1684, 0xf6c0, 0xc99b, 0x7342, 0x5992, 0x0, 0x1);
        gbc.writeMem(0xe0b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1684);
        EXPECT(gbc.pc(), 0xe0b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0b5), 0xcb);
        EXPECT(gbc.readMem(0xe0b6), 0xe0);
        // CB E0 0393
        gbc.setState(0x258f, 0x5871, 0xa7d0, 0xed5d, 0x519c, 0x6f3, 0x1, 0x0);
        gbc.writeMem(0x258f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5871);
        EXPECT(gbc.pc(), 0x2591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0394
        gbc.setState(0x3db5, 0xa1d2, 0xe780, 0x830d, 0x3519, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x3db5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa1d2);
        EXPECT(gbc.pc(), 0x3db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 0395
        gbc.setState(0x49a, 0x57b3, 0x42f0, 0xcee4, 0x29b6, 0x6e76, 0x0, 0x0);
        gbc.writeMem(0x49a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x57b3);
        EXPECT(gbc.pc(), 0x49c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 0396
        gbc.setState(0xcd54, 0x1f77, 0x9e80, 0x4a41, 0xe328, 0x8a44, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1f77);
        EXPECT(gbc.pc(), 0xcd56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd54), 0xcb);
        EXPECT(gbc.readMem(0xcd55), 0xe0);
        // CB E0 0397
        gbc.setState(0xaf1a, 0xa6c0, 0x2730, 0xbcb2, 0x2664, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0xaf1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa6c0);
        EXPECT(gbc.pc(), 0xaf1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf1a), 0xcb);
        EXPECT(gbc.readMem(0xaf1b), 0xe0);
        // CB E0 0398
        gbc.setState(0x9eeb, 0xd781, 0xe200, 0x9c4d, 0x5475, 0xd67c, 0x0, 0x0);
        gbc.writeMem(0x9eeb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0x9eed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eeb), 0xcb);
        EXPECT(gbc.readMem(0x9eec), 0xe0);
        // CB E0 0399
        gbc.setState(0x2142, 0x844, 0x6470, 0xb962, 0xaf1, 0x4aee, 0x1, 0x0);
        gbc.writeMem(0x2142, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x844);
        EXPECT(gbc.pc(), 0x2144);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 039A
        gbc.setState(0x76c4, 0x13d0, 0x7bf0, 0x6fa6, 0x95bb, 0xe675, 0x0, 0x0);
        gbc.writeMem(0x76c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x13d0);
        EXPECT(gbc.pc(), 0x76c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 039B
        gbc.setState(0x272f, 0xabea, 0xbc0, 0xa9b1, 0xf33a, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0x272f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xabea);
        EXPECT(gbc.pc(), 0x2731);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 039C
        gbc.setState(0xe765, 0xe414, 0xb200, 0xddab, 0x8e1b, 0x8f8d, 0x0, 0x0);
        gbc.writeMem(0xe765, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe414);
        EXPECT(gbc.pc(), 0xe767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe765), 0xcb);
        EXPECT(gbc.readMem(0xe766), 0xe0);
        // CB E0 039D
        gbc.setState(0x570c, 0x8452, 0x2760, 0x1e51, 0xb1b4, 0x9748, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8452);
        EXPECT(gbc.pc(), 0x570e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 039E
        gbc.setState(0x2909, 0x5f8a, 0x1020, 0x937a, 0xd00f, 0xa2e2, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5f8a);
        EXPECT(gbc.pc(), 0x290b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 039F
        gbc.setState(0xa706, 0x1f08, 0x7c60, 0xe5ea, 0xd9d6, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0xa706, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1f08);
        EXPECT(gbc.pc(), 0xa708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa706), 0xcb);
        EXPECT(gbc.readMem(0xa707), 0xe0);
        // CB E0 03A0
        gbc.setState(0x42d2, 0x5ad3, 0xbe20, 0x9989, 0xb85, 0xf22b, 0x1, 0x0);
        gbc.writeMem(0x42d2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5ad3);
        EXPECT(gbc.pc(), 0x42d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03A1
        gbc.setState(0x3acb, 0x465c, 0xba50, 0xc111, 0xb55f, 0xa56b, 0x1, 0x0);
        gbc.writeMem(0x3acb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x465c);
        EXPECT(gbc.pc(), 0x3acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03A2
        gbc.setState(0x9ccb, 0x67ab, 0x71d0, 0xe219, 0xe43c, 0x10fc, 0x1, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x67ab);
        EXPECT(gbc.pc(), 0x9ccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccb), 0xcb);
        EXPECT(gbc.readMem(0x9ccc), 0xe0);
        // CB E0 03A3
        gbc.setState(0x5aa4, 0x2879, 0xef10, 0x6cfb, 0x870d, 0x29e5, 0x1, 0x1);
        gbc.writeMem(0x5aa4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2879);
        EXPECT(gbc.pc(), 0x5aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03A4
        gbc.setState(0x7fda, 0xdd4c, 0x9e30, 0x1ca2, 0xd2ee, 0xd8ee, 0x1, 0x1);
        gbc.writeMem(0x7fda, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdd4c);
        EXPECT(gbc.pc(), 0x7fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03A5
        gbc.setState(0x9646, 0x905d, 0xc2d0, 0x5577, 0xa67b, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x9646, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x905d);
        EXPECT(gbc.pc(), 0x9648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9646), 0xcb);
        EXPECT(gbc.readMem(0x9647), 0xe0);
        // CB E0 03A6
        gbc.setState(0x36e4, 0xbb4d, 0xb200, 0xd4da, 0xe536, 0x5046, 0x0, 0x0);
        gbc.writeMem(0x36e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0x36e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03A7
        gbc.setState(0xc643, 0x8bfa, 0xc240, 0x255e, 0x51d6, 0xdaf4, 0x1, 0x1);
        gbc.writeMem(0xc643, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8bfa);
        EXPECT(gbc.pc(), 0xc645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc643), 0xcb);
        EXPECT(gbc.readMem(0xc644), 0xe0);
        // CB E0 03A8
        gbc.setState(0xefaa, 0x3179, 0x5c0, 0x6bc7, 0xb06e, 0xd40b, 0x0, 0x1);
        gbc.writeMem(0xefaa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3179);
        EXPECT(gbc.pc(), 0xefac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefaa), 0xcb);
        EXPECT(gbc.readMem(0xefab), 0xe0);
        // CB E0 03A9
        gbc.setState(0x8469, 0xaa72, 0x5640, 0x50a2, 0x5365, 0x8ded, 0x0, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xaa72);
        EXPECT(gbc.pc(), 0x846b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8469), 0xcb);
        EXPECT(gbc.readMem(0x846a), 0xe0);
        // CB E0 03AA
        gbc.setState(0xded7, 0x71b9, 0xecf0, 0x9bc1, 0xc7e9, 0xbfa1, 0x0, 0x1);
        gbc.writeMem(0xded7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x71b9);
        EXPECT(gbc.pc(), 0xded9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded7), 0xcb);
        EXPECT(gbc.readMem(0xded8), 0xe0);
        // CB E0 03AB
        gbc.setState(0x8790, 0x978b, 0x1d50, 0x2cbe, 0x7dd1, 0xf45b, 0x0, 0x0);
        gbc.writeMem(0x8790, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x978b);
        EXPECT(gbc.pc(), 0x8792);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8790), 0xcb);
        EXPECT(gbc.readMem(0x8791), 0xe0);
        // CB E0 03AC
        gbc.setState(0x840, 0xfeb1, 0x5da0, 0xcd5a, 0x9c50, 0x3c7e, 0x0, 0x0);
        gbc.writeMem(0x840, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xfeb1);
        EXPECT(gbc.pc(), 0x842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03AD
        gbc.setState(0xcd9, 0xda87, 0xb760, 0x9b83, 0x37c, 0x364b, 0x0, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xda87);
        EXPECT(gbc.pc(), 0xcdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03AE
        gbc.setState(0xe670, 0xc8e, 0x9170, 0xc03a, 0x6df7, 0x3e49, 0x0, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc8e);
        EXPECT(gbc.pc(), 0xe672);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe670), 0xcb);
        EXPECT(gbc.readMem(0xe671), 0xe0);
        // CB E0 03AF
        gbc.setState(0x369b, 0xe8fe, 0xe150, 0x30d8, 0xb167, 0x6a2d, 0x0, 0x0);
        gbc.writeMem(0x369b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe8fe);
        EXPECT(gbc.pc(), 0x369d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03B0
        gbc.setState(0xe98, 0xbc5e, 0x5af0, 0x1a8, 0xdc5, 0xe5f3, 0x0, 0x0);
        gbc.writeMem(0xe98, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbc5e);
        EXPECT(gbc.pc(), 0xe9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03B1
        gbc.setState(0x5bba, 0x630c, 0xef90, 0xe06a, 0x8210, 0x6419, 0x0, 0x1);
        gbc.writeMem(0x5bba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x630c);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03B2
        gbc.setState(0x78ca, 0x92ae, 0xcb00, 0x7b74, 0x1f7c, 0x3d5d, 0x1, 0x1);
        gbc.writeMem(0x78ca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x92ae);
        EXPECT(gbc.pc(), 0x78cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03B3
        gbc.setState(0x8487, 0x9974, 0xe50, 0x783b, 0xd1f1, 0xae03, 0x0, 0x1);
        gbc.writeMem(0x8487, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x9974);
        EXPECT(gbc.pc(), 0x8489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8487), 0xcb);
        EXPECT(gbc.readMem(0x8488), 0xe0);
        // CB E0 03B4
        gbc.setState(0xdb0f, 0x7ee9, 0x6400, 0x397e, 0xe7c3, 0x4b50, 0x1, 0x1);
        gbc.writeMem(0xdb0f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7ee9);
        EXPECT(gbc.pc(), 0xdb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb0f), 0xcb);
        EXPECT(gbc.readMem(0xdb10), 0xe0);
        // CB E0 03B5
        gbc.setState(0x26e4, 0xc7bc, 0xd290, 0x2358, 0xc99a, 0xc3c7, 0x1, 0x1);
        gbc.writeMem(0x26e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc7bc);
        EXPECT(gbc.pc(), 0x26e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03B6
        gbc.setState(0xcf19, 0xd529, 0x4470, 0xc972, 0x604e, 0xd626, 0x1, 0x0);
        gbc.writeMem(0xcf19, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xd529);
        EXPECT(gbc.pc(), 0xcf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf19), 0xcb);
        EXPECT(gbc.readMem(0xcf1a), 0xe0);
        // CB E0 03B7
        gbc.setState(0xe838, 0x2b9c, 0x44e0, 0xcecd, 0x310e, 0x9371, 0x0, 0x1);
        gbc.writeMem(0xe838, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2b9c);
        EXPECT(gbc.pc(), 0xe83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe838), 0xcb);
        EXPECT(gbc.readMem(0xe839), 0xe0);
        // CB E0 03B8
        gbc.setState(0xc405, 0x2ef6, 0x8a50, 0x49c6, 0x4746, 0x215b, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2ef6);
        EXPECT(gbc.pc(), 0xc407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc405), 0xcb);
        EXPECT(gbc.readMem(0xc406), 0xe0);
        // CB E0 03B9
        gbc.setState(0x2769, 0x3b9a, 0x4170, 0xa0b7, 0xd6bf, 0xaace, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3b9a);
        EXPECT(gbc.pc(), 0x276b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03BA
        gbc.setState(0x67de, 0x2700, 0xf660, 0xee3f, 0x17f, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x67de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0x67e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03BB
        gbc.setState(0xb954, 0x1661, 0xd150, 0x9570, 0x9674, 0x3504, 0x0, 0x0);
        gbc.writeMem(0xb954, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x1661);
        EXPECT(gbc.pc(), 0xb956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb954), 0xcb);
        EXPECT(gbc.readMem(0xb955), 0xe0);
        // CB E0 03BC
        gbc.setState(0x1d2e, 0xca58, 0xfed0, 0x619e, 0xa2ea, 0x5ec9, 0x0, 0x0);
        gbc.writeMem(0x1d2e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xca58);
        EXPECT(gbc.pc(), 0x1d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03BD
        gbc.setState(0xa848, 0xe6b0, 0xf0a0, 0xa7e8, 0xeac2, 0x53a4, 0x1, 0x0);
        gbc.writeMem(0xa848, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe6b0);
        EXPECT(gbc.pc(), 0xa84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa848), 0xcb);
        EXPECT(gbc.readMem(0xa849), 0xe0);
        // CB E0 03BE
        gbc.setState(0x273, 0x31ad, 0x4560, 0xdac2, 0xf384, 0xcd26, 0x1, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x31ad);
        EXPECT(gbc.pc(), 0x275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03BF
        gbc.setState(0xadb, 0xe999, 0x5830, 0x853, 0x8035, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xadb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xe999);
        EXPECT(gbc.pc(), 0xadd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03C0
        gbc.setState(0x1209, 0x8513, 0xf240, 0xe705, 0xf50a, 0x35c3, 0x1, 0x0);
        gbc.writeMem(0x1209, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x8513);
        EXPECT(gbc.pc(), 0x120b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C1
        gbc.setState(0xb08c, 0x480d, 0xa810, 0x4ddc, 0x3d3c, 0x9847, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x480d);
        EXPECT(gbc.pc(), 0xb08e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb08c), 0xcb);
        EXPECT(gbc.readMem(0xb08d), 0xe0);
        // CB E0 03C2
        gbc.setState(0x1176, 0xaabb, 0x1f80, 0xcd17, 0x329b, 0x23dd, 0x1, 0x1);
        gbc.writeMem(0x1176, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x1178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C3
        gbc.setState(0x5121, 0xbf6f, 0x260, 0x5b33, 0xad3e, 0x9477, 0x0, 0x0);
        gbc.writeMem(0x5121, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbf6f);
        EXPECT(gbc.pc(), 0x5123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C4
        gbc.setState(0x4cc2, 0xe4b4, 0xe400, 0xde12, 0x57e0, 0x81a9, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe4b4);
        EXPECT(gbc.pc(), 0x4cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C5
        gbc.setState(0xec03, 0x9306, 0x61a0, 0xb5ec, 0x1298, 0x4916, 0x0, 0x0);
        gbc.writeMem(0xec03, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9306);
        EXPECT(gbc.pc(), 0xec05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec03), 0xcb);
        EXPECT(gbc.readMem(0xec04), 0xe0);
        // CB E0 03C6
        gbc.setState(0x424, 0xb14b, 0xa980, 0x8db6, 0xce46, 0xf429, 0x0, 0x0);
        gbc.writeMem(0x424, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb14b);
        EXPECT(gbc.pc(), 0x426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C7
        gbc.setState(0x97d7, 0x57a8, 0x9160, 0xd230, 0xf7b, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x97d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x57a8);
        EXPECT(gbc.pc(), 0x97d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d7), 0xcb);
        EXPECT(gbc.readMem(0x97d8), 0xe0);
        // CB E0 03C8
        gbc.setState(0x7b43, 0x365e, 0x7740, 0xe4f5, 0xf258, 0x345d, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x365e);
        EXPECT(gbc.pc(), 0x7b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03C9
        gbc.setState(0x1d9e, 0x15cc, 0xe410, 0x4135, 0x4fe0, 0xc24e, 0x0, 0x0);
        gbc.writeMem(0x1d9e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x15cc);
        EXPECT(gbc.pc(), 0x1da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03CA
        gbc.setState(0xbc46, 0xc894, 0x1000, 0x538f, 0x4e4f, 0x96c3, 0x1, 0x0);
        gbc.writeMem(0xbc46, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc894);
        EXPECT(gbc.pc(), 0xbc48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc46), 0xcb);
        EXPECT(gbc.readMem(0xbc47), 0xe0);
        // CB E0 03CB
        gbc.setState(0xbbad, 0xe0d5, 0x2a00, 0xf2bd, 0x98c5, 0x4d6d, 0x1, 0x1);
        gbc.writeMem(0xbbad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe0d5);
        EXPECT(gbc.pc(), 0xbbaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbad), 0xcb);
        EXPECT(gbc.readMem(0xbbae), 0xe0);
        // CB E0 03CC
        gbc.setState(0x19, 0x22ce, 0xce90, 0xc52b, 0x57bd, 0xa92e, 0x0, 0x1);
        gbc.writeMem(0x19, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x22ce);
        EXPECT(gbc.pc(), 0x1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03CD
        gbc.setState(0x6b8a, 0x348e, 0xabe0, 0x8cff, 0xc0ce, 0xc46e, 0x1, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x348e);
        EXPECT(gbc.pc(), 0x6b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03CE
        gbc.setState(0xe311, 0x3ec1, 0xe860, 0xcfe3, 0x7040, 0x5fa2, 0x1, 0x0);
        gbc.writeMem(0xe311, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3ec1);
        EXPECT(gbc.pc(), 0xe313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe311), 0xcb);
        EXPECT(gbc.readMem(0xe312), 0xe0);
        // CB E0 03CF
        gbc.setState(0x53b6, 0x9c94, 0xccb0, 0x194b, 0xdf08, 0x6e4d, 0x1, 0x1);
        gbc.writeMem(0x53b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9c94);
        EXPECT(gbc.pc(), 0x53b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03D0
        gbc.setState(0xab98, 0x3c0b, 0x45b0, 0x8dd1, 0xc9e8, 0x3be5, 0x1, 0x0);
        gbc.writeMem(0xab98, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3c0b);
        EXPECT(gbc.pc(), 0xab9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab98), 0xcb);
        EXPECT(gbc.readMem(0xab99), 0xe0);
        // CB E0 03D1
        gbc.setState(0xd941, 0x4150, 0xa40, 0x5785, 0x3f38, 0x6786, 0x1, 0x0);
        gbc.writeMem(0xd941, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4150);
        EXPECT(gbc.pc(), 0xd943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd941), 0xcb);
        EXPECT(gbc.readMem(0xd942), 0xe0);
        // CB E0 03D3
        gbc.setState(0xe676, 0xead2, 0x9fd0, 0xa14a, 0x2b54, 0x3c58, 0x0, 0x0);
        gbc.writeMem(0xe676, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xead2);
        EXPECT(gbc.pc(), 0xe678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe676), 0xcb);
        EXPECT(gbc.readMem(0xe677), 0xe0);
        // CB E0 03D4
        gbc.setState(0x9273, 0xda1, 0xff40, 0x5b55, 0x724d, 0x1d7, 0x1, 0x1);
        gbc.writeMem(0x9273, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0x9275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9273), 0xcb);
        EXPECT(gbc.readMem(0x9274), 0xe0);
        // CB E0 03D5
        gbc.setState(0x4001, 0xc9f, 0xed70, 0xa538, 0xa3c, 0xc5e0, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc9f);
        EXPECT(gbc.pc(), 0x4003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03D6
        gbc.setState(0x768f, 0xa857, 0xc8a0, 0x7fba, 0x314, 0x9046, 0x0, 0x1);
        gbc.writeMem(0x768f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa857);
        EXPECT(gbc.pc(), 0x7691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03D7
        gbc.setState(0x8b6, 0x7260, 0xfa50, 0x31b2, 0xa33d, 0xc138, 0x1, 0x0);
        gbc.writeMem(0x8b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7260);
        EXPECT(gbc.pc(), 0x8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03D8
        gbc.setState(0x985c, 0x16f, 0xe8d0, 0x968c, 0xad43, 0x45f5, 0x1, 0x1);
        gbc.writeMem(0x985c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x16f);
        EXPECT(gbc.pc(), 0x985e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x985c), 0xcb);
        EXPECT(gbc.readMem(0x985d), 0xe0);
        // CB E0 03D9
        gbc.setState(0x9412, 0xf84a, 0x16d0, 0x377f, 0xcae6, 0x4113, 0x1, 0x1);
        gbc.writeMem(0x9412, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf84a);
        EXPECT(gbc.pc(), 0x9414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9412), 0xcb);
        EXPECT(gbc.readMem(0x9413), 0xe0);
        // CB E0 03DA
        gbc.setState(0x94f, 0x89c2, 0x7f90, 0x1133, 0x6f14, 0x576d, 0x1, 0x0);
        gbc.writeMem(0x94f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x89c2);
        EXPECT(gbc.pc(), 0x951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03DB
        gbc.setState(0xae1e, 0x1c7, 0xb480, 0x7304, 0xb009, 0x967f, 0x1, 0x1);
        gbc.writeMem(0xae1e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1c7);
        EXPECT(gbc.pc(), 0xae20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1e), 0xcb);
        EXPECT(gbc.readMem(0xae1f), 0xe0);
        // CB E0 03DC
        gbc.setState(0xa95b, 0xf706, 0xa980, 0xd8db, 0xe6aa, 0x3624, 0x1, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf706);
        EXPECT(gbc.pc(), 0xa95d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95b), 0xcb);
        EXPECT(gbc.readMem(0xa95c), 0xe0);
        // CB E0 03DD
        gbc.setState(0x96c1, 0xd373, 0x510, 0xfaab, 0x9208, 0x4098, 0x1, 0x0);
        gbc.writeMem(0x96c1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd373);
        EXPECT(gbc.pc(), 0x96c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c1), 0xcb);
        EXPECT(gbc.readMem(0x96c2), 0xe0);
        // CB E0 03DE
        gbc.setState(0xd2a3, 0xd01a, 0xf370, 0xac92, 0x9a5d, 0x8331, 0x1, 0x1);
        gbc.writeMem(0xd2a3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd01a);
        EXPECT(gbc.pc(), 0xd2a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a3), 0xcb);
        EXPECT(gbc.readMem(0xd2a4), 0xe0);
        // CB E0 03DF
        gbc.setState(0x56b4, 0xc61e, 0x1a80, 0xc948, 0xd6c6, 0x38df, 0x1, 0x0);
        gbc.writeMem(0x56b4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc61e);
        EXPECT(gbc.pc(), 0x56b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03E0
        gbc.setState(0xdf54, 0x9a3f, 0x44f0, 0xed8e, 0xed8a, 0xc746, 0x1, 0x0);
        gbc.writeMem(0xdf54, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9a3f);
        EXPECT(gbc.pc(), 0xdf56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf54), 0xcb);
        EXPECT(gbc.readMem(0xdf55), 0xe0);
        // CB E0 03E1
        gbc.setState(0xe226, 0x15c9, 0xc120, 0x3c2c, 0xf4f9, 0x5062, 0x0, 0x0);
        gbc.writeMem(0xe226, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x15c9);
        EXPECT(gbc.pc(), 0xe228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe226), 0xcb);
        EXPECT(gbc.readMem(0xe227), 0xe0);
        // CB E0 03E2
        gbc.setState(0x1492, 0x3bc0, 0x6ca0, 0x6b46, 0xbac9, 0xbf82, 0x1, 0x1);
        gbc.writeMem(0x1492, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3bc0);
        EXPECT(gbc.pc(), 0x1494);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB E0 03E3
        gbc.setState(0x8197, 0x5e6a, 0xeae0, 0xcc3a, 0xe582, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5e6a);
        EXPECT(gbc.pc(), 0x8199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8197), 0xcb);
        EXPECT(gbc.readMem(0x8198), 0xe0);
        // CB E0 03E4
        gbc.setState(0x2f05, 0x9e04, 0x4770, 0x9a2e, 0x9b69, 0x6a90, 0x0, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9e04);
        EXPECT(gbc.pc(), 0x2f07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB E0 03E5
        gbc.setState(0xd0a1, 0x174e, 0x6b0, 0xe230, 0xda79, 0x5f6f, 0x0, 0x1);
        gbc.writeMem(0xd0a1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x174e);
        EXPECT(gbc.pc(), 0xd0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0a1), 0xcb);
        EXPECT(gbc.readMem(0xd0a2), 0xe0);
        // CB E0 03E6
        gbc.setState(0xbdd3, 0x9964, 0x74f0, 0x71f1, 0x7a08, 0xb21, 0x0, 0x1);
        gbc.writeMem(0xbdd3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9964);
        EXPECT(gbc.pc(), 0xbdd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdd3), 0xcb);
        EXPECT(gbc.readMem(0xbdd4), 0xe0);
        // CB E0 03E7
        gbc.setState(0x69d0, 0xee77, 0x51b0, 0xe136, 0xc8db, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0x69d0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xee77);
        EXPECT(gbc.pc(), 0x69d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
    }
