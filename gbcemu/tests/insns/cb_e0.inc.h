    TEST(gbcemu, opcode_cb_e0) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB E0 0000
        gbc.setState(0x593d, 0x38e7, 0x3690, 0x63bb, 0x1913, 0x91b8, 0x1, 0x0);
        gbc.writeMem(0x593d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x593f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0001
        gbc.setState(0xc257, 0x13f, 0xc540, 0xf2ca, 0x158f, 0xaece, 0x0, 0x1);
        gbc.writeMem(0xc257, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0xc259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc257));
        EXPECT(0xe0, gbc.readMem(0xc258));
        // CB E0 0002
        gbc.setState(0xf4f, 0xb772, 0x3250, 0x33cd, 0x9a1c, 0xadca, 0x1, 0x1);
        gbc.writeMem(0xf4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0003
        gbc.setState(0x5342, 0x1381, 0xb3b0, 0xc135, 0xac25, 0x4001, 0x1, 0x1);
        gbc.writeMem(0x5342, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1381, gbc.sp());
        EXPECT(0x5344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0004
        gbc.setState(0xd77d, 0xb03a, 0x2c0, 0x1cb1, 0xb91b, 0xcc51, 0x1, 0x0);
        gbc.writeMem(0xd77d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb03a, gbc.sp());
        EXPECT(0xd77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd77d));
        EXPECT(0xe0, gbc.readMem(0xd77e));
        // CB E0 0005
        gbc.setState(0x9489, 0x885d, 0x2e40, 0xe9ad, 0xefa2, 0x8540, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x885d, gbc.sp());
        EXPECT(0x948b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9489));
        EXPECT(0xe0, gbc.readMem(0x948a));
        // CB E0 0006
        gbc.setState(0x1001, 0xf0a0, 0x51a0, 0x8210, 0x6d21, 0xdc46, 0x1, 0x1);
        gbc.writeMem(0x1001, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf0a0, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0007
        gbc.setState(0x77c3, 0x7115, 0x6fc0, 0x52dd, 0x8c7c, 0x2661, 0x1, 0x1);
        gbc.writeMem(0x77c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7115, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0008
        gbc.setState(0x8d6, 0x942e, 0x3650, 0x7cc7, 0xe810, 0x8efa, 0x0, 0x0);
        gbc.writeMem(0x8d6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x942e, gbc.sp());
        EXPECT(0x8d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0009
        gbc.setState(0x18d9, 0xd68, 0x9fe0, 0x41b5, 0x77ae, 0x264a, 0x1, 0x0);
        gbc.writeMem(0x18d9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd68, gbc.sp());
        EXPECT(0x18db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 000A
        gbc.setState(0x153f, 0x34f3, 0xd5b0, 0x2ab2, 0x68b8, 0xb82a, 0x0, 0x0);
        gbc.writeMem(0x153f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x34f3, gbc.sp());
        EXPECT(0x1541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 000B
        gbc.setState(0x2bc1, 0x4976, 0x1730, 0xa144, 0x8cef, 0xeefc, 0x1, 0x0);
        gbc.writeMem(0x2bc1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4976, gbc.sp());
        EXPECT(0x2bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 000C
        gbc.setState(0x1ea0, 0x274a, 0x6e20, 0x7b16, 0x2a43, 0xfb37, 0x0, 0x0);
        gbc.writeMem(0x1ea0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x274a, gbc.sp());
        EXPECT(0x1ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 000D
        gbc.setState(0x277b, 0x516d, 0x18a0, 0xf3fb, 0x5748, 0x630, 0x1, 0x0);
        gbc.writeMem(0x277b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x516d, gbc.sp());
        EXPECT(0x277d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 000F
        gbc.setState(0xc3c7, 0xb53f, 0xddd0, 0xaaa, 0x93fe, 0x5d42, 0x0, 0x1);
        gbc.writeMem(0xc3c7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb53f, gbc.sp());
        EXPECT(0xc3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c7));
        EXPECT(0xe0, gbc.readMem(0xc3c8));
        // CB E0 0010
        gbc.setState(0xa945, 0x2681, 0xe580, 0x1f05, 0xe94b, 0x6472, 0x0, 0x1);
        gbc.writeMem(0xa945, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0xa947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa945));
        EXPECT(0xe0, gbc.readMem(0xa946));
        // CB E0 0011
        gbc.setState(0x76e8, 0xbfb3, 0x5050, 0x3c76, 0x16a7, 0x1dff, 0x1, 0x0);
        gbc.writeMem(0x76e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbfb3, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0012
        gbc.setState(0x3a02, 0x2f17, 0x3ac0, 0x8633, 0xc668, 0x7275, 0x1, 0x0);
        gbc.writeMem(0x3a02, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2f17, gbc.sp());
        EXPECT(0x3a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0013
        gbc.setState(0x50, 0x4f08, 0xea80, 0xd29e, 0xfecc, 0xe65d, 0x1, 0x1);
        gbc.writeMem(0x50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4f08, gbc.sp());
        EXPECT(0x52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0014
        gbc.setState(0xb321, 0x1b0b, 0xf2f0, 0x2958, 0x7ed7, 0x7e78, 0x1, 0x1);
        gbc.writeMem(0xb321, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1b0b, gbc.sp());
        EXPECT(0xb323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb321));
        EXPECT(0xe0, gbc.readMem(0xb322));
        // CB E0 0015
        gbc.setState(0x1f6a, 0xe87e, 0xe4b0, 0xd5f5, 0x7623, 0x5b70, 0x1, 0x0);
        gbc.writeMem(0x1f6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe87e, gbc.sp());
        EXPECT(0x1f6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0016
        gbc.setState(0x66b0, 0x9b2d, 0x84c0, 0x2902, 0xeeb6, 0x30bd, 0x0, 0x0);
        gbc.writeMem(0x66b0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x66b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0017
        gbc.setState(0xe847, 0x1953, 0xc230, 0x7196, 0x2572, 0x30de, 0x0, 0x1);
        gbc.writeMem(0xe847, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1953, gbc.sp());
        EXPECT(0xe849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe847));
        EXPECT(0xe0, gbc.readMem(0xe848));
        // CB E0 0018
        gbc.setState(0xe61c, 0xf27d, 0xad50, 0x8ae8, 0x6d1b, 0x706c, 0x0, 0x1);
        gbc.writeMem(0xe61c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xf27d, gbc.sp());
        EXPECT(0xe61e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61c));
        EXPECT(0xe0, gbc.readMem(0xe61d));
        // CB E0 0019
        gbc.setState(0x1c1f, 0xf0bf, 0x5c0, 0xef9d, 0x1eef, 0xcd1f, 0x0, 0x1);
        gbc.writeMem(0x1c1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0x1c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 001A
        gbc.setState(0xc545, 0xc425, 0x40e0, 0xd0f, 0xe795, 0x9513, 0x0, 0x1);
        gbc.writeMem(0xc545, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc425, gbc.sp());
        EXPECT(0xc547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc545));
        EXPECT(0xe0, gbc.readMem(0xc546));
        // CB E0 001B
        gbc.setState(0x359b, 0xf99b, 0x5d40, 0x3c54, 0xe307, 0xfc84, 0x0, 0x1);
        gbc.writeMem(0x359b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf99b, gbc.sp());
        EXPECT(0x359d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 001C
        gbc.setState(0x333d, 0x480a, 0x60b0, 0x83f9, 0xca86, 0xd6, 0x0, 0x1);
        gbc.writeMem(0x333d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x480a, gbc.sp());
        EXPECT(0x333f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 001D
        gbc.setState(0xc820, 0xd12c, 0x8410, 0x1442, 0xab1a, 0x3723, 0x1, 0x0);
        gbc.writeMem(0xc820, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd12c, gbc.sp());
        EXPECT(0xc822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc820));
        EXPECT(0xe0, gbc.readMem(0xc821));
        // CB E0 001E
        gbc.setState(0xdd41, 0x77ff, 0x5e20, 0xf412, 0x77aa, 0xed57, 0x0, 0x0);
        gbc.writeMem(0xdd41, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x77ff, gbc.sp());
        EXPECT(0xdd43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd41));
        EXPECT(0xe0, gbc.readMem(0xdd42));
        // CB E0 001F
        gbc.setState(0xe2c3, 0x2d13, 0x1ad0, 0x5b13, 0x129c, 0x8fef, 0x1, 0x1);
        gbc.writeMem(0xe2c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0xe2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c3));
        EXPECT(0xe0, gbc.readMem(0xe2c4));
        // CB E0 0020
        gbc.setState(0xa5fe, 0xff, 0x6ee0, 0x738a, 0x341e, 0x86cb, 0x1, 0x0);
        gbc.writeMem(0xa5fe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xff, gbc.sp());
        EXPECT(0xa600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5fe));
        EXPECT(0xe0, gbc.readMem(0xa5ff));
        // CB E0 0021
        gbc.setState(0xb9cd, 0x1c8b, 0x2f80, 0x7ee1, 0x874e, 0xa4b6, 0x1, 0x0);
        gbc.writeMem(0xb9cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1c8b, gbc.sp());
        EXPECT(0xb9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9cd));
        EXPECT(0xe0, gbc.readMem(0xb9ce));
        // CB E0 0022
        gbc.setState(0xb92b, 0x8480, 0xd270, 0x8aaa, 0xa9e, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8480, gbc.sp());
        EXPECT(0xb92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92b));
        EXPECT(0xe0, gbc.readMem(0xb92c));
        // CB E0 0023
        gbc.setState(0xbab3, 0xfbd5, 0x2b00, 0xb36e, 0xcfee, 0x88c8, 0x1, 0x1);
        gbc.writeMem(0xbab3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfbd5, gbc.sp());
        EXPECT(0xbab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab3));
        EXPECT(0xe0, gbc.readMem(0xbab4));
        // CB E0 0024
        gbc.setState(0xba85, 0x275c, 0x2810, 0xbe1c, 0xb60c, 0x1c08, 0x0, 0x1);
        gbc.writeMem(0xba85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x275c, gbc.sp());
        EXPECT(0xba87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba85));
        EXPECT(0xe0, gbc.readMem(0xba86));
        // CB E0 0025
        gbc.setState(0x6abb, 0x9a9e, 0x2970, 0x585b, 0xac47, 0x4c4c, 0x0, 0x0);
        gbc.writeMem(0x6abb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0x6abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0027
        gbc.setState(0xe9ef, 0x3309, 0x7f70, 0xc7e1, 0xc137, 0x34ac, 0x1, 0x1);
        gbc.writeMem(0xe9ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ef));
        EXPECT(0xe0, gbc.readMem(0xe9f0));
        // CB E0 0028
        gbc.setState(0x5b85, 0xae3f, 0x9080, 0xccbb, 0xc172, 0xdaf9, 0x0, 0x0);
        gbc.writeMem(0x5b85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xae3f, gbc.sp());
        EXPECT(0x5b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0029
        gbc.setState(0x1ed3, 0x865e, 0xa590, 0xeb92, 0xb42d, 0xdc94, 0x0, 0x0);
        gbc.writeMem(0x1ed3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x865e, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 002A
        gbc.setState(0x817f, 0x8052, 0x8f50, 0xe7a5, 0x51ea, 0xb17c, 0x1, 0x0);
        gbc.writeMem(0x817f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8052, gbc.sp());
        EXPECT(0x8181, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x817f));
        EXPECT(0xe0, gbc.readMem(0x8180));
        // CB E0 002B
        gbc.setState(0x36d6, 0x24d5, 0xbbb0, 0xd122, 0xdabd, 0xab39, 0x1, 0x1);
        gbc.writeMem(0x36d6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x24d5, gbc.sp());
        EXPECT(0x36d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 002C
        gbc.setState(0x8d5f, 0x6e86, 0x3fc0, 0x1487, 0x1afd, 0xe7c9, 0x0, 0x1);
        gbc.writeMem(0x8d5f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6e86, gbc.sp());
        EXPECT(0x8d61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5f));
        EXPECT(0xe0, gbc.readMem(0x8d60));
        // CB E0 002D
        gbc.setState(0xefb3, 0x1c4, 0xb480, 0x691, 0x77c7, 0x97e5, 0x1, 0x1);
        gbc.writeMem(0xefb3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb3));
        EXPECT(0xe0, gbc.readMem(0xefb4));
        // CB E0 002E
        gbc.setState(0xb9f5, 0x1c2e, 0xb680, 0xcd95, 0xc293, 0xab34, 0x0, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1c2e, gbc.sp());
        EXPECT(0xb9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f5));
        EXPECT(0xe0, gbc.readMem(0xb9f6));
        // CB E0 002F
        gbc.setState(0x3d6e, 0xa63c, 0x980, 0x8b01, 0x6258, 0x98fb, 0x1, 0x0);
        gbc.writeMem(0x3d6e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa63c, gbc.sp());
        EXPECT(0x3d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0030
        gbc.setState(0x3a55, 0xe79e, 0x46f0, 0x9404, 0xd07f, 0xbced, 0x0, 0x1);
        gbc.writeMem(0x3a55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe79e, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0031
        gbc.setState(0xecf3, 0xc0c7, 0x4d0, 0x6c21, 0x8ed5, 0x8059, 0x0, 0x0);
        gbc.writeMem(0xecf3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc0c7, gbc.sp());
        EXPECT(0xecf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf3));
        EXPECT(0xe0, gbc.readMem(0xecf4));
        // CB E0 0032
        gbc.setState(0x8b7, 0x1008, 0x5350, 0xd74a, 0xb913, 0x766c, 0x0, 0x0);
        gbc.writeMem(0x8b7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1008, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0033
        gbc.setState(0x2e16, 0x8a68, 0x32c0, 0x11fc, 0xf45, 0x1cb, 0x0, 0x1);
        gbc.writeMem(0x2e16, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8a68, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0034
        gbc.setState(0x1f05, 0x8b37, 0x2580, 0x2927, 0xf32b, 0x9846, 0x1, 0x0);
        gbc.writeMem(0x1f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8b37, gbc.sp());
        EXPECT(0x1f07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0035
        gbc.setState(0x2fe4, 0x313a, 0xe800, 0xcf44, 0x73e3, 0x9e43, 0x0, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0x2fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0036
        gbc.setState(0x6fb5, 0x7182, 0x9460, 0x6f32, 0x151c, 0x826a, 0x1, 0x1);
        gbc.writeMem(0x6fb5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0037
        gbc.setState(0xadbc, 0x5bbd, 0xf40, 0x71f, 0xccf6, 0xa568, 0x1, 0x0);
        gbc.writeMem(0xadbc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5bbd, gbc.sp());
        EXPECT(0xadbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbc));
        EXPECT(0xe0, gbc.readMem(0xadbd));
        // CB E0 0038
        gbc.setState(0x35f9, 0x7eaa, 0x97a0, 0xce5e, 0x54c, 0x3802, 0x1, 0x1);
        gbc.writeMem(0x35f9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7eaa, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0039
        gbc.setState(0x52c0, 0xabd8, 0x12c0, 0x64c2, 0xba53, 0xe420, 0x1, 0x1);
        gbc.writeMem(0x52c0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xabd8, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 003B
        gbc.setState(0x7112, 0xf10c, 0x7730, 0x967f, 0xb4a5, 0x1287, 0x0, 0x0);
        gbc.writeMem(0x7112, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf10c, gbc.sp());
        EXPECT(0x7114, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 003C
        gbc.setState(0x50bc, 0x8281, 0x5310, 0xe19d, 0xe775, 0xe0e3, 0x1, 0x1);
        gbc.writeMem(0x50bc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8281, gbc.sp());
        EXPECT(0x50be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 003D
        gbc.setState(0x939a, 0x172a, 0xff10, 0x8b0d, 0xa46c, 0x4c62, 0x0, 0x1);
        gbc.writeMem(0x939a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x172a, gbc.sp());
        EXPECT(0x939c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939a));
        EXPECT(0xe0, gbc.readMem(0x939b));
        // CB E0 003E
        gbc.setState(0x3e1c, 0x2e5d, 0xe470, 0x846d, 0x167d, 0x96fa, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0x3e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 003F
        gbc.setState(0xb164, 0x1a36, 0xbf10, 0xab19, 0xab6b, 0x4c2e, 0x1, 0x0);
        gbc.writeMem(0xb164, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1a36, gbc.sp());
        EXPECT(0xb166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb164));
        EXPECT(0xe0, gbc.readMem(0xb165));
        // CB E0 0040
        gbc.setState(0x64bd, 0x8517, 0x40d0, 0xd85d, 0x6453, 0xca13, 0x1, 0x1);
        gbc.writeMem(0x64bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8517, gbc.sp());
        EXPECT(0x64bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0041
        gbc.setState(0x5d88, 0x1ae7, 0x3160, 0xde3a, 0x14fa, 0xf1db, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1ae7, gbc.sp());
        EXPECT(0x5d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0042
        gbc.setState(0xaaf5, 0x1152, 0x8810, 0xf79d, 0x43d1, 0x6535, 0x0, 0x1);
        gbc.writeMem(0xaaf5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1152, gbc.sp());
        EXPECT(0xaaf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf5));
        EXPECT(0xe0, gbc.readMem(0xaaf6));
        // CB E0 0043
        gbc.setState(0x76f7, 0xea2f, 0x68d0, 0x355a, 0xe6f1, 0x2191, 0x1, 0x1);
        gbc.writeMem(0x76f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0x76f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0044
        gbc.setState(0x4e99, 0x241, 0x8440, 0x707f, 0xbc26, 0xba68, 0x0, 0x1);
        gbc.writeMem(0x4e99, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x241, gbc.sp());
        EXPECT(0x4e9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0045
        gbc.setState(0x6154, 0xc8e, 0x84a0, 0x45ba, 0x5b8b, 0xe1ab, 0x1, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc8e, gbc.sp());
        EXPECT(0x6156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0046
        gbc.setState(0xdf21, 0x7502, 0x6f30, 0xa361, 0x2bd2, 0xd3f7, 0x1, 0x0);
        gbc.writeMem(0xdf21, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7502, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf21));
        EXPECT(0xe0, gbc.readMem(0xdf22));
        // CB E0 0047
        gbc.setState(0xe440, 0x4471, 0xbe00, 0xef64, 0x230b, 0xc0a6, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0xe0, gbc.readMem(0xe441));
        // CB E0 0048
        gbc.setState(0xd86, 0xb921, 0x76e0, 0x41b6, 0x87a2, 0x7b51, 0x1, 0x1);
        gbc.writeMem(0xd86, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0xd88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0049
        gbc.setState(0xe209, 0x714e, 0xa530, 0x581b, 0xdcf9, 0x1dce, 0x0, 0x0);
        gbc.writeMem(0xe209, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x714e, gbc.sp());
        EXPECT(0xe20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe209));
        EXPECT(0xe0, gbc.readMem(0xe20a));
        // CB E0 004A
        gbc.setState(0x3fc7, 0x9113, 0x4f60, 0xf1e, 0x215f, 0xf4c5, 0x1, 0x0);
        gbc.writeMem(0x3fc7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9113, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 004B
        gbc.setState(0x6c09, 0x6066, 0x3c50, 0xec43, 0x3ac0, 0xea59, 0x1, 0x1);
        gbc.writeMem(0x6c09, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6066, gbc.sp());
        EXPECT(0x6c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 004C
        gbc.setState(0x754a, 0x1842, 0x6da0, 0xe4d2, 0x84b8, 0x867c, 0x0, 0x1);
        gbc.writeMem(0x754a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0x754c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 004D
        gbc.setState(0x21ad, 0x66c5, 0xd900, 0x567e, 0x16d6, 0x86b4, 0x1, 0x0);
        gbc.writeMem(0x21ad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x66c5, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 004E
        gbc.setState(0x5095, 0xb13e, 0x920, 0xf037, 0xdd51, 0x2baa, 0x0, 0x1);
        gbc.writeMem(0x5095, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb13e, gbc.sp());
        EXPECT(0x5097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 004F
        gbc.setState(0x344a, 0x9e44, 0xb6f0, 0x58a8, 0x3958, 0xf45e, 0x1, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9e44, gbc.sp());
        EXPECT(0x344c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0050
        gbc.setState(0x4fef, 0x221d, 0x7a70, 0x562e, 0x35c3, 0x1c04, 0x0, 0x1);
        gbc.writeMem(0x4fef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x221d, gbc.sp());
        EXPECT(0x4ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0051
        gbc.setState(0x5e96, 0x6d1b, 0xc430, 0x57f, 0x3dc6, 0x1999, 0x0, 0x0);
        gbc.writeMem(0x5e96, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6d1b, gbc.sp());
        EXPECT(0x5e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0052
        gbc.setState(0x46a4, 0x47e8, 0xd3c0, 0xe202, 0xf18f, 0x4f2a, 0x0, 0x0);
        gbc.writeMem(0x46a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x47e8, gbc.sp());
        EXPECT(0x46a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0053
        gbc.setState(0x6334, 0xc7fa, 0xfd90, 0xbe5a, 0x3131, 0xb705, 0x1, 0x0);
        gbc.writeMem(0x6334, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xc7fa, gbc.sp());
        EXPECT(0x6336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0054
        gbc.setState(0xea97, 0xf28, 0x6cd0, 0xe740, 0x8bbf, 0x4d97, 0x0, 0x0);
        gbc.writeMem(0xea97, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf28, gbc.sp());
        EXPECT(0xea99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea97));
        EXPECT(0xe0, gbc.readMem(0xea98));
        // CB E0 0055
        gbc.setState(0xf, 0x9b7f, 0xf340, 0x844, 0xb2d3, 0x662f, 0x1, 0x0);
        gbc.writeMem(0xf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9b7f, gbc.sp());
        EXPECT(0x11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0057
        gbc.setState(0x9bef, 0x1c6f, 0x7f80, 0xe73d, 0x10c9, 0xf903, 0x0, 0x1);
        gbc.writeMem(0x9bef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bef));
        EXPECT(0xe0, gbc.readMem(0x9bf0));
        // CB E0 0059
        gbc.setState(0xcab8, 0x4190, 0x420, 0x3aa2, 0xcf83, 0xdadf, 0x0, 0x0);
        gbc.writeMem(0xcab8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4190, gbc.sp());
        EXPECT(0xcaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab8));
        EXPECT(0xe0, gbc.readMem(0xcab9));
        // CB E0 005A
        gbc.setState(0x7586, 0x76f8, 0xa250, 0x1060, 0x3c07, 0x176e, 0x0, 0x1);
        gbc.writeMem(0x7586, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x76f8, gbc.sp());
        EXPECT(0x7588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 005B
        gbc.setState(0x8ea6, 0x937b, 0x9200, 0x26f9, 0xdb2b, 0x5921, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x937b, gbc.sp());
        EXPECT(0x8ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea6));
        EXPECT(0xe0, gbc.readMem(0x8ea7));
        // CB E0 005C
        gbc.setState(0xa63, 0x71af, 0x5400, 0x4244, 0x20dd, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0xa63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x71af, gbc.sp());
        EXPECT(0xa65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 005E
        gbc.setState(0xbf34, 0xe2a1, 0xf310, 0xab45, 0x37df, 0x82b8, 0x1, 0x0);
        gbc.writeMem(0xbf34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0xbf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf34));
        EXPECT(0xe0, gbc.readMem(0xbf35));
        // CB E0 005F
        gbc.setState(0x4b64, 0x59a9, 0x1850, 0x5b1d, 0x11, 0x7662, 0x0, 0x0);
        gbc.writeMem(0x4b64, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x59a9, gbc.sp());
        EXPECT(0x4b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0061
        gbc.setState(0x48d8, 0xa242, 0x9f70, 0x4fcb, 0x2444, 0x6d1f, 0x1, 0x1);
        gbc.writeMem(0x48d8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0063
        gbc.setState(0xabe5, 0xfe0c, 0x7f60, 0x65b7, 0x7031, 0xcf4c, 0x0, 0x1);
        gbc.writeMem(0xabe5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfe0c, gbc.sp());
        EXPECT(0xabe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe5));
        EXPECT(0xe0, gbc.readMem(0xabe6));
        // CB E0 0064
        gbc.setState(0x6231, 0x1da9, 0x560, 0x52f4, 0x2666, 0x5157, 0x0, 0x1);
        gbc.writeMem(0x6231, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1da9, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0065
        gbc.setState(0x2dc3, 0xab58, 0x8f40, 0x6397, 0xc32c, 0x9341, 0x1, 0x1);
        gbc.writeMem(0x2dc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xab58, gbc.sp());
        EXPECT(0x2dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0066
        gbc.setState(0x1160, 0xc90a, 0xdb00, 0x332d, 0x9b7a, 0xe74b, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc90a, gbc.sp());
        EXPECT(0x1162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0067
        gbc.setState(0x70f, 0x9629, 0x3bb0, 0x2861, 0x8268, 0x9ed5, 0x1, 0x1);
        gbc.writeMem(0x70f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9629, gbc.sp());
        EXPECT(0x711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0068
        gbc.setState(0xeca5, 0x17e9, 0x74f0, 0xd301, 0xbbd1, 0xde16, 0x0, 0x1);
        gbc.writeMem(0xeca5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x17e9, gbc.sp());
        EXPECT(0xeca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca5));
        EXPECT(0xe0, gbc.readMem(0xeca6));
        // CB E0 0069
        gbc.setState(0xada7, 0xd0ec, 0x7b50, 0xafbe, 0x5586, 0xe15b, 0x0, 0x0);
        gbc.writeMem(0xada7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd0ec, gbc.sp());
        EXPECT(0xada9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada7));
        EXPECT(0xe0, gbc.readMem(0xada8));
        // CB E0 006A
        gbc.setState(0x1fa2, 0x956, 0x1a00, 0x8300, 0x338b, 0xce92, 0x0, 0x1);
        gbc.writeMem(0x1fa2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x1fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 006B
        gbc.setState(0x777e, 0x9d37, 0x4f50, 0x1852, 0xbd29, 0xfbb, 0x0, 0x0);
        gbc.writeMem(0x777e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9d37, gbc.sp());
        EXPECT(0x7780, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 006C
        gbc.setState(0x840b, 0xfac2, 0x6560, 0xe7b0, 0xce87, 0x1fa7, 0x1, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfac2, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0xe0, gbc.readMem(0x840c));
        // CB E0 006D
        gbc.setState(0xb175, 0xda8e, 0x8700, 0x2b19, 0x589, 0x8901, 0x1, 0x1);
        gbc.writeMem(0xb175, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0xb177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb175));
        EXPECT(0xe0, gbc.readMem(0xb176));
        // CB E0 006E
        gbc.setState(0x23a5, 0xb222, 0xe420, 0x541, 0x3613, 0x447, 0x1, 0x0);
        gbc.writeMem(0x23a5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb222, gbc.sp());
        EXPECT(0x23a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 006F
        gbc.setState(0x5fc4, 0xd0a9, 0x93d0, 0xb939, 0x44f4, 0xe17f, 0x1, 0x1);
        gbc.writeMem(0x5fc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd0a9, gbc.sp());
        EXPECT(0x5fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0070
        gbc.setState(0x3580, 0x85c, 0x38c0, 0x8370, 0x3a6b, 0x27, 0x0, 0x0);
        gbc.writeMem(0x3580, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x85c, gbc.sp());
        EXPECT(0x3582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0071
        gbc.setState(0xe8d5, 0xa551, 0xf300, 0x980e, 0x7be3, 0xbb1, 0x1, 0x0);
        gbc.writeMem(0xe8d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa551, gbc.sp());
        EXPECT(0xe8d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8d5));
        EXPECT(0xe0, gbc.readMem(0xe8d6));
        // CB E0 0072
        gbc.setState(0xe8cb, 0x3db5, 0x1ea0, 0xd27c, 0xf5e5, 0xe4bd, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3db5, gbc.sp());
        EXPECT(0xe8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cb));
        EXPECT(0xe0, gbc.readMem(0xe8cc));
        // CB E0 0073
        gbc.setState(0x4ca8, 0x29dd, 0x4930, 0x36b6, 0x3a5b, 0xf14c, 0x1, 0x1);
        gbc.writeMem(0x4ca8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x29dd, gbc.sp());
        EXPECT(0x4caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0074
        gbc.setState(0x4330, 0x6338, 0x9080, 0xe142, 0x4562, 0xd0b0, 0x1, 0x1);
        gbc.writeMem(0x4330, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6338, gbc.sp());
        EXPECT(0x4332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0075
        gbc.setState(0x35fb, 0x6613, 0xd500, 0xe647, 0x2e22, 0x75b5, 0x0, 0x1);
        gbc.writeMem(0x35fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6613, gbc.sp());
        EXPECT(0x35fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0076
        gbc.setState(0xcb1a, 0x6817, 0x6220, 0xf544, 0xcf34, 0x634c, 0x1, 0x0);
        gbc.writeMem(0xcb1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6817, gbc.sp());
        EXPECT(0xcb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1a));
        EXPECT(0xe0, gbc.readMem(0xcb1b));
        // CB E0 0077
        gbc.setState(0xbf8f, 0xb0b4, 0xc560, 0x4871, 0xeab8, 0x5a91, 0x0, 0x0);
        gbc.writeMem(0xbf8f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb0b4, gbc.sp());
        EXPECT(0xbf91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8f));
        EXPECT(0xe0, gbc.readMem(0xbf90));
        // CB E0 0078
        gbc.setState(0x66c4, 0xe0d3, 0xd160, 0xc55f, 0xc594, 0xce3c, 0x1, 0x0);
        gbc.writeMem(0x66c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe0d3, gbc.sp());
        EXPECT(0x66c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0079
        gbc.setState(0x6b76, 0x895, 0xeb90, 0x94b0, 0x22a8, 0x1820, 0x0, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x895, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 007A
        gbc.setState(0x8f39, 0xfd4e, 0x53e0, 0x1c53, 0x51f, 0xd2e6, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfd4e, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0xe0, gbc.readMem(0x8f3a));
        // CB E0 007B
        gbc.setState(0x5140, 0xf1e5, 0x4b80, 0xe343, 0xb781, 0x723, 0x0, 0x1);
        gbc.writeMem(0x5140, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf1e5, gbc.sp());
        EXPECT(0x5142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 007C
        gbc.setState(0x7e44, 0x3908, 0xde70, 0x7c22, 0x9f37, 0xd183, 0x1, 0x1);
        gbc.writeMem(0x7e44, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3908, gbc.sp());
        EXPECT(0x7e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 007D
        gbc.setState(0x9413, 0xeaee, 0x7de0, 0x9b59, 0x194c, 0xf405, 0x1, 0x1);
        gbc.writeMem(0x9413, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xeaee, gbc.sp());
        EXPECT(0x9415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9413));
        EXPECT(0xe0, gbc.readMem(0x9414));
        // CB E0 007E
        gbc.setState(0xbbd4, 0xaf9, 0x5150, 0x8f66, 0x1868, 0x9da, 0x1, 0x0);
        gbc.writeMem(0xbbd4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaf9, gbc.sp());
        EXPECT(0xbbd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd4));
        EXPECT(0xe0, gbc.readMem(0xbbd5));
        // CB E0 007F
        gbc.setState(0x201a, 0x4f57, 0x84c0, 0xf5e, 0xa3a9, 0x69e, 0x0, 0x0);
        gbc.writeMem(0x201a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4f57, gbc.sp());
        EXPECT(0x201c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0080
        gbc.setState(0x604a, 0x15fb, 0x4860, 0x3820, 0xb692, 0xbeeb, 0x0, 0x0);
        gbc.writeMem(0x604a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x15fb, gbc.sp());
        EXPECT(0x604c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0081
        gbc.setState(0x46fd, 0x664, 0xd410, 0xdea, 0x7bc7, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0x46fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x664, gbc.sp());
        EXPECT(0x46ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0082
        gbc.setState(0xd969, 0x74ee, 0x1080, 0xf0f6, 0x6970, 0x285f, 0x0, 0x0);
        gbc.writeMem(0xd969, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0xd96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd969));
        EXPECT(0xe0, gbc.readMem(0xd96a));
        // CB E0 0083
        gbc.setState(0xa031, 0x530e, 0xe4a0, 0x4c38, 0xab78, 0x47e6, 0x0, 0x0);
        gbc.writeMem(0xa031, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0xa033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa031));
        EXPECT(0xe0, gbc.readMem(0xa032));
        // CB E0 0084
        gbc.setState(0xad38, 0x7cb7, 0xa520, 0x75f7, 0xa0ab, 0x6dbd, 0x1, 0x1);
        gbc.writeMem(0xad38, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7cb7, gbc.sp());
        EXPECT(0xad3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad38));
        EXPECT(0xe0, gbc.readMem(0xad39));
        // CB E0 0085
        gbc.setState(0x2fc9, 0x51fe, 0x4e40, 0xe503, 0xa5b, 0x33d1, 0x0, 0x0);
        gbc.writeMem(0x2fc9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x51fe, gbc.sp());
        EXPECT(0x2fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0087
        gbc.setState(0x5e65, 0x24b9, 0xd40, 0x3c4e, 0x8a26, 0x46bf, 0x0, 0x0);
        gbc.writeMem(0x5e65, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x24b9, gbc.sp());
        EXPECT(0x5e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0088
        gbc.setState(0xebde, 0xbb9b, 0x5c60, 0x2a61, 0x6b, 0x68c, 0x0, 0x0);
        gbc.writeMem(0xebde, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbb9b, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0xe0, gbc.readMem(0xebdf));
        // CB E0 0089
        gbc.setState(0xa56, 0x2028, 0x6350, 0x9162, 0xc69f, 0xec1a, 0x1, 0x1);
        gbc.writeMem(0xa56, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2028, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 008A
        gbc.setState(0xceed, 0xb0de, 0x9f0, 0x9370, 0xcc5d, 0xfc00, 0x1, 0x0);
        gbc.writeMem(0xceed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb0de, gbc.sp());
        EXPECT(0xceef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceed));
        EXPECT(0xe0, gbc.readMem(0xceee));
        // CB E0 008B
        gbc.setState(0x25f8, 0x34fa, 0xd7a0, 0x5e93, 0x373b, 0x3fe4, 0x1, 0x1);
        gbc.writeMem(0x25f8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x34fa, gbc.sp());
        EXPECT(0x25fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 008C
        gbc.setState(0x2c8, 0x6eff, 0xf7c0, 0x3e5e, 0x23d0, 0xbd3b, 0x0, 0x1);
        gbc.writeMem(0x2c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0x2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 008D
        gbc.setState(0x1463, 0xfa3d, 0xc300, 0x6820, 0xc6ce, 0xb63a, 0x0, 0x1);
        gbc.writeMem(0x1463, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0x1465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 008E
        gbc.setState(0x6588, 0xa27, 0xe480, 0x1aee, 0x2569, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x6588, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa27, gbc.sp());
        EXPECT(0x658a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 008F
        gbc.setState(0x305d, 0xa1c5, 0xc600, 0xf8b1, 0x26d1, 0x79fa, 0x1, 0x1);
        gbc.writeMem(0x305d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0090
        gbc.setState(0xba68, 0x3e3d, 0xd060, 0xd3bb, 0xb647, 0x8867, 0x0, 0x0);
        gbc.writeMem(0xba68, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3e3d, gbc.sp());
        EXPECT(0xba6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba68));
        EXPECT(0xe0, gbc.readMem(0xba69));
        // CB E0 0091
        gbc.setState(0xef04, 0xd0be, 0x3f50, 0x6554, 0x77d, 0x4dd2, 0x1, 0x0);
        gbc.writeMem(0xef04, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd0be, gbc.sp());
        EXPECT(0xef06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef04));
        EXPECT(0xe0, gbc.readMem(0xef05));
        // CB E0 0092
        gbc.setState(0x6f94, 0x8dca, 0xec90, 0x6168, 0xc798, 0x8147, 0x1, 0x0);
        gbc.writeMem(0x6f94, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0x6f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0093
        gbc.setState(0xae81, 0xdc9f, 0x5aa0, 0xf091, 0x9b08, 0xdd3c, 0x1, 0x1);
        gbc.writeMem(0xae81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0xae83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae81));
        EXPECT(0xe0, gbc.readMem(0xae82));
        // CB E0 0094
        gbc.setState(0x92e6, 0xf079, 0x2500, 0x5147, 0x7ca6, 0xbc1a, 0x0, 0x1);
        gbc.writeMem(0x92e6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0x92e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e6));
        EXPECT(0xe0, gbc.readMem(0x92e7));
        // CB E0 0095
        gbc.setState(0x66db, 0x8427, 0x35d0, 0x5330, 0x6e33, 0x23b4, 0x1, 0x1);
        gbc.writeMem(0x66db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8427, gbc.sp());
        EXPECT(0x66dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0096
        gbc.setState(0xb933, 0xef04, 0x3f70, 0x38c6, 0x5651, 0xe0e2, 0x1, 0x1);
        gbc.writeMem(0xb933, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xef04, gbc.sp());
        EXPECT(0xb935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb933));
        EXPECT(0xe0, gbc.readMem(0xb934));
        // CB E0 0097
        gbc.setState(0x3f10, 0x702e, 0xd180, 0x31b9, 0xd876, 0xa5bd, 0x0, 0x0);
        gbc.writeMem(0x3f10, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x702e, gbc.sp());
        EXPECT(0x3f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0098
        gbc.setState(0x8c66, 0xdf2d, 0xb080, 0xe75e, 0x32c6, 0x28e8, 0x1, 0x1);
        gbc.writeMem(0x8c66, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdf2d, gbc.sp());
        EXPECT(0x8c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c66));
        EXPECT(0xe0, gbc.readMem(0x8c67));
        // CB E0 0099
        gbc.setState(0x95cb, 0x9c24, 0x5500, 0xb135, 0x305d, 0x6a36, 0x0, 0x1);
        gbc.writeMem(0x95cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9c24, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95cb));
        EXPECT(0xe0, gbc.readMem(0x95cc));
        // CB E0 009A
        gbc.setState(0xdd79, 0x7103, 0x79f0, 0x64ff, 0x3be3, 0xf613, 0x1, 0x0);
        gbc.writeMem(0xdd79, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7103, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd79));
        EXPECT(0xe0, gbc.readMem(0xdd7a));
        // CB E0 009B
        gbc.setState(0xaf14, 0x1191, 0x82e0, 0xfd4, 0x3a4c, 0x3a9, 0x0, 0x0);
        gbc.writeMem(0xaf14, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1191, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf14));
        EXPECT(0xe0, gbc.readMem(0xaf15));
        // CB E0 009C
        gbc.setState(0x8884, 0x14f6, 0x6370, 0xc364, 0x2533, 0x67fe, 0x1, 0x0);
        gbc.writeMem(0x8884, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x14f6, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8884));
        EXPECT(0xe0, gbc.readMem(0x8885));
        // CB E0 009D
        gbc.setState(0x5780, 0x9b6a, 0xa840, 0x7cd0, 0x1271, 0x7c3e, 0x1, 0x1);
        gbc.writeMem(0x5780, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9b6a, gbc.sp());
        EXPECT(0x5782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 009E
        gbc.setState(0x1cfc, 0xb24a, 0x99b0, 0x4975, 0xfc15, 0x569c, 0x1, 0x0);
        gbc.writeMem(0x1cfc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb24a, gbc.sp());
        EXPECT(0x1cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 009F
        gbc.setState(0x3357, 0xe83f, 0x34c0, 0xfc1a, 0x6ef2, 0x5392, 0x0, 0x1);
        gbc.writeMem(0x3357, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe83f, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00A0
        gbc.setState(0x64f4, 0x1fbe, 0xc8a0, 0xfc70, 0x578b, 0x6af5, 0x0, 0x0);
        gbc.writeMem(0x64f4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1fbe, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00A1
        gbc.setState(0x9093, 0xc2c1, 0x7fb0, 0xe08b, 0x18d2, 0x3c6d, 0x1, 0x1);
        gbc.writeMem(0x9093, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc2c1, gbc.sp());
        EXPECT(0x9095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9093));
        EXPECT(0xe0, gbc.readMem(0x9094));
        // CB E0 00A2
        gbc.setState(0x3cf, 0x3a60, 0xd9a0, 0xebe2, 0x8151, 0xbcef, 0x1, 0x1);
        gbc.writeMem(0x3cf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3a60, gbc.sp());
        EXPECT(0x3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00A3
        gbc.setState(0x65be, 0xe2a7, 0x17f0, 0xe775, 0xf4e9, 0xbce3, 0x1, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00A4
        gbc.setState(0xbdac, 0x4cb, 0xe1b0, 0x40ac, 0x908f, 0xfb62, 0x1, 0x1);
        gbc.writeMem(0xbdac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdac));
        EXPECT(0xe0, gbc.readMem(0xbdad));
        // CB E0 00A5
        gbc.setState(0x5ba7, 0x6dd1, 0x4650, 0xbb9a, 0xac41, 0x6980, 0x0, 0x1);
        gbc.writeMem(0x5ba7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6dd1, gbc.sp());
        EXPECT(0x5ba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00A6
        gbc.setState(0x1ec2, 0xc0ce, 0xc6c0, 0x1947, 0xca67, 0x589e, 0x1, 0x1);
        gbc.writeMem(0x1ec2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc0ce, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00A7
        gbc.setState(0x4dc4, 0x2af8, 0xef50, 0x5148, 0x936d, 0x7ea0, 0x0, 0x1);
        gbc.writeMem(0x4dc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2af8, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00A8
        gbc.setState(0x99fc, 0xf40b, 0xaf0, 0x6e04, 0xff1f, 0xdfbe, 0x1, 0x0);
        gbc.writeMem(0x99fc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf40b, gbc.sp());
        EXPECT(0x99fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99fc));
        EXPECT(0xe0, gbc.readMem(0x99fd));
        // CB E0 00A9
        gbc.setState(0xbc8b, 0xeafc, 0x5890, 0x92b5, 0xb63c, 0xa0c1, 0x1, 0x1);
        gbc.writeMem(0xbc8b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeafc, gbc.sp());
        EXPECT(0xbc8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8b));
        EXPECT(0xe0, gbc.readMem(0xbc8c));
        // CB E0 00AA
        gbc.setState(0xc846, 0x1785, 0xaa40, 0xf0e0, 0x1576, 0x714, 0x1, 0x1);
        gbc.writeMem(0xc846, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1785, gbc.sp());
        EXPECT(0xc848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc846));
        EXPECT(0xe0, gbc.readMem(0xc847));
        // CB E0 00AB
        gbc.setState(0x448c, 0x59de, 0x96e0, 0x37eb, 0xbc0f, 0xeb47, 0x0, 0x0);
        gbc.writeMem(0x448c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x59de, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00AC
        gbc.setState(0x2aae, 0xd7d1, 0x3ae0, 0xf947, 0x2f59, 0xc745, 0x1, 0x1);
        gbc.writeMem(0x2aae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd7d1, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00AD
        gbc.setState(0x5a03, 0xe1b2, 0xd980, 0x5f50, 0x6412, 0x98ab, 0x0, 0x0);
        gbc.writeMem(0x5a03, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe1b2, gbc.sp());
        EXPECT(0x5a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00AE
        gbc.setState(0x83b3, 0xeb47, 0x5490, 0x9099, 0xe590, 0x947b, 0x1, 0x0);
        gbc.writeMem(0x83b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeb47, gbc.sp());
        EXPECT(0x83b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b3));
        EXPECT(0xe0, gbc.readMem(0x83b4));
        // CB E0 00AF
        gbc.setState(0xd5f6, 0xe855, 0x3210, 0x8807, 0x712c, 0x31b2, 0x1, 0x0);
        gbc.writeMem(0xd5f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe855, gbc.sp());
        EXPECT(0xd5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5f6));
        EXPECT(0xe0, gbc.readMem(0xd5f7));
        // CB E0 00B0
        gbc.setState(0x4bcd, 0xced, 0x3910, 0xd60d, 0xbc13, 0x7cd9, 0x1, 0x1);
        gbc.writeMem(0x4bcd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0x4bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00B1
        gbc.setState(0x1c68, 0xcdff, 0x5410, 0xe7f2, 0x329e, 0x341d, 0x1, 0x1);
        gbc.writeMem(0x1c68, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0x1c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00B2
        gbc.setState(0xab1c, 0x8401, 0x8ca0, 0xcb0f, 0x63f0, 0x93a2, 0x0, 0x1);
        gbc.writeMem(0xab1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8401, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab1c));
        EXPECT(0xe0, gbc.readMem(0xab1d));
        // CB E0 00B3
        gbc.setState(0x3e13, 0x4c9f, 0x4cd0, 0x4283, 0xb056, 0x38cb, 0x1, 0x0);
        gbc.writeMem(0x3e13, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4c9f, gbc.sp());
        EXPECT(0x3e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00B4
        gbc.setState(0xceee, 0x1d7d, 0x8930, 0x7f48, 0xde78, 0x8f87, 0x1, 0x1);
        gbc.writeMem(0xceee, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1d7d, gbc.sp());
        EXPECT(0xcef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceee));
        EXPECT(0xe0, gbc.readMem(0xceef));
        // CB E0 00B5
        gbc.setState(0x8ad1, 0xfce9, 0xd980, 0x2ed0, 0x6849, 0xbede, 0x1, 0x1);
        gbc.writeMem(0x8ad1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xfce9, gbc.sp());
        EXPECT(0x8ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad1));
        EXPECT(0xe0, gbc.readMem(0x8ad2));
        // CB E0 00B6
        gbc.setState(0x1bd8, 0xd5ff, 0x7ae0, 0x2735, 0xf778, 0x7ef3, 0x0, 0x0);
        gbc.writeMem(0x1bd8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd5ff, gbc.sp());
        EXPECT(0x1bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00B7
        gbc.setState(0x7ba9, 0x2c44, 0x67b0, 0x9350, 0xab9d, 0x9e42, 0x1, 0x0);
        gbc.writeMem(0x7ba9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0x7bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00B8
        gbc.setState(0x11aa, 0x4a2d, 0x36f0, 0x7982, 0x6a52, 0x25a5, 0x1, 0x0);
        gbc.writeMem(0x11aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4a2d, gbc.sp());
        EXPECT(0x11ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00B9
        gbc.setState(0xec2d, 0xa94b, 0x1d10, 0xc29e, 0x8eaf, 0xfa4d, 0x0, 0x0);
        gbc.writeMem(0xec2d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0xec2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec2d));
        EXPECT(0xe0, gbc.readMem(0xec2e));
        // CB E0 00BA
        gbc.setState(0xbfc6, 0xfdb3, 0x9160, 0xb4f4, 0xbcd1, 0xfd1e, 0x0, 0x0);
        gbc.writeMem(0xbfc6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfdb3, gbc.sp());
        EXPECT(0xbfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc6));
        EXPECT(0xe0, gbc.readMem(0xbfc7));
        // CB E0 00BB
        gbc.setState(0x5809, 0xb44b, 0xb230, 0xeb3e, 0x60e9, 0x18e3, 0x0, 0x0);
        gbc.writeMem(0x5809, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb44b, gbc.sp());
        EXPECT(0x580b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00BC
        gbc.setState(0xd2ae, 0xa1e9, 0xe9e0, 0x745e, 0x9f43, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0xd2ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa1e9, gbc.sp());
        EXPECT(0xd2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ae));
        EXPECT(0xe0, gbc.readMem(0xd2af));
        // CB E0 00BD
        gbc.setState(0x43df, 0xdcc5, 0xcdd0, 0x7af4, 0xa19f, 0xa1c6, 0x1, 0x1);
        gbc.writeMem(0x43df, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdcc5, gbc.sp());
        EXPECT(0x43e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00BE
        gbc.setState(0x46d7, 0x2e4d, 0xcb80, 0x48ff, 0x7034, 0xcf35, 0x1, 0x0);
        gbc.writeMem(0x46d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2e4d, gbc.sp());
        EXPECT(0x46d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00BF
        gbc.setState(0x79b8, 0xaad8, 0x4dd0, 0x5754, 0x7566, 0x4fe1, 0x0, 0x1);
        gbc.writeMem(0x79b8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xaad8, gbc.sp());
        EXPECT(0x79ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00C0
        gbc.setState(0x1864, 0x9198, 0xbe40, 0x5f38, 0xfe1e, 0xdfb, 0x0, 0x1);
        gbc.writeMem(0x1864, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9198, gbc.sp());
        EXPECT(0x1866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00C1
        gbc.setState(0x5689, 0xc119, 0x17d0, 0xf75d, 0xb238, 0xc3d5, 0x1, 0x1);
        gbc.writeMem(0x5689, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc119, gbc.sp());
        EXPECT(0x568b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00C2
        gbc.setState(0xa9d, 0xf1c3, 0xf3b0, 0xe587, 0x487d, 0x5cb5, 0x1, 0x1);
        gbc.writeMem(0xa9d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf1c3, gbc.sp());
        EXPECT(0xa9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00C3
        gbc.setState(0xf35, 0xf1ff, 0xf8a0, 0xe5bb, 0xf4f, 0x3dc7, 0x1, 0x0);
        gbc.writeMem(0xf35, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf1ff, gbc.sp());
        EXPECT(0xf37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00C4
        gbc.setState(0x4ce9, 0xdc96, 0xa960, 0x5bd2, 0x76ea, 0x4cbc, 0x0, 0x1);
        gbc.writeMem(0x4ce9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdc96, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00C5
        gbc.setState(0x6028, 0xd655, 0xaee0, 0xc434, 0xb421, 0x7428, 0x0, 0x1);
        gbc.writeMem(0x6028, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd655, gbc.sp());
        EXPECT(0x602a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00C6
        gbc.setState(0x4d99, 0x4ae5, 0xa040, 0x4bcb, 0x98bb, 0xede8, 0x1, 0x0);
        gbc.writeMem(0x4d99, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ae5, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00C7
        gbc.setState(0x8980, 0x2cbe, 0x7640, 0xe45c, 0xaa19, 0x6eef, 0x0, 0x1);
        gbc.writeMem(0x8980, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2cbe, gbc.sp());
        EXPECT(0x8982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8980));
        EXPECT(0xe0, gbc.readMem(0x8981));
        // CB E0 00C8
        gbc.setState(0xaac0, 0x431a, 0xa70, 0x4548, 0xeecc, 0xb1ee, 0x0, 0x0);
        gbc.writeMem(0xaac0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x431a, gbc.sp());
        EXPECT(0xaac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaac0));
        EXPECT(0xe0, gbc.readMem(0xaac1));
        // CB E0 00C9
        gbc.setState(0x6322, 0x656, 0x2320, 0x4903, 0x5999, 0xe91c, 0x0, 0x1);
        gbc.writeMem(0x6322, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x656, gbc.sp());
        EXPECT(0x6324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00CA
        gbc.setState(0x8123, 0xa5a9, 0x7e60, 0xd0d7, 0x4c34, 0x9ca7, 0x0, 0x1);
        gbc.writeMem(0x8123, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa5a9, gbc.sp());
        EXPECT(0x8125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8123));
        EXPECT(0xe0, gbc.readMem(0x8124));
        // CB E0 00CB
        gbc.setState(0x6ea6, 0xb236, 0x2790, 0xe4d9, 0x84d4, 0x68d0, 0x1, 0x1);
        gbc.writeMem(0x6ea6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb236, gbc.sp());
        EXPECT(0x6ea8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00CC
        gbc.setState(0x22cc, 0x7b8e, 0xd530, 0xd6f0, 0x4cd, 0x125d, 0x1, 0x1);
        gbc.writeMem(0x22cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7b8e, gbc.sp());
        EXPECT(0x22ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00CD
        gbc.setState(0x803e, 0x561f, 0x4ef0, 0x3b4f, 0x449b, 0x239a, 0x0, 0x0);
        gbc.writeMem(0x803e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x561f, gbc.sp());
        EXPECT(0x8040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803e));
        EXPECT(0xe0, gbc.readMem(0x803f));
        // CB E0 00CE
        gbc.setState(0x12fb, 0xa890, 0xbac0, 0x152a, 0xc7f0, 0x7c2, 0x0, 0x0);
        gbc.writeMem(0x12fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa890, gbc.sp());
        EXPECT(0x12fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00CF
        gbc.setState(0x5824, 0x27aa, 0xb770, 0xfb09, 0xe797, 0xf598, 0x1, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x27aa, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00D0
        gbc.setState(0xbedc, 0x2176, 0xe370, 0x7320, 0xc566, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2176, gbc.sp());
        EXPECT(0xbede, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedc));
        EXPECT(0xe0, gbc.readMem(0xbedd));
        // CB E0 00D1
        gbc.setState(0x3f78, 0x1c66, 0x32e0, 0xfe42, 0xf14c, 0x211b, 0x1, 0x0);
        gbc.writeMem(0x3f78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1c66, gbc.sp());
        EXPECT(0x3f7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00D2
        gbc.setState(0xb704, 0x519f, 0xfff0, 0x881d, 0x31de, 0x99f4, 0x1, 0x0);
        gbc.writeMem(0xb704, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x519f, gbc.sp());
        EXPECT(0xb706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb704));
        EXPECT(0xe0, gbc.readMem(0xb705));
        // CB E0 00D3
        gbc.setState(0x493f, 0x7255, 0x3d80, 0x6784, 0xf891, 0x3d58, 0x0, 0x1);
        gbc.writeMem(0x493f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7255, gbc.sp());
        EXPECT(0x4941, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00D4
        gbc.setState(0x184c, 0x68d8, 0x2630, 0x3c68, 0x441f, 0x73cb, 0x1, 0x0);
        gbc.writeMem(0x184c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x68d8, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00D6
        gbc.setState(0xc439, 0xe905, 0x1230, 0x8c9c, 0x2700, 0x9f69, 0x1, 0x1);
        gbc.writeMem(0xc439, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe905, gbc.sp());
        EXPECT(0xc43b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc439));
        EXPECT(0xe0, gbc.readMem(0xc43a));
        // CB E0 00D7
        gbc.setState(0x1b36, 0x77a2, 0x8dd0, 0xedae, 0x9f84, 0x9b72, 0x1, 0x1);
        gbc.writeMem(0x1b36, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x77a2, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00D8
        gbc.setState(0x1f1e, 0x356e, 0x7b0, 0x67ca, 0xc841, 0x6dfa, 0x0, 0x0);
        gbc.writeMem(0x1f1e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0x1f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00D9
        gbc.setState(0xe017, 0xb170, 0x2ec0, 0x3a39, 0x87a0, 0xf68e, 0x1, 0x0);
        gbc.writeMem(0xe017, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb170, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0xe0, gbc.readMem(0xe018));
        // CB E0 00DA
        gbc.setState(0xd32d, 0xa650, 0xcfd0, 0x69fe, 0x29a2, 0xd402, 0x0, 0x0);
        gbc.writeMem(0xd32d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa650, gbc.sp());
        EXPECT(0xd32f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32d));
        EXPECT(0xe0, gbc.readMem(0xd32e));
        // CB E0 00DB
        gbc.setState(0xd255, 0x3b80, 0x41d0, 0x5f1f, 0x3eef, 0x13a7, 0x1, 0x0);
        gbc.writeMem(0xd255, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0xd257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd255));
        EXPECT(0xe0, gbc.readMem(0xd256));
        // CB E0 00DD
        gbc.setState(0x2fdc, 0xf3b8, 0x79b0, 0x1fe5, 0x1060, 0x6d5, 0x1, 0x1);
        gbc.writeMem(0x2fdc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xf3b8, gbc.sp());
        EXPECT(0x2fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00DE
        gbc.setState(0x42cd, 0xf527, 0x3010, 0xcc6b, 0xd400, 0x8be9, 0x1, 0x0);
        gbc.writeMem(0x42cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf527, gbc.sp());
        EXPECT(0x42cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00DF
        gbc.setState(0xc792, 0x173f, 0x13c0, 0xb2db, 0xfa4d, 0xaf01, 0x0, 0x1);
        gbc.writeMem(0xc792, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x173f, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc792));
        EXPECT(0xe0, gbc.readMem(0xc793));
        // CB E0 00E0
        gbc.setState(0x5b53, 0x7ae1, 0xbf40, 0x68a5, 0x909, 0xf848, 0x1, 0x1);
        gbc.writeMem(0x5b53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0x5b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00E1
        gbc.setState(0x27c3, 0x5b10, 0xd140, 0xc4a4, 0xa274, 0x7bdb, 0x1, 0x1);
        gbc.writeMem(0x27c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x27c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00E2
        gbc.setState(0xe127, 0xe023, 0xe9e0, 0xfef1, 0x8e40, 0x934e, 0x0, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0xe129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe127));
        EXPECT(0xe0, gbc.readMem(0xe128));
        // CB E0 00E3
        gbc.setState(0x237d, 0x2fab, 0x1ed0, 0x7f8e, 0x5e1b, 0x9f25, 0x1, 0x1);
        gbc.writeMem(0x237d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2fab, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00E4
        gbc.setState(0x564d, 0xa9d7, 0x8cb0, 0x763f, 0xd958, 0xcce1, 0x1, 0x0);
        gbc.writeMem(0x564d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa9d7, gbc.sp());
        EXPECT(0x564f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00E5
        gbc.setState(0x7c07, 0x45cf, 0xe200, 0x2438, 0xe56c, 0x66e8, 0x0, 0x0);
        gbc.writeMem(0x7c07, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x45cf, gbc.sp());
        EXPECT(0x7c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00E6
        gbc.setState(0xa489, 0x6c8c, 0xb2b0, 0x379d, 0x1bd6, 0xe6bb, 0x0, 0x1);
        gbc.writeMem(0xa489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6c8c, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0xe0, gbc.readMem(0xa48a));
        // CB E0 00E7
        gbc.setState(0x1127, 0x38ae, 0x67a0, 0x599b, 0x375e, 0x76f1, 0x0, 0x0);
        gbc.writeMem(0x1127, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x38ae, gbc.sp());
        EXPECT(0x1129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00E8
        gbc.setState(0x4e9b, 0x2665, 0x4430, 0x4f53, 0x3eba, 0x289f, 0x1, 0x1);
        gbc.writeMem(0x4e9b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2665, gbc.sp());
        EXPECT(0x4e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00E9
        gbc.setState(0xac7c, 0x7bf2, 0xc990, 0xe908, 0xc260, 0x15a1, 0x0, 0x1);
        gbc.writeMem(0xac7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac7c));
        EXPECT(0xe0, gbc.readMem(0xac7d));
        // CB E0 00EA
        gbc.setState(0xe9b3, 0x30af, 0x25c0, 0x13dc, 0xc37c, 0xe017, 0x0, 0x1);
        gbc.writeMem(0xe9b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x30af, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b3));
        EXPECT(0xe0, gbc.readMem(0xe9b4));
        // CB E0 00EB
        gbc.setState(0x9757, 0xcced, 0xe720, 0x8001, 0x8b2a, 0xdf7, 0x1, 0x0);
        gbc.writeMem(0x9757, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcced, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9757));
        EXPECT(0xe0, gbc.readMem(0x9758));
        // CB E0 00EC
        gbc.setState(0x3938, 0xabc7, 0x7860, 0xa942, 0x1b8c, 0x253c, 0x1, 0x1);
        gbc.writeMem(0x3938, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00ED
        gbc.setState(0xad4d, 0xf3be, 0x4580, 0x74a4, 0xedc, 0x79a4, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf3be, gbc.sp());
        EXPECT(0xad4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad4d));
        EXPECT(0xe0, gbc.readMem(0xad4e));
        // CB E0 00EE
        gbc.setState(0x634b, 0x9f7f, 0x8550, 0x5505, 0xd18d, 0x5e74, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9f7f, gbc.sp());
        EXPECT(0x634d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00EF
        gbc.setState(0xd51a, 0x6e06, 0xf970, 0xdfb5, 0x5148, 0x2ac7, 0x1, 0x1);
        gbc.writeMem(0xd51a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6e06, gbc.sp());
        EXPECT(0xd51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd51a));
        EXPECT(0xe0, gbc.readMem(0xd51b));
        // CB E0 00F0
        gbc.setState(0x5126, 0xb8b7, 0x8190, 0x96c, 0xa4f6, 0xa8dc, 0x0, 0x0);
        gbc.writeMem(0x5126, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb8b7, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00F1
        gbc.setState(0x96f6, 0xafc8, 0xc030, 0xb11b, 0x5b26, 0xd604, 0x0, 0x0);
        gbc.writeMem(0x96f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xafc8, gbc.sp());
        EXPECT(0x96f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f6));
        EXPECT(0xe0, gbc.readMem(0x96f7));
        // CB E0 00F2
        gbc.setState(0x3460, 0xaae7, 0x7a90, 0xdb3e, 0xb102, 0xb1d2, 0x1, 0x0);
        gbc.writeMem(0x3460, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x3462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00F3
        gbc.setState(0x6d7d, 0x7274, 0xfbc0, 0x5b79, 0xb884, 0x36ae, 0x0, 0x0);
        gbc.writeMem(0x6d7d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7274, gbc.sp());
        EXPECT(0x6d7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00F4
        gbc.setState(0x51c2, 0xe831, 0xf670, 0x842c, 0x82c5, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0x51c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe831, gbc.sp());
        EXPECT(0x51c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 00F6
        gbc.setState(0x82fb, 0x3a26, 0x15c0, 0x491a, 0x7a70, 0x76b0, 0x0, 0x0);
        gbc.writeMem(0x82fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3a26, gbc.sp());
        EXPECT(0x82fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fb));
        EXPECT(0xe0, gbc.readMem(0x82fc));
        // CB E0 00F7
        gbc.setState(0x76c3, 0xb012, 0x2820, 0x1752, 0x30be, 0x15d5, 0x1, 0x0);
        gbc.writeMem(0x76c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xb012, gbc.sp());
        EXPECT(0x76c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00F8
        gbc.setState(0xcdd6, 0xd52b, 0x62c0, 0x8c91, 0x4df3, 0x1889, 0x1, 0x0);
        gbc.writeMem(0xcdd6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd52b, gbc.sp());
        EXPECT(0xcdd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd6));
        EXPECT(0xe0, gbc.readMem(0xcdd7));
        // CB E0 00F9
        gbc.setState(0xcf64, 0x85de, 0xb5f0, 0x110f, 0x8c20, 0x829a, 0x1, 0x1);
        gbc.writeMem(0xcf64, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x85de, gbc.sp());
        EXPECT(0xcf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf64));
        EXPECT(0xe0, gbc.readMem(0xcf65));
        // CB E0 00FA
        gbc.setState(0xd02a, 0x5184, 0xed0, 0xb449, 0xfc96, 0x9121, 0x0, 0x0);
        gbc.writeMem(0xd02a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0xd02c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02a));
        EXPECT(0xe0, gbc.readMem(0xd02b));
        // CB E0 00FB
        gbc.setState(0x5c48, 0x23ac, 0xe6e0, 0xfe4f, 0xd0b9, 0x2f59, 0x0, 0x1);
        gbc.writeMem(0x5c48, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x23ac, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00FC
        gbc.setState(0xd20f, 0x6576, 0x2810, 0xc7d3, 0xa8ea, 0x679e, 0x0, 0x0);
        gbc.writeMem(0xd20f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6576, gbc.sp());
        EXPECT(0xd211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20f));
        EXPECT(0xe0, gbc.readMem(0xd210));
        // CB E0 00FD
        gbc.setState(0xb142, 0x24df, 0x30f0, 0x723f, 0x42e, 0xe53a, 0x1, 0x0);
        gbc.writeMem(0xb142, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x24df, gbc.sp());
        EXPECT(0xb144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb142));
        EXPECT(0xe0, gbc.readMem(0xb143));
        // CB E0 00FE
        gbc.setState(0x163c, 0x6b4d, 0x4500, 0x1fe9, 0x9077, 0x6ddf, 0x1, 0x1);
        gbc.writeMem(0x163c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6b4d, gbc.sp());
        EXPECT(0x163e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 00FF
        gbc.setState(0x319a, 0xe8a9, 0xa010, 0xa4f6, 0x79c2, 0x93bf, 0x1, 0x1);
        gbc.writeMem(0x319a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe8a9, gbc.sp());
        EXPECT(0x319c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0100
        gbc.setState(0x4281, 0xca52, 0x33c0, 0x7b27, 0xd5cb, 0xc27a, 0x0, 0x0);
        gbc.writeMem(0x4281, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xca52, gbc.sp());
        EXPECT(0x4283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0101
        gbc.setState(0x6826, 0xacc0, 0x9220, 0xc36, 0xc281, 0x6905, 0x1, 0x1);
        gbc.writeMem(0x6826, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xacc0, gbc.sp());
        EXPECT(0x6828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0102
        gbc.setState(0x31c, 0xbff7, 0xc830, 0xe53e, 0x72e3, 0x9cd4, 0x1, 0x1);
        gbc.writeMem(0x31c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbff7, gbc.sp());
        EXPECT(0x31e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0103
        gbc.setState(0x8050, 0x3413, 0x1550, 0x2086, 0x6f62, 0x2913, 0x0, 0x0);
        gbc.writeMem(0x8050, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3413, gbc.sp());
        EXPECT(0x8052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8050));
        EXPECT(0xe0, gbc.readMem(0x8051));
        // CB E0 0105
        gbc.setState(0x6fa9, 0x725b, 0xb5f0, 0x5619, 0xc41f, 0x3cde, 0x0, 0x1);
        gbc.writeMem(0x6fa9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x725b, gbc.sp());
        EXPECT(0x6fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0106
        gbc.setState(0x9c63, 0xe4a5, 0x4700, 0xd5d9, 0xc985, 0xeb54, 0x1, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe4a5, gbc.sp());
        EXPECT(0x9c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c63));
        EXPECT(0xe0, gbc.readMem(0x9c64));
        // CB E0 0107
        gbc.setState(0x1081, 0xbae7, 0xf300, 0xa6ce, 0x7f5f, 0xc0e4, 0x1, 0x0);
        gbc.writeMem(0x1081, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbae7, gbc.sp());
        EXPECT(0x1083, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0108
        gbc.setState(0x25c9, 0x3c5b, 0x1670, 0xd20f, 0x3417, 0x92bb, 0x0, 0x0);
        gbc.writeMem(0x25c9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c5b, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0109
        gbc.setState(0xc11, 0xc1eb, 0xf450, 0x2c6f, 0xf3be, 0xea20, 0x0, 0x1);
        gbc.writeMem(0xc11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc1eb, gbc.sp());
        EXPECT(0xc13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 010A
        gbc.setState(0x418b, 0x7ed, 0xa9e0, 0x5cea, 0x206e, 0x7676, 0x0, 0x0);
        gbc.writeMem(0x418b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7ed, gbc.sp());
        EXPECT(0x418d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 010B
        gbc.setState(0x2597, 0x4fb0, 0x2280, 0x8493, 0xcad6, 0x8158, 0x0, 0x1);
        gbc.writeMem(0x2597, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4fb0, gbc.sp());
        EXPECT(0x2599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 010C
        gbc.setState(0x9237, 0xb27c, 0x4f40, 0xdf29, 0x69f7, 0x4b23, 0x1, 0x1);
        gbc.writeMem(0x9237, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x9239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9237));
        EXPECT(0xe0, gbc.readMem(0x9238));
        // CB E0 010D
        gbc.setState(0x9b2, 0xa8d0, 0x4db0, 0x6a08, 0x745e, 0xdc3d, 0x0, 0x0);
        gbc.writeMem(0x9b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa8d0, gbc.sp());
        EXPECT(0x9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 010E
        gbc.setState(0x7aca, 0x8141, 0x4810, 0x9610, 0xbc53, 0x4dc8, 0x0, 0x0);
        gbc.writeMem(0x7aca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8141, gbc.sp());
        EXPECT(0x7acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 010F
        gbc.setState(0x7657, 0x80ca, 0x3630, 0xb83b, 0x37b5, 0xbf1a, 0x1, 0x1);
        gbc.writeMem(0x7657, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x7659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0111
        gbc.setState(0x8080, 0xf9d0, 0xa2b0, 0x9257, 0x1340, 0x7894, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf9d0, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8080));
        EXPECT(0xe0, gbc.readMem(0x8081));
        // CB E0 0112
        gbc.setState(0x62b6, 0xe271, 0x9e60, 0x97e1, 0x2143, 0x9f69, 0x0, 0x1);
        gbc.writeMem(0x62b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0x62b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0113
        gbc.setState(0x250a, 0xc493, 0xc640, 0x63e3, 0x5317, 0x8ff1, 0x0, 0x1);
        gbc.writeMem(0x250a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x250c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0114
        gbc.setState(0xad89, 0x3918, 0x5500, 0xa141, 0x1ddd, 0x4e2, 0x1, 0x1);
        gbc.writeMem(0xad89, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3918, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad89));
        EXPECT(0xe0, gbc.readMem(0xad8a));
        // CB E0 0115
        gbc.setState(0x1768, 0xfc1d, 0x46c0, 0xefe2, 0xf7a0, 0xa31b, 0x0, 0x0);
        gbc.writeMem(0x1768, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfc1d, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0116
        gbc.setState(0x9b6b, 0x89fd, 0xb070, 0x1a1b, 0x7805, 0x3e89, 0x1, 0x0);
        gbc.writeMem(0x9b6b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0x9b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6b));
        EXPECT(0xe0, gbc.readMem(0x9b6c));
        // CB E0 0117
        gbc.setState(0xc323, 0x18d7, 0x7510, 0x813e, 0x14ee, 0xb66d, 0x1, 0x1);
        gbc.writeMem(0xc323, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0xe0, gbc.readMem(0xc324));
        // CB E0 0118
        gbc.setState(0x8305, 0xcd6a, 0xa510, 0x731e, 0xed37, 0x9500, 0x1, 0x0);
        gbc.writeMem(0x8305, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8305));
        EXPECT(0xe0, gbc.readMem(0x8306));
        // CB E0 0119
        gbc.setState(0xa994, 0x3460, 0x5710, 0x2e50, 0xc20b, 0xf959, 0x0, 0x0);
        gbc.writeMem(0xa994, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3460, gbc.sp());
        EXPECT(0xa996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa994));
        EXPECT(0xe0, gbc.readMem(0xa995));
        // CB E0 011A
        gbc.setState(0x49e6, 0x24ae, 0xf890, 0x3bf8, 0x4435, 0x41b9, 0x0, 0x1);
        gbc.writeMem(0x49e6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x24ae, gbc.sp());
        EXPECT(0x49e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 011B
        gbc.setState(0x8119, 0xec04, 0xb8f0, 0xe247, 0xab63, 0xb673, 0x1, 0x1);
        gbc.writeMem(0x8119, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xec04, gbc.sp());
        EXPECT(0x811b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8119));
        EXPECT(0xe0, gbc.readMem(0x811a));
        // CB E0 011C
        gbc.setState(0x8f39, 0x3338, 0xc130, 0xca52, 0xa8d6, 0x2e8b, 0x0, 0x0);
        gbc.writeMem(0x8f39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3338, gbc.sp());
        EXPECT(0x8f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f39));
        EXPECT(0xe0, gbc.readMem(0x8f3a));
        // CB E0 011D
        gbc.setState(0xcf3e, 0x4bf6, 0x8f60, 0xf52e, 0x1ea, 0xcec1, 0x1, 0x0);
        gbc.writeMem(0xcf3e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4bf6, gbc.sp());
        EXPECT(0xcf40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf3e));
        EXPECT(0xe0, gbc.readMem(0xcf3f));
        // CB E0 011E
        gbc.setState(0x7d43, 0x4cc5, 0xe6f0, 0x66f8, 0x1383, 0x3f27, 0x1, 0x0);
        gbc.writeMem(0x7d43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4cc5, gbc.sp());
        EXPECT(0x7d45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 011F
        gbc.setState(0x8143, 0x4651, 0x3f0, 0x74de, 0xb4bc, 0x7cf4, 0x0, 0x0);
        gbc.writeMem(0x8143, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4651, gbc.sp());
        EXPECT(0x8145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8143));
        EXPECT(0xe0, gbc.readMem(0x8144));
        // CB E0 0120
        gbc.setState(0x2268, 0x1f3e, 0xb860, 0x984b, 0xeee8, 0x52ca, 0x1, 0x1);
        gbc.writeMem(0x2268, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1f3e, gbc.sp());
        EXPECT(0x226a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0121
        gbc.setState(0x6034, 0x2253, 0x7140, 0xef31, 0xe37e, 0xc597, 0x1, 0x0);
        gbc.writeMem(0x6034, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2253, gbc.sp());
        EXPECT(0x6036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0122
        gbc.setState(0x2d37, 0x6bce, 0x9940, 0xb6cb, 0x8d9f, 0x4471, 0x0, 0x0);
        gbc.writeMem(0x2d37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6bce, gbc.sp());
        EXPECT(0x2d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0123
        gbc.setState(0x8f42, 0x7410, 0xfed0, 0xa03f, 0x85b8, 0x4e3a, 0x0, 0x1);
        gbc.writeMem(0x8f42, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x7410, gbc.sp());
        EXPECT(0x8f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f42));
        EXPECT(0xe0, gbc.readMem(0x8f43));
        // CB E0 0124
        gbc.setState(0x397a, 0x63b0, 0xc2b0, 0x5b09, 0x1087, 0x9be2, 0x0, 0x1);
        gbc.writeMem(0x397a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x63b0, gbc.sp());
        EXPECT(0x397c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0125
        gbc.setState(0x4ce5, 0x5390, 0x98f0, 0x69ab, 0xf881, 0xdf44, 0x1, 0x1);
        gbc.writeMem(0x4ce5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0x4ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0126
        gbc.setState(0xbd2e, 0x1ab8, 0x1640, 0x76e7, 0x1ac7, 0xac95, 0x1, 0x0);
        gbc.writeMem(0xbd2e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1ab8, gbc.sp());
        EXPECT(0xbd30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd2e));
        EXPECT(0xe0, gbc.readMem(0xbd2f));
        // CB E0 0127
        gbc.setState(0xc199, 0xf4a6, 0x93f0, 0xe50c, 0x6632, 0xb778, 0x1, 0x0);
        gbc.writeMem(0xc199, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0xc19b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc199));
        EXPECT(0xe0, gbc.readMem(0xc19a));
        // CB E0 0129
        gbc.setState(0xd58c, 0x4e52, 0xe260, 0xe455, 0x4ea6, 0x3f20, 0x0, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0xd58e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58c));
        EXPECT(0xe0, gbc.readMem(0xd58d));
        // CB E0 012A
        gbc.setState(0x769a, 0x9211, 0xb9f0, 0x8039, 0x5930, 0x4c18, 0x1, 0x1);
        gbc.writeMem(0x769a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9211, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 012B
        gbc.setState(0x3e9c, 0x29b8, 0x2680, 0x8cc, 0xe009, 0x4956, 0x0, 0x0);
        gbc.writeMem(0x3e9c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x29b8, gbc.sp());
        EXPECT(0x3e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 012C
        gbc.setState(0x1976, 0xc8e2, 0x5da0, 0xd7bb, 0x7325, 0x9615, 0x0, 0x1);
        gbc.writeMem(0x1976, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0x1978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 012D
        gbc.setState(0x9f44, 0x3368, 0x7940, 0x7ac2, 0xa620, 0xe917, 0x1, 0x1);
        gbc.writeMem(0x9f44, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0x9f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f44));
        EXPECT(0xe0, gbc.readMem(0x9f45));
        // CB E0 012E
        gbc.setState(0x6c3e, 0xeecb, 0x3340, 0x8d5c, 0xf499, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x6c3e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeecb, gbc.sp());
        EXPECT(0x6c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 012F
        gbc.setState(0xa8de, 0x557d, 0xd2d0, 0xa54a, 0x1c62, 0xa49b, 0x1, 0x1);
        gbc.writeMem(0xa8de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x557d, gbc.sp());
        EXPECT(0xa8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8de));
        EXPECT(0xe0, gbc.readMem(0xa8df));
        // CB E0 0130
        gbc.setState(0xdcee, 0x72b, 0x1390, 0x6e00, 0x98e7, 0xf72a, 0x1, 0x1);
        gbc.writeMem(0xdcee, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x72b, gbc.sp());
        EXPECT(0xdcf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcee));
        EXPECT(0xe0, gbc.readMem(0xdcef));
        // CB E0 0131
        gbc.setState(0x47ad, 0x5a54, 0x8b60, 0xd282, 0xdbd2, 0x59e9, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5a54, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0132
        gbc.setState(0xbaa9, 0xbf68, 0xfa60, 0x39de, 0xa9fc, 0xf389, 0x0, 0x1);
        gbc.writeMem(0xbaa9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbf68, gbc.sp());
        EXPECT(0xbaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa9));
        EXPECT(0xe0, gbc.readMem(0xbaaa));
        // CB E0 0133
        gbc.setState(0x5ff3, 0x5f9b, 0x4620, 0x2c44, 0xcd8f, 0xca77, 0x1, 0x0);
        gbc.writeMem(0x5ff3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5f9b, gbc.sp());
        EXPECT(0x5ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0134
        gbc.setState(0xb18e, 0x56cb, 0x15a0, 0xc25b, 0xd80f, 0x7d23, 0x1, 0x1);
        gbc.writeMem(0xb18e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x56cb, gbc.sp());
        EXPECT(0xb190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18e));
        EXPECT(0xe0, gbc.readMem(0xb18f));
        // CB E0 0135
        gbc.setState(0xa77a, 0x93f9, 0xae80, 0xb497, 0x4bf, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0xa77a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x93f9, gbc.sp());
        EXPECT(0xa77c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77a));
        EXPECT(0xe0, gbc.readMem(0xa77b));
        // CB E0 0136
        gbc.setState(0x2f50, 0x7b01, 0xf9f0, 0xb605, 0x669, 0xb27f, 0x0, 0x0);
        gbc.writeMem(0x2f50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7b01, gbc.sp());
        EXPECT(0x2f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0137
        gbc.setState(0x85e9, 0x3e74, 0x73e0, 0x8d48, 0x9940, 0x65f, 0x0, 0x1);
        gbc.writeMem(0x85e9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3e74, gbc.sp());
        EXPECT(0x85eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e9));
        EXPECT(0xe0, gbc.readMem(0x85ea));
        // CB E0 0138
        gbc.setState(0x52c3, 0x3176, 0x2670, 0x77f, 0x31fd, 0xfd04, 0x1, 0x0);
        gbc.writeMem(0x52c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3176, gbc.sp());
        EXPECT(0x52c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0139
        gbc.setState(0xdddc, 0xf24b, 0x41c0, 0xb4b9, 0x4507, 0x4264, 0x1, 0x1);
        gbc.writeMem(0xdddc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf24b, gbc.sp());
        EXPECT(0xddde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdddc));
        EXPECT(0xe0, gbc.readMem(0xdddd));
        // CB E0 013A
        gbc.setState(0x9d91, 0x562c, 0x7da0, 0xeef1, 0x551c, 0xa60, 0x1, 0x0);
        gbc.writeMem(0x9d91, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x562c, gbc.sp());
        EXPECT(0x9d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d91));
        EXPECT(0xe0, gbc.readMem(0x9d92));
        // CB E0 013B
        gbc.setState(0xbd90, 0xbc45, 0xb9c0, 0x80d0, 0xe0e9, 0x8ac8, 0x1, 0x0);
        gbc.writeMem(0xbd90, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbc45, gbc.sp());
        EXPECT(0xbd92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd90));
        EXPECT(0xe0, gbc.readMem(0xbd91));
        // CB E0 013C
        gbc.setState(0x9422, 0x7b47, 0x43e0, 0x4bc7, 0x6e50, 0xd40a, 0x0, 0x1);
        gbc.writeMem(0x9422, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7b47, gbc.sp());
        EXPECT(0x9424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9422));
        EXPECT(0xe0, gbc.readMem(0x9423));
        // CB E0 013D
        gbc.setState(0x5ba9, 0x8286, 0xf8c0, 0x9bd6, 0xbd40, 0x2c49, 0x1, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8286, gbc.sp());
        EXPECT(0x5bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 013F
        gbc.setState(0x2328, 0x24a0, 0x6980, 0xeeb6, 0xcd55, 0x983b, 0x1, 0x0);
        gbc.writeMem(0x2328, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x24a0, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0140
        gbc.setState(0x4478, 0xd42e, 0x7160, 0x6fb2, 0x1b4e, 0x2c69, 0x1, 0x1);
        gbc.writeMem(0x4478, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0x447a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0143
        gbc.setState(0x6ef, 0x5232, 0x8f0, 0x6690, 0x8cbc, 0xb36f, 0x0, 0x0);
        gbc.writeMem(0x6ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5232, gbc.sp());
        EXPECT(0x6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0144
        gbc.setState(0xaef4, 0x5235, 0x33b0, 0x34c0, 0xb19e, 0x2582, 0x0, 0x1);
        gbc.writeMem(0xaef4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5235, gbc.sp());
        EXPECT(0xaef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef4));
        EXPECT(0xe0, gbc.readMem(0xaef5));
        // CB E0 0145
        gbc.setState(0xa60c, 0x49a9, 0x8130, 0x5dfc, 0x270b, 0x18c1, 0x0, 0x1);
        gbc.writeMem(0xa60c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60c));
        EXPECT(0xe0, gbc.readMem(0xa60d));
        // CB E0 0146
        gbc.setState(0xb791, 0xe104, 0xe870, 0x1b0a, 0xc0ea, 0x3492, 0x1, 0x0);
        gbc.writeMem(0xb791, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe104, gbc.sp());
        EXPECT(0xb793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb791));
        EXPECT(0xe0, gbc.readMem(0xb792));
        // CB E0 0147
        gbc.setState(0x5f81, 0x2233, 0x6880, 0x966e, 0xd79, 0x9adf, 0x0, 0x0);
        gbc.writeMem(0x5f81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2233, gbc.sp());
        EXPECT(0x5f83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0148
        gbc.setState(0x975c, 0x7567, 0xdc40, 0x3c03, 0xcfa7, 0x84c9, 0x1, 0x0);
        gbc.writeMem(0x975c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7567, gbc.sp());
        EXPECT(0x975e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975c));
        EXPECT(0xe0, gbc.readMem(0x975d));
        // CB E0 0149
        gbc.setState(0x9bd, 0x7718, 0x5480, 0x7d8a, 0xf055, 0x5da, 0x0, 0x0);
        gbc.writeMem(0x9bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0x9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 014A
        gbc.setState(0x5ca4, 0xee18, 0x9090, 0x6ccb, 0xdaac, 0x534b, 0x1, 0x1);
        gbc.writeMem(0x5ca4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xee18, gbc.sp());
        EXPECT(0x5ca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 014B
        gbc.setState(0x1f4d, 0x8a87, 0x7880, 0x5695, 0x127, 0xfed, 0x1, 0x1);
        gbc.writeMem(0x1f4d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8a87, gbc.sp());
        EXPECT(0x1f4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 014C
        gbc.setState(0x22e5, 0x3cdf, 0xdf0, 0xb6b9, 0x90dc, 0xab94, 0x1, 0x1);
        gbc.writeMem(0x22e5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0x22e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 014D
        gbc.setState(0x6f23, 0x720d, 0xb470, 0x9789, 0xbbd7, 0xaa5d, 0x1, 0x0);
        gbc.writeMem(0x6f23, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x720d, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 014E
        gbc.setState(0xe0f0, 0x6dfd, 0x2700, 0x1f3d, 0x95d4, 0xaeef, 0x1, 0x1);
        gbc.writeMem(0xe0f0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6dfd, gbc.sp());
        EXPECT(0xe0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f0));
        EXPECT(0xe0, gbc.readMem(0xe0f1));
        // CB E0 014F
        gbc.setState(0x5c6c, 0x3c08, 0x1750, 0x87dc, 0xe188, 0x89dc, 0x1, 0x1);
        gbc.writeMem(0x5c6c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0x5c6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0150
        gbc.setState(0x3ae6, 0x256b, 0x55d0, 0x3a40, 0x8dae, 0x8f9e, 0x0, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x256b, gbc.sp());
        EXPECT(0x3ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0151
        gbc.setState(0xaa9f, 0xb851, 0x94b0, 0xa2d3, 0x73e8, 0xe5cc, 0x0, 0x1);
        gbc.writeMem(0xaa9f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9f));
        EXPECT(0xe0, gbc.readMem(0xaaa0));
        // CB E0 0152
        gbc.setState(0x1008, 0x74e5, 0x9b80, 0x43ab, 0xcf64, 0xbaa4, 0x1, 0x1);
        gbc.writeMem(0x1008, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x74e5, gbc.sp());
        EXPECT(0x100a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0154
        gbc.setState(0x10a3, 0x676e, 0xced0, 0xce35, 0xf79f, 0x86dd, 0x1, 0x0);
        gbc.writeMem(0x10a3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0x10a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0156
        gbc.setState(0xd9fd, 0xd002, 0xa970, 0x38ae, 0xaa31, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0xd9fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd002, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9fd));
        EXPECT(0xe0, gbc.readMem(0xd9fe));
        // CB E0 0157
        gbc.setState(0xd5ed, 0xcf6a, 0x1430, 0x5b32, 0x1dce, 0x2570, 0x0, 0x0);
        gbc.writeMem(0xd5ed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xd5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ed));
        EXPECT(0xe0, gbc.readMem(0xd5ee));
        // CB E0 0158
        gbc.setState(0x858c, 0x4f8c, 0x2b0, 0xe4f2, 0x399b, 0x56a3, 0x0, 0x1);
        gbc.writeMem(0x858c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4f8c, gbc.sp());
        EXPECT(0x858e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858c));
        EXPECT(0xe0, gbc.readMem(0x858d));
        // CB E0 0159
        gbc.setState(0x3c88, 0xad99, 0x60f0, 0x1775, 0xde8, 0xf948, 0x0, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xad99, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 015A
        gbc.setState(0x2737, 0xc007, 0xfa40, 0xc36f, 0x7766, 0xd350, 0x1, 0x1);
        gbc.writeMem(0x2737, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc007, gbc.sp());
        EXPECT(0x2739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 015B
        gbc.setState(0x6f37, 0xa925, 0xb8a0, 0xfec7, 0xd3a9, 0x9557, 0x0, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 015C
        gbc.setState(0xd234, 0x6830, 0xdb80, 0x14a7, 0x3c97, 0xda80, 0x0, 0x1);
        gbc.writeMem(0xd234, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6830, gbc.sp());
        EXPECT(0xd236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd234));
        EXPECT(0xe0, gbc.readMem(0xd235));
        // CB E0 015D
        gbc.setState(0xa8b3, 0x37da, 0x8e00, 0x2ac5, 0x22b8, 0xd68, 0x0, 0x0);
        gbc.writeMem(0xa8b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x37da, gbc.sp());
        EXPECT(0xa8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8b3));
        EXPECT(0xe0, gbc.readMem(0xa8b4));
        // CB E0 015E
        gbc.setState(0xa64b, 0xa594, 0x92c0, 0x6a4a, 0x80c0, 0xf222, 0x1, 0x1);
        gbc.writeMem(0xa64b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa594, gbc.sp());
        EXPECT(0xa64d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64b));
        EXPECT(0xe0, gbc.readMem(0xa64c));
        // CB E0 015F
        gbc.setState(0x1ccf, 0x6d8, 0x770, 0xfa3f, 0xdb82, 0x7566, 0x0, 0x0);
        gbc.writeMem(0x1ccf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x1cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0160
        gbc.setState(0x532c, 0xd1d5, 0xfa0, 0x60fa, 0xa83c, 0xeee2, 0x1, 0x0);
        gbc.writeMem(0x532c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd1d5, gbc.sp());
        EXPECT(0x532e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0161
        gbc.setState(0x6e28, 0x6d49, 0x5e80, 0x5f0b, 0x5c29, 0x6294, 0x1, 0x1);
        gbc.writeMem(0x6e28, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6d49, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0162
        gbc.setState(0xaaa8, 0x2fd4, 0xe650, 0x5b0d, 0x2856, 0x303d, 0x1, 0x0);
        gbc.writeMem(0xaaa8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2fd4, gbc.sp());
        EXPECT(0xaaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa8));
        EXPECT(0xe0, gbc.readMem(0xaaa9));
        // CB E0 0163
        gbc.setState(0xaeb, 0xdfc4, 0x3230, 0x3c0f, 0xd416, 0xb463, 0x1, 0x1);
        gbc.writeMem(0xaeb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xdfc4, gbc.sp());
        EXPECT(0xaed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0164
        gbc.setState(0xeaff, 0x7592, 0x2d00, 0xe8e7, 0xb847, 0x4286, 0x0, 0x0);
        gbc.writeMem(0xeaff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7592, gbc.sp());
        EXPECT(0xeb01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaff));
        EXPECT(0xe0, gbc.readMem(0xeb00));
        // CB E0 0165
        gbc.setState(0x1200, 0x20ab, 0xaaf0, 0xfb7a, 0xc457, 0x5797, 0x0, 0x0);
        gbc.writeMem(0x1200, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0166
        gbc.setState(0x656b, 0x588, 0x22f0, 0x8631, 0x392d, 0xa092, 0x0, 0x1);
        gbc.writeMem(0x656b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x588, gbc.sp());
        EXPECT(0x656d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0167
        gbc.setState(0x36d5, 0x9f25, 0x63d0, 0x8d9d, 0x7f2c, 0xf222, 0x0, 0x1);
        gbc.writeMem(0x36d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9f25, gbc.sp());
        EXPECT(0x36d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0168
        gbc.setState(0xca1f, 0xdec7, 0x2080, 0xbf27, 0xe086, 0x6345, 0x1, 0x1);
        gbc.writeMem(0xca1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdec7, gbc.sp());
        EXPECT(0xca21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca1f));
        EXPECT(0xe0, gbc.readMem(0xca20));
        // CB E0 0169
        gbc.setState(0xd803, 0xe156, 0xd4d0, 0xcff5, 0x25e2, 0x5342, 0x1, 0x1);
        gbc.writeMem(0xd803, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe156, gbc.sp());
        EXPECT(0xd805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd803));
        EXPECT(0xe0, gbc.readMem(0xd804));
        // CB E0 016A
        gbc.setState(0xc675, 0x701e, 0x270, 0x3181, 0x392d, 0x807b, 0x1, 0x1);
        gbc.writeMem(0xc675, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x701e, gbc.sp());
        EXPECT(0xc677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc675));
        EXPECT(0xe0, gbc.readMem(0xc676));
        // CB E0 016B
        gbc.setState(0x6829, 0xabc0, 0xf8b0, 0x771e, 0x3780, 0x2dd7, 0x1, 0x1);
        gbc.writeMem(0x6829, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xabc0, gbc.sp());
        EXPECT(0x682b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 016C
        gbc.setState(0xae53, 0x3717, 0x3ca0, 0xa546, 0x60, 0xaf68, 0x1, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3717, gbc.sp());
        EXPECT(0xae55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae53));
        EXPECT(0xe0, gbc.readMem(0xae54));
        // CB E0 016D
        gbc.setState(0x9096, 0xe4f8, 0x2160, 0x9cac, 0x228c, 0xa673, 0x1, 0x1);
        gbc.writeMem(0x9096, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe4f8, gbc.sp());
        EXPECT(0x9098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9096));
        EXPECT(0xe0, gbc.readMem(0x9097));
        // CB E0 016E
        gbc.setState(0xfb0, 0xe8bd, 0x5f40, 0xc2e1, 0xbe36, 0x1ea5, 0x0, 0x1);
        gbc.writeMem(0xfb0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe8bd, gbc.sp());
        EXPECT(0xfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 016F
        gbc.setState(0x99d7, 0x6e4f, 0xa400, 0x29e3, 0xeb5d, 0xaec9, 0x0, 0x0);
        gbc.writeMem(0x99d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6e4f, gbc.sp());
        EXPECT(0x99d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d7));
        EXPECT(0xe0, gbc.readMem(0x99d8));
        // CB E0 0170
        gbc.setState(0xb5c5, 0x1998, 0xd670, 0x6799, 0x4c0c, 0xe849, 0x1, 0x1);
        gbc.writeMem(0xb5c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1998, gbc.sp());
        EXPECT(0xb5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c5));
        EXPECT(0xe0, gbc.readMem(0xb5c6));
        // CB E0 0171
        gbc.setState(0x2c5a, 0x5871, 0xc60, 0xfc51, 0x6a53, 0x698e, 0x1, 0x0);
        gbc.writeMem(0x2c5a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0172
        gbc.setState(0x7c2b, 0xa0ec, 0x4a80, 0x4cff, 0x6e97, 0x7460, 0x1, 0x0);
        gbc.writeMem(0x7c2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0x7c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0173
        gbc.setState(0x5494, 0xff3, 0x9bb0, 0xaafa, 0x1cec, 0x2d9f, 0x0, 0x0);
        gbc.writeMem(0x5494, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0x5496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0174
        gbc.setState(0x466d, 0xa76e, 0x8540, 0x2cad, 0x858e, 0x1cd7, 0x1, 0x1);
        gbc.writeMem(0x466d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa76e, gbc.sp());
        EXPECT(0x466f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0175
        gbc.setState(0x4c50, 0xc4c2, 0x650, 0x5eb2, 0x8223, 0xcb9e, 0x0, 0x1);
        gbc.writeMem(0x4c50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc4c2, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0176
        gbc.setState(0xd457, 0xd5cb, 0x6c40, 0x9000, 0xb0b0, 0x2170, 0x0, 0x1);
        gbc.writeMem(0xd457, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd5cb, gbc.sp());
        EXPECT(0xd459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd457));
        EXPECT(0xe0, gbc.readMem(0xd458));
        // CB E0 0177
        gbc.setState(0xa489, 0x3702, 0xcc90, 0x4f02, 0x13e8, 0xd0c9, 0x0, 0x1);
        gbc.writeMem(0xa489, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xa48b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa489));
        EXPECT(0xe0, gbc.readMem(0xa48a));
        // CB E0 0178
        gbc.setState(0xa038, 0xb09d, 0xb100, 0x5a84, 0x5e79, 0xd557, 0x0, 0x0);
        gbc.writeMem(0xa038, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb09d, gbc.sp());
        EXPECT(0xa03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa038));
        EXPECT(0xe0, gbc.readMem(0xa039));
        // CB E0 0179
        gbc.setState(0xb4a4, 0x1236, 0x4db0, 0xd0a3, 0xdab1, 0xd9d9, 0x0, 0x0);
        gbc.writeMem(0xb4a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1236, gbc.sp());
        EXPECT(0xb4a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a4));
        EXPECT(0xe0, gbc.readMem(0xb4a5));
        // CB E0 017A
        gbc.setState(0x7449, 0xf65e, 0x1ea0, 0x4b2c, 0xfaaa, 0xf3d0, 0x1, 0x0);
        gbc.writeMem(0x7449, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf65e, gbc.sp());
        EXPECT(0x744b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 017B
        gbc.setState(0xed83, 0xc872, 0xfd90, 0x5967, 0x2905, 0xfd89, 0x0, 0x1);
        gbc.writeMem(0xed83, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0xed85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed83));
        EXPECT(0xe0, gbc.readMem(0xed84));
        // CB E0 017C
        gbc.setState(0xd37b, 0x6faa, 0x2580, 0x1682, 0x89f5, 0x7065, 0x0, 0x1);
        gbc.writeMem(0xd37b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6faa, gbc.sp());
        EXPECT(0xd37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37b));
        EXPECT(0xe0, gbc.readMem(0xd37c));
        // CB E0 017D
        gbc.setState(0xd38d, 0x63d6, 0x5970, 0x930d, 0x5571, 0x1525, 0x0, 0x1);
        gbc.writeMem(0xd38d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x63d6, gbc.sp());
        EXPECT(0xd38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd38d));
        EXPECT(0xe0, gbc.readMem(0xd38e));
        // CB E0 017E
        gbc.setState(0x582a, 0x430d, 0x39d0, 0xe3d5, 0x97a, 0x9017, 0x1, 0x1);
        gbc.writeMem(0x582a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0x582c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 017F
        gbc.setState(0xa501, 0x7cd2, 0x3100, 0x7705, 0x92d9, 0xe66e, 0x0, 0x1);
        gbc.writeMem(0xa501, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0xa503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa501));
        EXPECT(0xe0, gbc.readMem(0xa502));
        // CB E0 0180
        gbc.setState(0x1806, 0xe5eb, 0xf230, 0x9bff, 0x4c89, 0xf187, 0x1, 0x0);
        gbc.writeMem(0x1806, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe5eb, gbc.sp());
        EXPECT(0x1808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0181
        gbc.setState(0x1a45, 0xc96c, 0x2650, 0x9bc9, 0x4ab1, 0xcdf0, 0x0, 0x1);
        gbc.writeMem(0x1a45, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc96c, gbc.sp());
        EXPECT(0x1a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0182
        gbc.setState(0x4892, 0xb8aa, 0xe3f0, 0xe8c4, 0xa71c, 0xed38, 0x0, 0x0);
        gbc.writeMem(0x4892, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb8aa, gbc.sp());
        EXPECT(0x4894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0183
        gbc.setState(0xd494, 0x6bc3, 0xe780, 0xf18b, 0x195b, 0x7441, 0x0, 0x1);
        gbc.writeMem(0xd494, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0xd496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd494));
        EXPECT(0xe0, gbc.readMem(0xd495));
        // CB E0 0184
        gbc.setState(0xdae5, 0x5e7, 0xdaa0, 0xca46, 0xcc15, 0xdeab, 0x1, 0x0);
        gbc.writeMem(0xdae5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5e7, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae5));
        EXPECT(0xe0, gbc.readMem(0xdae6));
        // CB E0 0185
        gbc.setState(0xd88e, 0x8d8d, 0x6600, 0x79bf, 0x99bc, 0x3a5, 0x1, 0x0);
        gbc.writeMem(0xd88e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8d8d, gbc.sp());
        EXPECT(0xd890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88e));
        EXPECT(0xe0, gbc.readMem(0xd88f));
        // CB E0 0186
        gbc.setState(0x162b, 0xe3b2, 0xc180, 0xe6e2, 0xcf38, 0xa2bc, 0x0, 0x1);
        gbc.writeMem(0x162b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe3b2, gbc.sp());
        EXPECT(0x162d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0188
        gbc.setState(0xa92f, 0x9be6, 0xbd80, 0xbb4d, 0x869d, 0x27f3, 0x0, 0x0);
        gbc.writeMem(0xa92f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9be6, gbc.sp());
        EXPECT(0xa931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92f));
        EXPECT(0xe0, gbc.readMem(0xa930));
        // CB E0 0189
        gbc.setState(0xb1b9, 0xd5d1, 0x8be0, 0xac74, 0x612, 0xbe2, 0x1, 0x1);
        gbc.writeMem(0xb1b9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd5d1, gbc.sp());
        EXPECT(0xb1bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1b9));
        EXPECT(0xe0, gbc.readMem(0xb1ba));
        // CB E0 018A
        gbc.setState(0xc6a6, 0x2f91, 0x2110, 0xbdca, 0xf7ab, 0xcd54, 0x0, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2f91, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a6));
        EXPECT(0xe0, gbc.readMem(0xc6a7));
        // CB E0 018B
        gbc.setState(0x400f, 0xe603, 0x250, 0x4bab, 0x88d3, 0x6026, 0x1, 0x1);
        gbc.writeMem(0x400f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe603, gbc.sp());
        EXPECT(0x4011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 018C
        gbc.setState(0x81fd, 0x17ca, 0x7430, 0xac72, 0xd445, 0xd267, 0x1, 0x0);
        gbc.writeMem(0x81fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x17ca, gbc.sp());
        EXPECT(0x81ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81fd));
        EXPECT(0xe0, gbc.readMem(0x81fe));
        // CB E0 018D
        gbc.setState(0x64e7, 0x954b, 0xea90, 0xe04f, 0xd82b, 0xdd32, 0x0, 0x1);
        gbc.writeMem(0x64e7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x954b, gbc.sp());
        EXPECT(0x64e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 018E
        gbc.setState(0xf0b, 0xc85d, 0x470, 0x8c82, 0xb6b2, 0x6874, 0x1, 0x0);
        gbc.writeMem(0xf0b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc85d, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 018F
        gbc.setState(0x5003, 0x1ebd, 0x36d0, 0x4393, 0x6684, 0x1d84, 0x0, 0x0);
        gbc.writeMem(0x5003, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ebd, gbc.sp());
        EXPECT(0x5005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0190
        gbc.setState(0x8ddd, 0xd3e5, 0x9c60, 0x9ab3, 0x2707, 0xc2ec, 0x0, 0x0);
        gbc.writeMem(0x8ddd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd3e5, gbc.sp());
        EXPECT(0x8ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ddd));
        EXPECT(0xe0, gbc.readMem(0x8dde));
        // CB E0 0192
        gbc.setState(0xd21c, 0x3ec6, 0x7fa0, 0xc70d, 0xd8b4, 0xe15, 0x0, 0x1);
        gbc.writeMem(0xd21c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0xd21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21c));
        EXPECT(0xe0, gbc.readMem(0xd21d));
        // CB E0 0193
        gbc.setState(0xd815, 0xe329, 0xc9d0, 0xe7f0, 0xa1a7, 0x8909, 0x1, 0x1);
        gbc.writeMem(0xd815, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe329, gbc.sp());
        EXPECT(0xd817, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd815));
        EXPECT(0xe0, gbc.readMem(0xd816));
        // CB E0 0194
        gbc.setState(0xd806, 0x2543, 0xfbf0, 0xe849, 0x7b9f, 0x5249, 0x1, 0x0);
        gbc.writeMem(0xd806, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2543, gbc.sp());
        EXPECT(0xd808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd806));
        EXPECT(0xe0, gbc.readMem(0xd807));
        // CB E0 0195
        gbc.setState(0x18c6, 0xe657, 0xd5b0, 0x859a, 0xf98d, 0xc56c, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe657, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0196
        gbc.setState(0x55c8, 0x2fb2, 0xa470, 0x3271, 0x6e63, 0x9913, 0x0, 0x0);
        gbc.writeMem(0x55c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2fb2, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0197
        gbc.setState(0xdebd, 0xd35d, 0x8fc0, 0xf935, 0x1c65, 0x9381, 0x0, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd35d, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebd));
        EXPECT(0xe0, gbc.readMem(0xdebe));
        // CB E0 0198
        gbc.setState(0x8128, 0xbcb2, 0x2fe0, 0x8b52, 0x51b1, 0x5343, 0x0, 0x1);
        gbc.writeMem(0x8128, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xbcb2, gbc.sp());
        EXPECT(0x812a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8128));
        EXPECT(0xe0, gbc.readMem(0x8129));
        // CB E0 0199
        gbc.setState(0xcdd4, 0x593e, 0x36b0, 0xf21f, 0xb390, 0xb584, 0x1, 0x0);
        gbc.writeMem(0xcdd4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x593e, gbc.sp());
        EXPECT(0xcdd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd4));
        EXPECT(0xe0, gbc.readMem(0xcdd5));
        // CB E0 019A
        gbc.setState(0xc50f, 0x6402, 0x1ed0, 0x36c1, 0x5dd1, 0x159d, 0x0, 0x0);
        gbc.writeMem(0xc50f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6402, gbc.sp());
        EXPECT(0xc511, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50f));
        EXPECT(0xe0, gbc.readMem(0xc510));
        // CB E0 019B
        gbc.setState(0xe974, 0xd2f9, 0xb3e0, 0xac67, 0x4c07, 0x9280, 0x1, 0x0);
        gbc.writeMem(0xe974, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd2f9, gbc.sp());
        EXPECT(0xe976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe974));
        EXPECT(0xe0, gbc.readMem(0xe975));
        // CB E0 019C
        gbc.setState(0x28e2, 0x28d4, 0x7ae0, 0xaba7, 0x89fd, 0x31c1, 0x0, 0x0);
        gbc.writeMem(0x28e2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x28d4, gbc.sp());
        EXPECT(0x28e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 019D
        gbc.setState(0x2a1a, 0xcb6f, 0xe9e0, 0x52aa, 0x4f2, 0x1673, 0x1, 0x0);
        gbc.writeMem(0x2a1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xcb6f, gbc.sp());
        EXPECT(0x2a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 019E
        gbc.setState(0x3600, 0x9c1, 0x83f0, 0x4d1, 0x9db5, 0x9dce, 0x0, 0x0);
        gbc.writeMem(0x3600, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x3602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 019F
        gbc.setState(0x5cc7, 0x7f4a, 0x5620, 0xb22e, 0xccf6, 0x8604, 0x0, 0x0);
        gbc.writeMem(0x5cc7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7f4a, gbc.sp());
        EXPECT(0x5cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01A0
        gbc.setState(0xa47e, 0xf910, 0x9ac0, 0x5177, 0xf379, 0xcb35, 0x1, 0x1);
        gbc.writeMem(0xa47e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0xa480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47e));
        EXPECT(0xe0, gbc.readMem(0xa47f));
        // CB E0 01A1
        gbc.setState(0x2dbd, 0x78f7, 0xb680, 0x926c, 0x7e02, 0x4c37, 0x0, 0x0);
        gbc.writeMem(0x2dbd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x78f7, gbc.sp());
        EXPECT(0x2dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01A2
        gbc.setState(0xca76, 0x1788, 0xc220, 0xc1e2, 0xdca5, 0x9e7c, 0x0, 0x1);
        gbc.writeMem(0xca76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1788, gbc.sp());
        EXPECT(0xca78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca76));
        EXPECT(0xe0, gbc.readMem(0xca77));
        // CB E0 01A3
        gbc.setState(0xbd37, 0x35e5, 0xf540, 0x2c53, 0x448e, 0x26cd, 0x1, 0x0);
        gbc.writeMem(0xbd37, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x35e5, gbc.sp());
        EXPECT(0xbd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd37));
        EXPECT(0xe0, gbc.readMem(0xbd38));
        // CB E0 01A4
        gbc.setState(0x6c67, 0x19df, 0xb9e0, 0xe54c, 0x4c9, 0xae2, 0x1, 0x0);
        gbc.writeMem(0x6c67, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x19df, gbc.sp());
        EXPECT(0x6c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01A5
        gbc.setState(0x3ccf, 0xbd6, 0xedd0, 0x35cf, 0x53f4, 0x29b8, 0x1, 0x1);
        gbc.writeMem(0x3ccf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbd6, gbc.sp());
        EXPECT(0x3cd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01A6
        gbc.setState(0x4caa, 0x25a7, 0x93c0, 0xaded, 0x399, 0x5004, 0x0, 0x0);
        gbc.writeMem(0x4caa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x25a7, gbc.sp());
        EXPECT(0x4cac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01A7
        gbc.setState(0x27c5, 0xb45e, 0x9700, 0xf881, 0x9776, 0x7cc4, 0x1, 0x0);
        gbc.writeMem(0x27c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb45e, gbc.sp());
        EXPECT(0x27c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01AA
        gbc.setState(0x5f11, 0x2220, 0x8ad0, 0xbade, 0xd46, 0x40ad, 0x0, 0x0);
        gbc.writeMem(0x5f11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2220, gbc.sp());
        EXPECT(0x5f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01AB
        gbc.setState(0x8a78, 0x1cf4, 0x2480, 0x1753, 0xea40, 0x4e27, 0x1, 0x1);
        gbc.writeMem(0x8a78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1cf4, gbc.sp());
        EXPECT(0x8a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a78));
        EXPECT(0xe0, gbc.readMem(0x8a79));
        // CB E0 01AC
        gbc.setState(0x83b, 0x253e, 0x7740, 0xabdb, 0x9ef2, 0xbf53, 0x0, 0x1);
        gbc.writeMem(0x83b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x253e, gbc.sp());
        EXPECT(0x83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01AE
        gbc.setState(0x2375, 0x535b, 0xbc70, 0xe46c, 0xf743, 0xa99c, 0x1, 0x0);
        gbc.writeMem(0x2375, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x535b, gbc.sp());
        EXPECT(0x2377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01AF
        gbc.setState(0xc30b, 0xa224, 0x8ec0, 0x788f, 0x9ae6, 0xb733, 0x1, 0x1);
        gbc.writeMem(0xc30b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa224, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc30b));
        EXPECT(0xe0, gbc.readMem(0xc30c));
        // CB E0 01B0
        gbc.setState(0x412e, 0xcb3, 0x1fb0, 0xabec, 0x407c, 0xfa4f, 0x0, 0x0);
        gbc.writeMem(0x412e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcb3, gbc.sp());
        EXPECT(0x4130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01B1
        gbc.setState(0x4c63, 0x42aa, 0x1c30, 0x525, 0xad11, 0x8512, 0x1, 0x0);
        gbc.writeMem(0x4c63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x42aa, gbc.sp());
        EXPECT(0x4c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01B2
        gbc.setState(0x8a39, 0xf08d, 0xce20, 0xc70c, 0x2467, 0x76bb, 0x0, 0x0);
        gbc.writeMem(0x8a39, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xf08d, gbc.sp());
        EXPECT(0x8a3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a39));
        EXPECT(0xe0, gbc.readMem(0x8a3a));
        // CB E0 01B3
        gbc.setState(0x2484, 0x9696, 0x3f90, 0x1f40, 0xee59, 0xf975, 0x0, 0x0);
        gbc.writeMem(0x2484, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9696, gbc.sp());
        EXPECT(0x2486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01B4
        gbc.setState(0xe8f8, 0x221b, 0x810, 0x84cf, 0x7ca4, 0xa445, 0x1, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x221b, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0xe0, gbc.readMem(0xe8f9));
        // CB E0 01B6
        gbc.setState(0x46ae, 0x9298, 0xe580, 0x5bed, 0xb642, 0x9e7f, 0x1, 0x1);
        gbc.writeMem(0x46ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9298, gbc.sp());
        EXPECT(0x46b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01B7
        gbc.setState(0x3c15, 0xde6f, 0x5c40, 0x33d1, 0x5ac2, 0x70ef, 0x0, 0x0);
        gbc.writeMem(0x3c15, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xde6f, gbc.sp());
        EXPECT(0x3c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01B8
        gbc.setState(0xcfd0, 0x1b22, 0x14a0, 0xfcb8, 0xfe1f, 0x760c, 0x1, 0x1);
        gbc.writeMem(0xcfd0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1b22, gbc.sp());
        EXPECT(0xcfd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd0));
        EXPECT(0xe0, gbc.readMem(0xcfd1));
        // CB E0 01B9
        gbc.setState(0x177, 0xe93c, 0x1a50, 0x5403, 0x5eb9, 0xa5a1, 0x0, 0x1);
        gbc.writeMem(0x177, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe93c, gbc.sp());
        EXPECT(0x179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01BA
        gbc.setState(0xe1f9, 0x4566, 0x9ce0, 0xc0ab, 0xb017, 0x64c4, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0xe0, gbc.readMem(0xe1fa));
        // CB E0 01BB
        gbc.setState(0x117f, 0xc7f8, 0x4c50, 0x7523, 0x48fb, 0xb679, 0x0, 0x1);
        gbc.writeMem(0x117f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0x1181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01BC
        gbc.setState(0xdf55, 0x8a8c, 0xf180, 0xbdc3, 0x1f58, 0xd039, 0x1, 0x1);
        gbc.writeMem(0xdf55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8a8c, gbc.sp());
        EXPECT(0xdf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf55));
        EXPECT(0xe0, gbc.readMem(0xdf56));
        // CB E0 01BD
        gbc.setState(0xa940, 0x6453, 0xcc80, 0x7020, 0x9847, 0x3dfa, 0x0, 0x1);
        gbc.writeMem(0xa940, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0xa942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa940));
        EXPECT(0xe0, gbc.readMem(0xa941));
        // CB E0 01BE
        gbc.setState(0x78fd, 0x74cd, 0x1c60, 0x69ff, 0x82d7, 0x845d, 0x0, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x74cd, gbc.sp());
        EXPECT(0x78ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01BF
        gbc.setState(0xc761, 0xfbeb, 0xf450, 0xd125, 0xbb70, 0xe5a, 0x1, 0x0);
        gbc.writeMem(0xc761, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfbeb, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc761));
        EXPECT(0xe0, gbc.readMem(0xc762));
        // CB E0 01C0
        gbc.setState(0x6e81, 0x3fa6, 0x2b50, 0x6a2b, 0x167e, 0x3ede, 0x0, 0x0);
        gbc.writeMem(0x6e81, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3fa6, gbc.sp());
        EXPECT(0x6e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01C1
        gbc.setState(0x59be, 0x9acb, 0x8050, 0x8f4c, 0x28c2, 0x6081, 0x0, 0x0);
        gbc.writeMem(0x59be, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9acb, gbc.sp());
        EXPECT(0x59c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01C2
        gbc.setState(0x1a1f, 0xa141, 0xd5f0, 0xdec4, 0x95c3, 0x97b4, 0x0, 0x1);
        gbc.writeMem(0x1a1f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa141, gbc.sp());
        EXPECT(0x1a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01C3
        gbc.setState(0x1a34, 0xdc9e, 0xa590, 0x2af8, 0x8d68, 0xbf7b, 0x0, 0x0);
        gbc.writeMem(0x1a34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xdc9e, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01C4
        gbc.setState(0x5188, 0x8f8b, 0xd120, 0x8a1a, 0xc7e9, 0xd0a1, 0x1, 0x0);
        gbc.writeMem(0x5188, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8f8b, gbc.sp());
        EXPECT(0x518a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01C5
        gbc.setState(0x33aa, 0x4a2, 0x9870, 0x421c, 0x8125, 0x939d, 0x1, 0x1);
        gbc.writeMem(0x33aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4a2, gbc.sp());
        EXPECT(0x33ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01C6
        gbc.setState(0xe28e, 0xb6e9, 0x63a0, 0x9cce, 0xcd25, 0x7e18, 0x0, 0x1);
        gbc.writeMem(0xe28e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb6e9, gbc.sp());
        EXPECT(0xe290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe28e));
        EXPECT(0xe0, gbc.readMem(0xe28f));
        // CB E0 01C7
        gbc.setState(0x8623, 0x84c8, 0x6480, 0x55e1, 0x1a59, 0x8f64, 0x0, 0x1);
        gbc.writeMem(0x8623, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x84c8, gbc.sp());
        EXPECT(0x8625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8623));
        EXPECT(0xe0, gbc.readMem(0x8624));
        // CB E0 01C8
        gbc.setState(0xbf97, 0x4a2b, 0x8bd0, 0x3c2a, 0x9e2b, 0x5730, 0x1, 0x1);
        gbc.writeMem(0xbf97, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0xbf99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf97));
        EXPECT(0xe0, gbc.readMem(0xbf98));
        // CB E0 01C9
        gbc.setState(0x5777, 0xc58c, 0xa5f0, 0xce81, 0xc769, 0xd650, 0x1, 0x1);
        gbc.writeMem(0x5777, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc58c, gbc.sp());
        EXPECT(0x5779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01CA
        gbc.setState(0x479b, 0xa0e6, 0x62d0, 0x15f8, 0x4074, 0xfa1e, 0x1, 0x1);
        gbc.writeMem(0x479b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa0e6, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01CB
        gbc.setState(0x8d55, 0x5168, 0x2e90, 0x37bd, 0xaa01, 0x5f5, 0x1, 0x1);
        gbc.writeMem(0x8d55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d55));
        EXPECT(0xe0, gbc.readMem(0x8d56));
        // CB E0 01CC
        gbc.setState(0x244d, 0x7706, 0xa6f0, 0x5ce3, 0xac7b, 0xb194, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7706, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01CD
        gbc.setState(0x82e8, 0xf057, 0x7410, 0x630, 0xd272, 0x1ab2, 0x0, 0x1);
        gbc.writeMem(0x82e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf057, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e8));
        EXPECT(0xe0, gbc.readMem(0x82e9));
        // CB E0 01CE
        gbc.setState(0x1e0d, 0x4952, 0x1740, 0x8b5e, 0xa3ae, 0x5078, 0x1, 0x1);
        gbc.writeMem(0x1e0d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4952, gbc.sp());
        EXPECT(0x1e0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01CF
        gbc.setState(0x67f, 0x8cee, 0x73d0, 0xa853, 0x4b46, 0xd45a, 0x0, 0x0);
        gbc.writeMem(0x67f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8cee, gbc.sp());
        EXPECT(0x681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01D0
        gbc.setState(0x494a, 0x34f3, 0x9e20, 0xac04, 0xe92b, 0x84f, 0x1, 0x1);
        gbc.writeMem(0x494a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x34f3, gbc.sp());
        EXPECT(0x494c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01D1
        gbc.setState(0xe9f4, 0x49e7, 0xaf90, 0x1c5a, 0xfe18, 0x5ac7, 0x0, 0x1);
        gbc.writeMem(0xe9f4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x49e7, gbc.sp());
        EXPECT(0xe9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f4));
        EXPECT(0xe0, gbc.readMem(0xe9f5));
        // CB E0 01D2
        gbc.setState(0x1185, 0x9a2c, 0x1db0, 0xb0f6, 0x62b5, 0x8d49, 0x1, 0x1);
        gbc.writeMem(0x1185, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x1187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01D3
        gbc.setState(0x8d09, 0x67d8, 0x9410, 0x3c49, 0xef80, 0x404d, 0x0, 0x0);
        gbc.writeMem(0x8d09, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x67d8, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d09));
        EXPECT(0xe0, gbc.readMem(0x8d0a));
        // CB E0 01D4
        gbc.setState(0x81ca, 0xe8e8, 0x5590, 0xcd8c, 0x756d, 0x817e, 0x0, 0x1);
        gbc.writeMem(0x81ca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0x81cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ca));
        EXPECT(0xe0, gbc.readMem(0x81cb));
        // CB E0 01D5
        gbc.setState(0xdc31, 0xf72a, 0x9980, 0xa01c, 0xf1dd, 0x2885, 0x1, 0x1);
        gbc.writeMem(0xdc31, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf72a, gbc.sp());
        EXPECT(0xdc33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc31));
        EXPECT(0xe0, gbc.readMem(0xdc32));
        // CB E0 01D6
        gbc.setState(0xb16c, 0x2e8c, 0x8d10, 0xac05, 0x8aa7, 0xaf8a, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2e8c, gbc.sp());
        EXPECT(0xb16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16c));
        EXPECT(0xe0, gbc.readMem(0xb16d));
        // CB E0 01D7
        gbc.setState(0x8421, 0xd088, 0xfff0, 0x7eef, 0x52b7, 0x49da, 0x1, 0x1);
        gbc.writeMem(0x8421, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd088, gbc.sp());
        EXPECT(0x8423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8421));
        EXPECT(0xe0, gbc.readMem(0x8422));
        // CB E0 01D8
        gbc.setState(0x7852, 0x3be1, 0x1210, 0xedb8, 0xbae1, 0x236f, 0x0, 0x1);
        gbc.writeMem(0x7852, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3be1, gbc.sp());
        EXPECT(0x7854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01D9
        gbc.setState(0x1f31, 0xd8f0, 0x1d30, 0x1178, 0x1817, 0x6ba, 0x1, 0x0);
        gbc.writeMem(0x1f31, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0x1f33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01DA
        gbc.setState(0x832f, 0xe6c7, 0x33b0, 0x385e, 0x8b68, 0xf331, 0x0, 0x0);
        gbc.writeMem(0x832f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0x8331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832f));
        EXPECT(0xe0, gbc.readMem(0x8330));
        // CB E0 01DB
        gbc.setState(0x340a, 0x5623, 0xd870, 0xdb4b, 0x63a9, 0x3701, 0x0, 0x0);
        gbc.writeMem(0x340a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5623, gbc.sp());
        EXPECT(0x340c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01DD
        gbc.setState(0x60a9, 0x1e5c, 0x42b0, 0xde63, 0xc6b4, 0x177f, 0x1, 0x0);
        gbc.writeMem(0x60a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0x60ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01DF
        gbc.setState(0xaee7, 0x82a5, 0xc5e0, 0xddb, 0x7d1f, 0x5ace, 0x1, 0x0);
        gbc.writeMem(0xaee7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x82a5, gbc.sp());
        EXPECT(0xaee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee7));
        EXPECT(0xe0, gbc.readMem(0xaee8));
        // CB E0 01E0
        gbc.setState(0xc76d, 0xbda8, 0x5560, 0x4d1c, 0x8a2d, 0xc268, 0x1, 0x1);
        gbc.writeMem(0xc76d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xbda8, gbc.sp());
        EXPECT(0xc76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76d));
        EXPECT(0xe0, gbc.readMem(0xc76e));
        // CB E0 01E1
        gbc.setState(0x9568, 0xadba, 0x4d20, 0xf23, 0x9f63, 0xd1fa, 0x0, 0x0);
        gbc.writeMem(0x9568, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xadba, gbc.sp());
        EXPECT(0x956a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9568));
        EXPECT(0xe0, gbc.readMem(0x9569));
        // CB E0 01E2
        gbc.setState(0x4a12, 0x9668, 0x2b0, 0x7167, 0x990c, 0xe6d4, 0x0, 0x1);
        gbc.writeMem(0x4a12, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9668, gbc.sp());
        EXPECT(0x4a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01E3
        gbc.setState(0x6fd6, 0xdfe0, 0x3dd0, 0x65aa, 0x5ec8, 0x6aa1, 0x0, 0x1);
        gbc.writeMem(0x6fd6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xdfe0, gbc.sp());
        EXPECT(0x6fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01E4
        gbc.setState(0x94f3, 0x1218, 0x75a0, 0x12e0, 0x549e, 0x4b3d, 0x1, 0x1);
        gbc.writeMem(0x94f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1218, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f3));
        EXPECT(0xe0, gbc.readMem(0x94f4));
        // CB E0 01E5
        gbc.setState(0xa92a, 0x73b1, 0x2050, 0xeb7c, 0x7c4e, 0xdc78, 0x0, 0x0);
        gbc.writeMem(0xa92a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73b1, gbc.sp());
        EXPECT(0xa92c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa92a));
        EXPECT(0xe0, gbc.readMem(0xa92b));
        // CB E0 01E6
        gbc.setState(0xe6a, 0x4cb, 0x1e40, 0x78ba, 0x6a55, 0x6843, 0x0, 0x1);
        gbc.writeMem(0xe6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0xe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01E7
        gbc.setState(0x8133, 0x66d1, 0x430, 0x7b54, 0x6efd, 0xdaf9, 0x1, 0x0);
        gbc.writeMem(0x8133, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x66d1, gbc.sp());
        EXPECT(0x8135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8133));
        EXPECT(0xe0, gbc.readMem(0x8134));
        // CB E0 01E8
        gbc.setState(0x9558, 0xed5b, 0xda70, 0x5657, 0xef24, 0x841, 0x1, 0x0);
        gbc.writeMem(0x9558, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xed5b, gbc.sp());
        EXPECT(0x955a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9558));
        EXPECT(0xe0, gbc.readMem(0x9559));
        // CB E0 01E9
        gbc.setState(0xc58, 0x73a, 0x5a0, 0x2a0b, 0xc58b, 0x17eb, 0x0, 0x0);
        gbc.writeMem(0xc58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x73a, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01EA
        gbc.setState(0x4b26, 0x9309, 0x7030, 0x101f, 0x130d, 0xd501, 0x1, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9309, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01EB
        gbc.setState(0xbeaa, 0xc914, 0x15b0, 0x3ad7, 0x7ee0, 0x5b92, 0x0, 0x0);
        gbc.writeMem(0xbeaa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc914, gbc.sp());
        EXPECT(0xbeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeaa));
        EXPECT(0xe0, gbc.readMem(0xbeab));
        // CB E0 01ED
        gbc.setState(0xb1a8, 0x13f0, 0xaf20, 0x614f, 0x62c2, 0x5b61, 0x1, 0x1);
        gbc.writeMem(0xb1a8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a8));
        EXPECT(0xe0, gbc.readMem(0xb1a9));
        // CB E0 01EE
        gbc.setState(0xeab1, 0x2e5d, 0xf020, 0xe162, 0x1952, 0xdfe, 0x0, 0x0);
        gbc.writeMem(0xeab1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2e5d, gbc.sp());
        EXPECT(0xeab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab1));
        EXPECT(0xe0, gbc.readMem(0xeab2));
        // CB E0 01EF
        gbc.setState(0xc3ec, 0x3f5e, 0x2f0, 0xe185, 0x7c40, 0x9e6d, 0x1, 0x0);
        gbc.writeMem(0xc3ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3f5e, gbc.sp());
        EXPECT(0xc3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ec));
        EXPECT(0xe0, gbc.readMem(0xc3ed));
        // CB E0 01F0
        gbc.setState(0x84ff, 0xa275, 0x7430, 0xf124, 0x84b9, 0x5b6e, 0x0, 0x0);
        gbc.writeMem(0x84ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa275, gbc.sp());
        EXPECT(0x8501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ff));
        EXPECT(0xe0, gbc.readMem(0x8500));
        // CB E0 01F1
        gbc.setState(0x1988, 0x70f0, 0xea10, 0x5142, 0x2e2e, 0x506, 0x1, 0x1);
        gbc.writeMem(0x1988, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x70f0, gbc.sp());
        EXPECT(0x198a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01F2
        gbc.setState(0x5419, 0x91, 0x64e0, 0x10c1, 0x89f4, 0xec74, 0x1, 0x0);
        gbc.writeMem(0x5419, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x91, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01F3
        gbc.setState(0x3f7e, 0xda37, 0x2820, 0xc0ba, 0x7b1f, 0xad5a, 0x1, 0x0);
        gbc.writeMem(0x3f7e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xda37, gbc.sp());
        EXPECT(0x3f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01F4
        gbc.setState(0x1fb2, 0x1202, 0xdf60, 0x7bef, 0x88c, 0xa328, 0x1, 0x0);
        gbc.writeMem(0x1fb2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1202, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01F5
        gbc.setState(0x30cd, 0x95ab, 0xf170, 0x833d, 0x6616, 0x620a, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x95ab, gbc.sp());
        EXPECT(0x30cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 01F6
        gbc.setState(0x884e, 0xb658, 0xeec0, 0x20ef, 0x13d7, 0xe080, 0x0, 0x0);
        gbc.writeMem(0x884e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0x8850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x884e));
        EXPECT(0xe0, gbc.readMem(0x884f));
        // CB E0 01F8
        gbc.setState(0x2911, 0x37e7, 0xbf60, 0xd3de, 0x6739, 0xde98, 0x1, 0x0);
        gbc.writeMem(0x2911, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x37e7, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01F9
        gbc.setState(0xb3f3, 0x185d, 0xabb0, 0x515e, 0x2788, 0x6e30, 0x0, 0x0);
        gbc.writeMem(0xb3f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x185d, gbc.sp());
        EXPECT(0xb3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f3));
        EXPECT(0xe0, gbc.readMem(0xb3f4));
        // CB E0 01FA
        gbc.setState(0x553b, 0x586b, 0x2d80, 0x7a6a, 0xf23, 0x1b91, 0x0, 0x1);
        gbc.writeMem(0x553b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x586b, gbc.sp());
        EXPECT(0x553d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01FB
        gbc.setState(0xb978, 0xcc1a, 0xbb00, 0x76d9, 0xe153, 0x4820, 0x1, 0x0);
        gbc.writeMem(0xb978, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcc1a, gbc.sp());
        EXPECT(0xb97a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb978));
        EXPECT(0xe0, gbc.readMem(0xb979));
        // CB E0 01FD
        gbc.setState(0xc12b, 0x35aa, 0xd0e0, 0x406c, 0xdaff, 0x60e7, 0x0, 0x1);
        gbc.writeMem(0xc12b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x35aa, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0xe0, gbc.readMem(0xc12c));
        // CB E0 01FE
        gbc.setState(0x5080, 0x5bfc, 0x97c0, 0x38a2, 0x48e0, 0x4837, 0x0, 0x1);
        gbc.writeMem(0x5080, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5bfc, gbc.sp());
        EXPECT(0x5082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 01FF
        gbc.setState(0x9058, 0x53f, 0x6d60, 0x5113, 0x9945, 0x26a8, 0x1, 0x1);
        gbc.writeMem(0x9058, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x53f, gbc.sp());
        EXPECT(0x905a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9058));
        EXPECT(0xe0, gbc.readMem(0x9059));
        // CB E0 0200
        gbc.setState(0xe3c4, 0x2309, 0x6320, 0xf436, 0x53c3, 0xb624, 0x0, 0x0);
        gbc.writeMem(0xe3c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2309, gbc.sp());
        EXPECT(0xe3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c4));
        EXPECT(0xe0, gbc.readMem(0xe3c5));
        // CB E0 0201
        gbc.setState(0x8b0a, 0xa8d7, 0x5c60, 0x6c33, 0xc5f3, 0x30a2, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa8d7, gbc.sp());
        EXPECT(0x8b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0a));
        EXPECT(0xe0, gbc.readMem(0x8b0b));
        // CB E0 0202
        gbc.setState(0x3447, 0x4f5, 0x1a10, 0xbf74, 0xd6f2, 0xd4f7, 0x0, 0x1);
        gbc.writeMem(0x3447, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4f5, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0203
        gbc.setState(0x8f05, 0x26c9, 0x31b0, 0x4583, 0x2a03, 0x3816, 0x0, 0x0);
        gbc.writeMem(0x8f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x26c9, gbc.sp());
        EXPECT(0x8f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f05));
        EXPECT(0xe0, gbc.readMem(0x8f06));
        // CB E0 0204
        gbc.setState(0x5a5b, 0xd8ec, 0xf720, 0xa8e8, 0x6f17, 0xea98, 0x0, 0x1);
        gbc.writeMem(0x5a5b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd8ec, gbc.sp());
        EXPECT(0x5a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0205
        gbc.setState(0xd52, 0x8966, 0x9da0, 0x6a94, 0x4df3, 0x921a, 0x0, 0x1);
        gbc.writeMem(0xd52, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8966, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0206
        gbc.setState(0xd87b, 0x5494, 0x3c70, 0x1a76, 0xf69c, 0x9e0e, 0x0, 0x0);
        gbc.writeMem(0xd87b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5494, gbc.sp());
        EXPECT(0xd87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87b));
        EXPECT(0xe0, gbc.readMem(0xd87c));
        // CB E0 0207
        gbc.setState(0x9bf, 0x6d87, 0x2550, 0x35be, 0x10da, 0xb987, 0x1, 0x0);
        gbc.writeMem(0x9bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6d87, gbc.sp());
        EXPECT(0x9c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0208
        gbc.setState(0xae91, 0x5a5f, 0xf280, 0x929e, 0x1c7a, 0xf6c6, 0x1, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5a5f, gbc.sp());
        EXPECT(0xae93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae91));
        EXPECT(0xe0, gbc.readMem(0xae92));
        // CB E0 0209
        gbc.setState(0xa70f, 0xc4, 0x6ef0, 0x2f09, 0x9b4a, 0x12ad, 0x0, 0x1);
        gbc.writeMem(0xa70f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc4, gbc.sp());
        EXPECT(0xa711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa70f));
        EXPECT(0xe0, gbc.readMem(0xa710));
        // CB E0 020A
        gbc.setState(0xe858, 0x30f2, 0x9b50, 0x87d0, 0x47f8, 0xe53, 0x1, 0x1);
        gbc.writeMem(0xe858, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x30f2, gbc.sp());
        EXPECT(0xe85a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe858));
        EXPECT(0xe0, gbc.readMem(0xe859));
        // CB E0 020B
        gbc.setState(0xd41b, 0xdadc, 0x3480, 0xea76, 0xc3cf, 0x52a9, 0x1, 0x1);
        gbc.writeMem(0xd41b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdadc, gbc.sp());
        EXPECT(0xd41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41b));
        EXPECT(0xe0, gbc.readMem(0xd41c));
        // CB E0 020C
        gbc.setState(0x372b, 0x49bb, 0x27a0, 0xa4dd, 0xe673, 0xdc97, 0x0, 0x1);
        gbc.writeMem(0x372b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x49bb, gbc.sp());
        EXPECT(0x372d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 020D
        gbc.setState(0xe882, 0x8356, 0x91d0, 0xd59b, 0x119, 0xc758, 0x1, 0x1);
        gbc.writeMem(0xe882, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8356, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe882));
        EXPECT(0xe0, gbc.readMem(0xe883));
        // CB E0 020E
        gbc.setState(0x253d, 0x87fb, 0xb620, 0x9a15, 0xdf1, 0x6092, 0x0, 0x0);
        gbc.writeMem(0x253d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x87fb, gbc.sp());
        EXPECT(0x253f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 020F
        gbc.setState(0x83e7, 0x913f, 0xe760, 0xe563, 0x670e, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x83e7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x913f, gbc.sp());
        EXPECT(0x83e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e7));
        EXPECT(0xe0, gbc.readMem(0x83e8));
        // CB E0 0210
        gbc.setState(0x75cd, 0x9a9, 0x3be0, 0x564b, 0xb8d4, 0xd34e, 0x1, 0x1);
        gbc.writeMem(0x75cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a9, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0211
        gbc.setState(0xacfe, 0xdecc, 0xb020, 0xb872, 0x45aa, 0x5e1b, 0x1, 0x1);
        gbc.writeMem(0xacfe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0xad00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfe));
        EXPECT(0xe0, gbc.readMem(0xacff));
        // CB E0 0212
        gbc.setState(0xeb4f, 0x1c4, 0x2120, 0xe2aa, 0xf391, 0xbb5, 0x0, 0x1);
        gbc.writeMem(0xeb4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1c4, gbc.sp());
        EXPECT(0xeb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb4f));
        EXPECT(0xe0, gbc.readMem(0xeb50));
        // CB E0 0213
        gbc.setState(0x424b, 0xd1dc, 0x7420, 0xd358, 0x3137, 0xed1d, 0x0, 0x0);
        gbc.writeMem(0x424b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd1dc, gbc.sp());
        EXPECT(0x424d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0214
        gbc.setState(0xdc80, 0xdc34, 0xc080, 0x4c0d, 0x9e66, 0xcba4, 0x1, 0x1);
        gbc.writeMem(0xdc80, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc34, gbc.sp());
        EXPECT(0xdc82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc80));
        EXPECT(0xe0, gbc.readMem(0xdc81));
        // CB E0 0215
        gbc.setState(0x827c, 0x4375, 0xaff0, 0xa305, 0x5ad2, 0xcb6c, 0x0, 0x0);
        gbc.writeMem(0x827c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4375, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827c));
        EXPECT(0xe0, gbc.readMem(0x827d));
        // CB E0 0216
        gbc.setState(0x8564, 0x7641, 0x47f0, 0xc8b6, 0xcbf, 0xa39e, 0x0, 0x1);
        gbc.writeMem(0x8564, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7641, gbc.sp());
        EXPECT(0x8566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8564));
        EXPECT(0xe0, gbc.readMem(0x8565));
        // CB E0 0217
        gbc.setState(0xde11, 0x86db, 0xaf60, 0x41e6, 0x3f5e, 0x18c7, 0x1, 0x0);
        gbc.writeMem(0xde11, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x86db, gbc.sp());
        EXPECT(0xde13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde11));
        EXPECT(0xe0, gbc.readMem(0xde12));
        // CB E0 0218
        gbc.setState(0xa990, 0x20a8, 0xf3f0, 0xa637, 0xbb6b, 0x87f9, 0x0, 0x0);
        gbc.writeMem(0xa990, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x20a8, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa990));
        EXPECT(0xe0, gbc.readMem(0xa991));
        // CB E0 0219
        gbc.setState(0xbb2b, 0x5528, 0x78c0, 0xe81f, 0x1322, 0xb894, 0x0, 0x0);
        gbc.writeMem(0xbb2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5528, gbc.sp());
        EXPECT(0xbb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2b));
        EXPECT(0xe0, gbc.readMem(0xbb2c));
        // CB E0 021A
        gbc.setState(0xa2e8, 0x8dfa, 0xed60, 0x4f52, 0x4966, 0xf971, 0x0, 0x1);
        gbc.writeMem(0xa2e8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8dfa, gbc.sp());
        EXPECT(0xa2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e8));
        EXPECT(0xe0, gbc.readMem(0xa2e9));
        // CB E0 021B
        gbc.setState(0xaab5, 0xc287, 0x4770, 0xe17e, 0xc37f, 0xf2cf, 0x1, 0x0);
        gbc.writeMem(0xaab5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0xaab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab5));
        EXPECT(0xe0, gbc.readMem(0xaab6));
        // CB E0 021C
        gbc.setState(0xb24f, 0xf03f, 0x4ac0, 0x4e49, 0x706f, 0x3905, 0x0, 0x1);
        gbc.writeMem(0xb24f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf03f, gbc.sp());
        EXPECT(0xb251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb24f));
        EXPECT(0xe0, gbc.readMem(0xb250));
        // CB E0 021D
        gbc.setState(0xefed, 0xfb7c, 0xa1a0, 0xc25a, 0x992, 0xd67b, 0x1, 0x1);
        gbc.writeMem(0xefed, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0xefef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefed));
        EXPECT(0xe0, gbc.readMem(0xefee));
        // CB E0 021E
        gbc.setState(0x9365, 0x1c1a, 0xd460, 0xed54, 0xfb18, 0xcee0, 0x0, 0x0);
        gbc.writeMem(0x9365, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0x9367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9365));
        EXPECT(0xe0, gbc.readMem(0x9366));
        // CB E0 021F
        gbc.setState(0xc672, 0xffba, 0x95a0, 0xbe9f, 0x2096, 0x7b65, 0x0, 0x0);
        gbc.writeMem(0xc672, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xffba, gbc.sp());
        EXPECT(0xc674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc672));
        EXPECT(0xe0, gbc.readMem(0xc673));
        // CB E0 0220
        gbc.setState(0x9ea9, 0xf661, 0x6200, 0x6399, 0xfc9e, 0x87a6, 0x1, 0x1);
        gbc.writeMem(0x9ea9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf661, gbc.sp());
        EXPECT(0x9eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea9));
        EXPECT(0xe0, gbc.readMem(0x9eaa));
        // CB E0 0221
        gbc.setState(0x49c3, 0x58c4, 0x9b80, 0x15ab, 0xae4b, 0x12fd, 0x1, 0x1);
        gbc.writeMem(0x49c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x58c4, gbc.sp());
        EXPECT(0x49c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0223
        gbc.setState(0xef4f, 0xc60a, 0x3bc0, 0x8676, 0x7090, 0x3f32, 0x1, 0x1);
        gbc.writeMem(0xef4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc60a, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4f));
        EXPECT(0xe0, gbc.readMem(0xef50));
        // CB E0 0224
        gbc.setState(0x6182, 0xdba1, 0xc00, 0x4d8a, 0x403d, 0x8e4, 0x0, 0x1);
        gbc.writeMem(0x6182, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x6184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0225
        gbc.setState(0x8e34, 0x95a9, 0x4670, 0x1a76, 0x3160, 0xb17b, 0x1, 0x1);
        gbc.writeMem(0x8e34, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x95a9, gbc.sp());
        EXPECT(0x8e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e34));
        EXPECT(0xe0, gbc.readMem(0x8e35));
        // CB E0 0226
        gbc.setState(0x5070, 0xe810, 0xd9d0, 0xead1, 0x138c, 0x53b6, 0x0, 0x1);
        gbc.writeMem(0x5070, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe810, gbc.sp());
        EXPECT(0x5072, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0228
        gbc.setState(0x7936, 0x3f4c, 0x1da0, 0x2da0, 0x155b, 0xfb22, 0x1, 0x1);
        gbc.writeMem(0x7936, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x3f4c, gbc.sp());
        EXPECT(0x7938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0229
        gbc.setState(0x3ea5, 0xeae1, 0x1af0, 0x6328, 0xb0b4, 0x9a21, 0x0, 0x1);
        gbc.writeMem(0x3ea5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0x3ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 022A
        gbc.setState(0x5ddd, 0x62dc, 0xe0d0, 0x2497, 0xa222, 0x9152, 0x0, 0x1);
        gbc.writeMem(0x5ddd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x62dc, gbc.sp());
        EXPECT(0x5ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 022B
        gbc.setState(0xefc8, 0x5efa, 0x1ea0, 0xf786, 0xc8c4, 0x9ad7, 0x1, 0x1);
        gbc.writeMem(0xefc8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0xefca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc8));
        EXPECT(0xe0, gbc.readMem(0xefc9));
        // CB E0 022D
        gbc.setState(0xdb6d, 0x3fa7, 0x2b0, 0x272d, 0x622c, 0x341d, 0x0, 0x1);
        gbc.writeMem(0xdb6d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3fa7, gbc.sp());
        EXPECT(0xdb6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb6d));
        EXPECT(0xe0, gbc.readMem(0xdb6e));
        // CB E0 022F
        gbc.setState(0xb3a0, 0xf1ab, 0x1270, 0x302a, 0x9158, 0xd0b4, 0x1, 0x0);
        gbc.writeMem(0xb3a0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0xb3a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a0));
        EXPECT(0xe0, gbc.readMem(0xb3a1));
        // CB E0 0230
        gbc.setState(0x7dae, 0xad9, 0x1620, 0x2768, 0xf7c2, 0x3ed9, 0x0, 0x0);
        gbc.writeMem(0x7dae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xad9, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0231
        gbc.setState(0xb93a, 0x971e, 0x3380, 0x5a35, 0xc206, 0xac3c, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93a));
        EXPECT(0xe0, gbc.readMem(0xb93b));
        // CB E0 0232
        gbc.setState(0x5655, 0x19fa, 0xa990, 0xe341, 0x6af5, 0xbdc1, 0x1, 0x0);
        gbc.writeMem(0x5655, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x19fa, gbc.sp());
        EXPECT(0x5657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0233
        gbc.setState(0x11ba, 0xe5d2, 0x7dd0, 0x1d6d, 0x42b2, 0x3004, 0x0, 0x1);
        gbc.writeMem(0x11ba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe5d2, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0234
        gbc.setState(0x140c, 0x4cbf, 0x80f0, 0xf362, 0xaf15, 0x758c, 0x0, 0x0);
        gbc.writeMem(0x140c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4cbf, gbc.sp());
        EXPECT(0x140e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0235
        gbc.setState(0x6e88, 0x6f2c, 0x69c0, 0x689b, 0x6e18, 0x6eb1, 0x1, 0x0);
        gbc.writeMem(0x6e88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0x6e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0236
        gbc.setState(0x890f, 0x4a09, 0x9b20, 0x62be, 0x95c2, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0x8911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890f));
        EXPECT(0xe0, gbc.readMem(0x8910));
        // CB E0 0237
        gbc.setState(0x10fb, 0x9958, 0xea40, 0xb82b, 0x61e6, 0xfb8a, 0x0, 0x0);
        gbc.writeMem(0x10fb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9958, gbc.sp());
        EXPECT(0x10fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0238
        gbc.setState(0xef3f, 0xbcb6, 0xaf90, 0x357, 0x8f8f, 0x868b, 0x0, 0x0);
        gbc.writeMem(0xef3f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbcb6, gbc.sp());
        EXPECT(0xef41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef3f));
        EXPECT(0xe0, gbc.readMem(0xef40));
        // CB E0 0239
        gbc.setState(0x5949, 0xc167, 0x2590, 0x712e, 0x7fd7, 0x2731, 0x0, 0x1);
        gbc.writeMem(0x5949, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc167, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 023A
        gbc.setState(0x36db, 0xcb02, 0x7430, 0xff7, 0x8dd0, 0x2a8a, 0x0, 0x1);
        gbc.writeMem(0x36db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcb02, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 023B
        gbc.setState(0x2711, 0xa0b6, 0xe9d0, 0xaf88, 0x12b8, 0x6eb6, 0x1, 0x1);
        gbc.writeMem(0x2711, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa0b6, gbc.sp());
        EXPECT(0x2713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 023D
        gbc.setState(0x328c, 0x62df, 0xf990, 0x6be1, 0xb7be, 0x9573, 0x0, 0x0);
        gbc.writeMem(0x328c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x62df, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 023E
        gbc.setState(0xa139, 0x558d, 0x5500, 0x32f7, 0x40c6, 0xc777, 0x0, 0x1);
        gbc.writeMem(0xa139, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x558d, gbc.sp());
        EXPECT(0xa13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa139));
        EXPECT(0xe0, gbc.readMem(0xa13a));
        // CB E0 023F
        gbc.setState(0x3a4c, 0xb373, 0x11c0, 0x2c45, 0x744c, 0x3f03, 0x1, 0x0);
        gbc.writeMem(0x3a4c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb373, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0240
        gbc.setState(0x3dc3, 0x5c9b, 0x9f90, 0xd4f4, 0x523e, 0x7014, 0x0, 0x0);
        gbc.writeMem(0x3dc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5c9b, gbc.sp());
        EXPECT(0x3dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0241
        gbc.setState(0x19da, 0x4896, 0xe690, 0x713a, 0xd437, 0x9dfa, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4896, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0243
        gbc.setState(0x7649, 0x8607, 0x99a0, 0x592c, 0xac7b, 0xa7a5, 0x0, 0x0);
        gbc.writeMem(0x7649, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8607, gbc.sp());
        EXPECT(0x764b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0245
        gbc.setState(0x3d8a, 0x5e0a, 0x4a80, 0xd33e, 0x77b6, 0x8d1c, 0x0, 0x0);
        gbc.writeMem(0x3d8a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5e0a, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0246
        gbc.setState(0x6ee9, 0x937d, 0x69c0, 0x124d, 0xbbc1, 0x68c4, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x937d, gbc.sp());
        EXPECT(0x6eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0247
        gbc.setState(0xc650, 0x8eca, 0x1bd0, 0xbfd5, 0xc3d6, 0x801f, 0x0, 0x1);
        gbc.writeMem(0xc650, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8eca, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc650));
        EXPECT(0xe0, gbc.readMem(0xc651));
        // CB E0 0248
        gbc.setState(0x3902, 0xb4e1, 0x5c50, 0xf1f0, 0x4455, 0xc8a8, 0x0, 0x1);
        gbc.writeMem(0x3902, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0x3904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0249
        gbc.setState(0xb3d3, 0xf465, 0x8650, 0x507c, 0xcff9, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0xb3d3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf465, gbc.sp());
        EXPECT(0xb3d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3d3));
        EXPECT(0xe0, gbc.readMem(0xb3d4));
        // CB E0 024A
        gbc.setState(0xd97a, 0x7c7e, 0xa260, 0x1088, 0x317e, 0x957c, 0x0, 0x1);
        gbc.writeMem(0xd97a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7c7e, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97a));
        EXPECT(0xe0, gbc.readMem(0xd97b));
        // CB E0 024B
        gbc.setState(0x18a, 0x3f68, 0x12f0, 0x3dd2, 0x5bbe, 0x98a1, 0x1, 0x1);
        gbc.writeMem(0x18a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3f68, gbc.sp());
        EXPECT(0x18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 024C
        gbc.setState(0x15da, 0x6994, 0x92e0, 0x7208, 0x2300, 0x133f, 0x0, 0x0);
        gbc.writeMem(0x15da, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6994, gbc.sp());
        EXPECT(0x15dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 024D
        gbc.setState(0xb7e0, 0xef87, 0x3630, 0x2c74, 0x4fdd, 0x42d0, 0x0, 0x0);
        gbc.writeMem(0xb7e0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0xb7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e0));
        EXPECT(0xe0, gbc.readMem(0xb7e1));
        // CB E0 024E
        gbc.setState(0x4b9, 0x432b, 0xdec0, 0xdab6, 0x16c6, 0xcb0d, 0x0, 0x1);
        gbc.writeMem(0x4b9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x432b, gbc.sp());
        EXPECT(0x4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 024F
        gbc.setState(0xbd8, 0xb684, 0x65b0, 0x5702, 0x8e69, 0xc654, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb684, gbc.sp());
        EXPECT(0xbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0251
        gbc.setState(0x4647, 0x56e1, 0x6f00, 0x2d5f, 0x3f6e, 0xad12, 0x1, 0x1);
        gbc.writeMem(0x4647, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x56e1, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0252
        gbc.setState(0xc5cc, 0x7aae, 0x9a0, 0x6434, 0xbc0f, 0x600f, 0x1, 0x1);
        gbc.writeMem(0xc5cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7aae, gbc.sp());
        EXPECT(0xc5ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cc));
        EXPECT(0xe0, gbc.readMem(0xc5cd));
        // CB E0 0253
        gbc.setState(0x80c2, 0x422d, 0x2460, 0x9546, 0x9f4, 0xd3fc, 0x1, 0x0);
        gbc.writeMem(0x80c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x422d, gbc.sp());
        EXPECT(0x80c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c2));
        EXPECT(0xe0, gbc.readMem(0x80c3));
        // CB E0 0254
        gbc.setState(0xe1b3, 0xdcc8, 0xc2a0, 0x3268, 0x3152, 0x1c, 0x0, 0x0);
        gbc.writeMem(0xe1b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xdcc8, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b3));
        EXPECT(0xe0, gbc.readMem(0xe1b4));
        // CB E0 0255
        gbc.setState(0xb1ec, 0xff06, 0x3150, 0xe280, 0x3346, 0x862b, 0x1, 0x1);
        gbc.writeMem(0xb1ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xff06, gbc.sp());
        EXPECT(0xb1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ec));
        EXPECT(0xe0, gbc.readMem(0xb1ed));
        // CB E0 0256
        gbc.setState(0xa01f, 0x1258, 0x26f0, 0x4a60, 0x23fa, 0xca28, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1258, gbc.sp());
        EXPECT(0xa021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01f));
        EXPECT(0xe0, gbc.readMem(0xa020));
        // CB E0 0257
        gbc.setState(0xce61, 0xe113, 0xf990, 0xe600, 0x2969, 0x6810, 0x1, 0x0);
        gbc.writeMem(0xce61, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce61));
        EXPECT(0xe0, gbc.readMem(0xce62));
        // CB E0 0258
        gbc.setState(0x18c8, 0x8e80, 0x9500, 0xea1, 0x80e3, 0x266e, 0x1, 0x1);
        gbc.writeMem(0x18c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8e80, gbc.sp());
        EXPECT(0x18ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0259
        gbc.setState(0xbb21, 0x8eb2, 0xe700, 0xb257, 0xb889, 0x5e04, 0x1, 0x1);
        gbc.writeMem(0xbb21, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb21));
        EXPECT(0xe0, gbc.readMem(0xbb22));
        // CB E0 025A
        gbc.setState(0x4227, 0x3125, 0xa4d0, 0xbbc6, 0x2c2e, 0x538a, 0x0, 0x1);
        gbc.writeMem(0x4227, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3125, gbc.sp());
        EXPECT(0x4229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 025B
        gbc.setState(0xe6d5, 0x24ec, 0x2200, 0x45a8, 0x1705, 0xcf72, 0x0, 0x0);
        gbc.writeMem(0xe6d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x24ec, gbc.sp());
        EXPECT(0xe6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d5));
        EXPECT(0xe0, gbc.readMem(0xe6d6));
        // CB E0 025D
        gbc.setState(0xc47, 0xa2b9, 0x19a0, 0x976a, 0x4837, 0xa8c5, 0x1, 0x1);
        gbc.writeMem(0xc47, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa2b9, gbc.sp());
        EXPECT(0xc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 025E
        gbc.setState(0xbbdf, 0x3689, 0x8700, 0x5566, 0xfb02, 0x1c73, 0x1, 0x1);
        gbc.writeMem(0xbbdf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3689, gbc.sp());
        EXPECT(0xbbe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbdf));
        EXPECT(0xe0, gbc.readMem(0xbbe0));
        // CB E0 025F
        gbc.setState(0x435f, 0xd90d, 0xf140, 0x261, 0xf7ee, 0x23d9, 0x0, 0x0);
        gbc.writeMem(0x435f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd90d, gbc.sp());
        EXPECT(0x4361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0260
        gbc.setState(0x6b58, 0x8a2a, 0xbfc0, 0x41, 0x1a05, 0x82c9, 0x0, 0x0);
        gbc.writeMem(0x6b58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8a2a, gbc.sp());
        EXPECT(0x6b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0261
        gbc.setState(0x22ba, 0x6d62, 0x1220, 0x8b0d, 0x126c, 0xa973, 0x1, 0x1);
        gbc.writeMem(0x22ba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6d62, gbc.sp());
        EXPECT(0x22bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0262
        gbc.setState(0x9893, 0xb12, 0x9810, 0x405, 0xa156, 0x790d, 0x0, 0x1);
        gbc.writeMem(0x9893, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb12, gbc.sp());
        EXPECT(0x9895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9893));
        EXPECT(0xe0, gbc.readMem(0x9894));
        // CB E0 0263
        gbc.setState(0xb375, 0x9bef, 0x81c0, 0xf2fd, 0xc266, 0xcbbc, 0x1, 0x0);
        gbc.writeMem(0xb375, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xb377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb375));
        EXPECT(0xe0, gbc.readMem(0xb376));
        // CB E0 0264
        gbc.setState(0x3240, 0xf999, 0x1be0, 0xfa4, 0x8219, 0x886, 0x0, 0x1);
        gbc.writeMem(0x3240, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf999, gbc.sp());
        EXPECT(0x3242, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0265
        gbc.setState(0xc5e3, 0x6e78, 0x19f0, 0xa487, 0xd8e8, 0x23a5, 0x1, 0x0);
        gbc.writeMem(0xc5e3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0xc5e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e3));
        EXPECT(0xe0, gbc.readMem(0xc5e4));
        // CB E0 0266
        gbc.setState(0x5f63, 0x8a40, 0xbb30, 0xf2ac, 0xaec6, 0x4ee2, 0x0, 0x1);
        gbc.writeMem(0x5f63, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a40, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0267
        gbc.setState(0xd9ec, 0xe470, 0x8820, 0x33d1, 0x7dce, 0x2619, 0x0, 0x0);
        gbc.writeMem(0xd9ec, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0xe0, gbc.readMem(0xd9ed));
        // CB E0 0268
        gbc.setState(0x692e, 0x1656, 0xf420, 0x9db8, 0x377b, 0xd6b, 0x0, 0x0);
        gbc.writeMem(0x692e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1656, gbc.sp());
        EXPECT(0x6930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0269
        gbc.setState(0x6db, 0x58ec, 0xa440, 0x39b8, 0xb71b, 0xa4c, 0x0, 0x1);
        gbc.writeMem(0x6db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0x6dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 026A
        gbc.setState(0x53ef, 0xa961, 0xe1e0, 0x116c, 0x8402, 0xa860, 0x1, 0x1);
        gbc.writeMem(0x53ef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa961, gbc.sp());
        EXPECT(0x53f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 026B
        gbc.setState(0x48a9, 0xc58e, 0xeba0, 0x321e, 0xe774, 0xc8f2, 0x0, 0x0);
        gbc.writeMem(0x48a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0x48ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 026C
        gbc.setState(0x216f, 0x3a01, 0x78c0, 0xc0ad, 0x231b, 0xeb0e, 0x0, 0x1);
        gbc.writeMem(0x216f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3a01, gbc.sp());
        EXPECT(0x2171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 026D
        gbc.setState(0xd74a, 0x5f0c, 0x2ac0, 0x4547, 0x30d3, 0x82f9, 0x0, 0x1);
        gbc.writeMem(0xd74a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5f0c, gbc.sp());
        EXPECT(0xd74c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd74a));
        EXPECT(0xe0, gbc.readMem(0xd74b));
        // CB E0 026E
        gbc.setState(0x6db8, 0xdaa4, 0x6890, 0x6330, 0xe3b5, 0x5482, 0x1, 0x0);
        gbc.writeMem(0x6db8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xdaa4, gbc.sp());
        EXPECT(0x6dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 026F
        gbc.setState(0x32d5, 0x4ea6, 0x9990, 0xe31c, 0xbeed, 0x8f45, 0x0, 0x1);
        gbc.writeMem(0x32d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4ea6, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0270
        gbc.setState(0xf7c, 0x813b, 0xed30, 0x32c5, 0xdbc2, 0xbc30, 0x0, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x813b, gbc.sp());
        EXPECT(0xf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0271
        gbc.setState(0x7095, 0xa669, 0xb3e0, 0x1d24, 0x2488, 0xd044, 0x0, 0x1);
        gbc.writeMem(0x7095, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa669, gbc.sp());
        EXPECT(0x7097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0272
        gbc.setState(0xdc95, 0xd1ce, 0x1920, 0x8d5a, 0x5933, 0xf5c6, 0x0, 0x1);
        gbc.writeMem(0xdc95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd1ce, gbc.sp());
        EXPECT(0xdc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc95));
        EXPECT(0xe0, gbc.readMem(0xdc96));
        // CB E0 0273
        gbc.setState(0x8334, 0xcf5a, 0x52a0, 0xb388, 0x8f7e, 0xc171, 0x1, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcf5a, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8334));
        EXPECT(0xe0, gbc.readMem(0x8335));
        // CB E0 0274
        gbc.setState(0xd1f5, 0x445f, 0xc4e0, 0x3d55, 0x42a9, 0x6567, 0x0, 0x1);
        gbc.writeMem(0xd1f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x445f, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0xe0, gbc.readMem(0xd1f6));
        // CB E0 0275
        gbc.setState(0x3e1c, 0x4149, 0x8ed0, 0xe221, 0xd525, 0x2cf1, 0x0, 0x1);
        gbc.writeMem(0x3e1c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4149, gbc.sp());
        EXPECT(0x3e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0276
        gbc.setState(0x308f, 0xdc81, 0xc0f0, 0xe9d2, 0xc151, 0x4a71, 0x0, 0x1);
        gbc.writeMem(0x308f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdc81, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0277
        gbc.setState(0x3466, 0x32c4, 0x2e50, 0x2a9c, 0x34f7, 0x9dd1, 0x0, 0x1);
        gbc.writeMem(0x3466, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x32c4, gbc.sp());
        EXPECT(0x3468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0278
        gbc.setState(0x312b, 0x99e7, 0xd990, 0xf24, 0x4181, 0x8eb1, 0x0, 0x0);
        gbc.writeMem(0x312b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x99e7, gbc.sp());
        EXPECT(0x312d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0279
        gbc.setState(0x36ac, 0x9fee, 0x36c0, 0x4403, 0x69b1, 0x1e54, 0x0, 0x0);
        gbc.writeMem(0x36ac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9fee, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 027A
        gbc.setState(0xe36a, 0x436, 0xd610, 0xd2f5, 0x6690, 0x334d, 0x1, 0x0);
        gbc.writeMem(0xe36a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x436, gbc.sp());
        EXPECT(0xe36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe36a));
        EXPECT(0xe0, gbc.readMem(0xe36b));
        // CB E0 027B
        gbc.setState(0x2d20, 0xcd6a, 0x40a0, 0x3483, 0xace3, 0x143, 0x0, 0x1);
        gbc.writeMem(0x2d20, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcd6a, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 027C
        gbc.setState(0x6d5, 0xe471, 0x4330, 0xda06, 0x28fd, 0xe5da, 0x1, 0x0);
        gbc.writeMem(0x6d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe471, gbc.sp());
        EXPECT(0x6d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 027D
        gbc.setState(0x4b30, 0xb9e7, 0xb960, 0x3051, 0x213c, 0xa09b, 0x0, 0x0);
        gbc.writeMem(0x4b30, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb9e7, gbc.sp());
        EXPECT(0x4b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 027E
        gbc.setState(0xd79, 0xe8be, 0x250, 0xc8a7, 0xfedd, 0xe463, 0x0, 0x1);
        gbc.writeMem(0xd79, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe8be, gbc.sp());
        EXPECT(0xd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 027F
        gbc.setState(0xe1b, 0x4121, 0x72f0, 0x8280, 0x7dc7, 0x7782, 0x0, 0x0);
        gbc.writeMem(0xe1b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4121, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0281
        gbc.setState(0xaf29, 0x8581, 0x3960, 0xe01e, 0x154, 0xd454, 0x1, 0x1);
        gbc.writeMem(0xaf29, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf29));
        EXPECT(0xe0, gbc.readMem(0xaf2a));
        // CB E0 0282
        gbc.setState(0xab0, 0x269a, 0x58e0, 0xa7f, 0x63b, 0xb5bd, 0x0, 0x1);
        gbc.writeMem(0xab0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x269a, gbc.sp());
        EXPECT(0xab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0283
        gbc.setState(0x623e, 0xbcaa, 0x8090, 0x9746, 0xd7e2, 0xb521, 0x0, 0x1);
        gbc.writeMem(0x623e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0284
        gbc.setState(0x96a8, 0x4b56, 0xd560, 0x2944, 0x12f6, 0x1dc3, 0x0, 0x1);
        gbc.writeMem(0x96a8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4b56, gbc.sp());
        EXPECT(0x96aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a8));
        EXPECT(0xe0, gbc.readMem(0x96a9));
        // CB E0 0285
        gbc.setState(0x321a, 0x4984, 0x2010, 0x6f5, 0x8f02, 0x47bd, 0x1, 0x0);
        gbc.writeMem(0x321a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4984, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0286
        gbc.setState(0x32aa, 0xffd1, 0x7290, 0x8034, 0xed10, 0x32d7, 0x1, 0x1);
        gbc.writeMem(0x32aa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xffd1, gbc.sp());
        EXPECT(0x32ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0288
        gbc.setState(0xdb32, 0x2e7c, 0x59b0, 0x2c66, 0xdfc7, 0x9b87, 0x1, 0x1);
        gbc.writeMem(0xdb32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2e7c, gbc.sp());
        EXPECT(0xdb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb32));
        EXPECT(0xe0, gbc.readMem(0xdb33));
        // CB E0 0289
        gbc.setState(0x118b, 0x7f5b, 0xe150, 0xd7a1, 0x854b, 0xa458, 0x0, 0x0);
        gbc.writeMem(0x118b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7f5b, gbc.sp());
        EXPECT(0x118d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 028A
        gbc.setState(0x8076, 0x9111, 0x40d0, 0xbc83, 0x87a, 0x197e, 0x1, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9111, gbc.sp());
        EXPECT(0x8078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8076));
        EXPECT(0xe0, gbc.readMem(0x8077));
        // CB E0 028B
        gbc.setState(0xaef0, 0x2d34, 0x9e50, 0x1822, 0xafe1, 0xf1c0, 0x0, 0x1);
        gbc.writeMem(0xaef0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2d34, gbc.sp());
        EXPECT(0xaef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef0));
        EXPECT(0xe0, gbc.readMem(0xaef1));
        // CB E0 028C
        gbc.setState(0x2163, 0xd641, 0xe930, 0x7bfd, 0x5b8c, 0x6fbd, 0x0, 0x0);
        gbc.writeMem(0x2163, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd641, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 028D
        gbc.setState(0x9736, 0x879f, 0x3160, 0xac24, 0xa923, 0xdd5a, 0x1, 0x1);
        gbc.writeMem(0x9736, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x879f, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9736));
        EXPECT(0xe0, gbc.readMem(0x9737));
        // CB E0 028E
        gbc.setState(0x5401, 0x9bd, 0x9820, 0xe560, 0x8178, 0x7d1, 0x0, 0x0);
        gbc.writeMem(0x5401, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9bd, gbc.sp());
        EXPECT(0x5403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 028F
        gbc.setState(0xf4c, 0x99a3, 0x12e0, 0xbf53, 0xbd1, 0x1f1e, 0x0, 0x0);
        gbc.writeMem(0xf4c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x99a3, gbc.sp());
        EXPECT(0xf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0290
        gbc.setState(0xa154, 0x2707, 0xd420, 0x4e7b, 0x6086, 0x865e, 0x0, 0x0);
        gbc.writeMem(0xa154, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2707, gbc.sp());
        EXPECT(0xa156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa154));
        EXPECT(0xe0, gbc.readMem(0xa155));
        // CB E0 0291
        gbc.setState(0x85f3, 0xceea, 0xd050, 0xf380, 0x543, 0x8ec8, 0x1, 0x0);
        gbc.writeMem(0x85f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xceea, gbc.sp());
        EXPECT(0x85f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f3));
        EXPECT(0xe0, gbc.readMem(0x85f4));
        // CB E0 0292
        gbc.setState(0x4ba6, 0xa230, 0x4720, 0xe9b, 0x2462, 0x72ec, 0x0, 0x1);
        gbc.writeMem(0x4ba6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa230, gbc.sp());
        EXPECT(0x4ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0293
        gbc.setState(0x6b7c, 0x8d7e, 0x8d00, 0xdeb7, 0x69c4, 0x83c9, 0x1, 0x0);
        gbc.writeMem(0x6b7c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8d7e, gbc.sp());
        EXPECT(0x6b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0294
        gbc.setState(0xa88b, 0xfbda, 0xe830, 0xceb9, 0xaa1c, 0xd6e8, 0x0, 0x1);
        gbc.writeMem(0xa88b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfbda, gbc.sp());
        EXPECT(0xa88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88b));
        EXPECT(0xe0, gbc.readMem(0xa88c));
        // CB E0 0295
        gbc.setState(0x6d7e, 0xb682, 0x9ec0, 0x3951, 0xbd49, 0xe018, 0x0, 0x0);
        gbc.writeMem(0x6d7e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x6d80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0296
        gbc.setState(0x69a, 0xb366, 0x5f10, 0x7cf5, 0x68f3, 0xc755, 0x0, 0x1);
        gbc.writeMem(0x69a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0297
        gbc.setState(0x110e, 0x34e, 0xc810, 0x82fc, 0x3a28, 0x157c, 0x1, 0x0);
        gbc.writeMem(0x110e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x34e, gbc.sp());
        EXPECT(0x1110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0298
        gbc.setState(0x4f76, 0x9d44, 0xbcf0, 0x3f66, 0xcb, 0xea4f, 0x0, 0x0);
        gbc.writeMem(0x4f76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9d44, gbc.sp());
        EXPECT(0x4f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0299
        gbc.setState(0x7212, 0x9cac, 0x5610, 0x13e9, 0xe4e3, 0x1326, 0x1, 0x0);
        gbc.writeMem(0x7212, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9cac, gbc.sp());
        EXPECT(0x7214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 029A
        gbc.setState(0xef2b, 0x84c3, 0xd950, 0xd0e3, 0x1dde, 0xa52c, 0x1, 0x1);
        gbc.writeMem(0xef2b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x84c3, gbc.sp());
        EXPECT(0xef2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef2b));
        EXPECT(0xe0, gbc.readMem(0xef2c));
        // CB E0 029B
        gbc.setState(0x289e, 0xb3, 0x5a50, 0xe574, 0x1a41, 0xf43f, 0x0, 0x1);
        gbc.writeMem(0x289e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb3, gbc.sp());
        EXPECT(0x28a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 029C
        gbc.setState(0x4f4a, 0xc228, 0x8fe0, 0xf30, 0x3ee1, 0x4092, 0x0, 0x0);
        gbc.writeMem(0x4f4a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0x4f4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 029D
        gbc.setState(0x2e1b, 0x80b4, 0x7080, 0x4209, 0xd3d0, 0xa00f, 0x1, 0x0);
        gbc.writeMem(0x2e1b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x80b4, gbc.sp());
        EXPECT(0x2e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 029E
        gbc.setState(0x9692, 0x4c92, 0x2120, 0x4d17, 0xc6eb, 0xe794, 0x0, 0x1);
        gbc.writeMem(0x9692, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4c92, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9692));
        EXPECT(0xe0, gbc.readMem(0x9693));
        // CB E0 029F
        gbc.setState(0xd6b2, 0x72d3, 0xce80, 0x5802, 0x933e, 0xa9e5, 0x1, 0x0);
        gbc.writeMem(0xd6b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x72d3, gbc.sp());
        EXPECT(0xd6b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6b2));
        EXPECT(0xe0, gbc.readMem(0xd6b3));
        // CB E0 02A0
        gbc.setState(0xc4bd, 0xa34b, 0xe950, 0x30ba, 0xdd6, 0x4db0, 0x1, 0x0);
        gbc.writeMem(0xc4bd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa34b, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bd));
        EXPECT(0xe0, gbc.readMem(0xc4be));
        // CB E0 02A1
        gbc.setState(0x750e, 0x72ca, 0xdfc0, 0x6999, 0x6cf2, 0x695f, 0x0, 0x1);
        gbc.writeMem(0x750e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x72ca, gbc.sp());
        EXPECT(0x7510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02A2
        gbc.setState(0x14b, 0xf1d6, 0x70a0, 0x80d1, 0x5588, 0x12a1, 0x0, 0x0);
        gbc.writeMem(0x14b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf1d6, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02A3
        gbc.setState(0x727d, 0x3557, 0xb40, 0xcdaf, 0x63ec, 0xca29, 0x1, 0x1);
        gbc.writeMem(0x727d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3557, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02A4
        gbc.setState(0xa406, 0xcb77, 0x84d0, 0xb265, 0xe111, 0x2d63, 0x0, 0x0);
        gbc.writeMem(0xa406, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcb77, gbc.sp());
        EXPECT(0xa408, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa406));
        EXPECT(0xe0, gbc.readMem(0xa407));
        // CB E0 02A5
        gbc.setState(0x3bfe, 0x663, 0xb6f0, 0xaf51, 0x660c, 0xb4a5, 0x0, 0x0);
        gbc.writeMem(0x3bfe, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x663, gbc.sp());
        EXPECT(0x3c00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02A6
        gbc.setState(0x3663, 0xf051, 0x4ad0, 0x5237, 0x1760, 0xbae4, 0x0, 0x0);
        gbc.writeMem(0x3663, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf051, gbc.sp());
        EXPECT(0x3665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02A7
        gbc.setState(0xb8f7, 0xdf1b, 0x2a80, 0xb374, 0x65aa, 0xa1e5, 0x1, 0x0);
        gbc.writeMem(0xb8f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdf1b, gbc.sp());
        EXPECT(0xb8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f7));
        EXPECT(0xe0, gbc.readMem(0xb8f8));
        // CB E0 02A8
        gbc.setState(0x5c80, 0x90ee, 0x9d50, 0x197e, 0xddbd, 0xb5fe, 0x1, 0x0);
        gbc.writeMem(0x5c80, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x90ee, gbc.sp());
        EXPECT(0x5c82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02A9
        gbc.setState(0x3c3d, 0xbe2d, 0x6530, 0xdc1d, 0xb0b5, 0xe1ee, 0x0, 0x1);
        gbc.writeMem(0x3c3d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xbe2d, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02AA
        gbc.setState(0x2eaf, 0xe2ab, 0x6d10, 0xc94f, 0xa968, 0x19ff, 0x0, 0x0);
        gbc.writeMem(0x2eaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe2ab, gbc.sp());
        EXPECT(0x2eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02AB
        gbc.setState(0x8d76, 0xc236, 0xaba0, 0x781, 0x8978, 0x70c7, 0x1, 0x1);
        gbc.writeMem(0x8d76, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc236, gbc.sp());
        EXPECT(0x8d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d76));
        EXPECT(0xe0, gbc.readMem(0x8d77));
        // CB E0 02AC
        gbc.setState(0xbf41, 0xdeb, 0xb770, 0xa35, 0x54d3, 0x2f5a, 0x0, 0x0);
        gbc.writeMem(0xbf41, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdeb, gbc.sp());
        EXPECT(0xbf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf41));
        EXPECT(0xe0, gbc.readMem(0xbf42));
        // CB E0 02AD
        gbc.setState(0xd366, 0x9284, 0xcda0, 0xea33, 0x69e9, 0x4f9b, 0x0, 0x0);
        gbc.writeMem(0xd366, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9284, gbc.sp());
        EXPECT(0xd368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd366));
        EXPECT(0xe0, gbc.readMem(0xd367));
        // CB E0 02AE
        gbc.setState(0x7b1, 0x8950, 0x9d0, 0x22af, 0x75f2, 0xb986, 0x1, 0x0);
        gbc.writeMem(0x7b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8950, gbc.sp());
        EXPECT(0x7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02AF
        gbc.setState(0x3160, 0x8d75, 0x8200, 0x6d25, 0xd63a, 0xaf15, 0x0, 0x0);
        gbc.writeMem(0x3160, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x3162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02B0
        gbc.setState(0x72d5, 0x3bba, 0x4e20, 0x3c82, 0xfc92, 0x86bc, 0x0, 0x0);
        gbc.writeMem(0x72d5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3bba, gbc.sp());
        EXPECT(0x72d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02B1
        gbc.setState(0xa58, 0xa007, 0x8ef0, 0xf2cf, 0x7933, 0xc316, 0x0, 0x1);
        gbc.writeMem(0xa58, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa007, gbc.sp());
        EXPECT(0xa5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02B2
        gbc.setState(0xaf32, 0x40fb, 0xe110, 0xef60, 0x52f7, 0x52d, 0x1, 0x1);
        gbc.writeMem(0xaf32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x40fb, gbc.sp());
        EXPECT(0xaf34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf32));
        EXPECT(0xe0, gbc.readMem(0xaf33));
        // CB E0 02B3
        gbc.setState(0xb829, 0xe65f, 0xd60, 0x2034, 0xff99, 0xf753, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe65f, gbc.sp());
        EXPECT(0xb82b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb829));
        EXPECT(0xe0, gbc.readMem(0xb82a));
        // CB E0 02B4
        gbc.setState(0xd06, 0xf8ac, 0x4950, 0xb892, 0x2de0, 0x2a59, 0x0, 0x0);
        gbc.writeMem(0xd06, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf8ac, gbc.sp());
        EXPECT(0xd08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02B5
        gbc.setState(0x390b, 0x5710, 0x9ed0, 0x24e5, 0x2a21, 0x65f5, 0x0, 0x1);
        gbc.writeMem(0x390b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0x390d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02B6
        gbc.setState(0xecc4, 0x35ea, 0xa050, 0x9557, 0x2065, 0x5c0f, 0x0, 0x1);
        gbc.writeMem(0xecc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x35ea, gbc.sp());
        EXPECT(0xecc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecc4));
        EXPECT(0xe0, gbc.readMem(0xecc5));
        // CB E0 02B8
        gbc.setState(0x38c4, 0x6392, 0xa9b0, 0x7aa0, 0x15a1, 0x6706, 0x1, 0x1);
        gbc.writeMem(0x38c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6392, gbc.sp());
        EXPECT(0x38c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02B9
        gbc.setState(0xe8bf, 0xbd63, 0x3770, 0x4ca2, 0x12a5, 0xd174, 0x1, 0x0);
        gbc.writeMem(0xe8bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xbd63, gbc.sp());
        EXPECT(0xe8c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bf));
        EXPECT(0xe0, gbc.readMem(0xe8c0));
        // CB E0 02BA
        gbc.setState(0xebc3, 0x7198, 0x9460, 0xcbb7, 0xb4bd, 0x3f50, 0x0, 0x0);
        gbc.writeMem(0xebc3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7198, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc3));
        EXPECT(0xe0, gbc.readMem(0xebc4));
        // CB E0 02BB
        gbc.setState(0x4f10, 0x7efd, 0x9440, 0x57fa, 0x990d, 0x5efe, 0x1, 0x0);
        gbc.writeMem(0x4f10, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7efd, gbc.sp());
        EXPECT(0x4f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02BC
        gbc.setState(0x7938, 0x14f7, 0x1240, 0x4c22, 0xeb4b, 0xcfe5, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x14f7, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02BD
        gbc.setState(0x4bcc, 0xd29a, 0x4240, 0xce4, 0x20ce, 0x78e7, 0x1, 0x1);
        gbc.writeMem(0x4bcc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd29a, gbc.sp());
        EXPECT(0x4bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02BE
        gbc.setState(0x8ff, 0x77e3, 0x4dc0, 0x9700, 0x7db2, 0xc16, 0x0, 0x1);
        gbc.writeMem(0x8ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0x901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02BF
        gbc.setState(0x2ba4, 0x80c7, 0x4060, 0xb020, 0xa384, 0xd52, 0x1, 0x1);
        gbc.writeMem(0x2ba4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x80c7, gbc.sp());
        EXPECT(0x2ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02C0
        gbc.setState(0x4405, 0xdc7f, 0x8140, 0x8e4c, 0x189c, 0x7d7f, 0x0, 0x0);
        gbc.writeMem(0x4405, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x4407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02C1
        gbc.setState(0x9b8e, 0x2dc9, 0xf8e0, 0xbda1, 0xe670, 0xb90, 0x0, 0x0);
        gbc.writeMem(0x9b8e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2dc9, gbc.sp());
        EXPECT(0x9b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b8e));
        EXPECT(0xe0, gbc.readMem(0x9b8f));
        // CB E0 02C2
        gbc.setState(0x1057, 0x2ea1, 0x1570, 0xca54, 0x1bdd, 0xd82c, 0x0, 0x1);
        gbc.writeMem(0x1057, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x1059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02C3
        gbc.setState(0xdae6, 0xa3d3, 0x6c30, 0x327a, 0xa41b, 0xff86, 0x0, 0x1);
        gbc.writeMem(0xdae6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0xdae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae6));
        EXPECT(0xe0, gbc.readMem(0xdae7));
        // CB E0 02C4
        gbc.setState(0x4206, 0xf461, 0xe890, 0x1118, 0xd0d, 0x3035, 0x0, 0x0);
        gbc.writeMem(0x4206, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf461, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02C5
        gbc.setState(0xc85, 0xbe4c, 0x92a0, 0x6461, 0x330f, 0x593b, 0x0, 0x0);
        gbc.writeMem(0xc85, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbe4c, gbc.sp());
        EXPECT(0xc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02C6
        gbc.setState(0xc75c, 0x63cd, 0x5cb0, 0x832e, 0xf04b, 0xfc6d, 0x1, 0x0);
        gbc.writeMem(0xc75c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x63cd, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75c));
        EXPECT(0xe0, gbc.readMem(0xc75d));
        // CB E0 02C7
        gbc.setState(0x4508, 0xe1db, 0x1cf0, 0x9ad1, 0x6bff, 0xa12e, 0x0, 0x0);
        gbc.writeMem(0x4508, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x450a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02C8
        gbc.setState(0x2808, 0x1b38, 0x2880, 0xec02, 0x730f, 0xc22a, 0x1, 0x0);
        gbc.writeMem(0x2808, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1b38, gbc.sp());
        EXPECT(0x280a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02C9
        gbc.setState(0xcba3, 0x9805, 0x7e10, 0x9d94, 0xa68e, 0xad56, 0x1, 0x1);
        gbc.writeMem(0xcba3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9805, gbc.sp());
        EXPECT(0xcba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba3));
        EXPECT(0xe0, gbc.readMem(0xcba4));
        // CB E0 02CA
        gbc.setState(0x42db, 0x8776, 0xb9e0, 0x6ac0, 0x3a53, 0x54c0, 0x0, 0x1);
        gbc.writeMem(0x42db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8776, gbc.sp());
        EXPECT(0x42dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02CB
        gbc.setState(0xbed7, 0x97ab, 0x5760, 0x8d52, 0x3521, 0x146a, 0x1, 0x0);
        gbc.writeMem(0xbed7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x97ab, gbc.sp());
        EXPECT(0xbed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed7));
        EXPECT(0xe0, gbc.readMem(0xbed8));
        // CB E0 02CC
        gbc.setState(0xc0f2, 0xbc2f, 0xf3b0, 0x9f46, 0xa373, 0x8ff0, 0x1, 0x0);
        gbc.writeMem(0xc0f2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f2));
        EXPECT(0xe0, gbc.readMem(0xc0f3));
        // CB E0 02CD
        gbc.setState(0xa4c5, 0xa12, 0xcb90, 0x89b, 0x834a, 0xcad, 0x0, 0x1);
        gbc.writeMem(0xa4c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa12, gbc.sp());
        EXPECT(0xa4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c5));
        EXPECT(0xe0, gbc.readMem(0xa4c6));
        // CB E0 02CE
        gbc.setState(0x57e3, 0xcf3c, 0x3d20, 0x8433, 0xb1e1, 0xc214, 0x0, 0x0);
        gbc.writeMem(0x57e3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcf3c, gbc.sp());
        EXPECT(0x57e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02CF
        gbc.setState(0x7a53, 0xba07, 0x3ae0, 0x55ac, 0xd8d3, 0x1948, 0x0, 0x0);
        gbc.writeMem(0x7a53, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xba07, gbc.sp());
        EXPECT(0x7a55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02D0
        gbc.setState(0x7051, 0x1c60, 0xa60, 0xf985, 0xed04, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0x7051, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1c60, gbc.sp());
        EXPECT(0x7053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02D1
        gbc.setState(0xd6e0, 0xe1c, 0xa3e0, 0x8b55, 0x6e30, 0xb0b1, 0x0, 0x1);
        gbc.writeMem(0xd6e0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe1c, gbc.sp());
        EXPECT(0xd6e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e0));
        EXPECT(0xe0, gbc.readMem(0xd6e1));
        // CB E0 02D2
        gbc.setState(0x25fa, 0xaf16, 0xbb10, 0x4d04, 0xb638, 0xc515, 0x0, 0x1);
        gbc.writeMem(0x25fa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xaf16, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02D3
        gbc.setState(0x8d26, 0xca71, 0xbee0, 0x2cda, 0x8f82, 0xb820, 0x0, 0x1);
        gbc.writeMem(0x8d26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xca71, gbc.sp());
        EXPECT(0x8d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d26));
        EXPECT(0xe0, gbc.readMem(0x8d27));
        // CB E0 02D4
        gbc.setState(0xd49e, 0xf22, 0x2760, 0x31ee, 0xeae5, 0xb40f, 0x1, 0x0);
        gbc.writeMem(0xd49e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf22, gbc.sp());
        EXPECT(0xd4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd49e));
        EXPECT(0xe0, gbc.readMem(0xd49f));
        // CB E0 02D5
        gbc.setState(0xaf, 0xcb62, 0xddd0, 0xa904, 0x3894, 0x2ca7, 0x0, 0x1);
        gbc.writeMem(0xaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcb62, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02D6
        gbc.setState(0xd5b2, 0x811e, 0x1a30, 0x43c1, 0x1430, 0x38a1, 0x0, 0x1);
        gbc.writeMem(0xd5b2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x811e, gbc.sp());
        EXPECT(0xd5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b2));
        EXPECT(0xe0, gbc.readMem(0xd5b3));
        // CB E0 02D7
        gbc.setState(0x5d18, 0xc47f, 0x4f30, 0x853b, 0xd3dc, 0xcf50, 0x1, 0x1);
        gbc.writeMem(0x5d18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc47f, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02D8
        gbc.setState(0x2be0, 0x6f12, 0xd1e0, 0xc8b7, 0x6fa1, 0x7801, 0x1, 0x0);
        gbc.writeMem(0x2be0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02D9
        gbc.setState(0x2fc4, 0xbd5c, 0xa3c0, 0xf742, 0xc4d3, 0xe435, 0x1, 0x0);
        gbc.writeMem(0x2fc4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd5c, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02DD
        gbc.setState(0x8bc1, 0x5136, 0x920, 0x50e2, 0xc080, 0x7940, 0x0, 0x0);
        gbc.writeMem(0x8bc1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5136, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bc1));
        EXPECT(0xe0, gbc.readMem(0x8bc2));
        // CB E0 02DE
        gbc.setState(0xc252, 0x2a8e, 0x2280, 0x7cda, 0x886, 0x52e, 0x0, 0x1);
        gbc.writeMem(0xc252, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2a8e, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc252));
        EXPECT(0xe0, gbc.readMem(0xc253));
        // CB E0 02DF
        gbc.setState(0x33ea, 0xcad3, 0xa440, 0xcdef, 0xe94a, 0x23b8, 0x0, 0x0);
        gbc.writeMem(0x33ea, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcad3, gbc.sp());
        EXPECT(0x33ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02E0
        gbc.setState(0x28b5, 0x1a30, 0xbf90, 0xf5a9, 0x2b37, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0x28b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1a30, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02E1
        gbc.setState(0x62e5, 0xfb95, 0xe2a0, 0x2f5b, 0xb6aa, 0xad27, 0x1, 0x1);
        gbc.writeMem(0x62e5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfb95, gbc.sp());
        EXPECT(0x62e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02E3
        gbc.setState(0x83c8, 0xa506, 0x4590, 0xfc3c, 0x67ba, 0x8da5, 0x0, 0x1);
        gbc.writeMem(0x83c8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0x83ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c8));
        EXPECT(0xe0, gbc.readMem(0x83c9));
        // CB E0 02E4
        gbc.setState(0x7b95, 0x9d34, 0x8bb0, 0x8b5b, 0x6e04, 0x57c2, 0x0, 0x1);
        gbc.writeMem(0x7b95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9d34, gbc.sp());
        EXPECT(0x7b97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02E5
        gbc.setState(0xabb, 0x2bb1, 0x8750, 0x8faf, 0xa174, 0xd2d9, 0x0, 0x1);
        gbc.writeMem(0xabb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2bb1, gbc.sp());
        EXPECT(0xabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02E6
        gbc.setState(0x66ce, 0x5b67, 0xefd0, 0xdfa9, 0xae59, 0xe2b0, 0x1, 0x0);
        gbc.writeMem(0x66ce, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5b67, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02E7
        gbc.setState(0x6ae2, 0x6915, 0x6490, 0xd885, 0xb5e5, 0x6a3e, 0x0, 0x1);
        gbc.writeMem(0x6ae2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6915, gbc.sp());
        EXPECT(0x6ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02E8
        gbc.setState(0xbf9, 0xe3fe, 0xace0, 0x63c8, 0xdc64, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0xbf9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe3fe, gbc.sp());
        EXPECT(0xbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02E9
        gbc.setState(0x7eef, 0xf949, 0xbdb0, 0xb3fb, 0x1d97, 0x652, 0x1, 0x0);
        gbc.writeMem(0x7eef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf949, gbc.sp());
        EXPECT(0x7ef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02EA
        gbc.setState(0xd66e, 0x3b9e, 0xaf0, 0x2ddd, 0x336c, 0x1a8c, 0x1, 0x1);
        gbc.writeMem(0xd66e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b9e, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd66e));
        EXPECT(0xe0, gbc.readMem(0xd66f));
        // CB E0 02EB
        gbc.setState(0xc262, 0x522c, 0xccb0, 0xa961, 0x73e2, 0xba3c, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x522c, gbc.sp());
        EXPECT(0xc264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc262));
        EXPECT(0xe0, gbc.readMem(0xc263));
        // CB E0 02EC
        gbc.setState(0xbab1, 0x3a5a, 0x8cb0, 0x6e6e, 0x84d9, 0xd1ff, 0x0, 0x1);
        gbc.writeMem(0xbab1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0xbab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab1));
        EXPECT(0xe0, gbc.readMem(0xbab2));
        // CB E0 02ED
        gbc.setState(0x525d, 0x94a9, 0x9cc0, 0x1a98, 0x9c50, 0xba84, 0x0, 0x1);
        gbc.writeMem(0x525d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x94a9, gbc.sp());
        EXPECT(0x525f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02EE
        gbc.setState(0x48de, 0xbef7, 0xd40, 0xc492, 0x6d89, 0x9090, 0x1, 0x0);
        gbc.writeMem(0x48de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbef7, gbc.sp());
        EXPECT(0x48e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02EF
        gbc.setState(0x323f, 0x1630, 0x7e00, 0xed4e, 0x8f28, 0x6a79, 0x1, 0x1);
        gbc.writeMem(0x323f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1630, gbc.sp());
        EXPECT(0x3241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02F0
        gbc.setState(0x9d9f, 0x8c35, 0x1c70, 0xd856, 0xebd2, 0xd528, 0x1, 0x0);
        gbc.writeMem(0x9d9f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8c35, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d9f));
        EXPECT(0xe0, gbc.readMem(0x9da0));
        // CB E0 02F1
        gbc.setState(0x3f5, 0x2824, 0xc320, 0x63f2, 0x15af, 0x4b41, 0x0, 0x0);
        gbc.writeMem(0x3f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2824, gbc.sp());
        EXPECT(0x3f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 02F2
        gbc.setState(0xb9af, 0xbf34, 0xbae0, 0x7423, 0xb148, 0xaa62, 0x1, 0x1);
        gbc.writeMem(0xb9af, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbf34, gbc.sp());
        EXPECT(0xb9b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9af));
        EXPECT(0xe0, gbc.readMem(0xb9b0));
        // CB E0 02F3
        gbc.setState(0xda62, 0x4ab1, 0xb8b0, 0xbaff, 0x6e8b, 0xcc37, 0x0, 0x0);
        gbc.writeMem(0xda62, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4ab1, gbc.sp());
        EXPECT(0xda64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda62));
        EXPECT(0xe0, gbc.readMem(0xda63));
        // CB E0 02F4
        gbc.setState(0x984e, 0x9bbc, 0x5b70, 0xf703, 0x242a, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0x984e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9bbc, gbc.sp());
        EXPECT(0x9850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x984e));
        EXPECT(0xe0, gbc.readMem(0x984f));
        // CB E0 02F5
        gbc.setState(0x9982, 0xdeb7, 0x9e0, 0xb1f2, 0x3208, 0x3024, 0x1, 0x1);
        gbc.writeMem(0x9982, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdeb7, gbc.sp());
        EXPECT(0x9984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9982));
        EXPECT(0xe0, gbc.readMem(0x9983));
        // CB E0 02F6
        gbc.setState(0xb7cd, 0x5ce2, 0x7060, 0xaa2b, 0x2181, 0x75cf, 0x0, 0x1);
        gbc.writeMem(0xb7cd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5ce2, gbc.sp());
        EXPECT(0xb7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cd));
        EXPECT(0xe0, gbc.readMem(0xb7ce));
        // CB E0 02F7
        gbc.setState(0xc498, 0x3224, 0xccf0, 0x3f20, 0xf911, 0x7a4c, 0x0, 0x1);
        gbc.writeMem(0xc498, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3224, gbc.sp());
        EXPECT(0xc49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc498));
        EXPECT(0xe0, gbc.readMem(0xc499));
        // CB E0 02F9
        gbc.setState(0xedb5, 0xd511, 0xc2b0, 0x4dcc, 0xd0c8, 0x52be, 0x0, 0x0);
        gbc.writeMem(0xedb5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd511, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb5));
        EXPECT(0xe0, gbc.readMem(0xedb6));
        // CB E0 02FA
        gbc.setState(0x3fa0, 0x22cd, 0xfb50, 0x28a2, 0xdcf1, 0xc199, 0x0, 0x1);
        gbc.writeMem(0x3fa0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x22cd, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 02FB
        gbc.setState(0xc84f, 0x97d5, 0x69f0, 0x4eb3, 0xc108, 0xb392, 0x0, 0x1);
        gbc.writeMem(0xc84f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x97d5, gbc.sp());
        EXPECT(0xc851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84f));
        EXPECT(0xe0, gbc.readMem(0xc850));
        // CB E0 02FC
        gbc.setState(0xac95, 0x287, 0x9a50, 0x6654, 0x13c8, 0x13a4, 0x0, 0x1);
        gbc.writeMem(0xac95, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x287, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac95));
        EXPECT(0xe0, gbc.readMem(0xac96));
        // CB E0 02FD
        gbc.setState(0x8e45, 0xa28e, 0xf40, 0xa792, 0x69d6, 0x2011, 0x0, 0x1);
        gbc.writeMem(0x8e45, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x8e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e45));
        EXPECT(0xe0, gbc.readMem(0x8e46));
        // CB E0 02FE
        gbc.setState(0xdb42, 0xf453, 0xa900, 0x6838, 0x77a1, 0x776d, 0x1, 0x1);
        gbc.writeMem(0xdb42, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0xdb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb42));
        EXPECT(0xe0, gbc.readMem(0xdb43));
        // CB E0 02FF
        gbc.setState(0x2d40, 0xe210, 0xf120, 0xb4ef, 0xd79, 0x36cc, 0x0, 0x1);
        gbc.writeMem(0x2d40, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe210, gbc.sp());
        EXPECT(0x2d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0300
        gbc.setState(0x7471, 0xe40b, 0xb630, 0xc7cd, 0x162d, 0x446e, 0x0, 0x1);
        gbc.writeMem(0x7471, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe40b, gbc.sp());
        EXPECT(0x7473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0301
        gbc.setState(0x2ac7, 0xfa76, 0x2630, 0xb753, 0x1669, 0x6aaf, 0x1, 0x1);
        gbc.writeMem(0x2ac7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0x2ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0303
        gbc.setState(0x6507, 0x11e, 0x8f0, 0xb35a, 0x7d6f, 0x435, 0x0, 0x1);
        gbc.writeMem(0x6507, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11e, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0304
        gbc.setState(0x3c9e, 0x8b72, 0xeba0, 0x2806, 0x2b1b, 0x5b7, 0x1, 0x0);
        gbc.writeMem(0x3c9e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8b72, gbc.sp());
        EXPECT(0x3ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0305
        gbc.setState(0x3e1a, 0xc859, 0x9c60, 0x82d1, 0xc77f, 0x724a, 0x1, 0x0);
        gbc.writeMem(0x3e1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc859, gbc.sp());
        EXPECT(0x3e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0306
        gbc.setState(0x6443, 0x4d8f, 0x5b90, 0x8110, 0x117c, 0x583, 0x1, 0x0);
        gbc.writeMem(0x6443, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4d8f, gbc.sp());
        EXPECT(0x6445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0307
        gbc.setState(0xb6b1, 0x1a8a, 0xaa50, 0x402b, 0xe061, 0xbac6, 0x1, 0x0);
        gbc.writeMem(0xb6b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1a8a, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b1));
        EXPECT(0xe0, gbc.readMem(0xb6b2));
        // CB E0 0308
        gbc.setState(0x35c3, 0xc246, 0xbc90, 0xe1e1, 0x6a05, 0x6f77, 0x0, 0x1);
        gbc.writeMem(0x35c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc246, gbc.sp());
        EXPECT(0x35c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0309
        gbc.setState(0x30f, 0xcc65, 0xf150, 0xd17c, 0x3e65, 0xb2e4, 0x1, 0x1);
        gbc.writeMem(0x30f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0x311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 030A
        gbc.setState(0x264a, 0xc63b, 0xf430, 0x1918, 0xfb9b, 0xc3c1, 0x0, 0x1);
        gbc.writeMem(0x264a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc63b, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 030B
        gbc.setState(0x4a0d, 0xc73d, 0x4c0, 0x4806, 0xb60e, 0xbdc0, 0x1, 0x1);
        gbc.writeMem(0x4a0d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0x4a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 030C
        gbc.setState(0xafaf, 0xb939, 0xf3b0, 0x759d, 0x2056, 0xde72, 0x1, 0x0);
        gbc.writeMem(0xafaf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb939, gbc.sp());
        EXPECT(0xafb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafaf));
        EXPECT(0xe0, gbc.readMem(0xafb0));
        // CB E0 030D
        gbc.setState(0x4ead, 0xb10, 0xf840, 0xc371, 0x5cbc, 0xc5a8, 0x1, 0x0);
        gbc.writeMem(0x4ead, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb10, gbc.sp());
        EXPECT(0x4eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 030E
        gbc.setState(0x47dc, 0xa8c5, 0xd1d0, 0x63d1, 0x5f04, 0x32c5, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa8c5, gbc.sp());
        EXPECT(0x47de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 030F
        gbc.setState(0x2fe5, 0x15c8, 0x74b0, 0xc6e6, 0x979f, 0x3e23, 0x1, 0x1);
        gbc.writeMem(0x2fe5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x15c8, gbc.sp());
        EXPECT(0x2fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0310
        gbc.setState(0xc7c6, 0x18ab, 0xa8d0, 0x5a8c, 0xf7b7, 0x3902, 0x0, 0x1);
        gbc.writeMem(0xc7c6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x18ab, gbc.sp());
        EXPECT(0xc7c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c6));
        EXPECT(0xe0, gbc.readMem(0xc7c7));
        // CB E0 0311
        gbc.setState(0x4186, 0x7c85, 0x9bc0, 0xb01e, 0x6cb3, 0xde55, 0x1, 0x1);
        gbc.writeMem(0x4186, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7c85, gbc.sp());
        EXPECT(0x4188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0312
        gbc.setState(0xbc8d, 0xbc9c, 0x1800, 0x2b55, 0x409a, 0xd7bf, 0x1, 0x0);
        gbc.writeMem(0xbc8d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbc9c, gbc.sp());
        EXPECT(0xbc8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8d));
        EXPECT(0xe0, gbc.readMem(0xbc8e));
        // CB E0 0313
        gbc.setState(0x88d1, 0x2b47, 0xa440, 0x167f, 0x6dc7, 0x8fa3, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2b47, gbc.sp());
        EXPECT(0x88d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88d1));
        EXPECT(0xe0, gbc.readMem(0x88d2));
        // CB E0 0314
        gbc.setState(0xc6f5, 0xa776, 0x4640, 0xb28d, 0xfa06, 0x2cdd, 0x1, 0x0);
        gbc.writeMem(0xc6f5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa776, gbc.sp());
        EXPECT(0xc6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f5));
        EXPECT(0xe0, gbc.readMem(0xc6f6));
        // CB E0 0315
        gbc.setState(0x15b3, 0xdc50, 0x47d0, 0xb09e, 0xdaa, 0xfcfb, 0x1, 0x0);
        gbc.writeMem(0x15b3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdc50, gbc.sp());
        EXPECT(0x15b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0316
        gbc.setState(0x44ea, 0x20a, 0xd7d0, 0x310e, 0x7e7e, 0xe767, 0x1, 0x1);
        gbc.writeMem(0x44ea, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x20a, gbc.sp());
        EXPECT(0x44ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0317
        gbc.setState(0x6805, 0x6ccd, 0x4060, 0x2592, 0xd3ed, 0x524b, 0x0, 0x0);
        gbc.writeMem(0x6805, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6ccd, gbc.sp());
        EXPECT(0x6807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0318
        gbc.setState(0xed88, 0xf08f, 0x76b0, 0x5551, 0xb030, 0x15fa, 0x0, 0x0);
        gbc.writeMem(0xed88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf08f, gbc.sp());
        EXPECT(0xed8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed88));
        EXPECT(0xe0, gbc.readMem(0xed89));
        // CB E0 0319
        gbc.setState(0xfa, 0x29fc, 0x6250, 0xa305, 0x7d23, 0x9891, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x29fc, gbc.sp());
        EXPECT(0xfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 031A
        gbc.setState(0x245c, 0x54ae, 0x5200, 0x42d6, 0x505, 0xec52, 0x1, 0x0);
        gbc.writeMem(0x245c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 031B
        gbc.setState(0xaadc, 0x40b, 0xe680, 0x391b, 0x3939, 0xd701, 0x1, 0x1);
        gbc.writeMem(0xaadc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x40b, gbc.sp());
        EXPECT(0xaade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaadc));
        EXPECT(0xe0, gbc.readMem(0xaadd));
        // CB E0 031C
        gbc.setState(0x3c26, 0x42dc, 0xd550, 0x91fa, 0x69d3, 0xef1, 0x1, 0x1);
        gbc.writeMem(0x3c26, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x42dc, gbc.sp());
        EXPECT(0x3c28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 031D
        gbc.setState(0xc183, 0xd96f, 0x73b0, 0xd89a, 0x5998, 0xac7f, 0x1, 0x1);
        gbc.writeMem(0xc183, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd96f, gbc.sp());
        EXPECT(0xc185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc183));
        EXPECT(0xe0, gbc.readMem(0xc184));
        // CB E0 031E
        gbc.setState(0x49b1, 0x2108, 0xad30, 0x81f0, 0x6a06, 0xc0a, 0x0, 0x1);
        gbc.writeMem(0x49b1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x2108, gbc.sp());
        EXPECT(0x49b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 031F
        gbc.setState(0x8a30, 0xa252, 0x1f90, 0x7b2b, 0x716a, 0x46e3, 0x1, 0x0);
        gbc.writeMem(0x8a30, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa252, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a30));
        EXPECT(0xe0, gbc.readMem(0x8a31));
        // CB E0 0320
        gbc.setState(0x2103, 0x606, 0x4b90, 0x17a9, 0x88cf, 0xb93e, 0x1, 0x0);
        gbc.writeMem(0x2103, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x606, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0321
        gbc.setState(0x28a9, 0xfafa, 0xca20, 0x2e31, 0x2c81, 0xe5dd, 0x1, 0x1);
        gbc.writeMem(0x28a9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0x28ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0322
        gbc.setState(0x7ad7, 0xe57, 0x2940, 0x65f8, 0x5a42, 0x3aec, 0x1, 0x0);
        gbc.writeMem(0x7ad7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe57, gbc.sp());
        EXPECT(0x7ad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0323
        gbc.setState(0x5734, 0xa3ee, 0xe6a0, 0x4dcc, 0xfd5e, 0x8de9, 0x1, 0x0);
        gbc.writeMem(0x5734, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa3ee, gbc.sp());
        EXPECT(0x5736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0324
        gbc.setState(0x6e50, 0xa295, 0x8910, 0x3248, 0x5ba5, 0x88cf, 0x1, 0x0);
        gbc.writeMem(0x6e50, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa295, gbc.sp());
        EXPECT(0x6e52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0325
        gbc.setState(0xc542, 0xf389, 0xbea0, 0x7183, 0xc1df, 0x929d, 0x1, 0x1);
        gbc.writeMem(0xc542, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf389, gbc.sp());
        EXPECT(0xc544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc542));
        EXPECT(0xe0, gbc.readMem(0xc543));
        // CB E0 0326
        gbc.setState(0x6aa0, 0xa14d, 0xf370, 0xa28b, 0xa372, 0xcc9, 0x1, 0x1);
        gbc.writeMem(0x6aa0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa14d, gbc.sp());
        EXPECT(0x6aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0327
        gbc.setState(0x1aef, 0xff75, 0xc3c0, 0x7ed6, 0x4539, 0xb666, 0x1, 0x1);
        gbc.writeMem(0x1aef, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xff75, gbc.sp());
        EXPECT(0x1af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0328
        gbc.setState(0x94f3, 0x582f, 0x5e20, 0xb170, 0x87fc, 0x8420, 0x0, 0x0);
        gbc.writeMem(0x94f3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x582f, gbc.sp());
        EXPECT(0x94f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f3));
        EXPECT(0xe0, gbc.readMem(0x94f4));
        // CB E0 0329
        gbc.setState(0x227c, 0xc8fb, 0x6d00, 0xb1b5, 0xb0b9, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc8fb, gbc.sp());
        EXPECT(0x227e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 032A
        gbc.setState(0x80ac, 0x851e, 0x2780, 0x4f2, 0xa10b, 0x6574, 0x1, 0x0);
        gbc.writeMem(0x80ac, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x851e, gbc.sp());
        EXPECT(0x80ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ac));
        EXPECT(0xe0, gbc.readMem(0x80ad));
        // CB E0 032B
        gbc.setState(0x2ebc, 0x784, 0x9320, 0xe1ac, 0x7e2b, 0x1dae, 0x0, 0x0);
        gbc.writeMem(0x2ebc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0x2ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 032C
        gbc.setState(0xa3c2, 0x8b6c, 0x7640, 0xe13f, 0x5f81, 0x818c, 0x1, 0x1);
        gbc.writeMem(0xa3c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8b6c, gbc.sp());
        EXPECT(0xa3c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3c2));
        EXPECT(0xe0, gbc.readMem(0xa3c3));
        // CB E0 032D
        gbc.setState(0x2ff2, 0xddc7, 0x8230, 0x4791, 0xf45a, 0x67fa, 0x1, 0x0);
        gbc.writeMem(0x2ff2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xddc7, gbc.sp());
        EXPECT(0x2ff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 032E
        gbc.setState(0x9e78, 0x4466, 0xa90, 0xa45b, 0xc7f4, 0x34c6, 0x1, 0x0);
        gbc.writeMem(0x9e78, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0x9e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e78));
        EXPECT(0xe0, gbc.readMem(0x9e79));
        // CB E0 032F
        gbc.setState(0x4651, 0xb7c6, 0x83b0, 0x80f2, 0xe051, 0xbddb, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb7c6, gbc.sp());
        EXPECT(0x4653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0330
        gbc.setState(0x3698, 0xac84, 0x3ed0, 0xcaf2, 0xb699, 0xb82e, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xac84, gbc.sp());
        EXPECT(0x369a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0331
        gbc.setState(0x33c5, 0xa119, 0x98f0, 0xc81f, 0x5384, 0x5818, 0x0, 0x1);
        gbc.writeMem(0x33c5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa119, gbc.sp());
        EXPECT(0x33c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0333
        gbc.setState(0xc67b, 0xb1ba, 0xb970, 0xeeb6, 0x3fbd, 0x9a13, 0x1, 0x0);
        gbc.writeMem(0xc67b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb1ba, gbc.sp());
        EXPECT(0xc67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc67b));
        EXPECT(0xe0, gbc.readMem(0xc67c));
        // CB E0 0334
        gbc.setState(0x2cb4, 0x282e, 0x4fa0, 0x2210, 0x522e, 0xffde, 0x1, 0x0);
        gbc.writeMem(0x2cb4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x282e, gbc.sp());
        EXPECT(0x2cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0335
        gbc.setState(0x441d, 0x76f4, 0xda0, 0xcb0, 0x6f6b, 0x4f5, 0x0, 0x0);
        gbc.writeMem(0x441d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x441f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0336
        gbc.setState(0x605d, 0x858a, 0x2ea0, 0xbb56, 0xe6b8, 0xafbf, 0x0, 0x1);
        gbc.writeMem(0x605d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x858a, gbc.sp());
        EXPECT(0x605f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0337
        gbc.setState(0x404d, 0x7e53, 0x21a0, 0xfff4, 0xcbea, 0xa41d, 0x1, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7e53, gbc.sp());
        EXPECT(0x404f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0338
        gbc.setState(0xe440, 0x5591, 0xff50, 0x85ec, 0x9a3, 0x1da, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5591, gbc.sp());
        EXPECT(0xe442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe440));
        EXPECT(0xe0, gbc.readMem(0xe441));
        // CB E0 0339
        gbc.setState(0xa57b, 0x43e7, 0x31e0, 0xa5fa, 0xcfae, 0xd35b, 0x0, 0x1);
        gbc.writeMem(0xa57b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x43e7, gbc.sp());
        EXPECT(0xa57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57b));
        EXPECT(0xe0, gbc.readMem(0xa57c));
        // CB E0 033A
        gbc.setState(0x16dd, 0x746d, 0xf2f0, 0x99b0, 0x6501, 0x7728, 0x1, 0x0);
        gbc.writeMem(0x16dd, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x746d, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 033B
        gbc.setState(0x8213, 0xd1, 0xddb0, 0x452a, 0x6921, 0x8e49, 0x1, 0x1);
        gbc.writeMem(0x8213, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd1, gbc.sp());
        EXPECT(0x8215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8213));
        EXPECT(0xe0, gbc.readMem(0x8214));
        // CB E0 033C
        gbc.setState(0xd05d, 0x3afb, 0x96e0, 0xabd3, 0x8cb1, 0xf210, 0x1, 0x0);
        gbc.writeMem(0xd05d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3afb, gbc.sp());
        EXPECT(0xd05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05d));
        EXPECT(0xe0, gbc.readMem(0xd05e));
        // CB E0 033D
        gbc.setState(0x72a4, 0x1130, 0x8490, 0xd8d1, 0xbdf0, 0x1dd3, 0x1, 0x0);
        gbc.writeMem(0x72a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1130, gbc.sp());
        EXPECT(0x72a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 033E
        gbc.setState(0x1631, 0xfdc0, 0x43d0, 0x5073, 0x38bb, 0x97c0, 0x1, 0x1);
        gbc.writeMem(0x1631, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfdc0, gbc.sp());
        EXPECT(0x1633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 033F
        gbc.setState(0xbdf6, 0x63c7, 0xe5f0, 0xa0fb, 0x5837, 0xe650, 0x0, 0x1);
        gbc.writeMem(0xbdf6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x63c7, gbc.sp());
        EXPECT(0xbdf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf6));
        EXPECT(0xe0, gbc.readMem(0xbdf7));
        // CB E0 0340
        gbc.setState(0xa856, 0xc16, 0x2f0, 0x632a, 0xf802, 0x85ff, 0x0, 0x1);
        gbc.writeMem(0xa856, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0xa858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa856));
        EXPECT(0xe0, gbc.readMem(0xa857));
        // CB E0 0341
        gbc.setState(0x6c18, 0xff83, 0x9300, 0x3c79, 0xac78, 0x7527, 0x0, 0x0);
        gbc.writeMem(0x6c18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff83, gbc.sp());
        EXPECT(0x6c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0342
        gbc.setState(0xd362, 0x3170, 0x37c0, 0x8e2b, 0x9af5, 0x7c4b, 0x0, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3170, gbc.sp());
        EXPECT(0xd364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd362));
        EXPECT(0xe0, gbc.readMem(0xd363));
        // CB E0 0343
        gbc.setState(0x74ae, 0x5b7a, 0xc90, 0xfe69, 0x39b9, 0xebee, 0x1, 0x0);
        gbc.writeMem(0x74ae, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5b7a, gbc.sp());
        EXPECT(0x74b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0344
        gbc.setState(0xea6a, 0xf645, 0x3dc0, 0x8855, 0x6426, 0x219d, 0x0, 0x1);
        gbc.writeMem(0xea6a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf645, gbc.sp());
        EXPECT(0xea6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea6a));
        EXPECT(0xe0, gbc.readMem(0xea6b));
        // CB E0 0345
        gbc.setState(0xc746, 0x6b59, 0x5d60, 0x53d0, 0xa20c, 0xeaf7, 0x1, 0x1);
        gbc.writeMem(0xc746, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b59, gbc.sp());
        EXPECT(0xc748, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc746));
        EXPECT(0xe0, gbc.readMem(0xc747));
        // CB E0 0346
        gbc.setState(0xa7e2, 0x4d95, 0xf0d0, 0x7a0, 0xcab6, 0x1343, 0x1, 0x1);
        gbc.writeMem(0xa7e2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0xa7e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e2));
        EXPECT(0xe0, gbc.readMem(0xa7e3));
        // CB E0 0347
        gbc.setState(0x3a7, 0x7fad, 0xe9c0, 0xbb90, 0x8154, 0x248a, 0x1, 0x0);
        gbc.writeMem(0x3a7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7fad, gbc.sp());
        EXPECT(0x3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0348
        gbc.setState(0xe448, 0x5929, 0xb810, 0x1d9, 0x6e48, 0x3483, 0x0, 0x0);
        gbc.writeMem(0xe448, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5929, gbc.sp());
        EXPECT(0xe44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe448));
        EXPECT(0xe0, gbc.readMem(0xe449));
        // CB E0 0349
        gbc.setState(0x968b, 0x40c4, 0x7640, 0xd714, 0x8f9d, 0x46ce, 0x0, 0x1);
        gbc.writeMem(0x968b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0x968d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968b));
        EXPECT(0xe0, gbc.readMem(0x968c));
        // CB E0 034A
        gbc.setState(0xd565, 0x5e99, 0x1880, 0x13cc, 0xf201, 0x7135, 0x0, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5e99, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd565));
        EXPECT(0xe0, gbc.readMem(0xd566));
        // CB E0 034B
        gbc.setState(0xa0a1, 0x235f, 0x1220, 0x1099, 0xd93f, 0xcd22, 0x1, 0x0);
        gbc.writeMem(0xa0a1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x235f, gbc.sp());
        EXPECT(0xa0a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a1));
        EXPECT(0xe0, gbc.readMem(0xa0a2));
        // CB E0 034C
        gbc.setState(0x2418, 0xd1d3, 0xa490, 0x9c71, 0x9638, 0xe04d, 0x1, 0x1);
        gbc.writeMem(0x2418, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd1d3, gbc.sp());
        EXPECT(0x241a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 034D
        gbc.setState(0x3710, 0x42f1, 0x56d0, 0xfaaa, 0x5392, 0xe1d, 0x0, 0x0);
        gbc.writeMem(0x3710, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x42f1, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 034E
        gbc.setState(0xc53b, 0xe7dc, 0x7cb0, 0xec42, 0x5594, 0x87f5, 0x0, 0x1);
        gbc.writeMem(0xc53b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0xc53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc53b));
        EXPECT(0xe0, gbc.readMem(0xc53c));
        // CB E0 034F
        gbc.setState(0x3d18, 0x7548, 0xa2d0, 0xa41c, 0x6267, 0x9f3d, 0x0, 0x0);
        gbc.writeMem(0x3d18, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7548, gbc.sp());
        EXPECT(0x3d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0350
        gbc.setState(0x61f6, 0xb0d6, 0x3410, 0x8ab1, 0x46c7, 0x9fba, 0x1, 0x1);
        gbc.writeMem(0x61f6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb0d6, gbc.sp());
        EXPECT(0x61f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0351
        gbc.setState(0x26f7, 0x6834, 0x4ce0, 0x90fb, 0x1a8a, 0xcc96, 0x1, 0x1);
        gbc.writeMem(0x26f7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6834, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0353
        gbc.setState(0x432f, 0x26b6, 0x30f0, 0x7c9b, 0xacf2, 0xd3fd, 0x0, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x26b6, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0354
        gbc.setState(0xd7bf, 0x6c1a, 0x83d0, 0x784e, 0x71ff, 0x8f18, 0x0, 0x1);
        gbc.writeMem(0xd7bf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6c1a, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bf));
        EXPECT(0xe0, gbc.readMem(0xd7c0));
        // CB E0 0355
        gbc.setState(0xef4f, 0x7e72, 0xe2b0, 0x93c0, 0xa695, 0x80ba, 0x1, 0x0);
        gbc.writeMem(0xef4f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e72, gbc.sp());
        EXPECT(0xef51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4f));
        EXPECT(0xe0, gbc.readMem(0xef50));
        // CB E0 0356
        gbc.setState(0x4554, 0x45, 0x4ca0, 0x899f, 0x1723, 0x4603, 0x0, 0x1);
        gbc.writeMem(0x4554, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0x4556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0357
        gbc.setState(0x3da9, 0x13d1, 0x7000, 0x4faf, 0xab6a, 0xd550, 0x1, 0x1);
        gbc.writeMem(0x3da9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x13d1, gbc.sp());
        EXPECT(0x3dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0359
        gbc.setState(0x4181, 0xb987, 0x3b20, 0x5862, 0x2b9, 0xb8da, 0x1, 0x0);
        gbc.writeMem(0x4181, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0x4183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 035A
        gbc.setState(0x7e52, 0x8554, 0x4030, 0xd523, 0x578d, 0x7e5b, 0x1, 0x1);
        gbc.writeMem(0x7e52, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0x7e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 035B
        gbc.setState(0xde55, 0x704c, 0x20a0, 0x2852, 0xb37c, 0x734f, 0x0, 0x1);
        gbc.writeMem(0xde55, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0xde57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde55));
        EXPECT(0xe0, gbc.readMem(0xde56));
        // CB E0 035D
        gbc.setState(0x6f4a, 0x9ea8, 0x7a90, 0x5917, 0xbac1, 0x64e2, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9ea8, gbc.sp());
        EXPECT(0x6f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 035E
        gbc.setState(0x7df7, 0x7583, 0xa050, 0x9252, 0x8773, 0x4b72, 0x0, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7583, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 035F
        gbc.setState(0x8b8, 0xd9f2, 0x8800, 0x51bf, 0xe24, 0x366a, 0x0, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd9f2, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0360
        gbc.setState(0xc97d, 0x7491, 0x4560, 0x9721, 0x8ef0, 0x5c0e, 0x1, 0x0);
        gbc.writeMem(0xc97d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xc97f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97d));
        EXPECT(0xe0, gbc.readMem(0xc97e));
        // CB E0 0361
        gbc.setState(0xc560, 0x8e72, 0x5270, 0x5c2c, 0x3c3a, 0x1d38, 0x1, 0x1);
        gbc.writeMem(0xc560, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8e72, gbc.sp());
        EXPECT(0xc562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc560));
        EXPECT(0xe0, gbc.readMem(0xc561));
        // CB E0 0362
        gbc.setState(0x3ff, 0xa012, 0x51e0, 0x2921, 0xa54b, 0x5868, 0x1, 0x1);
        gbc.writeMem(0x3ff, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0x401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0363
        gbc.setState(0x54c2, 0x52c6, 0x4d30, 0x40bb, 0x9fc0, 0xbaf2, 0x0, 0x0);
        gbc.writeMem(0x54c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x52c6, gbc.sp());
        EXPECT(0x54c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0364
        gbc.setState(0xb379, 0x4941, 0x44a0, 0xadc9, 0x7a3b, 0xed9d, 0x1, 0x1);
        gbc.writeMem(0xb379, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4941, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb379));
        EXPECT(0xe0, gbc.readMem(0xb37a));
        // CB E0 0365
        gbc.setState(0xd15f, 0x84be, 0x1940, 0xc04a, 0xab4d, 0xeab4, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x84be, gbc.sp());
        EXPECT(0xd161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd15f));
        EXPECT(0xe0, gbc.readMem(0xd160));
        // CB E0 0366
        gbc.setState(0x488a, 0x2c2d, 0xa490, 0xdeb7, 0x4034, 0x7d9e, 0x0, 0x1);
        gbc.writeMem(0x488a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0x488c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0367
        gbc.setState(0x6b4b, 0x19cd, 0xb230, 0xa1fb, 0x4cdc, 0xfc5a, 0x1, 0x0);
        gbc.writeMem(0x6b4b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x19cd, gbc.sp());
        EXPECT(0x6b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0368
        gbc.setState(0xed43, 0x22e5, 0xedd0, 0xc2aa, 0xaa4b, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0xed43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x22e5, gbc.sp());
        EXPECT(0xed45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed43));
        EXPECT(0xe0, gbc.readMem(0xed44));
        // CB E0 0369
        gbc.setState(0x71c2, 0xbc07, 0xb6d0, 0xbb35, 0x30c1, 0xf324, 0x0, 0x0);
        gbc.writeMem(0x71c2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbc07, gbc.sp());
        EXPECT(0x71c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 036A
        gbc.setState(0x2533, 0x7e6b, 0x19b0, 0xf59f, 0x7720, 0xe4ba, 0x0, 0x1);
        gbc.writeMem(0x2533, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e6b, gbc.sp());
        EXPECT(0x2535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 036B
        gbc.setState(0x8af1, 0xbca8, 0x2d00, 0x6910, 0x28c1, 0x9e5a, 0x1, 0x1);
        gbc.writeMem(0x8af1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbca8, gbc.sp());
        EXPECT(0x8af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af1));
        EXPECT(0xe0, gbc.readMem(0x8af2));
        // CB E0 036C
        gbc.setState(0xc2cc, 0xd8cb, 0x6460, 0x9c59, 0x978b, 0xe1fb, 0x1, 0x1);
        gbc.writeMem(0xc2cc, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd8cb, gbc.sp());
        EXPECT(0xc2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2cc));
        EXPECT(0xe0, gbc.readMem(0xc2cd));
        // CB E0 036D
        gbc.setState(0xe177, 0xf39, 0xfc50, 0xeab4, 0xf046, 0xba08, 0x0, 0x0);
        gbc.writeMem(0xe177, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf39, gbc.sp());
        EXPECT(0xe179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe177));
        EXPECT(0xe0, gbc.readMem(0xe178));
        // CB E0 036F
        gbc.setState(0x1e43, 0x5a24, 0x90a0, 0x8e78, 0xa4de, 0xffcd, 0x0, 0x0);
        gbc.writeMem(0x1e43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5a24, gbc.sp());
        EXPECT(0x1e45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0370
        gbc.setState(0x4178, 0xa8bc, 0x2340, 0xb16b, 0x39f2, 0x2459, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa8bc, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0371
        gbc.setState(0x1747, 0xd77d, 0x9b90, 0x2d3f, 0x2ebf, 0xa9cc, 0x1, 0x0);
        gbc.writeMem(0x1747, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0372
        gbc.setState(0x9202, 0x532e, 0x2cd0, 0x14c5, 0x1cf1, 0x6f8a, 0x1, 0x1);
        gbc.writeMem(0x9202, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0x9204, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9202));
        EXPECT(0xe0, gbc.readMem(0x9203));
        // CB E0 0373
        gbc.setState(0x8c56, 0xdda7, 0x3290, 0xc7cc, 0x41a1, 0x4160, 0x1, 0x1);
        gbc.writeMem(0x8c56, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdda7, gbc.sp());
        EXPECT(0x8c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c56));
        EXPECT(0xe0, gbc.readMem(0x8c57));
        // CB E0 0374
        gbc.setState(0x1d88, 0x891e, 0xb600, 0xadf4, 0xfa8f, 0xe01f, 0x1, 0x1);
        gbc.writeMem(0x1d88, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0375
        gbc.setState(0xc462, 0xa9d0, 0xa5d0, 0xc174, 0x3e31, 0x88c6, 0x1, 0x0);
        gbc.writeMem(0xc462, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa9d0, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc462));
        EXPECT(0xe0, gbc.readMem(0xc463));
        // CB E0 0377
        gbc.setState(0xdf5c, 0x5620, 0xe990, 0x1fe9, 0x2223, 0xc722, 0x1, 0x1);
        gbc.writeMem(0xdf5c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5620, gbc.sp());
        EXPECT(0xdf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5c));
        EXPECT(0xe0, gbc.readMem(0xdf5d));
        // CB E0 0379
        gbc.setState(0x6015, 0x187f, 0xcbd0, 0x70b1, 0xaae7, 0xdcf9, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x187f, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037A
        gbc.setState(0x72f0, 0x9710, 0x3490, 0x6fd4, 0x58df, 0xfbc9, 0x0, 0x0);
        gbc.writeMem(0x72f0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9710, gbc.sp());
        EXPECT(0x72f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037B
        gbc.setState(0x4e4, 0x34eb, 0x2070, 0x7c42, 0x6bb5, 0xc6a8, 0x1, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x34eb, gbc.sp());
        EXPECT(0x4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037C
        gbc.setState(0x214a, 0xcc81, 0x7290, 0xde04, 0x528b, 0x9e5e, 0x1, 0x1);
        gbc.writeMem(0x214a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcc81, gbc.sp());
        EXPECT(0x214c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037D
        gbc.setState(0x40a5, 0xd53f, 0x7dd0, 0xeee6, 0xd23a, 0x55a, 0x1, 0x1);
        gbc.writeMem(0x40a5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x40a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037E
        gbc.setState(0x710b, 0x5461, 0x81d0, 0x77e, 0x39dd, 0x5bc4, 0x1, 0x1);
        gbc.writeMem(0x710b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5461, gbc.sp());
        EXPECT(0x710d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 037F
        gbc.setState(0xd3a4, 0x52ab, 0xd4a0, 0x426b, 0x477c, 0x1921, 0x1, 0x1);
        gbc.writeMem(0xd3a4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x52ab, gbc.sp());
        EXPECT(0xd3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a4));
        EXPECT(0xe0, gbc.readMem(0xd3a5));
        // CB E0 0380
        gbc.setState(0x301e, 0x5938, 0xb470, 0xf009, 0xacf, 0x6cab, 0x0, 0x0);
        gbc.writeMem(0x301e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5938, gbc.sp());
        EXPECT(0x3020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0381
        gbc.setState(0xc64f, 0xfab2, 0xd360, 0x6446, 0x5560, 0x2db3, 0x0, 0x0);
        gbc.writeMem(0xc64f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfab2, gbc.sp());
        EXPECT(0xc651, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc64f));
        EXPECT(0xe0, gbc.readMem(0xc650));
        // CB E0 0382
        gbc.setState(0xa5f1, 0x8a11, 0xe5e0, 0x6bae, 0x7267, 0xedc2, 0x0, 0x1);
        gbc.writeMem(0xa5f1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8a11, gbc.sp());
        EXPECT(0xa5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5f1));
        EXPECT(0xe0, gbc.readMem(0xa5f2));
        // CB E0 0383
        gbc.setState(0xb78b, 0x9628, 0xba40, 0xced8, 0x62ce, 0xd567, 0x1, 0x0);
        gbc.writeMem(0xb78b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9628, gbc.sp());
        EXPECT(0xb78d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78b));
        EXPECT(0xe0, gbc.readMem(0xb78c));
        // CB E0 0384
        gbc.setState(0x1e9b, 0x13ac, 0x7550, 0x937d, 0xf7a6, 0x98de, 0x1, 0x1);
        gbc.writeMem(0x1e9b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x13ac, gbc.sp());
        EXPECT(0x1e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0385
        gbc.setState(0xa5cb, 0xd454, 0xe6e0, 0x8c2c, 0x6181, 0xab7e, 0x0, 0x0);
        gbc.writeMem(0xa5cb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd454, gbc.sp());
        EXPECT(0xa5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cb));
        EXPECT(0xe0, gbc.readMem(0xa5cc));
        // CB E0 0386
        gbc.setState(0xebcf, 0x348a, 0x3130, 0x4d91, 0x5b77, 0xfa74, 0x1, 0x0);
        gbc.writeMem(0xebcf, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x348a, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcf));
        EXPECT(0xe0, gbc.readMem(0xebd0));
        // CB E0 0387
        gbc.setState(0x6b5, 0xc5b0, 0xf580, 0xcb16, 0x2bf5, 0x9689, 0x1, 0x0);
        gbc.writeMem(0x6b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0388
        gbc.setState(0xca32, 0x2447, 0x2910, 0x8f37, 0x8fc8, 0xeefb, 0x0, 0x1);
        gbc.writeMem(0xca32, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2447, gbc.sp());
        EXPECT(0xca34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca32));
        EXPECT(0xe0, gbc.readMem(0xca33));
        // CB E0 0389
        gbc.setState(0x477f, 0x7ab8, 0x20a0, 0x3f19, 0xd06a, 0x7faa, 0x1, 0x0);
        gbc.writeMem(0x477f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7ab8, gbc.sp());
        EXPECT(0x4781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 038A
        gbc.setState(0x16d1, 0xd640, 0x5370, 0xbb0a, 0xbd8e, 0xed10, 0x0, 0x1);
        gbc.writeMem(0x16d1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x16d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 038B
        gbc.setState(0x65c3, 0xb89d, 0xf0d0, 0xf29c, 0x96e6, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x65c3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb89d, gbc.sp());
        EXPECT(0x65c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 038C
        gbc.setState(0xaf0c, 0xfa63, 0x8860, 0x7187, 0xc56d, 0x7889, 0x1, 0x1);
        gbc.writeMem(0xaf0c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0xaf0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf0c));
        EXPECT(0xe0, gbc.readMem(0xaf0d));
        // CB E0 038D
        gbc.setState(0x41db, 0x37de, 0x9fc0, 0x14c4, 0x6f1c, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x41db, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0x41dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 038E
        gbc.setState(0x60e, 0x522c, 0x1300, 0xa68d, 0xc686, 0x28b5, 0x1, 0x1);
        gbc.writeMem(0x60e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x522c, gbc.sp());
        EXPECT(0x610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 038F
        gbc.setState(0x7be1, 0xe973, 0x500, 0x88b5, 0xaa6c, 0x6fa7, 0x1, 0x0);
        gbc.writeMem(0x7be1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0x7be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0390
        gbc.setState(0x605c, 0xfffc, 0x42f0, 0x2c19, 0x177d, 0x5dd4, 0x1, 0x1);
        gbc.writeMem(0x605c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfffc, gbc.sp());
        EXPECT(0x605e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0391
        gbc.setState(0x7e7d, 0x4291, 0xf3a0, 0xafba, 0x64b, 0xc914, 0x1, 0x0);
        gbc.writeMem(0x7e7d, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4291, gbc.sp());
        EXPECT(0x7e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0392
        gbc.setState(0xe0b5, 0x1684, 0xf6c0, 0xc99b, 0x7342, 0x5992, 0x0, 0x1);
        gbc.writeMem(0xe0b5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1684, gbc.sp());
        EXPECT(0xe0b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b5));
        EXPECT(0xe0, gbc.readMem(0xe0b6));
        // CB E0 0393
        gbc.setState(0x258f, 0x5871, 0xa7d0, 0xed5d, 0x519c, 0x6f3, 0x1, 0x0);
        gbc.writeMem(0x258f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5871, gbc.sp());
        EXPECT(0x2591, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0394
        gbc.setState(0x3db5, 0xa1d2, 0xe780, 0x830d, 0x3519, 0x74b3, 0x1, 0x0);
        gbc.writeMem(0x3db5, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x3db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 0395
        gbc.setState(0x49a, 0x57b3, 0x42f0, 0xcee4, 0x29b6, 0x6e76, 0x0, 0x0);
        gbc.writeMem(0x49a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x57b3, gbc.sp());
        EXPECT(0x49c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 0396
        gbc.setState(0xcd54, 0x1f77, 0x9e80, 0x4a41, 0xe328, 0x8a44, 0x1, 0x1);
        gbc.writeMem(0xcd54, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1f77, gbc.sp());
        EXPECT(0xcd56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd54));
        EXPECT(0xe0, gbc.readMem(0xcd55));
        // CB E0 0397
        gbc.setState(0xaf1a, 0xa6c0, 0x2730, 0xbcb2, 0x2664, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0xaf1a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa6c0, gbc.sp());
        EXPECT(0xaf1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1a));
        EXPECT(0xe0, gbc.readMem(0xaf1b));
        // CB E0 0398
        gbc.setState(0x9eeb, 0xd781, 0xe200, 0x9c4d, 0x5475, 0xd67c, 0x0, 0x0);
        gbc.writeMem(0x9eeb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0x9eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eeb));
        EXPECT(0xe0, gbc.readMem(0x9eec));
        // CB E0 0399
        gbc.setState(0x2142, 0x844, 0x6470, 0xb962, 0xaf1, 0x4aee, 0x1, 0x0);
        gbc.writeMem(0x2142, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x844, gbc.sp());
        EXPECT(0x2144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 039A
        gbc.setState(0x76c4, 0x13d0, 0x7bf0, 0x6fa6, 0x95bb, 0xe675, 0x0, 0x0);
        gbc.writeMem(0x76c4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x13d0, gbc.sp());
        EXPECT(0x76c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 039B
        gbc.setState(0x272f, 0xabea, 0xbc0, 0xa9b1, 0xf33a, 0xbe1, 0x0, 0x0);
        gbc.writeMem(0x272f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xabea, gbc.sp());
        EXPECT(0x2731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 039C
        gbc.setState(0xe765, 0xe414, 0xb200, 0xddab, 0x8e1b, 0x8f8d, 0x0, 0x0);
        gbc.writeMem(0xe765, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe414, gbc.sp());
        EXPECT(0xe767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe765));
        EXPECT(0xe0, gbc.readMem(0xe766));
        // CB E0 039D
        gbc.setState(0x570c, 0x8452, 0x2760, 0x1e51, 0xb1b4, 0x9748, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8452, gbc.sp());
        EXPECT(0x570e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 039E
        gbc.setState(0x2909, 0x5f8a, 0x1020, 0x937a, 0xd00f, 0xa2e2, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5f8a, gbc.sp());
        EXPECT(0x290b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 039F
        gbc.setState(0xa706, 0x1f08, 0x7c60, 0xe5ea, 0xd9d6, 0xaf01, 0x1, 0x0);
        gbc.writeMem(0xa706, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0xa708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa706));
        EXPECT(0xe0, gbc.readMem(0xa707));
        // CB E0 03A0
        gbc.setState(0x42d2, 0x5ad3, 0xbe20, 0x9989, 0xb85, 0xf22b, 0x1, 0x0);
        gbc.writeMem(0x42d2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5ad3, gbc.sp());
        EXPECT(0x42d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03A1
        gbc.setState(0x3acb, 0x465c, 0xba50, 0xc111, 0xb55f, 0xa56b, 0x1, 0x0);
        gbc.writeMem(0x3acb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x3acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03A2
        gbc.setState(0x9ccb, 0x67ab, 0x71d0, 0xe219, 0xe43c, 0x10fc, 0x1, 0x1);
        gbc.writeMem(0x9ccb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x67ab, gbc.sp());
        EXPECT(0x9ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccb));
        EXPECT(0xe0, gbc.readMem(0x9ccc));
        // CB E0 03A3
        gbc.setState(0x5aa4, 0x2879, 0xef10, 0x6cfb, 0x870d, 0x29e5, 0x1, 0x1);
        gbc.writeMem(0x5aa4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2879, gbc.sp());
        EXPECT(0x5aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03A4
        gbc.setState(0x7fda, 0xdd4c, 0x9e30, 0x1ca2, 0xd2ee, 0xd8ee, 0x1, 0x1);
        gbc.writeMem(0x7fda, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdd4c, gbc.sp());
        EXPECT(0x7fdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03A5
        gbc.setState(0x9646, 0x905d, 0xc2d0, 0x5577, 0xa67b, 0x2405, 0x1, 0x1);
        gbc.writeMem(0x9646, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x905d, gbc.sp());
        EXPECT(0x9648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9646));
        EXPECT(0xe0, gbc.readMem(0x9647));
        // CB E0 03A6
        gbc.setState(0x36e4, 0xbb4d, 0xb200, 0xd4da, 0xe536, 0x5046, 0x0, 0x0);
        gbc.writeMem(0x36e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbb4d, gbc.sp());
        EXPECT(0x36e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03A7
        gbc.setState(0xc643, 0x8bfa, 0xc240, 0x255e, 0x51d6, 0xdaf4, 0x1, 0x1);
        gbc.writeMem(0xc643, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8bfa, gbc.sp());
        EXPECT(0xc645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc643));
        EXPECT(0xe0, gbc.readMem(0xc644));
        // CB E0 03A8
        gbc.setState(0xefaa, 0x3179, 0x5c0, 0x6bc7, 0xb06e, 0xd40b, 0x0, 0x1);
        gbc.writeMem(0xefaa, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3179, gbc.sp());
        EXPECT(0xefac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefaa));
        EXPECT(0xe0, gbc.readMem(0xefab));
        // CB E0 03A9
        gbc.setState(0x8469, 0xaa72, 0x5640, 0x50a2, 0x5365, 0x8ded, 0x0, 0x1);
        gbc.writeMem(0x8469, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa72, gbc.sp());
        EXPECT(0x846b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8469));
        EXPECT(0xe0, gbc.readMem(0x846a));
        // CB E0 03AA
        gbc.setState(0xded7, 0x71b9, 0xecf0, 0x9bc1, 0xc7e9, 0xbfa1, 0x0, 0x1);
        gbc.writeMem(0xded7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x71b9, gbc.sp());
        EXPECT(0xded9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded7));
        EXPECT(0xe0, gbc.readMem(0xded8));
        // CB E0 03AB
        gbc.setState(0x8790, 0x978b, 0x1d50, 0x2cbe, 0x7dd1, 0xf45b, 0x0, 0x0);
        gbc.writeMem(0x8790, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x978b, gbc.sp());
        EXPECT(0x8792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8790));
        EXPECT(0xe0, gbc.readMem(0x8791));
        // CB E0 03AC
        gbc.setState(0x840, 0xfeb1, 0x5da0, 0xcd5a, 0x9c50, 0x3c7e, 0x0, 0x0);
        gbc.writeMem(0x840, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xfeb1, gbc.sp());
        EXPECT(0x842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03AD
        gbc.setState(0xcd9, 0xda87, 0xb760, 0x9b83, 0x37c, 0x364b, 0x0, 0x0);
        gbc.writeMem(0xcd9, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0xcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03AE
        gbc.setState(0xe670, 0xc8e, 0x9170, 0xc03a, 0x6df7, 0x3e49, 0x0, 0x0);
        gbc.writeMem(0xe670, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xc8e, gbc.sp());
        EXPECT(0xe672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe670));
        EXPECT(0xe0, gbc.readMem(0xe671));
        // CB E0 03AF
        gbc.setState(0x369b, 0xe8fe, 0xe150, 0x30d8, 0xb167, 0x6a2d, 0x0, 0x0);
        gbc.writeMem(0x369b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0x369d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03B0
        gbc.setState(0xe98, 0xbc5e, 0x5af0, 0x1a8, 0xdc5, 0xe5f3, 0x0, 0x0);
        gbc.writeMem(0xe98, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbc5e, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03B1
        gbc.setState(0x5bba, 0x630c, 0xef90, 0xe06a, 0x8210, 0x6419, 0x0, 0x1);
        gbc.writeMem(0x5bba, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x630c, gbc.sp());
        EXPECT(0x5bbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03B2
        gbc.setState(0x78ca, 0x92ae, 0xcb00, 0x7b74, 0x1f7c, 0x3d5d, 0x1, 0x1);
        gbc.writeMem(0x78ca, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x92ae, gbc.sp());
        EXPECT(0x78cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03B3
        gbc.setState(0x8487, 0x9974, 0xe50, 0x783b, 0xd1f1, 0xae03, 0x0, 0x1);
        gbc.writeMem(0x8487, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9974, gbc.sp());
        EXPECT(0x8489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8487));
        EXPECT(0xe0, gbc.readMem(0x8488));
        // CB E0 03B4
        gbc.setState(0xdb0f, 0x7ee9, 0x6400, 0x397e, 0xe7c3, 0x4b50, 0x1, 0x1);
        gbc.writeMem(0xdb0f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7ee9, gbc.sp());
        EXPECT(0xdb11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0f));
        EXPECT(0xe0, gbc.readMem(0xdb10));
        // CB E0 03B5
        gbc.setState(0x26e4, 0xc7bc, 0xd290, 0x2358, 0xc99a, 0xc3c7, 0x1, 0x1);
        gbc.writeMem(0x26e4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc7bc, gbc.sp());
        EXPECT(0x26e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03B6
        gbc.setState(0xcf19, 0xd529, 0x4470, 0xc972, 0x604e, 0xd626, 0x1, 0x0);
        gbc.writeMem(0xcf19, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd529, gbc.sp());
        EXPECT(0xcf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf19));
        EXPECT(0xe0, gbc.readMem(0xcf1a));
        // CB E0 03B7
        gbc.setState(0xe838, 0x2b9c, 0x44e0, 0xcecd, 0x310e, 0x9371, 0x0, 0x1);
        gbc.writeMem(0xe838, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2b9c, gbc.sp());
        EXPECT(0xe83a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe838));
        EXPECT(0xe0, gbc.readMem(0xe839));
        // CB E0 03B8
        gbc.setState(0xc405, 0x2ef6, 0x8a50, 0x49c6, 0x4746, 0x215b, 0x0, 0x1);
        gbc.writeMem(0xc405, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2ef6, gbc.sp());
        EXPECT(0xc407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc405));
        EXPECT(0xe0, gbc.readMem(0xc406));
        // CB E0 03B9
        gbc.setState(0x2769, 0x3b9a, 0x4170, 0xa0b7, 0xd6bf, 0xaace, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3b9a, gbc.sp());
        EXPECT(0x276b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03BA
        gbc.setState(0x67de, 0x2700, 0xf660, 0xee3f, 0x17f, 0x3169, 0x1, 0x0);
        gbc.writeMem(0x67de, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2700, gbc.sp());
        EXPECT(0x67e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03BB
        gbc.setState(0xb954, 0x1661, 0xd150, 0x9570, 0x9674, 0x3504, 0x0, 0x0);
        gbc.writeMem(0xb954, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1661, gbc.sp());
        EXPECT(0xb956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb954));
        EXPECT(0xe0, gbc.readMem(0xb955));
        // CB E0 03BC
        gbc.setState(0x1d2e, 0xca58, 0xfed0, 0x619e, 0xa2ea, 0x5ec9, 0x0, 0x0);
        gbc.writeMem(0x1d2e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xca58, gbc.sp());
        EXPECT(0x1d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03BD
        gbc.setState(0xa848, 0xe6b0, 0xf0a0, 0xa7e8, 0xeac2, 0x53a4, 0x1, 0x0);
        gbc.writeMem(0xa848, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe6b0, gbc.sp());
        EXPECT(0xa84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa848));
        EXPECT(0xe0, gbc.readMem(0xa849));
        // CB E0 03BE
        gbc.setState(0x273, 0x31ad, 0x4560, 0xdac2, 0xf384, 0xcd26, 0x1, 0x0);
        gbc.writeMem(0x273, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x31ad, gbc.sp());
        EXPECT(0x275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03BF
        gbc.setState(0xadb, 0xe999, 0x5830, 0x853, 0x8035, 0xeea1, 0x0, 0x1);
        gbc.writeMem(0xadb, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe999, gbc.sp());
        EXPECT(0xadd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03C0
        gbc.setState(0x1209, 0x8513, 0xf240, 0xe705, 0xf50a, 0x35c3, 0x1, 0x0);
        gbc.writeMem(0x1209, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8513, gbc.sp());
        EXPECT(0x120b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C1
        gbc.setState(0xb08c, 0x480d, 0xa810, 0x4ddc, 0x3d3c, 0x9847, 0x0, 0x0);
        gbc.writeMem(0xb08c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08c));
        EXPECT(0xe0, gbc.readMem(0xb08d));
        // CB E0 03C2
        gbc.setState(0x1176, 0xaabb, 0x1f80, 0xcd17, 0x329b, 0x23dd, 0x1, 0x1);
        gbc.writeMem(0x1176, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xaabb, gbc.sp());
        EXPECT(0x1178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C3
        gbc.setState(0x5121, 0xbf6f, 0x260, 0x5b33, 0xad3e, 0x9477, 0x0, 0x0);
        gbc.writeMem(0x5121, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbf6f, gbc.sp());
        EXPECT(0x5123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C4
        gbc.setState(0x4cc2, 0xe4b4, 0xe400, 0xde12, 0x57e0, 0x81a9, 0x0, 0x0);
        gbc.writeMem(0x4cc2, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe4b4, gbc.sp());
        EXPECT(0x4cc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C5
        gbc.setState(0xec03, 0x9306, 0x61a0, 0xb5ec, 0x1298, 0x4916, 0x0, 0x0);
        gbc.writeMem(0xec03, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9306, gbc.sp());
        EXPECT(0xec05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec03));
        EXPECT(0xe0, gbc.readMem(0xec04));
        // CB E0 03C6
        gbc.setState(0x424, 0xb14b, 0xa980, 0x8db6, 0xce46, 0xf429, 0x0, 0x0);
        gbc.writeMem(0x424, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb14b, gbc.sp());
        EXPECT(0x426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C7
        gbc.setState(0x97d7, 0x57a8, 0x9160, 0xd230, 0xf7b, 0xf699, 0x0, 0x1);
        gbc.writeMem(0x97d7, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d7));
        EXPECT(0xe0, gbc.readMem(0x97d8));
        // CB E0 03C8
        gbc.setState(0x7b43, 0x365e, 0x7740, 0xe4f5, 0xf258, 0x345d, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x365e, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03C9
        gbc.setState(0x1d9e, 0x15cc, 0xe410, 0x4135, 0x4fe0, 0xc24e, 0x0, 0x0);
        gbc.writeMem(0x1d9e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x15cc, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03CA
        gbc.setState(0xbc46, 0xc894, 0x1000, 0x538f, 0x4e4f, 0x96c3, 0x1, 0x0);
        gbc.writeMem(0xbc46, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc894, gbc.sp());
        EXPECT(0xbc48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc46));
        EXPECT(0xe0, gbc.readMem(0xbc47));
        // CB E0 03CB
        gbc.setState(0xbbad, 0xe0d5, 0x2a00, 0xf2bd, 0x98c5, 0x4d6d, 0x1, 0x1);
        gbc.writeMem(0xbbad, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe0d5, gbc.sp());
        EXPECT(0xbbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbad));
        EXPECT(0xe0, gbc.readMem(0xbbae));
        // CB E0 03CC
        gbc.setState(0x19, 0x22ce, 0xce90, 0xc52b, 0x57bd, 0xa92e, 0x0, 0x1);
        gbc.writeMem(0x19, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x22ce, gbc.sp());
        EXPECT(0x1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03CD
        gbc.setState(0x6b8a, 0x348e, 0xabe0, 0x8cff, 0xc0ce, 0xc46e, 0x1, 0x0);
        gbc.writeMem(0x6b8a, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x348e, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03CE
        gbc.setState(0xe311, 0x3ec1, 0xe860, 0xcfe3, 0x7040, 0x5fa2, 0x1, 0x0);
        gbc.writeMem(0xe311, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3ec1, gbc.sp());
        EXPECT(0xe313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe311));
        EXPECT(0xe0, gbc.readMem(0xe312));
        // CB E0 03CF
        gbc.setState(0x53b6, 0x9c94, 0xccb0, 0x194b, 0xdf08, 0x6e4d, 0x1, 0x1);
        gbc.writeMem(0x53b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9c94, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03D0
        gbc.setState(0xab98, 0x3c0b, 0x45b0, 0x8dd1, 0xc9e8, 0x3be5, 0x1, 0x0);
        gbc.writeMem(0xab98, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3c0b, gbc.sp());
        EXPECT(0xab9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab98));
        EXPECT(0xe0, gbc.readMem(0xab99));
        // CB E0 03D1
        gbc.setState(0xd941, 0x4150, 0xa40, 0x5785, 0x3f38, 0x6786, 0x1, 0x0);
        gbc.writeMem(0xd941, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4150, gbc.sp());
        EXPECT(0xd943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd941));
        EXPECT(0xe0, gbc.readMem(0xd942));
        // CB E0 03D3
        gbc.setState(0xe676, 0xead2, 0x9fd0, 0xa14a, 0x2b54, 0x3c58, 0x0, 0x0);
        gbc.writeMem(0xe676, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0xe678, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe676));
        EXPECT(0xe0, gbc.readMem(0xe677));
        // CB E0 03D4
        gbc.setState(0x9273, 0xda1, 0xff40, 0x5b55, 0x724d, 0x1d7, 0x1, 0x1);
        gbc.writeMem(0x9273, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x9275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9273));
        EXPECT(0xe0, gbc.readMem(0x9274));
        // CB E0 03D5
        gbc.setState(0x4001, 0xc9f, 0xed70, 0xa538, 0xa3c, 0xc5e0, 0x0, 0x1);
        gbc.writeMem(0x4001, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc9f, gbc.sp());
        EXPECT(0x4003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03D6
        gbc.setState(0x768f, 0xa857, 0xc8a0, 0x7fba, 0x314, 0x9046, 0x0, 0x1);
        gbc.writeMem(0x768f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa857, gbc.sp());
        EXPECT(0x7691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03D7
        gbc.setState(0x8b6, 0x7260, 0xfa50, 0x31b2, 0xa33d, 0xc138, 0x1, 0x0);
        gbc.writeMem(0x8b6, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0x8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03D8
        gbc.setState(0x985c, 0x16f, 0xe8d0, 0x968c, 0xad43, 0x45f5, 0x1, 0x1);
        gbc.writeMem(0x985c, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x16f, gbc.sp());
        EXPECT(0x985e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x985c));
        EXPECT(0xe0, gbc.readMem(0x985d));
        // CB E0 03D9
        gbc.setState(0x9412, 0xf84a, 0x16d0, 0x377f, 0xcae6, 0x4113, 0x1, 0x1);
        gbc.writeMem(0x9412, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf84a, gbc.sp());
        EXPECT(0x9414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9412));
        EXPECT(0xe0, gbc.readMem(0x9413));
        // CB E0 03DA
        gbc.setState(0x94f, 0x89c2, 0x7f90, 0x1133, 0x6f14, 0x576d, 0x1, 0x0);
        gbc.writeMem(0x94f, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x89c2, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03DB
        gbc.setState(0xae1e, 0x1c7, 0xb480, 0x7304, 0xb009, 0x967f, 0x1, 0x1);
        gbc.writeMem(0xae1e, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1c7, gbc.sp());
        EXPECT(0xae20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1e));
        EXPECT(0xe0, gbc.readMem(0xae1f));
        // CB E0 03DC
        gbc.setState(0xa95b, 0xf706, 0xa980, 0xd8db, 0xe6aa, 0x3624, 0x1, 0x1);
        gbc.writeMem(0xa95b, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf706, gbc.sp());
        EXPECT(0xa95d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95b));
        EXPECT(0xe0, gbc.readMem(0xa95c));
        // CB E0 03DD
        gbc.setState(0x96c1, 0xd373, 0x510, 0xfaab, 0x9208, 0x4098, 0x1, 0x0);
        gbc.writeMem(0x96c1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd373, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c1));
        EXPECT(0xe0, gbc.readMem(0x96c2));
        // CB E0 03DE
        gbc.setState(0xd2a3, 0xd01a, 0xf370, 0xac92, 0x9a5d, 0x8331, 0x1, 0x1);
        gbc.writeMem(0xd2a3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd01a, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a3));
        EXPECT(0xe0, gbc.readMem(0xd2a4));
        // CB E0 03DF
        gbc.setState(0x56b4, 0xc61e, 0x1a80, 0xc948, 0xd6c6, 0x38df, 0x1, 0x0);
        gbc.writeMem(0x56b4, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc61e, gbc.sp());
        EXPECT(0x56b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03E0
        gbc.setState(0xdf54, 0x9a3f, 0x44f0, 0xed8e, 0xed8a, 0xc746, 0x1, 0x0);
        gbc.writeMem(0xdf54, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9a3f, gbc.sp());
        EXPECT(0xdf56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf54));
        EXPECT(0xe0, gbc.readMem(0xdf55));
        // CB E0 03E1
        gbc.setState(0xe226, 0x15c9, 0xc120, 0x3c2c, 0xf4f9, 0x5062, 0x0, 0x0);
        gbc.writeMem(0xe226, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x15c9, gbc.sp());
        EXPECT(0xe228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe226));
        EXPECT(0xe0, gbc.readMem(0xe227));
        // CB E0 03E2
        gbc.setState(0x1492, 0x3bc0, 0x6ca0, 0x6b46, 0xbac9, 0xbf82, 0x1, 0x1);
        gbc.writeMem(0x1492, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x3bc0, gbc.sp());
        EXPECT(0x1494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB E0 03E3
        gbc.setState(0x8197, 0x5e6a, 0xeae0, 0xcc3a, 0xe582, 0xa5b, 0x1, 0x0);
        gbc.writeMem(0x8197, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5e6a, gbc.sp());
        EXPECT(0x8199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8197));
        EXPECT(0xe0, gbc.readMem(0x8198));
        // CB E0 03E4
        gbc.setState(0x2f05, 0x9e04, 0x4770, 0x9a2e, 0x9b69, 0x6a90, 0x0, 0x1);
        gbc.writeMem(0x2f05, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9e04, gbc.sp());
        EXPECT(0x2f07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB E0 03E5
        gbc.setState(0xd0a1, 0x174e, 0x6b0, 0xe230, 0xda79, 0x5f6f, 0x0, 0x1);
        gbc.writeMem(0xd0a1, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x174e, gbc.sp());
        EXPECT(0xd0a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0a1));
        EXPECT(0xe0, gbc.readMem(0xd0a2));
        // CB E0 03E6
        gbc.setState(0xbdd3, 0x9964, 0x74f0, 0x71f1, 0x7a08, 0xb21, 0x0, 0x1);
        gbc.writeMem(0xbdd3, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0xbdd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd3));
        EXPECT(0xe0, gbc.readMem(0xbdd4));
        // CB E0 03E7
        gbc.setState(0x69d0, 0xee77, 0x51b0, 0xe136, 0xc8db, 0x9b19, 0x0, 0x0);
        gbc.writeMem(0x69d0, { 0xcb, 0xe0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xee77, gbc.sp());
        EXPECT(0x69d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
