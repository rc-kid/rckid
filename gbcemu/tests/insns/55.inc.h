    TEST(gbcemu, opcode_55) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 55 0000
        gbc.setState(0xbb92, 0x4628, 0xf8b0, 0xd18c, 0x98d8, 0x7814, 0x1, 0x0);
        gbc.writeMem(0xbb92, { 0x55 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4628, gbc.sp());
        EXPECT(0xbb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbb92));
        // 55 0001
        gbc.setState(0xe156, 0x9096, 0xa400, 0xa734, 0xed9a, 0x5301, 0x1, 0x0);
        gbc.writeMem(0xe156, { 0x55 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9096, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe156));
        // 55 0002
        gbc.setState(0xcf4f, 0x1a02, 0xf290, 0x3a88, 0xae44, 0x6944, 0x0, 0x0);
        gbc.writeMem(0xcf4f, { 0x55 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0xcf50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcf4f));
        // 55 0003
        gbc.setState(0x86ec, 0x494, 0x6cd0, 0x2f5d, 0xb9b4, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x86ec, { 0x55 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x494, gbc.sp());
        EXPECT(0x86ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x86ec));
        // 55 0005
        gbc.setState(0x6095, 0xf048, 0x7f40, 0xe84d, 0x77bd, 0xfb23, 0x0, 0x1);
        gbc.writeMem(0x6095, { 0x55 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x6096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0007
        gbc.setState(0x294e, 0x59e8, 0x270, 0xf7b, 0xdc7e, 0xec7f, 0x1, 0x0);
        gbc.writeMem(0x294e, { 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x59e8, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0008
        gbc.setState(0x7a25, 0x788e, 0xde0, 0x43f5, 0xab22, 0x7166, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0x55 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x788e, gbc.sp());
        EXPECT(0x7a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 000B
        gbc.setState(0xdd1b, 0x685f, 0xe2c0, 0xfab1, 0xe343, 0x6d22, 0x1, 0x1);
        gbc.writeMem(0xdd1b, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x685f, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdd1b));
        // 55 000C
        gbc.setState(0xd856, 0xbade, 0xc130, 0x1d81, 0x2d74, 0x8830, 0x0, 0x1);
        gbc.writeMem(0xd856, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbade, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd856));
        // 55 000D
        gbc.setState(0x9fbd, 0x3c36, 0x5b50, 0x54d7, 0x94cd, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x9fbd, { 0x55 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3c36, gbc.sp());
        EXPECT(0x9fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9fbd));
        // 55 000E
        gbc.setState(0x642a, 0x3227, 0x7f70, 0x7ac9, 0x1902, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0x55 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x642b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 000F
        gbc.setState(0xe40c, 0x713b, 0xc60, 0xbbbc, 0x2638, 0xd6db, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0x55 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x713b, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe40c));
        // 55 0010
        gbc.setState(0x7331, 0x5e44, 0x8090, 0xc540, 0x7270, 0xa4ac, 0x1, 0x1);
        gbc.writeMem(0x7331, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5e44, gbc.sp());
        EXPECT(0x7332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0011
        gbc.setState(0x13f0, 0x4a90, 0xc20, 0x7087, 0x140b, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0x13f0, { 0x55 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4a90, gbc.sp());
        EXPECT(0x13f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0013
        gbc.setState(0x5fef, 0xe028, 0x2720, 0x909, 0x5b7c, 0x1c93, 0x1, 0x0);
        gbc.writeMem(0x5fef, { 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe028, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0014
        gbc.setState(0x4452, 0x916f, 0xc190, 0x4353, 0xd924, 0x8537, 0x1, 0x1);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x916f, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0015
        gbc.setState(0x9367, 0xf5cb, 0xb3a0, 0xdaf7, 0x529d, 0x2ef8, 0x0, 0x1);
        gbc.writeMem(0x9367, { 0x55 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf5cb, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9367));
        // 55 0016
        gbc.setState(0x2d78, 0xf591, 0xbce0, 0x5bea, 0x9578, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x2d78, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf591, gbc.sp());
        EXPECT(0x2d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0017
        gbc.setState(0xa3e5, 0xbaa4, 0xbf60, 0x8b86, 0x775b, 0x6e03, 0x1, 0x0);
        gbc.writeMem(0xa3e5, { 0x55 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbaa4, gbc.sp());
        EXPECT(0xa3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa3e5));
        // 55 0019
        gbc.setState(0xb9d1, 0x4baa, 0xee00, 0x812f, 0x9453, 0x875b, 0x0, 0x0);
        gbc.writeMem(0xb9d1, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4baa, gbc.sp());
        EXPECT(0xb9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb9d1));
        // 55 001C
        gbc.setState(0xc731, 0x72a9, 0xf3f0, 0x22d1, 0x9ec, 0x2b62, 0x0, 0x1);
        gbc.writeMem(0xc731, { 0x55 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x72a9, gbc.sp());
        EXPECT(0xc732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc731));
        // 55 001D
        gbc.setState(0xec5, 0xdaa9, 0x6440, 0xfce2, 0x8f0, 0x8807, 0x1, 0x0);
        gbc.writeMem(0xec5, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0xec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 001E
        gbc.setState(0xc29d, 0x50c9, 0x2c0, 0x2905, 0x63c2, 0x60d9, 0x0, 0x0);
        gbc.writeMem(0xc29d, { 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x50c9, gbc.sp());
        EXPECT(0xc29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc29d));
        // 55 001F
        gbc.setState(0x26c5, 0x7ddf, 0x270, 0xa8c6, 0xe692, 0xc99f, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0x26c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0020
        gbc.setState(0xa1cd, 0x5c45, 0x38c0, 0x29ca, 0xd4a5, 0xa89c, 0x1, 0x1);
        gbc.writeMem(0xa1cd, { 0x55 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5c45, gbc.sp());
        EXPECT(0xa1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa1cd));
        // 55 0021
        gbc.setState(0x49cf, 0x5693, 0x9240, 0xbeb2, 0x4863, 0x629b, 0x0, 0x0);
        gbc.writeMem(0x49cf, { 0x55 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x49d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0022
        gbc.setState(0x8861, 0xc966, 0x5e10, 0xc663, 0xa066, 0x9454, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc966, gbc.sp());
        EXPECT(0x8862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8861));
        // 55 0023
        gbc.setState(0x5133, 0xee2e, 0xb5e0, 0x13b6, 0x9469, 0xd04a, 0x1, 0x0);
        gbc.writeMem(0x5133, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xee2e, gbc.sp());
        EXPECT(0x5134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0024
        gbc.setState(0xd3f5, 0xa8f1, 0x330, 0xb024, 0x11d0, 0xeabc, 0x0, 0x1);
        gbc.writeMem(0xd3f5, { 0x55 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa8f1, gbc.sp());
        EXPECT(0xd3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd3f5));
        // 55 0025
        gbc.setState(0x1d80, 0x1eb, 0xddc0, 0x4561, 0x7a32, 0x1577, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0026
        gbc.setState(0x59dc, 0x7ffa, 0xc3f0, 0xfd3b, 0xa03b, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x59dc, { 0x55 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7ffa, gbc.sp());
        EXPECT(0x59dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0027
        gbc.setState(0x6dd8, 0x2d6c, 0x8020, 0xd5ee, 0x1ef7, 0x1ecb, 0x0, 0x0);
        gbc.writeMem(0x6dd8, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2d6c, gbc.sp());
        EXPECT(0x6dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0028
        gbc.setState(0xdf08, 0x650c, 0x5390, 0xb27f, 0x7617, 0xe218, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0x55 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x650c, gbc.sp());
        EXPECT(0xdf09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdf08));
        // 55 0029
        gbc.setState(0xdea1, 0x5fab, 0x6ba0, 0xa6ff, 0xde28, 0x87d4, 0x0, 0x1);
        gbc.writeMem(0xdea1, { 0x55 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5fab, gbc.sp());
        EXPECT(0xdea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdea1));
        // 55 002A
        gbc.setState(0x13ac, 0x1b6a, 0xd120, 0x2734, 0x6ee6, 0x91d9, 0x0, 0x0);
        gbc.writeMem(0x13ac, { 0x55 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1b6a, gbc.sp());
        EXPECT(0x13ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 002B
        gbc.setState(0x7ddf, 0x3813, 0x1b50, 0x6808, 0xa544, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0x7ddf, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3813, gbc.sp());
        EXPECT(0x7de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 002C
        gbc.setState(0x11a7, 0x39f7, 0x75d0, 0x89cd, 0x868c, 0x3c3c, 0x0, 0x1);
        gbc.writeMem(0x11a7, { 0x55 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x39f7, gbc.sp());
        EXPECT(0x11a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 002D
        gbc.setState(0x18ce, 0x81ef, 0x7b30, 0xded0, 0x6411, 0xe177, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0x55 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x81ef, gbc.sp());
        EXPECT(0x18cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 002E
        gbc.setState(0x862d, 0x19d, 0x50f0, 0x3832, 0x6647, 0x3ca5, 0x1, 0x1);
        gbc.writeMem(0x862d, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x19d, gbc.sp());
        EXPECT(0x862e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x862d));
        // 55 002F
        gbc.setState(0xa318, 0xb544, 0x6a60, 0xff79, 0xbc2d, 0x8f8e, 0x1, 0x1);
        gbc.writeMem(0xa318, { 0x55 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb544, gbc.sp());
        EXPECT(0xa319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa318));
        // 55 0030
        gbc.setState(0xaa22, 0xbb54, 0xeaa0, 0x6f5f, 0xb00c, 0xfdad, 0x1, 0x0);
        gbc.writeMem(0xaa22, { 0x55 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xbb54, gbc.sp());
        EXPECT(0xaa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaa22));
        // 55 0032
        gbc.setState(0x9a25, 0xe966, 0x5d60, 0x2ac5, 0x4e6e, 0x4910, 0x0, 0x0);
        gbc.writeMem(0x9a25, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0x9a26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9a25));
        // 55 0033
        gbc.setState(0xa97b, 0xdf77, 0x7610, 0xaa25, 0xba78, 0xd7eb, 0x0, 0x0);
        gbc.writeMem(0xa97b, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0xa97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa97b));
        // 55 0035
        gbc.setState(0xdca0, 0x7010, 0x2c80, 0x247e, 0xd548, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0xdca0, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0xdca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdca0));
        // 55 0036
        gbc.setState(0xb88a, 0x657d, 0x9770, 0x88f6, 0x3acc, 0x49ee, 0x0, 0x0);
        gbc.writeMem(0xb88a, { 0x55 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x657d, gbc.sp());
        EXPECT(0xb88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb88a));
        // 55 0037
        gbc.setState(0x1160, 0xe135, 0xc940, 0x22e5, 0xba89, 0x9132, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0x55 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe135, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0038
        gbc.setState(0x64c1, 0x95d8, 0xfd00, 0xc8b2, 0x529c, 0x476, 0x1, 0x0);
        gbc.writeMem(0x64c1, { 0x55 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x95d8, gbc.sp());
        EXPECT(0x64c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0039
        gbc.setState(0xeed8, 0xa6a5, 0x9f0, 0x3d09, 0x7dd7, 0x668, 0x1, 0x1);
        gbc.writeMem(0xeed8, { 0x55 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa6a5, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeed8));
        // 55 003A
        gbc.setState(0xaaa8, 0x1a77, 0xb890, 0x1717, 0xe30e, 0x21d5, 0x1, 0x1);
        gbc.writeMem(0xaaa8, { 0x55 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1a77, gbc.sp());
        EXPECT(0xaaa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaaa8));
        // 55 003B
        gbc.setState(0x133e, 0xaafc, 0x4430, 0x913a, 0x769d, 0x844e, 0x0, 0x1);
        gbc.writeMem(0x133e, { 0x55 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xaafc, gbc.sp());
        EXPECT(0x133f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 003C
        gbc.setState(0x3014, 0xe367, 0xb6e0, 0x189a, 0xafdd, 0xd912, 0x0, 0x1);
        gbc.writeMem(0x3014, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0x3015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 003D
        gbc.setState(0xaf6a, 0x1801, 0x6b60, 0x8440, 0xb467, 0x1ab8, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0x55 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1801, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaf6a));
        // 55 003E
        gbc.setState(0xd65f, 0x2633, 0xaf70, 0x3534, 0x4a96, 0xf618, 0x1, 0x1);
        gbc.writeMem(0xd65f, { 0x55 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2633, gbc.sp());
        EXPECT(0xd660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd65f));
        // 55 003F
        gbc.setState(0x7ba5, 0xe7bf, 0x4d60, 0xa4e6, 0xbb7c, 0x7c22, 0x0, 0x1);
        gbc.writeMem(0x7ba5, { 0x55 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe7bf, gbc.sp());
        EXPECT(0x7ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0040
        gbc.setState(0x8fcb, 0xccbb, 0xe70, 0x6508, 0x5e80, 0x7951, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xccbb, gbc.sp());
        EXPECT(0x8fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8fcb));
        // 55 0041
        gbc.setState(0x13d4, 0xa2cd, 0x3680, 0xd2fc, 0x6979, 0x33e3, 0x0, 0x0);
        gbc.writeMem(0x13d4, { 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa2cd, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0042
        gbc.setState(0x25a7, 0x20a1, 0xa9d0, 0xdb7f, 0xec27, 0xc40d, 0x1, 0x0);
        gbc.writeMem(0x25a7, { 0x55 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x20a1, gbc.sp());
        EXPECT(0x25a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0043
        gbc.setState(0xa01b, 0x3eae, 0x5650, 0x3ba9, 0x4020, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xa01b, { 0x55 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3eae, gbc.sp());
        EXPECT(0xa01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa01b));
        // 55 0044
        gbc.setState(0x44be, 0x913, 0xfde0, 0xde51, 0xe900, 0xd388, 0x0, 0x0);
        gbc.writeMem(0x44be, { 0x55 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0045
        gbc.setState(0x103e, 0x8bc7, 0x9c90, 0x63d0, 0x89ac, 0xff3, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8bc7, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0046
        gbc.setState(0xba8c, 0xeeb4, 0xce60, 0xe464, 0xc5c4, 0xdd52, 0x1, 0x1);
        gbc.writeMem(0xba8c, { 0x55 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeeb4, gbc.sp());
        EXPECT(0xba8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba8c));
        // 55 0047
        gbc.setState(0xc402, 0x3b7a, 0x2950, 0xa69a, 0x3c1c, 0xea71, 0x1, 0x1);
        gbc.writeMem(0xc402, { 0x55 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3b7a, gbc.sp());
        EXPECT(0xc403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc402));
        // 55 0048
        gbc.setState(0xd420, 0x2373, 0xf730, 0x7360, 0x6351, 0xdf65, 0x1, 0x1);
        gbc.writeMem(0xd420, { 0x55 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2373, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd420));
        // 55 0049
        gbc.setState(0x10a0, 0x5eb5, 0x7670, 0xfc67, 0x48e8, 0x1954, 0x1, 0x0);
        gbc.writeMem(0x10a0, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5eb5, gbc.sp());
        EXPECT(0x10a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 004A
        gbc.setState(0x1598, 0x1680, 0x1630, 0x895c, 0xfb5e, 0x3aad, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0x55 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0x1599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 004B
        gbc.setState(0x12, 0x9444, 0xcf0, 0x3f2, 0x97cc, 0x2654, 0x0, 0x1);
        gbc.writeMem(0x12, { 0x55 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9444, gbc.sp());
        EXPECT(0x13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 004C
        gbc.setState(0xad2f, 0x561e, 0x6830, 0x9dd9, 0xa7a5, 0x3a54, 0x1, 0x1);
        gbc.writeMem(0xad2f, { 0x55 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x561e, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xad2f));
        // 55 004D
        gbc.setState(0x57ae, 0xba66, 0x6c90, 0x42f6, 0xd9c4, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0x57ae, { 0x55 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xba66, gbc.sp());
        EXPECT(0x57af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 004E
        gbc.setState(0xb605, 0x2d23, 0x3a20, 0x901e, 0x862, 0x8089, 0x1, 0x0);
        gbc.writeMem(0xb605, { 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2d23, gbc.sp());
        EXPECT(0xb606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb605));
        // 55 004F
        gbc.setState(0x6441, 0x8a14, 0xc450, 0x4227, 0x2ce2, 0xafdf, 0x1, 0x1);
        gbc.writeMem(0x6441, { 0x55 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8a14, gbc.sp());
        EXPECT(0x6442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0050
        gbc.setState(0x3e7d, 0x6833, 0xdb50, 0xbbba, 0xff64, 0xdd37, 0x0, 0x0);
        gbc.writeMem(0x3e7d, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6833, gbc.sp());
        EXPECT(0x3e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0051
        gbc.setState(0x1c3f, 0xe7c0, 0xb3d0, 0x4206, 0x94f0, 0x5c38, 0x1, 0x0);
        gbc.writeMem(0x1c3f, { 0x55 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe7c0, gbc.sp());
        EXPECT(0x1c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0052
        gbc.setState(0x1d7d, 0xa337, 0xbaa0, 0x7ca6, 0x414b, 0xa0e4, 0x1, 0x1);
        gbc.writeMem(0x1d7d, { 0x55 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0x1d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0053
        gbc.setState(0xda52, 0x753b, 0x2d00, 0x9db3, 0x64d1, 0x511d, 0x0, 0x1);
        gbc.writeMem(0xda52, { 0x55 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x753b, gbc.sp());
        EXPECT(0xda53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda52));
        // 55 0054
        gbc.setState(0xc3f4, 0xce44, 0x3e70, 0x8724, 0x76e8, 0xcdb2, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0x55 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0xc3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc3f4));
        // 55 0055
        gbc.setState(0x401f, 0x961b, 0x84c0, 0x29cb, 0xce10, 0x9b30, 0x0, 0x0);
        gbc.writeMem(0x401f, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x961b, gbc.sp());
        EXPECT(0x4020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0056
        gbc.setState(0x8516, 0xd148, 0x6510, 0xeac5, 0x4763, 0x4d28, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0x55 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8516));
        // 55 0057
        gbc.setState(0x729a, 0x3a55, 0x10b0, 0x43eb, 0x7a5a, 0xa3df, 0x1, 0x1);
        gbc.writeMem(0x729a, { 0x55 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3a55, gbc.sp());
        EXPECT(0x729b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0058
        gbc.setState(0x8c4, 0x72f9, 0x3e70, 0x1705, 0xb940, 0xf8c9, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0x55 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x72f9, gbc.sp());
        EXPECT(0x8c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0059
        gbc.setState(0xa780, 0xbe70, 0x2660, 0x4742, 0x524b, 0xca8c, 0x0, 0x1);
        gbc.writeMem(0xa780, { 0x55 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbe70, gbc.sp());
        EXPECT(0xa781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa780));
        // 55 005A
        gbc.setState(0x67a7, 0x34e7, 0x9970, 0x8776, 0x48b4, 0x2ad5, 0x1, 0x0);
        gbc.writeMem(0x67a7, { 0x55 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x34e7, gbc.sp());
        EXPECT(0x67a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 005B
        gbc.setState(0x7c3d, 0xb474, 0x9c50, 0x948d, 0x7ccf, 0xdfb3, 0x0, 0x1);
        gbc.writeMem(0x7c3d, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0x7c3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 005C
        gbc.setState(0x1fb5, 0xe278, 0x1a00, 0x20fd, 0x92a3, 0x9ffe, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0x55 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe278, gbc.sp());
        EXPECT(0x1fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 005D
        gbc.setState(0x3e79, 0xa891, 0x33c0, 0xe9aa, 0x708c, 0x6e3, 0x0, 0x0);
        gbc.writeMem(0x3e79, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa891, gbc.sp());
        EXPECT(0x3e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 005E
        gbc.setState(0xd1bd, 0x4f6, 0xa30, 0x9200, 0x9845, 0xb5f8, 0x1, 0x1);
        gbc.writeMem(0xd1bd, { 0x55 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4f6, gbc.sp());
        EXPECT(0xd1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd1bd));
        // 55 005F
        gbc.setState(0x88d2, 0xed92, 0x58f0, 0xc61d, 0x9f96, 0x7a90, 0x1, 0x0);
        gbc.writeMem(0x88d2, { 0x55 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0x88d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x88d2));
        // 55 0060
        gbc.setState(0x1f83, 0xe67e, 0xed90, 0xf2f9, 0x88ea, 0x355c, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0x55 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe67e, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0061
        gbc.setState(0xa8d, 0x701, 0xc800, 0xec85, 0x9244, 0x4b78, 0x1, 0x0);
        gbc.writeMem(0xa8d, { 0x55 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x701, gbc.sp());
        EXPECT(0xa8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0062
        gbc.setState(0xd757, 0x5972, 0x1d80, 0xc14, 0x575c, 0xf51c, 0x0, 0x1);
        gbc.writeMem(0xd757, { 0x55 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5972, gbc.sp());
        EXPECT(0xd758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd757));
        // 55 0063
        gbc.setState(0x1b25, 0x53ee, 0x8010, 0xc586, 0xba7a, 0xfeb0, 0x1, 0x1);
        gbc.writeMem(0x1b25, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x53ee, gbc.sp());
        EXPECT(0x1b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0064
        gbc.setState(0x5e30, 0x73f, 0xb280, 0x6083, 0x689d, 0xd60, 0x0, 0x1);
        gbc.writeMem(0x5e30, { 0x55 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x73f, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0065
        gbc.setState(0x93a8, 0xf147, 0x7fe0, 0x752d, 0x6990, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x93a8, { 0x55 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf147, gbc.sp());
        EXPECT(0x93a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x93a8));
        // 55 0067
        gbc.setState(0x920, 0x2c9b, 0xdeb0, 0xd9f1, 0xdbd0, 0xc477, 0x0, 0x0);
        gbc.writeMem(0x920, { 0x55 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2c9b, gbc.sp());
        EXPECT(0x921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0068
        gbc.setState(0xe0bc, 0x453c, 0xea40, 0x5da2, 0x44c9, 0x96f1, 0x1, 0x1);
        gbc.writeMem(0xe0bc, { 0x55 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0xe0bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe0bc));
        // 55 0069
        gbc.setState(0xc11, 0x7e12, 0x920, 0x433e, 0x4e48, 0xa00, 0x1, 0x1);
        gbc.writeMem(0xc11, { 0x55 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7e12, gbc.sp());
        EXPECT(0xc12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 006A
        gbc.setState(0x2f98, 0x4781, 0x5000, 0x4ba7, 0xbdcd, 0xc487, 0x1, 0x0);
        gbc.writeMem(0x2f98, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4781, gbc.sp());
        EXPECT(0x2f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 006B
        gbc.setState(0xdc1b, 0x14d6, 0x8f80, 0x6b5a, 0xeb84, 0x9bfb, 0x0, 0x1);
        gbc.writeMem(0xdc1b, { 0x55 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x14d6, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc1b));
        // 55 006D
        gbc.setState(0x64af, 0xdc9f, 0x2db0, 0x6212, 0xd6f5, 0x91c0, 0x1, 0x1);
        gbc.writeMem(0x64af, { 0x55 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xdc9f, gbc.sp());
        EXPECT(0x64b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 006E
        gbc.setState(0x8f4c, 0xe336, 0x4470, 0x4117, 0xdcdb, 0x9b8, 0x1, 0x0);
        gbc.writeMem(0x8f4c, { 0x55 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe336, gbc.sp());
        EXPECT(0x8f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8f4c));
        // 55 006F
        gbc.setState(0x6222, 0x65e9, 0xdbb0, 0x7ae1, 0x31e8, 0xf739, 0x0, 0x1);
        gbc.writeMem(0x6222, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0x6223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0070
        gbc.setState(0x6fe1, 0x67bb, 0x79f0, 0xd959, 0xe035, 0xd6be, 0x1, 0x0);
        gbc.writeMem(0x6fe1, { 0x55 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0x6fe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0072
        gbc.setState(0x639, 0x4ed0, 0x1a70, 0x621b, 0x6aae, 0x1c8a, 0x0, 0x0);
        gbc.writeMem(0x639, { 0x55 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0x63a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0073
        gbc.setState(0x2ed4, 0x6ede, 0x89a0, 0xe1a1, 0x195d, 0x518e, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6ede, gbc.sp());
        EXPECT(0x2ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0074
        gbc.setState(0xa79d, 0xb33c, 0x5520, 0x2f22, 0x24c0, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0xa79d, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0xa79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa79d));
        // 55 0075
        gbc.setState(0x3d79, 0x6721, 0x200, 0x5e80, 0xde70, 0x30d9, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6721, gbc.sp());
        EXPECT(0x3d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0076
        gbc.setState(0x9982, 0xbd25, 0xe0f0, 0x8a0d, 0xed67, 0x866f, 0x0, 0x0);
        gbc.writeMem(0x9982, { 0x55 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbd25, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9982));
        // 55 0078
        gbc.setState(0x58c6, 0x7763, 0x7c90, 0x9c98, 0x6a47, 0x3524, 0x0, 0x1);
        gbc.writeMem(0x58c6, { 0x55 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7763, gbc.sp());
        EXPECT(0x58c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0079
        gbc.setState(0xd583, 0xc54c, 0x87e0, 0xaf2a, 0xa444, 0x31da, 0x1, 0x1);
        gbc.writeMem(0xd583, { 0x55 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc54c, gbc.sp());
        EXPECT(0xd584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd583));
        // 55 007A
        gbc.setState(0x745d, 0x3a13, 0x9730, 0xcce4, 0xccd5, 0x3115, 0x0, 0x0);
        gbc.writeMem(0x745d, { 0x55 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3a13, gbc.sp());
        EXPECT(0x745e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 007B
        gbc.setState(0x393b, 0xfa20, 0xef60, 0x1ca4, 0xf469, 0xc4f5, 0x0, 0x1);
        gbc.writeMem(0x393b, { 0x55 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x393c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 007C
        gbc.setState(0xb427, 0x5741, 0x6bb0, 0x31c0, 0x95c6, 0x77bc, 0x0, 0x1);
        gbc.writeMem(0xb427, { 0x55 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0xb428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb427));
        // 55 007D
        gbc.setState(0x9c15, 0xe719, 0xb160, 0x3634, 0xb18c, 0xec55, 0x0, 0x1);
        gbc.writeMem(0x9c15, { 0x55 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe719, gbc.sp());
        EXPECT(0x9c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9c15));
        // 55 007E
        gbc.setState(0xc073, 0x1a1, 0xa870, 0xa4a7, 0x2781, 0x6488, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a1, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc073));
        // 55 007F
        gbc.setState(0x233b, 0x5977, 0x7cc0, 0x7cc0, 0xa22b, 0xe8fb, 0x0, 0x1);
        gbc.writeMem(0x233b, { 0x55 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5977, gbc.sp());
        EXPECT(0x233c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0080
        gbc.setState(0xb36d, 0xcbee, 0x14c0, 0xf50, 0x770f, 0x50b8, 0x0, 0x1);
        gbc.writeMem(0xb36d, { 0x55 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcbee, gbc.sp());
        EXPECT(0xb36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb36d));
        // 55 0081
        gbc.setState(0xa7c3, 0x12e8, 0x2e40, 0x4707, 0x103d, 0x3751, 0x0, 0x1);
        gbc.writeMem(0xa7c3, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x12e8, gbc.sp());
        EXPECT(0xa7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa7c3));
        // 55 0082
        gbc.setState(0xbb44, 0x245c, 0xde0, 0xc5b1, 0x3b05, 0x91c7, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0x55 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbb44));
        // 55 0083
        gbc.setState(0x1a75, 0x5646, 0x2c70, 0x2515, 0xdd7d, 0xe5eb, 0x0, 0x1);
        gbc.writeMem(0x1a75, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0x1a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0084
        gbc.setState(0x2ffe, 0x99de, 0x40d0, 0xbd06, 0x6396, 0x9a0, 0x0, 0x0);
        gbc.writeMem(0x2ffe, { 0x55 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0x2fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0086
        gbc.setState(0x89ef, 0xc16e, 0x90b0, 0xc093, 0x4f81, 0xc483, 0x1, 0x1);
        gbc.writeMem(0x89ef, { 0x55 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc16e, gbc.sp());
        EXPECT(0x89f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x89ef));
        // 55 0087
        gbc.setState(0xd71b, 0x88e9, 0x61a0, 0xb89e, 0x934e, 0x4b9f, 0x0, 0x1);
        gbc.writeMem(0xd71b, { 0x55 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd71b));
        // 55 0088
        gbc.setState(0x23e1, 0x761, 0xda40, 0x7707, 0x8667, 0x753d, 0x0, 0x0);
        gbc.writeMem(0x23e1, { 0x55 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x761, gbc.sp());
        EXPECT(0x23e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0089
        gbc.setState(0xa272, 0xf069, 0x34d0, 0xf2c, 0xe38b, 0x885a, 0x0, 0x0);
        gbc.writeMem(0xa272, { 0x55 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf069, gbc.sp());
        EXPECT(0xa273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa272));
        // 55 008A
        gbc.setState(0x3635, 0xde78, 0x13b0, 0x1f46, 0x23c2, 0xd3fa, 0x1, 0x0);
        gbc.writeMem(0x3635, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0x3636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 008B
        gbc.setState(0xbcc2, 0xc5f1, 0x92a0, 0x4d3, 0x8b40, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xbcc2, { 0x55 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xc5f1, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbcc2));
        // 55 008C
        gbc.setState(0x80d0, 0x9072, 0xcd60, 0xc976, 0x4479, 0xcb6, 0x0, 0x0);
        gbc.writeMem(0x80d0, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x9072, gbc.sp());
        EXPECT(0x80d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x80d0));
        // 55 008D
        gbc.setState(0x2d87, 0x805e, 0xef30, 0x292f, 0x1747, 0xbe45, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0x55 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x805e, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 008E
        gbc.setState(0xd247, 0xe07d, 0x3460, 0x8e25, 0x9bfd, 0xbe2e, 0x1, 0x1);
        gbc.writeMem(0xd247, { 0x55 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe07d, gbc.sp());
        EXPECT(0xd248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd247));
        // 55 008F
        gbc.setState(0x39f1, 0xe1ae, 0x58b0, 0xb48a, 0x90df, 0x4303, 0x1, 0x0);
        gbc.writeMem(0x39f1, { 0x55 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe1ae, gbc.sp());
        EXPECT(0x39f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0090
        gbc.setState(0xac8, 0xe308, 0x600, 0x2a2, 0x30e8, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0xac8, { 0x55 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe308, gbc.sp());
        EXPECT(0xac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0091
        gbc.setState(0x5714, 0x76bd, 0x6310, 0xe332, 0xed64, 0x5b, 0x1, 0x0);
        gbc.writeMem(0x5714, { 0x55 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x76bd, gbc.sp());
        EXPECT(0x5715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0092
        gbc.setState(0xe2ac, 0xfacc, 0xca70, 0xd27a, 0x640, 0x808f, 0x1, 0x1);
        gbc.writeMem(0xe2ac, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfacc, gbc.sp());
        EXPECT(0xe2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe2ac));
        // 55 0093
        gbc.setState(0x184d, 0x34ca, 0x5720, 0xf0fa, 0x331d, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0x55 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x34ca, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0094
        gbc.setState(0xa638, 0xc7c5, 0x4c40, 0xe2da, 0xfcf9, 0xf5da, 0x1, 0x0);
        gbc.writeMem(0xa638, { 0x55 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc7c5, gbc.sp());
        EXPECT(0xa639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa638));
        // 55 0095
        gbc.setState(0x2c08, 0x6743, 0x9380, 0xf4ec, 0x3cc9, 0xb45, 0x0, 0x1);
        gbc.writeMem(0x2c08, { 0x55 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0096
        gbc.setState(0x347c, 0x9c88, 0xc570, 0xc7f3, 0xe59e, 0x7259, 0x1, 0x1);
        gbc.writeMem(0x347c, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9c88, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0097
        gbc.setState(0x2de6, 0xd550, 0x20a0, 0xd0f2, 0x7313, 0xa0ae, 0x1, 0x1);
        gbc.writeMem(0x2de6, { 0x55 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd550, gbc.sp());
        EXPECT(0x2de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0098
        gbc.setState(0xa823, 0x7905, 0x6450, 0x32a2, 0x3205, 0x210a, 0x0, 0x0);
        gbc.writeMem(0xa823, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7905, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa823));
        // 55 0099
        gbc.setState(0x299d, 0xcac8, 0x46a0, 0xaf8f, 0x4be6, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0x55 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xcac8, gbc.sp());
        EXPECT(0x299e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 009A
        gbc.setState(0x7c79, 0x7a4a, 0xb640, 0x309f, 0x3163, 0x631b, 0x1, 0x1);
        gbc.writeMem(0x7c79, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7a4a, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 009C
        gbc.setState(0x6767, 0xba98, 0x2550, 0x16, 0x9d04, 0x71e4, 0x0, 0x1);
        gbc.writeMem(0x6767, { 0x55 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xba98, gbc.sp());
        EXPECT(0x6768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 009D
        gbc.setState(0xd4fe, 0x76aa, 0x7b50, 0xd9e8, 0x24bf, 0x6f5c, 0x0, 0x1);
        gbc.writeMem(0xd4fe, { 0x55 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x76aa, gbc.sp());
        EXPECT(0xd4ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd4fe));
        // 55 009E
        gbc.setState(0xa62e, 0xced, 0x8090, 0xdfd0, 0x27e4, 0xcaf5, 0x0, 0x0);
        gbc.writeMem(0xa62e, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xced, gbc.sp());
        EXPECT(0xa62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa62e));
        // 55 009F
        gbc.setState(0xb5c6, 0xa15f, 0x97c0, 0xa453, 0x8b8f, 0x33b4, 0x1, 0x0);
        gbc.writeMem(0xb5c6, { 0x55 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa15f, gbc.sp());
        EXPECT(0xb5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb5c6));
        // 55 00A0
        gbc.setState(0xbcb8, 0x90e1, 0x6530, 0x39b, 0x98ce, 0xc7, 0x1, 0x1);
        gbc.writeMem(0xbcb8, { 0x55 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x90e1, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbcb8));
        // 55 00A1
        gbc.setState(0x998e, 0x65d9, 0x2b70, 0xf661, 0x8ec6, 0xf6a8, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0x55 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x65d9, gbc.sp());
        EXPECT(0x998f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x998e));
        // 55 00A2
        gbc.setState(0x49f, 0xc8d5, 0x31e0, 0x79c3, 0xbdf9, 0xaa40, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00A3
        gbc.setState(0x4c4a, 0xc6c, 0x8300, 0xfde6, 0x7b50, 0x17e7, 0x1, 0x0);
        gbc.writeMem(0x4c4a, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc6c, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00A4
        gbc.setState(0xcdf5, 0xc14d, 0xa870, 0xb3f8, 0xa0d4, 0x2caf, 0x0, 0x0);
        gbc.writeMem(0xcdf5, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc14d, gbc.sp());
        EXPECT(0xcdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcdf5));
        // 55 00A5
        gbc.setState(0xa6fa, 0xe0e0, 0x8580, 0x5032, 0xa103, 0x195f, 0x0, 0x0);
        gbc.writeMem(0xa6fa, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe0e0, gbc.sp());
        EXPECT(0xa6fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa6fa));
        // 55 00A6
        gbc.setState(0xc8ba, 0x2d22, 0x2190, 0x8d24, 0xf90d, 0x2215, 0x1, 0x0);
        gbc.writeMem(0xc8ba, { 0x55 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2d22, gbc.sp());
        EXPECT(0xc8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc8ba));
        // 55 00A7
        gbc.setState(0xc6e3, 0xd8d8, 0x1ca0, 0x1847, 0x77ed, 0xf5d2, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0x55 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd8d8, gbc.sp());
        EXPECT(0xc6e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc6e3));
        // 55 00A8
        gbc.setState(0x9040, 0x585c, 0xb990, 0x31be, 0xfe79, 0x5df7, 0x0, 0x1);
        gbc.writeMem(0x9040, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x585c, gbc.sp());
        EXPECT(0x9041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9040));
        // 55 00A9
        gbc.setState(0x96bc, 0xd3a3, 0xe5a0, 0x590f, 0xcfdb, 0xeb8c, 0x0, 0x1);
        gbc.writeMem(0x96bc, { 0x55 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0x96bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x96bc));
        // 55 00AA
        gbc.setState(0xd84d, 0xe07e, 0xeeb0, 0xd171, 0xffaf, 0xd2e2, 0x0, 0x0);
        gbc.writeMem(0xd84d, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd84d));
        // 55 00AB
        gbc.setState(0xc1a1, 0xe72, 0x88e0, 0x9af6, 0xd47f, 0x821a, 0x1, 0x1);
        gbc.writeMem(0xc1a1, { 0x55 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe72, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc1a1));
        // 55 00AC
        gbc.setState(0xc77e, 0x87cb, 0x2950, 0x41a2, 0xc3ea, 0xd511, 0x0, 0x1);
        gbc.writeMem(0xc77e, { 0x55 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0xc77f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc77e));
        // 55 00AD
        gbc.setState(0x1d0b, 0xa766, 0xc1c0, 0x649c, 0xc9e4, 0xeef, 0x0, 0x0);
        gbc.writeMem(0x1d0b, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0x1d0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00AE
        gbc.setState(0x4452, 0xe6f7, 0x8290, 0xf91f, 0xe2f7, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe6f7, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00AF
        gbc.setState(0x8885, 0x4ce8, 0x3950, 0x1d96, 0x2547, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x8885, { 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4ce8, gbc.sp());
        EXPECT(0x8886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8885));
        // 55 00B0
        gbc.setState(0x76a3, 0x22a3, 0xee80, 0xe9d4, 0xd4d1, 0x3528, 0x0, 0x1);
        gbc.writeMem(0x76a3, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x22a3, gbc.sp());
        EXPECT(0x76a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00B1
        gbc.setState(0xbb7a, 0x2a9b, 0x8af0, 0x11a, 0x460d, 0xeef2, 0x0, 0x0);
        gbc.writeMem(0xbb7a, { 0x55 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2a9b, gbc.sp());
        EXPECT(0xbb7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbb7a));
        // 55 00B2
        gbc.setState(0x395d, 0x6236, 0xcbd0, 0xfd2a, 0x4337, 0x4a3e, 0x0, 0x1);
        gbc.writeMem(0x395d, { 0x55 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6236, gbc.sp());
        EXPECT(0x395e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00B3
        gbc.setState(0x755b, 0x99ea, 0x7800, 0xb21, 0x5fb0, 0x518, 0x0, 0x1);
        gbc.writeMem(0x755b, { 0x55 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x99ea, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00B4
        gbc.setState(0xef3b, 0x6b4f, 0x3f70, 0x9a94, 0xafcd, 0xbb81, 0x1, 0x1);
        gbc.writeMem(0xef3b, { 0x55 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6b4f, gbc.sp());
        EXPECT(0xef3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xef3b));
        // 55 00B5
        gbc.setState(0x25fd, 0x8bbf, 0x11a0, 0x5cd4, 0xcef, 0x4282, 0x1, 0x0);
        gbc.writeMem(0x25fd, { 0x55 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8bbf, gbc.sp());
        EXPECT(0x25fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00B6
        gbc.setState(0xc750, 0xfc86, 0xc050, 0x9888, 0xec70, 0xe19a, 0x1, 0x0);
        gbc.writeMem(0xc750, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0xc751, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc750));
        // 55 00B7
        gbc.setState(0xa0fb, 0x24a3, 0x4fc0, 0x83d, 0x4ec0, 0xf8be, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0x55 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x24a3, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa0fb));
        // 55 00B8
        gbc.setState(0x39f5, 0x779d, 0xe240, 0xed7, 0x5dbd, 0xe38c, 0x0, 0x1);
        gbc.writeMem(0x39f5, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x779d, gbc.sp());
        EXPECT(0x39f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00B9
        gbc.setState(0xb4b1, 0x415f, 0x7ab0, 0x58cf, 0x6e8f, 0x6bdc, 0x0, 0x0);
        gbc.writeMem(0xb4b1, { 0x55 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0xb4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb4b1));
        // 55 00BA
        gbc.setState(0x3703, 0x8dbe, 0x2540, 0xcd73, 0xb6e2, 0x51b4, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0x55 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8dbe, gbc.sp());
        EXPECT(0x3704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00BB
        gbc.setState(0xd610, 0x22f6, 0x29b0, 0x6437, 0xf296, 0x53b4, 0x1, 0x0);
        gbc.writeMem(0xd610, { 0x55 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x22f6, gbc.sp());
        EXPECT(0xd611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd610));
        // 55 00BC
        gbc.setState(0xd691, 0x43e2, 0x37f0, 0x7ca, 0xa63, 0x218b, 0x0, 0x1);
        gbc.writeMem(0xd691, { 0x55 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x43e2, gbc.sp());
        EXPECT(0xd692, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd691));
        // 55 00BD
        gbc.setState(0x880c, 0x15c6, 0xec20, 0xa4f6, 0x1b8d, 0x3762, 0x0, 0x1);
        gbc.writeMem(0x880c, { 0x55 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x15c6, gbc.sp());
        EXPECT(0x880d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x880c));
        // 55 00BE
        gbc.setState(0x2e65, 0x3a47, 0xe2a0, 0x8def, 0xfb9f, 0xf5e4, 0x0, 0x0);
        gbc.writeMem(0x2e65, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3a47, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00BF
        gbc.setState(0x8719, 0xa509, 0x4ff0, 0x68f6, 0xd9c, 0x9e3c, 0x0, 0x1);
        gbc.writeMem(0x8719, { 0x55 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa509, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8719));
        // 55 00C0
        gbc.setState(0x788f, 0xa394, 0xe250, 0x323b, 0x9c51, 0xf8df, 0x1, 0x0);
        gbc.writeMem(0x788f, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa394, gbc.sp());
        EXPECT(0x7890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00C1
        gbc.setState(0x6bed, 0x2e11, 0x8240, 0x77a1, 0x4823, 0x6b01, 0x0, 0x0);
        gbc.writeMem(0x6bed, { 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x2e11, gbc.sp());
        EXPECT(0x6bee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00C2
        gbc.setState(0xab38, 0x42cf, 0x83c0, 0xdfd8, 0x73b9, 0xb55b, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x42cf, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xab38));
        // 55 00C3
        gbc.setState(0x248e, 0x7765, 0xbcc0, 0x1589, 0xd6fd, 0xf5b4, 0x0, 0x1);
        gbc.writeMem(0x248e, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7765, gbc.sp());
        EXPECT(0x248f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00C4
        gbc.setState(0x1ef, 0x19e1, 0xa2e0, 0x5e96, 0x71d9, 0xe005, 0x0, 0x1);
        gbc.writeMem(0x1ef, { 0x55 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x19e1, gbc.sp());
        EXPECT(0x1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00C5
        gbc.setState(0xaef, 0x7caa, 0x22f0, 0x44a2, 0xd3a9, 0x6532, 0x1, 0x1);
        gbc.writeMem(0xaef, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7caa, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00C6
        gbc.setState(0x2e70, 0xac23, 0xd5d0, 0xc575, 0xb44, 0x878e, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0x55 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xac23, gbc.sp());
        EXPECT(0x2e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00C7
        gbc.setState(0x8758, 0x4867, 0xb580, 0xb2bb, 0xe6ec, 0x4a84, 0x1, 0x1);
        gbc.writeMem(0x8758, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4867, gbc.sp());
        EXPECT(0x8759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8758));
        // 55 00C8
        gbc.setState(0xd2c4, 0xddef, 0x7a40, 0xbc6d, 0xc94, 0xe929, 0x1, 0x1);
        gbc.writeMem(0xd2c4, { 0x55 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xddef, gbc.sp());
        EXPECT(0xd2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd2c4));
        // 55 00C9
        gbc.setState(0xe897, 0x8592, 0xddf0, 0x183d, 0x6fb3, 0x6da4, 0x0, 0x1);
        gbc.writeMem(0xe897, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0xe898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe897));
        // 55 00CA
        gbc.setState(0x8b5f, 0x3d3c, 0xfc0, 0x55b0, 0x439e, 0xcd0e, 0x0, 0x0);
        gbc.writeMem(0x8b5f, { 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3d3c, gbc.sp());
        EXPECT(0x8b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8b5f));
        // 55 00CB
        gbc.setState(0x6e45, 0x969d, 0x2cf0, 0x9d9, 0x82a3, 0xe2f5, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x969d, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00CC
        gbc.setState(0x542e, 0x69ff, 0x8120, 0x723d, 0xe29f, 0x7b41, 0x0, 0x1);
        gbc.writeMem(0x542e, { 0x55 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x69ff, gbc.sp());
        EXPECT(0x542f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00CD
        gbc.setState(0x43d3, 0x3812, 0x440, 0x149c, 0xabc7, 0x2208, 0x1, 0x0);
        gbc.writeMem(0x43d3, { 0x55 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00CE
        gbc.setState(0x7711, 0x3941, 0xbd80, 0x1295, 0x65bb, 0x1e4b, 0x0, 0x0);
        gbc.writeMem(0x7711, { 0x55 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3941, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00CF
        gbc.setState(0x4ab2, 0xbebf, 0xab20, 0xffb, 0xf486, 0xc1af, 0x0, 0x0);
        gbc.writeMem(0x4ab2, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00D0
        gbc.setState(0x8622, 0xb248, 0x5ca0, 0x48b9, 0x52f1, 0xd052, 0x0, 0x0);
        gbc.writeMem(0x8622, { 0x55 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb248, gbc.sp());
        EXPECT(0x8623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8622));
        // 55 00D2
        gbc.setState(0x3117, 0x35c0, 0xeb90, 0x4f2a, 0xa586, 0x109, 0x0, 0x0);
        gbc.writeMem(0x3117, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0x3118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00D3
        gbc.setState(0xdc60, 0x84e9, 0xdb20, 0x9cf7, 0xc3f7, 0x55a, 0x0, 0x0);
        gbc.writeMem(0xdc60, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x84e9, gbc.sp());
        EXPECT(0xdc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc60));
        // 55 00D4
        gbc.setState(0x5fa0, 0xf06a, 0x3a70, 0xc1be, 0xbd9c, 0x1dd7, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf06a, gbc.sp());
        EXPECT(0x5fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00D5
        gbc.setState(0x3f9b, 0x9359, 0xacf0, 0x1dec, 0x727a, 0xdfe7, 0x0, 0x0);
        gbc.writeMem(0x3f9b, { 0x55 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9359, gbc.sp());
        EXPECT(0x3f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00D6
        gbc.setState(0x209e, 0x3463, 0xf140, 0xad23, 0xf8c7, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0x55 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3463, gbc.sp());
        EXPECT(0x209f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00D7
        gbc.setState(0x87be, 0xbcab, 0xbe80, 0xcfa3, 0x3c75, 0x27f4, 0x0, 0x1);
        gbc.writeMem(0x87be, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbcab, gbc.sp());
        EXPECT(0x87bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x87be));
        // 55 00D8
        gbc.setState(0x7be5, 0xe8b9, 0x9170, 0x962c, 0xc8a9, 0xfd42, 0x0, 0x0);
        gbc.writeMem(0x7be5, { 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe8b9, gbc.sp());
        EXPECT(0x7be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00D9
        gbc.setState(0xc128, 0x38e4, 0x1470, 0x98a9, 0x3840, 0x4f38, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0x55 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x38e4, gbc.sp());
        EXPECT(0xc129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc128));
        // 55 00DA
        gbc.setState(0x9a9e, 0x5aee, 0xd740, 0x8eae, 0x2b01, 0xa2e5, 0x1, 0x0);
        gbc.writeMem(0x9a9e, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5aee, gbc.sp());
        EXPECT(0x9a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9a9e));
        // 55 00DC
        gbc.setState(0x64c3, 0x6080, 0xb080, 0xd679, 0x7947, 0x598d, 0x0, 0x0);
        gbc.writeMem(0x64c3, { 0x55 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x64c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00DD
        gbc.setState(0x4cc8, 0x46fe, 0x320, 0xe476, 0xc131, 0x34f5, 0x0, 0x1);
        gbc.writeMem(0x4cc8, { 0x55 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x46fe, gbc.sp());
        EXPECT(0x4cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00DE
        gbc.setState(0x2753, 0x83e7, 0x89f0, 0x3250, 0xde4f, 0xee85, 0x1, 0x0);
        gbc.writeMem(0x2753, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x83e7, gbc.sp());
        EXPECT(0x2754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00DF
        gbc.setState(0x67ec, 0x22fc, 0x93e0, 0x787, 0xffc3, 0x1b98, 0x1, 0x0);
        gbc.writeMem(0x67ec, { 0x55 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x22fc, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00E0
        gbc.setState(0xd204, 0x995c, 0x5540, 0x4ec9, 0x61e0, 0x3a0a, 0x1, 0x0);
        gbc.writeMem(0xd204, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0xd205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd204));
        // 55 00E1
        gbc.setState(0x7a93, 0x31d9, 0xb120, 0x2986, 0xa7af, 0x814a, 0x0, 0x0);
        gbc.writeMem(0x7a93, { 0x55 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x31d9, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00E2
        gbc.setState(0x9c57, 0x85b1, 0xab60, 0x64bd, 0x3b5a, 0xde9e, 0x1, 0x0);
        gbc.writeMem(0x9c57, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0x9c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9c57));
        // 55 00E3
        gbc.setState(0x6fde, 0xd7c6, 0xdfd0, 0x9161, 0xd0ae, 0x2af8, 0x0, 0x1);
        gbc.writeMem(0x6fde, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd7c6, gbc.sp());
        EXPECT(0x6fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00E4
        gbc.setState(0xc239, 0x68df, 0x3eb0, 0x336e, 0xe4bf, 0x4d21, 0x0, 0x1);
        gbc.writeMem(0xc239, { 0x55 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0xc23a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc239));
        // 55 00E5
        gbc.setState(0x698c, 0xde61, 0x5f30, 0x595e, 0x28f, 0x298f, 0x0, 0x1);
        gbc.writeMem(0x698c, { 0x55 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xde61, gbc.sp());
        EXPECT(0x698d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00E6
        gbc.setState(0x500f, 0x469a, 0xf690, 0x7a89, 0xfde5, 0xa2db, 0x0, 0x0);
        gbc.writeMem(0x500f, { 0x55 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x469a, gbc.sp());
        EXPECT(0x5010, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00E7
        gbc.setState(0xce1, 0x6173, 0x13f0, 0x8643, 0xfd52, 0x8281, 0x0, 0x1);
        gbc.writeMem(0xce1, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6173, gbc.sp());
        EXPECT(0xce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00E8
        gbc.setState(0x4fdc, 0x823a, 0x7a70, 0xd9cc, 0x8566, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x4fdc, { 0x55 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x823a, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00E9
        gbc.setState(0x41b4, 0x2609, 0x2d00, 0x63b9, 0x2c9b, 0x4741, 0x0, 0x1);
        gbc.writeMem(0x41b4, { 0x55 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2609, gbc.sp());
        EXPECT(0x41b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00EA
        gbc.setState(0x2d72, 0xde67, 0x3080, 0xf525, 0xbb29, 0x75dc, 0x1, 0x1);
        gbc.writeMem(0x2d72, { 0x55 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xde67, gbc.sp());
        EXPECT(0x2d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00EB
        gbc.setState(0xb1ad, 0x8736, 0xdd60, 0x6f88, 0x7210, 0xc9af, 0x1, 0x0);
        gbc.writeMem(0xb1ad, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8736, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb1ad));
        // 55 00EC
        gbc.setState(0x45c9, 0x8e03, 0xcac0, 0x78d3, 0x65bb, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x45c9, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8e03, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00ED
        gbc.setState(0x5a81, 0x795f, 0x8960, 0xa5df, 0xd455, 0xb711, 0x1, 0x1);
        gbc.writeMem(0x5a81, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x795f, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00EE
        gbc.setState(0x81e8, 0xf0f9, 0x5a0, 0xbfd4, 0x293e, 0xc6f4, 0x1, 0x1);
        gbc.writeMem(0x81e8, { 0x55 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf0f9, gbc.sp());
        EXPECT(0x81e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x81e8));
        // 55 00EF
        gbc.setState(0x24bb, 0x5126, 0x9cf0, 0xc94f, 0x5769, 0x7771, 0x0, 0x1);
        gbc.writeMem(0x24bb, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5126, gbc.sp());
        EXPECT(0x24bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00F0
        gbc.setState(0x1e6c, 0x734f, 0xca70, 0x2f98, 0x1ffa, 0x71, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x734f, gbc.sp());
        EXPECT(0x1e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00F1
        gbc.setState(0x1e4a, 0xce86, 0x9ee0, 0x4eca, 0xd8fb, 0xb959, 0x0, 0x0);
        gbc.writeMem(0x1e4a, { 0x55 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xce86, gbc.sp());
        EXPECT(0x1e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00F2
        gbc.setState(0xc8bf, 0x4dc2, 0x82d0, 0x3720, 0xbff1, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0xc8bf, { 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4dc2, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc8bf));
        // 55 00F3
        gbc.setState(0x4093, 0x703a, 0xee30, 0x2d4e, 0xd505, 0x390c, 0x1, 0x0);
        gbc.writeMem(0x4093, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x703a, gbc.sp());
        EXPECT(0x4094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00F4
        gbc.setState(0xa40d, 0xa5fd, 0x1010, 0x405f, 0xa804, 0xffe3, 0x1, 0x0);
        gbc.writeMem(0xa40d, { 0x55 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa5fd, gbc.sp());
        EXPECT(0xa40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa40d));
        // 55 00F5
        gbc.setState(0x4d0c, 0xe267, 0x2780, 0xb4bc, 0xa961, 0x5ae5, 0x1, 0x1);
        gbc.writeMem(0x4d0c, { 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe267, gbc.sp());
        EXPECT(0x4d0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00F6
        gbc.setState(0xa963, 0xaee9, 0xa720, 0xa18c, 0xedb1, 0x6cc9, 0x1, 0x1);
        gbc.writeMem(0xa963, { 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaee9, gbc.sp());
        EXPECT(0xa964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa963));
        // 55 00F7
        gbc.setState(0xdf8d, 0x8c53, 0x47c0, 0x197e, 0x4b3b, 0x99c9, 0x0, 0x1);
        gbc.writeMem(0xdf8d, { 0x55 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8c53, gbc.sp());
        EXPECT(0xdf8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdf8d));
        // 55 00F9
        gbc.setState(0xd6e6, 0x3323, 0x7b50, 0xa7ba, 0xf13d, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0xd6e6, { 0x55 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3323, gbc.sp());
        EXPECT(0xd6e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd6e6));
        // 55 00FA
        gbc.setState(0xd88c, 0x44ab, 0x33d0, 0x9483, 0x30f4, 0xe6b6, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x44ab, gbc.sp());
        EXPECT(0xd88d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd88c));
        // 55 00FB
        gbc.setState(0x20ec, 0xf4c9, 0x5e60, 0xe250, 0x97f7, 0xec2e, 0x1, 0x1);
        gbc.writeMem(0x20ec, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf4c9, gbc.sp());
        EXPECT(0x20ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 00FC
        gbc.setState(0xe167, 0xf79f, 0xdf50, 0xd4f8, 0xd468, 0x5bb9, 0x1, 0x1);
        gbc.writeMem(0xe167, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf79f, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe167));
        // 55 00FD
        gbc.setState(0xdcec, 0x970f, 0x8090, 0x1ed7, 0x54f2, 0xbfec, 0x0, 0x0);
        gbc.writeMem(0xdcec, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x970f, gbc.sp());
        EXPECT(0xdced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdcec));
        // 55 00FE
        gbc.setState(0x71bd, 0x3d91, 0x4230, 0x6173, 0x975a, 0xb6c9, 0x0, 0x1);
        gbc.writeMem(0x71bd, { 0x55 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3d91, gbc.sp());
        EXPECT(0x71be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 00FF
        gbc.setState(0x19b1, 0xb3b9, 0xe640, 0xc636, 0x223d, 0x7de6, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0100
        gbc.setState(0x9073, 0x44c, 0xe370, 0xf0dd, 0xcc4f, 0x3f62, 0x1, 0x1);
        gbc.writeMem(0x9073, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x44c, gbc.sp());
        EXPECT(0x9074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9073));
        // 55 0101
        gbc.setState(0xe591, 0xa0de, 0xe720, 0x720d, 0x565, 0x3bb7, 0x1, 0x1);
        gbc.writeMem(0xe591, { 0x55 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa0de, gbc.sp());
        EXPECT(0xe592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe591));
        // 55 0102
        gbc.setState(0xdf27, 0x751b, 0xd200, 0x3156, 0x7c09, 0x512c, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x751b, gbc.sp());
        EXPECT(0xdf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdf27));
        // 55 0103
        gbc.setState(0xaacb, 0x88ae, 0xe610, 0xf4c2, 0xe3ac, 0x527e, 0x0, 0x0);
        gbc.writeMem(0xaacb, { 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x88ae, gbc.sp());
        EXPECT(0xaacc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaacb));
        // 55 0104
        gbc.setState(0x94cc, 0xf229, 0x20b0, 0x4cb7, 0x5d35, 0xd897, 0x1, 0x1);
        gbc.writeMem(0x94cc, { 0x55 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf229, gbc.sp());
        EXPECT(0x94cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x94cc));
        // 55 0105
        gbc.setState(0x9387, 0x543f, 0xc650, 0xc1d1, 0x14de, 0x36b8, 0x1, 0x0);
        gbc.writeMem(0x9387, { 0x55 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x543f, gbc.sp());
        EXPECT(0x9388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9387));
        // 55 0106
        gbc.setState(0x4718, 0x836e, 0x3790, 0x840, 0x7526, 0x67ed, 0x0, 0x0);
        gbc.writeMem(0x4718, { 0x55 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x836e, gbc.sp());
        EXPECT(0x4719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0107
        gbc.setState(0x58e9, 0x48c7, 0x98f0, 0xe4f0, 0x7c65, 0x64a, 0x1, 0x0);
        gbc.writeMem(0x58e9, { 0x55 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x48c7, gbc.sp());
        EXPECT(0x58ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0108
        gbc.setState(0x35a1, 0x5bc5, 0xf940, 0x3f01, 0xa30c, 0x8b17, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0x55 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5bc5, gbc.sp());
        EXPECT(0x35a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 010A
        gbc.setState(0xe930, 0x21ad, 0x780, 0x44d1, 0xee1d, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0xe930, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0xe931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe930));
        // 55 010B
        gbc.setState(0x1002, 0xe732, 0x89d0, 0x604d, 0xaadb, 0xc5b0, 0x0, 0x1);
        gbc.writeMem(0x1002, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0x1003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 010C
        gbc.setState(0xded4, 0x97d8, 0x6fc0, 0x5597, 0xa532, 0xfe0d, 0x0, 0x0);
        gbc.writeMem(0xded4, { 0x55 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x97d8, gbc.sp());
        EXPECT(0xded5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xded4));
        // 55 010D
        gbc.setState(0xac63, 0x56c4, 0x570, 0x8e, 0xb592, 0x8f96, 0x1, 0x1);
        gbc.writeMem(0xac63, { 0x55 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x56c4, gbc.sp());
        EXPECT(0xac64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xac63));
        // 55 010E
        gbc.setState(0x9ff8, 0x8435, 0x5f20, 0x6b7d, 0x32dd, 0x8212, 0x1, 0x1);
        gbc.writeMem(0x9ff8, { 0x55 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8435, gbc.sp());
        EXPECT(0x9ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9ff8));
        // 55 010F
        gbc.setState(0x8423, 0xe33e, 0x8e10, 0x5586, 0x6c8, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0x8423, { 0x55 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8423));
        // 55 0110
        gbc.setState(0x364, 0xa481, 0x2ff0, 0x8b5, 0xc293, 0x9a75, 0x0, 0x1);
        gbc.writeMem(0x364, { 0x55 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa481, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0111
        gbc.setState(0x5555, 0x56bd, 0x6d90, 0xee71, 0x48d2, 0xc01f, 0x0, 0x0);
        gbc.writeMem(0x5555, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x56bd, gbc.sp());
        EXPECT(0x5556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0112
        gbc.setState(0x4ee8, 0x8495, 0xa930, 0x4b49, 0x436d, 0xd50a, 0x1, 0x1);
        gbc.writeMem(0x4ee8, { 0x55 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8495, gbc.sp());
        EXPECT(0x4ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0113
        gbc.setState(0x40c2, 0xd209, 0xd2b0, 0xa15, 0x89a1, 0x7, 0x1, 0x0);
        gbc.writeMem(0x40c2, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd209, gbc.sp());
        EXPECT(0x40c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0114
        gbc.setState(0x2f1d, 0xc399, 0x9150, 0x8c96, 0xa92b, 0x1d58, 0x0, 0x0);
        gbc.writeMem(0x2f1d, { 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc399, gbc.sp());
        EXPECT(0x2f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0115
        gbc.setState(0x1ffe, 0x3e2c, 0xe520, 0x5d05, 0x26ea, 0x3a19, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0x55 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3e2c, gbc.sp());
        EXPECT(0x1fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0116
        gbc.setState(0x3bcc, 0xd3a6, 0x7660, 0x6dc9, 0xb98c, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd3a6, gbc.sp());
        EXPECT(0x3bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0117
        gbc.setState(0x6486, 0xf322, 0x27a0, 0xa7b4, 0xc432, 0xce82, 0x1, 0x0);
        gbc.writeMem(0x6486, { 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf322, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0118
        gbc.setState(0x1e32, 0xac32, 0xc570, 0xad94, 0xca58, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0x1e32, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac32, gbc.sp());
        EXPECT(0x1e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0119
        gbc.setState(0x5aa1, 0x681a, 0x24b0, 0x43c2, 0x9db8, 0x4753, 0x0, 0x0);
        gbc.writeMem(0x5aa1, { 0x55 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x681a, gbc.sp());
        EXPECT(0x5aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 011A
        gbc.setState(0xd7fd, 0x6e76, 0x49e0, 0x80bf, 0x79cc, 0xac71, 0x1, 0x1);
        gbc.writeMem(0xd7fd, { 0x55 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xd7fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd7fd));
        // 55 011B
        gbc.setState(0xbdcc, 0x4830, 0xb9c0, 0xe200, 0xd6a3, 0x12a7, 0x1, 0x1);
        gbc.writeMem(0xbdcc, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4830, gbc.sp());
        EXPECT(0xbdcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbdcc));
        // 55 011C
        gbc.setState(0x11b0, 0x4de6, 0x5f60, 0xea20, 0x7c96, 0x2729, 0x0, 0x1);
        gbc.writeMem(0x11b0, { 0x55 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x4de6, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 011D
        gbc.setState(0xba08, 0xa3bb, 0x19a0, 0x2fe4, 0xa024, 0xd13c, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0x55 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa3bb, gbc.sp());
        EXPECT(0xba09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba08));
        // 55 011E
        gbc.setState(0x407d, 0xe0ba, 0xab10, 0x358f, 0x78, 0x7005, 0x0, 0x0);
        gbc.writeMem(0x407d, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe0ba, gbc.sp());
        EXPECT(0x407e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 011F
        gbc.setState(0x5419, 0xf22b, 0xd7e0, 0xfe1e, 0x5a9b, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0x5419, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf22b, gbc.sp());
        EXPECT(0x541a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0120
        gbc.setState(0xb1e2, 0xc6e0, 0xf230, 0x221b, 0x26c4, 0x8aa4, 0x1, 0x0);
        gbc.writeMem(0xb1e2, { 0x55 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc6e0, gbc.sp());
        EXPECT(0xb1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb1e2));
        // 55 0121
        gbc.setState(0x29c, 0xfbe0, 0x1710, 0xf22f, 0xc7b2, 0xe4f6, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0x55 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0122
        gbc.setState(0x5eef, 0x930c, 0xfb40, 0x4a0a, 0xb25b, 0xa7f1, 0x1, 0x1);
        gbc.writeMem(0x5eef, { 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x930c, gbc.sp());
        EXPECT(0x5ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0123
        gbc.setState(0xaa75, 0x593a, 0xc030, 0xf63d, 0x7d9c, 0x217, 0x0, 0x1);
        gbc.writeMem(0xaa75, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0xaa76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaa75));
        // 55 0124
        gbc.setState(0xcff, 0x7607, 0xb870, 0xa5b7, 0xffb4, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0xcff, { 0x55 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7607, gbc.sp());
        EXPECT(0xd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0125
        gbc.setState(0xa528, 0x181, 0xb230, 0x5e08, 0x9a6c, 0x6fd, 0x1, 0x1);
        gbc.writeMem(0xa528, { 0x55 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x181, gbc.sp());
        EXPECT(0xa529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa528));
        // 55 0126
        gbc.setState(0x9574, 0xbbbe, 0xae10, 0x39f3, 0x89c0, 0x5bcb, 0x0, 0x1);
        gbc.writeMem(0x9574, { 0x55 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbbbe, gbc.sp());
        EXPECT(0x9575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9574));
        // 55 0127
        gbc.setState(0xc0b2, 0xca8, 0xebf0, 0x3a68, 0x7ba, 0x9d35, 0x0, 0x1);
        gbc.writeMem(0xc0b2, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xca8, gbc.sp());
        EXPECT(0xc0b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc0b2));
        // 55 0128
        gbc.setState(0xc75d, 0x3c4d, 0x2af0, 0x422e, 0x9a93, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0xc75d, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3c4d, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc75d));
        // 55 0129
        gbc.setState(0x5cc1, 0x1e39, 0x1d80, 0x8b52, 0xa5fb, 0x3461, 0x1, 0x1);
        gbc.writeMem(0x5cc1, { 0x55 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1e39, gbc.sp());
        EXPECT(0x5cc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 012A
        gbc.setState(0x43bb, 0xe1e9, 0x64a0, 0x6d61, 0xe79f, 0x8f6, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe1e9, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 012B
        gbc.setState(0xa20c, 0xb26a, 0xada0, 0xe5b4, 0x666f, 0x3262, 0x1, 0x1);
        gbc.writeMem(0xa20c, { 0x55 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb26a, gbc.sp());
        EXPECT(0xa20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa20c));
        // 55 012C
        gbc.setState(0xd447, 0x9ebd, 0x10a0, 0x26d0, 0x8a13, 0x40dd, 0x1, 0x0);
        gbc.writeMem(0xd447, { 0x55 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9ebd, gbc.sp());
        EXPECT(0xd448, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd447));
        // 55 012D
        gbc.setState(0xa76, 0x2ac8, 0x66a0, 0x18e1, 0x6903, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0x55 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2ac8, gbc.sp());
        EXPECT(0xa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 012E
        gbc.setState(0xd6c5, 0x8625, 0xb5c0, 0x5eb1, 0x78c4, 0xbed8, 0x1, 0x0);
        gbc.writeMem(0xd6c5, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8625, gbc.sp());
        EXPECT(0xd6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd6c5));
        // 55 012F
        gbc.setState(0xa056, 0xecd7, 0xa50, 0x6924, 0x6ca6, 0x188e, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0x55 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0xa057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa056));
        // 55 0130
        gbc.setState(0xb76, 0x2901, 0x3980, 0x2561, 0x72b4, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0xb76, { 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2901, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0131
        gbc.setState(0x65a4, 0x9e34, 0x5c40, 0xf597, 0xbde0, 0xf9c5, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0x55 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e34, gbc.sp());
        EXPECT(0x65a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0132
        gbc.setState(0xc8c9, 0x29fe, 0xae0, 0xcf8d, 0xe29d, 0xd7f4, 0x1, 0x0);
        gbc.writeMem(0xc8c9, { 0x55 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x29fe, gbc.sp());
        EXPECT(0xc8ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc8c9));
        // 55 0133
        gbc.setState(0xefb9, 0x9903, 0x5e30, 0x822f, 0xcdd, 0x6061, 0x1, 0x0);
        gbc.writeMem(0xefb9, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0xefba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xefb9));
        // 55 0134
        gbc.setState(0x60ef, 0x8e6a, 0x5da0, 0x4be2, 0x8264, 0x81d4, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8e6a, gbc.sp());
        EXPECT(0x60f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0135
        gbc.setState(0xb7b3, 0xd274, 0xc9b0, 0xba1d, 0xce75, 0xea67, 0x0, 0x0);
        gbc.writeMem(0xb7b3, { 0x55 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd274, gbc.sp());
        EXPECT(0xb7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb7b3));
        // 55 0136
        gbc.setState(0xee95, 0xd827, 0x9450, 0x58d0, 0x33a6, 0xd234, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0x55 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd827, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xee95));
        // 55 0138
        gbc.setState(0x103, 0x9d7e, 0x1f90, 0x896c, 0xd36c, 0x764e, 0x1, 0x1);
        gbc.writeMem(0x103, { 0x55 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9d7e, gbc.sp());
        EXPECT(0x104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0139
        gbc.setState(0x723d, 0x25fe, 0x8760, 0x2b08, 0x35e0, 0x622a, 0x1, 0x0);
        gbc.writeMem(0x723d, { 0x55 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x25fe, gbc.sp());
        EXPECT(0x723e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 013A
        gbc.setState(0x3328, 0x638e, 0xcc30, 0x644f, 0x4af9, 0x7c86, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0x55 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x3329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 013B
        gbc.setState(0x29a4, 0x7558, 0xaa80, 0xca91, 0x1380, 0x9462, 0x0, 0x0);
        gbc.writeMem(0x29a4, { 0x55 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0x29a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 013C
        gbc.setState(0xd760, 0x3475, 0x7190, 0x4dd1, 0x768f, 0x4b07, 0x1, 0x0);
        gbc.writeMem(0xd760, { 0x55 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0xd761, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd760));
        // 55 013D
        gbc.setState(0x9494, 0x4229, 0x1d10, 0x664f, 0x475e, 0x139e, 0x0, 0x1);
        gbc.writeMem(0x9494, { 0x55 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4229, gbc.sp());
        EXPECT(0x9495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9494));
        // 55 013E
        gbc.setState(0xc7da, 0x9b3b, 0xc850, 0x97c1, 0x61fd, 0x4c3a, 0x0, 0x1);
        gbc.writeMem(0xc7da, { 0x55 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9b3b, gbc.sp());
        EXPECT(0xc7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc7da));
        // 55 013F
        gbc.setState(0xe28, 0x78b9, 0x8990, 0xcfd0, 0x9479, 0xb4e8, 0x0, 0x1);
        gbc.writeMem(0xe28, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0xe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0140
        gbc.setState(0xed90, 0xa901, 0xce80, 0xc46, 0xfc2, 0x1477, 0x1, 0x1);
        gbc.writeMem(0xed90, { 0x55 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa901, gbc.sp());
        EXPECT(0xed91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xed90));
        // 55 0141
        gbc.setState(0x933d, 0x8872, 0xf40, 0x586e, 0x59cd, 0x197e, 0x0, 0x0);
        gbc.writeMem(0x933d, { 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8872, gbc.sp());
        EXPECT(0x933e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x933d));
        // 55 0142
        gbc.setState(0x10af, 0xe78d, 0x6440, 0xc612, 0x5085, 0xe697, 0x1, 0x0);
        gbc.writeMem(0x10af, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe78d, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0143
        gbc.setState(0x4174, 0x2701, 0xad50, 0xd32e, 0x476e, 0x8560, 0x1, 0x0);
        gbc.writeMem(0x4174, { 0x55 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2701, gbc.sp());
        EXPECT(0x4175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0144
        gbc.setState(0x993d, 0x6749, 0xb280, 0xa48c, 0xa56f, 0xaf6b, 0x0, 0x0);
        gbc.writeMem(0x993d, { 0x55 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6749, gbc.sp());
        EXPECT(0x993e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x993d));
        // 55 0145
        gbc.setState(0x77ec, 0x3e0e, 0xbc0, 0x79d7, 0xc3d2, 0x4a17, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0x55 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3e0e, gbc.sp());
        EXPECT(0x77ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0146
        gbc.setState(0xe3b, 0x7240, 0xdbe0, 0xc556, 0x115, 0x499e, 0x0, 0x0);
        gbc.writeMem(0xe3b, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7240, gbc.sp());
        EXPECT(0xe3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0148
        gbc.setState(0xdb6b, 0x21df, 0x9c50, 0x6a3d, 0x9a39, 0xa1da, 0x1, 0x0);
        gbc.writeMem(0xdb6b, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x21df, gbc.sp());
        EXPECT(0xdb6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdb6b));
        // 55 0149
        gbc.setState(0x1ac8, 0x3131, 0x8800, 0x2647, 0x3500, 0xb685, 0x0, 0x0);
        gbc.writeMem(0x1ac8, { 0x55 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3131, gbc.sp());
        EXPECT(0x1ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 014A
        gbc.setState(0x10c7, 0xda0e, 0xbeb0, 0x2148, 0x54e3, 0x1a9c, 0x1, 0x0);
        gbc.writeMem(0x10c7, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xda0e, gbc.sp());
        EXPECT(0x10c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 014B
        gbc.setState(0x81e7, 0xf777, 0x1bf0, 0x1f56, 0x3f04, 0xb9, 0x0, 0x1);
        gbc.writeMem(0x81e7, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf777, gbc.sp());
        EXPECT(0x81e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x81e7));
        // 55 014C
        gbc.setState(0xc1b1, 0x5086, 0xd180, 0x57d6, 0x3183, 0xbec0, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0x55 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5086, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc1b1));
        // 55 014D
        gbc.setState(0x1d17, 0x6490, 0x9bd0, 0x3d6b, 0xbc96, 0xc91, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0x55 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6490, gbc.sp());
        EXPECT(0x1d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 014E
        gbc.setState(0x366a, 0x556b, 0x1bd0, 0x64ac, 0x4b17, 0xa425, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x556b, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 014F
        gbc.setState(0x5edf, 0x6e50, 0x62e0, 0x58ac, 0xbead, 0xa71a, 0x0, 0x1);
        gbc.writeMem(0x5edf, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6e50, gbc.sp());
        EXPECT(0x5ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0150
        gbc.setState(0xda05, 0x24a1, 0x31f0, 0x2dc2, 0x2cc6, 0x8e21, 0x0, 0x0);
        gbc.writeMem(0xda05, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x24a1, gbc.sp());
        EXPECT(0xda06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda05));
        // 55 0151
        gbc.setState(0xe1a4, 0x1da0, 0x6430, 0x69f2, 0xcfcd, 0x199, 0x1, 0x1);
        gbc.writeMem(0xe1a4, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1da0, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe1a4));
        // 55 0152
        gbc.setState(0x85a5, 0x49af, 0x97e0, 0x734f, 0x20d0, 0x3e96, 0x1, 0x0);
        gbc.writeMem(0x85a5, { 0x55 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x49af, gbc.sp());
        EXPECT(0x85a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x85a5));
        // 55 0153
        gbc.setState(0x2da3, 0x9385, 0x8b60, 0x9d5e, 0x7e38, 0x5b13, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0x55 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x2da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0154
        gbc.setState(0xdae, 0x2af9, 0xa780, 0xaab0, 0xa8ed, 0x546d, 0x1, 0x1);
        gbc.writeMem(0xdae, { 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2af9, gbc.sp());
        EXPECT(0xdaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0155
        gbc.setState(0xaae8, 0x7498, 0x6580, 0x5894, 0x4cfa, 0xd39f, 0x1, 0x0);
        gbc.writeMem(0xaae8, { 0x55 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7498, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaae8));
        // 55 0156
        gbc.setState(0x30f9, 0x558c, 0x1b40, 0x72b8, 0xb40f, 0x7cca, 0x1, 0x1);
        gbc.writeMem(0x30f9, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x558c, gbc.sp());
        EXPECT(0x30fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0157
        gbc.setState(0x2c4f, 0xdb08, 0xbf70, 0x309d, 0x8444, 0x98c3, 0x0, 0x0);
        gbc.writeMem(0x2c4f, { 0x55 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdb08, gbc.sp());
        EXPECT(0x2c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0158
        gbc.setState(0x6ce7, 0x6a08, 0x41f0, 0xe89a, 0x63e6, 0x291, 0x1, 0x0);
        gbc.writeMem(0x6ce7, { 0x55 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6a08, gbc.sp());
        EXPECT(0x6ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0159
        gbc.setState(0xd9d3, 0xa351, 0xa4f0, 0xf7e, 0x7bf1, 0x9dc0, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0x55 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa351, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd9d3));
        // 55 015B
        gbc.setState(0x8d3b, 0x3d04, 0xa0e0, 0x3fb4, 0x8cd, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0x8d3b, { 0x55 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3d04, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d3b));
        // 55 015C
        gbc.setState(0xcaa2, 0x72d0, 0xbf30, 0x7dd6, 0x244, 0x79f5, 0x0, 0x0);
        gbc.writeMem(0xcaa2, { 0x55 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x72d0, gbc.sp());
        EXPECT(0xcaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcaa2));
        // 55 015D
        gbc.setState(0xe575, 0x2210, 0x22f0, 0x522f, 0x43fd, 0xa0b8, 0x0, 0x0);
        gbc.writeMem(0xe575, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2210, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe575));
        // 55 015E
        gbc.setState(0x4a1e, 0x6489, 0x9150, 0x7e17, 0x27e1, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0x4a1e, { 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6489, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 015F
        gbc.setState(0xd75c, 0xdff7, 0xae30, 0x543c, 0xae3b, 0x9d65, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0x55 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdff7, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd75c));
        // 55 0160
        gbc.setState(0x4053, 0x111c, 0x2370, 0x39d9, 0x312e, 0x251a, 0x1, 0x0);
        gbc.writeMem(0x4053, { 0x55 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x111c, gbc.sp());
        EXPECT(0x4054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0161
        gbc.setState(0x11b8, 0x3093, 0xc5f0, 0x9a71, 0xff59, 0x7166, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3093, gbc.sp());
        EXPECT(0x11b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0162
        gbc.setState(0x88a1, 0xc7f4, 0xdf40, 0xebb4, 0xbe1f, 0xd5c6, 0x1, 0x1);
        gbc.writeMem(0x88a1, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc7f4, gbc.sp());
        EXPECT(0x88a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x88a1));
        // 55 0163
        gbc.setState(0x9c73, 0x5a1e, 0x67d0, 0xbd1, 0x7a16, 0x35c0, 0x1, 0x1);
        gbc.writeMem(0x9c73, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5a1e, gbc.sp());
        EXPECT(0x9c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9c73));
        // 55 0165
        gbc.setState(0x5c3e, 0xc175, 0xc9b0, 0x5261, 0x1a58, 0xfc, 0x0, 0x1);
        gbc.writeMem(0x5c3e, { 0x55 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0x5c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0166
        gbc.setState(0x7b65, 0xeb0b, 0x7420, 0x8875, 0x1aa2, 0xf8c4, 0x1, 0x1);
        gbc.writeMem(0x7b65, { 0x55 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0x7b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0167
        gbc.setState(0x5487, 0x6732, 0xd480, 0x90a7, 0x570d, 0xe3a6, 0x0, 0x0);
        gbc.writeMem(0x5487, { 0x55 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6732, gbc.sp());
        EXPECT(0x5488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0168
        gbc.setState(0x44f4, 0xef48, 0xf390, 0x9e70, 0xbd44, 0x3dff, 0x1, 0x0);
        gbc.writeMem(0x44f4, { 0x55 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xef48, gbc.sp());
        EXPECT(0x44f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0169
        gbc.setState(0xcc47, 0x83bf, 0x5b80, 0x6a79, 0x85fe, 0x41d6, 0x0, 0x1);
        gbc.writeMem(0xcc47, { 0x55 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0xcc48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc47));
        // 55 016A
        gbc.setState(0x719d, 0xb174, 0xc0b0, 0x8560, 0xf98c, 0x1a3, 0x0, 0x1);
        gbc.writeMem(0x719d, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb174, gbc.sp());
        EXPECT(0x719e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 016C
        gbc.setState(0xfa, 0xdd72, 0x9c50, 0xf10, 0xdb42, 0x6d8a, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdd72, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 016D
        gbc.setState(0x6fad, 0xd601, 0x9ad0, 0x6313, 0xa162, 0x676a, 0x1, 0x1);
        gbc.writeMem(0x6fad, { 0x55 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd601, gbc.sp());
        EXPECT(0x6fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 016E
        gbc.setState(0x88d1, 0x23b, 0x770, 0x63a8, 0x34e5, 0x79ae, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x88d1));
        // 55 0170
        gbc.setState(0xc0d9, 0x9b0d, 0x3720, 0xbece, 0x959b, 0x2851, 0x0, 0x1);
        gbc.writeMem(0xc0d9, { 0x55 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9b0d, gbc.sp());
        EXPECT(0xc0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc0d9));
        // 55 0171
        gbc.setState(0x25d1, 0xd88f, 0x1950, 0x3147, 0x380b, 0x96b8, 0x1, 0x1);
        gbc.writeMem(0x25d1, { 0x55 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd88f, gbc.sp());
        EXPECT(0x25d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0173
        gbc.setState(0x84b9, 0xf6d5, 0x68f0, 0xd408, 0x551a, 0x2c1f, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0x55 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf6d5, gbc.sp());
        EXPECT(0x84ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x84b9));
        // 55 0174
        gbc.setState(0x17f9, 0x1f15, 0x9a10, 0x133, 0xdf3f, 0x51cd, 0x0, 0x0);
        gbc.writeMem(0x17f9, { 0x55 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1f15, gbc.sp());
        EXPECT(0x17fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0175
        gbc.setState(0x8375, 0x3a05, 0x2a10, 0xc7f2, 0x7210, 0xcc1e, 0x0, 0x1);
        gbc.writeMem(0x8375, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3a05, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8375));
        // 55 0176
        gbc.setState(0xbfad, 0x4656, 0xa890, 0x9b3b, 0x32d3, 0x76f2, 0x0, 0x0);
        gbc.writeMem(0xbfad, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4656, gbc.sp());
        EXPECT(0xbfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbfad));
        // 55 0177
        gbc.setState(0xd01c, 0x2eec, 0xe10, 0x38e6, 0x25de, 0xf585, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd01c));
        // 55 0178
        gbc.setState(0xb82b, 0x5cd8, 0xe7d0, 0xd5fa, 0x433b, 0x8bcc, 0x1, 0x1);
        gbc.writeMem(0xb82b, { 0x55 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5cd8, gbc.sp());
        EXPECT(0xb82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb82b));
        // 55 0179
        gbc.setState(0x5bf0, 0xbbea, 0xd220, 0xdd0f, 0xa4c5, 0x925e, 0x1, 0x0);
        gbc.writeMem(0x5bf0, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbbea, gbc.sp());
        EXPECT(0x5bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 017A
        gbc.setState(0x80dc, 0x8da1, 0xb610, 0x59e7, 0x6687, 0x19c7, 0x0, 0x1);
        gbc.writeMem(0x80dc, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8da1, gbc.sp());
        EXPECT(0x80dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x80dc));
        // 55 017B
        gbc.setState(0x3133, 0x2e18, 0xe930, 0x8a0, 0xeaba, 0xa6f5, 0x1, 0x1);
        gbc.writeMem(0x3133, { 0x55 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2e18, gbc.sp());
        EXPECT(0x3134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 017C
        gbc.setState(0xc37d, 0x9b1, 0x7130, 0x4e24, 0x3565, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0xc37d, { 0x55 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9b1, gbc.sp());
        EXPECT(0xc37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc37d));
        // 55 017D
        gbc.setState(0x3d0e, 0x3c2, 0xc870, 0xaf5e, 0x9af9, 0x46d5, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0x55 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3c2, gbc.sp());
        EXPECT(0x3d0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 017E
        gbc.setState(0xa6c, 0x94b6, 0x1720, 0xfdcf, 0xc83e, 0x4774, 0x1, 0x0);
        gbc.writeMem(0xa6c, { 0x55 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x94b6, gbc.sp());
        EXPECT(0xa6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 017F
        gbc.setState(0x19eb, 0xfea, 0xc820, 0x1001, 0x87fd, 0xe597, 0x0, 0x1);
        gbc.writeMem(0x19eb, { 0x55 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfea, gbc.sp());
        EXPECT(0x19ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0181
        gbc.setState(0x8aa2, 0x39c9, 0xc1e0, 0xbaa7, 0xe0d4, 0xbcda, 0x0, 0x0);
        gbc.writeMem(0x8aa2, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x39c9, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8aa2));
        // 55 0182
        gbc.setState(0x4e6a, 0x7c0b, 0xbe90, 0xa512, 0xbf66, 0x3cd4, 0x0, 0x1);
        gbc.writeMem(0x4e6a, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7c0b, gbc.sp());
        EXPECT(0x4e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0183
        gbc.setState(0xcbeb, 0x97be, 0x8310, 0x5b04, 0xb126, 0xe481, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcbeb));
        // 55 0184
        gbc.setState(0x366a, 0xe61, 0xdf40, 0x5659, 0x91e, 0xa876, 0x0, 0x0);
        gbc.writeMem(0x366a, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0x366b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0185
        gbc.setState(0xead3, 0x9658, 0x6490, 0x893c, 0x5391, 0xb739, 0x1, 0x0);
        gbc.writeMem(0xead3, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9658, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xead3));
        // 55 0186
        gbc.setState(0xd9d3, 0xd8c1, 0xae30, 0x60a1, 0x9816, 0x7bd6, 0x0, 0x0);
        gbc.writeMem(0xd9d3, { 0x55 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd8c1, gbc.sp());
        EXPECT(0xd9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd9d3));
        // 55 0187
        gbc.setState(0x6238, 0x44d6, 0x6420, 0x674e, 0x7687, 0xdbfd, 0x0, 0x1);
        gbc.writeMem(0x6238, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x44d6, gbc.sp());
        EXPECT(0x6239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0188
        gbc.setState(0xe045, 0x84a5, 0x9b50, 0x727c, 0x2377, 0x64b6, 0x1, 0x0);
        gbc.writeMem(0xe045, { 0x55 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x84a5, gbc.sp());
        EXPECT(0xe046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe045));
        // 55 0189
        gbc.setState(0x181e, 0x73a3, 0xf390, 0xcd63, 0x185c, 0xac29, 0x1, 0x0);
        gbc.writeMem(0x181e, { 0x55 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x73a3, gbc.sp());
        EXPECT(0x181f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 018A
        gbc.setState(0x501a, 0x59ff, 0x7420, 0x1cdc, 0xabd5, 0xb45c, 0x0, 0x1);
        gbc.writeMem(0x501a, { 0x55 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x59ff, gbc.sp());
        EXPECT(0x501b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 018B
        gbc.setState(0x666b, 0x6bec, 0x4760, 0x9873, 0x712c, 0x914f, 0x0, 0x0);
        gbc.writeMem(0x666b, { 0x55 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6bec, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 018C
        gbc.setState(0x36c1, 0x9558, 0x18e0, 0x4ca5, 0x71f5, 0x8187, 0x0, 0x0);
        gbc.writeMem(0x36c1, { 0x55 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9558, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 018D
        gbc.setState(0x3f67, 0x78bf, 0x6730, 0x3493, 0x59db, 0xfc5a, 0x0, 0x0);
        gbc.writeMem(0x3f67, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x78bf, gbc.sp());
        EXPECT(0x3f68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 018E
        gbc.setState(0x1da, 0x6b47, 0xf790, 0x83eb, 0xcaf6, 0x2303, 0x0, 0x1);
        gbc.writeMem(0x1da, { 0x55 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0x1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 018F
        gbc.setState(0x5e, 0x1634, 0x3c80, 0x199, 0xd2b8, 0xef14, 0x1, 0x0);
        gbc.writeMem(0x5e, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0190
        gbc.setState(0xa0e9, 0xd7b1, 0xfcf0, 0xa474, 0x25da, 0x66ea, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0x55 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd7b1, gbc.sp());
        EXPECT(0xa0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa0e9));
        // 55 0191
        gbc.setState(0x94f9, 0x6e8f, 0x3590, 0xe656, 0x22a2, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0x94f9, { 0x55 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6e8f, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x94f9));
        // 55 0192
        gbc.setState(0xef3, 0x2bd0, 0xd960, 0xde7e, 0x9e72, 0x2655, 0x0, 0x1);
        gbc.writeMem(0xef3, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2bd0, gbc.sp());
        EXPECT(0xef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0193
        gbc.setState(0xd7ab, 0x3769, 0x4400, 0x728f, 0x45c4, 0x4d4, 0x0, 0x1);
        gbc.writeMem(0xd7ab, { 0x55 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3769, gbc.sp());
        EXPECT(0xd7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd7ab));
        // 55 0194
        gbc.setState(0x96ed, 0xa9a0, 0x8ba0, 0xce7, 0x9cef, 0xc82a, 0x0, 0x0);
        gbc.writeMem(0x96ed, { 0x55 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa9a0, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x96ed));
        // 55 0195
        gbc.setState(0x54dd, 0xedd3, 0xf340, 0xf43b, 0xf7e2, 0xd1f, 0x1, 0x1);
        gbc.writeMem(0x54dd, { 0x55 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xedd3, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0196
        gbc.setState(0x8088, 0x2952, 0x1f80, 0xe4e0, 0xe9c1, 0x80dc, 0x1, 0x0);
        gbc.writeMem(0x8088, { 0x55 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2952, gbc.sp());
        EXPECT(0x8089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8088));
        // 55 0197
        gbc.setState(0xd4e1, 0x7777, 0x5760, 0x5cb5, 0x9a54, 0xf6ae, 0x0, 0x0);
        gbc.writeMem(0xd4e1, { 0x55 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7777, gbc.sp());
        EXPECT(0xd4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd4e1));
        // 55 0198
        gbc.setState(0xda84, 0xed07, 0xe20, 0xb9b0, 0xbd2a, 0xa4b4, 0x1, 0x1);
        gbc.writeMem(0xda84, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xed07, gbc.sp());
        EXPECT(0xda85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda84));
        // 55 0199
        gbc.setState(0x2523, 0x9371, 0x6020, 0x3098, 0x3533, 0xb4b4, 0x1, 0x0);
        gbc.writeMem(0x2523, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9371, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 019A
        gbc.setState(0x7d92, 0xd353, 0x8c20, 0x8ecf, 0x160c, 0x3fc3, 0x1, 0x0);
        gbc.writeMem(0x7d92, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd353, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 019C
        gbc.setState(0x2dfb, 0x35a4, 0x6af0, 0x1731, 0xc3bc, 0xa103, 0x1, 0x0);
        gbc.writeMem(0x2dfb, { 0x55 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x35a4, gbc.sp());
        EXPECT(0x2dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 019D
        gbc.setState(0x66b3, 0x99c5, 0xb1f0, 0x464b, 0x4526, 0xe1b2, 0x0, 0x1);
        gbc.writeMem(0x66b3, { 0x55 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x99c5, gbc.sp());
        EXPECT(0x66b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 019E
        gbc.setState(0xb89, 0x9f23, 0xb730, 0xd89, 0x76f, 0x50fa, 0x0, 0x0);
        gbc.writeMem(0xb89, { 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0xb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 019F
        gbc.setState(0xe21d, 0xf526, 0x69b0, 0xab1c, 0x4cff, 0x81ab, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0x55 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf526, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe21d));
        // 55 01A0
        gbc.setState(0x8f9e, 0x57de, 0x9b20, 0x451d, 0xcf64, 0x8749, 0x1, 0x0);
        gbc.writeMem(0x8f9e, { 0x55 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x8f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8f9e));
        // 55 01A1
        gbc.setState(0x11ee, 0x6cf9, 0xa5b0, 0x3937, 0xd63b, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x11ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01A2
        gbc.setState(0xe685, 0xe912, 0xc3c0, 0x37fe, 0xce9e, 0xe6da, 0x1, 0x1);
        gbc.writeMem(0xe685, { 0x55 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe912, gbc.sp());
        EXPECT(0xe686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe685));
        // 55 01A3
        gbc.setState(0xdf91, 0xfff9, 0xef50, 0x96b0, 0xc850, 0x8b56, 0x0, 0x1);
        gbc.writeMem(0xdf91, { 0x55 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdf91));
        // 55 01A4
        gbc.setState(0x1b8a, 0x4979, 0x1c0, 0x8b9e, 0x4a9e, 0xc3a7, 0x0, 0x0);
        gbc.writeMem(0x1b8a, { 0x55 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4979, gbc.sp());
        EXPECT(0x1b8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01A5
        gbc.setState(0xe5dc, 0x3d48, 0x2e40, 0x8808, 0x2151, 0x57c6, 0x1, 0x0);
        gbc.writeMem(0xe5dc, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3d48, gbc.sp());
        EXPECT(0xe5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe5dc));
        // 55 01A6
        gbc.setState(0xb6d2, 0x2562, 0x6b60, 0x5fa4, 0x9541, 0xd95b, 0x0, 0x1);
        gbc.writeMem(0xb6d2, { 0x55 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2562, gbc.sp());
        EXPECT(0xb6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb6d2));
        // 55 01A7
        gbc.setState(0xb52e, 0x68fa, 0xcbf0, 0x29eb, 0x12ad, 0x31a, 0x0, 0x1);
        gbc.writeMem(0xb52e, { 0x55 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x68fa, gbc.sp());
        EXPECT(0xb52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb52e));
        // 55 01A8
        gbc.setState(0x3d6a, 0x49a2, 0xeb80, 0xe43c, 0xe9c2, 0x9867, 0x1, 0x0);
        gbc.writeMem(0x3d6a, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x49a2, gbc.sp());
        EXPECT(0x3d6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01A9
        gbc.setState(0x89f6, 0x82aa, 0x8460, 0xe89c, 0x738c, 0x8518, 0x0, 0x1);
        gbc.writeMem(0x89f6, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x82aa, gbc.sp());
        EXPECT(0x89f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x89f6));
        // 55 01AA
        gbc.setState(0x55cd, 0xb91, 0x9990, 0x6188, 0xa981, 0xb258, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0x55 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb91, gbc.sp());
        EXPECT(0x55ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01AB
        gbc.setState(0xec34, 0x643a, 0xe340, 0x9465, 0x1b43, 0xf99c, 0x0, 0x1);
        gbc.writeMem(0xec34, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x643a, gbc.sp());
        EXPECT(0xec35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xec34));
        // 55 01AC
        gbc.setState(0x64c5, 0xfa6, 0x3660, 0xeee0, 0xba58, 0x7a6a, 0x1, 0x0);
        gbc.writeMem(0x64c5, { 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfa6, gbc.sp());
        EXPECT(0x64c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01AD
        gbc.setState(0xa30c, 0x54bb, 0xcd80, 0x8ed7, 0x74c0, 0x2f4c, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x54bb, gbc.sp());
        EXPECT(0xa30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa30c));
        // 55 01AE
        gbc.setState(0x767e, 0xaa0f, 0x38d0, 0x5554, 0x80b5, 0x1206, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0x55 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaa0f, gbc.sp());
        EXPECT(0x767f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01AF
        gbc.setState(0x4aef, 0xbc9f, 0xf140, 0x5b4b, 0x94ca, 0x6851, 0x1, 0x0);
        gbc.writeMem(0x4aef, { 0x55 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbc9f, gbc.sp());
        EXPECT(0x4af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01B0
        gbc.setState(0x5abd, 0xaf51, 0x6a00, 0xe0da, 0xfae8, 0x4f04, 0x1, 0x0);
        gbc.writeMem(0x5abd, { 0x55 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xaf51, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01B1
        gbc.setState(0x42f3, 0x90d7, 0x8660, 0x1e43, 0x274f, 0x4df5, 0x1, 0x1);
        gbc.writeMem(0x42f3, { 0x55 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x90d7, gbc.sp());
        EXPECT(0x42f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01B2
        gbc.setState(0x862e, 0xbd7f, 0xe010, 0xd994, 0xc47f, 0x9bc3, 0x1, 0x0);
        gbc.writeMem(0x862e, { 0x55 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbd7f, gbc.sp());
        EXPECT(0x862f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x862e));
        // 55 01B3
        gbc.setState(0xef5a, 0x3c1c, 0x54b0, 0x8e31, 0x7bfc, 0xbcc5, 0x0, 0x1);
        gbc.writeMem(0xef5a, { 0x55 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3c1c, gbc.sp());
        EXPECT(0xef5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xef5a));
        // 55 01B4
        gbc.setState(0x8c15, 0xc00, 0xce10, 0xa0af, 0xdefc, 0x9609, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0x55 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc00, gbc.sp());
        EXPECT(0x8c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8c15));
        // 55 01B5
        gbc.setState(0x1106, 0x3b28, 0x66e0, 0x4f61, 0x5d1d, 0xd7e3, 0x1, 0x1);
        gbc.writeMem(0x1106, { 0x55 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b28, gbc.sp());
        EXPECT(0x1107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01B6
        gbc.setState(0xcf72, 0x5508, 0x8960, 0x40f1, 0x4e09, 0x842a, 0x1, 0x0);
        gbc.writeMem(0xcf72, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5508, gbc.sp());
        EXPECT(0xcf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcf72));
        // 55 01B7
        gbc.setState(0xe335, 0xcfa7, 0xa350, 0x362, 0xb076, 0xc5f9, 0x0, 0x0);
        gbc.writeMem(0xe335, { 0x55 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcfa7, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe335));
        // 55 01B8
        gbc.setState(0x491c, 0x4960, 0x3730, 0x2c11, 0x33b9, 0x3c1f, 0x1, 0x0);
        gbc.writeMem(0x491c, { 0x55 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4960, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01B9
        gbc.setState(0x2cfe, 0xeb3c, 0x3bd0, 0x13e7, 0xef17, 0x61d, 0x0, 0x1);
        gbc.writeMem(0x2cfe, { 0x55 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x2cff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01BA
        gbc.setState(0xa5fd, 0x3e2a, 0x1690, 0x51ea, 0x2102, 0xf73d, 0x0, 0x1);
        gbc.writeMem(0xa5fd, { 0x55 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3e2a, gbc.sp());
        EXPECT(0xa5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa5fd));
        // 55 01BB
        gbc.setState(0x8cc2, 0x9a8d, 0x7650, 0x592f, 0x161b, 0xcddd, 0x1, 0x1);
        gbc.writeMem(0x8cc2, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9a8d, gbc.sp());
        EXPECT(0x8cc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8cc2));
        // 55 01BC
        gbc.setState(0xa1ce, 0x8dd4, 0x9200, 0x115e, 0x8ee0, 0x7c9b, 0x1, 0x0);
        gbc.writeMem(0xa1ce, { 0x55 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8dd4, gbc.sp());
        EXPECT(0xa1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa1ce));
        // 55 01BD
        gbc.setState(0xc5b5, 0xf824, 0xeb00, 0x4f56, 0xa704, 0xd550, 0x1, 0x1);
        gbc.writeMem(0xc5b5, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf824, gbc.sp());
        EXPECT(0xc5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc5b5));
        // 55 01BE
        gbc.setState(0x8034, 0xc533, 0xb8a0, 0xfd7a, 0x3282, 0x710f, 0x1, 0x1);
        gbc.writeMem(0x8034, { 0x55 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc533, gbc.sp());
        EXPECT(0x8035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8034));
        // 55 01BF
        gbc.setState(0x9acc, 0x512b, 0x6e90, 0xae9c, 0xc042, 0x912b, 0x1, 0x1);
        gbc.writeMem(0x9acc, { 0x55 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x512b, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9acc));
        // 55 01C0
        gbc.setState(0x631b, 0x1812, 0x5e30, 0xb842, 0x2332, 0x3c37, 0x1, 0x1);
        gbc.writeMem(0x631b, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1812, gbc.sp());
        EXPECT(0x631c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01C1
        gbc.setState(0xc895, 0xe685, 0xc730, 0x24a4, 0x6e39, 0x1ce9, 0x1, 0x0);
        gbc.writeMem(0xc895, { 0x55 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe685, gbc.sp());
        EXPECT(0xc896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc895));
        // 55 01C2
        gbc.setState(0x95ca, 0x105c, 0x8390, 0x295b, 0xd9b5, 0x947e, 0x1, 0x1);
        gbc.writeMem(0x95ca, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x105c, gbc.sp());
        EXPECT(0x95cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x95ca));
        // 55 01C3
        gbc.setState(0xd512, 0xa081, 0x4eb0, 0xba14, 0x384c, 0x45bc, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0x55 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa081, gbc.sp());
        EXPECT(0xd513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd512));
        // 55 01C4
        gbc.setState(0x6f84, 0x7a4d, 0x43b0, 0x774b, 0x1ee9, 0x490e, 0x1, 0x0);
        gbc.writeMem(0x6f84, { 0x55 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7a4d, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01C5
        gbc.setState(0xbf3c, 0x4cb0, 0x8ce0, 0x390f, 0x3470, 0xb773, 0x0, 0x0);
        gbc.writeMem(0xbf3c, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4cb0, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbf3c));
        // 55 01C6
        gbc.setState(0x97d, 0xca4c, 0xcd60, 0x50d6, 0xa2, 0xb9c2, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xca4c, gbc.sp());
        EXPECT(0x97e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01C7
        gbc.setState(0x832, 0x5b3, 0x13a0, 0x26b0, 0xb109, 0xbd49, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0x833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01C8
        gbc.setState(0x1cfb, 0x516b, 0xf730, 0xc0ee, 0x302, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0x1cfb, { 0x55 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0x1cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01C9
        gbc.setState(0x5e5f, 0xf76, 0x60d0, 0x66e5, 0xa828, 0xee52, 0x1, 0x0);
        gbc.writeMem(0x5e5f, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf76, gbc.sp());
        EXPECT(0x5e60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01CA
        gbc.setState(0x906e, 0x3760, 0xecd0, 0xf79, 0x9123, 0x5775, 0x0, 0x0);
        gbc.writeMem(0x906e, { 0x55 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3760, gbc.sp());
        EXPECT(0x906f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x906e));
        // 55 01CB
        gbc.setState(0xbacd, 0x3b6e, 0xc0e0, 0xadee, 0xf257, 0x32a6, 0x1, 0x0);
        gbc.writeMem(0xbacd, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbacd));
        // 55 01CC
        gbc.setState(0xdc5d, 0xf02b, 0xd550, 0xa719, 0x9c81, 0x1f17, 0x1, 0x0);
        gbc.writeMem(0xdc5d, { 0x55 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf02b, gbc.sp());
        EXPECT(0xdc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc5d));
        // 55 01CD
        gbc.setState(0xb5b3, 0x47c6, 0xeda0, 0x427c, 0xd4d3, 0x7f4f, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0x55 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x47c6, gbc.sp());
        EXPECT(0xb5b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb5b3));
        // 55 01CE
        gbc.setState(0x3f55, 0x9d3b, 0x22c0, 0x4ac0, 0x236, 0x6f15, 0x0, 0x1);
        gbc.writeMem(0x3f55, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9d3b, gbc.sp());
        EXPECT(0x3f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01CF
        gbc.setState(0x8f2e, 0x355c, 0xc560, 0x57f1, 0xb4b9, 0x4b37, 0x0, 0x0);
        gbc.writeMem(0x8f2e, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x355c, gbc.sp());
        EXPECT(0x8f2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8f2e));
        // 55 01D0
        gbc.setState(0x25e7, 0xa21b, 0x8070, 0x54cb, 0x4e0d, 0xe4b7, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x25e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01D1
        gbc.setState(0x5d54, 0xa13e, 0x4bd0, 0xd826, 0x59ab, 0x9ef0, 0x1, 0x0);
        gbc.writeMem(0x5d54, { 0x55 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa13e, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01D2
        gbc.setState(0xb51e, 0x921f, 0xab50, 0x88ca, 0xfc51, 0x1eb6, 0x0, 0x0);
        gbc.writeMem(0xb51e, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x921f, gbc.sp());
        EXPECT(0xb51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb51e));
        // 55 01D3
        gbc.setState(0x8528, 0x312b, 0x30f0, 0xf401, 0x6baf, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0x8528, { 0x55 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x312b, gbc.sp());
        EXPECT(0x8529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8528));
        // 55 01D4
        gbc.setState(0x4df8, 0x3a08, 0xba70, 0xdb52, 0x1af9, 0xc5d6, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0x55 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3a08, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01D5
        gbc.setState(0x7007, 0x425a, 0x1b90, 0x9b1c, 0x3041, 0x4993, 0x1, 0x0);
        gbc.writeMem(0x7007, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x425a, gbc.sp());
        EXPECT(0x7008, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01D6
        gbc.setState(0xb109, 0xd099, 0x6740, 0x7de9, 0x888c, 0x5f42, 0x1, 0x1);
        gbc.writeMem(0xb109, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd099, gbc.sp());
        EXPECT(0xb10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb109));
        // 55 01D7
        gbc.setState(0x54a9, 0x5f38, 0x8960, 0xe72c, 0x9671, 0xd2dc, 0x0, 0x0);
        gbc.writeMem(0x54a9, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5f38, gbc.sp());
        EXPECT(0x54aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01D8
        gbc.setState(0x9e4c, 0x2bfd, 0x6e20, 0xe414, 0xeba9, 0xc7fa, 0x0, 0x0);
        gbc.writeMem(0x9e4c, { 0x55 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9e4c));
        // 55 01D9
        gbc.setState(0xea6c, 0xbcf6, 0x2af0, 0x4bd9, 0x475a, 0xa4b4, 0x1, 0x1);
        gbc.writeMem(0xea6c, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbcf6, gbc.sp());
        EXPECT(0xea6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xea6c));
        // 55 01DA
        gbc.setState(0x9e73, 0x6b85, 0x32a0, 0x1bd3, 0x1431, 0x377a, 0x1, 0x1);
        gbc.writeMem(0x9e73, { 0x55 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6b85, gbc.sp());
        EXPECT(0x9e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9e73));
        // 55 01DB
        gbc.setState(0xe323, 0xb145, 0xea40, 0xfb91, 0xd726, 0xb14, 0x0, 0x1);
        gbc.writeMem(0xe323, { 0x55 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb145, gbc.sp());
        EXPECT(0xe324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe323));
        // 55 01DC
        gbc.setState(0x97e3, 0x3316, 0xc510, 0x78a4, 0x2f20, 0x7aa1, 0x1, 0x0);
        gbc.writeMem(0x97e3, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3316, gbc.sp());
        EXPECT(0x97e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x97e3));
        // 55 01DD
        gbc.setState(0x3ee0, 0xe39f, 0x3150, 0x5f79, 0xc55d, 0x8a4b, 0x1, 0x0);
        gbc.writeMem(0x3ee0, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe39f, gbc.sp());
        EXPECT(0x3ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01DE
        gbc.setState(0x5502, 0x6d2a, 0x2820, 0x2120, 0x58d3, 0xd62e, 0x1, 0x0);
        gbc.writeMem(0x5502, { 0x55 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6d2a, gbc.sp());
        EXPECT(0x5503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01DF
        gbc.setState(0x9074, 0x1a7d, 0x7990, 0x827e, 0xe625, 0x3e17, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0x55 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x9075, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9074));
        // 55 01E0
        gbc.setState(0x8d66, 0xcae9, 0xec90, 0x211a, 0x1e9a, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0x8d66, { 0x55 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcae9, gbc.sp());
        EXPECT(0x8d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d66));
        // 55 01E1
        gbc.setState(0x4462, 0xd585, 0x4cb0, 0x3404, 0x327e, 0xfe13, 0x1, 0x0);
        gbc.writeMem(0x4462, { 0x55 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd585, gbc.sp());
        EXPECT(0x4463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01E2
        gbc.setState(0xdd65, 0xc3d5, 0xf680, 0xad0, 0x89c5, 0x9e2a, 0x1, 0x1);
        gbc.writeMem(0xdd65, { 0x55 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc3d5, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdd65));
        // 55 01E3
        gbc.setState(0x5961, 0x52c2, 0xc300, 0x6643, 0xbac, 0x7cb0, 0x1, 0x1);
        gbc.writeMem(0x5961, { 0x55 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0x5962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01E4
        gbc.setState(0x992c, 0x6d9e, 0xad50, 0x5ed5, 0x3ebd, 0x4ab6, 0x1, 0x1);
        gbc.writeMem(0x992c, { 0x55 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6d9e, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x992c));
        // 55 01E5
        gbc.setState(0xb26c, 0xe470, 0xc760, 0x93d7, 0x4263, 0x8a16, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0x55 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb26c));
        // 55 01E6
        gbc.setState(0xab68, 0x1de4, 0x5500, 0xd84e, 0x1bd3, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1de4, gbc.sp());
        EXPECT(0xab69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xab68));
        // 55 01E7
        gbc.setState(0x41ae, 0xd3a4, 0xd920, 0x3ab9, 0x23d7, 0xa17, 0x1, 0x1);
        gbc.writeMem(0x41ae, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd3a4, gbc.sp());
        EXPECT(0x41af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01E8
        gbc.setState(0x81f2, 0x285b, 0x3940, 0x92a1, 0x6641, 0x1c1b, 0x0, 0x1);
        gbc.writeMem(0x81f2, { 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x285b, gbc.sp());
        EXPECT(0x81f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x81f2));
        // 55 01E9
        gbc.setState(0x3ef4, 0x6b52, 0x2340, 0x6f5e, 0x1c7b, 0x491d, 0x1, 0x0);
        gbc.writeMem(0x3ef4, { 0x55 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6b52, gbc.sp());
        EXPECT(0x3ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01EA
        gbc.setState(0x6c6f, 0x13f6, 0x35f0, 0x3800, 0xae1c, 0xa4cb, 0x1, 0x1);
        gbc.writeMem(0x6c6f, { 0x55 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x13f6, gbc.sp());
        EXPECT(0x6c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01EB
        gbc.setState(0x8520, 0x4440, 0x3980, 0xdb63, 0x96ae, 0x34e2, 0x1, 0x1);
        gbc.writeMem(0x8520, { 0x55 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4440, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8520));
        // 55 01EC
        gbc.setState(0x402e, 0x91c3, 0xb980, 0xbf31, 0x5804, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0x402e, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x91c3, gbc.sp());
        EXPECT(0x402f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01ED
        gbc.setState(0xa624, 0x73f5, 0xd6e0, 0x7cc1, 0xf44b, 0xf682, 0x0, 0x0);
        gbc.writeMem(0xa624, { 0x55 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x73f5, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa624));
        // 55 01EE
        gbc.setState(0x896d, 0x70ca, 0xb790, 0x7fa7, 0xc1e0, 0x9058, 0x1, 0x0);
        gbc.writeMem(0x896d, { 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x70ca, gbc.sp());
        EXPECT(0x896e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x896d));
        // 55 01EF
        gbc.setState(0xde37, 0x6ea3, 0x5400, 0x8fec, 0xf676, 0xb1e5, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0x55 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6ea3, gbc.sp());
        EXPECT(0xde38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xde37));
        // 55 01F0
        gbc.setState(0x56f1, 0x188e, 0xfdb0, 0xb16c, 0xdf14, 0x934d, 0x0, 0x1);
        gbc.writeMem(0x56f1, { 0x55 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x188e, gbc.sp());
        EXPECT(0x56f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01F1
        gbc.setState(0x9230, 0xbe29, 0xea70, 0xcfcb, 0xaaf2, 0x1a67, 0x1, 0x0);
        gbc.writeMem(0x9230, { 0x55 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0x9231, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9230));
        // 55 01F2
        gbc.setState(0x9f4d, 0x2f92, 0x2790, 0x4387, 0xb3c9, 0x5f4f, 0x1, 0x1);
        gbc.writeMem(0x9f4d, { 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2f92, gbc.sp());
        EXPECT(0x9f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9f4d));
        // 55 01F3
        gbc.setState(0x3594, 0xa630, 0x3ce0, 0x3f09, 0x7f66, 0x6d57, 0x0, 0x0);
        gbc.writeMem(0x3594, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x3595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01F4
        gbc.setState(0x54e4, 0x1712, 0xe5e0, 0x2dd, 0xa4d6, 0x1334, 0x0, 0x1);
        gbc.writeMem(0x54e4, { 0x55 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1712, gbc.sp());
        EXPECT(0x54e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01F5
        gbc.setState(0x8d4b, 0x6e7e, 0x3020, 0x6f73, 0xa9f3, 0x160d, 0x1, 0x1);
        gbc.writeMem(0x8d4b, { 0x55 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6e7e, gbc.sp());
        EXPECT(0x8d4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d4b));
        // 55 01F6
        gbc.setState(0xca6f, 0x138e, 0xdc70, 0xe04, 0xf17e, 0xf2b2, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0x55 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x138e, gbc.sp());
        EXPECT(0xca70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xca6f));
        // 55 01F7
        gbc.setState(0x7338, 0xfd09, 0xea70, 0xa0b6, 0x9e5e, 0x2e77, 0x0, 0x0);
        gbc.writeMem(0x7338, { 0x55 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xfd09, gbc.sp());
        EXPECT(0x7339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01F8
        gbc.setState(0x6abe, 0x5808, 0xd7b0, 0xb686, 0x5ba0, 0x4d47, 0x1, 0x1);
        gbc.writeMem(0x6abe, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5808, gbc.sp());
        EXPECT(0x6abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01F9
        gbc.setState(0xae5f, 0x8462, 0xdcb0, 0xbec7, 0x6f1b, 0xcc79, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0x55 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8462, gbc.sp());
        EXPECT(0xae60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xae5f));
        // 55 01FA
        gbc.setState(0xc982, 0x11ad, 0x1e00, 0x195a, 0xf2d0, 0xf938, 0x1, 0x1);
        gbc.writeMem(0xc982, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x11ad, gbc.sp());
        EXPECT(0xc983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc982));
        // 55 01FC
        gbc.setState(0xcc38, 0xfb0a, 0xc780, 0x3b7, 0xde4f, 0x2652, 0x1, 0x1);
        gbc.writeMem(0xcc38, { 0x55 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0xcc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc38));
        // 55 01FD
        gbc.setState(0x77df, 0x1399, 0x1d10, 0x5b8c, 0xa8dd, 0xdd32, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x55 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1399, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 01FE
        gbc.setState(0x58, 0x2299, 0xa560, 0xe9af, 0x34ef, 0x5664, 0x0, 0x0);
        gbc.writeMem(0x58, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2299, gbc.sp());
        EXPECT(0x59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 01FF
        gbc.setState(0x5e6f, 0x6e00, 0x53a0, 0x17cf, 0xb055, 0x75e7, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0x55 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6e00, gbc.sp());
        EXPECT(0x5e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0200
        gbc.setState(0x5ec, 0x60cc, 0xa840, 0xeeb, 0x1c03, 0x362d, 0x1, 0x0);
        gbc.writeMem(0x5ec, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x60cc, gbc.sp());
        EXPECT(0x5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0201
        gbc.setState(0xebc4, 0xf236, 0xfc70, 0x27d1, 0xb116, 0xd2cb, 0x1, 0x0);
        gbc.writeMem(0xebc4, { 0x55 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf236, gbc.sp());
        EXPECT(0xebc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xebc4));
        // 55 0202
        gbc.setState(0x1ce0, 0x6eae, 0xfb40, 0x5f28, 0xeb92, 0x5352, 0x0, 0x1);
        gbc.writeMem(0x1ce0, { 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6eae, gbc.sp());
        EXPECT(0x1ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0204
        gbc.setState(0x4121, 0x5f77, 0xfb00, 0x7e37, 0xd065, 0xc18a, 0x1, 0x0);
        gbc.writeMem(0x4121, { 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5f77, gbc.sp());
        EXPECT(0x4122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0205
        gbc.setState(0x5d6b, 0xed23, 0xe460, 0x4c55, 0x85b6, 0x8ee2, 0x1, 0x1);
        gbc.writeMem(0x5d6b, { 0x55 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed23, gbc.sp());
        EXPECT(0x5d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0206
        gbc.setState(0x7cf7, 0xfa8, 0xbd30, 0xe09c, 0xbbe2, 0x6264, 0x0, 0x0);
        gbc.writeMem(0x7cf7, { 0x55 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfa8, gbc.sp());
        EXPECT(0x7cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0207
        gbc.setState(0x8ee9, 0x7e, 0x4c80, 0x8d0, 0xc070, 0x58f3, 0x0, 0x0);
        gbc.writeMem(0x8ee9, { 0x55 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7e, gbc.sp());
        EXPECT(0x8eea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8ee9));
        // 55 0208
        gbc.setState(0x71ee, 0xfdda, 0x6da0, 0x980e, 0x3e91, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0x71ee, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xfdda, gbc.sp());
        EXPECT(0x71ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0209
        gbc.setState(0xbe5c, 0x2616, 0x55e0, 0xe8e3, 0x7d0a, 0x9a6, 0x0, 0x0);
        gbc.writeMem(0xbe5c, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2616, gbc.sp());
        EXPECT(0xbe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbe5c));
        // 55 020A
        gbc.setState(0x6156, 0x61cf, 0x6320, 0xdd7a, 0x837b, 0x75c, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0x55 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x61cf, gbc.sp());
        EXPECT(0x6157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 020B
        gbc.setState(0x5f9, 0x9cfa, 0xd980, 0xc923, 0xda26, 0x1a91, 0x0, 0x0);
        gbc.writeMem(0x5f9, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 020C
        gbc.setState(0xe1ec, 0x3913, 0x2070, 0x58e7, 0x99f4, 0x53bd, 0x1, 0x1);
        gbc.writeMem(0xe1ec, { 0x55 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3913, gbc.sp());
        EXPECT(0xe1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe1ec));
        // 55 020D
        gbc.setState(0x5351, 0x486, 0x2c60, 0xc845, 0x8d72, 0xf473, 0x1, 0x1);
        gbc.writeMem(0x5351, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x486, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 020E
        gbc.setState(0x40a2, 0x7d2e, 0x8410, 0x146, 0x7a8d, 0xec57, 0x0, 0x1);
        gbc.writeMem(0x40a2, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7d2e, gbc.sp());
        EXPECT(0x40a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 020F
        gbc.setState(0xe66a, 0xf348, 0x5090, 0x75bd, 0x49fc, 0x3ce6, 0x1, 0x0);
        gbc.writeMem(0xe66a, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf348, gbc.sp());
        EXPECT(0xe66b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe66a));
        // 55 0210
        gbc.setState(0x40ab, 0x9919, 0x9a60, 0xac2d, 0x88a, 0x4f32, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0x55 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0x40ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0211
        gbc.setState(0x7fea, 0x5c8a, 0x9c70, 0x3b0, 0x6857, 0x9fd2, 0x0, 0x1);
        gbc.writeMem(0x7fea, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5c8a, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0212
        gbc.setState(0x35a7, 0xc49c, 0xee60, 0xe8d9, 0x7f19, 0x9008, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc49c, gbc.sp());
        EXPECT(0x35a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0213
        gbc.setState(0xe6e1, 0x930b, 0x1980, 0xc213, 0x13ef, 0xd7d9, 0x1, 0x0);
        gbc.writeMem(0xe6e1, { 0x55 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x930b, gbc.sp());
        EXPECT(0xe6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe6e1));
        // 55 0214
        gbc.setState(0xb9ea, 0x864f, 0x2b80, 0xe113, 0x7f15, 0x5642, 0x1, 0x0);
        gbc.writeMem(0xb9ea, { 0x55 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x864f, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb9ea));
        // 55 0217
        gbc.setState(0xd369, 0x270a, 0x7030, 0x286c, 0x7762, 0x5c03, 0x0, 0x1);
        gbc.writeMem(0xd369, { 0x55 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0xd36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd369));
        // 55 0218
        gbc.setState(0xb97f, 0x875e, 0x7660, 0x3131, 0x3b5c, 0x5061, 0x0, 0x0);
        gbc.writeMem(0xb97f, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x875e, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb97f));
        // 55 021A
        gbc.setState(0xab25, 0x8edd, 0x1700, 0x1d46, 0x7c95, 0xd140, 0x1, 0x1);
        gbc.writeMem(0xab25, { 0x55 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xab25));
        // 55 021C
        gbc.setState(0xb760, 0x8014, 0x8460, 0x18ce, 0x5821, 0x9b98, 0x0, 0x0);
        gbc.writeMem(0xb760, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8014, gbc.sp());
        EXPECT(0xb761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb760));
        // 55 021D
        gbc.setState(0x94ea, 0xdb71, 0xabc0, 0xea92, 0x4342, 0xb371, 0x0, 0x1);
        gbc.writeMem(0x94ea, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xdb71, gbc.sp());
        EXPECT(0x94eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x94ea));
        // 55 021E
        gbc.setState(0x724c, 0x9128, 0x38f0, 0xecb1, 0xcc22, 0x3213, 0x0, 0x0);
        gbc.writeMem(0x724c, { 0x55 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9128, gbc.sp());
        EXPECT(0x724d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 021F
        gbc.setState(0xeabf, 0xa276, 0x5070, 0x793f, 0xd23f, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0xeabf, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa276, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeabf));
        // 55 0220
        gbc.setState(0xa1a6, 0x108c, 0x2980, 0x3300, 0x3a71, 0x7ab6, 0x1, 0x0);
        gbc.writeMem(0xa1a6, { 0x55 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0xa1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa1a6));
        // 55 0221
        gbc.setState(0xd89e, 0x74dd, 0x7d70, 0xdd26, 0x4584, 0x9987, 0x1, 0x0);
        gbc.writeMem(0xd89e, { 0x55 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x74dd, gbc.sp());
        EXPECT(0xd89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd89e));
        // 55 0222
        gbc.setState(0xb4cb, 0x5b45, 0xdf00, 0xf7cf, 0x1b7d, 0xb5aa, 0x1, 0x1);
        gbc.writeMem(0xb4cb, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0xb4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb4cb));
        // 55 0223
        gbc.setState(0x3baa, 0xfefd, 0x6020, 0x694a, 0x9d5c, 0xdae3, 0x0, 0x0);
        gbc.writeMem(0x3baa, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfefd, gbc.sp());
        EXPECT(0x3bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0224
        gbc.setState(0xeed9, 0xcb16, 0xfa90, 0xd281, 0xc443, 0xf292, 0x0, 0x1);
        gbc.writeMem(0xeed9, { 0x55 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcb16, gbc.sp());
        EXPECT(0xeeda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeed9));
        // 55 0225
        gbc.setState(0xdc97, 0x5bac, 0x8470, 0x1259, 0xce9c, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0xdc97, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5bac, gbc.sp());
        EXPECT(0xdc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc97));
        // 55 0226
        gbc.setState(0x49af, 0x46ac, 0xdfb0, 0x7794, 0xa3e0, 0xdc23, 0x1, 0x1);
        gbc.writeMem(0x49af, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x46ac, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0227
        gbc.setState(0x7879, 0x3e0b, 0xdff0, 0x5f3b, 0x3684, 0x7aaa, 0x1, 0x0);
        gbc.writeMem(0x7879, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3e0b, gbc.sp());
        EXPECT(0x787a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0228
        gbc.setState(0x2ffc, 0xf795, 0x5db0, 0xb12e, 0x5c3f, 0x2662, 0x1, 0x1);
        gbc.writeMem(0x2ffc, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf795, gbc.sp());
        EXPECT(0x2ffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0229
        gbc.setState(0x3aa, 0x9597, 0xa6b0, 0x85e5, 0x35f6, 0x174d, 0x0, 0x1);
        gbc.writeMem(0x3aa, { 0x55 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9597, gbc.sp());
        EXPECT(0x3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 022A
        gbc.setState(0xbaaf, 0xe489, 0xc50, 0xb0d4, 0x6b99, 0xfa3b, 0x0, 0x0);
        gbc.writeMem(0xbaaf, { 0x55 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe489, gbc.sp());
        EXPECT(0xbab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbaaf));
        // 55 022B
        gbc.setState(0x36a6, 0x804f, 0x6cc0, 0x43f2, 0x5bde, 0x6713, 0x1, 0x0);
        gbc.writeMem(0x36a6, { 0x55 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x804f, gbc.sp());
        EXPECT(0x36a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 022D
        gbc.setState(0x408d, 0xf7d2, 0x32e0, 0x8f5e, 0xb113, 0xf2b0, 0x1, 0x0);
        gbc.writeMem(0x408d, { 0x55 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0x408e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 022E
        gbc.setState(0xa2c2, 0x4b9a, 0x5e50, 0xb289, 0x7cb, 0x929c, 0x1, 0x0);
        gbc.writeMem(0xa2c2, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4b9a, gbc.sp());
        EXPECT(0xa2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa2c2));
        // 55 022F
        gbc.setState(0xc5d, 0x8c88, 0xeec0, 0xae4f, 0xa842, 0xf216, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0x55 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c88, gbc.sp());
        EXPECT(0xc5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0230
        gbc.setState(0x6b3d, 0xc8bd, 0xd270, 0xa557, 0x31ae, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x6b3d, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc8bd, gbc.sp());
        EXPECT(0x6b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0231
        gbc.setState(0x14b9, 0xde1f, 0x6e20, 0x2ce1, 0xeb6, 0x11ec, 0x0, 0x1);
        gbc.writeMem(0x14b9, { 0x55 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0x14ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0232
        gbc.setState(0x7b5e, 0xb921, 0x2190, 0xbec1, 0x3b18, 0x7328, 0x1, 0x0);
        gbc.writeMem(0x7b5e, { 0x55 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x7b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0233
        gbc.setState(0x27e0, 0x1267, 0x1e30, 0x4749, 0xc22b, 0xa890, 0x0, 0x1);
        gbc.writeMem(0x27e0, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1267, gbc.sp());
        EXPECT(0x27e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0234
        gbc.setState(0x856d, 0x840f, 0x1610, 0x497f, 0x3bbf, 0xd504, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0x55 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x856e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x856d));
        // 55 0235
        gbc.setState(0x16e, 0xa2e5, 0x75e0, 0x4215, 0xb134, 0xab54, 0x1, 0x1);
        gbc.writeMem(0x16e, { 0x55 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa2e5, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0236
        gbc.setState(0x914e, 0xaca, 0x620, 0xae78, 0x4b38, 0x18f4, 0x1, 0x1);
        gbc.writeMem(0x914e, { 0x55 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xaca, gbc.sp());
        EXPECT(0x914f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x914e));
        // 55 0237
        gbc.setState(0x526e, 0xf639, 0x1d60, 0xb837, 0xae8d, 0xb551, 0x1, 0x1);
        gbc.writeMem(0x526e, { 0x55 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf639, gbc.sp());
        EXPECT(0x526f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0238
        gbc.setState(0x6bd7, 0x36bd, 0xc930, 0x9beb, 0x4b5b, 0x48d3, 0x1, 0x1);
        gbc.writeMem(0x6bd7, { 0x55 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0x6bd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 023A
        gbc.setState(0xb38a, 0x7a43, 0xc980, 0x3c39, 0x936c, 0x5ab8, 0x1, 0x1);
        gbc.writeMem(0xb38a, { 0x55 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7a43, gbc.sp());
        EXPECT(0xb38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb38a));
        // 55 023B
        gbc.setState(0x1490, 0x5f48, 0xb70, 0xdb4b, 0xeb16, 0x3d46, 0x1, 0x0);
        gbc.writeMem(0x1490, { 0x55 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 023C
        gbc.setState(0xe3bf, 0xc256, 0x66f0, 0x3738, 0x29d4, 0x42de, 0x0, 0x0);
        gbc.writeMem(0xe3bf, { 0x55 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc256, gbc.sp());
        EXPECT(0xe3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe3bf));
        // 55 023D
        gbc.setState(0xbe99, 0x7305, 0xf090, 0xb498, 0xfe5f, 0x576e, 0x1, 0x0);
        gbc.writeMem(0xbe99, { 0x55 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7305, gbc.sp());
        EXPECT(0xbe9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbe99));
        // 55 023E
        gbc.setState(0x8b25, 0x1c03, 0xb640, 0xcff7, 0x2481, 0xb06, 0x1, 0x1);
        gbc.writeMem(0x8b25, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1c03, gbc.sp());
        EXPECT(0x8b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8b25));
        // 55 023F
        gbc.setState(0xce38, 0xe8e9, 0x7970, 0x892c, 0x8372, 0x58ce, 0x0, 0x0);
        gbc.writeMem(0xce38, { 0x55 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe8e9, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xce38));
        // 55 0240
        gbc.setState(0x549e, 0x96a9, 0x2500, 0x12ac, 0xdf2e, 0xd2ea, 0x1, 0x1);
        gbc.writeMem(0x549e, { 0x55 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x96a9, gbc.sp());
        EXPECT(0x549f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0241
        gbc.setState(0x8286, 0x93ef, 0x5220, 0x5da5, 0x5acd, 0x79e3, 0x0, 0x0);
        gbc.writeMem(0x8286, { 0x55 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x93ef, gbc.sp());
        EXPECT(0x8287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8286));
        // 55 0243
        gbc.setState(0x7ae2, 0x498, 0xfc60, 0xbf0d, 0x986, 0x8172, 0x1, 0x0);
        gbc.writeMem(0x7ae2, { 0x55 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x498, gbc.sp());
        EXPECT(0x7ae3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0245
        gbc.setState(0x34f6, 0x6d21, 0xf940, 0x5e7f, 0xe12c, 0x8d6a, 0x1, 0x1);
        gbc.writeMem(0x34f6, { 0x55 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6d21, gbc.sp());
        EXPECT(0x34f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0246
        gbc.setState(0x7726, 0x21d9, 0xdc20, 0x3085, 0x68b3, 0x10f1, 0x0, 0x0);
        gbc.writeMem(0x7726, { 0x55 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x21d9, gbc.sp());
        EXPECT(0x7727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0247
        gbc.setState(0x6b95, 0x8294, 0xe5a0, 0xfc9a, 0x46d1, 0x225c, 0x1, 0x1);
        gbc.writeMem(0x6b95, { 0x55 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8294, gbc.sp());
        EXPECT(0x6b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0248
        gbc.setState(0x8bcf, 0x72b, 0xa310, 0x41bb, 0x70ae, 0x7ac3, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0x55 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x72b, gbc.sp());
        EXPECT(0x8bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8bcf));
        // 55 0249
        gbc.setState(0x643a, 0xf0eb, 0x59c0, 0x9808, 0xde8e, 0xe998, 0x0, 0x1);
        gbc.writeMem(0x643a, { 0x55 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf0eb, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 024A
        gbc.setState(0xc094, 0x846, 0x3a90, 0xbb74, 0xa25c, 0x9bac, 0x1, 0x0);
        gbc.writeMem(0xc094, { 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x846, gbc.sp());
        EXPECT(0xc095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc094));
        // 55 024B
        gbc.setState(0x4127, 0xf689, 0xe10, 0x1729, 0x1a58, 0xf3cb, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf689, gbc.sp());
        EXPECT(0x4128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 024C
        gbc.setState(0x124d, 0x6a6c, 0xe680, 0x7a7f, 0x6be6, 0x14e8, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0x55 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6a6c, gbc.sp());
        EXPECT(0x124e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 024D
        gbc.setState(0xbfe4, 0x8778, 0x22a0, 0x9876, 0x6b4f, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0xbfe4, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8778, gbc.sp());
        EXPECT(0xbfe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbfe4));
        // 55 024E
        gbc.setState(0xca92, 0x2a0c, 0x810, 0x6e46, 0x2ef3, 0x6d52, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0x55 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0xca93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xca92));
        // 55 0250
        gbc.setState(0xc96c, 0xb4e4, 0x1e10, 0xb6d9, 0x4274, 0x3cba, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb4e4, gbc.sp());
        EXPECT(0xc96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc96c));
        // 55 0251
        gbc.setState(0xc664, 0x1eb9, 0xb010, 0x93f8, 0xab1a, 0x7bb2, 0x1, 0x1);
        gbc.writeMem(0xc664, { 0x55 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0xc665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc664));
        // 55 0252
        gbc.setState(0xdc0c, 0x8344, 0xa190, 0x9db6, 0x96b, 0xaf05, 0x0, 0x0);
        gbc.writeMem(0xdc0c, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8344, gbc.sp());
        EXPECT(0xdc0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdc0c));
        // 55 0253
        gbc.setState(0xc308, 0x4136, 0x18e0, 0x8b8e, 0xd493, 0xeff0, 0x1, 0x0);
        gbc.writeMem(0xc308, { 0x55 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4136, gbc.sp());
        EXPECT(0xc309, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc308));
        // 55 0254
        gbc.setState(0x3e05, 0x69ad, 0x60, 0xc7fb, 0x2847, 0x69a2, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0x55 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x69ad, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0255
        gbc.setState(0x1dac, 0xcbb1, 0xd5e0, 0xa7eb, 0x75be, 0x7462, 0x0, 0x0);
        gbc.writeMem(0x1dac, { 0x55 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xcbb1, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0256
        gbc.setState(0xd3e7, 0x4b22, 0xf2c0, 0xe00f, 0x3310, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0xd3e7, { 0x55 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4b22, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd3e7));
        // 55 0257
        gbc.setState(0x1e0c, 0xeb71, 0x5180, 0x14d, 0x88c3, 0xf7b, 0x1, 0x0);
        gbc.writeMem(0x1e0c, { 0x55 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeb71, gbc.sp());
        EXPECT(0x1e0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0258
        gbc.setState(0x849d, 0xf78f, 0x40f0, 0x946e, 0x408f, 0x1bb4, 0x0, 0x1);
        gbc.writeMem(0x849d, { 0x55 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x849d));
        // 55 0259
        gbc.setState(0x7618, 0xf7fa, 0xab80, 0x4880, 0xe874, 0x431a, 0x0, 0x0);
        gbc.writeMem(0x7618, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf7fa, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 025A
        gbc.setState(0xca9c, 0x5728, 0x2e50, 0xca30, 0x4fff, 0xbeac, 0x0, 0x1);
        gbc.writeMem(0xca9c, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5728, gbc.sp());
        EXPECT(0xca9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xca9c));
        // 55 025B
        gbc.setState(0xa17f, 0xb737, 0xc090, 0xcff, 0x3310, 0x288e, 0x0, 0x0);
        gbc.writeMem(0xa17f, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0xa180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa17f));
        // 55 025C
        gbc.setState(0x635f, 0x6d43, 0xd3e0, 0x8162, 0xf577, 0x5467, 0x1, 0x1);
        gbc.writeMem(0x635f, { 0x55 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0x6360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 025D
        gbc.setState(0x7396, 0x210b, 0x7880, 0xb1c7, 0x91a, 0x645b, 0x0, 0x1);
        gbc.writeMem(0x7396, { 0x55 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x210b, gbc.sp());
        EXPECT(0x7397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 025E
        gbc.setState(0x129a, 0x1397, 0x6b20, 0xd231, 0xc85d, 0x9ae4, 0x1, 0x1);
        gbc.writeMem(0x129a, { 0x55 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0x129b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 025F
        gbc.setState(0xab1, 0xc107, 0x9c40, 0x7b56, 0x6bf9, 0x6760, 0x1, 0x1);
        gbc.writeMem(0xab1, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc107, gbc.sp());
        EXPECT(0xab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0260
        gbc.setState(0x9500, 0x51b3, 0x5c0, 0xb6c3, 0x9ee4, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x9500, { 0x55 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0x9501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9500));
        // 55 0262
        gbc.setState(0xc581, 0x840a, 0x1530, 0x6d59, 0xff7e, 0x7620, 0x1, 0x0);
        gbc.writeMem(0xc581, { 0x55 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x840a, gbc.sp());
        EXPECT(0xc582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc581));
        // 55 0263
        gbc.setState(0xa9cc, 0xc1df, 0x1050, 0x2542, 0x56a7, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0xa9cc, { 0x55 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc1df, gbc.sp());
        EXPECT(0xa9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa9cc));
        // 55 0264
        gbc.setState(0x58af, 0xa161, 0x2440, 0xfb98, 0xc06c, 0xb48f, 0x0, 0x1);
        gbc.writeMem(0x58af, { 0x55 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa161, gbc.sp());
        EXPECT(0x58b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0265
        gbc.setState(0x5a27, 0x6d76, 0x3cf0, 0xc8aa, 0x7234, 0x1ac8, 0x0, 0x0);
        gbc.writeMem(0x5a27, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6d76, gbc.sp());
        EXPECT(0x5a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0266
        gbc.setState(0x55b2, 0x5289, 0xf810, 0x32ad, 0x90b2, 0xe754, 0x1, 0x1);
        gbc.writeMem(0x55b2, { 0x55 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5289, gbc.sp());
        EXPECT(0x55b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0267
        gbc.setState(0x5bf5, 0xd3a, 0x3d30, 0xdbf0, 0x8b52, 0xbcbc, 0x1, 0x1);
        gbc.writeMem(0x5bf5, { 0x55 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd3a, gbc.sp());
        EXPECT(0x5bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0268
        gbc.setState(0xaa77, 0x58ca, 0xc420, 0x4bba, 0x23ea, 0x39b, 0x1, 0x0);
        gbc.writeMem(0xaa77, { 0x55 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0xaa78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaa77));
        // 55 0269
        gbc.setState(0x9bd0, 0xd864, 0xb6f0, 0x5fce, 0xad18, 0x22c6, 0x0, 0x0);
        gbc.writeMem(0x9bd0, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd864, gbc.sp());
        EXPECT(0x9bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9bd0));
        // 55 026A
        gbc.setState(0x129d, 0xa44d, 0x5fc0, 0x29f2, 0x8eb3, 0xf35c, 0x0, 0x1);
        gbc.writeMem(0x129d, { 0x55 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x129e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 026B
        gbc.setState(0xda95, 0xaa70, 0x6eb0, 0x82ab, 0xdef2, 0xe557, 0x0, 0x0);
        gbc.writeMem(0xda95, { 0x55 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xaa70, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda95));
        // 55 026C
        gbc.setState(0xaae, 0x9eaa, 0x3dd0, 0xf3db, 0x6dcd, 0x82a5, 0x1, 0x1);
        gbc.writeMem(0xaae, { 0x55 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9eaa, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 026E
        gbc.setState(0xa543, 0x96bd, 0x2100, 0x65c6, 0x71f1, 0xe690, 0x0, 0x1);
        gbc.writeMem(0xa543, { 0x55 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0xa544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa543));
        // 55 026F
        gbc.setState(0xe7f, 0x9898, 0xb570, 0x68f3, 0x5bc9, 0xb0c5, 0x1, 0x1);
        gbc.writeMem(0xe7f, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0xe80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0270
        gbc.setState(0x868, 0xd28a, 0x9c50, 0xdcc6, 0x870d, 0x866e, 0x0, 0x0);
        gbc.writeMem(0x868, { 0x55 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd28a, gbc.sp());
        EXPECT(0x869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0271
        gbc.setState(0x2520, 0x784, 0x790, 0x4fdc, 0xcf71, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x2520, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x784, gbc.sp());
        EXPECT(0x2521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0272
        gbc.setState(0xe20c, 0xfa61, 0x8340, 0x7b9a, 0x927e, 0x581, 0x0, 0x1);
        gbc.writeMem(0xe20c, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfa61, gbc.sp());
        EXPECT(0xe20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe20c));
        // 55 0273
        gbc.setState(0xd242, 0xfd61, 0xf450, 0x66c3, 0x585f, 0x7a42, 0x1, 0x1);
        gbc.writeMem(0xd242, { 0x55 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xd243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd242));
        // 55 0274
        gbc.setState(0xb7b7, 0x1565, 0x5100, 0x992e, 0x4a39, 0xbef, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0x55 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1565, gbc.sp());
        EXPECT(0xb7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb7b7));
        // 55 0275
        gbc.setState(0xda76, 0x2ec4, 0x83c0, 0xeb74, 0x1ba0, 0x6ace, 0x0, 0x0);
        gbc.writeMem(0xda76, { 0x55 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda76));
        // 55 0276
        gbc.setState(0xe55d, 0xb0f, 0x5200, 0x187d, 0xa0ac, 0x38bb, 0x1, 0x1);
        gbc.writeMem(0xe55d, { 0x55 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb0f, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe55d));
        // 55 0277
        gbc.setState(0xa44e, 0x77f5, 0x10b0, 0x1d48, 0xef82, 0x7201, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0x55 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x77f5, gbc.sp());
        EXPECT(0xa44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa44e));
        // 55 0278
        gbc.setState(0x3d87, 0xf134, 0xd0d0, 0xc45a, 0x773b, 0x6520, 0x1, 0x0);
        gbc.writeMem(0x3d87, { 0x55 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf134, gbc.sp());
        EXPECT(0x3d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0279
        gbc.setState(0x58ee, 0x7fe2, 0xdb70, 0xc7f1, 0xcce8, 0xb15c, 0x1, 0x1);
        gbc.writeMem(0x58ee, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x7fe2, gbc.sp());
        EXPECT(0x58ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 027A
        gbc.setState(0x3606, 0xb545, 0x3170, 0x1d72, 0x7f07, 0xc212, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb545, gbc.sp());
        EXPECT(0x3607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 027B
        gbc.setState(0x7e58, 0x740a, 0x7660, 0x8ad, 0x1110, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x7e58, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x740a, gbc.sp());
        EXPECT(0x7e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 027C
        gbc.setState(0x3766, 0x974c, 0xb660, 0x4622, 0x2757, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0x3766, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x974c, gbc.sp());
        EXPECT(0x3767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 027D
        gbc.setState(0xd2dc, 0x3e24, 0x8d00, 0xb9fb, 0x36f2, 0xd603, 0x0, 0x1);
        gbc.writeMem(0xd2dc, { 0x55 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3e24, gbc.sp());
        EXPECT(0xd2dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd2dc));
        // 55 0280
        gbc.setState(0x4138, 0xdd3b, 0xec80, 0xea84, 0x8656, 0x2a23, 0x0, 0x0);
        gbc.writeMem(0x4138, { 0x55 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdd3b, gbc.sp());
        EXPECT(0x4139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0281
        gbc.setState(0xb551, 0x655c, 0x2ae0, 0xdb89, 0xc711, 0x4efd, 0x0, 0x1);
        gbc.writeMem(0xb551, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0xb552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb551));
        // 55 0282
        gbc.setState(0x5c63, 0x3483, 0x8640, 0xc91e, 0xed4b, 0x2492, 0x0, 0x0);
        gbc.writeMem(0x5c63, { 0x55 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x5c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0283
        gbc.setState(0x181c, 0xdd3f, 0x5140, 0xef74, 0x2c6c, 0x1dce, 0x1, 0x0);
        gbc.writeMem(0x181c, { 0x55 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdd3f, gbc.sp());
        EXPECT(0x181d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0284
        gbc.setState(0x1af1, 0x7334, 0xa5a0, 0x5800, 0xfcbd, 0xad5d, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7334, gbc.sp());
        EXPECT(0x1af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0285
        gbc.setState(0x8804, 0x726c, 0x3ab0, 0x3e59, 0xf8b6, 0xcfa1, 0x0, 0x0);
        gbc.writeMem(0x8804, { 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x726c, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8804));
        // 55 0286
        gbc.setState(0x9ce4, 0xe7d7, 0x8a70, 0x5cf, 0xb29c, 0x8bfe, 0x1, 0x0);
        gbc.writeMem(0x9ce4, { 0x55 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0x9ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9ce4));
        // 55 0287
        gbc.setState(0x8d32, 0x92f0, 0xca70, 0xca31, 0xc803, 0xc9d4, 0x0, 0x0);
        gbc.writeMem(0x8d32, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x92f0, gbc.sp());
        EXPECT(0x8d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8d32));
        // 55 0289
        gbc.setState(0x9ce8, 0x338a, 0xb5b0, 0x761, 0x14d2, 0x8e2f, 0x0, 0x0);
        gbc.writeMem(0x9ce8, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x338a, gbc.sp());
        EXPECT(0x9ce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9ce8));
        // 55 028A
        gbc.setState(0x6f8d, 0xed9c, 0xcb70, 0x2809, 0x3353, 0x629, 0x1, 0x1);
        gbc.writeMem(0x6f8d, { 0x55 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xed9c, gbc.sp());
        EXPECT(0x6f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 028B
        gbc.setState(0x934f, 0x7f9d, 0xa050, 0xb193, 0x25ea, 0xe2ad, 0x0, 0x1);
        gbc.writeMem(0x934f, { 0x55 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7f9d, gbc.sp());
        EXPECT(0x9350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x934f));
        // 55 028C
        gbc.setState(0xad, 0x76cf, 0x5220, 0x3acf, 0x3a72, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0xad, { 0x55 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x76cf, gbc.sp());
        EXPECT(0xae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 028D
        gbc.setState(0xc8bd, 0x381, 0xd4b0, 0xd401, 0x5d14, 0xa054, 0x0, 0x1);
        gbc.writeMem(0xc8bd, { 0x55 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0xc8be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc8bd));
        // 55 028E
        gbc.setState(0x7c03, 0xce0f, 0xfd50, 0xb653, 0x5541, 0xab28, 0x1, 0x0);
        gbc.writeMem(0x7c03, { 0x55 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xce0f, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 028F
        gbc.setState(0x62ce, 0x81f0, 0xd890, 0x136d, 0x684d, 0x8ea1, 0x1, 0x1);
        gbc.writeMem(0x62ce, { 0x55 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0x62cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0290
        gbc.setState(0xdce2, 0x6b0f, 0xa30, 0xea02, 0x2021, 0xe044, 0x1, 0x1);
        gbc.writeMem(0xdce2, { 0x55 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b0f, gbc.sp());
        EXPECT(0xdce3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdce2));
        // 55 0291
        gbc.setState(0x9901, 0x162a, 0x8580, 0x3627, 0xc530, 0xbaf9, 0x1, 0x0);
        gbc.writeMem(0x9901, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x9902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9901));
        // 55 0292
        gbc.setState(0xcc4a, 0xf643, 0x2880, 0xf6e6, 0x34e6, 0x4005, 0x1, 0x0);
        gbc.writeMem(0xcc4a, { 0x55 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf643, gbc.sp());
        EXPECT(0xcc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc4a));
        // 55 0293
        gbc.setState(0x28b3, 0xa0bd, 0x3380, 0x8475, 0x31cc, 0x1e86, 0x0, 0x1);
        gbc.writeMem(0x28b3, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa0bd, gbc.sp());
        EXPECT(0x28b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0294
        gbc.setState(0xad8e, 0x862b, 0xd150, 0xbee7, 0xe53f, 0x9b91, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0x55 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0xad8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xad8e));
        // 55 0295
        gbc.setState(0x8b60, 0x6135, 0xc3c0, 0x4189, 0xf2e4, 0x2690, 0x1, 0x0);
        gbc.writeMem(0x8b60, { 0x55 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6135, gbc.sp());
        EXPECT(0x8b61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8b60));
        // 55 0296
        gbc.setState(0x8751, 0xce0d, 0x9380, 0x87b0, 0x9fcd, 0x3335, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0x55 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xce0d, gbc.sp());
        EXPECT(0x8752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8751));
        // 55 0297
        gbc.setState(0x869d, 0x1ca0, 0x4d0, 0x267d, 0x3681, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0x869d, { 0x55 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1ca0, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x869d));
        // 55 0298
        gbc.setState(0xb685, 0x7dd4, 0x48c0, 0x3b5, 0x1865, 0xf7c3, 0x1, 0x0);
        gbc.writeMem(0xb685, { 0x55 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7dd4, gbc.sp());
        EXPECT(0xb686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb685));
        // 55 0299
        gbc.setState(0x9b94, 0x62d1, 0xb320, 0x866d, 0x86d7, 0x2029, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0x55 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x62d1, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9b94));
        // 55 029A
        gbc.setState(0x1d58, 0xc467, 0xebf0, 0x7754, 0xeb0a, 0xe928, 0x0, 0x0);
        gbc.writeMem(0x1d58, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc467, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 029B
        gbc.setState(0xf5c, 0x7f91, 0xbee0, 0xd00c, 0x235f, 0x7c02, 0x1, 0x0);
        gbc.writeMem(0xf5c, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7f91, gbc.sp());
        EXPECT(0xf5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 029C
        gbc.setState(0x9292, 0x50d5, 0x16b0, 0x2e7, 0xc7aa, 0x5336, 0x1, 0x0);
        gbc.writeMem(0x9292, { 0x55 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x50d5, gbc.sp());
        EXPECT(0x9293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9292));
        // 55 029E
        gbc.setState(0xbe28, 0x10ab, 0xf280, 0xa007, 0x65e1, 0x7b09, 0x0, 0x0);
        gbc.writeMem(0xbe28, { 0x55 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0xbe29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbe28));
        // 55 029F
        gbc.setState(0xb7c0, 0x3405, 0x7ad0, 0x700d, 0xc0a2, 0x7769, 0x1, 0x0);
        gbc.writeMem(0xb7c0, { 0x55 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3405, gbc.sp());
        EXPECT(0xb7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb7c0));
        // 55 02A0
        gbc.setState(0x45b, 0x3812, 0xe1e0, 0xbd31, 0x998e, 0xac59, 0x1, 0x1);
        gbc.writeMem(0x45b, { 0x55 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3812, gbc.sp());
        EXPECT(0x45c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02A1
        gbc.setState(0x10ad, 0xf6d9, 0x6c10, 0xb23b, 0xf1d, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x10ad, { 0x55 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xf6d9, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02A2
        gbc.setState(0xafd3, 0x51fa, 0x740, 0x6678, 0xa3a7, 0x9ae, 0x1, 0x1);
        gbc.writeMem(0xafd3, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x51fa, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xafd3));
        // 55 02A3
        gbc.setState(0x1b9f, 0x62e, 0x6290, 0x7289, 0x5aa2, 0x77da, 0x1, 0x0);
        gbc.writeMem(0x1b9f, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x62e, gbc.sp());
        EXPECT(0x1ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02A4
        gbc.setState(0x85f6, 0xe869, 0x1950, 0x9414, 0xdc59, 0x362a, 0x0, 0x0);
        gbc.writeMem(0x85f6, { 0x55 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe869, gbc.sp());
        EXPECT(0x85f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x85f6));
        // 55 02A5
        gbc.setState(0x5c70, 0x1a48, 0xa0d0, 0xee89, 0x5b7, 0xd9ca, 0x1, 0x0);
        gbc.writeMem(0x5c70, { 0x55 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1a48, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02A6
        gbc.setState(0xb939, 0x77ec, 0xda30, 0x3931, 0xa52b, 0xd03e, 0x0, 0x1);
        gbc.writeMem(0xb939, { 0x55 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x77ec, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb939));
        // 55 02A7
        gbc.setState(0x7bf7, 0x5f51, 0xd5c0, 0xf814, 0xf703, 0x9d5b, 0x0, 0x0);
        gbc.writeMem(0x7bf7, { 0x55 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x5f51, gbc.sp());
        EXPECT(0x7bf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02A8
        gbc.setState(0xeed0, 0xec15, 0x5580, 0x60a5, 0x9806, 0x8ea2, 0x1, 0x1);
        gbc.writeMem(0xeed0, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xec15, gbc.sp());
        EXPECT(0xeed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeed0));
        // 55 02A9
        gbc.setState(0x5a81, 0x792e, 0x5e30, 0x6f83, 0x423, 0x33de, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0x55 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x792e, gbc.sp());
        EXPECT(0x5a82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02AA
        gbc.setState(0x3c7c, 0x5909, 0x4670, 0xc635, 0x2bf8, 0x896a, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0x55 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5909, gbc.sp());
        EXPECT(0x3c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02AB
        gbc.setState(0x18ed, 0x888a, 0xa790, 0x9a9e, 0x2e8, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x18ed, { 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x888a, gbc.sp());
        EXPECT(0x18ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02AC
        gbc.setState(0x508e, 0xc01a, 0xf5c0, 0xdb2e, 0xf9a, 0x34e8, 0x0, 0x0);
        gbc.writeMem(0x508e, { 0x55 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc01a, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02AD
        gbc.setState(0x99f0, 0xe055, 0xdbc0, 0x4d01, 0x450a, 0x50f3, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0x55 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe055, gbc.sp());
        EXPECT(0x99f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x99f0));
        // 55 02AE
        gbc.setState(0x451b, 0xecaf, 0x3a40, 0xf222, 0x39ef, 0x4a7b, 0x0, 0x0);
        gbc.writeMem(0x451b, { 0x55 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xecaf, gbc.sp());
        EXPECT(0x451c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02AF
        gbc.setState(0x1b53, 0x3a1d, 0x93b0, 0x38ef, 0x8f4d, 0xa8d3, 0x1, 0x1);
        gbc.writeMem(0x1b53, { 0x55 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3a1d, gbc.sp());
        EXPECT(0x1b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B0
        gbc.setState(0x8308, 0x7369, 0xf6c0, 0xb861, 0xb109, 0x95cb, 0x0, 0x0);
        gbc.writeMem(0x8308, { 0x55 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7369, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8308));
        // 55 02B2
        gbc.setState(0x121e, 0xb175, 0xc750, 0x7f2c, 0x6286, 0xbecf, 0x0, 0x1);
        gbc.writeMem(0x121e, { 0x55 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb175, gbc.sp());
        EXPECT(0x121f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B3
        gbc.setState(0xe5ae, 0xb8f9, 0x4360, 0x1432, 0xe809, 0xc7b0, 0x0, 0x1);
        gbc.writeMem(0xe5ae, { 0x55 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb8f9, gbc.sp());
        EXPECT(0xe5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe5ae));
        // 55 02B4
        gbc.setState(0x5a31, 0x1b44, 0xa570, 0xfb34, 0xb795, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x5a31, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1b44, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B5
        gbc.setState(0x7876, 0x9d94, 0x6b0, 0xb153, 0x3c67, 0x8dbc, 0x0, 0x1);
        gbc.writeMem(0x7876, { 0x55 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9d94, gbc.sp());
        EXPECT(0x7877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B6
        gbc.setState(0x5695, 0x5aed, 0xd3d0, 0xa7b8, 0xb4e4, 0x615, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0x55 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5aed, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B7
        gbc.setState(0x5810, 0x6e45, 0xdf40, 0x2aff, 0x408a, 0x9bdc, 0x0, 0x1);
        gbc.writeMem(0x5810, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x5811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02B8
        gbc.setState(0x4b18, 0x440, 0x66f0, 0xf655, 0xbe84, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0x4b18, { 0x55 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x440, gbc.sp());
        EXPECT(0x4b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02B9
        gbc.setState(0xeb92, 0xe3f3, 0xca00, 0x4d3e, 0x9268, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0xeb92, { 0x55 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe3f3, gbc.sp());
        EXPECT(0xeb93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeb92));
        // 55 02BA
        gbc.setState(0x4722, 0xbd8a, 0xe300, 0x3ea, 0x470c, 0x4687, 0x0, 0x1);
        gbc.writeMem(0x4722, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbd8a, gbc.sp());
        EXPECT(0x4723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02BB
        gbc.setState(0x520b, 0x1799, 0xc130, 0x2051, 0x114a, 0xf3f2, 0x0, 0x1);
        gbc.writeMem(0x520b, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1799, gbc.sp());
        EXPECT(0x520c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02BC
        gbc.setState(0xba7d, 0x9487, 0x6730, 0x7ee6, 0xb0b3, 0x78e6, 0x0, 0x1);
        gbc.writeMem(0xba7d, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9487, gbc.sp());
        EXPECT(0xba7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba7d));
        // 55 02BD
        gbc.setState(0x7e33, 0xd4a8, 0x3f60, 0x310e, 0xd2f0, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0x7e33, { 0x55 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd4a8, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02BE
        gbc.setState(0x4774, 0xc80d, 0xb730, 0xa846, 0x90bd, 0x261, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc80d, gbc.sp());
        EXPECT(0x4775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02BF
        gbc.setState(0x917d, 0x4324, 0xb740, 0xeade, 0xbf63, 0x742d, 0x1, 0x1);
        gbc.writeMem(0x917d, { 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4324, gbc.sp());
        EXPECT(0x917e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x917d));
        // 55 02C0
        gbc.setState(0x7a55, 0x9cec, 0x1300, 0xb32d, 0x57a3, 0x8f5, 0x0, 0x0);
        gbc.writeMem(0x7a55, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9cec, gbc.sp());
        EXPECT(0x7a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02C1
        gbc.setState(0x9223, 0x8998, 0x54a0, 0xf058, 0x93ac, 0x209b, 0x1, 0x1);
        gbc.writeMem(0x9223, { 0x55 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8998, gbc.sp());
        EXPECT(0x9224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9223));
        // 55 02C2
        gbc.setState(0x5dd4, 0x8d5c, 0x8c40, 0xd050, 0xc9c4, 0x33d4, 0x0, 0x0);
        gbc.writeMem(0x5dd4, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8d5c, gbc.sp());
        EXPECT(0x5dd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02C3
        gbc.setState(0x42d9, 0xe85b, 0x57b0, 0xa352, 0x7aeb, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x42d9, { 0x55 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe85b, gbc.sp());
        EXPECT(0x42da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02C4
        gbc.setState(0x3624, 0xd3c5, 0x5d40, 0x4942, 0x6435, 0x5ded, 0x1, 0x0);
        gbc.writeMem(0x3624, { 0x55 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd3c5, gbc.sp());
        EXPECT(0x3625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02C5
        gbc.setState(0x24a5, 0x4fe4, 0xab40, 0xb34, 0x736b, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0x24a5, { 0x55 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4fe4, gbc.sp());
        EXPECT(0x24a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02C6
        gbc.setState(0xcc4b, 0x3892, 0xdee0, 0x50b9, 0xea5e, 0xdd90, 0x0, 0x1);
        gbc.writeMem(0xcc4b, { 0x55 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3892, gbc.sp());
        EXPECT(0xcc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc4b));
        // 55 02C7
        gbc.setState(0x3706, 0x74e0, 0x1950, 0xb2b, 0x49ae, 0x58b8, 0x1, 0x0);
        gbc.writeMem(0x3706, { 0x55 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x74e0, gbc.sp());
        EXPECT(0x3707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02C8
        gbc.setState(0x2a7a, 0xaca3, 0x91d0, 0xae00, 0xd56e, 0x7809, 0x1, 0x0);
        gbc.writeMem(0x2a7a, { 0x55 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaca3, gbc.sp());
        EXPECT(0x2a7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02CA
        gbc.setState(0x59fd, 0x80c, 0xfcf0, 0xb451, 0xca68, 0xf880, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0x55 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x80c, gbc.sp());
        EXPECT(0x59fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02CB
        gbc.setState(0x3107, 0x223, 0x3c50, 0xa0fb, 0xa096, 0xf210, 0x0, 0x1);
        gbc.writeMem(0x3107, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x223, gbc.sp());
        EXPECT(0x3108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02CC
        gbc.setState(0x570, 0x2f45, 0xb480, 0xb034, 0xbc50, 0xf0b0, 0x0, 0x0);
        gbc.writeMem(0x570, { 0x55 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0x571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02CD
        gbc.setState(0x56cf, 0xce83, 0x77d0, 0xfb9f, 0x3e7f, 0x5902, 0x1, 0x1);
        gbc.writeMem(0x56cf, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xce83, gbc.sp());
        EXPECT(0x56d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02CF
        gbc.setState(0x6e9f, 0x239b, 0x5400, 0xd21e, 0x5ea3, 0x85b7, 0x0, 0x1);
        gbc.writeMem(0x6e9f, { 0x55 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x239b, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02D1
        gbc.setState(0xe582, 0xa0d2, 0xe3f0, 0xafe6, 0x1cc5, 0x3cc, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa0d2, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe582));
        // 55 02D2
        gbc.setState(0x6bee, 0xe00f, 0xf810, 0xd8e6, 0xd3be, 0xcb1, 0x1, 0x1);
        gbc.writeMem(0x6bee, { 0x55 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe00f, gbc.sp());
        EXPECT(0x6bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02D3
        gbc.setState(0xd011, 0x3bec, 0x1ee0, 0xbc81, 0xc44e, 0xd2c8, 0x1, 0x1);
        gbc.writeMem(0xd011, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0xd012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd011));
        // 55 02D4
        gbc.setState(0x2bc7, 0x5a30, 0x33e0, 0xddbc, 0xd0eb, 0x7a6, 0x0, 0x1);
        gbc.writeMem(0x2bc7, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5a30, gbc.sp());
        EXPECT(0x2bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02D5
        gbc.setState(0x1f76, 0xbab4, 0x8400, 0xed01, 0xd227, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x1f76, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbab4, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02D6
        gbc.setState(0x4db5, 0x171e, 0x4410, 0xd2c9, 0x5c0c, 0xe731, 0x0, 0x1);
        gbc.writeMem(0x4db5, { 0x55 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x171e, gbc.sp());
        EXPECT(0x4db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02D7
        gbc.setState(0x79cc, 0x2dd5, 0x9810, 0x7112, 0xb39b, 0xcb58, 0x1, 0x0);
        gbc.writeMem(0x79cc, { 0x55 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2dd5, gbc.sp());
        EXPECT(0x79cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02D8
        gbc.setState(0x1fb1, 0xaad2, 0x6410, 0x22cc, 0x8397, 0x22e4, 0x0, 0x0);
        gbc.writeMem(0x1fb1, { 0x55 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x1fb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02D9
        gbc.setState(0x97a7, 0xb819, 0x670, 0x6bab, 0x7fe5, 0x27cd, 0x0, 0x0);
        gbc.writeMem(0x97a7, { 0x55 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb819, gbc.sp());
        EXPECT(0x97a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x97a7));
        // 55 02DA
        gbc.setState(0x8882, 0x5788, 0xa8f0, 0x53c9, 0x831e, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x8882, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5788, gbc.sp());
        EXPECT(0x8883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8882));
        // 55 02DB
        gbc.setState(0x9563, 0x3ac5, 0x8510, 0x90c8, 0xbf8, 0xb94d, 0x0, 0x0);
        gbc.writeMem(0x9563, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0x9564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9563));
        // 55 02DC
        gbc.setState(0x772e, 0x11f9, 0x8990, 0x1494, 0x5e37, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0x772e, { 0x55 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x11f9, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02DD
        gbc.setState(0x5b46, 0xc6d4, 0x4d90, 0x16ea, 0x90d, 0x2283, 0x1, 0x0);
        gbc.writeMem(0x5b46, { 0x55 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc6d4, gbc.sp());
        EXPECT(0x5b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02DE
        gbc.setState(0xb26c, 0x3636, 0xdde0, 0xcf37, 0x8e65, 0xa6d1, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xb26d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb26c));
        // 55 02DF
        gbc.setState(0x518b, 0x4d02, 0x6d40, 0x6e63, 0x73f4, 0x79ce, 0x1, 0x0);
        gbc.writeMem(0x518b, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4d02, gbc.sp());
        EXPECT(0x518c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02E0
        gbc.setState(0x85e9, 0xd05b, 0xf80, 0x647d, 0xaa41, 0x201e, 0x0, 0x1);
        gbc.writeMem(0x85e9, { 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd05b, gbc.sp());
        EXPECT(0x85ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x85e9));
        // 55 02E1
        gbc.setState(0x849d, 0x4f2b, 0x8780, 0x9a80, 0xabed, 0xb5d, 0x1, 0x1);
        gbc.writeMem(0x849d, { 0x55 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4f2b, gbc.sp());
        EXPECT(0x849e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x849d));
        // 55 02E2
        gbc.setState(0x5239, 0xc97d, 0x7a0, 0xc9f5, 0x5eb0, 0x132c, 0x1, 0x0);
        gbc.writeMem(0x5239, { 0x55 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc97d, gbc.sp());
        EXPECT(0x523a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02E3
        gbc.setState(0x3e92, 0x8df2, 0x8ca0, 0xdc6, 0xc6d8, 0x3884, 0x1, 0x0);
        gbc.writeMem(0x3e92, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02E4
        gbc.setState(0x308b, 0x2c37, 0x3300, 0x7a3b, 0x981, 0xe9ce, 0x0, 0x0);
        gbc.writeMem(0x308b, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2c37, gbc.sp());
        EXPECT(0x308c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02E5
        gbc.setState(0x985, 0xa6ac, 0xa830, 0xc78c, 0xeccc, 0x9b3c, 0x1, 0x0);
        gbc.writeMem(0x985, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa6ac, gbc.sp());
        EXPECT(0x986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02E7
        gbc.setState(0x156d, 0x271d, 0xf70, 0x4ae3, 0x5826, 0x3c20, 0x0, 0x0);
        gbc.writeMem(0x156d, { 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x271d, gbc.sp());
        EXPECT(0x156e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02E8
        gbc.setState(0xb68d, 0xa853, 0x8ac0, 0x3161, 0x2408, 0xcb1f, 0x1, 0x0);
        gbc.writeMem(0xb68d, { 0x55 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa853, gbc.sp());
        EXPECT(0xb68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb68d));
        // 55 02E9
        gbc.setState(0x3958, 0x3fc9, 0x55c0, 0xc4e5, 0x2b39, 0xdac5, 0x1, 0x1);
        gbc.writeMem(0x3958, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3fc9, gbc.sp());
        EXPECT(0x3959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02EA
        gbc.setState(0x2b68, 0x58e7, 0x60, 0xc4a, 0xf1cf, 0x3995, 0x1, 0x0);
        gbc.writeMem(0x2b68, { 0x55 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x58e7, gbc.sp());
        EXPECT(0x2b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02EB
        gbc.setState(0xc0b4, 0x2afb, 0xdd50, 0xd12c, 0x141a, 0x539, 0x1, 0x0);
        gbc.writeMem(0xc0b4, { 0x55 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2afb, gbc.sp());
        EXPECT(0xc0b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc0b4));
        // 55 02EC
        gbc.setState(0xc36a, 0xc072, 0x6660, 0x7ba9, 0x4f90, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0x55 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc072, gbc.sp());
        EXPECT(0xc36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc36a));
        // 55 02ED
        gbc.setState(0xdb36, 0x9508, 0xfa30, 0xf793, 0x3fd9, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0xdb36, { 0x55 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9508, gbc.sp());
        EXPECT(0xdb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdb36));
        // 55 02EE
        gbc.setState(0x76fa, 0x82b0, 0x8a60, 0x373b, 0x9fa6, 0x4fa2, 0x1, 0x1);
        gbc.writeMem(0x76fa, { 0x55 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x82b0, gbc.sp());
        EXPECT(0x76fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02EF
        gbc.setState(0x77bd, 0xd5a1, 0x77d0, 0x7919, 0x1280, 0xf12a, 0x1, 0x1);
        gbc.writeMem(0x77bd, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd5a1, gbc.sp());
        EXPECT(0x77be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02F0
        gbc.setState(0xeffc, 0x3897, 0x2210, 0xe7c1, 0xca0d, 0x3c9f, 0x1, 0x1);
        gbc.writeMem(0xeffc, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3897, gbc.sp());
        EXPECT(0xeffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeffc));
        // 55 02F1
        gbc.setState(0x4608, 0x8b12, 0x230, 0x6db7, 0xf604, 0x2873, 0x0, 0x0);
        gbc.writeMem(0x4608, { 0x55 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8b12, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02F2
        gbc.setState(0x5a2e, 0xb003, 0xac60, 0xfd0, 0xdd37, 0x8993, 0x1, 0x1);
        gbc.writeMem(0x5a2e, { 0x55 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb003, gbc.sp());
        EXPECT(0x5a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02F3
        gbc.setState(0xc488, 0xdee8, 0x2ef0, 0x45c4, 0xbc86, 0x4aa3, 0x1, 0x0);
        gbc.writeMem(0xc488, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdee8, gbc.sp());
        EXPECT(0xc489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc488));
        // 55 02F4
        gbc.setState(0xd799, 0xdc77, 0xd6a0, 0x5e81, 0x8c15, 0x668, 0x0, 0x0);
        gbc.writeMem(0xd799, { 0x55 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdc77, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd799));
        // 55 02F5
        gbc.setState(0x5a6a, 0x7801, 0x3110, 0xc91e, 0x3756, 0x1748, 0x0, 0x0);
        gbc.writeMem(0x5a6a, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7801, gbc.sp());
        EXPECT(0x5a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 02F7
        gbc.setState(0xeff7, 0x8ea9, 0x2040, 0x45d2, 0xbb2a, 0x5187, 0x1, 0x0);
        gbc.writeMem(0xeff7, { 0x55 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeff7));
        // 55 02F8
        gbc.setState(0xa0e7, 0xd01e, 0x6de0, 0x9f71, 0xef6c, 0x1739, 0x0, 0x1);
        gbc.writeMem(0xa0e7, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd01e, gbc.sp());
        EXPECT(0xa0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa0e7));
        // 55 02F9
        gbc.setState(0x4e6e, 0x7846, 0xcba0, 0xbcda, 0x40f9, 0xb866, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0x55 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7846, gbc.sp());
        EXPECT(0x4e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02FA
        gbc.setState(0xcce8, 0xe1c0, 0xe280, 0x26e2, 0x8336, 0xd522, 0x0, 0x0);
        gbc.writeMem(0xcce8, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe1c0, gbc.sp());
        EXPECT(0xcce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcce8));
        // 55 02FC
        gbc.setState(0x9e67, 0x6a59, 0xa4f0, 0xec19, 0xe549, 0x8f1b, 0x0, 0x1);
        gbc.writeMem(0x9e67, { 0x55 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6a59, gbc.sp());
        EXPECT(0x9e68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9e67));
        // 55 02FD
        gbc.setState(0x1ee0, 0xe431, 0x6d60, 0xf800, 0xa9f7, 0x5a52, 0x0, 0x0);
        gbc.writeMem(0x1ee0, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe431, gbc.sp());
        EXPECT(0x1ee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 02FF
        gbc.setState(0x408e, 0xed2f, 0xcce0, 0xadb, 0x89b3, 0xa118, 0x1, 0x1);
        gbc.writeMem(0x408e, { 0x55 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xed2f, gbc.sp());
        EXPECT(0x408f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0300
        gbc.setState(0x21ca, 0x5bb4, 0x8140, 0x3e42, 0x87ad, 0xd90, 0x1, 0x1);
        gbc.writeMem(0x21ca, { 0x55 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5bb4, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0301
        gbc.setState(0xec82, 0xb5fd, 0x4210, 0x6181, 0xed1e, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0xec82, { 0x55 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb5fd, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xec82));
        // 55 0302
        gbc.setState(0xa7bc, 0x7dc7, 0xed20, 0x6339, 0xb5a4, 0x486, 0x1, 0x1);
        gbc.writeMem(0xa7bc, { 0x55 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7dc7, gbc.sp());
        EXPECT(0xa7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa7bc));
        // 55 0304
        gbc.setState(0xb03a, 0xccde, 0x8200, 0x43a1, 0xbdfb, 0xdea3, 0x0, 0x1);
        gbc.writeMem(0xb03a, { 0x55 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xccde, gbc.sp());
        EXPECT(0xb03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb03a));
        // 55 0305
        gbc.setState(0x9287, 0x61e4, 0xd6d0, 0xfb82, 0xc9b9, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0x55 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x61e4, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9287));
        // 55 0306
        gbc.setState(0x47ae, 0x7a0, 0xcdb0, 0x24ca, 0x3c11, 0xbf39, 0x0, 0x1);
        gbc.writeMem(0x47ae, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0x47af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0307
        gbc.setState(0x3b34, 0x859e, 0x6dc0, 0x1ae6, 0xe807, 0xd568, 0x0, 0x1);
        gbc.writeMem(0x3b34, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x859e, gbc.sp());
        EXPECT(0x3b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0308
        gbc.setState(0x876a, 0x476f, 0xe60, 0xf8e2, 0x5ab7, 0xabc7, 0x1, 0x0);
        gbc.writeMem(0x876a, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x476f, gbc.sp());
        EXPECT(0x876b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x876a));
        // 55 0309
        gbc.setState(0x14c5, 0xad7d, 0x7cf0, 0x1714, 0x1f03, 0x170d, 0x1, 0x1);
        gbc.writeMem(0x14c5, { 0x55 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xad7d, gbc.sp());
        EXPECT(0x14c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 030A
        gbc.setState(0x136b, 0x850, 0xad50, 0x5eaf, 0x71ed, 0x17ba, 0x0, 0x1);
        gbc.writeMem(0x136b, { 0x55 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x850, gbc.sp());
        EXPECT(0x136c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 030B
        gbc.setState(0xab1f, 0x1c0a, 0x6020, 0x3e6e, 0x940e, 0x3c8, 0x0, 0x1);
        gbc.writeMem(0xab1f, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1c0a, gbc.sp());
        EXPECT(0xab20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xab1f));
        // 55 030C
        gbc.setState(0x8860, 0x97d7, 0x2200, 0x652b, 0xea70, 0x848e, 0x0, 0x1);
        gbc.writeMem(0x8860, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x97d7, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8860));
        // 55 030D
        gbc.setState(0x8652, 0x2d48, 0xa4b0, 0x76e, 0xfa5c, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x8652, { 0x55 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x2d48, gbc.sp());
        EXPECT(0x8653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8652));
        // 55 030E
        gbc.setState(0x870d, 0xb693, 0x36e0, 0x9af0, 0x3245, 0xa35a, 0x1, 0x1);
        gbc.writeMem(0x870d, { 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x870d));
        // 55 030F
        gbc.setState(0x321b, 0x2013, 0xd270, 0x1ac, 0xba78, 0x19a8, 0x0, 0x1);
        gbc.writeMem(0x321b, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0x321c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0310
        gbc.setState(0x2607, 0xb8dd, 0x49c0, 0xd555, 0xff41, 0xdbfe, 0x1, 0x0);
        gbc.writeMem(0x2607, { 0x55 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb8dd, gbc.sp());
        EXPECT(0x2608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0311
        gbc.setState(0x48fc, 0xbe6d, 0x4d0, 0xcdae, 0x42cf, 0xf80b, 0x1, 0x0);
        gbc.writeMem(0x48fc, { 0x55 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbe6d, gbc.sp());
        EXPECT(0x48fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0312
        gbc.setState(0x1817, 0x5f55, 0x3450, 0xdb68, 0x40c2, 0xd053, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0x55 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5f55, gbc.sp());
        EXPECT(0x1818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0313
        gbc.setState(0xb1fc, 0x4074, 0x5ab0, 0xea80, 0xfa0e, 0xd828, 0x1, 0x1);
        gbc.writeMem(0xb1fc, { 0x55 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4074, gbc.sp());
        EXPECT(0xb1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb1fc));
        // 55 0314
        gbc.setState(0x753a, 0x1b2e, 0x8cc0, 0x421f, 0xf2d5, 0x2d50, 0x0, 0x1);
        gbc.writeMem(0x753a, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1b2e, gbc.sp());
        EXPECT(0x753b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0315
        gbc.setState(0x2ac, 0xdc4b, 0xb9a0, 0xcbff, 0x9fd6, 0x9f58, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdc4b, gbc.sp());
        EXPECT(0x2ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0316
        gbc.setState(0x7844, 0x162a, 0x6700, 0xb0ac, 0x15b5, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0x7844, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x162a, gbc.sp());
        EXPECT(0x7845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0317
        gbc.setState(0x3d68, 0xda64, 0xda70, 0x3892, 0x557c, 0xa6de, 0x1, 0x1);
        gbc.writeMem(0x3d68, { 0x55 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xda64, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0318
        gbc.setState(0x2a50, 0x3659, 0x7280, 0xaaef, 0x5869, 0x9b25, 0x1, 0x1);
        gbc.writeMem(0x2a50, { 0x55 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0319
        gbc.setState(0x8e6, 0x162b, 0xe3d0, 0x100b, 0x1969, 0x75e4, 0x0, 0x1);
        gbc.writeMem(0x8e6, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x162b, gbc.sp());
        EXPECT(0x8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 031A
        gbc.setState(0xbe77, 0x8cb, 0x69b0, 0x9eb6, 0xada0, 0xa523, 0x1, 0x0);
        gbc.writeMem(0xbe77, { 0x55 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0xbe78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbe77));
        // 55 031B
        gbc.setState(0x8a82, 0xa95e, 0x2e80, 0x51c9, 0x17b8, 0x2155, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0x8a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8a82));
        // 55 031C
        gbc.setState(0xc74d, 0x29f1, 0x4430, 0x848, 0xbf64, 0x4e2e, 0x0, 0x0);
        gbc.writeMem(0xc74d, { 0x55 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x29f1, gbc.sp());
        EXPECT(0xc74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc74d));
        // 55 031E
        gbc.setState(0x64e0, 0x6e96, 0xd820, 0xd75d, 0x6d9b, 0xe462, 0x0, 0x1);
        gbc.writeMem(0x64e0, { 0x55 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6e96, gbc.sp());
        EXPECT(0x64e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 031F
        gbc.setState(0x3f8a, 0xc88a, 0x55b0, 0x1e80, 0xe088, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0x3f8a, { 0x55 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc88a, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0321
        gbc.setState(0xe2da, 0xaaab, 0xb770, 0x7d6b, 0xf623, 0x1614, 0x0, 0x1);
        gbc.writeMem(0xe2da, { 0x55 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xaaab, gbc.sp());
        EXPECT(0xe2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe2da));
        // 55 0322
        gbc.setState(0x265e, 0xdfa, 0xceb0, 0x87e1, 0x11aa, 0x88e, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0x55 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdfa, gbc.sp());
        EXPECT(0x265f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0323
        gbc.setState(0x19e6, 0x3c63, 0xe830, 0xf8d, 0xf49f, 0xe030, 0x1, 0x1);
        gbc.writeMem(0x19e6, { 0x55 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3c63, gbc.sp());
        EXPECT(0x19e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0324
        gbc.setState(0xb450, 0x9219, 0x1ec0, 0xd2fc, 0xfe30, 0x8d57, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9219, gbc.sp());
        EXPECT(0xb451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb450));
        // 55 0325
        gbc.setState(0x8516, 0xb8e7, 0x440, 0x393e, 0x894a, 0x5772, 0x1, 0x0);
        gbc.writeMem(0x8516, { 0x55 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xb8e7, gbc.sp());
        EXPECT(0x8517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8516));
        // 55 0326
        gbc.setState(0xc794, 0xd7b, 0x7620, 0x97d3, 0x5135, 0x830a, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd7b, gbc.sp());
        EXPECT(0xc795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc794));
        // 55 0327
        gbc.setState(0xe914, 0x875a, 0xc0d0, 0x3d46, 0x8230, 0xf402, 0x1, 0x0);
        gbc.writeMem(0xe914, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0xe915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe914));
        // 55 0329
        gbc.setState(0x8ca8, 0x2a65, 0x3370, 0xc865, 0x46a2, 0x744a, 0x1, 0x0);
        gbc.writeMem(0x8ca8, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2a65, gbc.sp());
        EXPECT(0x8ca9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8ca8));
        // 55 032A
        gbc.setState(0x8059, 0x261f, 0x2c40, 0x82cb, 0x312b, 0x2db, 0x0, 0x1);
        gbc.writeMem(0x8059, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x261f, gbc.sp());
        EXPECT(0x805a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8059));
        // 55 032B
        gbc.setState(0xceb9, 0x13ea, 0xb70, 0x2d66, 0x2f0b, 0x6490, 0x0, 0x1);
        gbc.writeMem(0xceb9, { 0x55 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x13ea, gbc.sp());
        EXPECT(0xceba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xceb9));
        // 55 032C
        gbc.setState(0x153b, 0xb335, 0xcf40, 0x2372, 0x5e83, 0x77f2, 0x1, 0x1);
        gbc.writeMem(0x153b, { 0x55 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb335, gbc.sp());
        EXPECT(0x153c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 032D
        gbc.setState(0x7cb6, 0x19cc, 0x4a70, 0x1eeb, 0x7f3a, 0xdb8d, 0x0, 0x0);
        gbc.writeMem(0x7cb6, { 0x55 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x19cc, gbc.sp());
        EXPECT(0x7cb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 032E
        gbc.setState(0x376b, 0x3cdf, 0x4fa0, 0x72b9, 0xccab, 0x6c64, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0x55 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3cdf, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 032F
        gbc.setState(0x11fc, 0xe6fa, 0x74a0, 0x497a, 0xd654, 0x2542, 0x1, 0x0);
        gbc.writeMem(0x11fc, { 0x55 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0330
        gbc.setState(0x5fb3, 0x61d7, 0x85f0, 0x8d87, 0xa377, 0xe68a, 0x0, 0x0);
        gbc.writeMem(0x5fb3, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x61d7, gbc.sp());
        EXPECT(0x5fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0331
        gbc.setState(0x9f98, 0x6820, 0x1890, 0xfd37, 0xd115, 0xdeab, 0x1, 0x0);
        gbc.writeMem(0x9f98, { 0x55 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6820, gbc.sp());
        EXPECT(0x9f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9f98));
        // 55 0332
        gbc.setState(0x43c7, 0x703d, 0x690, 0xb041, 0xe6fd, 0x306b, 0x0, 0x0);
        gbc.writeMem(0x43c7, { 0x55 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x703d, gbc.sp());
        EXPECT(0x43c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0333
        gbc.setState(0xca31, 0xff6a, 0x6f50, 0x322c, 0xd1c4, 0x37a7, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0x55 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xff6a, gbc.sp());
        EXPECT(0xca32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xca31));
        // 55 0334
        gbc.setState(0x12db, 0xa7df, 0xcc60, 0x1933, 0xf2ba, 0x7946, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0x55 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa7df, gbc.sp());
        EXPECT(0x12dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0336
        gbc.setState(0xba5a, 0x3b6e, 0xa1d0, 0x1a2b, 0xb213, 0xf7a5, 0x1, 0x1);
        gbc.writeMem(0xba5a, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3b6e, gbc.sp());
        EXPECT(0xba5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba5a));
        // 55 0338
        gbc.setState(0xb0e5, 0xf067, 0x54c0, 0x7fe0, 0xba28, 0xedf0, 0x1, 0x0);
        gbc.writeMem(0xb0e5, { 0x55 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf067, gbc.sp());
        EXPECT(0xb0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb0e5));
        // 55 0339
        gbc.setState(0x6e5, 0xf5fb, 0x80a0, 0x8772, 0x7907, 0x5295, 0x0, 0x0);
        gbc.writeMem(0x6e5, { 0x55 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf5fb, gbc.sp());
        EXPECT(0x6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 033A
        gbc.setState(0x8fd8, 0x73ac, 0x3630, 0x48b8, 0xe811, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x8fd8, { 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x73ac, gbc.sp());
        EXPECT(0x8fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8fd8));
        // 55 033B
        gbc.setState(0xcbc1, 0x5fa, 0xf720, 0x65c4, 0xded2, 0x52e2, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0x55 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0xcbc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcbc1));
        // 55 033C
        gbc.setState(0xc509, 0xe58c, 0x2ac0, 0xa835, 0xb615, 0x1f86, 0x0, 0x1);
        gbc.writeMem(0xc509, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe58c, gbc.sp());
        EXPECT(0xc50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc509));
        // 55 033D
        gbc.setState(0xb6e9, 0x981f, 0x3130, 0xd960, 0x5b88, 0x338a, 0x1, 0x0);
        gbc.writeMem(0xb6e9, { 0x55 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x981f, gbc.sp());
        EXPECT(0xb6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb6e9));
        // 55 033E
        gbc.setState(0x2189, 0xcbc, 0x7750, 0x7944, 0x163f, 0xe62e, 0x0, 0x0);
        gbc.writeMem(0x2189, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcbc, gbc.sp());
        EXPECT(0x218a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 033F
        gbc.setState(0xcbc9, 0x6671, 0x8490, 0xd7a6, 0x7693, 0xe1a0, 0x1, 0x1);
        gbc.writeMem(0xcbc9, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6671, gbc.sp());
        EXPECT(0xcbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcbc9));
        // 55 0340
        gbc.setState(0xd8e, 0x770, 0x3b80, 0x84ee, 0x710f, 0x6f79, 0x0, 0x1);
        gbc.writeMem(0xd8e, { 0x55 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x770, gbc.sp());
        EXPECT(0xd8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0341
        gbc.setState(0x5b7a, 0xab6f, 0xcd90, 0xdd9, 0xa582, 0xb70b, 0x0, 0x0);
        gbc.writeMem(0x5b7a, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xab6f, gbc.sp());
        EXPECT(0x5b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0342
        gbc.setState(0xb9fa, 0xaa18, 0x4040, 0x7491, 0xd20, 0xfc5c, 0x1, 0x1);
        gbc.writeMem(0xb9fa, { 0x55 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaa18, gbc.sp());
        EXPECT(0xb9fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb9fa));
        // 55 0343
        gbc.setState(0x9798, 0x538f, 0x1360, 0x955f, 0x833e, 0xf803, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0x9799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9798));
        // 55 0345
        gbc.setState(0xecc3, 0x89a4, 0x2a30, 0xa0c9, 0xaec9, 0x1557, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x89a4, gbc.sp());
        EXPECT(0xecc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xecc3));
        // 55 0346
        gbc.setState(0xdbd0, 0x3f03, 0xbe10, 0x8eed, 0xc422, 0xd512, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3f03, gbc.sp());
        EXPECT(0xdbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdbd0));
        // 55 0347
        gbc.setState(0x7c55, 0xdd1, 0x3c30, 0x5836, 0x5706, 0x448b, 0x1, 0x0);
        gbc.writeMem(0x7c55, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdd1, gbc.sp());
        EXPECT(0x7c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0348
        gbc.setState(0x238d, 0x9142, 0xe60, 0x9870, 0x3f0b, 0x8427, 0x0, 0x0);
        gbc.writeMem(0x238d, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0x238e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0349
        gbc.setState(0x8332, 0xe569, 0x8e70, 0x9b91, 0xdf08, 0xa625, 0x1, 0x1);
        gbc.writeMem(0x8332, { 0x55 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe569, gbc.sp());
        EXPECT(0x8333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8332));
        // 55 034A
        gbc.setState(0x5202, 0x6719, 0x6910, 0xb123, 0xb42a, 0x4384, 0x1, 0x1);
        gbc.writeMem(0x5202, { 0x55 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6719, gbc.sp());
        EXPECT(0x5203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 034B
        gbc.setState(0xcd92, 0x3078, 0x12d0, 0x1abf, 0x3e1, 0x41fc, 0x0, 0x1);
        gbc.writeMem(0xcd92, { 0x55 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3078, gbc.sp());
        EXPECT(0xcd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcd92));
        // 55 034C
        gbc.setState(0x55a9, 0xcc42, 0x12d0, 0x3cf9, 0xc372, 0x7064, 0x0, 0x1);
        gbc.writeMem(0x55a9, { 0x55 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcc42, gbc.sp());
        EXPECT(0x55aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 034D
        gbc.setState(0x3904, 0x762d, 0xd070, 0xffd8, 0x8218, 0x4ccc, 0x1, 0x0);
        gbc.writeMem(0x3904, { 0x55 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x762d, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 034E
        gbc.setState(0x4354, 0x5f93, 0x9fc0, 0x4d76, 0xa80b, 0x5c73, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0x55 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x5f93, gbc.sp());
        EXPECT(0x4355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 034F
        gbc.setState(0x9426, 0x846d, 0xa540, 0x422e, 0xf297, 0xbacf, 0x0, 0x0);
        gbc.writeMem(0x9426, { 0x55 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x846d, gbc.sp());
        EXPECT(0x9427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9426));
        // 55 0351
        gbc.setState(0xafac, 0xa955, 0x4a70, 0x183a, 0xbe70, 0x67f4, 0x0, 0x1);
        gbc.writeMem(0xafac, { 0x55 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa955, gbc.sp());
        EXPECT(0xafad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xafac));
        // 55 0352
        gbc.setState(0x5325, 0x64ad, 0x7300, 0x59ce, 0x4473, 0xc46b, 0x1, 0x1);
        gbc.writeMem(0x5325, { 0x55 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x64ad, gbc.sp());
        EXPECT(0x5326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0353
        gbc.setState(0x5a6f, 0x362f, 0x1830, 0xe8a1, 0x2769, 0x3d9a, 0x1, 0x0);
        gbc.writeMem(0x5a6f, { 0x55 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x362f, gbc.sp());
        EXPECT(0x5a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0354
        gbc.setState(0xb6ba, 0x4c8f, 0xbaa0, 0x7d72, 0x99d0, 0x2647, 0x0, 0x1);
        gbc.writeMem(0xb6ba, { 0x55 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4c8f, gbc.sp());
        EXPECT(0xb6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb6ba));
        // 55 0355
        gbc.setState(0xe92b, 0x9ca3, 0xa120, 0x6593, 0x5033, 0x4404, 0x1, 0x1);
        gbc.writeMem(0xe92b, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0xe92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe92b));
        // 55 0356
        gbc.setState(0xbf2c, 0x7898, 0xa7b0, 0xf0b7, 0xa99e, 0x3f47, 0x0, 0x0);
        gbc.writeMem(0xbf2c, { 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7898, gbc.sp());
        EXPECT(0xbf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbf2c));
        // 55 0357
        gbc.setState(0xc2dd, 0x765f, 0x8420, 0xb935, 0x379d, 0xf0e8, 0x1, 0x1);
        gbc.writeMem(0xc2dd, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x765f, gbc.sp());
        EXPECT(0xc2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc2dd));
        // 55 0358
        gbc.setState(0x604d, 0x1d2f, 0x62c0, 0xaf92, 0x8fc2, 0xdfcc, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1d2f, gbc.sp());
        EXPECT(0x604e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0359
        gbc.setState(0x244e, 0xc518, 0x7d20, 0x53fa, 0xbb4, 0xfc06, 0x1, 0x0);
        gbc.writeMem(0x244e, { 0x55 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc518, gbc.sp());
        EXPECT(0x244f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 035A
        gbc.setState(0xa580, 0x67b8, 0x1bb0, 0xf17, 0xe050, 0xb70, 0x1, 0x1);
        gbc.writeMem(0xa580, { 0x55 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x67b8, gbc.sp());
        EXPECT(0xa581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa580));
        // 55 035B
        gbc.setState(0x73b5, 0x6f01, 0xeb20, 0x8c3a, 0x457, 0x17d6, 0x0, 0x1);
        gbc.writeMem(0x73b5, { 0x55 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6f01, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 035C
        gbc.setState(0x13a5, 0x1849, 0x2270, 0xef1f, 0xd919, 0x8aca, 0x1, 0x0);
        gbc.writeMem(0x13a5, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1849, gbc.sp());
        EXPECT(0x13a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 035D
        gbc.setState(0x9cf6, 0x538e, 0x2a50, 0x921f, 0x3132, 0xeb59, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x538e, gbc.sp());
        EXPECT(0x9cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9cf6));
        // 55 035E
        gbc.setState(0xafbe, 0xeb06, 0x9bc0, 0x5609, 0xcc3e, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0xafbe, { 0x55 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xeb06, gbc.sp());
        EXPECT(0xafbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xafbe));
        // 55 035F
        gbc.setState(0x24e8, 0xa61, 0xc310, 0xb480, 0x655f, 0x7ebc, 0x0, 0x0);
        gbc.writeMem(0x24e8, { 0x55 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa61, gbc.sp());
        EXPECT(0x24e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0360
        gbc.setState(0xcc5b, 0xfbc1, 0x6550, 0x72fb, 0xcf4f, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0xcc5b, { 0x55 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfbc1, gbc.sp());
        EXPECT(0xcc5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc5b));
        // 55 0361
        gbc.setState(0x6a23, 0x1b73, 0x4330, 0x5eab, 0x57be, 0x10f5, 0x1, 0x1);
        gbc.writeMem(0x6a23, { 0x55 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1b73, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0362
        gbc.setState(0xcc59, 0xf5cb, 0xa100, 0xfb54, 0xb79e, 0xee61, 0x1, 0x0);
        gbc.writeMem(0xcc59, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf5cb, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcc59));
        // 55 0363
        gbc.setState(0xcd4a, 0x4b2a, 0x5200, 0xe99d, 0x1645, 0xa15f, 0x0, 0x0);
        gbc.writeMem(0xcd4a, { 0x55 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4b2a, gbc.sp());
        EXPECT(0xcd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcd4a));
        // 55 0364
        gbc.setState(0x8690, 0x940, 0x3340, 0x9f20, 0x4f80, 0x2853, 0x1, 0x0);
        gbc.writeMem(0x8690, { 0x55 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x940, gbc.sp());
        EXPECT(0x8691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8690));
        // 55 0365
        gbc.setState(0x8b34, 0x13a, 0x8480, 0x27be, 0x2a6c, 0xaf0a, 0x0, 0x1);
        gbc.writeMem(0x8b34, { 0x55 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x13a, gbc.sp());
        EXPECT(0x8b35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8b34));
        // 55 0366
        gbc.setState(0x3df9, 0x9b20, 0xfbe0, 0x6ce6, 0xc1e4, 0xbac5, 0x1, 0x1);
        gbc.writeMem(0x3df9, { 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9b20, gbc.sp());
        EXPECT(0x3dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0367
        gbc.setState(0xd841, 0x7db4, 0xb500, 0xcf75, 0x455f, 0xd08a, 0x1, 0x1);
        gbc.writeMem(0xd841, { 0x55 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0xd842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd841));
        // 55 0368
        gbc.setState(0x1fd3, 0xd290, 0xae40, 0x92ab, 0x6a12, 0x9b82, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0x55 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd290, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0369
        gbc.setState(0xeccc, 0xd4ef, 0xd9f0, 0xb81, 0xdfcd, 0x7256, 0x0, 0x0);
        gbc.writeMem(0xeccc, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd4ef, gbc.sp());
        EXPECT(0xeccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeccc));
        // 55 036A
        gbc.setState(0x2563, 0x1dc7, 0xa770, 0x8be6, 0x7224, 0xe26, 0x0, 0x1);
        gbc.writeMem(0x2563, { 0x55 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1dc7, gbc.sp());
        EXPECT(0x2564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 036B
        gbc.setState(0xa9e5, 0x3347, 0x81b0, 0x997f, 0x5b44, 0x906e, 0x1, 0x0);
        gbc.writeMem(0xa9e5, { 0x55 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3347, gbc.sp());
        EXPECT(0xa9e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa9e5));
        // 55 036C
        gbc.setState(0x683c, 0xd5fa, 0x5390, 0xd029, 0x9fb0, 0x2a9a, 0x1, 0x1);
        gbc.writeMem(0x683c, { 0x55 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd5fa, gbc.sp());
        EXPECT(0x683d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 036D
        gbc.setState(0xbf65, 0xcfc6, 0x7790, 0x1d80, 0xac8e, 0x5e3c, 0x0, 0x0);
        gbc.writeMem(0xbf65, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0xbf66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbf65));
        // 55 036E
        gbc.setState(0x7503, 0x9140, 0x6540, 0xa1c9, 0x420c, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x7503, { 0x55 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0x7504, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 036F
        gbc.setState(0x9dd1, 0xf530, 0xd2f0, 0xa427, 0xc30c, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0x9dd1, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf530, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9dd1));
        // 55 0370
        gbc.setState(0xf37, 0xd647, 0xa910, 0x1ce1, 0xefc0, 0xd050, 0x1, 0x0);
        gbc.writeMem(0xf37, { 0x55 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0xf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0371
        gbc.setState(0x5eb4, 0xce4, 0xcde0, 0xd755, 0xdefd, 0x3b33, 0x1, 0x1);
        gbc.writeMem(0x5eb4, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xce4, gbc.sp());
        EXPECT(0x5eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0372
        gbc.setState(0x1688, 0xe422, 0x45c0, 0x536e, 0x7205, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x1688, { 0x55 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe422, gbc.sp());
        EXPECT(0x1689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0373
        gbc.setState(0x45b6, 0x85a5, 0x4e20, 0xd4ef, 0x3c23, 0x39ab, 0x1, 0x1);
        gbc.writeMem(0x45b6, { 0x55 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x85a5, gbc.sp());
        EXPECT(0x45b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0375
        gbc.setState(0x510e, 0x6e30, 0x8500, 0x9c06, 0xae28, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x510e, { 0x55 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6e30, gbc.sp());
        EXPECT(0x510f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0376
        gbc.setState(0xd81, 0xa749, 0x73f0, 0xadd6, 0x8c34, 0x2792, 0x1, 0x0);
        gbc.writeMem(0xd81, { 0x55 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa749, gbc.sp());
        EXPECT(0xd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0377
        gbc.setState(0xb87c, 0x3149, 0x4520, 0xc711, 0xe29f, 0x2fc9, 0x0, 0x1);
        gbc.writeMem(0xb87c, { 0x55 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3149, gbc.sp());
        EXPECT(0xb87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb87c));
        // 55 0378
        gbc.setState(0xafb4, 0xc10, 0xbef0, 0x8981, 0x9b29, 0x4f33, 0x0, 0x0);
        gbc.writeMem(0xafb4, { 0x55 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0xafb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xafb4));
        // 55 0379
        gbc.setState(0x6089, 0x1057, 0xd210, 0xba27, 0xc477, 0xb7df, 0x0, 0x1);
        gbc.writeMem(0x6089, { 0x55 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0x608a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 037A
        gbc.setState(0x2e8a, 0x6204, 0x1e10, 0x813e, 0x5f32, 0x1f26, 0x1, 0x1);
        gbc.writeMem(0x2e8a, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6204, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 037B
        gbc.setState(0xcf59, 0xc3aa, 0xe910, 0x5952, 0x53a, 0x4928, 0x0, 0x0);
        gbc.writeMem(0xcf59, { 0x55 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc3aa, gbc.sp());
        EXPECT(0xcf5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcf59));
        // 55 037C
        gbc.setState(0xaa9b, 0x743d, 0x2740, 0x153, 0xb49, 0x20e6, 0x0, 0x1);
        gbc.writeMem(0xaa9b, { 0x55 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaa9b));
        // 55 037D
        gbc.setState(0x7de5, 0xf3b9, 0xc150, 0xf492, 0xd10d, 0xa09d, 0x1, 0x1);
        gbc.writeMem(0x7de5, { 0x55 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf3b9, gbc.sp());
        EXPECT(0x7de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 037E
        gbc.setState(0xaad9, 0x3a85, 0xa140, 0xea04, 0x8550, 0x9a61, 0x0, 0x1);
        gbc.writeMem(0xaad9, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3a85, gbc.sp());
        EXPECT(0xaada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xaad9));
        // 55 037F
        gbc.setState(0x571, 0x6f00, 0x2aa0, 0x5d0, 0xfd01, 0xbb73, 0x0, 0x0);
        gbc.writeMem(0x571, { 0x55 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6f00, gbc.sp());
        EXPECT(0x572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0380
        gbc.setState(0xa790, 0x8de2, 0xbc40, 0x3dbd, 0x2902, 0x95c8, 0x1, 0x0);
        gbc.writeMem(0xa790, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8de2, gbc.sp());
        EXPECT(0xa791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa790));
        // 55 0381
        gbc.setState(0x6445, 0xfb5f, 0xd390, 0x96bc, 0x5da, 0x8879, 0x0, 0x1);
        gbc.writeMem(0x6445, { 0x55 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfb5f, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0382
        gbc.setState(0x11bb, 0x4995, 0x5000, 0xd0da, 0x901d, 0x6410, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4995, gbc.sp());
        EXPECT(0x11bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0383
        gbc.setState(0x4452, 0x9ed9, 0x4b40, 0xc8f4, 0x627c, 0xcec7, 0x0, 0x1);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9ed9, gbc.sp());
        EXPECT(0x4453, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0384
        gbc.setState(0x6f91, 0xc01, 0x1ed0, 0xa0c, 0xdf96, 0xe6b6, 0x0, 0x0);
        gbc.writeMem(0x6f91, { 0x55 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc01, gbc.sp());
        EXPECT(0x6f92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0385
        gbc.setState(0x8436, 0x4e1f, 0xd990, 0xe1c6, 0x8cd5, 0x97e0, 0x0, 0x0);
        gbc.writeMem(0x8436, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4e1f, gbc.sp());
        EXPECT(0x8437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8436));
        // 55 0386
        gbc.setState(0xa311, 0x40c4, 0xcfa0, 0xb847, 0xbc02, 0xf964, 0x1, 0x0);
        gbc.writeMem(0xa311, { 0x55 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0xa312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa311));
        // 55 0387
        gbc.setState(0x94ce, 0xd085, 0x2cb0, 0xf7bf, 0x3b8a, 0x588e, 0x0, 0x0);
        gbc.writeMem(0x94ce, { 0x55 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd085, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x94ce));
        // 55 0388
        gbc.setState(0x4838, 0x42cf, 0xd930, 0xe8f6, 0xbd20, 0x21ff, 0x1, 0x1);
        gbc.writeMem(0x4838, { 0x55 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x42cf, gbc.sp());
        EXPECT(0x4839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0389
        gbc.setState(0xbb7d, 0x5b4b, 0xa8e0, 0x1c20, 0xe08b, 0x32a1, 0x0, 0x0);
        gbc.writeMem(0xbb7d, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5b4b, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbb7d));
        // 55 038A
        gbc.setState(0x8835, 0x3a1e, 0x37a0, 0xaf1a, 0xc12, 0x4e02, 0x0, 0x1);
        gbc.writeMem(0x8835, { 0x55 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3a1e, gbc.sp());
        EXPECT(0x8836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8835));
        // 55 038B
        gbc.setState(0xbcc4, 0x93f7, 0xa960, 0x21cb, 0xc86c, 0x87a8, 0x1, 0x1);
        gbc.writeMem(0xbcc4, { 0x55 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x93f7, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xbcc4));
        // 55 038C
        gbc.setState(0x82e9, 0xb2a5, 0x78a0, 0x4235, 0xf337, 0x2366, 0x0, 0x1);
        gbc.writeMem(0x82e9, { 0x55 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb2a5, gbc.sp());
        EXPECT(0x82ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x82e9));
        // 55 038D
        gbc.setState(0xcea8, 0xe52f, 0x2dd0, 0xedd8, 0x8893, 0x1e84, 0x0, 0x0);
        gbc.writeMem(0xcea8, { 0x55 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe52f, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcea8));
        // 55 038E
        gbc.setState(0xcb04, 0x1068, 0x3c30, 0x1afc, 0x113e, 0xbdf1, 0x1, 0x0);
        gbc.writeMem(0xcb04, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1068, gbc.sp());
        EXPECT(0xcb05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcb04));
        // 55 038F
        gbc.setState(0x42a3, 0xb356, 0xe190, 0x9aec, 0xa554, 0x8803, 0x0, 0x0);
        gbc.writeMem(0x42a3, { 0x55 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb356, gbc.sp());
        EXPECT(0x42a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0390
        gbc.setState(0xda51, 0x20b8, 0x3040, 0xa37a, 0xad5b, 0xd836, 0x1, 0x1);
        gbc.writeMem(0xda51, { 0x55 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x20b8, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xda51));
        // 55 0391
        gbc.setState(0x8d9, 0xb46d, 0x6200, 0x8355, 0xee67, 0xa6e8, 0x0, 0x0);
        gbc.writeMem(0x8d9, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb46d, gbc.sp());
        EXPECT(0x8da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0392
        gbc.setState(0x413c, 0xcfe9, 0x30, 0x78d1, 0x85ea, 0xd12a, 0x1, 0x0);
        gbc.writeMem(0x413c, { 0x55 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcfe9, gbc.sp());
        EXPECT(0x413d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 0393
        gbc.setState(0xd6dc, 0x9cf4, 0x7580, 0xe9fb, 0x357c, 0x9c67, 0x1, 0x0);
        gbc.writeMem(0xd6dc, { 0x55 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0xd6dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd6dc));
        // 55 0394
        gbc.setState(0x8244, 0x8274, 0x7730, 0x7df9, 0x512f, 0xa35d, 0x1, 0x1);
        gbc.writeMem(0x8244, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8274, gbc.sp());
        EXPECT(0x8245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8244));
        // 55 0395
        gbc.setState(0x2707, 0x34c9, 0x1720, 0xf738, 0xbf70, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x2707, { 0x55 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x34c9, gbc.sp());
        EXPECT(0x2708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0396
        gbc.setState(0x9150, 0x51ac, 0xc0e0, 0x3dc6, 0x64f2, 0x1088, 0x1, 0x0);
        gbc.writeMem(0x9150, { 0x55 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x51ac, gbc.sp());
        EXPECT(0x9151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9150));
        // 55 0397
        gbc.setState(0x313d, 0xde54, 0xdc60, 0xd7c1, 0x8c11, 0xffe, 0x0, 0x0);
        gbc.writeMem(0x313d, { 0x55 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xde54, gbc.sp());
        EXPECT(0x313e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0398
        gbc.setState(0x5a93, 0x20f4, 0x3b00, 0x4120, 0x1cd9, 0x22a4, 0x0, 0x0);
        gbc.writeMem(0x5a93, { 0x55 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x20f4, gbc.sp());
        EXPECT(0x5a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 0399
        gbc.setState(0x42c8, 0xc641, 0x6300, 0x9007, 0xdcda, 0xdb2c, 0x1, 0x1);
        gbc.writeMem(0x42c8, { 0x55 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x42c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 039A
        gbc.setState(0x5afb, 0x9668, 0x9b90, 0x200e, 0x57ab, 0xb99a, 0x0, 0x0);
        gbc.writeMem(0x5afb, { 0x55 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9668, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 039B
        gbc.setState(0xb34a, 0xf700, 0x4530, 0xc352, 0x3767, 0x3870, 0x0, 0x1);
        gbc.writeMem(0xb34a, { 0x55 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf700, gbc.sp());
        EXPECT(0xb34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb34a));
        // 55 039C
        gbc.setState(0x17dc, 0x4fa0, 0x8160, 0x9416, 0xa679, 0x7a66, 0x1, 0x1);
        gbc.writeMem(0x17dc, { 0x55 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4fa0, gbc.sp());
        EXPECT(0x17dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 039D
        gbc.setState(0x8807, 0xe2be, 0x7ce0, 0x43b0, 0xbdd2, 0x5685, 0x0, 0x1);
        gbc.writeMem(0x8807, { 0x55 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe2be, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8807));
        // 55 039E
        gbc.setState(0x2b89, 0xf5fd, 0x4560, 0xfa7, 0x3e9e, 0xc0af, 0x0, 0x0);
        gbc.writeMem(0x2b89, { 0x55 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf5fd, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 039F
        gbc.setState(0x1176, 0xed65, 0xe780, 0xda62, 0x96d0, 0xbb96, 0x0, 0x0);
        gbc.writeMem(0x1176, { 0x55 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xed65, gbc.sp());
        EXPECT(0x1177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03A0
        gbc.setState(0x7dff, 0x3053, 0x7650, 0xfbf3, 0xb60b, 0xdd3b, 0x0, 0x1);
        gbc.writeMem(0x7dff, { 0x55 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x7e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03A1
        gbc.setState(0xe01c, 0xc29a, 0x6290, 0xfa1f, 0x8f8b, 0xb630, 0x1, 0x0);
        gbc.writeMem(0xe01c, { 0x55 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc29a, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe01c));
        // 55 03A2
        gbc.setState(0xe434, 0x73ab, 0xea0, 0xd08, 0x79e0, 0x9218, 0x0, 0x1);
        gbc.writeMem(0xe434, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x73ab, gbc.sp());
        EXPECT(0xe435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe434));
        // 55 03A3
        gbc.setState(0x74f, 0x6cb7, 0xfb80, 0x7916, 0x59d7, 0x18d7, 0x1, 0x0);
        gbc.writeMem(0x74f, { 0x55 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6cb7, gbc.sp());
        EXPECT(0x750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03A4
        gbc.setState(0x9691, 0xef6d, 0x8b90, 0xf2fa, 0x87ed, 0x93c7, 0x1, 0x1);
        gbc.writeMem(0x9691, { 0x55 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef6d, gbc.sp());
        EXPECT(0x9692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9691));
        // 55 03A5
        gbc.setState(0x9e4a, 0xb267, 0xb9f0, 0x7b3f, 0x7e89, 0x5189, 0x1, 0x1);
        gbc.writeMem(0x9e4a, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb267, gbc.sp());
        EXPECT(0x9e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9e4a));
        // 55 03A6
        gbc.setState(0x1f0a, 0xea04, 0x8a00, 0x260f, 0xa4fe, 0x8784, 0x1, 0x0);
        gbc.writeMem(0x1f0a, { 0x55 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xea04, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03A7
        gbc.setState(0xd3af, 0x968b, 0xcd00, 0x329, 0x4f35, 0x63b6, 0x0, 0x1);
        gbc.writeMem(0xd3af, { 0x55 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x968b, gbc.sp());
        EXPECT(0xd3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd3af));
        // 55 03A8
        gbc.setState(0x26aa, 0xc62c, 0x9750, 0xeb15, 0x3f66, 0xb9f4, 0x0, 0x1);
        gbc.writeMem(0x26aa, { 0x55 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc62c, gbc.sp());
        EXPECT(0x26ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03A9
        gbc.setState(0x58, 0x7a8d, 0xe50, 0xe057, 0x80e9, 0xd468, 0x0, 0x1);
        gbc.writeMem(0x58, { 0x55 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7a8d, gbc.sp());
        EXPECT(0x59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03AA
        gbc.setState(0xd33b, 0xfccb, 0x8fc0, 0xce32, 0xa94c, 0xd1a8, 0x1, 0x1);
        gbc.writeMem(0xd33b, { 0x55 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xfccb, gbc.sp());
        EXPECT(0xd33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd33b));
        // 55 03AB
        gbc.setState(0x629f, 0x3409, 0x5620, 0xab5, 0xa11d, 0x5215, 0x1, 0x1);
        gbc.writeMem(0x629f, { 0x55 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3409, gbc.sp());
        EXPECT(0x62a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03AC
        gbc.setState(0xe008, 0x2e8b, 0x7740, 0x4b51, 0x793c, 0x544f, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0x55 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2e8b, gbc.sp());
        EXPECT(0xe009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe008));
        // 55 03AD
        gbc.setState(0xe63a, 0x2188, 0x4ab0, 0xa0cb, 0xe1aa, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0x55 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2188, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe63a));
        // 55 03AE
        gbc.setState(0x59, 0x1d94, 0xe370, 0xef18, 0x772c, 0xdffb, 0x0, 0x1);
        gbc.writeMem(0x59, { 0x55 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1d94, gbc.sp());
        EXPECT(0x5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03AF
        gbc.setState(0x4dc8, 0xfe02, 0xad30, 0x794a, 0x43aa, 0x2dfd, 0x0, 0x0);
        gbc.writeMem(0x4dc8, { 0x55 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfe02, gbc.sp());
        EXPECT(0x4dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03B0
        gbc.setState(0x65a1, 0x7989, 0xa820, 0x958a, 0x4a55, 0xdda4, 0x0, 0x1);
        gbc.writeMem(0x65a1, { 0x55 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7989, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03B2
        gbc.setState(0x8daf, 0xe6be, 0x1810, 0x5f0, 0x4a6c, 0x9677, 0x0, 0x0);
        gbc.writeMem(0x8daf, { 0x55 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0x8db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8daf));
        // 55 03B3
        gbc.setState(0x9e02, 0x577f, 0x60f0, 0x9ff, 0xd531, 0xdbc2, 0x1, 0x0);
        gbc.writeMem(0x9e02, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x577f, gbc.sp());
        EXPECT(0x9e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9e02));
        // 55 03B4
        gbc.setState(0x990b, 0x2645, 0x4840, 0x9a61, 0x296b, 0xf7d3, 0x1, 0x1);
        gbc.writeMem(0x990b, { 0x55 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2645, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x990b));
        // 55 03B5
        gbc.setState(0x185c, 0x5366, 0xd420, 0xcc41, 0xba7c, 0xb3e5, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0x55 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5366, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03B6
        gbc.setState(0x50a4, 0xb4cf, 0xdfa0, 0x8fa4, 0xb15b, 0x28b2, 0x0, 0x0);
        gbc.writeMem(0x50a4, { 0x55 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb4cf, gbc.sp());
        EXPECT(0x50a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03B7
        gbc.setState(0x87a5, 0x8f9d, 0x25b0, 0x527a, 0x36db, 0x2f42, 0x1, 0x1);
        gbc.writeMem(0x87a5, { 0x55 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0x87a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x87a5));
        // 55 03B8
        gbc.setState(0x14ce, 0xf73e, 0x8dc0, 0x29ec, 0x9ad5, 0x6bef, 0x0, 0x1);
        gbc.writeMem(0x14ce, { 0x55 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xf73e, gbc.sp());
        EXPECT(0x14cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03B9
        gbc.setState(0x8aec, 0x4ff3, 0xcee0, 0x9159, 0x4957, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0x8aec, { 0x55 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4ff3, gbc.sp());
        EXPECT(0x8aed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8aec));
        // 55 03BA
        gbc.setState(0xe9ad, 0x6098, 0x1310, 0x5c5, 0xa003, 0xf112, 0x1, 0x1);
        gbc.writeMem(0xe9ad, { 0x55 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6098, gbc.sp());
        EXPECT(0xe9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe9ad));
        // 55 03BB
        gbc.setState(0x4d1f, 0x9ce2, 0x50f0, 0x4405, 0xbad6, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0x4d1f, { 0x55 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0x4d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03BC
        gbc.setState(0x5cc0, 0x877a, 0x28f0, 0x4bea, 0xdbfb, 0xa294, 0x0, 0x0);
        gbc.writeMem(0x5cc0, { 0x55 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x877a, gbc.sp());
        EXPECT(0x5cc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03BD
        gbc.setState(0x6c96, 0x914d, 0xb690, 0xcf4, 0xfdba, 0xbbbe, 0x1, 0x1);
        gbc.writeMem(0x6c96, { 0x55 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x6c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03BE
        gbc.setState(0xb84c, 0x2884, 0x8fc0, 0x8e2a, 0x25a9, 0x6fe2, 0x1, 0x1);
        gbc.writeMem(0xb84c, { 0x55 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2884, gbc.sp());
        EXPECT(0xb84d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb84c));
        // 55 03BF
        gbc.setState(0xe4f3, 0xe09b, 0x9950, 0x5e3, 0x19c1, 0x9485, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0x55 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe09b, gbc.sp());
        EXPECT(0xe4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe4f3));
        // 55 03C0
        gbc.setState(0x5794, 0xd02c, 0x4080, 0x1724, 0xc5e0, 0xd42, 0x0, 0x0);
        gbc.writeMem(0x5794, { 0x55 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd02c, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03C1
        gbc.setState(0x722c, 0xbaae, 0x4950, 0xa456, 0x9ea5, 0x2c4e, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0x55 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbaae, gbc.sp());
        EXPECT(0x722d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03C3
        gbc.setState(0xb5b3, 0xf6d0, 0x5180, 0x2dc8, 0xebbd, 0x46b6, 0x1, 0x0);
        gbc.writeMem(0xb5b3, { 0x55 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf6d0, gbc.sp());
        EXPECT(0xb5b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb5b3));
        // 55 03C4
        gbc.setState(0xb45e, 0xb109, 0x52f0, 0x7b3a, 0x9f04, 0x7755, 0x1, 0x0);
        gbc.writeMem(0xb45e, { 0x55 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb109, gbc.sp());
        EXPECT(0xb45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb45e));
        // 55 03C5
        gbc.setState(0xcdc3, 0xcb8c, 0xe230, 0x253b, 0x7c90, 0x7cb6, 0x0, 0x0);
        gbc.writeMem(0xcdc3, { 0x55 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcb8c, gbc.sp());
        EXPECT(0xcdc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xcdc3));
        // 55 03C6
        gbc.setState(0x6a63, 0x44d1, 0x4ed0, 0x4e62, 0xe2fd, 0x3f5a, 0x1, 0x0);
        gbc.writeMem(0x6a63, { 0x55 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x6a64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03C8
        gbc.setState(0x18ee, 0xc198, 0x6700, 0x9908, 0x4c9d, 0xb86d, 0x1, 0x0);
        gbc.writeMem(0x18ee, { 0x55 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc198, gbc.sp());
        EXPECT(0x18ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03C9
        gbc.setState(0xba2e, 0x2428, 0x5870, 0x3606, 0xb04a, 0xdc11, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0x55 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2428, gbc.sp());
        EXPECT(0xba2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xba2e));
        // 55 03CB
        gbc.setState(0x652a, 0xc967, 0xa0e0, 0x3dfb, 0x81af, 0xa1ad, 0x1, 0x0);
        gbc.writeMem(0x652a, { 0x55 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc967, gbc.sp());
        EXPECT(0x652b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03CC
        gbc.setState(0x21fb, 0xc724, 0xf440, 0x5475, 0xb452, 0xd8f3, 0x0, 0x1);
        gbc.writeMem(0x21fb, { 0x55 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc724, gbc.sp());
        EXPECT(0x21fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03CD
        gbc.setState(0xe03b, 0x6c74, 0x8810, 0x8e6e, 0x53a, 0xc2a8, 0x1, 0x0);
        gbc.writeMem(0xe03b, { 0x55 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6c74, gbc.sp());
        EXPECT(0xe03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe03b));
        // 55 03CE
        gbc.setState(0x7878, 0xe987, 0x94d0, 0xa215, 0x5867, 0xc0bb, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0x55 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe987, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03CF
        gbc.setState(0xd345, 0xfca4, 0x3e10, 0x63d1, 0xcf5e, 0x7c3c, 0x1, 0x1);
        gbc.writeMem(0xd345, { 0x55 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0xd346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xd345));
        // 55 03D0
        gbc.setState(0x7376, 0xda88, 0xd7e0, 0xdcd6, 0x2e9f, 0xddf6, 0x1, 0x0);
        gbc.writeMem(0x7376, { 0x55 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03D1
        gbc.setState(0x91b8, 0x9b22, 0x6db0, 0x374, 0x9d96, 0xeb73, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0x55 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9b22, gbc.sp());
        EXPECT(0x91b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x91b8));
        // 55 03D2
        gbc.setState(0xeab3, 0x2a56, 0xe000, 0xcd43, 0xb471, 0x9aef, 0x1, 0x1);
        gbc.writeMem(0xeab3, { 0x55 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2a56, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xeab3));
        // 55 03D3
        gbc.setState(0xe73d, 0xac12, 0x6ad0, 0x3ce4, 0xcff9, 0xda9b, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0x55 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xac12, gbc.sp());
        EXPECT(0xe73e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe73d));
        // 55 03D5
        gbc.setState(0xa179, 0xdf17, 0x3c10, 0xe831, 0x2ed6, 0x4a3a, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0x55 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdf17, gbc.sp());
        EXPECT(0xa17a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa179));
        // 55 03D7
        gbc.setState(0x1a1e, 0x44d, 0x1450, 0xd73e, 0x3b07, 0xaa1, 0x1, 0x1);
        gbc.writeMem(0x1a1e, { 0x55 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x44d, gbc.sp());
        EXPECT(0x1a1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03D8
        gbc.setState(0xa547, 0x4cde, 0x15c0, 0xa0e2, 0xcf5, 0xc296, 0x0, 0x0);
        gbc.writeMem(0xa547, { 0x55 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4cde, gbc.sp());
        EXPECT(0xa548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xa547));
        // 55 03D9
        gbc.setState(0x6f9, 0xd5a7, 0xf9d0, 0x71b3, 0xd728, 0x381f, 0x1, 0x1);
        gbc.writeMem(0x6f9, { 0x55 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd5a7, gbc.sp());
        EXPECT(0x6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03DA
        gbc.setState(0x389c, 0x31e5, 0x8bd0, 0x7c9, 0xb7da, 0x9715, 0x1, 0x0);
        gbc.writeMem(0x389c, { 0x55 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x389d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03DB
        gbc.setState(0x822b, 0xa6c6, 0xfd0, 0x94ec, 0xb912, 0x7f0, 0x0, 0x1);
        gbc.writeMem(0x822b, { 0x55 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa6c6, gbc.sp());
        EXPECT(0x822c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x822b));
        // 55 03DC
        gbc.setState(0x3268, 0x3d59, 0x4740, 0x3d50, 0x4cac, 0x1149, 0x1, 0x1);
        gbc.writeMem(0x3268, { 0x55 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3d59, gbc.sp());
        EXPECT(0x3269, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03DD
        gbc.setState(0x5c2e, 0x513f, 0xb100, 0x3c04, 0x22c3, 0xba64, 0x0, 0x0);
        gbc.writeMem(0x5c2e, { 0x55 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x513f, gbc.sp());
        EXPECT(0x5c2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03DE
        gbc.setState(0x9eac, 0x29e8, 0xd0a0, 0x6ea4, 0x42c0, 0xed55, 0x0, 0x0);
        gbc.writeMem(0x9eac, { 0x55 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x29e8, gbc.sp());
        EXPECT(0x9ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9eac));
        // 55 03DF
        gbc.setState(0xb7dc, 0x1009, 0x32a0, 0x1b24, 0x5fd3, 0xcb70, 0x1, 0x1);
        gbc.writeMem(0xb7dc, { 0x55 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1009, gbc.sp());
        EXPECT(0xb7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb7dc));
        // 55 03E0
        gbc.setState(0x63ad, 0x245c, 0xd170, 0x13c1, 0x26e4, 0xc923, 0x1, 0x1);
        gbc.writeMem(0x63ad, { 0x55 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x245c, gbc.sp());
        EXPECT(0x63ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 55 03E1
        gbc.setState(0xc0bb, 0x2c37, 0x8c00, 0x5b7f, 0x2bfd, 0x606, 0x0, 0x1);
        gbc.writeMem(0xc0bb, { 0x55 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2c37, gbc.sp());
        EXPECT(0xc0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc0bb));
        // 55 03E2
        gbc.setState(0x1e9d, 0x7d5d, 0x8fc0, 0x4fcd, 0x9713, 0x3ef6, 0x1, 0x0);
        gbc.writeMem(0x1e9d, { 0x55 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x1e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03E3
        gbc.setState(0x1b0, 0x4c37, 0x2ec0, 0x294e, 0x38e3, 0x1ae3, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0x55 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4c37, gbc.sp());
        EXPECT(0x1b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 55 03E4
        gbc.setState(0xe207, 0xe371, 0xbca0, 0x4ee3, 0x53f4, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0xe207, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe371, gbc.sp());
        EXPECT(0xe208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe207));
        // 55 03E5
        gbc.setState(0xac93, 0x8030, 0xa190, 0xc8ea, 0xc565, 0x9c16, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0x55 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8030, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xac93));
        // 55 03E6
        gbc.setState(0x8424, 0xc31c, 0x2080, 0xaa57, 0xac57, 0x80b6, 0x1, 0x1);
        gbc.writeMem(0x8424, { 0x55 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc31c, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8424));
        // 55 03E7
        gbc.setState(0xe8b5, 0x2bfb, 0x2210, 0x225, 0x9276, 0xcdb5, 0x0, 0x1);
        gbc.writeMem(0xe8b5, { 0x55 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2bfb, gbc.sp());
        EXPECT(0xe8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe8b5));
    }
