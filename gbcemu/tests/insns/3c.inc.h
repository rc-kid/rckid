    TEST(gbcemu, opcode_3c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 3C 0000
        gbc.setState(0x2ea3, 0x323a, 0x4e30, 0xd8ce, 0x483b, 0xc98, 0x1, 0x1);
        gbc.writeMem(0x2ea3, { 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x323a, gbc.sp());
        EXPECT(0x2ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0001
        gbc.setState(0x67ec, 0xfffe, 0x3a20, 0x256b, 0x5779, 0x9a88, 0x0, 0x0);
        gbc.writeMem(0x67ec, { 0x3c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfffe, gbc.sp());
        EXPECT(0x67ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0002
        gbc.setState(0x6461, 0x92fd, 0x9c70, 0x99da, 0x7140, 0xe5ab, 0x1, 0x0);
        gbc.writeMem(0x6461, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x92fd, gbc.sp());
        EXPECT(0x6462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0003
        gbc.setState(0xbd5c, 0xae7a, 0x89b0, 0x6aff, 0xb3af, 0x9b04, 0x0, 0x1);
        gbc.writeMem(0xbd5c, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xae7a, gbc.sp());
        EXPECT(0xbd5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbd5c));
        // 3C 0004
        gbc.setState(0x31d8, 0x5f2e, 0x6280, 0x3c46, 0x20f9, 0x5f32, 0x0, 0x0);
        gbc.writeMem(0x31d8, { 0x3c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5f2e, gbc.sp());
        EXPECT(0x31d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0005
        gbc.setState(0x61a4, 0xcb73, 0xff90, 0x62a4, 0xdc18, 0xa595, 0x0, 0x1);
        gbc.writeMem(0x61a4, { 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcb73, gbc.sp());
        EXPECT(0x61a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0006
        gbc.setState(0x85ac, 0xe573, 0xd30, 0x6be7, 0x9ee6, 0xc8a9, 0x1, 0x0);
        gbc.writeMem(0x85ac, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe573, gbc.sp());
        EXPECT(0x85ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x85ac));
        // 3C 0007
        gbc.setState(0x31ca, 0xf08, 0xbce0, 0x2e69, 0x67df, 0xa0bf, 0x1, 0x1);
        gbc.writeMem(0x31ca, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0x31cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0008
        gbc.setState(0xab91, 0x6b1d, 0x9b80, 0x4a06, 0xeb1d, 0x46a1, 0x1, 0x1);
        gbc.writeMem(0xab91, { 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6b1d, gbc.sp());
        EXPECT(0xab92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xab91));
        // 3C 0009
        gbc.setState(0x24dc, 0xe34d, 0x14d0, 0x8c17, 0x82f0, 0xef6e, 0x0, 0x0);
        gbc.writeMem(0x24dc, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe34d, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 000A
        gbc.setState(0x3f51, 0x5943, 0xa320, 0xdf33, 0xf99c, 0x2f6c, 0x1, 0x1);
        gbc.writeMem(0x3f51, { 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5943, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 000B
        gbc.setState(0x61b, 0xa5f2, 0x6fd0, 0x5c4c, 0xa0ff, 0xdc75, 0x1, 0x0);
        gbc.writeMem(0x61b, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0x61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 000C
        gbc.setState(0x876e, 0xd639, 0x1310, 0x21b6, 0x7118, 0xfd16, 0x0, 0x0);
        gbc.writeMem(0x876e, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd639, gbc.sp());
        EXPECT(0x876f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x876e));
        // 3C 000D
        gbc.setState(0x782, 0xa2fd, 0x9470, 0x7c40, 0x628b, 0x40e2, 0x0, 0x1);
        gbc.writeMem(0x782, { 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0x783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 000E
        gbc.setState(0x5a56, 0x744c, 0x6fe0, 0x5442, 0xe3f1, 0xd68e, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x744c, gbc.sp());
        EXPECT(0x5a57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 000F
        gbc.setState(0xc873, 0x30f9, 0x4f00, 0xc139, 0x6d63, 0xacfd, 0x0, 0x0);
        gbc.writeMem(0xc873, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x30f9, gbc.sp());
        EXPECT(0xc874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc873));
        // 3C 0010
        gbc.setState(0xc8e7, 0x501a, 0xa880, 0x9ed4, 0x8108, 0x4d83, 0x0, 0x1);
        gbc.writeMem(0xc8e7, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x501a, gbc.sp());
        EXPECT(0xc8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc8e7));
        // 3C 0011
        gbc.setState(0x4650, 0xc6dc, 0x7510, 0xdf0a, 0x6014, 0xfa2, 0x1, 0x0);
        gbc.writeMem(0x4650, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0x4651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0012
        gbc.setState(0xda3c, 0x8ad3, 0xb550, 0x4b0, 0x275d, 0x2515, 0x0, 0x1);
        gbc.writeMem(0xda3c, { 0x3c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8ad3, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xda3c));
        // 3C 0014
        gbc.setState(0xe00d, 0xc2a5, 0x2da0, 0x5de6, 0xd95, 0xafc8, 0x0, 0x1);
        gbc.writeMem(0xe00d, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc2a5, gbc.sp());
        EXPECT(0xe00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe00d));
        // 3C 0015
        gbc.setState(0x1143, 0xf5d1, 0xa2d0, 0x9258, 0x4672, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x1143, { 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf5d1, gbc.sp());
        EXPECT(0x1144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0016
        gbc.setState(0x116c, 0x372f, 0x93d0, 0x71f5, 0xfd7e, 0x2063, 0x1, 0x1);
        gbc.writeMem(0x116c, { 0x3c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x372f, gbc.sp());
        EXPECT(0x116d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0017
        gbc.setState(0x2247, 0x27d6, 0x3c20, 0x9a5c, 0xf35, 0x64f9, 0x0, 0x1);
        gbc.writeMem(0x2247, { 0x3c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x27d6, gbc.sp());
        EXPECT(0x2248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0018
        gbc.setState(0xde44, 0x995b, 0x2ec0, 0x4d32, 0x5069, 0xe169, 0x0, 0x1);
        gbc.writeMem(0xde44, { 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x995b, gbc.sp());
        EXPECT(0xde45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xde44));
        // 3C 0019
        gbc.setState(0xae03, 0x984d, 0xf570, 0xb52c, 0x8bdc, 0x94f2, 0x0, 0x1);
        gbc.writeMem(0xae03, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x984d, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae03));
        // 3C 001A
        gbc.setState(0x4f60, 0x8d99, 0x4d10, 0x5c85, 0x59ed, 0xe251, 0x0, 0x0);
        gbc.writeMem(0x4f60, { 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 001B
        gbc.setState(0xa619, 0xa35f, 0x7b50, 0xae0f, 0x48a8, 0xb557, 0x0, 0x1);
        gbc.writeMem(0xa619, { 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0xa61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa619));
        // 3C 001C
        gbc.setState(0xe0e7, 0x58cf, 0xcc90, 0x3201, 0xe984, 0xa6e9, 0x0, 0x0);
        gbc.writeMem(0xe0e7, { 0x3c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0xe0e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe0e7));
        // 3C 001D
        gbc.setState(0x1af6, 0xa3cf, 0xf7c0, 0xf3e7, 0xaa00, 0x97e0, 0x1, 0x0);
        gbc.writeMem(0x1af6, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa3cf, gbc.sp());
        EXPECT(0x1af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 001E
        gbc.setState(0x5ad, 0x4fcc, 0x2510, 0xd7d4, 0x57a2, 0x5431, 0x0, 0x0);
        gbc.writeMem(0x5ad, { 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4fcc, gbc.sp());
        EXPECT(0x5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 001F
        gbc.setState(0xc38d, 0x9de7, 0x8eb0, 0xa14a, 0x5991, 0x793d, 0x0, 0x0);
        gbc.writeMem(0xc38d, { 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9de7, gbc.sp());
        EXPECT(0xc38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc38d));
        // 3C 0020
        gbc.setState(0x95e5, 0xe447, 0xe690, 0xc7e5, 0x7fef, 0x3477, 0x1, 0x1);
        gbc.writeMem(0x95e5, { 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x95e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x95e5));
        // 3C 0021
        gbc.setState(0xa2e4, 0x2652, 0xb210, 0xf303, 0xa5e1, 0x9fd7, 0x0, 0x0);
        gbc.writeMem(0xa2e4, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2652, gbc.sp());
        EXPECT(0xa2e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa2e4));
        // 3C 0022
        gbc.setState(0xe82b, 0x2d83, 0x7760, 0x44a0, 0xd283, 0x430b, 0x1, 0x0);
        gbc.writeMem(0xe82b, { 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2d83, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe82b));
        // 3C 0023
        gbc.setState(0x3b1a, 0x8dc6, 0x6490, 0x2c4f, 0x7c28, 0xc2c4, 0x0, 0x0);
        gbc.writeMem(0x3b1a, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8dc6, gbc.sp());
        EXPECT(0x3b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0024
        gbc.setState(0xb4f4, 0x94ea, 0x7c60, 0x9dea, 0xd405, 0x3557, 0x0, 0x1);
        gbc.writeMem(0xb4f4, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x94ea, gbc.sp());
        EXPECT(0xb4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb4f4));
        // 3C 0025
        gbc.setState(0xe62f, 0xa00c, 0x1290, 0x4744, 0xb03d, 0x8c9b, 0x0, 0x1);
        gbc.writeMem(0xe62f, { 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa00c, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe62f));
        // 3C 0026
        gbc.setState(0xec72, 0x121d, 0x1f70, 0xb6e0, 0x8239, 0x988, 0x1, 0x1);
        gbc.writeMem(0xec72, { 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x121d, gbc.sp());
        EXPECT(0xec73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xec72));
        // 3C 0027
        gbc.setState(0xc5f7, 0xa0cb, 0x7590, 0xde65, 0xf6e8, 0x8c23, 0x1, 0x1);
        gbc.writeMem(0xc5f7, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0xc5f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc5f7));
        // 3C 0028
        gbc.setState(0x83a0, 0x2134, 0x85d0, 0x540, 0x637f, 0xe641, 0x1, 0x1);
        gbc.writeMem(0x83a0, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x83a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83a0));
        // 3C 0029
        gbc.setState(0x76b5, 0x9fc5, 0xf5a0, 0xd1eb, 0x2e89, 0x31e7, 0x1, 0x0);
        gbc.writeMem(0x76b5, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9fc5, gbc.sp());
        EXPECT(0x76b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 002A
        gbc.setState(0x776e, 0x1854, 0x5c10, 0x9a97, 0x4529, 0x5717, 0x0, 0x0);
        gbc.writeMem(0x776e, { 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1854, gbc.sp());
        EXPECT(0x776f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 002B
        gbc.setState(0xea3a, 0x3246, 0x3e10, 0x300e, 0x31b2, 0xf6dd, 0x0, 0x0);
        gbc.writeMem(0xea3a, { 0x3c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3246, gbc.sp());
        EXPECT(0xea3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xea3a));
        // 3C 002C
        gbc.setState(0xefad, 0xcf0d, 0x7a80, 0xfff4, 0x8bd, 0x9361, 0x0, 0x0);
        gbc.writeMem(0xefad, { 0x3c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcf0d, gbc.sp());
        EXPECT(0xefae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xefad));
        // 3C 002D
        gbc.setState(0x5f8f, 0xc029, 0x4f90, 0x7b6e, 0xf5b5, 0x7a95, 0x1, 0x0);
        gbc.writeMem(0x5f8f, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x5f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 002E
        gbc.setState(0x32d9, 0x48c9, 0x3a20, 0xeb6c, 0x77c, 0xa5a1, 0x1, 0x1);
        gbc.writeMem(0x32d9, { 0x3c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x48c9, gbc.sp());
        EXPECT(0x32da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 002F
        gbc.setState(0x28dc, 0x31ca, 0xf460, 0xbaa, 0x4599, 0x1171, 0x0, 0x0);
        gbc.writeMem(0x28dc, { 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x31ca, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0030
        gbc.setState(0xbc70, 0xff34, 0xc040, 0x4990, 0xbb43, 0xf405, 0x1, 0x0);
        gbc.writeMem(0xbc70, { 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xff34, gbc.sp());
        EXPECT(0xbc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbc70));
        // 3C 0031
        gbc.setState(0x63ac, 0xf636, 0x9950, 0x6870, 0xe0a3, 0xb92b, 0x0, 0x1);
        gbc.writeMem(0x63ac, { 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf636, gbc.sp());
        EXPECT(0x63ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0032
        gbc.setState(0x9e50, 0x78ca, 0x3000, 0x20ec, 0xe78c, 0x940a, 0x1, 0x0);
        gbc.writeMem(0x9e50, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x78ca, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e50));
        // 3C 0033
        gbc.setState(0xb9f3, 0xd368, 0x5a0, 0x97db, 0x2e8f, 0x884, 0x1, 0x1);
        gbc.writeMem(0xb9f3, { 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd368, gbc.sp());
        EXPECT(0xb9f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb9f3));
        // 3C 0034
        gbc.setState(0x6a72, 0x158a, 0x7a0, 0xe550, 0xdbd0, 0xc18e, 0x0, 0x1);
        gbc.writeMem(0x6a72, { 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x158a, gbc.sp());
        EXPECT(0x6a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0035
        gbc.setState(0x2713, 0xb51a, 0xec70, 0x96c, 0xe0d9, 0xe618, 0x0, 0x1);
        gbc.writeMem(0x2713, { 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb51a, gbc.sp());
        EXPECT(0x2714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0036
        gbc.setState(0x61ba, 0xdf78, 0x430, 0x90ab, 0x5af7, 0x7221, 0x0, 0x1);
        gbc.writeMem(0x61ba, { 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdf78, gbc.sp());
        EXPECT(0x61bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0037
        gbc.setState(0xea5b, 0x67ee, 0x78b0, 0x9b96, 0x3d68, 0x8fae, 0x0, 0x1);
        gbc.writeMem(0xea5b, { 0x3c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x67ee, gbc.sp());
        EXPECT(0xea5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xea5b));
        // 3C 0038
        gbc.setState(0x8ec9, 0xa40f, 0x13e0, 0x9aad, 0x8364, 0xa617, 0x1, 0x1);
        gbc.writeMem(0x8ec9, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa40f, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8ec9));
        // 3C 0039
        gbc.setState(0xb70f, 0x485, 0xebc0, 0xa5a1, 0x3eac, 0xaae6, 0x1, 0x0);
        gbc.writeMem(0xb70f, { 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0xb710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb70f));
        // 3C 003A
        gbc.setState(0x2c72, 0xc8fd, 0x55e0, 0x3add, 0x9454, 0x2e38, 0x1, 0x1);
        gbc.writeMem(0x2c72, { 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc8fd, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 003B
        gbc.setState(0xe335, 0x7851, 0x3110, 0x132d, 0x20af, 0x9a13, 0x1, 0x0);
        gbc.writeMem(0xe335, { 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7851, gbc.sp());
        EXPECT(0xe336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe335));
        // 3C 003C
        gbc.setState(0xe0e1, 0xc1ef, 0x64e0, 0x9b46, 0x8be, 0x7cf, 0x1, 0x0);
        gbc.writeMem(0xe0e1, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc1ef, gbc.sp());
        EXPECT(0xe0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe0e1));
        // 3C 003D
        gbc.setState(0x67e2, 0x22c0, 0x5310, 0x97ac, 0x601e, 0x7df4, 0x0, 0x0);
        gbc.writeMem(0x67e2, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22c0, gbc.sp());
        EXPECT(0x67e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 003E
        gbc.setState(0x2b27, 0x95d7, 0xb40, 0x9fbc, 0xd504, 0xa232, 0x1, 0x1);
        gbc.writeMem(0x2b27, { 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x95d7, gbc.sp());
        EXPECT(0x2b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 003F
        gbc.setState(0x8749, 0xb417, 0x8c00, 0x6eb1, 0x441f, 0xef33, 0x0, 0x0);
        gbc.writeMem(0x8749, { 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xb417, gbc.sp());
        EXPECT(0x874a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8749));
        // 3C 0040
        gbc.setState(0x35c0, 0xede2, 0x27e0, 0xa5e2, 0xabea, 0x94ce, 0x1, 0x0);
        gbc.writeMem(0x35c0, { 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xede2, gbc.sp());
        EXPECT(0x35c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0041
        gbc.setState(0x6a23, 0x7d4, 0xdd00, 0xebe6, 0x8289, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x6a23, { 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7d4, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0042
        gbc.setState(0x7e9c, 0x849e, 0xe700, 0x9611, 0xab14, 0xeb47, 0x0, 0x1);
        gbc.writeMem(0x7e9c, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x849e, gbc.sp());
        EXPECT(0x7e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0043
        gbc.setState(0x5f52, 0x18d2, 0x42a0, 0x1c5c, 0x90b, 0x6bf9, 0x1, 0x0);
        gbc.writeMem(0x5f52, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x18d2, gbc.sp());
        EXPECT(0x5f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0044
        gbc.setState(0x68e, 0xc2d1, 0xb960, 0xa0a8, 0xbac6, 0xc6ef, 0x1, 0x1);
        gbc.writeMem(0x68e, { 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0x68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0045
        gbc.setState(0xdd65, 0xf5b3, 0x22b0, 0xef00, 0xe75, 0xf7a7, 0x0, 0x0);
        gbc.writeMem(0xdd65, { 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdd65));
        // 3C 0046
        gbc.setState(0xe9af, 0xef0, 0x6c0, 0x591a, 0x686e, 0xf751, 0x0, 0x1);
        gbc.writeMem(0xe9af, { 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xef0, gbc.sp());
        EXPECT(0xe9b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe9af));
        // 3C 0047
        gbc.setState(0xdcd5, 0x194a, 0xa000, 0x6002, 0xe96d, 0x132a, 0x1, 0x0);
        gbc.writeMem(0xdcd5, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x194a, gbc.sp());
        EXPECT(0xdcd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdcd5));
        // 3C 0048
        gbc.setState(0xc5fc, 0xcc0f, 0xa630, 0xbc08, 0x1a8a, 0xbb83, 0x1, 0x1);
        gbc.writeMem(0xc5fc, { 0x3c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xcc0f, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc5fc));
        // 3C 0049
        gbc.setState(0xbd23, 0xa681, 0x74b0, 0x36b5, 0xc146, 0xdab0, 0x0, 0x1);
        gbc.writeMem(0xbd23, { 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa681, gbc.sp());
        EXPECT(0xbd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbd23));
        // 3C 004A
        gbc.setState(0x7af6, 0xe16f, 0x9c30, 0xd73e, 0x7104, 0x2b6a, 0x0, 0x0);
        gbc.writeMem(0x7af6, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0x7af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 004B
        gbc.setState(0x6045, 0x177c, 0xde50, 0x5f1e, 0x9630, 0x7d1c, 0x1, 0x1);
        gbc.writeMem(0x6045, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x177c, gbc.sp());
        EXPECT(0x6046, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 004C
        gbc.setState(0x21dd, 0x6137, 0x2330, 0xa905, 0x2bc2, 0x3815, 0x1, 0x1);
        gbc.writeMem(0x21dd, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6137, gbc.sp());
        EXPECT(0x21de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 004D
        gbc.setState(0xd934, 0x6a42, 0xb9b0, 0x66a4, 0x98e3, 0xd8f2, 0x0, 0x0);
        gbc.writeMem(0xd934, { 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6a42, gbc.sp());
        EXPECT(0xd935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd934));
        // 3C 004E
        gbc.setState(0x243e, 0x2086, 0xc3f0, 0x88e7, 0x40f, 0xb61c, 0x1, 0x0);
        gbc.writeMem(0x243e, { 0x3c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0x243f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 004F
        gbc.setState(0x2d76, 0xf137, 0x6650, 0x87aa, 0x210f, 0x4566, 0x1, 0x1);
        gbc.writeMem(0x2d76, { 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf137, gbc.sp());
        EXPECT(0x2d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0050
        gbc.setState(0x7cc9, 0x1cc, 0x44e0, 0x8929, 0x9a3a, 0x6e5c, 0x0, 0x0);
        gbc.writeMem(0x7cc9, { 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1cc, gbc.sp());
        EXPECT(0x7cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0051
        gbc.setState(0x961c, 0xc6b6, 0x1d80, 0xae57, 0xef2b, 0xa132, 0x0, 0x1);
        gbc.writeMem(0x961c, { 0x3c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc6b6, gbc.sp());
        EXPECT(0x961d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x961c));
        // 3C 0052
        gbc.setState(0xad15, 0x6fae, 0x4a40, 0xcf71, 0xa28f, 0x49c7, 0x0, 0x1);
        gbc.writeMem(0xad15, { 0x3c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0xad16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xad15));
        // 3C 0053
        gbc.setState(0x6ebc, 0x27e8, 0x1620, 0xc360, 0x5afe, 0x85b5, 0x1, 0x0);
        gbc.writeMem(0x6ebc, { 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x27e8, gbc.sp());
        EXPECT(0x6ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0054
        gbc.setState(0x764b, 0x8855, 0x52e0, 0x9a28, 0x46af, 0x7a27, 0x1, 0x1);
        gbc.writeMem(0x764b, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8855, gbc.sp());
        EXPECT(0x764c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0055
        gbc.setState(0xe147, 0xef56, 0xe740, 0xc8b7, 0xc10f, 0xfb51, 0x0, 0x1);
        gbc.writeMem(0xe147, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xef56, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe147));
        // 3C 0056
        gbc.setState(0xd2b, 0xcb4e, 0x8350, 0xd323, 0x7d0f, 0xeb26, 0x1, 0x0);
        gbc.writeMem(0xd2b, { 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0xd2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0057
        gbc.setState(0x7a23, 0xc38, 0xce00, 0x1647, 0xadb, 0xc798, 0x0, 0x1);
        gbc.writeMem(0x7a23, { 0x3c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc38, gbc.sp());
        EXPECT(0x7a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0058
        gbc.setState(0xddd1, 0xfa39, 0xab10, 0x750f, 0xa987, 0x6049, 0x0, 0x0);
        gbc.writeMem(0xddd1, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfa39, gbc.sp());
        EXPECT(0xddd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xddd1));
        // 3C 0059
        gbc.setState(0x5c82, 0x334d, 0xcdc0, 0x663b, 0x95b9, 0xe58, 0x1, 0x0);
        gbc.writeMem(0x5c82, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x334d, gbc.sp());
        EXPECT(0x5c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 005A
        gbc.setState(0x308b, 0x48f5, 0xa8e0, 0x6f, 0x233b, 0x32f1, 0x1, 0x0);
        gbc.writeMem(0x308b, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x48f5, gbc.sp());
        EXPECT(0x308c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 005B
        gbc.setState(0x3f10, 0xa35d, 0x430, 0xdb1d, 0x1fe3, 0x407a, 0x1, 0x0);
        gbc.writeMem(0x3f10, { 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa35d, gbc.sp());
        EXPECT(0x3f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 005C
        gbc.setState(0xc296, 0x59a2, 0xe050, 0x3407, 0xde27, 0x24d, 0x1, 0x1);
        gbc.writeMem(0xc296, { 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0xc297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc296));
        // 3C 005D
        gbc.setState(0x9b58, 0xbb5f, 0xf1e0, 0x75b6, 0xf7c8, 0xae35, 0x1, 0x0);
        gbc.writeMem(0x9b58, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbb5f, gbc.sp());
        EXPECT(0x9b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9b58));
        // 3C 005E
        gbc.setState(0x90ec, 0x9575, 0x92c0, 0x30ea, 0x2a78, 0x880a, 0x0, 0x1);
        gbc.writeMem(0x90ec, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9575, gbc.sp());
        EXPECT(0x90ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x90ec));
        // 3C 005F
        gbc.setState(0xc368, 0xe6db, 0x670, 0x2490, 0x829e, 0xd585, 0x1, 0x0);
        gbc.writeMem(0xc368, { 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe6db, gbc.sp());
        EXPECT(0xc369, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc368));
        // 3C 0060
        gbc.setState(0xe4d, 0xbd39, 0xb210, 0xfbb6, 0x5fdd, 0x2ca2, 0x1, 0x0);
        gbc.writeMem(0xe4d, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbd39, gbc.sp());
        EXPECT(0xe4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0062
        gbc.setState(0xe176, 0xf654, 0xc1e0, 0xae0c, 0x5dae, 0x7780, 0x0, 0x0);
        gbc.writeMem(0xe176, { 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0xe177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe176));
        // 3C 0063
        gbc.setState(0x3609, 0xa4bf, 0x1e00, 0x70c1, 0x9fb5, 0xb19b, 0x1, 0x0);
        gbc.writeMem(0x3609, { 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa4bf, gbc.sp());
        EXPECT(0x360a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0064
        gbc.setState(0x8163, 0x2b5a, 0xa3c0, 0x7168, 0xec95, 0x8a7c, 0x0, 0x1);
        gbc.writeMem(0x8163, { 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2b5a, gbc.sp());
        EXPECT(0x8164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8163));
        // 3C 0065
        gbc.setState(0x1db6, 0x23f8, 0xaca0, 0x5127, 0x55a1, 0xbd4a, 0x0, 0x0);
        gbc.writeMem(0x1db6, { 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x23f8, gbc.sp());
        EXPECT(0x1db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0066
        gbc.setState(0xcf7d, 0xd19c, 0xa190, 0x2a8c, 0xe39e, 0xbb31, 0x0, 0x1);
        gbc.writeMem(0xcf7d, { 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd19c, gbc.sp());
        EXPECT(0xcf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcf7d));
        // 3C 0067
        gbc.setState(0x9e01, 0x3585, 0xb470, 0x5004, 0x62ab, 0xbb65, 0x0, 0x1);
        gbc.writeMem(0x9e01, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3585, gbc.sp());
        EXPECT(0x9e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e01));
        // 3C 0068
        gbc.setState(0x3733, 0x17c3, 0x1830, 0x7d22, 0xb9da, 0x7826, 0x0, 0x0);
        gbc.writeMem(0x3733, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x17c3, gbc.sp());
        EXPECT(0x3734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0069
        gbc.setState(0x7e0f, 0xc4a, 0x9590, 0x94d1, 0x7a68, 0x8c86, 0x1, 0x1);
        gbc.writeMem(0x7e0f, { 0x3c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc4a, gbc.sp());
        EXPECT(0x7e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 006A
        gbc.setState(0x3e92, 0xfa9c, 0xef0, 0xc0b3, 0x1bfa, 0x9215, 0x1, 0x0);
        gbc.writeMem(0x3e92, { 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0x3e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 006B
        gbc.setState(0x89fc, 0xf09, 0x7190, 0x663f, 0x3895, 0xdb6, 0x0, 0x1);
        gbc.writeMem(0x89fc, { 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf09, gbc.sp());
        EXPECT(0x89fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x89fc));
        // 3C 006C
        gbc.setState(0x8dcb, 0xa89d, 0xce40, 0x5080, 0xeccb, 0xe2d, 0x1, 0x0);
        gbc.writeMem(0x8dcb, { 0x3c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x8dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8dcb));
        // 3C 006D
        gbc.setState(0x7cf3, 0x520c, 0xe2d0, 0x9c99, 0x6422, 0x530, 0x0, 0x0);
        gbc.writeMem(0x7cf3, { 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x520c, gbc.sp());
        EXPECT(0x7cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 006E
        gbc.setState(0x1d7d, 0xb43c, 0x9b30, 0x2559, 0xc090, 0xa74c, 0x1, 0x0);
        gbc.writeMem(0x1d7d, { 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0x1d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 006F
        gbc.setState(0xe74b, 0x2b92, 0xc630, 0x69e8, 0x5fc, 0xbee3, 0x1, 0x1);
        gbc.writeMem(0xe74b, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2b92, gbc.sp());
        EXPECT(0xe74c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe74b));
        // 3C 0070
        gbc.setState(0xe9db, 0xd932, 0x2360, 0xd876, 0x9c13, 0x86de, 0x0, 0x0);
        gbc.writeMem(0xe9db, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd932, gbc.sp());
        EXPECT(0xe9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe9db));
        // 3C 0071
        gbc.setState(0x203e, 0x68c1, 0x8560, 0x7b52, 0xaf48, 0x11f8, 0x0, 0x1);
        gbc.writeMem(0x203e, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x68c1, gbc.sp());
        EXPECT(0x203f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0072
        gbc.setState(0x8c3c, 0xd76d, 0xb4f0, 0x5852, 0x2c2e, 0x3266, 0x1, 0x1);
        gbc.writeMem(0x8c3c, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd76d, gbc.sp());
        EXPECT(0x8c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8c3c));
        // 3C 0073
        gbc.setState(0x43df, 0x2bc6, 0x8380, 0x4008, 0x9642, 0x828b, 0x0, 0x1);
        gbc.writeMem(0x43df, { 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2bc6, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0074
        gbc.setState(0xa9ad, 0xe788, 0xc980, 0xcd7, 0xa6ce, 0x4fb8, 0x1, 0x1);
        gbc.writeMem(0xa9ad, { 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe788, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa9ad));
        // 3C 0075
        gbc.setState(0x2504, 0xd633, 0x4e50, 0x6ab2, 0x531f, 0xcf03, 0x0, 0x1);
        gbc.writeMem(0x2504, { 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd633, gbc.sp());
        EXPECT(0x2505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0076
        gbc.setState(0x4c37, 0x7c7c, 0xf90, 0xda5b, 0xd491, 0x9be2, 0x0, 0x1);
        gbc.writeMem(0x4c37, { 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x4c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0077
        gbc.setState(0xe5e8, 0x5ac3, 0x3d10, 0xed67, 0x71a1, 0xe710, 0x1, 0x0);
        gbc.writeMem(0xe5e8, { 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5ac3, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe5e8));
        // 3C 0078
        gbc.setState(0x1bc7, 0x544b, 0x40a0, 0xa240, 0xb525, 0x5dd2, 0x1, 0x1);
        gbc.writeMem(0x1bc7, { 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x544b, gbc.sp());
        EXPECT(0x1bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0079
        gbc.setState(0xbe34, 0x6b5e, 0x22a0, 0xbeb0, 0x9885, 0xc021, 0x1, 0x1);
        gbc.writeMem(0xbe34, { 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6b5e, gbc.sp());
        EXPECT(0xbe35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbe34));
        // 3C 007B
        gbc.setState(0x6dd9, 0x5f5f, 0xfd90, 0x9a5b, 0xe5d1, 0xc9ba, 0x0, 0x1);
        gbc.writeMem(0x6dd9, { 0x3c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5f5f, gbc.sp());
        EXPECT(0x6dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 007C
        gbc.setState(0x9da9, 0xd350, 0x6540, 0x328a, 0x826a, 0xf98b, 0x0, 0x0);
        gbc.writeMem(0x9da9, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd350, gbc.sp());
        EXPECT(0x9daa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9da9));
        // 3C 007D
        gbc.setState(0xbcc4, 0x7ee7, 0xef50, 0xe16, 0x73c4, 0xcb88, 0x1, 0x1);
        gbc.writeMem(0xbcc4, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7ee7, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbcc4));
        // 3C 007E
        gbc.setState(0xb1b3, 0x68f5, 0x49e0, 0x53e2, 0x406e, 0xdd39, 0x1, 0x0);
        gbc.writeMem(0xb1b3, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x68f5, gbc.sp());
        EXPECT(0xb1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb1b3));
        // 3C 007F
        gbc.setState(0xccd2, 0x160f, 0x83f0, 0x934f, 0x577a, 0x2edf, 0x1, 0x0);
        gbc.writeMem(0xccd2, { 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x160f, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xccd2));
        // 3C 0080
        gbc.setState(0x27ae, 0x4051, 0xc860, 0xeb56, 0x1835, 0x4e96, 0x1, 0x0);
        gbc.writeMem(0x27ae, { 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4051, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0081
        gbc.setState(0x8a69, 0xecbc, 0x9220, 0xb6db, 0x5f8b, 0xa1c6, 0x0, 0x1);
        gbc.writeMem(0x8a69, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x8a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8a69));
        // 3C 0082
        gbc.setState(0x2b1, 0xf22f, 0x41c0, 0xa1a0, 0xcd06, 0xf2a2, 0x0, 0x0);
        gbc.writeMem(0x2b1, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf22f, gbc.sp());
        EXPECT(0x2b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0083
        gbc.setState(0xae6e, 0x8369, 0x7ce0, 0x8cf1, 0x7b2b, 0x2115, 0x0, 0x0);
        gbc.writeMem(0xae6e, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8369, gbc.sp());
        EXPECT(0xae6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae6e));
        // 3C 0084
        gbc.setState(0x68f4, 0x558, 0xef50, 0x8ddb, 0x4d1d, 0xf5a0, 0x0, 0x1);
        gbc.writeMem(0x68f4, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x558, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0085
        gbc.setState(0x7a73, 0x5375, 0xf440, 0xb2f1, 0xea02, 0x65a3, 0x1, 0x0);
        gbc.writeMem(0x7a73, { 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5375, gbc.sp());
        EXPECT(0x7a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0087
        gbc.setState(0xdf99, 0x3e83, 0xbc20, 0xfdb0, 0x98e5, 0x531f, 0x0, 0x1);
        gbc.writeMem(0xdf99, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3e83, gbc.sp());
        EXPECT(0xdf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf99));
        // 3C 0088
        gbc.setState(0xdf48, 0xd1fa, 0xa3f0, 0xbb63, 0x42c6, 0x857e, 0x0, 0x0);
        gbc.writeMem(0xdf48, { 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd1fa, gbc.sp());
        EXPECT(0xdf49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf48));
        // 3C 0089
        gbc.setState(0xdf33, 0xcda2, 0x2380, 0x7237, 0xa66, 0x818b, 0x0, 0x0);
        gbc.writeMem(0xdf33, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcda2, gbc.sp());
        EXPECT(0xdf34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf33));
        // 3C 008A
        gbc.setState(0xcbdb, 0xd652, 0x42d0, 0x1043, 0x52d9, 0xf46a, 0x1, 0x0);
        gbc.writeMem(0xcbdb, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd652, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcbdb));
        // 3C 008B
        gbc.setState(0x51fc, 0x532c, 0x4b50, 0x3141, 0x35c1, 0x6e0f, 0x1, 0x1);
        gbc.writeMem(0x51fc, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x532c, gbc.sp());
        EXPECT(0x51fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 008C
        gbc.setState(0x7bdd, 0x96a5, 0x24c0, 0x6975, 0xfdd5, 0xf3d, 0x1, 0x1);
        gbc.writeMem(0x7bdd, { 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x96a5, gbc.sp());
        EXPECT(0x7bde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 008D
        gbc.setState(0xd6f7, 0xbb53, 0xd8f0, 0x36af, 0xf9bc, 0xb7b5, 0x0, 0x0);
        gbc.writeMem(0xd6f7, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbb53, gbc.sp());
        EXPECT(0xd6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd6f7));
        // 3C 008E
        gbc.setState(0x5bc2, 0xa395, 0xe2f0, 0xfad, 0x8b3e, 0x2a38, 0x1, 0x1);
        gbc.writeMem(0x5bc2, { 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa395, gbc.sp());
        EXPECT(0x5bc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 008F
        gbc.setState(0x507b, 0x28b8, 0x3950, 0x12c5, 0x5701, 0x30ed, 0x1, 0x1);
        gbc.writeMem(0x507b, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x28b8, gbc.sp());
        EXPECT(0x507c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0090
        gbc.setState(0x80b4, 0xa94a, 0xab00, 0x90bf, 0x2116, 0xcef7, 0x1, 0x1);
        gbc.writeMem(0x80b4, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0x80b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x80b4));
        // 3C 0091
        gbc.setState(0x7f71, 0xc7e8, 0x9b00, 0xd5fe, 0x2686, 0x155b, 0x0, 0x0);
        gbc.writeMem(0x7f71, { 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x7f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0092
        gbc.setState(0x75f8, 0x8264, 0x2dc0, 0xe84e, 0x1a20, 0x5542, 0x1, 0x0);
        gbc.writeMem(0x75f8, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8264, gbc.sp());
        EXPECT(0x75f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0093
        gbc.setState(0xd531, 0x33da, 0x47d0, 0x7548, 0x3cd7, 0xf778, 0x0, 0x1);
        gbc.writeMem(0xd531, { 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x33da, gbc.sp());
        EXPECT(0xd532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd531));
        // 3C 0094
        gbc.setState(0x5763, 0xc497, 0xca0, 0xf248, 0xa70a, 0xece1, 0x0, 0x1);
        gbc.writeMem(0x5763, { 0x3c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x5764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0095
        gbc.setState(0xb152, 0xa11c, 0xee50, 0x242d, 0x8988, 0x2c9c, 0x1, 0x0);
        gbc.writeMem(0xb152, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa11c, gbc.sp());
        EXPECT(0xb153, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb152));
        // 3C 0096
        gbc.setState(0xe566, 0x7d03, 0xf430, 0x757a, 0x41d0, 0x570, 0x0, 0x0);
        gbc.writeMem(0xe566, { 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7d03, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe566));
        // 3C 0097
        gbc.setState(0x948c, 0x8804, 0xcd00, 0xf294, 0x1c12, 0x564e, 0x0, 0x0);
        gbc.writeMem(0x948c, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8804, gbc.sp());
        EXPECT(0x948d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x948c));
        // 3C 0098
        gbc.setState(0xa265, 0xf188, 0xcb60, 0x9cb3, 0x17fd, 0x3c49, 0x0, 0x1);
        gbc.writeMem(0xa265, { 0x3c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0xa266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa265));
        // 3C 0099
        gbc.setState(0xdab9, 0x2138, 0x51d0, 0xf136, 0x3bfb, 0xddd8, 0x0, 0x0);
        gbc.writeMem(0xdab9, { 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2138, gbc.sp());
        EXPECT(0xdaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdab9));
        // 3C 009A
        gbc.setState(0xd9a3, 0x6c64, 0xc280, 0xcec1, 0x3d6e, 0xefd9, 0x1, 0x0);
        gbc.writeMem(0xd9a3, { 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6c64, gbc.sp());
        EXPECT(0xd9a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd9a3));
        // 3C 009B
        gbc.setState(0x1be6, 0x9469, 0x2b70, 0x6eb0, 0x8a7b, 0x76f5, 0x0, 0x0);
        gbc.writeMem(0x1be6, { 0x3c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x1be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 009C
        gbc.setState(0x752e, 0xf842, 0xbc30, 0xe8c1, 0xdc16, 0x3536, 0x1, 0x0);
        gbc.writeMem(0x752e, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf842, gbc.sp());
        EXPECT(0x752f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 009D
        gbc.setState(0xcab6, 0x4f8d, 0xc380, 0xb9fe, 0xf14d, 0x7fb8, 0x1, 0x1);
        gbc.writeMem(0xcab6, { 0x3c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0xcab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcab6));
        // 3C 009E
        gbc.setState(0x1746, 0xe88b, 0x7d80, 0xa6fc, 0xdd00, 0x42bc, 0x1, 0x1);
        gbc.writeMem(0x1746, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe88b, gbc.sp());
        EXPECT(0x1747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 009F
        gbc.setState(0xad83, 0xe16e, 0xff20, 0xc165, 0x45f1, 0x79b4, 0x1, 0x1);
        gbc.writeMem(0xad83, { 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xad83));
        // 3C 00A0
        gbc.setState(0xdd90, 0xe08a, 0x6c70, 0xe329, 0x60cf, 0x129e, 0x1, 0x1);
        gbc.writeMem(0xdd90, { 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0xdd91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdd90));
        // 3C 00A1
        gbc.setState(0x18f8, 0x614a, 0xa2e0, 0x15bc, 0xea07, 0xfa0b, 0x1, 0x0);
        gbc.writeMem(0x18f8, { 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x614a, gbc.sp());
        EXPECT(0x18f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00A2
        gbc.setState(0xc21c, 0x67fa, 0x5270, 0x4ad1, 0x6bb3, 0x521e, 0x1, 0x0);
        gbc.writeMem(0xc21c, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x67fa, gbc.sp());
        EXPECT(0xc21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc21c));
        // 3C 00A3
        gbc.setState(0x30d1, 0x45fa, 0x80f0, 0x722d, 0xd0ef, 0xe9df, 0x1, 0x1);
        gbc.writeMem(0x30d1, { 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0x30d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00A4
        gbc.setState(0x81ae, 0xa2b6, 0x20c0, 0x3c25, 0xa498, 0x46db, 0x1, 0x1);
        gbc.writeMem(0x81ae, { 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa2b6, gbc.sp());
        EXPECT(0x81af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x81ae));
        // 3C 00A5
        gbc.setState(0x5449, 0x7d54, 0xd590, 0x8bda, 0x6e02, 0x89f1, 0x1, 0x0);
        gbc.writeMem(0x5449, { 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7d54, gbc.sp());
        EXPECT(0x544a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00A6
        gbc.setState(0xca8f, 0x3703, 0xbd50, 0xd794, 0xd6c5, 0xa496, 0x0, 0x1);
        gbc.writeMem(0xca8f, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3703, gbc.sp());
        EXPECT(0xca90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xca8f));
        // 3C 00A7
        gbc.setState(0x8c4d, 0x97e8, 0x9e20, 0xb17d, 0x25f4, 0x59e5, 0x0, 0x0);
        gbc.writeMem(0x8c4d, { 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x97e8, gbc.sp());
        EXPECT(0x8c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8c4d));
        // 3C 00A8
        gbc.setState(0xca09, 0x9ec6, 0x5ab0, 0xd2a8, 0x709f, 0xa394, 0x0, 0x1);
        gbc.writeMem(0xca09, { 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9ec6, gbc.sp());
        EXPECT(0xca0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xca09));
        // 3C 00A9
        gbc.setState(0x6d20, 0xc2c3, 0xab40, 0x810e, 0x5ef6, 0x5bd3, 0x1, 0x1);
        gbc.writeMem(0x6d20, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc2c3, gbc.sp());
        EXPECT(0x6d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00AA
        gbc.setState(0x5444, 0xbc4c, 0x86d0, 0x3b7, 0x2551, 0xb846, 0x1, 0x0);
        gbc.writeMem(0x5444, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc4c, gbc.sp());
        EXPECT(0x5445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00AB
        gbc.setState(0x61, 0x7c81, 0x5380, 0xbfae, 0x213c, 0x47be, 0x1, 0x1);
        gbc.writeMem(0x61, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7c81, gbc.sp());
        EXPECT(0x62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00AC
        gbc.setState(0x7e96, 0x70c4, 0x6d00, 0x19d0, 0x8799, 0x85c, 0x0, 0x0);
        gbc.writeMem(0x7e96, { 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x7e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00AD
        gbc.setState(0xc9ff, 0xf349, 0xdfc0, 0x1c77, 0x156b, 0x61c5, 0x1, 0x0);
        gbc.writeMem(0xc9ff, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf349, gbc.sp());
        EXPECT(0xca00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc9ff));
        // 3C 00AE
        gbc.setState(0xefd9, 0xba79, 0xafe0, 0x167, 0x5fc1, 0x9e2d, 0x0, 0x1);
        gbc.writeMem(0xefd9, { 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xba79, gbc.sp());
        EXPECT(0xefda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xefd9));
        // 3C 00AF
        gbc.setState(0x51b4, 0x6ed5, 0x5f80, 0xb1f5, 0x5b5e, 0x3d7b, 0x0, 0x1);
        gbc.writeMem(0x51b4, { 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6ed5, gbc.sp());
        EXPECT(0x51b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00B0
        gbc.setState(0x9689, 0x52a5, 0x36b0, 0xfb82, 0x9d4b, 0xd0dc, 0x0, 0x0);
        gbc.writeMem(0x9689, { 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x52a5, gbc.sp());
        EXPECT(0x968a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9689));
        // 3C 00B1
        gbc.setState(0x944a, 0xa640, 0xcf40, 0x88f7, 0x22f, 0x9022, 0x1, 0x0);
        gbc.writeMem(0x944a, { 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x944a));
        // 3C 00B2
        gbc.setState(0x63bc, 0x3dcc, 0x5d30, 0xd744, 0xfd70, 0xb3c6, 0x0, 0x0);
        gbc.writeMem(0x63bc, { 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3dcc, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00B3
        gbc.setState(0xe8d0, 0x1663, 0xae50, 0x2554, 0xc667, 0xc01c, 0x1, 0x0);
        gbc.writeMem(0xe8d0, { 0x3c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1663, gbc.sp());
        EXPECT(0xe8d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe8d0));
        // 3C 00B4
        gbc.setState(0xdfb2, 0x5784, 0xf5c0, 0x797d, 0xda6c, 0xb5e2, 0x1, 0x1);
        gbc.writeMem(0xdfb2, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0xdfb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdfb2));
        // 3C 00B5
        gbc.setState(0x4264, 0x8aac, 0x1580, 0x4338, 0xa28e, 0xb63b, 0x1, 0x0);
        gbc.writeMem(0x4264, { 0x3c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00B6
        gbc.setState(0x65c3, 0x5242, 0x9dd0, 0x8e79, 0x928c, 0x8bcf, 0x1, 0x0);
        gbc.writeMem(0x65c3, { 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5242, gbc.sp());
        EXPECT(0x65c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00B7
        gbc.setState(0x77e0, 0xc9f1, 0x6f50, 0x10b3, 0x1cb7, 0x4f8f, 0x1, 0x1);
        gbc.writeMem(0x77e0, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0x77e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00B8
        gbc.setState(0xc96a, 0xb6f, 0xe180, 0x4fcb, 0xdde8, 0xc096, 0x1, 0x0);
        gbc.writeMem(0xc96a, { 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb6f, gbc.sp());
        EXPECT(0xc96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc96a));
        // 3C 00B9
        gbc.setState(0xc3d9, 0xae67, 0xd40, 0x4317, 0xb7ff, 0x8b34, 0x0, 0x1);
        gbc.writeMem(0xc3d9, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xae67, gbc.sp());
        EXPECT(0xc3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc3d9));
        // 3C 00BA
        gbc.setState(0x17c3, 0x61c9, 0x1160, 0xddea, 0x58c2, 0x5302, 0x0, 0x0);
        gbc.writeMem(0x17c3, { 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x61c9, gbc.sp());
        EXPECT(0x17c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00BB
        gbc.setState(0xc4c8, 0x1957, 0x2130, 0xd751, 0xda50, 0x3d76, 0x0, 0x1);
        gbc.writeMem(0xc4c8, { 0x3c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1957, gbc.sp());
        EXPECT(0xc4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc4c8));
        // 3C 00BC
        gbc.setState(0x32b3, 0x3934, 0x6da0, 0xb42a, 0xa8c9, 0x64e7, 0x1, 0x0);
        gbc.writeMem(0x32b3, { 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3934, gbc.sp());
        EXPECT(0x32b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00BD
        gbc.setState(0xa022, 0xad0b, 0x5110, 0x1d8f, 0xcdbc, 0x424b, 0x1, 0x1);
        gbc.writeMem(0xa022, { 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xad0b, gbc.sp());
        EXPECT(0xa023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa022));
        // 3C 00BE
        gbc.setState(0xbef6, 0x37bb, 0x4110, 0x945f, 0xb3fc, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xbef6, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x37bb, gbc.sp());
        EXPECT(0xbef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbef6));
        // 3C 00BF
        gbc.setState(0x217d, 0x2c23, 0xf2a0, 0x68a1, 0xa28b, 0x465d, 0x0, 0x1);
        gbc.writeMem(0x217d, { 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c23, gbc.sp());
        EXPECT(0x217e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00C0
        gbc.setState(0x9e98, 0x918b, 0x4490, 0xc480, 0x104a, 0x24e, 0x1, 0x1);
        gbc.writeMem(0x9e98, { 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x918b, gbc.sp());
        EXPECT(0x9e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e98));
        // 3C 00C1
        gbc.setState(0x2325, 0x6d14, 0xc90, 0x8e89, 0xd170, 0x7d0c, 0x1, 0x0);
        gbc.writeMem(0x2325, { 0x3c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x2326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00C3
        gbc.setState(0x968b, 0x9640, 0xc290, 0x4d85, 0x9356, 0x1c4e, 0x1, 0x0);
        gbc.writeMem(0x968b, { 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9640, gbc.sp());
        EXPECT(0x968c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x968b));
        // 3C 00C4
        gbc.setState(0x9b6f, 0x360c, 0x5120, 0xdffc, 0x4f87, 0x69d3, 0x0, 0x1);
        gbc.writeMem(0x9b6f, { 0x3c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0x9b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9b6f));
        // 3C 00C6
        gbc.setState(0xd1f3, 0xedf, 0xde50, 0x1213, 0x24dd, 0xe9b4, 0x0, 0x1);
        gbc.writeMem(0xd1f3, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xedf, gbc.sp());
        EXPECT(0xd1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd1f3));
        // 3C 00C7
        gbc.setState(0x17eb, 0x34ce, 0x6b10, 0xd7e6, 0xf744, 0x787b, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0x17ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00C9
        gbc.setState(0xaf17, 0x2b91, 0x6690, 0x6209, 0x4e2, 0x3455, 0x1, 0x1);
        gbc.writeMem(0xaf17, { 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2b91, gbc.sp());
        EXPECT(0xaf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaf17));
        // 3C 00CA
        gbc.setState(0xebc9, 0xfeab, 0x3200, 0x5639, 0x4c4f, 0x73a5, 0x1, 0x1);
        gbc.writeMem(0xebc9, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0xebca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xebc9));
        // 3C 00CB
        gbc.setState(0x6e07, 0xbb1c, 0xf470, 0xee22, 0xbfcd, 0x120d, 0x0, 0x0);
        gbc.writeMem(0x6e07, { 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x6e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00CC
        gbc.setState(0x4600, 0xef35, 0x59d0, 0x383c, 0x658c, 0x496f, 0x1, 0x0);
        gbc.writeMem(0x4600, { 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0x4601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00CD
        gbc.setState(0x939c, 0x44ed, 0x6900, 0x9f21, 0x139b, 0xc4cf, 0x1, 0x1);
        gbc.writeMem(0x939c, { 0x3c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x44ed, gbc.sp());
        EXPECT(0x939d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x939c));
        // 3C 00CE
        gbc.setState(0x6898, 0x595d, 0x7ad0, 0xb669, 0x26fb, 0xb92e, 0x1, 0x1);
        gbc.writeMem(0x6898, { 0x3c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x595d, gbc.sp());
        EXPECT(0x6899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00CF
        gbc.setState(0xdfeb, 0xedac, 0xb200, 0x3b36, 0x3d77, 0xed07, 0x1, 0x1);
        gbc.writeMem(0xdfeb, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0xdfec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdfeb));
        // 3C 00D0
        gbc.setState(0xb6a6, 0xf8db, 0x9ba0, 0x953d, 0x6e2a, 0xe9c7, 0x0, 0x0);
        gbc.writeMem(0xb6a6, { 0x3c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf8db, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb6a6));
        // 3C 00D2
        gbc.setState(0x6b30, 0xa6f, 0x73b0, 0x1b0f, 0xb95f, 0x135c, 0x0, 0x1);
        gbc.writeMem(0x6b30, { 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa6f, gbc.sp());
        EXPECT(0x6b31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00D3
        gbc.setState(0xaa8b, 0x1b9b, 0xd110, 0x3b5f, 0x5c8e, 0x2ed6, 0x0, 0x1);
        gbc.writeMem(0xaa8b, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1b9b, gbc.sp());
        EXPECT(0xaa8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaa8b));
        // 3C 00D4
        gbc.setState(0xc6f1, 0x9bef, 0xe720, 0x3b02, 0x2ac1, 0xf0cd, 0x1, 0x0);
        gbc.writeMem(0xc6f1, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0xc6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc6f1));
        // 3C 00D6
        gbc.setState(0xcfe8, 0xa5fe, 0xa060, 0x76da, 0x800b, 0x8574, 0x1, 0x1);
        gbc.writeMem(0xcfe8, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa5fe, gbc.sp());
        EXPECT(0xcfe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcfe8));
        // 3C 00D7
        gbc.setState(0x3035, 0x107b, 0xdf30, 0xf7dd, 0x91bd, 0xf256, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x107b, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00D8
        gbc.setState(0xdc24, 0xcc96, 0xc1f0, 0xdd7e, 0x7ff5, 0x744a, 0x0, 0x0);
        gbc.writeMem(0xdc24, { 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcc96, gbc.sp());
        EXPECT(0xdc25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc24));
        // 3C 00D9
        gbc.setState(0xa5c6, 0xe502, 0xd630, 0x3cd, 0xd875, 0x7b6d, 0x0, 0x0);
        gbc.writeMem(0xa5c6, { 0x3c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe502, gbc.sp());
        EXPECT(0xa5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa5c6));
        // 3C 00DA
        gbc.setState(0xa46e, 0x80cc, 0x8420, 0x18ac, 0xf88d, 0xb579, 0x0, 0x0);
        gbc.writeMem(0xa46e, { 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x80cc, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa46e));
        // 3C 00DB
        gbc.setState(0x3486, 0x9101, 0x8c00, 0xea7a, 0x6048, 0x281a, 0x0, 0x1);
        gbc.writeMem(0x3486, { 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9101, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00DC
        gbc.setState(0x755, 0x5ef7, 0xf030, 0xa333, 0xddd5, 0x498a, 0x0, 0x0);
        gbc.writeMem(0x755, { 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5ef7, gbc.sp());
        EXPECT(0x756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00DD
        gbc.setState(0xdbd0, 0xeafa, 0xd1a0, 0x4dc, 0x891b, 0x22b2, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xeafa, gbc.sp());
        EXPECT(0xdbd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdbd0));
        // 3C 00DE
        gbc.setState(0xbd12, 0xaf81, 0x3650, 0x3a39, 0xfd10, 0x80f2, 0x0, 0x0);
        gbc.writeMem(0xbd12, { 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaf81, gbc.sp());
        EXPECT(0xbd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbd12));
        // 3C 00DF
        gbc.setState(0xcb71, 0x4687, 0xf110, 0x670a, 0x516f, 0xd7ce, 0x0, 0x1);
        gbc.writeMem(0xcb71, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4687, gbc.sp());
        EXPECT(0xcb72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcb71));
        // 3C 00E0
        gbc.setState(0x1992, 0x2232, 0x5da0, 0x5c0a, 0x1717, 0xb464, 0x0, 0x1);
        gbc.writeMem(0x1992, { 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2232, gbc.sp());
        EXPECT(0x1993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00E1
        gbc.setState(0xd1b5, 0x9cf4, 0x7d10, 0xe016, 0xa7da, 0x4013, 0x0, 0x1);
        gbc.writeMem(0xd1b5, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9cf4, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd1b5));
        // 3C 00E2
        gbc.setState(0x6dae, 0x104b, 0x6400, 0x7ed7, 0xf0bd, 0x1d23, 0x1, 0x1);
        gbc.writeMem(0x6dae, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x104b, gbc.sp());
        EXPECT(0x6daf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00E3
        gbc.setState(0xc44c, 0xd3a7, 0x630, 0x6256, 0xf7fc, 0xb9cc, 0x1, 0x0);
        gbc.writeMem(0xc44c, { 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd3a7, gbc.sp());
        EXPECT(0xc44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc44c));
        // 3C 00E4
        gbc.setState(0x6fa9, 0x2ea, 0x9cb0, 0x7257, 0xc91c, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0x6fa9, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0x6faa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00E5
        gbc.setState(0xe6a2, 0x5c25, 0x520, 0x2d0, 0x499d, 0x1184, 0x0, 0x1);
        gbc.writeMem(0xe6a2, { 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5c25, gbc.sp());
        EXPECT(0xe6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe6a2));
        // 3C 00E6
        gbc.setState(0x3aa7, 0xdf43, 0xd6a0, 0x5e1, 0xa350, 0x309b, 0x1, 0x0);
        gbc.writeMem(0x3aa7, { 0x3c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdf43, gbc.sp());
        EXPECT(0x3aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00E7
        gbc.setState(0x5f39, 0x7090, 0x7140, 0x79f7, 0x4f7c, 0xffa0, 0x0, 0x0);
        gbc.writeMem(0x5f39, { 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7090, gbc.sp());
        EXPECT(0x5f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00E8
        gbc.setState(0x772e, 0x75b9, 0xfb30, 0x94b, 0xd80a, 0x5ca6, 0x1, 0x0);
        gbc.writeMem(0x772e, { 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x75b9, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00EB
        gbc.setState(0x2b58, 0xa9ea, 0x49c0, 0xb243, 0x7260, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0x2b58, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa9ea, gbc.sp());
        EXPECT(0x2b59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00EC
        gbc.setState(0x6283, 0x2265, 0xd20, 0x86fe, 0xfa60, 0x62e2, 0x0, 0x1);
        gbc.writeMem(0x6283, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2265, gbc.sp());
        EXPECT(0x6284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00ED
        gbc.setState(0x2134, 0x3a75, 0xb800, 0x2187, 0x7502, 0x5343, 0x1, 0x1);
        gbc.writeMem(0x2134, { 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3a75, gbc.sp());
        EXPECT(0x2135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00EE
        gbc.setState(0x1514, 0x6b35, 0xdce0, 0x6b6d, 0x5cc9, 0xb3f1, 0x0, 0x1);
        gbc.writeMem(0x1514, { 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6b35, gbc.sp());
        EXPECT(0x1515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00EF
        gbc.setState(0xb4cf, 0xdbff, 0x5b10, 0xe3e6, 0x2b4e, 0xae11, 0x0, 0x0);
        gbc.writeMem(0xb4cf, { 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdbff, gbc.sp());
        EXPECT(0xb4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb4cf));
        // 3C 00F0
        gbc.setState(0xb2e7, 0xe60e, 0x2df0, 0xf97a, 0xe79d, 0x6935, 0x0, 0x0);
        gbc.writeMem(0xb2e7, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe60e, gbc.sp());
        EXPECT(0xb2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb2e7));
        // 3C 00F1
        gbc.setState(0x587f, 0x782e, 0xe4e0, 0x2b11, 0x9cf2, 0xd5b1, 0x1, 0x0);
        gbc.writeMem(0x587f, { 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x782e, gbc.sp());
        EXPECT(0x5880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00F2
        gbc.setState(0x12f, 0xba7f, 0x8ee0, 0x1e7f, 0xf10, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0x12f, { 0x3c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xba7f, gbc.sp());
        EXPECT(0x130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00F3
        gbc.setState(0x3ee3, 0x1519, 0x2590, 0xcd8e, 0xd76c, 0x6db, 0x0, 0x0);
        gbc.writeMem(0x3ee3, { 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1519, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00F4
        gbc.setState(0xc50c, 0xbd43, 0x45e0, 0x7e16, 0x3dbe, 0x56fa, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbd43, gbc.sp());
        EXPECT(0xc50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc50c));
        // 3C 00F5
        gbc.setState(0xddd7, 0xcefd, 0xa0c0, 0x46d0, 0xec71, 0xd7a8, 0x0, 0x0);
        gbc.writeMem(0xddd7, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcefd, gbc.sp());
        EXPECT(0xddd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xddd7));
        // 3C 00F6
        gbc.setState(0xc2eb, 0x3a0d, 0x56c0, 0x534f, 0x18dc, 0x5b9a, 0x1, 0x1);
        gbc.writeMem(0xc2eb, { 0x3c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3a0d, gbc.sp());
        EXPECT(0xc2ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc2eb));
        // 3C 00F7
        gbc.setState(0x3bd5, 0x1879, 0xb6d0, 0x6a5e, 0xbe5a, 0x3e36, 0x1, 0x1);
        gbc.writeMem(0x3bd5, { 0x3c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1879, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00F8
        gbc.setState(0x4b8a, 0xc7f8, 0x5c30, 0x7158, 0x7193, 0x43ef, 0x1, 0x0);
        gbc.writeMem(0x4b8a, { 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0x4b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00F9
        gbc.setState(0x4c7e, 0x9be9, 0xee00, 0x9f32, 0x8f0b, 0x4b23, 0x1, 0x0);
        gbc.writeMem(0x4c7e, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9be9, gbc.sp());
        EXPECT(0x4c7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00FA
        gbc.setState(0x2245, 0xb93e, 0x4ff0, 0xec20, 0x8920, 0xf4f8, 0x1, 0x0);
        gbc.writeMem(0x2245, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb93e, gbc.sp());
        EXPECT(0x2246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00FB
        gbc.setState(0x206d, 0xed5f, 0x92e0, 0xe42e, 0x62f3, 0xa0e2, 0x1, 0x0);
        gbc.writeMem(0x206d, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0x206e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00FC
        gbc.setState(0x5e43, 0x411c, 0x32d0, 0x46b4, 0xd7b2, 0x4df8, 0x1, 0x0);
        gbc.writeMem(0x5e43, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x411c, gbc.sp());
        EXPECT(0x5e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 00FD
        gbc.setState(0xecea, 0x7b3e, 0x7640, 0x65b1, 0x3fdd, 0x2431, 0x1, 0x1);
        gbc.writeMem(0xecea, { 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7b3e, gbc.sp());
        EXPECT(0xeceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xecea));
        // 3C 00FE
        gbc.setState(0x2842, 0x3803, 0xe700, 0x51fa, 0xe1ad, 0x6a39, 0x0, 0x1);
        gbc.writeMem(0x2842, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3803, gbc.sp());
        EXPECT(0x2843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 00FF
        gbc.setState(0x947e, 0xf83c, 0xf130, 0x1984, 0x8fac, 0x44d6, 0x1, 0x0);
        gbc.writeMem(0x947e, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf83c, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x947e));
        // 3C 0100
        gbc.setState(0xaf6a, 0xf766, 0x8bf0, 0x387e, 0x5388, 0x81e1, 0x0, 0x0);
        gbc.writeMem(0xaf6a, { 0x3c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf766, gbc.sp());
        EXPECT(0xaf6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaf6a));
        // 3C 0101
        gbc.setState(0xcb3, 0xf0e4, 0xd200, 0xb286, 0xb0ca, 0x39fe, 0x1, 0x1);
        gbc.writeMem(0xcb3, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf0e4, gbc.sp());
        EXPECT(0xcb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0102
        gbc.setState(0x9d77, 0x8a43, 0x77e0, 0xa177, 0x186f, 0x1758, 0x0, 0x0);
        gbc.writeMem(0x9d77, { 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8a43, gbc.sp());
        EXPECT(0x9d78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9d77));
        // 3C 0103
        gbc.setState(0x5134, 0xd9e5, 0xf7d0, 0x260c, 0x9f25, 0x2ffc, 0x1, 0x1);
        gbc.writeMem(0x5134, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd9e5, gbc.sp());
        EXPECT(0x5135, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0104
        gbc.setState(0x4d23, 0xef31, 0xd8c0, 0x7d6e, 0xeaca, 0x4d7b, 0x1, 0x1);
        gbc.writeMem(0x4d23, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xef31, gbc.sp());
        EXPECT(0x4d24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0106
        gbc.setState(0xdad6, 0x9ce4, 0xad00, 0xf58b, 0xfc5d, 0xf877, 0x1, 0x0);
        gbc.writeMem(0xdad6, { 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9ce4, gbc.sp());
        EXPECT(0xdad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdad6));
        // 3C 0107
        gbc.setState(0x4583, 0xd905, 0xa8b0, 0x51d8, 0x96ae, 0xd54d, 0x0, 0x1);
        gbc.writeMem(0x4583, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd905, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0108
        gbc.setState(0x9e84, 0xd8dd, 0x2610, 0x6f4a, 0x9a46, 0xbafd, 0x1, 0x1);
        gbc.writeMem(0x9e84, { 0x3c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd8dd, gbc.sp());
        EXPECT(0x9e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e84));
        // 3C 0109
        gbc.setState(0xa8f9, 0x7efc, 0x1ed0, 0x323f, 0xee95, 0xd21c, 0x1, 0x1);
        gbc.writeMem(0xa8f9, { 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7efc, gbc.sp());
        EXPECT(0xa8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa8f9));
        // 3C 010A
        gbc.setState(0xbb18, 0x1e09, 0x2370, 0x5c29, 0xb4d5, 0xc43e, 0x0, 0x1);
        gbc.writeMem(0xbb18, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1e09, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb18));
        // 3C 010B
        gbc.setState(0x97a8, 0x7f27, 0x2820, 0x9fd1, 0x51b, 0xb4ad, 0x1, 0x0);
        gbc.writeMem(0x97a8, { 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7f27, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x97a8));
        // 3C 010C
        gbc.setState(0xead3, 0xcca, 0x27e0, 0xf1bd, 0x8df9, 0x547a, 0x1, 0x0);
        gbc.writeMem(0xead3, { 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0xead4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xead3));
        // 3C 010D
        gbc.setState(0x10d4, 0x2974, 0xcb60, 0xb8a9, 0x5890, 0x7e42, 0x0, 0x0);
        gbc.writeMem(0x10d4, { 0x3c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2974, gbc.sp());
        EXPECT(0x10d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 010E
        gbc.setState(0x74df, 0xcecb, 0x6330, 0x6050, 0xa02b, 0x6178, 0x1, 0x1);
        gbc.writeMem(0x74df, { 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xcecb, gbc.sp());
        EXPECT(0x74e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 010F
        gbc.setState(0x76dc, 0xf1ec, 0xac0, 0x9209, 0xe938, 0x6dc1, 0x1, 0x1);
        gbc.writeMem(0x76dc, { 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x76dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0110
        gbc.setState(0x3ba1, 0x8f86, 0xa250, 0x624, 0xe1b0, 0x8ed3, 0x1, 0x1);
        gbc.writeMem(0x3ba1, { 0x3c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x3ba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0111
        gbc.setState(0x5df6, 0xc20b, 0xc170, 0x3747, 0xb257, 0x2ff9, 0x0, 0x0);
        gbc.writeMem(0x5df6, { 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc20b, gbc.sp());
        EXPECT(0x5df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0112
        gbc.setState(0xccc5, 0x181, 0x2030, 0xbc95, 0xfadf, 0x40b9, 0x1, 0x1);
        gbc.writeMem(0xccc5, { 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x181, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xccc5));
        // 3C 0113
        gbc.setState(0x3fc0, 0xde1f, 0xace0, 0x2af5, 0x37a8, 0x1ac9, 0x1, 0x1);
        gbc.writeMem(0x3fc0, { 0x3c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xde1f, gbc.sp());
        EXPECT(0x3fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0114
        gbc.setState(0xd21c, 0x533b, 0x6de0, 0xe513, 0x6cde, 0xdb81, 0x1, 0x0);
        gbc.writeMem(0xd21c, { 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x533b, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd21c));
        // 3C 0115
        gbc.setState(0x3ec9, 0xe3d7, 0xa010, 0xa5e4, 0x3ab2, 0x15c6, 0x0, 0x0);
        gbc.writeMem(0x3ec9, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe3d7, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0117
        gbc.setState(0x87cf, 0x73f4, 0x3420, 0x280b, 0x125f, 0x3f29, 0x1, 0x0);
        gbc.writeMem(0x87cf, { 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x73f4, gbc.sp());
        EXPECT(0x87d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x87cf));
        // 3C 0118
        gbc.setState(0x49b5, 0x4a3, 0xb2b0, 0x74c9, 0x732f, 0x6dda, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4a3, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0119
        gbc.setState(0x7e0d, 0xf188, 0xf780, 0x3cad, 0xda5, 0x8c18, 0x1, 0x0);
        gbc.writeMem(0x7e0d, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf188, gbc.sp());
        EXPECT(0x7e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 011A
        gbc.setState(0x6c48, 0x6636, 0xcd10, 0x99ae, 0x9891, 0xe671, 0x1, 0x1);
        gbc.writeMem(0x6c48, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6636, gbc.sp());
        EXPECT(0x6c49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 011B
        gbc.setState(0xbb89, 0x5dc1, 0x38e0, 0x6680, 0x5ff8, 0x8290, 0x1, 0x0);
        gbc.writeMem(0xbb89, { 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0xbb8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb89));
        // 3C 011C
        gbc.setState(0xce30, 0x4696, 0x53c0, 0xdc35, 0x324, 0xc846, 0x1, 0x0);
        gbc.writeMem(0xce30, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4696, gbc.sp());
        EXPECT(0xce31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xce30));
        // 3C 011D
        gbc.setState(0x7a67, 0x18d7, 0x1570, 0xcf4a, 0x6fa5, 0x3a0c, 0x1, 0x1);
        gbc.writeMem(0x7a67, { 0x3c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x18d7, gbc.sp());
        EXPECT(0x7a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 011E
        gbc.setState(0x5584, 0x5a0b, 0xd4a0, 0xdfab, 0xeb9d, 0xbe06, 0x1, 0x1);
        gbc.writeMem(0x5584, { 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5a0b, gbc.sp());
        EXPECT(0x5585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 011F
        gbc.setState(0x9192, 0xe3a9, 0xf300, 0x36bf, 0x6be, 0xb817, 0x0, 0x1);
        gbc.writeMem(0x9192, { 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe3a9, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9192));
        // 3C 0120
        gbc.setState(0x306f, 0x3220, 0x5d40, 0xcdf2, 0x9da4, 0x76fc, 0x0, 0x1);
        gbc.writeMem(0x306f, { 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0x3070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0121
        gbc.setState(0xcb3b, 0xe68e, 0x91c0, 0x91b9, 0xfd94, 0xc305, 0x0, 0x0);
        gbc.writeMem(0xcb3b, { 0x3c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe68e, gbc.sp());
        EXPECT(0xcb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcb3b));
        // 3C 0122
        gbc.setState(0x8530, 0xd6cd, 0xd1a0, 0xeb20, 0x6691, 0x4c22, 0x1, 0x0);
        gbc.writeMem(0x8530, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd6cd, gbc.sp());
        EXPECT(0x8531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8530));
        // 3C 0123
        gbc.setState(0x92b0, 0x905f, 0x1800, 0x9966, 0xc7d0, 0x44ee, 0x0, 0x0);
        gbc.writeMem(0x92b0, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x905f, gbc.sp());
        EXPECT(0x92b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x92b0));
        // 3C 0124
        gbc.setState(0x1005, 0xb171, 0xd340, 0xba76, 0xe4e2, 0x1640, 0x1, 0x1);
        gbc.writeMem(0x1005, { 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0x1006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0125
        gbc.setState(0x1bf8, 0xf0b8, 0xef20, 0x606d, 0x511d, 0x2610, 0x1, 0x1);
        gbc.writeMem(0x1bf8, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf0b8, gbc.sp());
        EXPECT(0x1bf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0126
        gbc.setState(0x6e2d, 0xc326, 0xa5e0, 0x1d30, 0xd682, 0x8c73, 0x1, 0x0);
        gbc.writeMem(0x6e2d, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc326, gbc.sp());
        EXPECT(0x6e2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0127
        gbc.setState(0xe9c1, 0x77c7, 0x7c60, 0x7188, 0xf47b, 0x1052, 0x0, 0x0);
        gbc.writeMem(0xe9c1, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x77c7, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe9c1));
        // 3C 0128
        gbc.setState(0x4df8, 0xfc0a, 0x4050, 0xde1, 0x2485, 0x6524, 0x0, 0x0);
        gbc.writeMem(0x4df8, { 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfc0a, gbc.sp());
        EXPECT(0x4df9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0129
        gbc.setState(0xca18, 0x9931, 0x7f90, 0x8fde, 0xd8bc, 0xed1f, 0x1, 0x0);
        gbc.writeMem(0xca18, { 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9931, gbc.sp());
        EXPECT(0xca19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xca18));
        // 3C 012A
        gbc.setState(0x81e6, 0x7ceb, 0xe010, 0x969a, 0x8e2a, 0x6b1b, 0x1, 0x0);
        gbc.writeMem(0x81e6, { 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7ceb, gbc.sp());
        EXPECT(0x81e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x81e6));
        // 3C 012B
        gbc.setState(0xa16d, 0x2b95, 0x27d0, 0x2266, 0xff58, 0x660b, 0x0, 0x1);
        gbc.writeMem(0xa16d, { 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b95, gbc.sp());
        EXPECT(0xa16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa16d));
        // 3C 012C
        gbc.setState(0xcdfa, 0xd035, 0x7e50, 0x5c75, 0x4c43, 0x8e6c, 0x1, 0x0);
        gbc.writeMem(0xcdfa, { 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd035, gbc.sp());
        EXPECT(0xcdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcdfa));
        // 3C 012D
        gbc.setState(0xca71, 0xdbd0, 0x240, 0x821a, 0x3182, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0xca71, { 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xdbd0, gbc.sp());
        EXPECT(0xca72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xca71));
        // 3C 012E
        gbc.setState(0xd5be, 0x5145, 0xb290, 0x242f, 0x6d09, 0xacb, 0x0, 0x1);
        gbc.writeMem(0xd5be, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5145, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd5be));
        // 3C 012F
        gbc.setState(0x991c, 0xaa08, 0x7560, 0x7e65, 0x2d79, 0xacfb, 0x0, 0x0);
        gbc.writeMem(0x991c, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xaa08, gbc.sp());
        EXPECT(0x991d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x991c));
        // 3C 0130
        gbc.setState(0x6e73, 0xfd8, 0xf800, 0x8823, 0x7a99, 0x358, 0x1, 0x0);
        gbc.writeMem(0x6e73, { 0x3c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfd8, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0131
        gbc.setState(0xd937, 0x4ec7, 0x40c0, 0xed57, 0x1e1e, 0x900b, 0x0, 0x0);
        gbc.writeMem(0xd937, { 0x3c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4ec7, gbc.sp());
        EXPECT(0xd938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd937));
        // 3C 0132
        gbc.setState(0x37b4, 0x50b, 0x4970, 0xcebc, 0xe9b2, 0xed60, 0x1, 0x0);
        gbc.writeMem(0x37b4, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x50b, gbc.sp());
        EXPECT(0x37b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0133
        gbc.setState(0x965e, 0x417f, 0x1140, 0x972c, 0xc851, 0x41d2, 0x1, 0x0);
        gbc.writeMem(0x965e, { 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x417f, gbc.sp());
        EXPECT(0x965f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x965e));
        // 3C 0134
        gbc.setState(0x482a, 0x3b71, 0xe590, 0x8583, 0x315c, 0xf58d, 0x0, 0x1);
        gbc.writeMem(0x482a, { 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0x482b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0135
        gbc.setState(0xb50, 0xe7b2, 0x55e0, 0x2351, 0xbcf4, 0x8e82, 0x0, 0x1);
        gbc.writeMem(0xb50, { 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe7b2, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0136
        gbc.setState(0xb6b2, 0x92c6, 0x75b0, 0x2c78, 0xb4d0, 0x520e, 0x1, 0x0);
        gbc.writeMem(0xb6b2, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x92c6, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb6b2));
        // 3C 0137
        gbc.setState(0x8208, 0xf57a, 0xda0, 0xb0cb, 0x112a, 0xaac, 0x1, 0x1);
        gbc.writeMem(0x8208, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf57a, gbc.sp());
        EXPECT(0x8209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8208));
        // 3C 0138
        gbc.setState(0x6c17, 0x7830, 0x8100, 0x7304, 0xab4a, 0x57ec, 0x0, 0x1);
        gbc.writeMem(0x6c17, { 0x3c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7830, gbc.sp());
        EXPECT(0x6c18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 013A
        gbc.setState(0x9799, 0x6209, 0x28d0, 0x708f, 0xd979, 0x6fdc, 0x1, 0x0);
        gbc.writeMem(0x9799, { 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6209, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9799));
        // 3C 013B
        gbc.setState(0x3cff, 0x96fa, 0x8d90, 0xbd16, 0xea58, 0xa70f, 0x1, 0x1);
        gbc.writeMem(0x3cff, { 0x3c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x96fa, gbc.sp());
        EXPECT(0x3d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 013C
        gbc.setState(0x47c4, 0xdae2, 0x3610, 0x2f95, 0x7afc, 0xf9d3, 0x0, 0x0);
        gbc.writeMem(0x47c4, { 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdae2, gbc.sp());
        EXPECT(0x47c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 013D
        gbc.setState(0x10ad, 0x279d, 0xbe20, 0x5efc, 0xf55d, 0x7a79, 0x0, 0x0);
        gbc.writeMem(0x10ad, { 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x279d, gbc.sp());
        EXPECT(0x10ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 013E
        gbc.setState(0x2631, 0x7717, 0x7ed0, 0xfb9d, 0xa55d, 0x6b27, 0x1, 0x1);
        gbc.writeMem(0x2631, { 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7717, gbc.sp());
        EXPECT(0x2632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 013F
        gbc.setState(0x9208, 0xb5b1, 0xdd20, 0x83e7, 0xf105, 0xf5dc, 0x1, 0x1);
        gbc.writeMem(0x9208, { 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb5b1, gbc.sp());
        EXPECT(0x9209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9208));
        // 3C 0140
        gbc.setState(0x4c9b, 0xf0a0, 0xeec0, 0xa83a, 0x24d9, 0xdd9c, 0x1, 0x0);
        gbc.writeMem(0x4c9b, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf0a0, gbc.sp());
        EXPECT(0x4c9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0141
        gbc.setState(0xd47a, 0x3cbd, 0x2cf0, 0xd56c, 0x63b, 0xf3f8, 0x1, 0x1);
        gbc.writeMem(0xd47a, { 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x3cbd, gbc.sp());
        EXPECT(0xd47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd47a));
        // 3C 0142
        gbc.setState(0x2fcf, 0x4fdf, 0xf510, 0xb171, 0x2e2b, 0x9824, 0x1, 0x0);
        gbc.writeMem(0x2fcf, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4fdf, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0143
        gbc.setState(0x8d08, 0xfc3f, 0x9430, 0xbb33, 0x8246, 0x311d, 0x1, 0x0);
        gbc.writeMem(0x8d08, { 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8d08));
        // 3C 0144
        gbc.setState(0x275e, 0x6639, 0xc490, 0xf1ae, 0x5d85, 0xe30, 0x0, 0x0);
        gbc.writeMem(0x275e, { 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6639, gbc.sp());
        EXPECT(0x275f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0145
        gbc.setState(0x83fb, 0xc072, 0x1a10, 0xfb67, 0x70bc, 0x6f26, 0x0, 0x1);
        gbc.writeMem(0x83fb, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc072, gbc.sp());
        EXPECT(0x83fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83fb));
        // 3C 0147
        gbc.setState(0x3ff2, 0x1080, 0x7930, 0x7017, 0x1d24, 0xa343, 0x0, 0x0);
        gbc.writeMem(0x3ff2, { 0x3c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1080, gbc.sp());
        EXPECT(0x3ff3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0148
        gbc.setState(0x8e30, 0x2f27, 0x9f20, 0x47ed, 0x4561, 0x47fd, 0x1, 0x1);
        gbc.writeMem(0x8e30, { 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2f27, gbc.sp());
        EXPECT(0x8e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8e30));
        // 3C 0149
        gbc.setState(0x9743, 0x96cd, 0x3010, 0x14d4, 0xe260, 0x4b18, 0x0, 0x0);
        gbc.writeMem(0x9743, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9743));
        // 3C 014A
        gbc.setState(0x7d8c, 0x617c, 0xe690, 0x20c9, 0x3e5a, 0x5132, 0x0, 0x1);
        gbc.writeMem(0x7d8c, { 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x617c, gbc.sp());
        EXPECT(0x7d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 014B
        gbc.setState(0x2d69, 0xc605, 0x88c0, 0x1618, 0x50fd, 0xc620, 0x0, 0x1);
        gbc.writeMem(0x2d69, { 0x3c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc605, gbc.sp());
        EXPECT(0x2d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 014C
        gbc.setState(0xe798, 0xe7d2, 0x9610, 0x4347, 0x61f7, 0x27de, 0x1, 0x0);
        gbc.writeMem(0xe798, { 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe798));
        // 3C 014D
        gbc.setState(0xe52f, 0x9fb1, 0xcfd0, 0x796b, 0x74e9, 0x75fb, 0x1, 0x0);
        gbc.writeMem(0xe52f, { 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9fb1, gbc.sp());
        EXPECT(0xe530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe52f));
        // 3C 014F
        gbc.setState(0x9c92, 0xfdb8, 0x7690, 0x585, 0x1304, 0xf918, 0x1, 0x1);
        gbc.writeMem(0x9c92, { 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xfdb8, gbc.sp());
        EXPECT(0x9c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9c92));
        // 3C 0150
        gbc.setState(0x8eef, 0x682c, 0x3b0, 0x7c49, 0x2d3d, 0xbe81, 0x0, 0x1);
        gbc.writeMem(0x8eef, { 0x3c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x682c, gbc.sp());
        EXPECT(0x8ef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8eef));
        // 3C 0151
        gbc.setState(0x9267, 0xfe43, 0xfa20, 0x299e, 0x1f29, 0x9435, 0x0, 0x0);
        gbc.writeMem(0x9267, { 0x3c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0x9268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9267));
        // 3C 0152
        gbc.setState(0x441c, 0xe4fc, 0xd040, 0x4dff, 0xd01d, 0xefaf, 0x0, 0x0);
        gbc.writeMem(0x441c, { 0x3c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0x441d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0153
        gbc.setState(0x481a, 0x73e3, 0x7d00, 0x3942, 0x2590, 0x4d59, 0x1, 0x0);
        gbc.writeMem(0x481a, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x73e3, gbc.sp());
        EXPECT(0x481b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0154
        gbc.setState(0x5051, 0xa51c, 0xb210, 0x27a2, 0xa295, 0x349c, 0x1, 0x0);
        gbc.writeMem(0x5051, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa51c, gbc.sp());
        EXPECT(0x5052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0155
        gbc.setState(0x599e, 0xbb7, 0xa3b0, 0x6457, 0xa69c, 0xe067, 0x0, 0x1);
        gbc.writeMem(0x599e, { 0x3c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbb7, gbc.sp());
        EXPECT(0x599f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0156
        gbc.setState(0xd856, 0x345e, 0xab20, 0x4df7, 0xdfcd, 0x4800, 0x0, 0x0);
        gbc.writeMem(0xd856, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x345e, gbc.sp());
        EXPECT(0xd857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd856));
        // 3C 0158
        gbc.setState(0xbb66, 0xe6b5, 0x7c00, 0xa55f, 0x87c1, 0xad10, 0x0, 0x0);
        gbc.writeMem(0xbb66, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe6b5, gbc.sp());
        EXPECT(0xbb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb66));
        // 3C 0159
        gbc.setState(0xcdf4, 0x19ed, 0x6a40, 0x568c, 0xa93a, 0x1043, 0x1, 0x1);
        gbc.writeMem(0xcdf4, { 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x19ed, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcdf4));
        // 3C 015A
        gbc.setState(0x9411, 0xa191, 0x68d0, 0xfdac, 0x6946, 0xa8c4, 0x0, 0x0);
        gbc.writeMem(0x9411, { 0x3c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa191, gbc.sp());
        EXPECT(0x9412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9411));
        // 3C 015B
        gbc.setState(0x706f, 0x38e1, 0x9e40, 0xe0e0, 0x95be, 0xfa80, 0x0, 0x0);
        gbc.writeMem(0x706f, { 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x38e1, gbc.sp());
        EXPECT(0x7070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 015C
        gbc.setState(0x1bd6, 0x1866, 0x7210, 0x5c80, 0x7e5a, 0x7d30, 0x0, 0x1);
        gbc.writeMem(0x1bd6, { 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1866, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 015D
        gbc.setState(0xd864, 0xf58e, 0x28f0, 0x4143, 0x7837, 0x6152, 0x1, 0x0);
        gbc.writeMem(0xd864, { 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf58e, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd864));
        // 3C 015E
        gbc.setState(0x2a2f, 0xa117, 0xf630, 0x441a, 0xb15d, 0xe2ed, 0x0, 0x0);
        gbc.writeMem(0x2a2f, { 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa117, gbc.sp());
        EXPECT(0x2a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 015F
        gbc.setState(0xd2e3, 0xd2d6, 0xf310, 0x6210, 0xb678, 0xd7d5, 0x0, 0x1);
        gbc.writeMem(0xd2e3, { 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd2d6, gbc.sp());
        EXPECT(0xd2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd2e3));
        // 3C 0160
        gbc.setState(0xa7b4, 0xde53, 0xd7b0, 0xe0bd, 0xc7ed, 0xa6c3, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xde53, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa7b4));
        // 3C 0161
        gbc.setState(0x8b1, 0x7c4a, 0x5870, 0x3e0f, 0x4b26, 0x4bc5, 0x1, 0x0);
        gbc.writeMem(0x8b1, { 0x3c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0162
        gbc.setState(0xa4e7, 0x5e97, 0x78b0, 0xb4a, 0xf97f, 0xbfac, 0x0, 0x1);
        gbc.writeMem(0xa4e7, { 0x3c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0xa4e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa4e7));
        // 3C 0163
        gbc.setState(0x3cf4, 0xd491, 0x1a0, 0x2a0a, 0x1409, 0x1db, 0x0, 0x0);
        gbc.writeMem(0x3cf4, { 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd491, gbc.sp());
        EXPECT(0x3cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0164
        gbc.setState(0xd891, 0xd070, 0x6200, 0x26b, 0x29b5, 0xf56e, 0x1, 0x1);
        gbc.writeMem(0xd891, { 0x3c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd070, gbc.sp());
        EXPECT(0xd892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd891));
        // 3C 0165
        gbc.setState(0xc476, 0x1a01, 0x6a60, 0xa7b7, 0x868f, 0xe742, 0x1, 0x0);
        gbc.writeMem(0xc476, { 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x1a01, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc476));
        // 3C 0166
        gbc.setState(0x5a30, 0xbbb1, 0x7d60, 0x3708, 0xaa82, 0x4d22, 0x1, 0x0);
        gbc.writeMem(0x5a30, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbbb1, gbc.sp());
        EXPECT(0x5a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0167
        gbc.setState(0x6552, 0x8df6, 0xff70, 0xd153, 0x80df, 0xff46, 0x1, 0x0);
        gbc.writeMem(0x6552, { 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8df6, gbc.sp());
        EXPECT(0x6553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0168
        gbc.setState(0x6627, 0xde0c, 0x690, 0x57f1, 0xf8bf, 0xe3be, 0x1, 0x0);
        gbc.writeMem(0x6627, { 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xde0c, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 016A
        gbc.setState(0x3923, 0x5b38, 0xef60, 0x4286, 0xfb39, 0x736b, 0x0, 0x1);
        gbc.writeMem(0x3923, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x3924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 016B
        gbc.setState(0x4c1d, 0xbd1e, 0x5350, 0x20b6, 0xac5d, 0xa2a6, 0x1, 0x1);
        gbc.writeMem(0x4c1d, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd1e, gbc.sp());
        EXPECT(0x4c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 016C
        gbc.setState(0xac9c, 0xca42, 0xde60, 0x4eeb, 0x1b0, 0x37a, 0x0, 0x0);
        gbc.writeMem(0xac9c, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xca42, gbc.sp());
        EXPECT(0xac9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xac9c));
        // 3C 016D
        gbc.setState(0xeef4, 0xb2f4, 0x3860, 0x617b, 0x84bb, 0xe76f, 0x0, 0x1);
        gbc.writeMem(0xeef4, { 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb2f4, gbc.sp());
        EXPECT(0xeef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeef4));
        // 3C 016E
        gbc.setState(0x5988, 0x96e2, 0x3190, 0xa5d0, 0xd441, 0x278c, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x96e2, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 016F
        gbc.setState(0xce12, 0x1df9, 0x5d90, 0xa020, 0xcf7, 0x50c, 0x0, 0x1);
        gbc.writeMem(0xce12, { 0x3c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1df9, gbc.sp());
        EXPECT(0xce13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xce12));
        // 3C 0170
        gbc.setState(0xe955, 0x86f9, 0xdd40, 0x6a79, 0x1108, 0x495b, 0x0, 0x1);
        gbc.writeMem(0xe955, { 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x86f9, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe955));
        // 3C 0171
        gbc.setState(0xac74, 0x37f2, 0xcf60, 0x4de4, 0x639c, 0x7603, 0x0, 0x1);
        gbc.writeMem(0xac74, { 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x37f2, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xac74));
        // 3C 0172
        gbc.setState(0xa42d, 0x3667, 0x1b60, 0xbc78, 0xb047, 0x13c7, 0x1, 0x0);
        gbc.writeMem(0xa42d, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3667, gbc.sp());
        EXPECT(0xa42e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa42d));
        // 3C 0174
        gbc.setState(0x6194, 0x3a12, 0xd960, 0x107, 0xe7f8, 0xbe81, 0x1, 0x0);
        gbc.writeMem(0x6194, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3a12, gbc.sp());
        EXPECT(0x6195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0175
        gbc.setState(0x11e5, 0xe500, 0x35a0, 0xe099, 0xad09, 0x5edc, 0x1, 0x1);
        gbc.writeMem(0x11e5, { 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe500, gbc.sp());
        EXPECT(0x11e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0176
        gbc.setState(0x21ae, 0x168e, 0x1cf0, 0x49c1, 0xea7d, 0xb9ae, 0x1, 0x1);
        gbc.writeMem(0x21ae, { 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x168e, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0177
        gbc.setState(0x9809, 0x1e9a, 0x1360, 0x4d59, 0xcb1a, 0x5146, 0x1, 0x0);
        gbc.writeMem(0x9809, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9809));
        // 3C 0178
        gbc.setState(0x5d1a, 0xb66c, 0xab80, 0x9ea6, 0xd69f, 0x5be1, 0x1, 0x0);
        gbc.writeMem(0x5d1a, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb66c, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 017B
        gbc.setState(0x9b14, 0x58cf, 0xbf90, 0x226c, 0xab16, 0xb9df, 0x0, 0x0);
        gbc.writeMem(0x9b14, { 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x58cf, gbc.sp());
        EXPECT(0x9b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9b14));
        // 3C 017C
        gbc.setState(0x7dfb, 0xcf0e, 0x6fe0, 0x7acc, 0xf292, 0x9208, 0x0, 0x0);
        gbc.writeMem(0x7dfb, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcf0e, gbc.sp());
        EXPECT(0x7dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 017D
        gbc.setState(0x27ab, 0xb467, 0x9620, 0xe306, 0x8cad, 0xbc34, 0x1, 0x1);
        gbc.writeMem(0x27ab, { 0x3c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 017E
        gbc.setState(0x31be, 0x9685, 0x7b70, 0xcd97, 0x5f66, 0x41c7, 0x0, 0x0);
        gbc.writeMem(0x31be, { 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0x31bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 017F
        gbc.setState(0xa315, 0x93d4, 0xa040, 0xcf1e, 0xee71, 0xf6f2, 0x1, 0x1);
        gbc.writeMem(0xa315, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x93d4, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa315));
        // 3C 0180
        gbc.setState(0x4fc7, 0xc6d7, 0x9210, 0x21ed, 0x67f6, 0xa917, 0x0, 0x0);
        gbc.writeMem(0x4fc7, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc6d7, gbc.sp());
        EXPECT(0x4fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0181
        gbc.setState(0xa92d, 0x70a4, 0xbe40, 0x3c4c, 0xefc7, 0xb9c8, 0x0, 0x0);
        gbc.writeMem(0xa92d, { 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x70a4, gbc.sp());
        EXPECT(0xa92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa92d));
        // 3C 0182
        gbc.setState(0x7514, 0xa89e, 0xf110, 0x8c46, 0x1ba3, 0x657d, 0x1, 0x0);
        gbc.writeMem(0x7514, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa89e, gbc.sp());
        EXPECT(0x7515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0183
        gbc.setState(0x73f8, 0x2ee4, 0x7dc0, 0x5401, 0xace6, 0x2fad, 0x1, 0x1);
        gbc.writeMem(0x73f8, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2ee4, gbc.sp());
        EXPECT(0x73f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0184
        gbc.setState(0xc6e1, 0xfe76, 0x8c90, 0x8c19, 0x6988, 0x7756, 0x1, 0x0);
        gbc.writeMem(0xc6e1, { 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0xc6e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc6e1));
        // 3C 0185
        gbc.setState(0xdc03, 0x5e75, 0x4380, 0x875a, 0xe305, 0x2d6b, 0x0, 0x0);
        gbc.writeMem(0xdc03, { 0x3c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5e75, gbc.sp());
        EXPECT(0xdc04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc03));
        // 3C 0186
        gbc.setState(0x952d, 0x93c7, 0x2710, 0x576e, 0x352, 0xbc7a, 0x1, 0x0);
        gbc.writeMem(0x952d, { 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x952d));
        // 3C 0187
        gbc.setState(0x7719, 0x70b3, 0xfe50, 0xf483, 0xe1d3, 0x6d54, 0x1, 0x0);
        gbc.writeMem(0x7719, { 0x3c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x771a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0188
        gbc.setState(0x2d77, 0xad60, 0x1da0, 0xc1aa, 0x8faa, 0x73d8, 0x1, 0x1);
        gbc.writeMem(0x2d77, { 0x3c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xad60, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0189
        gbc.setState(0xcbf8, 0x6ae4, 0xc9b0, 0x72ca, 0x53cc, 0x5dd1, 0x0, 0x1);
        gbc.writeMem(0xcbf8, { 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6ae4, gbc.sp());
        EXPECT(0xcbf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcbf8));
        // 3C 018A
        gbc.setState(0xe1bc, 0x2be6, 0xf3c0, 0xaaf5, 0x27f1, 0xc8c4, 0x1, 0x1);
        gbc.writeMem(0xe1bc, { 0x3c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2be6, gbc.sp());
        EXPECT(0xe1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe1bc));
        // 3C 018B
        gbc.setState(0x223c, 0xcf57, 0x9a40, 0x2201, 0x63c7, 0x72a8, 0x1, 0x1);
        gbc.writeMem(0x223c, { 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0x223d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 018C
        gbc.setState(0x2a99, 0xc59c, 0x5c0, 0xec69, 0xc913, 0xf701, 0x1, 0x0);
        gbc.writeMem(0x2a99, { 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0x2a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 018D
        gbc.setState(0xbef4, 0x1b7b, 0xaaf0, 0x4911, 0x2947, 0x82f2, 0x1, 0x0);
        gbc.writeMem(0xbef4, { 0x3c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1b7b, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbef4));
        // 3C 018E
        gbc.setState(0x143a, 0x5833, 0xde70, 0x7566, 0xd8d9, 0xdd38, 0x0, 0x0);
        gbc.writeMem(0x143a, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5833, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 018F
        gbc.setState(0x907b, 0x9666, 0x4da0, 0x318, 0x984e, 0x35b3, 0x0, 0x1);
        gbc.writeMem(0x907b, { 0x3c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9666, gbc.sp());
        EXPECT(0x907c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x907b));
        // 3C 0190
        gbc.setState(0x6d25, 0x70c4, 0x7470, 0xe19b, 0xfea6, 0x22a, 0x0, 0x0);
        gbc.writeMem(0x6d25, { 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x70c4, gbc.sp());
        EXPECT(0x6d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0191
        gbc.setState(0x2ade, 0x1120, 0x34d0, 0xf939, 0x9ebe, 0xa6ad, 0x0, 0x1);
        gbc.writeMem(0x2ade, { 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0192
        gbc.setState(0xc698, 0x6208, 0x12c0, 0xfc23, 0x9631, 0xb31, 0x0, 0x0);
        gbc.writeMem(0xc698, { 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0xc699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc698));
        // 3C 0193
        gbc.setState(0xe495, 0xa2c1, 0xcd20, 0xb912, 0xfef2, 0x5fdf, 0x0, 0x1);
        gbc.writeMem(0xe495, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa2c1, gbc.sp());
        EXPECT(0xe496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe495));
        // 3C 0194
        gbc.setState(0x4c3c, 0xcfa4, 0x8640, 0x95da, 0x60b7, 0x340e, 0x0, 0x1);
        gbc.writeMem(0x4c3c, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xcfa4, gbc.sp());
        EXPECT(0x4c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0195
        gbc.setState(0x5c2f, 0x6baa, 0x6d40, 0x5e41, 0xdca5, 0x2ec1, 0x0, 0x1);
        gbc.writeMem(0x5c2f, { 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6baa, gbc.sp());
        EXPECT(0x5c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0197
        gbc.setState(0x5a02, 0xb97e, 0x3060, 0xef91, 0x2ed0, 0x59af, 0x0, 0x0);
        gbc.writeMem(0x5a02, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb97e, gbc.sp());
        EXPECT(0x5a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0198
        gbc.setState(0x2f3a, 0x6a26, 0x31e0, 0x4f5, 0xea3f, 0x1eaa, 0x1, 0x1);
        gbc.writeMem(0x2f3a, { 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6a26, gbc.sp());
        EXPECT(0x2f3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0199
        gbc.setState(0xd4cd, 0x9a02, 0xd920, 0xc873, 0x26d8, 0x2dae, 0x0, 0x1);
        gbc.writeMem(0xd4cd, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0xd4ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd4cd));
        // 3C 019A
        gbc.setState(0xbb54, 0x2af8, 0x2c50, 0x6a09, 0x59f8, 0x8c51, 0x1, 0x0);
        gbc.writeMem(0xbb54, { 0x3c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2af8, gbc.sp());
        EXPECT(0xbb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb54));
        // 3C 019B
        gbc.setState(0x4db8, 0xc65e, 0x5220, 0x21f2, 0xeb79, 0x9717, 0x0, 0x0);
        gbc.writeMem(0x4db8, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 019C
        gbc.setState(0x8a00, 0x90f, 0xbf30, 0x54d6, 0x213, 0x8a86, 0x1, 0x0);
        gbc.writeMem(0x8a00, { 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x90f, gbc.sp());
        EXPECT(0x8a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8a00));
        // 3C 019D
        gbc.setState(0xe9cb, 0x7e2, 0xfc80, 0x6ba9, 0x16ea, 0xbd96, 0x0, 0x1);
        gbc.writeMem(0xe9cb, { 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7e2, gbc.sp());
        EXPECT(0xe9cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe9cb));
        // 3C 019E
        gbc.setState(0x395f, 0xbf9, 0x89f0, 0xc428, 0x166, 0xe155, 0x0, 0x0);
        gbc.writeMem(0x395f, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbf9, gbc.sp());
        EXPECT(0x3960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 019F
        gbc.setState(0x1866, 0x1585, 0x5f60, 0xd583, 0xa91b, 0x94e6, 0x1, 0x1);
        gbc.writeMem(0x1866, { 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1585, gbc.sp());
        EXPECT(0x1867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01A0
        gbc.setState(0x4c81, 0x6f79, 0xb0, 0xe3cd, 0xc831, 0xd50d, 0x0, 0x1);
        gbc.writeMem(0x4c81, { 0x3c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6f79, gbc.sp());
        EXPECT(0x4c82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01A1
        gbc.setState(0x9e92, 0x4911, 0xf130, 0x69cd, 0x6963, 0x991d, 0x1, 0x0);
        gbc.writeMem(0x9e92, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4911, gbc.sp());
        EXPECT(0x9e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e92));
        // 3C 01A2
        gbc.setState(0x6b0e, 0x3786, 0x2950, 0xa544, 0xc5c1, 0x6297, 0x1, 0x0);
        gbc.writeMem(0x6b0e, { 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3786, gbc.sp());
        EXPECT(0x6b0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01A3
        gbc.setState(0x9f4c, 0xab5, 0x24d0, 0xca2d, 0x7de9, 0x88ab, 0x1, 0x1);
        gbc.writeMem(0x9f4c, { 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xab5, gbc.sp());
        EXPECT(0x9f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f4c));
        // 3C 01A4
        gbc.setState(0xe33e, 0x2883, 0xca30, 0x307a, 0x95d2, 0x5971, 0x0, 0x1);
        gbc.writeMem(0xe33e, { 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2883, gbc.sp());
        EXPECT(0xe33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe33e));
        // 3C 01A5
        gbc.setState(0x6f82, 0xb813, 0x6a80, 0x6c7, 0x7ea9, 0xf674, 0x1, 0x1);
        gbc.writeMem(0x6f82, { 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x6f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01A6
        gbc.setState(0x3aad, 0x3053, 0xa450, 0x5959, 0xc007, 0x792a, 0x1, 0x1);
        gbc.writeMem(0x3aad, { 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0x3aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01A7
        gbc.setState(0x4d84, 0xec8c, 0xc180, 0x28fd, 0xeb98, 0xfce5, 0x0, 0x1);
        gbc.writeMem(0x4d84, { 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xec8c, gbc.sp());
        EXPECT(0x4d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01A8
        gbc.setState(0xc639, 0x14b6, 0x7250, 0x3b0f, 0x7253, 0x41db, 0x1, 0x0);
        gbc.writeMem(0xc639, { 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x14b6, gbc.sp());
        EXPECT(0xc63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc639));
        // 3C 01A9
        gbc.setState(0x7e5b, 0x30e2, 0xc0c0, 0x9020, 0x90f9, 0x4b0c, 0x0, 0x1);
        gbc.writeMem(0x7e5b, { 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x30e2, gbc.sp());
        EXPECT(0x7e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01AA
        gbc.setState(0x8b1, 0x8eab, 0xe200, 0xcbe7, 0x6f17, 0xc041, 0x1, 0x0);
        gbc.writeMem(0x8b1, { 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8eab, gbc.sp());
        EXPECT(0x8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01AB
        gbc.setState(0xa1a4, 0x96cd, 0xf970, 0x7bf7, 0x72a8, 0x4cb1, 0x1, 0x1);
        gbc.writeMem(0xa1a4, { 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0xa1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa1a4));
        // 3C 01AC
        gbc.setState(0x1016, 0x4b8d, 0xba30, 0xa46e, 0x32e2, 0xc209, 0x0, 0x0);
        gbc.writeMem(0x1016, { 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0x1017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01AD
        gbc.setState(0x24eb, 0x18a7, 0x32f0, 0x6c35, 0xc403, 0x5a12, 0x1, 0x1);
        gbc.writeMem(0x24eb, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x18a7, gbc.sp());
        EXPECT(0x24ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01AE
        gbc.setState(0x1d3, 0x6263, 0x4b20, 0xd7ab, 0xc429, 0xd16, 0x1, 0x0);
        gbc.writeMem(0x1d3, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6263, gbc.sp());
        EXPECT(0x1d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01AF
        gbc.setState(0xc35c, 0xb59e, 0xfb0, 0x9f90, 0xc96f, 0x85ea, 0x0, 0x0);
        gbc.writeMem(0xc35c, { 0x3c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb59e, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc35c));
        // 3C 01B0
        gbc.setState(0xbe59, 0x748, 0xd8a0, 0x16e5, 0xfb56, 0x766e, 0x0, 0x1);
        gbc.writeMem(0xbe59, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbe59));
        // 3C 01B1
        gbc.setState(0x85f, 0x2c41, 0xa950, 0xfe54, 0xb7ef, 0xf0ca, 0x0, 0x0);
        gbc.writeMem(0x85f, { 0x3c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2c41, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01B2
        gbc.setState(0x2491, 0x6436, 0x89a0, 0x45ef, 0x8391, 0xd3ea, 0x1, 0x1);
        gbc.writeMem(0x2491, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6436, gbc.sp());
        EXPECT(0x2492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01B3
        gbc.setState(0xec00, 0xcaaa, 0x7e70, 0x895a, 0x1b36, 0x3c4a, 0x0, 0x1);
        gbc.writeMem(0xec00, { 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcaaa, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xec00));
        // 3C 01B4
        gbc.setState(0x48e9, 0x3985, 0xc680, 0x5662, 0x3701, 0x30f, 0x1, 0x0);
        gbc.writeMem(0x48e9, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3985, gbc.sp());
        EXPECT(0x48ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01B5
        gbc.setState(0x9e96, 0xf6e9, 0x7490, 0xa034, 0x41a5, 0xb0b5, 0x0, 0x0);
        gbc.writeMem(0x9e96, { 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0x9e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e96));
        // 3C 01B6
        gbc.setState(0x2c72, 0xc675, 0x3190, 0x1d2d, 0xc877, 0xa3a, 0x1, 0x0);
        gbc.writeMem(0x2c72, { 0x3c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc675, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01B7
        gbc.setState(0x51a7, 0x9976, 0xa810, 0xa447, 0xa7a7, 0xeafe, 0x0, 0x0);
        gbc.writeMem(0x51a7, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9976, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01B8
        gbc.setState(0xe345, 0x7cdf, 0x6460, 0x9485, 0x7683, 0x20b1, 0x0, 0x1);
        gbc.writeMem(0xe345, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7cdf, gbc.sp());
        EXPECT(0xe346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe345));
        // 3C 01B9
        gbc.setState(0x1435, 0x579e, 0xb3a0, 0x74f7, 0x129b, 0x4679, 0x0, 0x0);
        gbc.writeMem(0x1435, { 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x1436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01BA
        gbc.setState(0x7c35, 0x530e, 0x13b0, 0x31b1, 0x892a, 0x5675, 0x0, 0x0);
        gbc.writeMem(0x7c35, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x530e, gbc.sp());
        EXPECT(0x7c36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01BB
        gbc.setState(0x5fd5, 0x4e17, 0xe960, 0xf309, 0x75e1, 0x3fa6, 0x0, 0x0);
        gbc.writeMem(0x5fd5, { 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4e17, gbc.sp());
        EXPECT(0x5fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01BC
        gbc.setState(0xcf7b, 0xc6e1, 0x8d60, 0x9cca, 0x2778, 0x8170, 0x1, 0x1);
        gbc.writeMem(0xcf7b, { 0x3c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc6e1, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcf7b));
        // 3C 01BD
        gbc.setState(0x7fb9, 0x1832, 0x47a0, 0xd546, 0x28db, 0x6ed7, 0x0, 0x1);
        gbc.writeMem(0x7fb9, { 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1832, gbc.sp());
        EXPECT(0x7fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01BE
        gbc.setState(0x834c, 0x9dd3, 0x48b0, 0xab3, 0xdf7a, 0xaa86, 0x0, 0x1);
        gbc.writeMem(0x834c, { 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0x834d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x834c));
        // 3C 01BF
        gbc.setState(0x7bc7, 0x9859, 0xa670, 0x8514, 0xa776, 0xebd8, 0x1, 0x0);
        gbc.writeMem(0x7bc7, { 0x3c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9859, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01C0
        gbc.setState(0xd793, 0x89a1, 0xabe0, 0xa5ed, 0xd905, 0x6c72, 0x1, 0x0);
        gbc.writeMem(0xd793, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x89a1, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd793));
        // 3C 01C1
        gbc.setState(0xba0b, 0xbc68, 0x170, 0x33f6, 0xe98, 0xb3a3, 0x1, 0x1);
        gbc.writeMem(0xba0b, { 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xbc68, gbc.sp());
        EXPECT(0xba0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xba0b));
        // 3C 01C2
        gbc.setState(0x22d1, 0xc23c, 0x3090, 0x2ca9, 0x5649, 0x99be, 0x1, 0x1);
        gbc.writeMem(0x22d1, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc23c, gbc.sp());
        EXPECT(0x22d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01C3
        gbc.setState(0x4b8c, 0xe7e, 0xd1e0, 0x6744, 0xeff3, 0x4321, 0x0, 0x1);
        gbc.writeMem(0x4b8c, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe7e, gbc.sp());
        EXPECT(0x4b8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01C4
        gbc.setState(0x8ad5, 0x3bf1, 0x7060, 0x642c, 0xc999, 0x2726, 0x0, 0x1);
        gbc.writeMem(0x8ad5, { 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3bf1, gbc.sp());
        EXPECT(0x8ad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8ad5));
        // 3C 01C5
        gbc.setState(0xb0cb, 0x54ee, 0x45e0, 0x6199, 0x475b, 0xe271, 0x1, 0x0);
        gbc.writeMem(0xb0cb, { 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x54ee, gbc.sp());
        EXPECT(0xb0cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb0cb));
        // 3C 01C7
        gbc.setState(0x1bf, 0xf5d8, 0xdeb0, 0x375b, 0x9624, 0x7d7b, 0x1, 0x0);
        gbc.writeMem(0x1bf, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5d8, gbc.sp());
        EXPECT(0x1c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01C8
        gbc.setState(0x26c7, 0xf705, 0xfb20, 0x68a4, 0x3b95, 0xca5a, 0x0, 0x1);
        gbc.writeMem(0x26c7, { 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0x26c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01C9
        gbc.setState(0x69ae, 0xc641, 0xffb0, 0xe1bd, 0x65b, 0xdee4, 0x1, 0x0);
        gbc.writeMem(0x69ae, { 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc641, gbc.sp());
        EXPECT(0x69af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01CA
        gbc.setState(0x7542, 0xf605, 0x80, 0xf358, 0xd563, 0x1c3c, 0x1, 0x1);
        gbc.writeMem(0x7542, { 0x3c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf605, gbc.sp());
        EXPECT(0x7543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01CC
        gbc.setState(0xc10, 0xa660, 0x1820, 0x3de5, 0xe53f, 0xff4f, 0x1, 0x1);
        gbc.writeMem(0xc10, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa660, gbc.sp());
        EXPECT(0xc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01CD
        gbc.setState(0xb29d, 0xf161, 0x1ac0, 0xd85c, 0xcea6, 0x81ae, 0x0, 0x0);
        gbc.writeMem(0xb29d, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf161, gbc.sp());
        EXPECT(0xb29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb29d));
        // 3C 01CE
        gbc.setState(0x8318, 0xf5f3, 0x3950, 0x8da0, 0xbdac, 0xe5c9, 0x0, 0x1);
        gbc.writeMem(0x8318, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf5f3, gbc.sp());
        EXPECT(0x8319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8318));
        // 3C 01CF
        gbc.setState(0x7941, 0xa05e, 0x6030, 0x964, 0x75fc, 0x3a02, 0x0, 0x1);
        gbc.writeMem(0x7941, { 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa05e, gbc.sp());
        EXPECT(0x7942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01D0
        gbc.setState(0x3e73, 0x6ba9, 0x5ee0, 0xcbb3, 0xf0b0, 0x65a0, 0x0, 0x1);
        gbc.writeMem(0x3e73, { 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6ba9, gbc.sp());
        EXPECT(0x3e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01D1
        gbc.setState(0x4c2f, 0xea28, 0xb820, 0x9655, 0x9c, 0xc5f2, 0x1, 0x1);
        gbc.writeMem(0x4c2f, { 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xea28, gbc.sp());
        EXPECT(0x4c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01D4
        gbc.setState(0xeb02, 0x47bb, 0xb090, 0x3cc8, 0x1aa1, 0x76d9, 0x1, 0x0);
        gbc.writeMem(0xeb02, { 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0xeb03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeb02));
        // 3C 01D5
        gbc.setState(0x7c95, 0x3d81, 0xc380, 0x9d15, 0x358e, 0xcf3b, 0x1, 0x0);
        gbc.writeMem(0x7c95, { 0x3c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3d81, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01D6
        gbc.setState(0x1b5c, 0xeb, 0xf6d0, 0x7f35, 0x1b49, 0x27d6, 0x0, 0x0);
        gbc.writeMem(0x1b5c, { 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeb, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01D7
        gbc.setState(0xd5dc, 0x806c, 0x5e30, 0x419f, 0xf766, 0xf652, 0x1, 0x0);
        gbc.writeMem(0xd5dc, { 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x806c, gbc.sp());
        EXPECT(0xd5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd5dc));
        // 3C 01D8
        gbc.setState(0x6091, 0xe8ec, 0xb4e0, 0x492d, 0x5b57, 0x1731, 0x0, 0x0);
        gbc.writeMem(0x6091, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe8ec, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01D9
        gbc.setState(0x1eba, 0xf433, 0x6670, 0xb389, 0xb31, 0x110e, 0x0, 0x0);
        gbc.writeMem(0x1eba, { 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf433, gbc.sp());
        EXPECT(0x1ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01DA
        gbc.setState(0x5b65, 0x42b6, 0x77e0, 0x6e60, 0x12d7, 0x319, 0x1, 0x0);
        gbc.writeMem(0x5b65, { 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x42b6, gbc.sp());
        EXPECT(0x5b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01DB
        gbc.setState(0x4382, 0xfe1e, 0xb940, 0xea8b, 0x1a10, 0x9c94, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0x3c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01DC
        gbc.setState(0xfa0, 0x436f, 0xe910, 0x93e1, 0xaea8, 0xa0ea, 0x1, 0x1);
        gbc.writeMem(0xfa0, { 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x436f, gbc.sp());
        EXPECT(0xfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01DD
        gbc.setState(0xe423, 0xd2ad, 0xe700, 0xcbfb, 0x8c02, 0x77b3, 0x1, 0x1);
        gbc.writeMem(0xe423, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd2ad, gbc.sp());
        EXPECT(0xe424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe423));
        // 3C 01DE
        gbc.setState(0x735b, 0xa29, 0x6b00, 0xa901, 0x7b5e, 0xb88b, 0x0, 0x0);
        gbc.writeMem(0x735b, { 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa29, gbc.sp());
        EXPECT(0x735c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01DF
        gbc.setState(0x9fe4, 0xfb4, 0x2380, 0xc263, 0xa75a, 0xb3a1, 0x0, 0x0);
        gbc.writeMem(0x9fe4, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfb4, gbc.sp());
        EXPECT(0x9fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9fe4));
        // 3C 01E0
        gbc.setState(0x1a0a, 0xe629, 0x8bd0, 0x6316, 0x168c, 0xade2, 0x1, 0x0);
        gbc.writeMem(0x1a0a, { 0x3c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe629, gbc.sp());
        EXPECT(0x1a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01E1
        gbc.setState(0xb875, 0xbb65, 0x5f80, 0xc96a, 0xcef0, 0x6bf, 0x1, 0x1);
        gbc.writeMem(0xb875, { 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbb65, gbc.sp());
        EXPECT(0xb876, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb875));
        // 3C 01E2
        gbc.setState(0xcca7, 0x26a1, 0x52d0, 0xd533, 0xd57c, 0x64be, 0x0, 0x0);
        gbc.writeMem(0xcca7, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0xcca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcca7));
        // 3C 01E3
        gbc.setState(0x9067, 0x15d0, 0x63d0, 0x2c8e, 0x60f3, 0x4a94, 0x0, 0x1);
        gbc.writeMem(0x9067, { 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x15d0, gbc.sp());
        EXPECT(0x9068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9067));
        // 3C 01E4
        gbc.setState(0xb00d, 0x4dd6, 0x41b0, 0x3da5, 0xa3f4, 0x43, 0x0, 0x0);
        gbc.writeMem(0xb00d, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4dd6, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb00d));
        // 3C 01E5
        gbc.setState(0x687, 0x7429, 0x3870, 0xa5b5, 0xc3fb, 0x3107, 0x1, 0x0);
        gbc.writeMem(0x687, { 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7429, gbc.sp());
        EXPECT(0x688, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01E6
        gbc.setState(0x419b, 0x1d28, 0xe50, 0xb02f, 0x802f, 0x59d1, 0x0, 0x0);
        gbc.writeMem(0x419b, { 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1d28, gbc.sp());
        EXPECT(0x419c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01E7
        gbc.setState(0x49b0, 0xcf48, 0x9e00, 0x1be, 0xe253, 0x1eb9, 0x1, 0x0);
        gbc.writeMem(0x49b0, { 0x3c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xcf48, gbc.sp());
        EXPECT(0x49b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01E8
        gbc.setState(0x74e7, 0x3366, 0x7b60, 0x1b86, 0x81bb, 0xa276, 0x1, 0x0);
        gbc.writeMem(0x74e7, { 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x3366, gbc.sp());
        EXPECT(0x74e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01E9
        gbc.setState(0xa72f, 0xa172, 0x9ae0, 0xe21d, 0x8857, 0x4ee8, 0x1, 0x0);
        gbc.writeMem(0xa72f, { 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0xa730, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa72f));
        // 3C 01EA
        gbc.setState(0x6efa, 0x6786, 0x6590, 0x8040, 0xaf90, 0xe091, 0x0, 0x1);
        gbc.writeMem(0x6efa, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x6786, gbc.sp());
        EXPECT(0x6efb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01EB
        gbc.setState(0x2d44, 0x9314, 0x5330, 0x1bc1, 0xf7a3, 0xa325, 0x0, 0x1);
        gbc.writeMem(0x2d44, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9314, gbc.sp());
        EXPECT(0x2d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01EC
        gbc.setState(0x4991, 0x3dac, 0x32c0, 0xe7bc, 0xd345, 0xd7e0, 0x1, 0x0);
        gbc.writeMem(0x4991, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3dac, gbc.sp());
        EXPECT(0x4992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01ED
        gbc.setState(0x1ee2, 0xa868, 0xc6e0, 0x429, 0x5953, 0x86ae, 0x1, 0x0);
        gbc.writeMem(0x1ee2, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa868, gbc.sp());
        EXPECT(0x1ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01EE
        gbc.setState(0xdc1f, 0x85b1, 0xf580, 0x67a9, 0x2216, 0x8463, 0x1, 0x1);
        gbc.writeMem(0xdc1f, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0xdc20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc1f));
        // 3C 01EF
        gbc.setState(0xcb4, 0xbd6f, 0xd3e0, 0x1d2, 0x2cbe, 0xf5c0, 0x0, 0x1);
        gbc.writeMem(0xcb4, { 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbd6f, gbc.sp());
        EXPECT(0xcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01F0
        gbc.setState(0xbbc2, 0x160, 0x1450, 0xbed9, 0xdb4b, 0xec42, 0x0, 0x1);
        gbc.writeMem(0xbbc2, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0xbbc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbbc2));
        // 3C 01F1
        gbc.setState(0x8600, 0x4eae, 0x1960, 0xf7c6, 0x4c45, 0xd37d, 0x0, 0x1);
        gbc.writeMem(0x8600, { 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4eae, gbc.sp());
        EXPECT(0x8601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8600));
        // 3C 01F2
        gbc.setState(0x827, 0xaed4, 0x2540, 0x4dd0, 0x7ea, 0xee28, 0x1, 0x0);
        gbc.writeMem(0x827, { 0x3c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaed4, gbc.sp());
        EXPECT(0x828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01F3
        gbc.setState(0xab6c, 0x3d94, 0xa000, 0xcfe7, 0xa19c, 0xae4a, 0x0, 0x1);
        gbc.writeMem(0xab6c, { 0x3c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0xab6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xab6c));
        // 3C 01F4
        gbc.setState(0x3848, 0xf51f, 0x36f0, 0x89b9, 0x71a7, 0x6e33, 0x0, 0x0);
        gbc.writeMem(0x3848, { 0x3c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x3849, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01F5
        gbc.setState(0xeba1, 0x728e, 0x1bd0, 0xd851, 0x34c, 0x2ba5, 0x0, 0x1);
        gbc.writeMem(0xeba1, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0xeba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeba1));
        // 3C 01F6
        gbc.setState(0x536f, 0xd69a, 0x95a0, 0xb723, 0xbde2, 0xcee, 0x1, 0x1);
        gbc.writeMem(0x536f, { 0x3c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd69a, gbc.sp());
        EXPECT(0x5370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 01F7
        gbc.setState(0x2af6, 0x18fc, 0xccf0, 0xd03d, 0x6a56, 0x32c4, 0x1, 0x1);
        gbc.writeMem(0x2af6, { 0x3c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x18fc, gbc.sp());
        EXPECT(0x2af7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01F8
        gbc.setState(0x7e9b, 0x2403, 0xb810, 0xb3a8, 0xbb8d, 0xd434, 0x1, 0x0);
        gbc.writeMem(0x7e9b, { 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2403, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01F9
        gbc.setState(0x92a5, 0x2c0d, 0xbaf0, 0x782, 0xb06f, 0xe01e, 0x0, 0x0);
        gbc.writeMem(0x92a5, { 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2c0d, gbc.sp());
        EXPECT(0x92a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x92a5));
        // 3C 01FA
        gbc.setState(0xb401, 0xc9b6, 0x26b0, 0x4df7, 0x8add, 0x72f3, 0x1, 0x0);
        gbc.writeMem(0xb401, { 0x3c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc9b6, gbc.sp());
        EXPECT(0xb402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb401));
        // 3C 01FB
        gbc.setState(0xe7c7, 0xbed7, 0x9450, 0xc707, 0x6ad2, 0x55d, 0x1, 0x1);
        gbc.writeMem(0xe7c7, { 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbed7, gbc.sp());
        EXPECT(0xe7c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe7c7));
        // 3C 01FC
        gbc.setState(0x9f38, 0x5ea9, 0xb4f0, 0xbb53, 0x10bd, 0xa01c, 0x0, 0x0);
        gbc.writeMem(0x9f38, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5ea9, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9f38));
        // 3C 01FD
        gbc.setState(0xde23, 0x5f8c, 0xaba0, 0xd6d5, 0xa6bd, 0x3f87, 0x1, 0x0);
        gbc.writeMem(0xde23, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x5f8c, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xde23));
        // 3C 01FE
        gbc.setState(0x7cc9, 0x48af, 0xca30, 0xc654, 0x2507, 0x7669, 0x0, 0x0);
        gbc.writeMem(0x7cc9, { 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x48af, gbc.sp());
        EXPECT(0x7cca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 01FF
        gbc.setState(0x1bbe, 0x5219, 0x2230, 0xf746, 0xf68f, 0x6631, 0x0, 0x0);
        gbc.writeMem(0x1bbe, { 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5219, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0200
        gbc.setState(0xdf91, 0x9a7f, 0xa8b0, 0xe801, 0xe3d3, 0xfac0, 0x1, 0x1);
        gbc.writeMem(0xdf91, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9a7f, gbc.sp());
        EXPECT(0xdf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf91));
        // 3C 0202
        gbc.setState(0xe092, 0x4c50, 0x68c0, 0x363a, 0xeb3, 0x6702, 0x0, 0x1);
        gbc.writeMem(0xe092, { 0x3c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4c50, gbc.sp());
        EXPECT(0xe093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe092));
        // 3C 0203
        gbc.setState(0x4b58, 0xf55a, 0x10b0, 0x883c, 0xa582, 0x1dd0, 0x1, 0x0);
        gbc.writeMem(0x4b58, { 0x3c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0x4b59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0204
        gbc.setState(0xdc5a, 0x14f2, 0x5390, 0xb96e, 0x9838, 0xce68, 0x0, 0x1);
        gbc.writeMem(0xdc5a, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0xdc5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc5a));
        // 3C 0205
        gbc.setState(0x7235, 0x3d6d, 0xeac0, 0x2054, 0x7b07, 0xd301, 0x0, 0x1);
        gbc.writeMem(0x7235, { 0x3c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0x7236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0206
        gbc.setState(0x3492, 0xa940, 0x65a0, 0x36dc, 0xbb4c, 0xcce7, 0x1, 0x0);
        gbc.writeMem(0x3492, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa940, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0208
        gbc.setState(0xa86, 0x117, 0x7a0, 0x8ddc, 0x8f77, 0x1ced, 0x0, 0x1);
        gbc.writeMem(0xa86, { 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0xa87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0209
        gbc.setState(0xb7db, 0xa7d, 0x8760, 0x9778, 0x224f, 0xaa34, 0x0, 0x0);
        gbc.writeMem(0xb7db, { 0x3c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa7d, gbc.sp());
        EXPECT(0xb7dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb7db));
        // 3C 020A
        gbc.setState(0xcde7, 0xaa80, 0x2dc0, 0x7467, 0x34f8, 0x6232, 0x1, 0x1);
        gbc.writeMem(0xcde7, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaa80, gbc.sp());
        EXPECT(0xcde8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcde7));
        // 3C 020B
        gbc.setState(0xc2c3, 0x4fd1, 0x6cc0, 0xafa5, 0x1bf4, 0x4d5, 0x1, 0x0);
        gbc.writeMem(0xc2c3, { 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4fd1, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc2c3));
        // 3C 020C
        gbc.setState(0xd4c0, 0xb025, 0xbfb0, 0x3f09, 0x6011, 0x63e8, 0x1, 0x0);
        gbc.writeMem(0xd4c0, { 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0xd4c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd4c0));
        // 3C 020D
        gbc.setState(0xb424, 0x428f, 0xa150, 0x7961, 0x89a1, 0xa379, 0x1, 0x0);
        gbc.writeMem(0xb424, { 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x428f, gbc.sp());
        EXPECT(0xb425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb424));
        // 3C 020E
        gbc.setState(0xe716, 0x8b4c, 0x9760, 0x35fe, 0xb14b, 0x7633, 0x1, 0x1);
        gbc.writeMem(0xe716, { 0x3c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x8b4c, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe716));
        // 3C 020F
        gbc.setState(0x2f66, 0x2675, 0xd2b0, 0x9093, 0x3b1d, 0xa8c1, 0x0, 0x0);
        gbc.writeMem(0x2f66, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2675, gbc.sp());
        EXPECT(0x2f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0210
        gbc.setState(0x4e7c, 0x6d44, 0x5250, 0x37ba, 0x5f6d, 0x4daa, 0x0, 0x0);
        gbc.writeMem(0x4e7c, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6d44, gbc.sp());
        EXPECT(0x4e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0211
        gbc.setState(0x78d2, 0x4b61, 0x2d10, 0xe9f4, 0x807c, 0x5e28, 0x1, 0x1);
        gbc.writeMem(0x78d2, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4b61, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0212
        gbc.setState(0x2577, 0x2ec3, 0x85f0, 0x79f0, 0xda4c, 0xc7d, 0x1, 0x1);
        gbc.writeMem(0x2577, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2ec3, gbc.sp());
        EXPECT(0x2578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0213
        gbc.setState(0x6949, 0x899d, 0x7e0, 0x3521, 0x1850, 0x5063, 0x0, 0x1);
        gbc.writeMem(0x6949, { 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x899d, gbc.sp());
        EXPECT(0x694a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0214
        gbc.setState(0x490, 0x8e33, 0xd900, 0x1bc9, 0x4c6a, 0xfc83, 0x0, 0x1);
        gbc.writeMem(0x490, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e33, gbc.sp());
        EXPECT(0x491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0215
        gbc.setState(0xbc8b, 0xd3e, 0x59d0, 0xd22a, 0xf4bd, 0xea25, 0x0, 0x0);
        gbc.writeMem(0xbc8b, { 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd3e, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbc8b));
        // 3C 0216
        gbc.setState(0xe295, 0xef64, 0x14a0, 0xafe8, 0x370d, 0x5a36, 0x1, 0x1);
        gbc.writeMem(0xe295, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xef64, gbc.sp());
        EXPECT(0xe296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe295));
        // 3C 0217
        gbc.setState(0xa909, 0x639a, 0xaad0, 0xb2c1, 0x631c, 0xd05e, 0x1, 0x1);
        gbc.writeMem(0xa909, { 0x3c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x639a, gbc.sp());
        EXPECT(0xa90a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa909));
        // 3C 0218
        gbc.setState(0xa62a, 0xfa9d, 0xc370, 0x2620, 0x6e60, 0x716e, 0x0, 0x0);
        gbc.writeMem(0xa62a, { 0x3c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfa9d, gbc.sp());
        EXPECT(0xa62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa62a));
        // 3C 021A
        gbc.setState(0x5319, 0xb527, 0x39a0, 0x9d64, 0x8807, 0xf4c, 0x0, 0x0);
        gbc.writeMem(0x5319, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb527, gbc.sp());
        EXPECT(0x531a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 021B
        gbc.setState(0x1169, 0x2857, 0x1400, 0xc083, 0xe1b6, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0x1169, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2857, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 021C
        gbc.setState(0x601b, 0xa42b, 0x4990, 0x3613, 0xd9c3, 0x5350, 0x0, 0x0);
        gbc.writeMem(0x601b, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x601c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 021D
        gbc.setState(0x96f2, 0x45fb, 0xc5a0, 0x571b, 0x7114, 0x32ce, 0x0, 0x0);
        gbc.writeMem(0x96f2, { 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x45fb, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x96f2));
        // 3C 021E
        gbc.setState(0x4e95, 0x9da5, 0x1ef0, 0xf0b0, 0x12cf, 0x2fd1, 0x1, 0x0);
        gbc.writeMem(0x4e95, { 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9da5, gbc.sp());
        EXPECT(0x4e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 021F
        gbc.setState(0xacdb, 0xa49e, 0xbc10, 0xd4b0, 0x3916, 0xc0eb, 0x0, 0x0);
        gbc.writeMem(0xacdb, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0xacdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xacdb));
        // 3C 0220
        gbc.setState(0xe8a0, 0x7a27, 0x9d80, 0xb8b, 0x760a, 0x520c, 0x0, 0x0);
        gbc.writeMem(0xe8a0, { 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7a27, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe8a0));
        // 3C 0221
        gbc.setState(0xdd2d, 0x103f, 0x1c20, 0xe7cb, 0xc91f, 0xff3b, 0x0, 0x0);
        gbc.writeMem(0xdd2d, { 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x103f, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdd2d));
        // 3C 0222
        gbc.setState(0x582e, 0x5d86, 0xbcd0, 0xc6a4, 0xc324, 0x10d3, 0x1, 0x0);
        gbc.writeMem(0x582e, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5d86, gbc.sp());
        EXPECT(0x582f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0223
        gbc.setState(0x814d, 0x8d19, 0x4150, 0x563c, 0xc574, 0x32ef, 0x1, 0x1);
        gbc.writeMem(0x814d, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8d19, gbc.sp());
        EXPECT(0x814e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x814d));
        // 3C 0224
        gbc.setState(0xc6c0, 0x8ae8, 0x4b90, 0x78c9, 0xa96b, 0x3173, 0x1, 0x0);
        gbc.writeMem(0xc6c0, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0xc6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc6c0));
        // 3C 0225
        gbc.setState(0xdfa1, 0x7b88, 0x50d0, 0xfb98, 0x3a6f, 0xde82, 0x0, 0x1);
        gbc.writeMem(0xdfa1, { 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7b88, gbc.sp());
        EXPECT(0xdfa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdfa1));
        // 3C 0226
        gbc.setState(0x6d79, 0xa9e8, 0xea60, 0x939c, 0x9108, 0x6553, 0x0, 0x1);
        gbc.writeMem(0x6d79, { 0x3c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0227
        gbc.setState(0xe543, 0x59d, 0xa460, 0xea2e, 0x7e90, 0xc3c, 0x1, 0x1);
        gbc.writeMem(0xe543, { 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x59d, gbc.sp());
        EXPECT(0xe544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe543));
        // 3C 0228
        gbc.setState(0xde8d, 0x6955, 0x4480, 0x9cc8, 0xca8c, 0x9c30, 0x1, 0x1);
        gbc.writeMem(0xde8d, { 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0xde8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xde8d));
        // 3C 0229
        gbc.setState(0x6c75, 0x2378, 0xede0, 0x1f62, 0x7c42, 0xa48f, 0x0, 0x0);
        gbc.writeMem(0x6c75, { 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2378, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 022A
        gbc.setState(0x5d7d, 0xc705, 0x4cd0, 0x9007, 0xf5a4, 0x4833, 0x0, 0x1);
        gbc.writeMem(0x5d7d, { 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc705, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 022B
        gbc.setState(0x358d, 0xbb00, 0xbdd0, 0x9e06, 0x5579, 0x55cd, 0x1, 0x0);
        gbc.writeMem(0x358d, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbb00, gbc.sp());
        EXPECT(0x358e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 022D
        gbc.setState(0x6da4, 0xbfab, 0xe390, 0x7555, 0xee3a, 0x5fb5, 0x0, 0x0);
        gbc.writeMem(0x6da4, { 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbfab, gbc.sp());
        EXPECT(0x6da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 022E
        gbc.setState(0xd026, 0x363c, 0xc630, 0x2540, 0x4bd4, 0x4bc5, 0x0, 0x1);
        gbc.writeMem(0xd026, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x363c, gbc.sp());
        EXPECT(0xd027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd026));
        // 3C 022F
        gbc.setState(0x9669, 0x53d5, 0x2290, 0x408, 0x36b5, 0x6f4f, 0x1, 0x0);
        gbc.writeMem(0x9669, { 0x3c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0x966a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9669));
        // 3C 0230
        gbc.setState(0xb3d1, 0x92aa, 0x6f70, 0xd026, 0x586c, 0x60f, 0x0, 0x1);
        gbc.writeMem(0xb3d1, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0xb3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb3d1));
        // 3C 0231
        gbc.setState(0x84d3, 0xef9a, 0x4900, 0x43cb, 0xbbf4, 0x7ca2, 0x0, 0x1);
        gbc.writeMem(0x84d3, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xef9a, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x84d3));
        // 3C 0232
        gbc.setState(0xa5de, 0xb865, 0x1ff0, 0x1700, 0x3e54, 0x7007, 0x0, 0x0);
        gbc.writeMem(0xa5de, { 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb865, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa5de));
        // 3C 0233
        gbc.setState(0xaba5, 0x4137, 0x9950, 0xe386, 0x68f2, 0x2900, 0x0, 0x0);
        gbc.writeMem(0xaba5, { 0x3c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4137, gbc.sp());
        EXPECT(0xaba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaba5));
        // 3C 0234
        gbc.setState(0x26f3, 0xd572, 0x7080, 0x6ebf, 0xc8f2, 0xa111, 0x0, 0x0);
        gbc.writeMem(0x26f3, { 0x3c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0x26f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0235
        gbc.setState(0x3c29, 0x7b5d, 0x8000, 0x48af, 0x36ab, 0x15a6, 0x0, 0x1);
        gbc.writeMem(0x3c29, { 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0x3c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0236
        gbc.setState(0x9e3f, 0xe522, 0x6910, 0x1811, 0xd8b4, 0xb49e, 0x0, 0x1);
        gbc.writeMem(0x9e3f, { 0x3c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe522, gbc.sp());
        EXPECT(0x9e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e3f));
        // 3C 0237
        gbc.setState(0x23ba, 0x2794, 0x3fe0, 0x2d86, 0x14fe, 0xfaba, 0x1, 0x0);
        gbc.writeMem(0x23ba, { 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2794, gbc.sp());
        EXPECT(0x23bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0238
        gbc.setState(0x45ff, 0x25a8, 0x61c0, 0xd1ce, 0x2745, 0x989d, 0x0, 0x0);
        gbc.writeMem(0x45ff, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x25a8, gbc.sp());
        EXPECT(0x4600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0239
        gbc.setState(0xb196, 0x121e, 0x9fe0, 0x282d, 0x7b0a, 0x97c2, 0x0, 0x1);
        gbc.writeMem(0xb196, { 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x121e, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb196));
        // 3C 023B
        gbc.setState(0x7516, 0xa312, 0xf760, 0xd8e5, 0x6d19, 0xe61, 0x0, 0x0);
        gbc.writeMem(0x7516, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa312, gbc.sp());
        EXPECT(0x7517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 023C
        gbc.setState(0x2a7, 0x9d82, 0x4990, 0xc2da, 0x54bb, 0x548d, 0x0, 0x0);
        gbc.writeMem(0x2a7, { 0x3c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 023D
        gbc.setState(0x1851, 0x16c8, 0x9c80, 0xcd30, 0x66c6, 0xe9d, 0x0, 0x0);
        gbc.writeMem(0x1851, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x16c8, gbc.sp());
        EXPECT(0x1852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 023E
        gbc.setState(0x86dc, 0x958, 0xe7c0, 0x75e0, 0x78c4, 0x5e8d, 0x1, 0x1);
        gbc.writeMem(0x86dc, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x958, gbc.sp());
        EXPECT(0x86dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x86dc));
        // 3C 023F
        gbc.setState(0x3114, 0x83ba, 0xe640, 0x5980, 0x6d25, 0xd9af, 0x0, 0x1);
        gbc.writeMem(0x3114, { 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x83ba, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0240
        gbc.setState(0x3936, 0x201c, 0x3c60, 0xfb45, 0xd9f4, 0x3b3f, 0x0, 0x0);
        gbc.writeMem(0x3936, { 0x3c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x201c, gbc.sp());
        EXPECT(0x3937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0241
        gbc.setState(0x1d43, 0x423d, 0x6800, 0x4604, 0x6276, 0x1f9c, 0x1, 0x1);
        gbc.writeMem(0x1d43, { 0x3c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x423d, gbc.sp());
        EXPECT(0x1d44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0242
        gbc.setState(0x9fa5, 0x1194, 0x3740, 0x9869, 0x8dad, 0x25a3, 0x0, 0x0);
        gbc.writeMem(0x9fa5, { 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1194, gbc.sp());
        EXPECT(0x9fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9fa5));
        // 3C 0243
        gbc.setState(0x8d06, 0x480d, 0xb360, 0xb940, 0xf9ab, 0xccec, 0x1, 0x0);
        gbc.writeMem(0x8d06, { 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0x8d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8d06));
        // 3C 0244
        gbc.setState(0x9c46, 0x63ea, 0x6bf0, 0xc52b, 0x9503, 0xabcd, 0x1, 0x0);
        gbc.writeMem(0x9c46, { 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63ea, gbc.sp());
        EXPECT(0x9c47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9c46));
        // 3C 0245
        gbc.setState(0x1ccc, 0xd69f, 0xe980, 0x69db, 0xca7c, 0xeb4d, 0x0, 0x1);
        gbc.writeMem(0x1ccc, { 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0x1ccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0246
        gbc.setState(0xa994, 0x5982, 0x8c0, 0x46c8, 0xaaab, 0x9337, 0x1, 0x0);
        gbc.writeMem(0xa994, { 0x3c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xa995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa994));
        // 3C 0247
        gbc.setState(0x2518, 0xcab3, 0x24f0, 0x80d1, 0x300f, 0xea8f, 0x1, 0x1);
        gbc.writeMem(0x2518, { 0x3c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcab3, gbc.sp());
        EXPECT(0x2519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0248
        gbc.setState(0xaeec, 0xdc6f, 0xc270, 0x4568, 0x70dd, 0x62bc, 0x1, 0x1);
        gbc.writeMem(0xaeec, { 0x3c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdc6f, gbc.sp());
        EXPECT(0xaeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaeec));
        // 3C 0249
        gbc.setState(0x8c16, 0xd6a0, 0xdfd0, 0xaae1, 0x7139, 0x960f, 0x1, 0x0);
        gbc.writeMem(0x8c16, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8c16));
        // 3C 024B
        gbc.setState(0xeb5f, 0xa503, 0x7340, 0x2d30, 0x13a1, 0xe0e1, 0x1, 0x1);
        gbc.writeMem(0xeb5f, { 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeb5f));
        // 3C 024C
        gbc.setState(0x255b, 0x6f97, 0x6cd0, 0x5ce4, 0x6904, 0x9fd8, 0x0, 0x0);
        gbc.writeMem(0x255b, { 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6f97, gbc.sp());
        EXPECT(0x255c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 024D
        gbc.setState(0x5721, 0xe755, 0x2df0, 0xbe98, 0x2ec8, 0x909, 0x1, 0x1);
        gbc.writeMem(0x5721, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0x5722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 024E
        gbc.setState(0x45dc, 0xed4b, 0xb490, 0x2b4c, 0x96e7, 0xbd3, 0x1, 0x0);
        gbc.writeMem(0x45dc, { 0x3c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xed4b, gbc.sp());
        EXPECT(0x45dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 024F
        gbc.setState(0x9723, 0x7571, 0xbf30, 0x4e55, 0x3ba8, 0xdd15, 0x0, 0x0);
        gbc.writeMem(0x9723, { 0x3c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7571, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9723));
        // 3C 0251
        gbc.setState(0xc27e, 0x319f, 0x71f0, 0xb6bc, 0xaf7c, 0x1551, 0x0, 0x0);
        gbc.writeMem(0xc27e, { 0x3c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x319f, gbc.sp());
        EXPECT(0xc27f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc27e));
        // 3C 0252
        gbc.setState(0x51, 0xdb42, 0x61e0, 0xb974, 0x4cc, 0xc7e8, 0x1, 0x1);
        gbc.writeMem(0x51, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0x52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0253
        gbc.setState(0x8165, 0xf411, 0x5cd0, 0x22ae, 0xa85e, 0x2c9, 0x0, 0x1);
        gbc.writeMem(0x8165, { 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf411, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8165));
        // 3C 0254
        gbc.setState(0xf9a, 0xa4e, 0xf600, 0xb2cc, 0xf79d, 0x467f, 0x1, 0x1);
        gbc.writeMem(0xf9a, { 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa4e, gbc.sp());
        EXPECT(0xf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0255
        gbc.setState(0x25bc, 0xbd8f, 0x6fc0, 0x5786, 0x7c56, 0x65d7, 0x1, 0x1);
        gbc.writeMem(0x25bc, { 0x3c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbd8f, gbc.sp());
        EXPECT(0x25bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0257
        gbc.setState(0xb389, 0x955c, 0x1190, 0xd88, 0x66cc, 0x92dc, 0x0, 0x0);
        gbc.writeMem(0xb389, { 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0xb38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb389));
        // 3C 0258
        gbc.setState(0xdbe3, 0x7208, 0x6150, 0x57a1, 0x7152, 0x5d99, 0x0, 0x0);
        gbc.writeMem(0xdbe3, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7208, gbc.sp());
        EXPECT(0xdbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdbe3));
        // 3C 0259
        gbc.setState(0xcfad, 0x1a3c, 0x1b60, 0x3c0e, 0xfe56, 0x1fa5, 0x0, 0x1);
        gbc.writeMem(0xcfad, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1a3c, gbc.sp());
        EXPECT(0xcfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcfad));
        // 3C 025A
        gbc.setState(0xc4c0, 0xc3a, 0x63a0, 0x2dd9, 0xe23e, 0x4b79, 0x0, 0x1);
        gbc.writeMem(0xc4c0, { 0x3c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc3a, gbc.sp());
        EXPECT(0xc4c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc4c0));
        // 3C 025B
        gbc.setState(0xaf24, 0x88bf, 0xca10, 0xbfd9, 0x8454, 0x2635, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x88bf, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaf24));
        // 3C 025C
        gbc.setState(0xb486, 0x1801, 0xaff0, 0xbcff, 0xf3a, 0x7f51, 0x0, 0x0);
        gbc.writeMem(0xb486, { 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x1801, gbc.sp());
        EXPECT(0xb487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb486));
        // 3C 025D
        gbc.setState(0x96c2, 0x6a67, 0x9490, 0xff01, 0x9676, 0x8462, 0x0, 0x1);
        gbc.writeMem(0x96c2, { 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x6a67, gbc.sp());
        EXPECT(0x96c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x96c2));
        // 3C 025E
        gbc.setState(0x11e1, 0xf9a8, 0xdbc0, 0xda9e, 0x4ff0, 0x1dcb, 0x1, 0x0);
        gbc.writeMem(0x11e1, { 0x3c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 025F
        gbc.setState(0x83f7, 0x27b6, 0xf1a0, 0x1fb2, 0xcee, 0x505d, 0x1, 0x0);
        gbc.writeMem(0x83f7, { 0x3c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x27b6, gbc.sp());
        EXPECT(0x83f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83f7));
        // 3C 0260
        gbc.setState(0x2b7b, 0x72f6, 0x5b40, 0x9632, 0xf687, 0x622d, 0x1, 0x0);
        gbc.writeMem(0x2b7b, { 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x72f6, gbc.sp());
        EXPECT(0x2b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0261
        gbc.setState(0xce67, 0xef28, 0xd750, 0xe449, 0xba4a, 0xdfef, 0x1, 0x1);
        gbc.writeMem(0xce67, { 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xef28, gbc.sp());
        EXPECT(0xce68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xce67));
        // 3C 0262
        gbc.setState(0x5054, 0x41cb, 0x6e70, 0x4ef1, 0x2e49, 0x89fd, 0x1, 0x0);
        gbc.writeMem(0x5054, { 0x3c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x41cb, gbc.sp());
        EXPECT(0x5055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0263
        gbc.setState(0x3eeb, 0x6c2b, 0x1b90, 0x2a94, 0x524f, 0x1aff, 0x0, 0x0);
        gbc.writeMem(0x3eeb, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6c2b, gbc.sp());
        EXPECT(0x3eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0264
        gbc.setState(0x904e, 0x93ba, 0xe4c0, 0xe735, 0x85f1, 0x7ee9, 0x0, 0x1);
        gbc.writeMem(0x904e, { 0x3c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x93ba, gbc.sp());
        EXPECT(0x904f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x904e));
        // 3C 0265
        gbc.setState(0x719d, 0x65ee, 0xcd50, 0x3a9, 0xc2c5, 0xc704, 0x0, 0x0);
        gbc.writeMem(0x719d, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0x719e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0266
        gbc.setState(0xc5ed, 0xf18f, 0x1f20, 0xadb5, 0xfa09, 0x1b6b, 0x0, 0x1);
        gbc.writeMem(0xc5ed, { 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf18f, gbc.sp());
        EXPECT(0xc5ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc5ed));
        // 3C 0267
        gbc.setState(0xc0a5, 0xde06, 0x150, 0x19ca, 0x759e, 0xffc1, 0x0, 0x0);
        gbc.writeMem(0xc0a5, { 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xde06, gbc.sp());
        EXPECT(0xc0a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc0a5));
        // 3C 0268
        gbc.setState(0x7826, 0xb099, 0x7e10, 0x405d, 0x6d30, 0x992f, 0x1, 0x1);
        gbc.writeMem(0x7826, { 0x3c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb099, gbc.sp());
        EXPECT(0x7827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0269
        gbc.setState(0xafcc, 0xa4ec, 0x1480, 0xf002, 0xad8b, 0x44e8, 0x1, 0x1);
        gbc.writeMem(0xafcc, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa4ec, gbc.sp());
        EXPECT(0xafcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xafcc));
        // 3C 026A
        gbc.setState(0xe957, 0xefeb, 0x39e0, 0xa29a, 0x6532, 0xa621, 0x1, 0x0);
        gbc.writeMem(0xe957, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xefeb, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe957));
        // 3C 026B
        gbc.setState(0x8d3e, 0xa3b7, 0x1a0, 0x1688, 0x361b, 0x10fc, 0x1, 0x1);
        gbc.writeMem(0x8d3e, { 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa3b7, gbc.sp());
        EXPECT(0x8d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8d3e));
        // 3C 026C
        gbc.setState(0x98f4, 0xb190, 0x7da0, 0x18eb, 0x949f, 0xca0c, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0x3c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x98f4));
        // 3C 026D
        gbc.setState(0x67ae, 0x33ed, 0x4280, 0xaf79, 0x4673, 0x5c2a, 0x1, 0x1);
        gbc.writeMem(0x67ae, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x33ed, gbc.sp());
        EXPECT(0x67af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 026E
        gbc.setState(0x76fb, 0x8fd0, 0x41b0, 0x6fed, 0x82ec, 0xe6b, 0x0, 0x0);
        gbc.writeMem(0x76fb, { 0x3c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0x76fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 026F
        gbc.setState(0xa409, 0xeb15, 0x8510, 0x844d, 0x340c, 0x97ef, 0x0, 0x0);
        gbc.writeMem(0xa409, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xeb15, gbc.sp());
        EXPECT(0xa40a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa409));
        // 3C 0270
        gbc.setState(0x3d5a, 0xde56, 0xb250, 0x2f42, 0x2514, 0x7e60, 0x1, 0x1);
        gbc.writeMem(0x3d5a, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xde56, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0271
        gbc.setState(0x8643, 0x8954, 0x5fb0, 0x6001, 0xb030, 0xe7c5, 0x1, 0x0);
        gbc.writeMem(0x8643, { 0x3c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8954, gbc.sp());
        EXPECT(0x8644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8643));
        // 3C 0272
        gbc.setState(0x52b4, 0xa8e5, 0xe2b0, 0xc2a3, 0x29e7, 0xe894, 0x0, 0x0);
        gbc.writeMem(0x52b4, { 0x3c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa8e5, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0273
        gbc.setState(0x8efe, 0x4ef2, 0x76a0, 0x5395, 0xc936, 0x5f5b, 0x1, 0x0);
        gbc.writeMem(0x8efe, { 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4ef2, gbc.sp());
        EXPECT(0x8eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8efe));
        // 3C 0274
        gbc.setState(0x411e, 0xd9ed, 0xad90, 0x36ef, 0x4075, 0x3b52, 0x1, 0x1);
        gbc.writeMem(0x411e, { 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd9ed, gbc.sp());
        EXPECT(0x411f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0275
        gbc.setState(0xe18b, 0xb938, 0xd9a0, 0x48ff, 0x47ac, 0x2ce1, 0x1, 0x0);
        gbc.writeMem(0xe18b, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0xe18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe18b));
        // 3C 0276
        gbc.setState(0xecd0, 0x2d65, 0x6970, 0x5883, 0xe05f, 0xa30b, 0x1, 0x0);
        gbc.writeMem(0xecd0, { 0x3c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0xecd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xecd0));
        // 3C 0277
        gbc.setState(0xa4f1, 0x7fac, 0x1a00, 0x16a1, 0xae8f, 0xecc9, 0x0, 0x1);
        gbc.writeMem(0xa4f1, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7fac, gbc.sp());
        EXPECT(0xa4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa4f1));
        // 3C 0278
        gbc.setState(0x1e82, 0x1260, 0xd2b0, 0x7c2b, 0x3d69, 0x1ef, 0x0, 0x0);
        gbc.writeMem(0x1e82, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0x1e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0279
        gbc.setState(0xc9d4, 0x5125, 0xcd00, 0xa68f, 0x5e49, 0xd554, 0x1, 0x0);
        gbc.writeMem(0xc9d4, { 0x3c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5125, gbc.sp());
        EXPECT(0xc9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc9d4));
        // 3C 027B
        gbc.setState(0x11f9, 0x56a2, 0x5360, 0x8882, 0x63bd, 0xbb9c, 0x1, 0x0);
        gbc.writeMem(0x11f9, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 027C
        gbc.setState(0xc389, 0x42e9, 0xc9b0, 0x2b1f, 0xa1e0, 0xa4e4, 0x1, 0x0);
        gbc.writeMem(0xc389, { 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x42e9, gbc.sp());
        EXPECT(0xc38a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc389));
        // 3C 027D
        gbc.setState(0xc17e, 0x929a, 0x27a0, 0x682b, 0x822a, 0x4dd0, 0x0, 0x1);
        gbc.writeMem(0xc17e, { 0x3c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x929a, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc17e));
        // 3C 027E
        gbc.setState(0x63f5, 0x2a4b, 0x9c90, 0x7e7, 0xdc4e, 0x5bf0, 0x1, 0x0);
        gbc.writeMem(0x63f5, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2a4b, gbc.sp());
        EXPECT(0x63f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 027F
        gbc.setState(0x1c9d, 0xd06d, 0xed00, 0xa27f, 0x90d5, 0x8faa, 0x0, 0x0);
        gbc.writeMem(0x1c9d, { 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd06d, gbc.sp());
        EXPECT(0x1c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0280
        gbc.setState(0x32c4, 0x1ad0, 0x7ff0, 0x8e9a, 0xf664, 0x4bff, 0x1, 0x0);
        gbc.writeMem(0x32c4, { 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1ad0, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0281
        gbc.setState(0x4c51, 0xeb8c, 0x4590, 0xa959, 0x9474, 0x254, 0x0, 0x1);
        gbc.writeMem(0x4c51, { 0x3c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb8c, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0282
        gbc.setState(0x4587, 0xb2b3, 0x53e0, 0x1b45, 0x732d, 0x3f9a, 0x1, 0x1);
        gbc.writeMem(0x4587, { 0x3c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb2b3, gbc.sp());
        EXPECT(0x4588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0283
        gbc.setState(0x7fe6, 0x5788, 0x9890, 0xb3be, 0x288, 0xc739, 0x0, 0x0);
        gbc.writeMem(0x7fe6, { 0x3c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5788, gbc.sp());
        EXPECT(0x7fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0284
        gbc.setState(0x482f, 0x2808, 0xee50, 0x644a, 0x2942, 0x9799, 0x0, 0x0);
        gbc.writeMem(0x482f, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x4830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0285
        gbc.setState(0x10e0, 0x60e0, 0x12b0, 0x4f73, 0x45bf, 0x397, 0x0, 0x0);
        gbc.writeMem(0x10e0, { 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x60e0, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0287
        gbc.setState(0x1206, 0x1dc6, 0xc4b0, 0xc8c3, 0x4800, 0x3524, 0x0, 0x0);
        gbc.writeMem(0x1206, { 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1dc6, gbc.sp());
        EXPECT(0x1207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0288
        gbc.setState(0xa75c, 0x4c08, 0x5600, 0xbc82, 0x72f, 0x8a4, 0x1, 0x1);
        gbc.writeMem(0xa75c, { 0x3c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4c08, gbc.sp());
        EXPECT(0xa75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa75c));
        // 3C 0289
        gbc.setState(0x7f64, 0xe7f9, 0xbaa0, 0x62f1, 0x6cc3, 0x8f0b, 0x1, 0x1);
        gbc.writeMem(0x7f64, { 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xe7f9, gbc.sp());
        EXPECT(0x7f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 028A
        gbc.setState(0xc2f3, 0x1296, 0xc6e0, 0x46a9, 0x1989, 0xeef6, 0x0, 0x0);
        gbc.writeMem(0xc2f3, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1296, gbc.sp());
        EXPECT(0xc2f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc2f3));
        // 3C 028B
        gbc.setState(0x9c4b, 0xd80, 0x6d20, 0x8c6a, 0x1ad3, 0xa2bc, 0x1, 0x0);
        gbc.writeMem(0x9c4b, { 0x3c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd80, gbc.sp());
        EXPECT(0x9c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9c4b));
        // 3C 028C
        gbc.setState(0x577b, 0x9354, 0x1aa0, 0x82f6, 0x3c2e, 0x32c8, 0x0, 0x0);
        gbc.writeMem(0x577b, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 028D
        gbc.setState(0x6d98, 0xb67c, 0xf280, 0xd6a4, 0xe658, 0xc635, 0x0, 0x1);
        gbc.writeMem(0x6d98, { 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb67c, gbc.sp());
        EXPECT(0x6d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 028E
        gbc.setState(0xb11b, 0x31b4, 0x5a80, 0x5153, 0x8d41, 0xdba8, 0x0, 0x0);
        gbc.writeMem(0xb11b, { 0x3c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb11b));
        // 3C 028F
        gbc.setState(0xa28, 0x4b63, 0x1050, 0x351a, 0xda5b, 0x32ff, 0x1, 0x1);
        gbc.writeMem(0xa28, { 0x3c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4b63, gbc.sp());
        EXPECT(0xa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0291
        gbc.setState(0x6462, 0xd0a1, 0xe9d0, 0xfae7, 0x409c, 0xddda, 0x1, 0x1);
        gbc.writeMem(0x6462, { 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd0a1, gbc.sp());
        EXPECT(0x6463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0292
        gbc.setState(0xa9d9, 0x5975, 0x4ee0, 0x7f5d, 0xbebc, 0xac2c, 0x1, 0x0);
        gbc.writeMem(0xa9d9, { 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5975, gbc.sp());
        EXPECT(0xa9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa9d9));
        // 3C 0293
        gbc.setState(0xc941, 0x6519, 0xd850, 0xc3bb, 0xcad2, 0xb8d1, 0x1, 0x1);
        gbc.writeMem(0xc941, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6519, gbc.sp());
        EXPECT(0xc942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc941));
        // 3C 0294
        gbc.setState(0x9347, 0xc00, 0x5b0, 0xa1a9, 0x9fb7, 0x5f2, 0x1, 0x0);
        gbc.writeMem(0x9347, { 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc00, gbc.sp());
        EXPECT(0x9348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9347));
        // 3C 0295
        gbc.setState(0x2ef, 0x2641, 0x80c0, 0x7611, 0x19, 0x5742, 0x0, 0x0);
        gbc.writeMem(0x2ef, { 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2641, gbc.sp());
        EXPECT(0x2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0296
        gbc.setState(0xc773, 0x5ee2, 0xf590, 0x4bd, 0x2f55, 0xf46f, 0x0, 0x0);
        gbc.writeMem(0xc773, { 0x3c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5ee2, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc773));
        // 3C 0297
        gbc.setState(0xecc9, 0x3b1b, 0x4f50, 0x3dc6, 0x594f, 0xec65, 0x1, 0x0);
        gbc.writeMem(0xecc9, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3b1b, gbc.sp());
        EXPECT(0xecca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xecc9));
        // 3C 0298
        gbc.setState(0xe921, 0x7d21, 0x3f60, 0x18f3, 0x145d, 0x9eac, 0x0, 0x0);
        gbc.writeMem(0xe921, { 0x3c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7d21, gbc.sp());
        EXPECT(0xe922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe921));
        // 3C 0299
        gbc.setState(0x2131, 0xe391, 0xf780, 0x6c34, 0x1949, 0x6108, 0x1, 0x0);
        gbc.writeMem(0x2131, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe391, gbc.sp());
        EXPECT(0x2132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 029A
        gbc.setState(0xd63b, 0x4f41, 0x92b0, 0x55a4, 0xc2e, 0x561, 0x1, 0x1);
        gbc.writeMem(0xd63b, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd63b));
        // 3C 029B
        gbc.setState(0x6fb1, 0x3d5f, 0x3e00, 0xf171, 0x8fc2, 0xc869, 0x1, 0x0);
        gbc.writeMem(0x6fb1, { 0x3c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x6fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 029C
        gbc.setState(0xdb2b, 0xa91f, 0x4e0, 0x1bd4, 0xc27, 0x5a58, 0x0, 0x1);
        gbc.writeMem(0xdb2b, { 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0xdb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdb2b));
        // 3C 029D
        gbc.setState(0x81a2, 0x6a10, 0x4bf0, 0x5736, 0x4891, 0x4160, 0x0, 0x0);
        gbc.writeMem(0x81a2, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6a10, gbc.sp());
        EXPECT(0x81a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x81a2));
        // 3C 029E
        gbc.setState(0x73f9, 0x98f9, 0x1360, 0xcaf4, 0x435, 0xba4d, 0x1, 0x1);
        gbc.writeMem(0x73f9, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x98f9, gbc.sp());
        EXPECT(0x73fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 029F
        gbc.setState(0x9d7c, 0x13cc, 0x9fd0, 0x9bb6, 0x7d0b, 0xd70, 0x0, 0x1);
        gbc.writeMem(0x9d7c, { 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x13cc, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9d7c));
        // 3C 02A0
        gbc.setState(0x3234, 0xb555, 0x8620, 0x2bdf, 0x23a8, 0x649, 0x0, 0x0);
        gbc.writeMem(0x3234, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb555, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02A1
        gbc.setState(0x271b, 0xe956, 0x6510, 0x4235, 0xfd7f, 0x2c17, 0x1, 0x0);
        gbc.writeMem(0x271b, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe956, gbc.sp());
        EXPECT(0x271c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02A2
        gbc.setState(0xe4f5, 0xcb5e, 0xdde0, 0x6a36, 0x9ae7, 0x55b2, 0x0, 0x0);
        gbc.writeMem(0xe4f5, { 0x3c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcb5e, gbc.sp());
        EXPECT(0xe4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe4f5));
        // 3C 02A3
        gbc.setState(0x3580, 0xabf4, 0x5ee0, 0x870e, 0x6f4d, 0x363e, 0x1, 0x1);
        gbc.writeMem(0x3580, { 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xabf4, gbc.sp());
        EXPECT(0x3581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02A4
        gbc.setState(0x9fe3, 0xdeb6, 0xab0, 0x2b54, 0xe7e0, 0xff9c, 0x1, 0x1);
        gbc.writeMem(0x9fe3, { 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0x9fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9fe3));
        // 3C 02A5
        gbc.setState(0xb0a5, 0x87e3, 0x11e0, 0x160d, 0x4f8f, 0x7d3c, 0x1, 0x1);
        gbc.writeMem(0xb0a5, { 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0xb0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb0a5));
        // 3C 02A6
        gbc.setState(0xca61, 0x5f53, 0xf0d0, 0xf17e, 0xb2e3, 0x7063, 0x1, 0x1);
        gbc.writeMem(0xca61, { 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5f53, gbc.sp());
        EXPECT(0xca62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xca61));
        // 3C 02A7
        gbc.setState(0x9b9d, 0x5154, 0x5710, 0x91cd, 0x2114, 0x5e92, 0x0, 0x0);
        gbc.writeMem(0x9b9d, { 0x3c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5154, gbc.sp());
        EXPECT(0x9b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9b9d));
        // 3C 02A8
        gbc.setState(0x21ae, 0xf99a, 0xa5e0, 0xaa31, 0x97a0, 0x433a, 0x1, 0x0);
        gbc.writeMem(0x21ae, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf99a, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02A9
        gbc.setState(0x217c, 0xa68e, 0xd280, 0x390d, 0x2d24, 0x1811, 0x1, 0x0);
        gbc.writeMem(0x217c, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0x217d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02AA
        gbc.setState(0xea24, 0x38e9, 0xc030, 0xae8e, 0x398f, 0x5c84, 0x1, 0x0);
        gbc.writeMem(0xea24, { 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x38e9, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xea24));
        // 3C 02AB
        gbc.setState(0x8351, 0xfd6c, 0xdfa0, 0xe8c0, 0xcb10, 0x7c10, 0x0, 0x0);
        gbc.writeMem(0x8351, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfd6c, gbc.sp());
        EXPECT(0x8352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8351));
        // 3C 02AC
        gbc.setState(0xdc9a, 0x7a45, 0x2e10, 0x55e0, 0x5015, 0xd5fc, 0x1, 0x1);
        gbc.writeMem(0xdc9a, { 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7a45, gbc.sp());
        EXPECT(0xdc9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc9a));
        // 3C 02AD
        gbc.setState(0x696c, 0x7729, 0x4790, 0xc774, 0x2b81, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x696c, { 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7729, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02AE
        gbc.setState(0x294b, 0x56, 0xd070, 0x4564, 0x5d44, 0x479d, 0x1, 0x1);
        gbc.writeMem(0x294b, { 0x3c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x56, gbc.sp());
        EXPECT(0x294c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02AF
        gbc.setState(0xd879, 0x500, 0x9af0, 0xb0a, 0x9c66, 0xfe6c, 0x0, 0x0);
        gbc.writeMem(0xd879, { 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x500, gbc.sp());
        EXPECT(0xd87a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd879));
        // 3C 02B0
        gbc.setState(0x495c, 0x1db4, 0xef60, 0x2e0f, 0x2542, 0x5f59, 0x0, 0x0);
        gbc.writeMem(0x495c, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1db4, gbc.sp());
        EXPECT(0x495d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02B1
        gbc.setState(0x513, 0xc1cd, 0x740, 0x883, 0x34b8, 0x61df, 0x0, 0x0);
        gbc.writeMem(0x513, { 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc1cd, gbc.sp());
        EXPECT(0x514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02B2
        gbc.setState(0x1710, 0x1515, 0xd390, 0xbc15, 0xe035, 0x871d, 0x1, 0x1);
        gbc.writeMem(0x1710, { 0x3c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1515, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02B3
        gbc.setState(0xea58, 0x8e25, 0x82c0, 0x78a1, 0x33f7, 0xd1b3, 0x0, 0x1);
        gbc.writeMem(0xea58, { 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8e25, gbc.sp());
        EXPECT(0xea59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xea58));
        // 3C 02B4
        gbc.setState(0xd602, 0xc8d1, 0xcbb0, 0x2119, 0x19dd, 0x8f79, 0x0, 0x1);
        gbc.writeMem(0xd602, { 0x3c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc8d1, gbc.sp());
        EXPECT(0xd603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd602));
        // 3C 02B5
        gbc.setState(0xe53e, 0xcf44, 0xa160, 0x6cbb, 0x4fc, 0x590d, 0x0, 0x1);
        gbc.writeMem(0xe53e, { 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcf44, gbc.sp());
        EXPECT(0xe53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe53e));
        // 3C 02B6
        gbc.setState(0x673, 0xb52f, 0xcf50, 0x4338, 0xa49d, 0x21a4, 0x1, 0x0);
        gbc.writeMem(0x673, { 0x3c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb52f, gbc.sp());
        EXPECT(0x674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02B7
        gbc.setState(0x78dd, 0x2c98, 0x9ca0, 0xacfb, 0x1ae2, 0x54c2, 0x0, 0x0);
        gbc.writeMem(0x78dd, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2c98, gbc.sp());
        EXPECT(0x78de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02B8
        gbc.setState(0x2886, 0xade0, 0xb0f0, 0x17fd, 0xf474, 0x424e, 0x0, 0x1);
        gbc.writeMem(0x2886, { 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xade0, gbc.sp());
        EXPECT(0x2887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02BB
        gbc.setState(0x2e3d, 0x863, 0x1bd0, 0x59cd, 0x25d2, 0x1f73, 0x1, 0x1);
        gbc.writeMem(0x2e3d, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x863, gbc.sp());
        EXPECT(0x2e3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02BC
        gbc.setState(0x3dc, 0xa284, 0xee80, 0xcf4f, 0x5eea, 0x16ff, 0x1, 0x0);
        gbc.writeMem(0x3dc, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0x3dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02BD
        gbc.setState(0x6325, 0x281, 0x9f60, 0x714, 0xc539, 0xdca0, 0x0, 0x0);
        gbc.writeMem(0x6325, { 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x281, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02BE
        gbc.setState(0xe020, 0xc203, 0xf780, 0x6cc5, 0xb8a6, 0xfa4e, 0x0, 0x0);
        gbc.writeMem(0xe020, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc203, gbc.sp());
        EXPECT(0xe021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe020));
        // 3C 02BF
        gbc.setState(0x44cf, 0xc00e, 0x470, 0x84cd, 0xbfe3, 0x6768, 0x0, 0x1);
        gbc.writeMem(0x44cf, { 0x3c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc00e, gbc.sp());
        EXPECT(0x44d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02C0
        gbc.setState(0x6b15, 0x62e7, 0x4c70, 0x5465, 0x8ce2, 0x14f1, 0x0, 0x0);
        gbc.writeMem(0x6b15, { 0x3c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x62e7, gbc.sp());
        EXPECT(0x6b16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02C1
        gbc.setState(0x6b43, 0x7cc3, 0xd560, 0x9738, 0x5db3, 0xa109, 0x1, 0x1);
        gbc.writeMem(0x6b43, { 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7cc3, gbc.sp());
        EXPECT(0x6b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02C2
        gbc.setState(0x11f3, 0xab61, 0x1c30, 0xd7db, 0x9801, 0x19e, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0x3c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xab61, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02C3
        gbc.setState(0x3a31, 0xca76, 0xa430, 0x73a8, 0x9c7c, 0xa84f, 0x0, 0x0);
        gbc.writeMem(0x3a31, { 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02C4
        gbc.setState(0xebfe, 0xa1fb, 0x8fd0, 0x4065, 0xdb6b, 0xa8a1, 0x1, 0x1);
        gbc.writeMem(0xebfe, { 0x3c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa1fb, gbc.sp());
        EXPECT(0xebff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xebfe));
        // 3C 02C5
        gbc.setState(0x296f, 0x10e7, 0xd970, 0xea92, 0x953e, 0x524e, 0x0, 0x0);
        gbc.writeMem(0x296f, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x10e7, gbc.sp());
        EXPECT(0x2970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02C6
        gbc.setState(0x4154, 0xfe86, 0xe1a0, 0x3b58, 0xe9f9, 0x331, 0x1, 0x0);
        gbc.writeMem(0x4154, { 0x3c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfe86, gbc.sp());
        EXPECT(0x4155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02C7
        gbc.setState(0x54cc, 0x1406, 0x1e00, 0xa2d8, 0x76e5, 0xd81, 0x1, 0x0);
        gbc.writeMem(0x54cc, { 0x3c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1406, gbc.sp());
        EXPECT(0x54cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02C8
        gbc.setState(0x8e9b, 0x690d, 0x7fb0, 0x53f0, 0xd431, 0xfe29, 0x1, 0x1);
        gbc.writeMem(0x8e9b, { 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x690d, gbc.sp());
        EXPECT(0x8e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8e9b));
        // 3C 02C9
        gbc.setState(0xc4f4, 0xd207, 0x6110, 0x40bf, 0x4a4a, 0xdc97, 0x1, 0x1);
        gbc.writeMem(0xc4f4, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd207, gbc.sp());
        EXPECT(0xc4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc4f4));
        // 3C 02CA
        gbc.setState(0x7d17, 0x9102, 0x1bd0, 0x2c5a, 0xd005, 0x317e, 0x1, 0x1);
        gbc.writeMem(0x7d17, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9102, gbc.sp());
        EXPECT(0x7d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02CB
        gbc.setState(0xc064, 0x72da, 0x8990, 0xb8d, 0x153f, 0xacb0, 0x0, 0x1);
        gbc.writeMem(0xc064, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x72da, gbc.sp());
        EXPECT(0xc065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc064));
        // 3C 02CD
        gbc.setState(0xd530, 0xd752, 0xf900, 0x8d13, 0x4dc4, 0x9856, 0x1, 0x1);
        gbc.writeMem(0xd530, { 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd752, gbc.sp());
        EXPECT(0xd531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd530));
        // 3C 02CE
        gbc.setState(0x1ce5, 0x1354, 0x7b80, 0x163b, 0x4552, 0xe6e, 0x1, 0x1);
        gbc.writeMem(0x1ce5, { 0x3c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1354, gbc.sp());
        EXPECT(0x1ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02CF
        gbc.setState(0x8d74, 0xe066, 0x4b30, 0x9df0, 0xe3b3, 0x8f49, 0x1, 0x0);
        gbc.writeMem(0x8d74, { 0x3c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe066, gbc.sp());
        EXPECT(0x8d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8d74));
        // 3C 02D0
        gbc.setState(0x82c3, 0xe458, 0x44f0, 0xc844, 0x8368, 0xbd1b, 0x0, 0x1);
        gbc.writeMem(0x82c3, { 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0x82c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x82c3));
        // 3C 02D1
        gbc.setState(0x6947, 0xa8c0, 0xa5c0, 0xc53a, 0x252c, 0x1796, 0x0, 0x1);
        gbc.writeMem(0x6947, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa8c0, gbc.sp());
        EXPECT(0x6948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02D2
        gbc.setState(0xe99, 0xb851, 0xc5b0, 0xda61, 0x4015, 0xe31e, 0x1, 0x1);
        gbc.writeMem(0xe99, { 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb851, gbc.sp());
        EXPECT(0xe9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02D4
        gbc.setState(0xec5f, 0x51a1, 0x56a0, 0xeb57, 0x8b3b, 0x5ac5, 0x0, 0x0);
        gbc.writeMem(0xec5f, { 0x3c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x51a1, gbc.sp());
        EXPECT(0xec60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xec5f));
        // 3C 02D5
        gbc.setState(0x4fab, 0x9f, 0xb6f0, 0x6f4a, 0xa1fd, 0x4dc, 0x1, 0x1);
        gbc.writeMem(0x4fab, { 0x3c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9f, gbc.sp());
        EXPECT(0x4fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02D6
        gbc.setState(0x11f2, 0x9abc, 0x8430, 0x11ed, 0xccb7, 0xed42, 0x0, 0x0);
        gbc.writeMem(0x11f2, { 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02D7
        gbc.setState(0x186, 0xac6f, 0x6130, 0x36e5, 0xcc52, 0x395a, 0x0, 0x0);
        gbc.writeMem(0x186, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xac6f, gbc.sp());
        EXPECT(0x187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02D9
        gbc.setState(0x8109, 0xfb0a, 0xb0f0, 0x4339, 0x7ae1, 0x1ab, 0x1, 0x0);
        gbc.writeMem(0x8109, { 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfb0a, gbc.sp());
        EXPECT(0x810a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8109));
        // 3C 02DA
        gbc.setState(0x3bde, 0xe0e3, 0x2810, 0x6d0b, 0xae37, 0x133f, 0x1, 0x1);
        gbc.writeMem(0x3bde, { 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe0e3, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02DB
        gbc.setState(0x18b1, 0x75f9, 0x2f20, 0x96c4, 0x4082, 0x8ee1, 0x1, 0x1);
        gbc.writeMem(0x18b1, { 0x3c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x75f9, gbc.sp());
        EXPECT(0x18b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02DC
        gbc.setState(0xbb43, 0x1779, 0x9cb0, 0x57a0, 0x181c, 0x2ba7, 0x0, 0x1);
        gbc.writeMem(0xbb43, { 0x3c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1779, gbc.sp());
        EXPECT(0xbb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbb43));
        // 3C 02DD
        gbc.setState(0x5ae8, 0xf99, 0x3560, 0x2828, 0xe4a3, 0xaa11, 0x0, 0x0);
        gbc.writeMem(0x5ae8, { 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf99, gbc.sp());
        EXPECT(0x5ae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02DE
        gbc.setState(0xdc2c, 0x1be3, 0x5240, 0xd107, 0xea32, 0x6d7d, 0x1, 0x0);
        gbc.writeMem(0xdc2c, { 0x3c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x1be3, gbc.sp());
        EXPECT(0xdc2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc2c));
        // 3C 02DF
        gbc.setState(0x11e7, 0x371d, 0xd8b0, 0xa0a9, 0x507f, 0x2ecb, 0x1, 0x1);
        gbc.writeMem(0x11e7, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x371d, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02E0
        gbc.setState(0x8b65, 0x9c9b, 0x1850, 0xd250, 0x69be, 0xa51c, 0x0, 0x0);
        gbc.writeMem(0x8b65, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9c9b, gbc.sp());
        EXPECT(0x8b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8b65));
        // 3C 02E1
        gbc.setState(0xbd, 0x56e5, 0x5c40, 0x75a7, 0x6a, 0x8ef2, 0x1, 0x1);
        gbc.writeMem(0xbd, { 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x56e5, gbc.sp());
        EXPECT(0xbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02E2
        gbc.setState(0x1ef4, 0xd233, 0xeeb0, 0x8580, 0x7cfe, 0x288d, 0x0, 0x0);
        gbc.writeMem(0x1ef4, { 0x3c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd233, gbc.sp());
        EXPECT(0x1ef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02E3
        gbc.setState(0xd749, 0xec09, 0xc500, 0xa726, 0x5ff1, 0x1fcf, 0x1, 0x0);
        gbc.writeMem(0xd749, { 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xec09, gbc.sp());
        EXPECT(0xd74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd749));
        // 3C 02E4
        gbc.setState(0x9ea, 0xcd75, 0xa1d0, 0xd82e, 0x1554, 0xf60c, 0x0, 0x0);
        gbc.writeMem(0x9ea, { 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xcd75, gbc.sp());
        EXPECT(0x9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02E5
        gbc.setState(0x40c3, 0x488f, 0x48d0, 0x3d52, 0xbdc5, 0x2b79, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x488f, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02E6
        gbc.setState(0x9e92, 0x34f7, 0x5090, 0xaac, 0xa816, 0xd0c1, 0x0, 0x1);
        gbc.writeMem(0x9e92, { 0x3c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x34f7, gbc.sp());
        EXPECT(0x9e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e92));
        // 3C 02E7
        gbc.setState(0xb30a, 0xdd57, 0x8930, 0xc52d, 0x4d27, 0x6e19, 0x1, 0x1);
        gbc.writeMem(0xb30a, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdd57, gbc.sp());
        EXPECT(0xb30b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb30a));
        // 3C 02E8
        gbc.setState(0x738f, 0x909f, 0xd2e0, 0xa9c1, 0x6a7d, 0xf4fd, 0x1, 0x1);
        gbc.writeMem(0x738f, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0x7390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02E9
        gbc.setState(0x27a5, 0x608e, 0x74e0, 0xeb88, 0x1468, 0x3981, 0x0, 0x0);
        gbc.writeMem(0x27a5, { 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x608e, gbc.sp());
        EXPECT(0x27a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02EA
        gbc.setState(0x40b4, 0x4fc9, 0xbd10, 0xc769, 0xac4c, 0xff6b, 0x0, 0x1);
        gbc.writeMem(0x40b4, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x40b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02EB
        gbc.setState(0x3138, 0xb254, 0x58e0, 0xcd10, 0x7524, 0x12ee, 0x0, 0x0);
        gbc.writeMem(0x3138, { 0x3c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb254, gbc.sp());
        EXPECT(0x3139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02EC
        gbc.setState(0x9e97, 0xf6df, 0x6980, 0xc96c, 0xc1be, 0x845b, 0x1, 0x1);
        gbc.writeMem(0x9e97, { 0x3c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0x9e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9e97));
        // 3C 02ED
        gbc.setState(0x5d41, 0x4fd0, 0x5980, 0x62d2, 0xf09a, 0x8e98, 0x1, 0x0);
        gbc.writeMem(0x5d41, { 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4fd0, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02EE
        gbc.setState(0x83ef, 0xefb4, 0xf420, 0x4cc1, 0x97db, 0xbfc, 0x1, 0x0);
        gbc.writeMem(0x83ef, { 0x3c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x83f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83ef));
        // 3C 02EF
        gbc.setState(0x6769, 0xe3bf, 0xff00, 0x9d2c, 0x9d5, 0x87b2, 0x1, 0x1);
        gbc.writeMem(0x6769, { 0x3c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe3bf, gbc.sp());
        EXPECT(0x676a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02F0
        gbc.setState(0x2667, 0x5a1d, 0xecd0, 0xfdb8, 0x1470, 0xb052, 0x0, 0x0);
        gbc.writeMem(0x2667, { 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5a1d, gbc.sp());
        EXPECT(0x2668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02F1
        gbc.setState(0x4246, 0x1002, 0x76c0, 0x2351, 0xef0c, 0xa0cd, 0x1, 0x0);
        gbc.writeMem(0x4246, { 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1002, gbc.sp());
        EXPECT(0x4247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02F2
        gbc.setState(0x5484, 0x36e8, 0x5450, 0xe022, 0x3c31, 0xb1be, 0x1, 0x1);
        gbc.writeMem(0x5484, { 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x36e8, gbc.sp());
        EXPECT(0x5485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02F3
        gbc.setState(0xae17, 0x7a51, 0x1380, 0x4d7e, 0x689d, 0xa2d, 0x1, 0x0);
        gbc.writeMem(0xae17, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7a51, gbc.sp());
        EXPECT(0xae18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae17));
        // 3C 02F4
        gbc.setState(0x8715, 0x5159, 0xde30, 0xe76b, 0xac85, 0xe175, 0x0, 0x0);
        gbc.writeMem(0x8715, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0x8716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8715));
        // 3C 02F5
        gbc.setState(0xdf3b, 0x3fcf, 0x54d0, 0x3181, 0x68bd, 0x7e95, 0x1, 0x0);
        gbc.writeMem(0xdf3b, { 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3fcf, gbc.sp());
        EXPECT(0xdf3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf3b));
        // 3C 02F6
        gbc.setState(0x827d, 0xdcf6, 0x9ae0, 0xa63c, 0x746e, 0xd976, 0x0, 0x1);
        gbc.writeMem(0x827d, { 0x3c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0x827e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x827d));
        // 3C 02F7
        gbc.setState(0x7361, 0x77e9, 0xe640, 0xdbfb, 0x4bd1, 0xd091, 0x0, 0x1);
        gbc.writeMem(0x7361, { 0x3c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x77e9, gbc.sp());
        EXPECT(0x7362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02F8
        gbc.setState(0x7d99, 0x8f48, 0x9020, 0xd08, 0x900a, 0x8923, 0x1, 0x0);
        gbc.writeMem(0x7d99, { 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0x7d9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 02F9
        gbc.setState(0x5334, 0x8305, 0x3e70, 0x9e74, 0xdf37, 0xd9b9, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0x3c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8305, gbc.sp());
        EXPECT(0x5335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02FA
        gbc.setState(0x55ca, 0x4330, 0x1b30, 0x8087, 0x6a5b, 0x5e89, 0x0, 0x0);
        gbc.writeMem(0x55ca, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4330, gbc.sp());
        EXPECT(0x55cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 02FC
        gbc.setState(0xebb1, 0x9504, 0xb90, 0xc781, 0xe805, 0x9818, 0x1, 0x1);
        gbc.writeMem(0xebb1, { 0x3c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9504, gbc.sp());
        EXPECT(0xebb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xebb1));
        // 3C 02FD
        gbc.setState(0x9552, 0xa83d, 0x1280, 0x16f9, 0x3aa9, 0x2fc, 0x1, 0x0);
        gbc.writeMem(0x9552, { 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9552));
        // 3C 02FE
        gbc.setState(0x4714, 0xbfa8, 0x6af0, 0xfde1, 0x29b3, 0xa43f, 0x0, 0x1);
        gbc.writeMem(0x4714, { 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0x4715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0300
        gbc.setState(0xd9fe, 0x3b1d, 0x4690, 0x270d, 0xbf59, 0xcee5, 0x0, 0x0);
        gbc.writeMem(0xd9fe, { 0x3c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0xd9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd9fe));
        // 3C 0301
        gbc.setState(0x4388, 0xf8f6, 0x1400, 0x1fe5, 0xc202, 0xcca8, 0x1, 0x0);
        gbc.writeMem(0x4388, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf8f6, gbc.sp());
        EXPECT(0x4389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0302
        gbc.setState(0xcb41, 0xd074, 0x8c30, 0xd3af, 0x431c, 0xdd6a, 0x0, 0x0);
        gbc.writeMem(0xcb41, { 0x3c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd074, gbc.sp());
        EXPECT(0xcb42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcb41));
        // 3C 0303
        gbc.setState(0x33da, 0x3ac3, 0x94b0, 0xabf9, 0x5c97, 0x608a, 0x0, 0x0);
        gbc.writeMem(0x33da, { 0x3c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3ac3, gbc.sp());
        EXPECT(0x33db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0304
        gbc.setState(0x373d, 0xf383, 0xd780, 0x1bf7, 0xb0a3, 0x7555, 0x0, 0x0);
        gbc.writeMem(0x373d, { 0x3c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf383, gbc.sp());
        EXPECT(0x373e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0305
        gbc.setState(0x831e, 0x7517, 0x8de0, 0xc193, 0x273b, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x831e, { 0x3c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0x831f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x831e));
        // 3C 0306
        gbc.setState(0xa022, 0xaf38, 0xd440, 0x914b, 0x80d3, 0xba3f, 0x1, 0x0);
        gbc.writeMem(0xa022, { 0x3c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xaf38, gbc.sp());
        EXPECT(0xa023, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa022));
        // 3C 0307
        gbc.setState(0xb07d, 0xadbe, 0x670, 0xf535, 0x2d0c, 0xe38c, 0x0, 0x1);
        gbc.writeMem(0xb07d, { 0x3c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xadbe, gbc.sp());
        EXPECT(0xb07e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb07d));
        // 3C 0308
        gbc.setState(0x6d1c, 0xf855, 0xbcc0, 0x55be, 0x6015, 0x3686, 0x0, 0x1);
        gbc.writeMem(0x6d1c, { 0x3c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf855, gbc.sp());
        EXPECT(0x6d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0309
        gbc.setState(0xeb40, 0xd772, 0x1430, 0xf476, 0xc796, 0x2f0c, 0x1, 0x1);
        gbc.writeMem(0xeb40, { 0x3c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd772, gbc.sp());
        EXPECT(0xeb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeb40));
        // 3C 030A
        gbc.setState(0xccad, 0xe686, 0x7570, 0x4942, 0x8506, 0x77a4, 0x1, 0x0);
        gbc.writeMem(0xccad, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe686, gbc.sp());
        EXPECT(0xccae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xccad));
        // 3C 030B
        gbc.setState(0xb5f1, 0x82a, 0x20d0, 0x6cb8, 0xe6f4, 0x7ab, 0x1, 0x1);
        gbc.writeMem(0xb5f1, { 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x82a, gbc.sp());
        EXPECT(0xb5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb5f1));
        // 3C 030C
        gbc.setState(0xcea8, 0xc943, 0x3070, 0x8729, 0xbded, 0x1a4, 0x1, 0x0);
        gbc.writeMem(0xcea8, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc943, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcea8));
        // 3C 030D
        gbc.setState(0xb794, 0xfe47, 0xce20, 0x3ce1, 0x8a41, 0xac2a, 0x1, 0x1);
        gbc.writeMem(0xb794, { 0x3c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfe47, gbc.sp());
        EXPECT(0xb795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb794));
        // 3C 030E
        gbc.setState(0x15f7, 0x5646, 0xde40, 0x54fe, 0x400f, 0xcbf6, 0x1, 0x1);
        gbc.writeMem(0x15f7, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5646, gbc.sp());
        EXPECT(0x15f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0310
        gbc.setState(0x891, 0xd71, 0xafa0, 0x4255, 0xc08c, 0x9dcb, 0x0, 0x1);
        gbc.writeMem(0x891, { 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0311
        gbc.setState(0x134, 0x7faf, 0x2ff0, 0xf075, 0x69c0, 0xbef1, 0x0, 0x1);
        gbc.writeMem(0x134, { 0x3c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7faf, gbc.sp());
        EXPECT(0x135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0313
        gbc.setState(0xe374, 0x7ea2, 0x9220, 0x8fea, 0x694b, 0x580, 0x1, 0x1);
        gbc.writeMem(0xe374, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7ea2, gbc.sp());
        EXPECT(0xe375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe374));
        // 3C 0314
        gbc.setState(0x79c6, 0x2320, 0x1d70, 0x5c1e, 0x798, 0x7c9a, 0x0, 0x1);
        gbc.writeMem(0x79c6, { 0x3c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2320, gbc.sp());
        EXPECT(0x79c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0315
        gbc.setState(0x9a95, 0x36ab, 0x7620, 0x8cde, 0xc515, 0x44f6, 0x1, 0x0);
        gbc.writeMem(0x9a95, { 0x3c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0x9a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9a95));
        // 3C 0316
        gbc.setState(0xb4a3, 0xe6de, 0x8420, 0xa09b, 0x44a3, 0xe72c, 0x0, 0x1);
        gbc.writeMem(0xb4a3, { 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe6de, gbc.sp());
        EXPECT(0xb4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb4a3));
        // 3C 0317
        gbc.setState(0x9144, 0xa3d1, 0x1910, 0x1f12, 0x524f, 0xd7d2, 0x0, 0x1);
        gbc.writeMem(0x9144, { 0x3c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa3d1, gbc.sp());
        EXPECT(0x9145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9144));
        // 3C 0318
        gbc.setState(0xae6f, 0x8233, 0xb060, 0x3263, 0xc44e, 0x58b1, 0x0, 0x0);
        gbc.writeMem(0xae6f, { 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8233, gbc.sp());
        EXPECT(0xae70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae6f));
        // 3C 0319
        gbc.setState(0xb10c, 0xb319, 0x1dc0, 0xb0e1, 0xabc1, 0x909e, 0x0, 0x1);
        gbc.writeMem(0xb10c, { 0x3c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb319, gbc.sp());
        EXPECT(0xb10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb10c));
        // 3C 031A
        gbc.setState(0xcf23, 0x54e5, 0x2a20, 0x9a9f, 0x4d60, 0x467, 0x1, 0x1);
        gbc.writeMem(0xcf23, { 0x3c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x54e5, gbc.sp());
        EXPECT(0xcf24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcf23));
        // 3C 031B
        gbc.setState(0x4b87, 0xb511, 0x5b0, 0x6830, 0xdf45, 0xf9ec, 0x0, 0x1);
        gbc.writeMem(0x4b87, { 0x3c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb511, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 031C
        gbc.setState(0xa081, 0xc2b7, 0xe500, 0xe7b7, 0xe456, 0x4ff2, 0x1, 0x0);
        gbc.writeMem(0xa081, { 0x3c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc2b7, gbc.sp());
        EXPECT(0xa082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa081));
        // 3C 031D
        gbc.setState(0xd606, 0xb9d9, 0xa510, 0xdca8, 0xb874, 0x94f7, 0x1, 0x1);
        gbc.writeMem(0xd606, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb9d9, gbc.sp());
        EXPECT(0xd607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd606));
        // 3C 031E
        gbc.setState(0xd0b, 0x4d15, 0x5470, 0xfecb, 0x9e88, 0x52f8, 0x0, 0x0);
        gbc.writeMem(0xd0b, { 0x3c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d15, gbc.sp());
        EXPECT(0xd0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 031F
        gbc.setState(0x70df, 0xa567, 0x86e0, 0x912f, 0x1498, 0xfca5, 0x1, 0x0);
        gbc.writeMem(0x70df, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0x70e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0320
        gbc.setState(0x4e1c, 0x1292, 0x32e0, 0x3c63, 0x776b, 0x7260, 0x1, 0x0);
        gbc.writeMem(0x4e1c, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1292, gbc.sp());
        EXPECT(0x4e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0321
        gbc.setState(0x5528, 0x1eb4, 0xa5c0, 0x90d0, 0x9091, 0xd00a, 0x0, 0x0);
        gbc.writeMem(0x5528, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0x5529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0322
        gbc.setState(0x22f6, 0x752e, 0x6400, 0xee5b, 0x6021, 0xc1bd, 0x0, 0x1);
        gbc.writeMem(0x22f6, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x752e, gbc.sp());
        EXPECT(0x22f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0323
        gbc.setState(0x5033, 0xb626, 0x6c20, 0xf821, 0x5d5, 0xcd43, 0x1, 0x0);
        gbc.writeMem(0x5033, { 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb626, gbc.sp());
        EXPECT(0x5034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0324
        gbc.setState(0x134b, 0x51d3, 0xd8e0, 0x881c, 0x6583, 0x620a, 0x0, 0x1);
        gbc.writeMem(0x134b, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x51d3, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0325
        gbc.setState(0x93d, 0x2271, 0x3d50, 0xdf7a, 0x35e4, 0x1dcf, 0x0, 0x0);
        gbc.writeMem(0x93d, { 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2271, gbc.sp());
        EXPECT(0x93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0326
        gbc.setState(0x5127, 0x913b, 0xc8b0, 0x3f7b, 0x494a, 0x4d73, 0x0, 0x1);
        gbc.writeMem(0x5127, { 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x913b, gbc.sp());
        EXPECT(0x5128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0327
        gbc.setState(0x39a0, 0xff14, 0xa930, 0x9321, 0x6df3, 0x2820, 0x1, 0x0);
        gbc.writeMem(0x39a0, { 0x3c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xff14, gbc.sp());
        EXPECT(0x39a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0328
        gbc.setState(0x10d0, 0x5864, 0xe050, 0x4bb2, 0x7bc4, 0xe916, 0x0, 0x0);
        gbc.writeMem(0x10d0, { 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0329
        gbc.setState(0x5078, 0x1e2b, 0x2900, 0x48dd, 0x9f91, 0x317e, 0x1, 0x0);
        gbc.writeMem(0x5078, { 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1e2b, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 032A
        gbc.setState(0x38f7, 0x4250, 0x8f90, 0xbe5e, 0xff02, 0x145e, 0x1, 0x1);
        gbc.writeMem(0x38f7, { 0x3c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4250, gbc.sp());
        EXPECT(0x38f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 032B
        gbc.setState(0x2a22, 0x7420, 0x7720, 0x9ff3, 0x7d6a, 0x534, 0x1, 0x0);
        gbc.writeMem(0x2a22, { 0x3c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7420, gbc.sp());
        EXPECT(0x2a23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 032C
        gbc.setState(0xb818, 0xfa99, 0xe790, 0x237a, 0xa17b, 0x73ce, 0x1, 0x1);
        gbc.writeMem(0xb818, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0xb819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb818));
        // 3C 032D
        gbc.setState(0x436b, 0xd870, 0xfb70, 0xf365, 0x3df0, 0x158b, 0x0, 0x1);
        gbc.writeMem(0x436b, { 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd870, gbc.sp());
        EXPECT(0x436c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 032F
        gbc.setState(0x70e9, 0xfd1c, 0xd980, 0xf4e6, 0xc5db, 0x28, 0x0, 0x0);
        gbc.writeMem(0x70e9, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfd1c, gbc.sp());
        EXPECT(0x70ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0331
        gbc.setState(0x82c3, 0x594a, 0xf670, 0xec48, 0x73f1, 0xe59e, 0x0, 0x1);
        gbc.writeMem(0x82c3, { 0x3c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x594a, gbc.sp());
        EXPECT(0x82c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x82c3));
        // 3C 0332
        gbc.setState(0x1ae6, 0x3c08, 0xa5a0, 0x49a1, 0xb54d, 0x66a6, 0x0, 0x0);
        gbc.writeMem(0x1ae6, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0x1ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0333
        gbc.setState(0x9c40, 0xa871, 0x1bf0, 0x8f69, 0x440d, 0x4309, 0x1, 0x1);
        gbc.writeMem(0x9c40, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0x9c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9c40));
        // 3C 0334
        gbc.setState(0xd148, 0x39c2, 0x8080, 0x30a, 0xdcf9, 0xf3dd, 0x0, 0x1);
        gbc.writeMem(0xd148, { 0x3c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x39c2, gbc.sp());
        EXPECT(0xd149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd148));
        // 3C 0335
        gbc.setState(0x1325, 0x1541, 0x5b90, 0x8915, 0x7083, 0x2380, 0x1, 0x0);
        gbc.writeMem(0x1325, { 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0x1326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0336
        gbc.setState(0xdfe3, 0x2205, 0x1250, 0x3b9e, 0xd586, 0xa718, 0x0, 0x1);
        gbc.writeMem(0xdfe3, { 0x3c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2205, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdfe3));
        // 3C 0337
        gbc.setState(0x5410, 0xdb59, 0x6a50, 0xa618, 0x10e1, 0x7335, 0x0, 0x1);
        gbc.writeMem(0x5410, { 0x3c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xdb59, gbc.sp());
        EXPECT(0x5411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0338
        gbc.setState(0x75d6, 0x5141, 0x9080, 0xb4b6, 0xf379, 0x3b22, 0x1, 0x1);
        gbc.writeMem(0x75d6, { 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5141, gbc.sp());
        EXPECT(0x75d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0339
        gbc.setState(0xef5c, 0x3fb1, 0xbef0, 0x9e71, 0x9c07, 0x3d8a, 0x1, 0x1);
        gbc.writeMem(0xef5c, { 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3fb1, gbc.sp());
        EXPECT(0xef5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xef5c));
        // 3C 033A
        gbc.setState(0xe00c, 0xbe32, 0xfba0, 0x984d, 0x12c5, 0xeb13, 0x1, 0x0);
        gbc.writeMem(0xe00c, { 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0xe00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe00c));
        // 3C 033C
        gbc.setState(0x6ce6, 0x8d82, 0x7220, 0x9564, 0x2058, 0xe681, 0x0, 0x0);
        gbc.writeMem(0x6ce6, { 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8d82, gbc.sp());
        EXPECT(0x6ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 033E
        gbc.setState(0xdb2d, 0x8802, 0x3080, 0x3b06, 0x5256, 0x146e, 0x0, 0x0);
        gbc.writeMem(0xdb2d, { 0x3c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8802, gbc.sp());
        EXPECT(0xdb2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdb2d));
        // 3C 033F
        gbc.setState(0x1a00, 0xcb6e, 0x37c0, 0x1f20, 0x3de6, 0x8c1c, 0x1, 0x1);
        gbc.writeMem(0x1a00, { 0x3c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcb6e, gbc.sp());
        EXPECT(0x1a01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0340
        gbc.setState(0x17dc, 0x49ad, 0x5ec0, 0xc78d, 0xa044, 0x3589, 0x0, 0x1);
        gbc.writeMem(0x17dc, { 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x49ad, gbc.sp());
        EXPECT(0x17dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0342
        gbc.setState(0x2049, 0x6658, 0xe810, 0xae52, 0x7525, 0x29a, 0x0, 0x0);
        gbc.writeMem(0x2049, { 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6658, gbc.sp());
        EXPECT(0x204a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0343
        gbc.setState(0xd09c, 0x9e4c, 0x1830, 0x4d0c, 0xb03d, 0xddf4, 0x0, 0x0);
        gbc.writeMem(0xd09c, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9e4c, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd09c));
        // 3C 0344
        gbc.setState(0xc8cf, 0x3271, 0x73c0, 0x355d, 0xa623, 0xfbb4, 0x1, 0x1);
        gbc.writeMem(0xc8cf, { 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3271, gbc.sp());
        EXPECT(0xc8d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc8cf));
        // 3C 0345
        gbc.setState(0xdce2, 0xba8f, 0x5940, 0x99c8, 0x295c, 0xb482, 0x0, 0x0);
        gbc.writeMem(0xdce2, { 0x3c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xba8f, gbc.sp());
        EXPECT(0xdce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdce2));
        // 3C 0347
        gbc.setState(0x5af2, 0x7390, 0xc080, 0xa58, 0xa961, 0xd625, 0x1, 0x1);
        gbc.writeMem(0x5af2, { 0x3c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7390, gbc.sp());
        EXPECT(0x5af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0348
        gbc.setState(0xea2d, 0x47c1, 0xc550, 0x5c18, 0xb8c6, 0x4ecc, 0x1, 0x1);
        gbc.writeMem(0xea2d, { 0x3c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0xea2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xea2d));
        // 3C 0349
        gbc.setState(0x6a77, 0x5421, 0xc9a0, 0xd189, 0xa8c0, 0xe7fd, 0x1, 0x1);
        gbc.writeMem(0x6a77, { 0x3c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 034A
        gbc.setState(0xb219, 0xcff3, 0xd5c0, 0xe917, 0xa6df, 0x1e22, 0x1, 0x1);
        gbc.writeMem(0xb219, { 0x3c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcff3, gbc.sp());
        EXPECT(0xb21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb219));
        // 3C 034B
        gbc.setState(0x1f21, 0x1334, 0xed10, 0xa4ae, 0xdbe9, 0xc74f, 0x1, 0x0);
        gbc.writeMem(0x1f21, { 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1334, gbc.sp());
        EXPECT(0x1f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 034C
        gbc.setState(0x14db, 0xc78a, 0xdfe0, 0x78f, 0xd7c1, 0x399b, 0x0, 0x0);
        gbc.writeMem(0x14db, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc78a, gbc.sp());
        EXPECT(0x14dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 034D
        gbc.setState(0xb1c3, 0xbdfa, 0xd260, 0x75c9, 0xb58d, 0xcb45, 0x1, 0x0);
        gbc.writeMem(0xb1c3, { 0x3c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbdfa, gbc.sp());
        EXPECT(0xb1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb1c3));
        // 3C 034E
        gbc.setState(0x2d42, 0xf42e, 0xe0e0, 0x5d0c, 0xf201, 0x6392, 0x0, 0x0);
        gbc.writeMem(0x2d42, { 0x3c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x2d43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 034F
        gbc.setState(0x4e06, 0x46e8, 0x83d0, 0xde4e, 0x43de, 0x4dce, 0x1, 0x0);
        gbc.writeMem(0x4e06, { 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x46e8, gbc.sp());
        EXPECT(0x4e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0350
        gbc.setState(0x3f22, 0x868, 0xc160, 0x547e, 0xd282, 0x9469, 0x0, 0x1);
        gbc.writeMem(0x3f22, { 0x3c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x868, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0352
        gbc.setState(0x1cf3, 0x6d10, 0x9db0, 0xc6a1, 0x1739, 0x63c2, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0x3c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6d10, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0353
        gbc.setState(0xe952, 0xcaf7, 0x29f0, 0x1968, 0x5618, 0x328f, 0x0, 0x1);
        gbc.writeMem(0xe952, { 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcaf7, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe952));
        // 3C 0354
        gbc.setState(0x494, 0x6c69, 0xece0, 0x61b0, 0xde9, 0x1382, 0x0, 0x0);
        gbc.writeMem(0x494, { 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6c69, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0355
        gbc.setState(0x110e, 0x82a4, 0x7250, 0xbca0, 0xb8ad, 0xfa04, 0x0, 0x1);
        gbc.writeMem(0x110e, { 0x3c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x82a4, gbc.sp());
        EXPECT(0x110f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0356
        gbc.setState(0xa2f6, 0x7676, 0x1f50, 0x30cd, 0xb19, 0xdba4, 0x0, 0x1);
        gbc.writeMem(0xa2f6, { 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7676, gbc.sp());
        EXPECT(0xa2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa2f6));
        // 3C 0357
        gbc.setState(0xe243, 0xa3cb, 0x5c30, 0x6606, 0xb9c8, 0x4282, 0x1, 0x0);
        gbc.writeMem(0xe243, { 0x3c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa3cb, gbc.sp());
        EXPECT(0xe244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe243));
        // 3C 0358
        gbc.setState(0x284, 0xd8fa, 0x4790, 0x83e, 0x4ae4, 0x644a, 0x1, 0x0);
        gbc.writeMem(0x284, { 0x3c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd8fa, gbc.sp());
        EXPECT(0x285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0359
        gbc.setState(0x97e9, 0xc2e2, 0xb240, 0xe012, 0x5ae9, 0x1bac, 0x0, 0x0);
        gbc.writeMem(0x97e9, { 0x3c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2e2, gbc.sp());
        EXPECT(0x97ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x97e9));
        // 3C 035A
        gbc.setState(0xf16, 0x5bb1, 0xd20, 0x1cf, 0x8ae8, 0xe216, 0x1, 0x1);
        gbc.writeMem(0xf16, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bb1, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 035B
        gbc.setState(0x30c7, 0x1a8f, 0x81a0, 0x9931, 0xc249, 0x314e, 0x1, 0x1);
        gbc.writeMem(0x30c7, { 0x3c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1a8f, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 035C
        gbc.setState(0xa8c2, 0x39d, 0x66e0, 0x8600, 0xb893, 0xd991, 0x1, 0x0);
        gbc.writeMem(0xa8c2, { 0x3c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x39d, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa8c2));
        // 3C 035E
        gbc.setState(0x54aa, 0x680, 0xc4d0, 0xd802, 0xf081, 0xda68, 0x1, 0x1);
        gbc.writeMem(0x54aa, { 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x680, gbc.sp());
        EXPECT(0x54ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 035F
        gbc.setState(0xd7be, 0x40a0, 0x3330, 0x5efd, 0xa172, 0x63cb, 0x0, 0x0);
        gbc.writeMem(0xd7be, { 0x3c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x40a0, gbc.sp());
        EXPECT(0xd7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd7be));
        // 3C 0361
        gbc.setState(0x678b, 0xb5f0, 0x1a80, 0xf5d8, 0xdaf, 0xd828, 0x1, 0x1);
        gbc.writeMem(0x678b, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb5f0, gbc.sp());
        EXPECT(0x678c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0362
        gbc.setState(0xccb, 0xfa4d, 0xb070, 0xd9ed, 0x4d2e, 0xa48a, 0x0, 0x0);
        gbc.writeMem(0xccb, { 0x3c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfa4d, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0363
        gbc.setState(0x5159, 0xf2e6, 0x8270, 0xecf3, 0x527f, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0x5159, { 0x3c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x515a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0364
        gbc.setState(0xa37, 0xc93f, 0x3b30, 0xc705, 0xf490, 0x9ae3, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0xa38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0365
        gbc.setState(0x5534, 0x1641, 0x9220, 0xd9df, 0xdba3, 0xa5c7, 0x0, 0x1);
        gbc.writeMem(0x5534, { 0x3c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x5535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0366
        gbc.setState(0x7740, 0xd5f2, 0x8760, 0x6acc, 0x56a5, 0xd978, 0x1, 0x1);
        gbc.writeMem(0x7740, { 0x3c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd5f2, gbc.sp());
        EXPECT(0x7741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0367
        gbc.setState(0xed2, 0x95c8, 0x3440, 0x9ae7, 0xce75, 0x8720, 0x1, 0x0);
        gbc.writeMem(0xed2, { 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x95c8, gbc.sp());
        EXPECT(0xed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0368
        gbc.setState(0x6b5b, 0x93a2, 0xdfe0, 0x30, 0x7ab9, 0x6680, 0x0, 0x1);
        gbc.writeMem(0x6b5b, { 0x3c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0x6b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0369
        gbc.setState(0x3fc6, 0xabb2, 0x1130, 0x5819, 0xe01f, 0x9ca6, 0x0, 0x1);
        gbc.writeMem(0x3fc6, { 0x3c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xabb2, gbc.sp());
        EXPECT(0x3fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 036B
        gbc.setState(0x2c00, 0xde19, 0xbb20, 0x3d09, 0xe416, 0x97df, 0x1, 0x1);
        gbc.writeMem(0x2c00, { 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xde19, gbc.sp());
        EXPECT(0x2c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 036C
        gbc.setState(0x5f61, 0xd678, 0xa60, 0x849, 0x9292, 0x80b8, 0x1, 0x1);
        gbc.writeMem(0x5f61, { 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd678, gbc.sp());
        EXPECT(0x5f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 036D
        gbc.setState(0x517f, 0x3590, 0xcba0, 0xb425, 0xb7ef, 0x16e8, 0x1, 0x0);
        gbc.writeMem(0x517f, { 0x3c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x3590, gbc.sp());
        EXPECT(0x5180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 036E
        gbc.setState(0x5708, 0xd12d, 0xf970, 0xcb67, 0x7532, 0x2551, 0x0, 0x1);
        gbc.writeMem(0x5708, { 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd12d, gbc.sp());
        EXPECT(0x5709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 036F
        gbc.setState(0x84ed, 0xfea3, 0x85c0, 0xa1a5, 0xce69, 0xcaf, 0x1, 0x0);
        gbc.writeMem(0x84ed, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfea3, gbc.sp());
        EXPECT(0x84ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x84ed));
        // 3C 0371
        gbc.setState(0xbd1d, 0x55e4, 0xa400, 0xcaab, 0xdae, 0x5d16, 0x0, 0x1);
        gbc.writeMem(0xbd1d, { 0x3c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x55e4, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbd1d));
        // 3C 0372
        gbc.setState(0xa5ed, 0x2ce7, 0xa140, 0xa1d9, 0xfa96, 0x1451, 0x1, 0x1);
        gbc.writeMem(0xa5ed, { 0x3c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2ce7, gbc.sp());
        EXPECT(0xa5ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa5ed));
        // 3C 0373
        gbc.setState(0x2e72, 0xbe4a, 0xe720, 0x9716, 0x5073, 0x6149, 0x1, 0x1);
        gbc.writeMem(0x2e72, { 0x3c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbe4a, gbc.sp());
        EXPECT(0x2e73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0374
        gbc.setState(0xd097, 0x466e, 0x3810, 0xf56d, 0x69f5, 0x3213, 0x0, 0x1);
        gbc.writeMem(0xd097, { 0x3c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x466e, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd097));
        // 3C 0375
        gbc.setState(0x77a0, 0xefe5, 0x2b30, 0x538f, 0x7f6, 0x9485, 0x1, 0x1);
        gbc.writeMem(0x77a0, { 0x3c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xefe5, gbc.sp());
        EXPECT(0x77a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0376
        gbc.setState(0x3a93, 0xc2aa, 0x3d40, 0xec52, 0x7681, 0xb64b, 0x0, 0x0);
        gbc.writeMem(0x3a93, { 0x3c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc2aa, gbc.sp());
        EXPECT(0x3a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0377
        gbc.setState(0x4d9b, 0xc66b, 0x61e0, 0x93f9, 0xd4db, 0xa129, 0x1, 0x1);
        gbc.writeMem(0x4d9b, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc66b, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0378
        gbc.setState(0xa380, 0xbf50, 0xe8c0, 0x6b04, 0xa979, 0x514d, 0x1, 0x1);
        gbc.writeMem(0xa380, { 0x3c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xa381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa380));
        // 3C 0379
        gbc.setState(0x8868, 0xb95a, 0x8620, 0x18bb, 0xf574, 0x7c9d, 0x0, 0x1);
        gbc.writeMem(0x8868, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0x8869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8868));
        // 3C 037A
        gbc.setState(0x6bb1, 0x13cf, 0x2e70, 0x60b8, 0xb603, 0xfb92, 0x0, 0x1);
        gbc.writeMem(0x6bb1, { 0x3c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x13cf, gbc.sp());
        EXPECT(0x6bb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 037B
        gbc.setState(0x4a58, 0x91a, 0x58b0, 0x849, 0xf798, 0x9383, 0x1, 0x0);
        gbc.writeMem(0x4a58, { 0x3c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x91a, gbc.sp());
        EXPECT(0x4a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 037C
        gbc.setState(0xe88d, 0xa20b, 0x29d0, 0x6192, 0xba3e, 0xd4ae, 0x0, 0x0);
        gbc.writeMem(0xe88d, { 0x3c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa20b, gbc.sp());
        EXPECT(0xe88e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe88d));
        // 3C 037D
        gbc.setState(0x9198, 0x4f11, 0x2840, 0xea40, 0x1a34, 0x61ef, 0x1, 0x1);
        gbc.writeMem(0x9198, { 0x3c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0x9199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9198));
        // 3C 037E
        gbc.setState(0x121d, 0xd6a4, 0x1810, 0xa9de, 0x5f59, 0xf31b, 0x1, 0x0);
        gbc.writeMem(0x121d, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd6a4, gbc.sp());
        EXPECT(0x121e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 037F
        gbc.setState(0x1a93, 0x909d, 0x5590, 0x71fc, 0xcea, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0x1a93, { 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x909d, gbc.sp());
        EXPECT(0x1a94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0380
        gbc.setState(0xc1e6, 0x15ed, 0xbb20, 0x6452, 0xe166, 0xd6b2, 0x0, 0x1);
        gbc.writeMem(0xc1e6, { 0x3c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x15ed, gbc.sp());
        EXPECT(0xc1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc1e6));
        // 3C 0381
        gbc.setState(0x5a60, 0x570f, 0x4e30, 0xbf72, 0xe165, 0x6ddb, 0x1, 0x0);
        gbc.writeMem(0x5a60, { 0x3c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x570f, gbc.sp());
        EXPECT(0x5a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0382
        gbc.setState(0xc94a, 0x1541, 0xa560, 0x3a67, 0x9909, 0x3a27, 0x1, 0x0);
        gbc.writeMem(0xc94a, { 0x3c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc94a));
        // 3C 0383
        gbc.setState(0xaa6f, 0x17d1, 0x3c80, 0xb1da, 0xabcb, 0xfba6, 0x0, 0x0);
        gbc.writeMem(0xaa6f, { 0x3c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x17d1, gbc.sp());
        EXPECT(0xaa70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaa6f));
        // 3C 0384
        gbc.setState(0xdf51, 0x201b, 0xb360, 0x251, 0xe0c9, 0x7d73, 0x1, 0x0);
        gbc.writeMem(0xdf51, { 0x3c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x201b, gbc.sp());
        EXPECT(0xdf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdf51));
        // 3C 0385
        gbc.setState(0x54e2, 0x5e0d, 0xbae0, 0xe02b, 0xc94a, 0x6326, 0x0, 0x0);
        gbc.writeMem(0x54e2, { 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5e0d, gbc.sp());
        EXPECT(0x54e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0386
        gbc.setState(0x898a, 0x6cd0, 0x20b0, 0x8a29, 0x608b, 0x6083, 0x1, 0x0);
        gbc.writeMem(0x898a, { 0x3c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6cd0, gbc.sp());
        EXPECT(0x898b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x898a));
        // 3C 0387
        gbc.setState(0x234f, 0xfec1, 0x130, 0x97c5, 0xe066, 0xec12, 0x0, 0x1);
        gbc.writeMem(0x234f, { 0x3c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfec1, gbc.sp());
        EXPECT(0x2350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 0388
        gbc.setState(0x2dab, 0x1e5c, 0xfc20, 0x5b97, 0x53d3, 0xce48, 0x0, 0x0);
        gbc.writeMem(0x2dab, { 0x3c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1e5c, gbc.sp());
        EXPECT(0x2dac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0389
        gbc.setState(0x683f, 0xc6a8, 0x65d0, 0x6baf, 0x1fcd, 0xc397, 0x1, 0x0);
        gbc.writeMem(0x683f, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc6a8, gbc.sp());
        EXPECT(0x6840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 038A
        gbc.setState(0xae24, 0x66a, 0x18a0, 0xe9d1, 0xe243, 0x77f3, 0x0, 0x1);
        gbc.writeMem(0xae24, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x66a, gbc.sp());
        EXPECT(0xae25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xae24));
        // 3C 038B
        gbc.setState(0x21c0, 0x92a6, 0x65a0, 0x1378, 0xa780, 0xdc82, 0x0, 0x0);
        gbc.writeMem(0x21c0, { 0x3c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0x21c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 038C
        gbc.setState(0x770c, 0x10cf, 0x5bb0, 0x2745, 0xac6, 0x7fe3, 0x1, 0x0);
        gbc.writeMem(0x770c, { 0x3c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x10cf, gbc.sp());
        EXPECT(0x770d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 038D
        gbc.setState(0x829a, 0x3397, 0xdeb0, 0xcb03, 0xf167, 0x398a, 0x1, 0x0);
        gbc.writeMem(0x829a, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3397, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x829a));
        // 3C 038E
        gbc.setState(0x184, 0x54dd, 0xdce0, 0xb3bc, 0x191d, 0x359c, 0x1, 0x1);
        gbc.writeMem(0x184, { 0x3c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x54dd, gbc.sp());
        EXPECT(0x185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 038F
        gbc.setState(0x39a2, 0x55c2, 0x7cc0, 0xe164, 0x1c7c, 0x433d, 0x0, 0x0);
        gbc.writeMem(0x39a2, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x55c2, gbc.sp());
        EXPECT(0x39a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0390
        gbc.setState(0xd401, 0x3e15, 0xd900, 0x7c92, 0xac11, 0x5ac1, 0x1, 0x0);
        gbc.writeMem(0xd401, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3e15, gbc.sp());
        EXPECT(0xd402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd401));
        // 3C 0391
        gbc.setState(0xeeaa, 0x6bb8, 0xc830, 0x6b9c, 0x4023, 0x1bc8, 0x0, 0x0);
        gbc.writeMem(0xeeaa, { 0x3c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6bb8, gbc.sp());
        EXPECT(0xeeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xeeaa));
        // 3C 0392
        gbc.setState(0xbae5, 0xb1c7, 0x18e0, 0x2d91, 0xe7bb, 0x32eb, 0x0, 0x1);
        gbc.writeMem(0xbae5, { 0x3c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xb1c7, gbc.sp());
        EXPECT(0xbae6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbae5));
        // 3C 0393
        gbc.setState(0xc292, 0x9276, 0x75a0, 0x417b, 0xdb19, 0xe772, 0x1, 0x0);
        gbc.writeMem(0xc292, { 0x3c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0xc293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc292));
        // 3C 0394
        gbc.setState(0xe2b6, 0x5b3b, 0x5500, 0x82f3, 0x1fcc, 0xaddd, 0x0, 0x1);
        gbc.writeMem(0xe2b6, { 0x3c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b3b, gbc.sp());
        EXPECT(0xe2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe2b6));
        // 3C 0396
        gbc.setState(0x1144, 0x306f, 0xf2a0, 0x171e, 0xf1a4, 0x52cd, 0x0, 0x0);
        gbc.writeMem(0x1144, { 0x3c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x306f, gbc.sp());
        EXPECT(0x1145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0397
        gbc.setState(0x84f1, 0xf7be, 0xd970, 0x36f8, 0x235, 0xcf71, 0x0, 0x1);
        gbc.writeMem(0x84f1, { 0x3c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf7be, gbc.sp());
        EXPECT(0x84f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x84f1));
        // 3C 0398
        gbc.setState(0xeb5, 0x72bb, 0xee0, 0x90d9, 0xe96b, 0xb884, 0x0, 0x0);
        gbc.writeMem(0xeb5, { 0x3c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x72bb, gbc.sp());
        EXPECT(0xeb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 0399
        gbc.setState(0xd150, 0x16f2, 0xa890, 0x98d1, 0x9fdc, 0x9f4b, 0x1, 0x1);
        gbc.writeMem(0xd150, { 0x3c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x16f2, gbc.sp());
        EXPECT(0xd151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd150));
        // 3C 039A
        gbc.setState(0xb9b2, 0xdb3a, 0x17e0, 0xb364, 0x9034, 0x5ee, 0x1, 0x0);
        gbc.writeMem(0xb9b2, { 0x3c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdb3a, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb9b2));
        // 3C 039B
        gbc.setState(0x1c9, 0x6cf7, 0x2f60, 0x74bd, 0xfab9, 0xb3f8, 0x0, 0x1);
        gbc.writeMem(0x1c9, { 0x3c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6cf7, gbc.sp());
        EXPECT(0x1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 039C
        gbc.setState(0x303a, 0x3453, 0xfbc0, 0x867d, 0x3aac, 0xe2b6, 0x0, 0x1);
        gbc.writeMem(0x303a, { 0x3c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x3453, gbc.sp());
        EXPECT(0x303b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 039D
        gbc.setState(0x1cc4, 0x83d3, 0x6050, 0xbc9e, 0x2cd1, 0x2129, 0x0, 0x0);
        gbc.writeMem(0x1cc4, { 0x3c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x83d3, gbc.sp());
        EXPECT(0x1cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 039E
        gbc.setState(0x578b, 0x5dc1, 0xe9d0, 0xf8ce, 0xda0, 0xf53e, 0x1, 0x0);
        gbc.writeMem(0x578b, { 0x3c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5dc1, gbc.sp());
        EXPECT(0x578c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 039F
        gbc.setState(0x2934, 0xbeaa, 0x8a30, 0x93c9, 0x27bf, 0xe845, 0x0, 0x1);
        gbc.writeMem(0x2934, { 0x3c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbeaa, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03A0
        gbc.setState(0x2a13, 0x96b8, 0x2d60, 0xb9cb, 0x84d, 0xfe61, 0x0, 0x1);
        gbc.writeMem(0x2a13, { 0x3c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x96b8, gbc.sp());
        EXPECT(0x2a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03A1
        gbc.setState(0xa1de, 0x53d3, 0x6bf0, 0x57cf, 0x5c07, 0x1569, 0x1, 0x0);
        gbc.writeMem(0xa1de, { 0x3c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x53d3, gbc.sp());
        EXPECT(0xa1df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa1de));
        // 3C 03A3
        gbc.setState(0x385a, 0x7fd1, 0x64e0, 0x99a5, 0xa8c0, 0xd428, 0x0, 0x0);
        gbc.writeMem(0x385a, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7fd1, gbc.sp());
        EXPECT(0x385b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03A4
        gbc.setState(0xbc5f, 0xdf48, 0x6c60, 0x433, 0x86f9, 0x3772, 0x1, 0x0);
        gbc.writeMem(0xbc5f, { 0x3c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf48, gbc.sp());
        EXPECT(0xbc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbc5f));
        // 3C 03A5
        gbc.setState(0xbe93, 0xbf3f, 0xb1f0, 0x7ef8, 0x644a, 0x3d3a, 0x1, 0x1);
        gbc.writeMem(0xbe93, { 0x3c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xbf3f, gbc.sp());
        EXPECT(0xbe94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xbe93));
        // 3C 03A6
        gbc.setState(0xd63b, 0xa682, 0x89e0, 0xd6b9, 0x1c14, 0xe2c8, 0x0, 0x1);
        gbc.writeMem(0xd63b, { 0x3c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa682, gbc.sp());
        EXPECT(0xd63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xd63b));
        // 3C 03A7
        gbc.setState(0x3df3, 0x2000, 0x1a20, 0x259, 0x4d82, 0x822, 0x0, 0x1);
        gbc.writeMem(0x3df3, { 0x3c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2000, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03A8
        gbc.setState(0xa4f2, 0x8df2, 0xd6a0, 0x5213, 0xfde0, 0xd28b, 0x0, 0x0);
        gbc.writeMem(0xa4f2, { 0x3c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8df2, gbc.sp());
        EXPECT(0xa4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa4f2));
        // 3C 03A9
        gbc.setState(0xb3c3, 0x1c09, 0xef70, 0x2380, 0x2ba0, 0x1b06, 0x0, 0x1);
        gbc.writeMem(0xb3c3, { 0x3c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0xb3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb3c3));
        // 3C 03AA
        gbc.setState(0x18a1, 0xc826, 0x74e0, 0xf470, 0x5914, 0x95a3, 0x0, 0x1);
        gbc.writeMem(0x18a1, { 0x3c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc826, gbc.sp());
        EXPECT(0x18a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03AB
        gbc.setState(0xc5a9, 0x5ea5, 0x5ed0, 0x34c, 0x6179, 0xbeb2, 0x1, 0x1);
        gbc.writeMem(0xc5a9, { 0x3c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5ea5, gbc.sp());
        EXPECT(0xc5aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc5a9));
        // 3C 03AC
        gbc.setState(0x3ea6, 0xa89d, 0xaf30, 0x6c63, 0xaa2d, 0x84e3, 0x0, 0x0);
        gbc.writeMem(0x3ea6, { 0x3c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa89d, gbc.sp());
        EXPECT(0x3ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03AD
        gbc.setState(0x8227, 0x5ae8, 0x1650, 0x39c1, 0x8f24, 0xa690, 0x1, 0x0);
        gbc.writeMem(0x8227, { 0x3c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5ae8, gbc.sp());
        EXPECT(0x8228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8227));
        // 3C 03AE
        gbc.setState(0xc02c, 0x3972, 0xeb80, 0x9185, 0xddbb, 0xe1bc, 0x1, 0x0);
        gbc.writeMem(0xc02c, { 0x3c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3972, gbc.sp());
        EXPECT(0xc02d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc02c));
        // 3C 03AF
        gbc.setState(0xb10b, 0x9f6, 0x720, 0x9021, 0xe750, 0x9100, 0x1, 0x1);
        gbc.writeMem(0xb10b, { 0x3c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9f6, gbc.sp());
        EXPECT(0xb10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb10b));
        // 3C 03B0
        gbc.setState(0x91ca, 0xcd11, 0xbab0, 0x6891, 0xfe57, 0x585b, 0x0, 0x1);
        gbc.writeMem(0x91ca, { 0x3c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcd11, gbc.sp());
        EXPECT(0x91cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x91ca));
        // 3C 03B1
        gbc.setState(0x58c1, 0xf6a, 0xcaf0, 0xade5, 0xc449, 0x8c21, 0x1, 0x0);
        gbc.writeMem(0x58c1, { 0x3c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf6a, gbc.sp());
        EXPECT(0x58c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03B2
        gbc.setState(0x60e2, 0xb414, 0xdef0, 0xf405, 0xeb19, 0x223b, 0x0, 0x1);
        gbc.writeMem(0x60e2, { 0x3c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0x60e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03B3
        gbc.setState(0xcb87, 0x2681, 0x3480, 0x964f, 0xdfb2, 0xb0f9, 0x1, 0x0);
        gbc.writeMem(0xcb87, { 0x3c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0xcb88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xcb87));
        // 3C 03B4
        gbc.setState(0x87bf, 0x603a, 0x4a30, 0xfe07, 0xbd0d, 0xcbc4, 0x1, 0x0);
        gbc.writeMem(0x87bf, { 0x3c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x603a, gbc.sp());
        EXPECT(0x87c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x87bf));
        // 3C 03B5
        gbc.setState(0x36ad, 0x173e, 0xada0, 0x5300, 0x4dc5, 0x3bd0, 0x0, 0x0);
        gbc.writeMem(0x36ad, { 0x3c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x173e, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03B6
        gbc.setState(0x58ee, 0xc7b8, 0xc610, 0xe92d, 0x79ec, 0xb211, 0x0, 0x0);
        gbc.writeMem(0x58ee, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc7b8, gbc.sp());
        EXPECT(0x58ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03B7
        gbc.setState(0x8983, 0xf2e5, 0x7c90, 0xa125, 0xce89, 0x3ab1, 0x0, 0x0);
        gbc.writeMem(0x8983, { 0x3c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x8984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8983));
        // 3C 03B8
        gbc.setState(0x7a8d, 0x7bfe, 0x83f0, 0x27b3, 0xbcea, 0x3445, 0x0, 0x1);
        gbc.writeMem(0x7a8d, { 0x3c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7bfe, gbc.sp());
        EXPECT(0x7a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03B9
        gbc.setState(0x6983, 0x45d, 0xec40, 0x75f5, 0x4d6c, 0x907d, 0x1, 0x1);
        gbc.writeMem(0x6983, { 0x3c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03BB
        gbc.setState(0x5895, 0xd53f, 0x9000, 0xb09d, 0x783b, 0xd5be, 0x0, 0x0);
        gbc.writeMem(0x5895, { 0x3c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd53f, gbc.sp());
        EXPECT(0x5896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03BC
        gbc.setState(0x637d, 0xb297, 0xa40, 0x4b34, 0x19da, 0x9611, 0x0, 0x1);
        gbc.writeMem(0x637d, { 0x3c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb297, gbc.sp());
        EXPECT(0x637e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03BD
        gbc.setState(0xa2d1, 0x56a2, 0x85f0, 0xec7f, 0xa5e, 0xbb12, 0x0, 0x1);
        gbc.writeMem(0xa2d1, { 0x3c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0xa2d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xa2d1));
        // 3C 03BE
        gbc.setState(0xb64a, 0xbbbc, 0xf700, 0x3c3d, 0xce4a, 0x2a90, 0x1, 0x0);
        gbc.writeMem(0xb64a, { 0x3c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xbbbc, gbc.sp());
        EXPECT(0xb64b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb64a));
        // 3C 03BF
        gbc.setState(0x8ccc, 0x59ea, 0x4880, 0x95ca, 0x1925, 0x8f51, 0x1, 0x0);
        gbc.writeMem(0x8ccc, { 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x59ea, gbc.sp());
        EXPECT(0x8ccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8ccc));
        // 3C 03C0
        gbc.setState(0x4474, 0x1c75, 0x8450, 0xa0e2, 0xf738, 0xb26, 0x0, 0x1);
        gbc.writeMem(0x4474, { 0x3c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1c75, gbc.sp());
        EXPECT(0x4475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03C1
        gbc.setState(0x4d6, 0xa406, 0x1bd0, 0x5e8, 0x480c, 0x7fc1, 0x1, 0x1);
        gbc.writeMem(0x4d6, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa406, gbc.sp());
        EXPECT(0x4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03C2
        gbc.setState(0x9dfd, 0x84d4, 0x7320, 0xff41, 0xcbc9, 0xa3b1, 0x0, 0x1);
        gbc.writeMem(0x9dfd, { 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0x9dfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9dfd));
        // 3C 03C3
        gbc.setState(0xf88, 0x6544, 0x8740, 0x8b19, 0x120d, 0xdfee, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0x3c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6544, gbc.sp());
        EXPECT(0xf89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03C4
        gbc.setState(0x6a3b, 0xcbfa, 0x200, 0xd096, 0x4cf3, 0x6a9f, 0x1, 0x1);
        gbc.writeMem(0x6a3b, { 0x3c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0x6a3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03C5
        gbc.setState(0x2102, 0x4458, 0x4fb0, 0xd14a, 0xe98e, 0x6c1d, 0x1, 0x1);
        gbc.writeMem(0x2102, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0x2103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03C6
        gbc.setState(0xa20, 0xa8e2, 0xa670, 0x3e8e, 0x7e11, 0xbcf1, 0x0, 0x1);
        gbc.writeMem(0xa20, { 0x3c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa8e2, gbc.sp());
        EXPECT(0xa21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03C7
        gbc.setState(0xaa44, 0xe7ac, 0x1330, 0x3c2c, 0xf542, 0xc6be, 0x1, 0x0);
        gbc.writeMem(0xaa44, { 0x3c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xaa44));
        // 3C 03C8
        gbc.setState(0xde57, 0x5963, 0xabd0, 0xf546, 0x2fd6, 0xcd38, 0x1, 0x0);
        gbc.writeMem(0xde57, { 0x3c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5963, gbc.sp());
        EXPECT(0xde58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xde57));
        // 3C 03C9
        gbc.setState(0xe1cb, 0xa350, 0xc650, 0x305e, 0xd51d, 0x8e36, 0x1, 0x0);
        gbc.writeMem(0xe1cb, { 0x3c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa350, gbc.sp());
        EXPECT(0xe1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe1cb));
        // 3C 03CA
        gbc.setState(0x172, 0x3428, 0xf9f0, 0x9a3b, 0x1b0f, 0xdcbb, 0x1, 0x0);
        gbc.writeMem(0x172, { 0x3c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03CB
        gbc.setState(0x84eb, 0x1d7c, 0x64e0, 0xd8e3, 0x5a02, 0xc93, 0x0, 0x1);
        gbc.writeMem(0x84eb, { 0x3c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1d7c, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x84eb));
        // 3C 03CC
        gbc.setState(0x3e35, 0x6223, 0x6120, 0xe2b8, 0x945a, 0xd800, 0x0, 0x1);
        gbc.writeMem(0x3e35, { 0x3c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6223, gbc.sp());
        EXPECT(0x3e36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03CD
        gbc.setState(0x6a6a, 0xbb91, 0x7f90, 0xc6f3, 0xabf5, 0x2cb1, 0x0, 0x1);
        gbc.writeMem(0x6a6a, { 0x3c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbb91, gbc.sp());
        EXPECT(0x6a6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03CE
        gbc.setState(0xaae, 0x7a8b, 0x73f0, 0xb6d3, 0xd27, 0xf151, 0x0, 0x1);
        gbc.writeMem(0xaae, { 0x3c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7a8b, gbc.sp());
        EXPECT(0xaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03CF
        gbc.setState(0x3a2e, 0x8cd6, 0xda40, 0xdba9, 0x231a, 0xf5cf, 0x1, 0x1);
        gbc.writeMem(0x3a2e, { 0x3c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8cd6, gbc.sp());
        EXPECT(0x3a2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03D0
        gbc.setState(0x184f, 0x1fbf, 0x44e0, 0x3ab7, 0xd5dd, 0xf, 0x0, 0x0);
        gbc.writeMem(0x184f, { 0x3c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1fbf, gbc.sp());
        EXPECT(0x1850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03D1
        gbc.setState(0x9ec3, 0x5280, 0xed00, 0x14b6, 0x8fce, 0xa27c, 0x0, 0x1);
        gbc.writeMem(0x9ec3, { 0x3c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5280, gbc.sp());
        EXPECT(0x9ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x9ec3));
        // 3C 03D3
        gbc.setState(0x8223, 0xbf3, 0xd30, 0x6eb6, 0x6fa6, 0x3712, 0x1, 0x1);
        gbc.writeMem(0x8223, { 0x3c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbf3, gbc.sp());
        EXPECT(0x8224, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8223));
        // 3C 03D4
        gbc.setState(0x3801, 0xedfd, 0x3220, 0xfc9, 0x8780, 0x7df8, 0x1, 0x0);
        gbc.writeMem(0x3801, { 0x3c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xedfd, gbc.sp());
        EXPECT(0x3802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03D6
        gbc.setState(0x3373, 0xd0d1, 0xfdd0, 0x547e, 0xb05e, 0xe81f, 0x0, 0x0);
        gbc.writeMem(0x3373, { 0x3c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd0d1, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03D7
        gbc.setState(0xb566, 0x9876, 0x9f50, 0x2835, 0xfb64, 0xa562, 0x0, 0x0);
        gbc.writeMem(0xb566, { 0x3c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9876, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb566));
        // 3C 03D8
        gbc.setState(0x94c4, 0x6d90, 0xb890, 0x4be3, 0x115f, 0xfed7, 0x0, 0x0);
        gbc.writeMem(0x94c4, { 0x3c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6d90, gbc.sp());
        EXPECT(0x94c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x94c4));
        // 3C 03D9
        gbc.setState(0x3473, 0x8aa, 0x4ff0, 0x44d5, 0x1086, 0x3506, 0x1, 0x1);
        gbc.writeMem(0x3473, { 0x3c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8aa, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03DA
        gbc.setState(0x73a9, 0x253f, 0x4260, 0x3d89, 0x9ec5, 0x169f, 0x1, 0x1);
        gbc.writeMem(0x73a9, { 0x3c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x253f, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03DB
        gbc.setState(0x81ad, 0x8419, 0x2fd0, 0x734d, 0x4643, 0x978b, 0x1, 0x1);
        gbc.writeMem(0x81ad, { 0x3c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8419, gbc.sp());
        EXPECT(0x81ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x81ad));
        // 3C 03DC
        gbc.setState(0x1ca4, 0xf1f4, 0x35c0, 0x296, 0xb651, 0x5139, 0x0, 0x0);
        gbc.writeMem(0x1ca4, { 0x3c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf1f4, gbc.sp());
        EXPECT(0x1ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03DD
        gbc.setState(0x46d9, 0x6053, 0x48c0, 0x4418, 0xd358, 0x6ad4, 0x1, 0x1);
        gbc.writeMem(0x46d9, { 0x3c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6053, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03DE
        gbc.setState(0xba26, 0xd925, 0xf0d0, 0xad59, 0x5444, 0xa3aa, 0x0, 0x1);
        gbc.writeMem(0xba26, { 0x3c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd925, gbc.sp());
        EXPECT(0xba27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xba26));
        // 3C 03DF
        gbc.setState(0x8eeb, 0xb48e, 0x1b90, 0xc368, 0xd772, 0x616c, 0x1, 0x1);
        gbc.writeMem(0x8eeb, { 0x3c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb48e, gbc.sp());
        EXPECT(0x8eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x8eeb));
        // 3C 03E0
        gbc.setState(0xb7ea, 0xb705, 0x3930, 0x49e7, 0x968c, 0xaf1f, 0x0, 0x1);
        gbc.writeMem(0xb7ea, { 0x3c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb705, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb7ea));
        // 3C 03E1
        gbc.setState(0xc10b, 0xe2a1, 0xbea0, 0x7d27, 0x72e4, 0x2bd1, 0x1, 0x1);
        gbc.writeMem(0xc10b, { 0x3c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0xc10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc10b));
        // 3C 03E2
        gbc.setState(0x5c13, 0xdf79, 0xc420, 0xb9fd, 0xce44, 0x2c1, 0x0, 0x0);
        gbc.writeMem(0x5c13, { 0x3c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdf79, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03E3
        gbc.setState(0x1c8d, 0xe5e9, 0xd1c0, 0xf177, 0xa578, 0xae9, 0x0, 0x0);
        gbc.writeMem(0x1c8d, { 0x3c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe5e9, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03E4
        gbc.setState(0x3ea9, 0x3b08, 0x8d90, 0xa80c, 0x6467, 0x40ff, 0x0, 0x1);
        gbc.writeMem(0x3ea9, { 0x3c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3b08, gbc.sp());
        EXPECT(0x3eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 3C 03E5
        gbc.setState(0x42f9, 0x95dc, 0x1fe0, 0xcc80, 0xdca9, 0xb866, 0x0, 0x0);
        gbc.writeMem(0x42f9, { 0x3c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x95dc, gbc.sp());
        EXPECT(0x42fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03E6
        gbc.setState(0x2e9e, 0xc5f2, 0x2300, 0x36b5, 0x5b87, 0x7056, 0x1, 0x0);
        gbc.writeMem(0x2e9e, { 0x3c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc5f2, gbc.sp());
        EXPECT(0x2e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 3C 03E7
        gbc.setState(0xc129, 0x106e, 0xe310, 0x31e, 0x701e, 0xe3c7, 0x0, 0x0);
        gbc.writeMem(0xc129, { 0x3c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x106e, gbc.sp());
        EXPECT(0xc12a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc129));
    }
