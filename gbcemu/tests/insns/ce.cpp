#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_ce)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_ce) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CE 0000
        gbc.setState(0x8dd6, 0xfd46, 0xfbd0, 0x7910, 0x1680, 0x766f, 0x1, 0x0);
        gbc.writeMem(0x8dd6, { 0xce, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfd46);
        EXPECT(gbc.pc(), 0x8dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dd6), 0xce);
        EXPECT(gbc.readMem(0x8dd7), 0x36);
        // CE 0001
        gbc.setState(0xd798, 0x1cfe, 0xc730, 0x94ed, 0x8066, 0x4201, 0x1, 0x0);
        gbc.writeMem(0xd798, { 0xce, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1cfe);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd798), 0xce);
        EXPECT(gbc.readMem(0xd799), 0x68);
        // CE 0002
        gbc.setState(0x55be, 0x6634, 0x55b0, 0x7551, 0x4dea, 0x3ddf, 0x0, 0x1);
        gbc.writeMem(0x55be, { 0xce, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6634);
        EXPECT(gbc.pc(), 0x55c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0003
        gbc.setState(0x2f4b, 0x5bec, 0xf80, 0xb7bf, 0xf4b6, 0x160d, 0x0, 0x0);
        gbc.writeMem(0x2f4b, { 0xce, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5bec);
        EXPECT(gbc.pc(), 0x2f4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0004
        gbc.setState(0xb98f, 0x6168, 0x7e70, 0x7683, 0xd256, 0xb13a, 0x0, 0x1);
        gbc.writeMem(0xb98f, { 0xce, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0xb991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98f), 0xce);
        EXPECT(gbc.readMem(0xb990), 0x79);
        // CE 0005
        gbc.setState(0xb0dd, 0x3817, 0x70c0, 0x11f5, 0xae86, 0x89ff, 0x0, 0x0);
        gbc.writeMem(0xb0dd, { 0xce, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3817);
        EXPECT(gbc.pc(), 0xb0df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0dd), 0xce);
        EXPECT(gbc.readMem(0xb0de), 0xf0);
        // CE 0006
        gbc.setState(0xbcf6, 0x3779, 0xadb0, 0x9efe, 0x557b, 0x27d6, 0x1, 0x1);
        gbc.writeMem(0xbcf6, { 0xce, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3779);
        EXPECT(gbc.pc(), 0xbcf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf6), 0xce);
        EXPECT(gbc.readMem(0xbcf7), 0xa1);
        // CE 0007
        gbc.setState(0xcd89, 0x463d, 0x1980, 0xc536, 0xeff4, 0xefd2, 0x1, 0x0);
        gbc.writeMem(0xcd89, { 0xce, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x463d);
        EXPECT(gbc.pc(), 0xcd8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd89), 0xce);
        EXPECT(gbc.readMem(0xcd8a), 0x11);
        // CE 0008
        gbc.setState(0x6049, 0xb3f3, 0x6050, 0x6591, 0x287c, 0xf1bf, 0x0, 0x0);
        gbc.writeMem(0x6049, { 0xce, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb3f3);
        EXPECT(gbc.pc(), 0x604b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0009
        gbc.setState(0x78f4, 0x251c, 0x8f20, 0xca8a, 0x281e, 0xc290, 0x1, 0x0);
        gbc.writeMem(0x78f4, { 0xce, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x251c);
        EXPECT(gbc.pc(), 0x78f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 000A
        gbc.setState(0x1e6, 0xdeeb, 0xcbd0, 0x236f, 0x7f6f, 0xf1bd, 0x0, 0x1);
        gbc.writeMem(0x1e6, { 0xce, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0x1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 000B
        gbc.setState(0xe32c, 0xcec0, 0xeac0, 0x4337, 0x5109, 0x9a08, 0x0, 0x1);
        gbc.writeMem(0xe32c, { 0xce, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcec0);
        EXPECT(gbc.pc(), 0xe32e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe32c), 0xce);
        EXPECT(gbc.readMem(0xe32d), 0x4);
        // CE 000C
        gbc.setState(0x90c, 0x9fcb, 0x8920, 0xe763, 0x4536, 0xf7ab, 0x1, 0x0);
        gbc.writeMem(0x90c, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9fcb);
        EXPECT(gbc.pc(), 0x90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 000D
        gbc.setState(0xa9fd, 0x28fa, 0x4800, 0x3d45, 0xfef2, 0xadc4, 0x0, 0x1);
        gbc.writeMem(0xa9fd, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x28fa);
        EXPECT(gbc.pc(), 0xa9ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fd), 0xce);
        EXPECT(gbc.readMem(0xa9fe), 0x77);
        // CE 000E
        gbc.setState(0x1f41, 0x1e0c, 0x7f30, 0x9d1, 0x1c50, 0x7d38, 0x0, 0x1);
        gbc.writeMem(0x1f41, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0x1f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 000F
        gbc.setState(0xbe98, 0xd266, 0xd730, 0x15a9, 0x8a6c, 0x80d3, 0x0, 0x1);
        gbc.writeMem(0xbe98, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd266);
        EXPECT(gbc.pc(), 0xbe9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe98), 0xce);
        EXPECT(gbc.readMem(0xbe99), 0x26);
        // CE 0011
        gbc.setState(0x100e, 0xb9cd, 0xb020, 0x6156, 0x476c, 0x8e0b, 0x1, 0x1);
        gbc.writeMem(0x100e, { 0xce, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb9cd);
        EXPECT(gbc.pc(), 0x1010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0012
        gbc.setState(0x1757, 0x372b, 0x4b70, 0xe0f6, 0xb318, 0x72d, 0x1, 0x0);
        gbc.writeMem(0x1757, { 0xce, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x372b);
        EXPECT(gbc.pc(), 0x1759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0013
        gbc.setState(0xa3f3, 0xe351, 0x9620, 0x1001, 0x8f43, 0x9233, 0x0, 0x1);
        gbc.writeMem(0xa3f3, { 0xce, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe351);
        EXPECT(gbc.pc(), 0xa3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f3), 0xce);
        EXPECT(gbc.readMem(0xa3f4), 0x8);
        // CE 0014
        gbc.setState(0x61b, 0xe368, 0xaf40, 0xe7c, 0x64a9, 0x29a2, 0x0, 0x1);
        gbc.writeMem(0x61b, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xe368);
        EXPECT(gbc.pc(), 0x61d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0015
        gbc.setState(0x81d4, 0xbf5d, 0xed90, 0xc4ba, 0x255b, 0xe181, 0x0, 0x1);
        gbc.writeMem(0x81d4, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbf5d);
        EXPECT(gbc.pc(), 0x81d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81d4), 0xce);
        EXPECT(gbc.readMem(0x81d5), 0x27);
        // CE 0016
        gbc.setState(0x34c7, 0xc0d1, 0x2e70, 0x21ff, 0xfd10, 0xcc3, 0x1, 0x0);
        gbc.writeMem(0x34c7, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc0d1);
        EXPECT(gbc.pc(), 0x34c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0017
        gbc.setState(0xda06, 0x983c, 0xf110, 0x8f9a, 0xfd64, 0x4cf7, 0x1, 0x1);
        gbc.writeMem(0xda06, { 0xce, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x983c);
        EXPECT(gbc.pc(), 0xda08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda06), 0xce);
        EXPECT(gbc.readMem(0xda07), 0x49);
        // CE 0018
        gbc.setState(0xa456, 0xd4a1, 0xa080, 0x818b, 0x2087, 0x4e99, 0x0, 0x0);
        gbc.writeMem(0xa456, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd4a1);
        EXPECT(gbc.pc(), 0xa458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa456), 0xce);
        EXPECT(gbc.readMem(0xa457), 0x3f);
        // CE 0019
        gbc.setState(0x6f89, 0xfd3b, 0x8c60, 0x5e2d, 0xe608, 0xb5b8, 0x1, 0x0);
        gbc.writeMem(0x6f89, { 0xce, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfd3b);
        EXPECT(gbc.pc(), 0x6f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 001A
        gbc.setState(0xa7dc, 0x79ca, 0xdb40, 0xda92, 0xbf4e, 0x689d, 0x1, 0x1);
        gbc.writeMem(0xa7dc, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0xa7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7dc), 0xce);
        EXPECT(gbc.readMem(0xa7dd), 0xca);
        // CE 001B
        gbc.setState(0x9f15, 0xce9, 0x9790, 0xcfa4, 0x4702, 0xbfcd, 0x0, 0x1);
        gbc.writeMem(0x9f15, { 0xce, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xce9);
        EXPECT(gbc.pc(), 0x9f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f15), 0xce);
        EXPECT(gbc.readMem(0x9f16), 0x8c);
        // CE 001C
        gbc.setState(0x977d, 0xc47b, 0x3a00, 0xd06e, 0x5e5a, 0x775f, 0x1, 0x1);
        gbc.writeMem(0x977d, { 0xce, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc47b);
        EXPECT(gbc.pc(), 0x977f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977d), 0xce);
        EXPECT(gbc.readMem(0x977e), 0x97);
        // CE 001E
        gbc.setState(0x2d52, 0x902e, 0x5b70, 0xa528, 0x428e, 0x4a4e, 0x0, 0x0);
        gbc.writeMem(0x2d52, { 0xce, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x902e);
        EXPECT(gbc.pc(), 0x2d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 001F
        gbc.setState(0xe8af, 0x686f, 0x2c60, 0x587, 0x5040, 0x481, 0x1, 0x1);
        gbc.writeMem(0xe8af, { 0xce, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x686f);
        EXPECT(gbc.pc(), 0xe8b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8af), 0xce);
        EXPECT(gbc.readMem(0xe8b0), 0x57);
        // CE 0020
        gbc.setState(0x137f, 0xf635, 0x8030, 0x85d3, 0xd330, 0x7dcc, 0x1, 0x0);
        gbc.writeMem(0x137f, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf635);
        EXPECT(gbc.pc(), 0x1381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0021
        gbc.setState(0xd7fb, 0xd240, 0xccc0, 0x505c, 0xb277, 0xac44, 0x0, 0x1);
        gbc.writeMem(0xd7fb, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd240);
        EXPECT(gbc.pc(), 0xd7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7fb), 0xce);
        EXPECT(gbc.readMem(0xd7fc), 0xdb);
        // CE 0022
        gbc.setState(0x5e80, 0x2377, 0xf8a0, 0x3a66, 0xe781, 0x1404, 0x0, 0x0);
        gbc.writeMem(0x5e80, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x2377);
        EXPECT(gbc.pc(), 0x5e82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0023
        gbc.setState(0xbdfe, 0xfcf9, 0x80c0, 0x3921, 0x3e01, 0x9141, 0x1, 0x1);
        gbc.writeMem(0xbdfe, { 0xce, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfcf9);
        EXPECT(gbc.pc(), 0xbe00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdfe), 0xce);
        EXPECT(gbc.readMem(0xbdff), 0xa7);
        // CE 0024
        gbc.setState(0xbec7, 0x14a0, 0x5bb0, 0x1814, 0xcb79, 0xf289, 0x0, 0x0);
        gbc.writeMem(0xbec7, { 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x14a0);
        EXPECT(gbc.pc(), 0xbec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec7), 0xce);
        EXPECT(gbc.readMem(0xbec8), 0x6e);
        // CE 0025
        gbc.setState(0xbd80, 0x17ed, 0x9530, 0xa0c3, 0xdc8c, 0x1142, 0x0, 0x0);
        gbc.writeMem(0xbd80, { 0xce, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x17ed);
        EXPECT(gbc.pc(), 0xbd82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd80), 0xce);
        EXPECT(gbc.readMem(0xbd81), 0xe6);
        // CE 0026
        gbc.setState(0x5dbd, 0x807, 0xc90, 0xd756, 0x61ac, 0x99fa, 0x0, 0x0);
        gbc.writeMem(0x5dbd, { 0xce, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x807);
        EXPECT(gbc.pc(), 0x5dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0027
        gbc.setState(0x2bb5, 0x1130, 0x7f00, 0x1331, 0xb4f0, 0x9c21, 0x1, 0x1);
        gbc.writeMem(0x2bb5, { 0xce, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1130);
        EXPECT(gbc.pc(), 0x2bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0028
        gbc.setState(0x3164, 0x71e4, 0x6590, 0x476f, 0xade8, 0x52da, 0x0, 0x1);
        gbc.writeMem(0x3164, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x71e4);
        EXPECT(gbc.pc(), 0x3166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0029
        gbc.setState(0x4b9b, 0x234d, 0x5370, 0x4cce, 0x94a4, 0x7fa5, 0x0, 0x0);
        gbc.writeMem(0x4b9b, { 0xce, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x234d);
        EXPECT(gbc.pc(), 0x4b9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 002A
        gbc.setState(0x621e, 0x21ce, 0xf050, 0x7464, 0xc10d, 0xdfce, 0x1, 0x0);
        gbc.writeMem(0x621e, { 0xce, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x21ce);
        EXPECT(gbc.pc(), 0x6220);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 002B
        gbc.setState(0x4173, 0x6a6f, 0xeea0, 0x38b5, 0x5b7c, 0xec53, 0x1, 0x0);
        gbc.writeMem(0x4173, { 0xce, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6a6f);
        EXPECT(gbc.pc(), 0x4175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 002C
        gbc.setState(0xe232, 0x7ab7, 0xbd80, 0x47d2, 0xdea5, 0x1b91, 0x1, 0x1);
        gbc.writeMem(0xe232, { 0xce, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7ab7);
        EXPECT(gbc.pc(), 0xe234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe232), 0xce);
        EXPECT(gbc.readMem(0xe233), 0x3c);
        // CE 002D
        gbc.setState(0x22cf, 0xd41, 0x4690, 0x6c8c, 0x5413, 0x2332, 0x1, 0x1);
        gbc.writeMem(0x22cf, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd41);
        EXPECT(gbc.pc(), 0x22d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 002E
        gbc.setState(0xa9b2, 0xbe28, 0x50e0, 0x903c, 0x1d8a, 0x6ef7, 0x0, 0x1);
        gbc.writeMem(0xa9b2, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbe28);
        EXPECT(gbc.pc(), 0xa9b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b2), 0xce);
        EXPECT(gbc.readMem(0xa9b3), 0xf8);
        // CE 002F
        gbc.setState(0xc162, 0x4a06, 0x9d20, 0xd150, 0x3bcd, 0xcfab, 0x0, 0x0);
        gbc.writeMem(0xc162, { 0xce, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4a06);
        EXPECT(gbc.pc(), 0xc164);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc162), 0xce);
        EXPECT(gbc.readMem(0xc163), 0xaf);
        // CE 0031
        gbc.setState(0xa3ed, 0x375a, 0xfbc0, 0x1734, 0x65e0, 0x471e, 0x0, 0x0);
        gbc.writeMem(0xa3ed, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x375a);
        EXPECT(gbc.pc(), 0xa3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ed), 0xce);
        EXPECT(gbc.readMem(0xa3ee), 0x5d);
        // CE 0032
        gbc.setState(0x8880, 0x27d2, 0xb290, 0xe646, 0xd5e, 0xe0a5, 0x0, 0x0);
        gbc.writeMem(0x8880, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x27d2);
        EXPECT(gbc.pc(), 0x8882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8880), 0xce);
        EXPECT(gbc.readMem(0x8881), 0xd4);
        // CE 0033
        gbc.setState(0x2d10, 0xc8c4, 0xf4d0, 0x666b, 0xe56a, 0x9eb9, 0x1, 0x1);
        gbc.writeMem(0x2d10, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc8c4);
        EXPECT(gbc.pc(), 0x2d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0034
        gbc.setState(0xd066, 0xf41f, 0xc790, 0xa75b, 0xd71b, 0x27e9, 0x0, 0x0);
        gbc.writeMem(0xd066, { 0xce, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf41f);
        EXPECT(gbc.pc(), 0xd068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd066), 0xce);
        EXPECT(gbc.readMem(0xd067), 0x4d);
        // CE 0035
        gbc.setState(0xc30f, 0xf81a, 0xb930, 0xe94d, 0xf16c, 0xd891, 0x1, 0x0);
        gbc.writeMem(0xc30f, { 0xce, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf81a);
        EXPECT(gbc.pc(), 0xc311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc30f), 0xce);
        EXPECT(gbc.readMem(0xc310), 0x21);
        // CE 0036
        gbc.setState(0xc243, 0x5c4d, 0xea50, 0x1d56, 0xffc7, 0xd21b, 0x0, 0x0);
        gbc.writeMem(0xc243, { 0xce, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x5c4d);
        EXPECT(gbc.pc(), 0xc245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc243), 0xce);
        EXPECT(gbc.readMem(0xc244), 0xe4);
        // CE 0037
        gbc.setState(0x7558, 0x5589, 0xd950, 0x28ef, 0x3504, 0x551d, 0x1, 0x0);
        gbc.writeMem(0x7558, { 0xce, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5589);
        EXPECT(gbc.pc(), 0x755a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0038
        gbc.setState(0x3b9b, 0xd03d, 0x93a0, 0x7357, 0xb469, 0xcdca, 0x1, 0x1);
        gbc.writeMem(0x3b9b, { 0xce, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd03d);
        EXPECT(gbc.pc(), 0x3b9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 003A
        gbc.setState(0x54a1, 0x6809, 0xc410, 0x1b29, 0xedbf, 0x496b, 0x0, 0x1);
        gbc.writeMem(0x54a1, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6809);
        EXPECT(gbc.pc(), 0x54a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 003B
        gbc.setState(0x335d, 0x58a4, 0x7160, 0x5f17, 0xd06f, 0xf673, 0x0, 0x1);
        gbc.writeMem(0x335d, { 0xce, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x58a4);
        EXPECT(gbc.pc(), 0x335f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 003C
        gbc.setState(0xd76e, 0xcc5d, 0x7f0, 0x6a2f, 0xfbe, 0xf59e, 0x0, 0x1);
        gbc.writeMem(0xd76e, { 0xce, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcc5d);
        EXPECT(gbc.pc(), 0xd770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76e), 0xce);
        EXPECT(gbc.readMem(0xd76f), 0x34);
        // CE 003E
        gbc.setState(0x3968, 0x3d5d, 0xb0c0, 0x295b, 0xde1c, 0xe361, 0x0, 0x1);
        gbc.writeMem(0x3968, { 0xce, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3d5d);
        EXPECT(gbc.pc(), 0x396a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 003F
        gbc.setState(0x398f, 0x9413, 0xcd70, 0x95df, 0x3a82, 0xe9de, 0x0, 0x0);
        gbc.writeMem(0x398f, { 0xce, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x9413);
        EXPECT(gbc.pc(), 0x3991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0040
        gbc.setState(0x8c61, 0x28f2, 0x230, 0xcaee, 0x14a6, 0xe910, 0x1, 0x0);
        gbc.writeMem(0x8c61, { 0xce, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x28f2);
        EXPECT(gbc.pc(), 0x8c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c61), 0xce);
        EXPECT(gbc.readMem(0x8c62), 0x51);
        // CE 0042
        gbc.setState(0x5f23, 0xffeb, 0xd830, 0x32b2, 0x7a60, 0x86, 0x0, 0x1);
        gbc.writeMem(0x5f23, { 0xce, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xffeb);
        EXPECT(gbc.pc(), 0x5f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0043
        gbc.setState(0xedd3, 0x5f08, 0xd830, 0xdf8f, 0x1cd5, 0x90d1, 0x1, 0x1);
        gbc.writeMem(0xedd3, { 0xce, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5f08);
        EXPECT(gbc.pc(), 0xedd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd3), 0xce);
        EXPECT(gbc.readMem(0xedd4), 0x70);
        // CE 0044
        gbc.setState(0x85a3, 0xa6a9, 0x3690, 0x164c, 0x41c4, 0x7d30, 0x0, 0x1);
        gbc.writeMem(0x85a3, { 0xce, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa6a9);
        EXPECT(gbc.pc(), 0x85a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a3), 0xce);
        EXPECT(gbc.readMem(0x85a4), 0x1b);
        // CE 0045
        gbc.setState(0x8e4a, 0xcdad, 0x5db0, 0xd63f, 0x1c50, 0xcfc, 0x0, 0x1);
        gbc.writeMem(0x8e4a, { 0xce, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xcdad);
        EXPECT(gbc.pc(), 0x8e4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e4a), 0xce);
        EXPECT(gbc.readMem(0x8e4b), 0xf);
        // CE 0046
        gbc.setState(0x90e9, 0x26e9, 0x2f20, 0x8e73, 0x2e01, 0x46ca, 0x0, 0x0);
        gbc.writeMem(0x90e9, { 0xce, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x26e9);
        EXPECT(gbc.pc(), 0x90eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e9), 0xce);
        EXPECT(gbc.readMem(0x90ea), 0x35);
        // CE 0047
        gbc.setState(0x733f, 0x5024, 0xe680, 0xb6b, 0x28d3, 0x7a54, 0x1, 0x1);
        gbc.writeMem(0x733f, { 0xce, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5024);
        EXPECT(gbc.pc(), 0x7341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0048
        gbc.setState(0x943b, 0x7e2e, 0x6370, 0x21e0, 0xd514, 0x7c7f, 0x0, 0x1);
        gbc.writeMem(0x943b, { 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7e2e);
        EXPECT(gbc.pc(), 0x943d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943b), 0xce);
        EXPECT(gbc.readMem(0x943c), 0x88);
        // CE 0049
        gbc.setState(0xc97e, 0x97e7, 0x2cb0, 0xb8b8, 0x5787, 0xb291, 0x1, 0x0);
        gbc.writeMem(0xc97e, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x97e7);
        EXPECT(gbc.pc(), 0xc980);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc97e), 0xce);
        EXPECT(gbc.readMem(0xc97f), 0xbf);
        // CE 004A
        gbc.setState(0xdf3e, 0x414b, 0x2950, 0x8a93, 0xa25e, 0x60e2, 0x0, 0x1);
        gbc.writeMem(0xdf3e, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x414b);
        EXPECT(gbc.pc(), 0xdf40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf3e), 0xce);
        EXPECT(gbc.readMem(0xdf3f), 0xac);
        // CE 004B
        gbc.setState(0xbe9c, 0xc7b8, 0x67d0, 0x2bbf, 0x4407, 0x7ad1, 0x1, 0x0);
        gbc.writeMem(0xbe9c, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc7b8);
        EXPECT(gbc.pc(), 0xbe9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9c), 0xce);
        EXPECT(gbc.readMem(0xbe9d), 0x1a);
        // CE 004C
        gbc.setState(0x4d4b, 0xe128, 0xb1e0, 0x1063, 0xefa2, 0xa1c5, 0x1, 0x1);
        gbc.writeMem(0x4d4b, { 0xce, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe128);
        EXPECT(gbc.pc(), 0x4d4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 004D
        gbc.setState(0xad29, 0xc24d, 0xd0e0, 0x461b, 0xcb72, 0xa7dc, 0x0, 0x0);
        gbc.writeMem(0xad29, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc24d);
        EXPECT(gbc.pc(), 0xad2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad29), 0xce);
        EXPECT(gbc.readMem(0xad2a), 0xca);
        // CE 004E
        gbc.setState(0x4be0, 0x5fff, 0x7e80, 0xa6a1, 0x7001, 0xd490, 0x1, 0x0);
        gbc.writeMem(0x4be0, { 0xce, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5fff);
        EXPECT(gbc.pc(), 0x4be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 004F
        gbc.setState(0xbf26, 0x604a, 0xa50, 0xd757, 0x6456, 0xcf53, 0x0, 0x1);
        gbc.writeMem(0xbf26, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x604a);
        EXPECT(gbc.pc(), 0xbf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf26), 0xce);
        EXPECT(gbc.readMem(0xbf27), 0xce);
        // CE 0050
        gbc.setState(0xb947, 0x8295, 0x27b0, 0xc4f0, 0xcf4a, 0x4c9b, 0x1, 0x0);
        gbc.writeMem(0xb947, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8295);
        EXPECT(gbc.pc(), 0xb949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb947), 0xce);
        EXPECT(gbc.readMem(0xb948), 0xe9);
        // CE 0051
        gbc.setState(0x3c2d, 0xc5ab, 0x1c80, 0xad9, 0xa85a, 0x56a1, 0x0, 0x0);
        gbc.writeMem(0x3c2d, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc5ab);
        EXPECT(gbc.pc(), 0x3c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0052
        gbc.setState(0x16ec, 0xb041, 0x7e70, 0x59dc, 0x68b9, 0xa10f, 0x0, 0x0);
        gbc.writeMem(0x16ec, { 0xce, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb041);
        EXPECT(gbc.pc(), 0x16ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0053
        gbc.setState(0xccc3, 0x64c2, 0xca60, 0x560c, 0xc01a, 0x3114, 0x0, 0x0);
        gbc.writeMem(0xccc3, { 0xce, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x64c2);
        EXPECT(gbc.pc(), 0xccc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccc3), 0xce);
        EXPECT(gbc.readMem(0xccc4), 0x65);
        // CE 0054
        gbc.setState(0x41b5, 0x8a84, 0xf300, 0xaca, 0x843e, 0xf140, 0x0, 0x0);
        gbc.writeMem(0x41b5, { 0xce, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8a84);
        EXPECT(gbc.pc(), 0x41b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0055
        gbc.setState(0x804c, 0xa32a, 0xd3e0, 0xb612, 0x7455, 0x9051, 0x1, 0x0);
        gbc.writeMem(0x804c, { 0xce, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa32a);
        EXPECT(gbc.pc(), 0x804e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x804c), 0xce);
        EXPECT(gbc.readMem(0x804d), 0x69);
        // CE 0057
        gbc.setState(0xb58c, 0xad1f, 0xcdd0, 0xbd90, 0x8005, 0x491a, 0x0, 0x1);
        gbc.writeMem(0xb58c, { 0xce, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xad1f);
        EXPECT(gbc.pc(), 0xb58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58c), 0xce);
        EXPECT(gbc.readMem(0xb58d), 0x39);
        // CE 0058
        gbc.setState(0x5ea8, 0x9d96, 0x57b0, 0xb797, 0xfb07, 0xdfe7, 0x0, 0x1);
        gbc.writeMem(0x5ea8, { 0xce, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9d96);
        EXPECT(gbc.pc(), 0x5eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 005A
        gbc.setState(0x9196, 0xdcd5, 0xe480, 0x3333, 0x938, 0xbf6a, 0x0, 0x0);
        gbc.writeMem(0x9196, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdcd5);
        EXPECT(gbc.pc(), 0x9198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9196), 0xce);
        EXPECT(gbc.readMem(0x9197), 0xb4);
        // CE 005B
        gbc.setState(0x3e54, 0x3781, 0x6cd0, 0xd023, 0xd427, 0x617, 0x1, 0x1);
        gbc.writeMem(0x3e54, { 0xce, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3781);
        EXPECT(gbc.pc(), 0x3e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 005C
        gbc.setState(0xb6ce, 0x3cdd, 0xf560, 0xb9aa, 0x79c9, 0x593d, 0x0, 0x1);
        gbc.writeMem(0xb6ce, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3cdd);
        EXPECT(gbc.pc(), 0xb6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6ce), 0xce);
        EXPECT(gbc.readMem(0xb6cf), 0x3a);
        // CE 005D
        gbc.setState(0xa5ef, 0x5261, 0x8cf0, 0x9603, 0x6aba, 0x8d99, 0x0, 0x1);
        gbc.writeMem(0xa5ef, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5261);
        EXPECT(gbc.pc(), 0xa5f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ef), 0xce);
        EXPECT(gbc.readMem(0xa5f0), 0xeb);
        // CE 005E
        gbc.setState(0xba23, 0x37c9, 0x2aa0, 0x506, 0x1abc, 0xb2f2, 0x1, 0x0);
        gbc.writeMem(0xba23, { 0xce, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x37c9);
        EXPECT(gbc.pc(), 0xba25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba23), 0xce);
        EXPECT(gbc.readMem(0xba24), 0xe3);
        // CE 005F
        gbc.setState(0xe4, 0x4b10, 0xdda0, 0x1838, 0x540c, 0xb073, 0x0, 0x0);
        gbc.writeMem(0xe4, { 0xce, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4b10);
        EXPECT(gbc.pc(), 0xe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0060
        gbc.setState(0xc1ae, 0xad91, 0x7640, 0xfd6e, 0x2562, 0x8c04, 0x1, 0x0);
        gbc.writeMem(0xc1ae, { 0xce, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xad91);
        EXPECT(gbc.pc(), 0xc1b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ae), 0xce);
        EXPECT(gbc.readMem(0xc1af), 0x19);
        // CE 0061
        gbc.setState(0xb6eb, 0x6290, 0x4000, 0x6e74, 0xee30, 0xdfa4, 0x1, 0x0);
        gbc.writeMem(0xb6eb, { 0xce, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0xb6ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6eb), 0xce);
        EXPECT(gbc.readMem(0xb6ec), 0x54);
        // CE 0062
        gbc.setState(0xef57, 0xf494, 0x8f80, 0x98a8, 0xec1f, 0x1cf2, 0x0, 0x1);
        gbc.writeMem(0xef57, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0xef59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef57), 0xce);
        EXPECT(gbc.readMem(0xef58), 0xe9);
        // CE 0063
        gbc.setState(0x164a, 0x9b13, 0xc350, 0x1463, 0x9ff0, 0x92fd, 0x0, 0x1);
        gbc.writeMem(0x164a, { 0xce, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9b13);
        EXPECT(gbc.pc(), 0x164c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0065
        gbc.setState(0x379a, 0xa966, 0xd710, 0x6010, 0x80a2, 0x3c8b, 0x0, 0x0);
        gbc.writeMem(0x379a, { 0xce, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa966);
        EXPECT(gbc.pc(), 0x379c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0066
        gbc.setState(0x34b7, 0x1414, 0x39d0, 0xb2ac, 0x7ac4, 0xbc66, 0x1, 0x0);
        gbc.writeMem(0x34b7, { 0xce, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1414);
        EXPECT(gbc.pc(), 0x34b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0067
        gbc.setState(0x7b22, 0xf23a, 0x1090, 0x4e22, 0x8f50, 0xe13e, 0x0, 0x1);
        gbc.writeMem(0x7b22, { 0xce, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xf23a);
        EXPECT(gbc.pc(), 0x7b24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0068
        gbc.setState(0x4190, 0x3e7, 0xc730, 0xdbe1, 0x6352, 0x3, 0x0, 0x0);
        gbc.writeMem(0x4190, { 0xce, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3e7);
        EXPECT(gbc.pc(), 0x4192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0069
        gbc.setState(0x1ef3, 0x11e, 0xccd0, 0x8839, 0x4615, 0x4083, 0x1, 0x0);
        gbc.writeMem(0x1ef3, { 0xce, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x11e);
        EXPECT(gbc.pc(), 0x1ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 006A
        gbc.setState(0xceb8, 0xaee7, 0xea20, 0xb122, 0x4410, 0x5b46, 0x1, 0x1);
        gbc.writeMem(0xceb8, { 0xce, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xaee7);
        EXPECT(gbc.pc(), 0xceba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceb8), 0xce);
        EXPECT(gbc.readMem(0xceb9), 0x15);
        // CE 006B
        gbc.setState(0xd8f3, 0xd065, 0x1490, 0x43e3, 0x760a, 0x78cf, 0x0, 0x1);
        gbc.writeMem(0xd8f3, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd065);
        EXPECT(gbc.pc(), 0xd8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8f3), 0xce);
        EXPECT(gbc.readMem(0xd8f4), 0xd9);
        // CE 006C
        gbc.setState(0xeea, 0xabd3, 0x65a0, 0x9a36, 0xaa00, 0xfd6d, 0x1, 0x1);
        gbc.writeMem(0xeea, { 0xce, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0xeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 006D
        gbc.setState(0x464a, 0x6fd2, 0xd230, 0x7aad, 0x75e9, 0xc6ce, 0x1, 0x0);
        gbc.writeMem(0x464a, { 0xce, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x6fd2);
        EXPECT(gbc.pc(), 0x464c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 006E
        gbc.setState(0xe75, 0x102a, 0xfa0, 0x4e1d, 0xda94, 0x4a63, 0x1, 0x0);
        gbc.writeMem(0xe75, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x102a);
        EXPECT(gbc.pc(), 0xe77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0070
        gbc.setState(0xcac, 0x1e2e, 0xf970, 0x440d, 0x25c8, 0x8c6, 0x1, 0x0);
        gbc.writeMem(0xcac, { 0xce, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1e2e);
        EXPECT(gbc.pc(), 0xcae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0071
        gbc.setState(0x8c71, 0xc882, 0x9150, 0x665d, 0x76f5, 0x186f, 0x0, 0x1);
        gbc.writeMem(0x8c71, { 0xce, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc882);
        EXPECT(gbc.pc(), 0x8c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c71), 0xce);
        EXPECT(gbc.readMem(0x8c72), 0xad);
        // CE 0072
        gbc.setState(0x99d0, 0xe7bb, 0x43b0, 0x43fd, 0x30ea, 0x1630, 0x1, 0x1);
        gbc.writeMem(0x99d0, { 0xce, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe7bb);
        EXPECT(gbc.pc(), 0x99d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d0), 0xce);
        EXPECT(gbc.readMem(0x99d1), 0x2);
        // CE 0073
        gbc.setState(0x55b1, 0x9925, 0x8330, 0xf4e7, 0xb843, 0x53cb, 0x1, 0x1);
        gbc.writeMem(0x55b1, { 0xce, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9925);
        EXPECT(gbc.pc(), 0x55b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0074
        gbc.setState(0x6c3, 0x385e, 0xdd40, 0xb1ed, 0xe218, 0x9f3e, 0x1, 0x0);
        gbc.writeMem(0x6c3, { 0xce, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x385e);
        EXPECT(gbc.pc(), 0x6c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0075
        gbc.setState(0xd5de, 0xa9ae, 0x35f0, 0xe83d, 0xe0cd, 0x793a, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xce, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa9ae);
        EXPECT(gbc.pc(), 0xd5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5de), 0xce);
        EXPECT(gbc.readMem(0xd5df), 0x42);
        // CE 0076
        gbc.setState(0xb586, 0x9c14, 0x2ea0, 0xe113, 0xdbe3, 0x6948, 0x1, 0x1);
        gbc.writeMem(0xb586, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9c14);
        EXPECT(gbc.pc(), 0xb588);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb586), 0xce);
        EXPECT(gbc.readMem(0xb587), 0xa6);
        // CE 0077
        gbc.setState(0x41d4, 0xee5a, 0x9580, 0x14f0, 0xe539, 0x22c7, 0x0, 0x0);
        gbc.writeMem(0x41d4, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0x41d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0078
        gbc.setState(0x622a, 0xa63e, 0xd30, 0xd966, 0x390b, 0xd57f, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0xce, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa63e);
        EXPECT(gbc.pc(), 0x622c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0079
        gbc.setState(0x1bfe, 0x5b6, 0xdad0, 0x2b44, 0x1ce, 0x6c65, 0x1, 0x1);
        gbc.writeMem(0x1bfe, { 0xce, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5b6);
        EXPECT(gbc.pc(), 0x1c00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 007A
        gbc.setState(0x52bb, 0x54a7, 0x5cb0, 0x3c6a, 0x6ae2, 0xb91, 0x1, 0x0);
        gbc.writeMem(0x52bb, { 0xce, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x54a7);
        EXPECT(gbc.pc(), 0x52bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 007B
        gbc.setState(0x77ac, 0x4cc3, 0x1b30, 0xd2d0, 0xb898, 0x5310, 0x1, 0x1);
        gbc.writeMem(0x77ac, { 0xce, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4cc3);
        EXPECT(gbc.pc(), 0x77ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 007D
        gbc.setState(0x49a5, 0x46d7, 0x3310, 0x7c9b, 0x3d7f, 0x8fcb, 0x0, 0x0);
        gbc.writeMem(0x49a5, { 0xce, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x46d7);
        EXPECT(gbc.pc(), 0x49a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 007E
        gbc.setState(0x690f, 0x1e83, 0x1510, 0x7310, 0x1d30, 0x7d4e, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x1e83);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 007F
        gbc.setState(0x2c1e, 0x3d23, 0xb490, 0xe9ae, 0x7fcf, 0xf5dd, 0x1, 0x1);
        gbc.writeMem(0x2c1e, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3d23);
        EXPECT(gbc.pc(), 0x2c20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0080
        gbc.setState(0x1a57, 0x2566, 0x6fe0, 0xbf11, 0x95f1, 0x15f9, 0x1, 0x0);
        gbc.writeMem(0x1a57, { 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2566);
        EXPECT(gbc.pc(), 0x1a59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0081
        gbc.setState(0x36f0, 0xe109, 0x2650, 0xca51, 0x2e2c, 0xf500, 0x1, 0x1);
        gbc.writeMem(0x36f0, { 0xce, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe109);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0082
        gbc.setState(0xebe7, 0xe583, 0xb910, 0x689f, 0xd3ad, 0x32fb, 0x0, 0x0);
        gbc.writeMem(0xebe7, { 0xce, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xe583);
        EXPECT(gbc.pc(), 0xebe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebe7), 0xce);
        EXPECT(gbc.readMem(0xebe8), 0x49);
        // CE 0083
        gbc.setState(0x4915, 0xf1f6, 0x81e0, 0xcb48, 0xbda6, 0x9deb, 0x1, 0x0);
        gbc.writeMem(0x4915, { 0xce, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf1f6);
        EXPECT(gbc.pc(), 0x4917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0084
        gbc.setState(0x5793, 0xd40d, 0x5220, 0x6767, 0x1ce, 0x855, 0x0, 0x0);
        gbc.writeMem(0x5793, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd40d);
        EXPECT(gbc.pc(), 0x5795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0085
        gbc.setState(0x3ad5, 0x2cab, 0x8400, 0xe906, 0x87f8, 0xc325, 0x1, 0x0);
        gbc.writeMem(0x3ad5, { 0xce, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x2cab);
        EXPECT(gbc.pc(), 0x3ad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0086
        gbc.setState(0x7b02, 0xb66, 0x8b90, 0x6634, 0xd202, 0x51e7, 0x1, 0x1);
        gbc.writeMem(0x7b02, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb66);
        EXPECT(gbc.pc(), 0x7b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0087
        gbc.setState(0xdc35, 0x4b84, 0xda80, 0xb83a, 0xaa9a, 0x60a, 0x0, 0x0);
        gbc.writeMem(0xdc35, { 0xce, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4b84);
        EXPECT(gbc.pc(), 0xdc37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc35), 0xce);
        EXPECT(gbc.readMem(0xdc36), 0xd1);
        // CE 0088
        gbc.setState(0xdeea, 0xe584, 0x1920, 0xc633, 0x7072, 0x99f4, 0x1, 0x0);
        gbc.writeMem(0xdeea, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe584);
        EXPECT(gbc.pc(), 0xdeec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeea), 0xce);
        EXPECT(gbc.readMem(0xdeeb), 0x95);
        // CE 0089
        gbc.setState(0xa949, 0xbf73, 0x9e80, 0xd668, 0x78c4, 0x8db9, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0xce, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xbf73);
        EXPECT(gbc.pc(), 0xa94b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa949), 0xce);
        EXPECT(gbc.readMem(0xa94a), 0x4);
        // CE 008A
        gbc.setState(0x73a7, 0xdfde, 0xd1f0, 0x8acf, 0x6e35, 0x2d80, 0x1, 0x0);
        gbc.writeMem(0x73a7, { 0xce, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xdfde);
        EXPECT(gbc.pc(), 0x73a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 008B
        gbc.setState(0xbfd6, 0x4142, 0x52a0, 0x4181, 0x9dc, 0xbf6e, 0x1, 0x1);
        gbc.writeMem(0xbfd6, { 0xce, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4142);
        EXPECT(gbc.pc(), 0xbfd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfd6), 0xce);
        EXPECT(gbc.readMem(0xbfd7), 0xd3);
        // CE 008C
        gbc.setState(0xbeac, 0x4942, 0xaa50, 0xc4c9, 0x298a, 0xb3c9, 0x0, 0x0);
        gbc.writeMem(0xbeac, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4942);
        EXPECT(gbc.pc(), 0xbeae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbeac), 0xce);
        EXPECT(gbc.readMem(0xbead), 0x73);
        // CE 008D
        gbc.setState(0x6d44, 0x91b7, 0x1ab0, 0xb96, 0x9c46, 0x66d3, 0x0, 0x1);
        gbc.writeMem(0x6d44, { 0xce, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x91b7);
        EXPECT(gbc.pc(), 0x6d46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 008E
        gbc.setState(0x334a, 0xee41, 0x9920, 0x5b05, 0x677c, 0xb63e, 0x1, 0x0);
        gbc.writeMem(0x334a, { 0xce, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xee41);
        EXPECT(gbc.pc(), 0x334c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 008F
        gbc.setState(0x1d73, 0x8aef, 0x1ad0, 0xf583, 0xd68b, 0xab4d, 0x1, 0x1);
        gbc.writeMem(0x1d73, { 0xce, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x8aef);
        EXPECT(gbc.pc(), 0x1d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0090
        gbc.setState(0xbf26, 0xecf7, 0x89a0, 0x5409, 0x897b, 0x2501, 0x0, 0x0);
        gbc.writeMem(0xbf26, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xecf7);
        EXPECT(gbc.pc(), 0xbf28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf26), 0xce);
        EXPECT(gbc.readMem(0xbf27), 0xce);
        // CE 0091
        gbc.setState(0x8599, 0x93a9, 0x7620, 0xc863, 0x41e4, 0xc856, 0x1, 0x0);
        gbc.writeMem(0x8599, { 0xce, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x93a9);
        EXPECT(gbc.pc(), 0x859b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8599), 0xce);
        EXPECT(gbc.readMem(0x859a), 0xbc);
        // CE 0092
        gbc.setState(0x1132, 0x7dbe, 0xbfb0, 0xfe8a, 0x34ba, 0x576f, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7dbe);
        EXPECT(gbc.pc(), 0x1134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0094
        gbc.setState(0x50e3, 0x5a57, 0x4510, 0x15cc, 0x59a2, 0xeab1, 0x1, 0x1);
        gbc.writeMem(0x50e3, { 0xce, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5a57);
        EXPECT(gbc.pc(), 0x50e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0095
        gbc.setState(0xb59b, 0x4ff0, 0x7ab0, 0xcdb, 0x175c, 0x2415, 0x1, 0x1);
        gbc.writeMem(0xb59b, { 0xce, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4ff0);
        EXPECT(gbc.pc(), 0xb59d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb59b), 0xce);
        EXPECT(gbc.readMem(0xb59c), 0x28);
        // CE 0096
        gbc.setState(0xd4f, 0x8c1b, 0xb40, 0x5218, 0xe3eb, 0x7489, 0x0, 0x0);
        gbc.writeMem(0xd4f, { 0xce, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0xd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0097
        gbc.setState(0x3159, 0x1e4b, 0x41e0, 0x6b36, 0x8ae9, 0x20b7, 0x1, 0x0);
        gbc.writeMem(0x3159, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1e4b);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0098
        gbc.setState(0x86db, 0xf8de, 0x5ba0, 0x2088, 0xc7e5, 0xaf5c, 0x1, 0x0);
        gbc.writeMem(0x86db, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf8de);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86db), 0xce);
        EXPECT(gbc.readMem(0x86dc), 0x1c);
        // CE 0099
        gbc.setState(0xcfb6, 0xa6d4, 0xe1b0, 0x31ae, 0x7722, 0x64fb, 0x0, 0x1);
        gbc.writeMem(0xcfb6, { 0xce, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa6d4);
        EXPECT(gbc.pc(), 0xcfb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb6), 0xce);
        EXPECT(gbc.readMem(0xcfb7), 0x4e);
        // CE 009A
        gbc.setState(0x72af, 0xf82b, 0x5de0, 0xbdff, 0xe1de, 0xc2d1, 0x0, 0x1);
        gbc.writeMem(0x72af, { 0xce, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf82b);
        EXPECT(gbc.pc(), 0x72b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 009B
        gbc.setState(0x7057, 0xe4fd, 0xc7f0, 0xad0a, 0x887d, 0x598b, 0x0, 0x0);
        gbc.writeMem(0x7057, { 0xce, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe4fd);
        EXPECT(gbc.pc(), 0x7059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 009C
        gbc.setState(0x1513, 0xa736, 0x7c10, 0x49ac, 0x2966, 0x8c44, 0x0, 0x1);
        gbc.writeMem(0x1513, { 0xce, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa736);
        EXPECT(gbc.pc(), 0x1515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 009D
        gbc.setState(0xc183, 0x5203, 0x4100, 0x5db, 0x62b6, 0xdd2f, 0x0, 0x1);
        gbc.writeMem(0xc183, { 0xce, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5203);
        EXPECT(gbc.pc(), 0xc185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc183), 0xce);
        EXPECT(gbc.readMem(0xc184), 0xe2);
        // CE 009E
        gbc.setState(0x655c, 0xd834, 0xd330, 0xd9bc, 0xd3d, 0xc340, 0x1, 0x1);
        gbc.writeMem(0x655c, { 0xce, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd834);
        EXPECT(gbc.pc(), 0x655e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 009F
        gbc.setState(0xe94b, 0xd68a, 0x43b0, 0xfc44, 0x2091, 0x6a0e, 0x0, 0x1);
        gbc.writeMem(0xe94b, { 0xce, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd68a);
        EXPECT(gbc.pc(), 0xe94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe94b), 0xce);
        EXPECT(gbc.readMem(0xe94c), 0x68);
        // CE 00A0
        gbc.setState(0x2357, 0x5d31, 0x7280, 0x5dd9, 0x7635, 0x3618, 0x0, 0x1);
        gbc.writeMem(0x2357, { 0xce, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5d31);
        EXPECT(gbc.pc(), 0x2359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00A1
        gbc.setState(0x47f3, 0x4f97, 0x23c0, 0x4d59, 0x61, 0xaf96, 0x0, 0x0);
        gbc.writeMem(0x47f3, { 0xce, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4f97);
        EXPECT(gbc.pc(), 0x47f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00A2
        gbc.setState(0xd3e0, 0xc6d2, 0xdca0, 0x81d0, 0x1454, 0xa6, 0x0, 0x1);
        gbc.writeMem(0xd3e0, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc6d2);
        EXPECT(gbc.pc(), 0xd3e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3e0), 0xce);
        EXPECT(gbc.readMem(0xd3e1), 0xac);
        // CE 00A4
        gbc.setState(0x15c9, 0xd345, 0xa100, 0x8cd3, 0xaa3b, 0x3bf9, 0x1, 0x0);
        gbc.writeMem(0x15c9, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd345);
        EXPECT(gbc.pc(), 0x15cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00A5
        gbc.setState(0xea33, 0x5ff0, 0xe760, 0x64f, 0x13b3, 0xeec4, 0x1, 0x0);
        gbc.writeMem(0xea33, { 0xce, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5ff0);
        EXPECT(gbc.pc(), 0xea35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea33), 0xce);
        EXPECT(gbc.readMem(0xea34), 0x28);
        // CE 00A6
        gbc.setState(0xa988, 0x8785, 0xfc60, 0x3eec, 0xd0d8, 0x6c82, 0x0, 0x0);
        gbc.writeMem(0xa988, { 0xce, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8785);
        EXPECT(gbc.pc(), 0xa98a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa988), 0xce);
        EXPECT(gbc.readMem(0xa989), 0x90);
        // CE 00A7
        gbc.setState(0x3900, 0x775, 0x9960, 0x2bb3, 0xadc6, 0x94e2, 0x0, 0x0);
        gbc.writeMem(0x3900, { 0xce, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x775);
        EXPECT(gbc.pc(), 0x3902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00A8
        gbc.setState(0xe77, 0x9ece, 0xd440, 0x5927, 0xc80d, 0x8ed9, 0x1, 0x1);
        gbc.writeMem(0xe77, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0xe79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00A9
        gbc.setState(0x3365, 0xf0a4, 0x8300, 0x2f18, 0xcc28, 0x3343, 0x0, 0x0);
        gbc.writeMem(0x3365, { 0xce, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf0a4);
        EXPECT(gbc.pc(), 0x3367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00AA
        gbc.setState(0x4556, 0x42d1, 0x3ef0, 0xa74b, 0x9bea, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x4556, { 0xce, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x42d1);
        EXPECT(gbc.pc(), 0x4558);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00AB
        gbc.setState(0x9a59, 0x45cc, 0xb840, 0xd406, 0x6b72, 0xf8bf, 0x1, 0x0);
        gbc.writeMem(0x9a59, { 0xce, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x45cc);
        EXPECT(gbc.pc(), 0x9a5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a59), 0xce);
        EXPECT(gbc.readMem(0x9a5a), 0x31);
        // CE 00AC
        gbc.setState(0x4941, 0xc71b, 0x1ea0, 0x1713, 0x3165, 0x3fe6, 0x0, 0x0);
        gbc.writeMem(0x4941, { 0xce, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc71b);
        EXPECT(gbc.pc(), 0x4943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00AD
        gbc.setState(0x78cf, 0x76a2, 0xca80, 0xdf9c, 0x55fa, 0x5d6b, 0x0, 0x1);
        gbc.writeMem(0x78cf, { 0xce, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0x78d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00AE
        gbc.setState(0xdf94, 0xa7ae, 0x2670, 0xf451, 0xc2b9, 0xbc0, 0x1, 0x1);
        gbc.writeMem(0xdf94, { 0xce, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa7ae);
        EXPECT(gbc.pc(), 0xdf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf94), 0xce);
        EXPECT(gbc.readMem(0xdf95), 0x3e);
        // CE 00AF
        gbc.setState(0xc722, 0x5795, 0x1e0, 0x8738, 0x1777, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0xc722, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x5795);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc722), 0xce);
        EXPECT(gbc.readMem(0xc723), 0xec);
        // CE 00B0
        gbc.setState(0x4a56, 0xc26d, 0xf2b0, 0x37c8, 0x5c20, 0xf8b4, 0x1, 0x1);
        gbc.writeMem(0x4a56, { 0xce, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xc26d);
        EXPECT(gbc.pc(), 0x4a58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00B1
        gbc.setState(0xbeed, 0x64bc, 0x4000, 0x25af, 0x7ca4, 0x36b1, 0x0, 0x0);
        gbc.writeMem(0xbeed, { 0xce, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x64bc);
        EXPECT(gbc.pc(), 0xbeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeed), 0xce);
        EXPECT(gbc.readMem(0xbeee), 0x3d);
        // CE 00B2
        gbc.setState(0x9213, 0x46c2, 0x7a10, 0xfe6a, 0x40db, 0xc48, 0x1, 0x0);
        gbc.writeMem(0x9213, { 0xce, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x46c2);
        EXPECT(gbc.pc(), 0x9215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9213), 0xce);
        EXPECT(gbc.readMem(0x9214), 0xf0);
        // CE 00B3
        gbc.setState(0xb442, 0x1915, 0xa900, 0xec50, 0x2cd5, 0x844d, 0x0, 0x0);
        gbc.writeMem(0xb442, { 0xce, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1915);
        EXPECT(gbc.pc(), 0xb444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb442), 0xce);
        EXPECT(gbc.readMem(0xb443), 0xf);
        // CE 00B4
        gbc.setState(0x3157, 0xa6, 0xd960, 0xc875, 0x3bdf, 0x188a, 0x0, 0x0);
        gbc.writeMem(0x3157, { 0xce, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa6);
        EXPECT(gbc.pc(), 0x3159);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00B5
        gbc.setState(0x8c9a, 0x5191, 0x9f80, 0x6757, 0x380c, 0xf4df, 0x0, 0x1);
        gbc.writeMem(0x8c9a, { 0xce, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5191);
        EXPECT(gbc.pc(), 0x8c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9a), 0xce);
        EXPECT(gbc.readMem(0x8c9b), 0x3d);
        // CE 00B6
        gbc.setState(0xc10c, 0x21d, 0xbee0, 0xac54, 0xe37d, 0xc71e, 0x0, 0x0);
        gbc.writeMem(0xc10c, { 0xce, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x21d);
        EXPECT(gbc.pc(), 0xc10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc10c), 0xce);
        EXPECT(gbc.readMem(0xc10d), 0x39);
        // CE 00B7
        gbc.setState(0x4f4d, 0x26ca, 0x9ea0, 0x97ba, 0x8cb1, 0xafc3, 0x0, 0x1);
        gbc.writeMem(0x4f4d, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x26ca);
        EXPECT(gbc.pc(), 0x4f4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00B8
        gbc.setState(0x1a37, 0x8eb3, 0xe9a0, 0x8202, 0x7a47, 0x94a7, 0x0, 0x0);
        gbc.writeMem(0x1a37, { 0xce, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8eb3);
        EXPECT(gbc.pc(), 0x1a39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00B9
        gbc.setState(0x1e2, 0x38da, 0x17a0, 0xfec2, 0x9cd1, 0x3cff, 0x1, 0x1);
        gbc.writeMem(0x1e2, { 0xce, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x38da);
        EXPECT(gbc.pc(), 0x1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00BA
        gbc.setState(0x73cb, 0x9432, 0xfeb0, 0x854c, 0xf394, 0xa39b, 0x1, 0x1);
        gbc.writeMem(0x73cb, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9432);
        EXPECT(gbc.pc(), 0x73cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00BB
        gbc.setState(0x717d, 0xc2dd, 0x8f0, 0xaea7, 0xe0f, 0x22df, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0xce, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc2dd);
        EXPECT(gbc.pc(), 0x717f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00BC
        gbc.setState(0x28b5, 0x3283, 0x1ab0, 0x84de, 0xf95d, 0x6c31, 0x0, 0x1);
        gbc.writeMem(0x28b5, { 0xce, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x3283);
        EXPECT(gbc.pc(), 0x28b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00BD
        gbc.setState(0x47d0, 0x2ab5, 0x35c0, 0xd0bd, 0xdfce, 0xab24, 0x0, 0x0);
        gbc.writeMem(0x47d0, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x2ab5);
        EXPECT(gbc.pc(), 0x47d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00BE
        gbc.setState(0x4d67, 0x1e34, 0x1cc0, 0xe5e7, 0xe075, 0x2fc5, 0x1, 0x0);
        gbc.writeMem(0x4d67, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x4d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00BF
        gbc.setState(0xa60e, 0x91a9, 0x47d0, 0xa3dd, 0xa042, 0xf7a8, 0x0, 0x1);
        gbc.writeMem(0xa60e, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x91a9);
        EXPECT(gbc.pc(), 0xa610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa60e), 0xce);
        EXPECT(gbc.readMem(0xa60f), 0xf8);
        // CE 00C0
        gbc.setState(0x5712, 0xacd9, 0x2250, 0x1b7c, 0xea78, 0x6d4c, 0x0, 0x1);
        gbc.writeMem(0x5712, { 0xce, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xacd9);
        EXPECT(gbc.pc(), 0x5714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00C1
        gbc.setState(0x126c, 0xb811, 0x5d90, 0x845b, 0x8a9a, 0xa470, 0x0, 0x0);
        gbc.writeMem(0x126c, { 0xce, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb811);
        EXPECT(gbc.pc(), 0x126e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00C2
        gbc.setState(0x98d5, 0xc3fb, 0xe950, 0xbee7, 0xef52, 0x428b, 0x0, 0x1);
        gbc.writeMem(0x98d5, { 0xce, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc3fb);
        EXPECT(gbc.pc(), 0x98d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d5), 0xce);
        EXPECT(gbc.readMem(0x98d6), 0xc7);
        // CE 00C3
        gbc.setState(0x97c5, 0x7468, 0xa280, 0x5d5f, 0xc641, 0x227b, 0x1, 0x1);
        gbc.writeMem(0x97c5, { 0xce, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7468);
        EXPECT(gbc.pc(), 0x97c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97c5), 0xce);
        EXPECT(gbc.readMem(0x97c6), 0x28);
        // CE 00C4
        gbc.setState(0x1ef0, 0x3371, 0x700, 0x41fd, 0xe786, 0xed65, 0x1, 0x1);
        gbc.writeMem(0x1ef0, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3371);
        EXPECT(gbc.pc(), 0x1ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00C5
        gbc.setState(0xb5ac, 0x2111, 0x6290, 0x7017, 0xbed6, 0x3972, 0x1, 0x1);
        gbc.writeMem(0xb5ac, { 0xce, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2111);
        EXPECT(gbc.pc(), 0xb5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5ac), 0xce);
        EXPECT(gbc.readMem(0xb5ad), 0x9);
        // CE 00C6
        gbc.setState(0xc804, 0x3d8a, 0xb860, 0xac1, 0x8746, 0xd86b, 0x1, 0x0);
        gbc.writeMem(0xc804, { 0xce, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3d8a);
        EXPECT(gbc.pc(), 0xc806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc804), 0xce);
        EXPECT(gbc.readMem(0xc805), 0x40);
        // CE 00C7
        gbc.setState(0x2dad, 0x9eac, 0x9800, 0xee5f, 0xf9e1, 0xb48f, 0x1, 0x0);
        gbc.writeMem(0x2dad, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9eac);
        EXPECT(gbc.pc(), 0x2daf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00C8
        gbc.setState(0x741b, 0x72e8, 0xe640, 0xe078, 0xfaf1, 0xbd70, 0x0, 0x1);
        gbc.writeMem(0x741b, { 0xce, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x72e8);
        EXPECT(gbc.pc(), 0x741d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00C9
        gbc.setState(0x3023, 0x652f, 0x24f0, 0x87c3, 0x7931, 0x5469, 0x1, 0x1);
        gbc.writeMem(0x3023, { 0xce, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x652f);
        EXPECT(gbc.pc(), 0x3025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00CA
        gbc.setState(0x3106, 0x79ae, 0xb770, 0xec20, 0x1cd3, 0xd6df, 0x1, 0x0);
        gbc.writeMem(0x3106, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x79ae);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00CB
        gbc.setState(0x689a, 0x72ea, 0x73d0, 0xcb4d, 0xb2be, 0x40a1, 0x0, 0x0);
        gbc.writeMem(0x689a, { 0xce, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x72ea);
        EXPECT(gbc.pc(), 0x689c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00CC
        gbc.setState(0xef21, 0x6451, 0xda10, 0x192f, 0xb2c5, 0x79a3, 0x0, 0x1);
        gbc.writeMem(0xef21, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6451);
        EXPECT(gbc.pc(), 0xef23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef21), 0xce);
        EXPECT(gbc.readMem(0xef22), 0xa6);
        // CE 00CD
        gbc.setState(0x3c2d, 0xd530, 0x4a30, 0xb7f6, 0xc242, 0xc69, 0x1, 0x0);
        gbc.writeMem(0x3c2d, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd530);
        EXPECT(gbc.pc(), 0x3c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00CE
        gbc.setState(0x1ef8, 0x6323, 0x7ce0, 0x6ce4, 0x3109, 0xb676, 0x0, 0x0);
        gbc.writeMem(0x1ef8, { 0xce, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6323);
        EXPECT(gbc.pc(), 0x1efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00CF
        gbc.setState(0xae5b, 0x89c7, 0xe770, 0xd344, 0xbaea, 0x7bf3, 0x1, 0x0);
        gbc.writeMem(0xae5b, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x89c7);
        EXPECT(gbc.pc(), 0xae5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5b), 0xce);
        EXPECT(gbc.readMem(0xae5c), 0x5d);
        // CE 00D0
        gbc.setState(0x9afd, 0x7f5e, 0xdd70, 0x7685, 0xf45e, 0x726b, 0x1, 0x0);
        gbc.writeMem(0x9afd, { 0xce, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7f5e);
        EXPECT(gbc.pc(), 0x9aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afd), 0xce);
        EXPECT(gbc.readMem(0x9afe), 0x24);
        // CE 00D1
        gbc.setState(0x236, 0x5bb4, 0x74a0, 0x6394, 0xcc4a, 0x801a, 0x0, 0x1);
        gbc.writeMem(0x236, { 0xce, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5bb4);
        EXPECT(gbc.pc(), 0x238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00D2
        gbc.setState(0xaca9, 0x3294, 0xca80, 0xf5b4, 0x97c3, 0x9b7a, 0x1, 0x0);
        gbc.writeMem(0xaca9, { 0xce, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3294);
        EXPECT(gbc.pc(), 0xacab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca9), 0xce);
        EXPECT(gbc.readMem(0xacaa), 0x15);
        // CE 00D4
        gbc.setState(0xceaa, 0x68f8, 0xbb0, 0xed89, 0x724f, 0xa5a, 0x0, 0x1);
        gbc.writeMem(0xceaa, { 0xce, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x68f8);
        EXPECT(gbc.pc(), 0xceac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xceaa), 0xce);
        EXPECT(gbc.readMem(0xceab), 0xe7);
        // CE 00D5
        gbc.setState(0x3b70, 0x9015, 0x3010, 0x35a4, 0xd988, 0x23ae, 0x1, 0x1);
        gbc.writeMem(0x3b70, { 0xce, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9015);
        EXPECT(gbc.pc(), 0x3b72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00D6
        gbc.setState(0x6ca7, 0x9912, 0x49b0, 0x334a, 0xc554, 0xe25e, 0x0, 0x0);
        gbc.writeMem(0x6ca7, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9912);
        EXPECT(gbc.pc(), 0x6ca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00D7
        gbc.setState(0xb94d, 0xab63, 0xa460, 0x2b6, 0xec4b, 0xb804, 0x1, 0x1);
        gbc.writeMem(0xb94d, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xab63);
        EXPECT(gbc.pc(), 0xb94f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb94d), 0xce);
        EXPECT(gbc.readMem(0xb94e), 0xba);
        // CE 00D9
        gbc.setState(0x81f4, 0x61cb, 0x4860, 0x9215, 0xe569, 0xfba4, 0x0, 0x1);
        gbc.writeMem(0x81f4, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x61cb);
        EXPECT(gbc.pc(), 0x81f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f4), 0xce);
        EXPECT(gbc.readMem(0x81f5), 0x18);
        // CE 00DB
        gbc.setState(0xd955, 0xa211, 0x19b0, 0x804f, 0x4ae5, 0x5af4, 0x1, 0x1);
        gbc.writeMem(0xd955, { 0xce, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa211);
        EXPECT(gbc.pc(), 0xd957);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd955), 0xce);
        EXPECT(gbc.readMem(0xd956), 0xdc);
        // CE 00DC
        gbc.setState(0xa6d9, 0xcf8a, 0x2170, 0x5d, 0xbbdb, 0x68f5, 0x0, 0x0);
        gbc.writeMem(0xa6d9, { 0xce, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcf8a);
        EXPECT(gbc.pc(), 0xa6db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d9), 0xce);
        EXPECT(gbc.readMem(0xa6da), 0x9);
        // CE 00DD
        gbc.setState(0x1dcf, 0xaa34, 0x48d0, 0x222, 0xce94, 0xbcde, 0x1, 0x0);
        gbc.writeMem(0x1dcf, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaa34);
        EXPECT(gbc.pc(), 0x1dd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00DE
        gbc.setState(0x9ad2, 0x76fc, 0x8c50, 0xb80a, 0xaa8a, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0x9ad2, { 0xce, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x76fc);
        EXPECT(gbc.pc(), 0x9ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ad2), 0xce);
        EXPECT(gbc.readMem(0x9ad3), 0x74);
        // CE 00DF
        gbc.setState(0xd04a, 0x543a, 0xede0, 0xb54b, 0xc5f7, 0x4714, 0x0, 0x1);
        gbc.writeMem(0xd04a, { 0xce, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x543a);
        EXPECT(gbc.pc(), 0xd04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04a), 0xce);
        EXPECT(gbc.readMem(0xd04b), 0x6c);
        // CE 00E0
        gbc.setState(0x4249, 0x9fd7, 0xac00, 0x7565, 0x7183, 0x9b72, 0x1, 0x0);
        gbc.writeMem(0x4249, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x9fd7);
        EXPECT(gbc.pc(), 0x424b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00E1
        gbc.setState(0xcc3b, 0x9cb3, 0x8700, 0x8efe, 0x8830, 0x89f, 0x0, 0x1);
        gbc.writeMem(0xcc3b, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9cb3);
        EXPECT(gbc.pc(), 0xcc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc3b), 0xce);
        EXPECT(gbc.readMem(0xcc3c), 0x27);
        // CE 00E2
        gbc.setState(0xc020, 0xe4c7, 0xa540, 0x200c, 0xccfc, 0xaf1e, 0x1, 0x0);
        gbc.writeMem(0xc020, { 0xce, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe4c7);
        EXPECT(gbc.pc(), 0xc022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc020), 0xce);
        EXPECT(gbc.readMem(0xc021), 0x65);
        // CE 00E3
        gbc.setState(0x11cf, 0x2a9f, 0xc220, 0xb5d2, 0x415, 0xd665, 0x0, 0x0);
        gbc.writeMem(0x11cf, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2a9f);
        EXPECT(gbc.pc(), 0x11d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00E4
        gbc.setState(0x1d7, 0x817d, 0x2120, 0xd28c, 0x331b, 0x7a5b, 0x0, 0x0);
        gbc.writeMem(0x1d7, { 0xce, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x817d);
        EXPECT(gbc.pc(), 0x1d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00E5
        gbc.setState(0xb894, 0x7af4, 0x2940, 0x2f9, 0xfe8, 0x25c, 0x1, 0x0);
        gbc.writeMem(0xb894, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7af4);
        EXPECT(gbc.pc(), 0xb896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb894), 0xce);
        EXPECT(gbc.readMem(0xb895), 0x58);
        // CE 00E6
        gbc.setState(0x213c, 0xe1cc, 0xbf80, 0xbac2, 0xdefa, 0xbcff, 0x0, 0x0);
        gbc.writeMem(0x213c, { 0xce, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe1cc);
        EXPECT(gbc.pc(), 0x213e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00E7
        gbc.setState(0x57bd, 0xa28d, 0x470, 0x8aec, 0xa5b3, 0x78f2, 0x0, 0x1);
        gbc.writeMem(0x57bd, { 0xce, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa28d);
        EXPECT(gbc.pc(), 0x57bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00E8
        gbc.setState(0xdeb8, 0x7603, 0x5230, 0xfc62, 0x8b25, 0xeb0, 0x0, 0x0);
        gbc.writeMem(0xdeb8, { 0xce, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7603);
        EXPECT(gbc.pc(), 0xdeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeb8), 0xce);
        EXPECT(gbc.readMem(0xdeb9), 0xae);
        // CE 00E9
        gbc.setState(0xbd5, 0xb600, 0xa010, 0x385d, 0xdc40, 0x54fa, 0x0, 0x0);
        gbc.writeMem(0xbd5, { 0xce, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb600);
        EXPECT(gbc.pc(), 0xbd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00EA
        gbc.setState(0x87cd, 0x761b, 0x9f60, 0x2535, 0x6b87, 0x451e, 0x1, 0x0);
        gbc.writeMem(0x87cd, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x761b);
        EXPECT(gbc.pc(), 0x87cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cd), 0xce);
        EXPECT(gbc.readMem(0x87ce), 0x43);
        // CE 00EB
        gbc.setState(0xbafa, 0x5b04, 0x4c80, 0x98f8, 0x21da, 0x9354, 0x0, 0x1);
        gbc.writeMem(0xbafa, { 0xce, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5b04);
        EXPECT(gbc.pc(), 0xbafc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbafa), 0xce);
        EXPECT(gbc.readMem(0xbafb), 0x4);
        // CE 00EC
        gbc.setState(0x69be, 0x5dd9, 0x3f10, 0x77d5, 0x6d86, 0x3e87, 0x1, 0x0);
        gbc.writeMem(0x69be, { 0xce, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5dd9);
        EXPECT(gbc.pc(), 0x69c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00EE
        gbc.setState(0x5ebc, 0xeeb2, 0x8160, 0xd31d, 0x7495, 0xe693, 0x0, 0x1);
        gbc.writeMem(0x5ebc, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeeb2);
        EXPECT(gbc.pc(), 0x5ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00EF
        gbc.setState(0xacef, 0xb222, 0x2800, 0x7fcd, 0x56cf, 0xfc67, 0x1, 0x1);
        gbc.writeMem(0xacef, { 0xce, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb222);
        EXPECT(gbc.pc(), 0xacf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacef), 0xce);
        EXPECT(gbc.readMem(0xacf0), 0xd5);
        // CE 00F1
        gbc.setState(0x136f, 0xdf6e, 0x6920, 0x4cfe, 0xaf39, 0xb4f0, 0x1, 0x1);
        gbc.writeMem(0x136f, { 0xce, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdf6e);
        EXPECT(gbc.pc(), 0x1371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00F2
        gbc.setState(0xb526, 0xae3e, 0x4690, 0xe866, 0x37be, 0x11d4, 0x1, 0x0);
        gbc.writeMem(0xb526, { 0xce, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xae3e);
        EXPECT(gbc.pc(), 0xb528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb526), 0xce);
        EXPECT(gbc.readMem(0xb527), 0x8c);
        // CE 00F3
        gbc.setState(0xc16a, 0xf510, 0x4d10, 0xcaa9, 0xc1a, 0xd880, 0x1, 0x1);
        gbc.writeMem(0xc16a, { 0xce, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf510);
        EXPECT(gbc.pc(), 0xc16c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc16a), 0xce);
        EXPECT(gbc.readMem(0xc16b), 0x4b);
        // CE 00F4
        gbc.setState(0x4b86, 0xfb93, 0x3ce0, 0x280a, 0x89eb, 0x5155, 0x0, 0x1);
        gbc.writeMem(0x4b86, { 0xce, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0x4b88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00F5
        gbc.setState(0xce51, 0x4fe7, 0xd520, 0xa6d1, 0x6e93, 0x98ba, 0x0, 0x1);
        gbc.writeMem(0xce51, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4fe7);
        EXPECT(gbc.pc(), 0xce53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce51), 0xce);
        EXPECT(gbc.readMem(0xce52), 0xa2);
        // CE 00F6
        gbc.setState(0x7b6c, 0x12ac, 0x6070, 0x900e, 0x769b, 0xb987, 0x0, 0x0);
        gbc.writeMem(0x7b6c, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x12ac);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00F7
        gbc.setState(0xc8ac, 0x4ccd, 0x3350, 0x2de6, 0xcb51, 0xf5fb, 0x1, 0x1);
        gbc.writeMem(0xc8ac, { 0xce, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4ccd);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ac), 0xce);
        EXPECT(gbc.readMem(0xc8ad), 0xb5);
        // CE 00F8
        gbc.setState(0x14cf, 0x90d1, 0x25b0, 0x9e2a, 0x6ce6, 0xb55e, 0x0, 0x1);
        gbc.writeMem(0x14cf, { 0xce, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x90d1);
        EXPECT(gbc.pc(), 0x14d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00F9
        gbc.setState(0x390d, 0xe782, 0x34f0, 0x347c, 0xbadd, 0x6541, 0x1, 0x1);
        gbc.writeMem(0x390d, { 0xce, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe782);
        EXPECT(gbc.pc(), 0x390f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 00FA
        gbc.setState(0x5071, 0x5a66, 0x5e90, 0xd91a, 0xb8ca, 0x59fe, 0x0, 0x1);
        gbc.writeMem(0x5071, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5a66);
        EXPECT(gbc.pc(), 0x5073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 00FB
        gbc.setState(0xdd25, 0xa4ba, 0x3e0, 0xad02, 0xbe0a, 0x3945, 0x1, 0x0);
        gbc.writeMem(0xdd25, { 0xce, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xa4ba);
        EXPECT(gbc.pc(), 0xdd27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd25), 0xce);
        EXPECT(gbc.readMem(0xdd26), 0x62);
        // CE 00FC
        gbc.setState(0x6e5d, 0x737b, 0xccc0, 0xa695, 0xd963, 0x1ba7, 0x0, 0x0);
        gbc.writeMem(0x6e5d, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x737b);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 00FD
        gbc.setState(0x50ac, 0x4969, 0xfa70, 0xd0a5, 0x6ee6, 0xe209, 0x0, 0x0);
        gbc.writeMem(0x50ac, { 0xce, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4969);
        EXPECT(gbc.pc(), 0x50ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 00FF
        gbc.setState(0x76ab, 0x2144, 0x69c0, 0x627f, 0x509a, 0xd634, 0x0, 0x1);
        gbc.writeMem(0x76ab, { 0xce, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2144);
        EXPECT(gbc.pc(), 0x76ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0100
        gbc.setState(0x3a3e, 0x5751, 0x5dc0, 0x2f3a, 0x612, 0xa06f, 0x0, 0x1);
        gbc.writeMem(0x3a3e, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5751);
        EXPECT(gbc.pc(), 0x3a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0101
        gbc.setState(0xb690, 0x35eb, 0x1390, 0xbd6e, 0x85d4, 0xbf71, 0x1, 0x1);
        gbc.writeMem(0xb690, { 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x35eb);
        EXPECT(gbc.pc(), 0xb692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb690), 0xce);
        EXPECT(gbc.readMem(0xb691), 0x6e);
        // CE 0102
        gbc.setState(0xf84, 0x1286, 0xf410, 0x2efb, 0xb2b0, 0x3c92, 0x0, 0x1);
        gbc.writeMem(0xf84, { 0xce, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1286);
        EXPECT(gbc.pc(), 0xf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0104
        gbc.setState(0xeea1, 0x2af9, 0xfb80, 0xb644, 0x2b63, 0xa653, 0x1, 0x0);
        gbc.writeMem(0xeea1, { 0xce, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2af9);
        EXPECT(gbc.pc(), 0xeea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea1), 0xce);
        EXPECT(gbc.readMem(0xeea2), 0x1e);
        // CE 0105
        gbc.setState(0x85e5, 0x535d, 0xdfb0, 0x7e3, 0xed15, 0x4b26, 0x1, 0x0);
        gbc.writeMem(0x85e5, { 0xce, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x535d);
        EXPECT(gbc.pc(), 0x85e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85e5), 0xce);
        EXPECT(gbc.readMem(0x85e6), 0xdd);
        // CE 0106
        gbc.setState(0xe8aa, 0xfbf9, 0x8c00, 0x13e4, 0xd632, 0x16f4, 0x1, 0x1);
        gbc.writeMem(0xe8aa, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfbf9);
        EXPECT(gbc.pc(), 0xe8ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8aa), 0xce);
        EXPECT(gbc.readMem(0xe8ab), 0xba);
        // CE 0107
        gbc.setState(0x353a, 0x5ea9, 0x2360, 0x1afe, 0x243, 0x95c8, 0x1, 0x0);
        gbc.writeMem(0x353a, { 0xce, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5ea9);
        EXPECT(gbc.pc(), 0x353c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0108
        gbc.setState(0x43a, 0xb0f5, 0x7920, 0xad3e, 0x718a, 0xe055, 0x0, 0x1);
        gbc.writeMem(0x43a, { 0xce, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0109
        gbc.setState(0x93e8, 0xe3c6, 0xb070, 0xd889, 0x7b99, 0x5a6e, 0x1, 0x0);
        gbc.writeMem(0x93e8, { 0xce, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe3c6);
        EXPECT(gbc.pc(), 0x93ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93e8), 0xce);
        EXPECT(gbc.readMem(0x93e9), 0xd0);
        // CE 010A
        gbc.setState(0x2e0e, 0xc1c9, 0x29c0, 0xac3a, 0x1fe9, 0x84b, 0x0, 0x0);
        gbc.writeMem(0x2e0e, { 0xce, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc1c9);
        EXPECT(gbc.pc(), 0x2e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 010B
        gbc.setState(0x3138, 0x2bff, 0xa710, 0x8496, 0xbd00, 0xda4c, 0x1, 0x1);
        gbc.writeMem(0x3138, { 0xce, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2bff);
        EXPECT(gbc.pc(), 0x313a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 010C
        gbc.setState(0x4e8c, 0x4c5e, 0xd460, 0x2754, 0xb188, 0xf262, 0x0, 0x1);
        gbc.writeMem(0x4e8c, { 0xce, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4c5e);
        EXPECT(gbc.pc(), 0x4e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 010E
        gbc.setState(0xb3e5, 0x7c27, 0xad80, 0xd50f, 0x3743, 0xe392, 0x1, 0x0);
        gbc.writeMem(0xb3e5, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7c27);
        EXPECT(gbc.pc(), 0xb3e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e5), 0xce);
        EXPECT(gbc.readMem(0xb3e6), 0x58);
        // CE 010F
        gbc.setState(0x2e1e, 0x3be1, 0xdb90, 0x9a21, 0x77f7, 0x6035, 0x1, 0x0);
        gbc.writeMem(0x2e1e, { 0xce, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3be1);
        EXPECT(gbc.pc(), 0x2e20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0110
        gbc.setState(0x48cb, 0xbde0, 0x2ea0, 0x3350, 0x1b72, 0x6f16, 0x1, 0x0);
        gbc.writeMem(0x48cb, { 0xce, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbde0);
        EXPECT(gbc.pc(), 0x48cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0113
        gbc.setState(0x2e7d, 0x75b9, 0x8170, 0xd0a4, 0xb275, 0x9f37, 0x0, 0x0);
        gbc.writeMem(0x2e7d, { 0xce, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x75b9);
        EXPECT(gbc.pc(), 0x2e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0114
        gbc.setState(0x3419, 0x2211, 0xefc0, 0x22d9, 0x8c4a, 0x2d44, 0x1, 0x1);
        gbc.writeMem(0x3419, { 0xce, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2211);
        EXPECT(gbc.pc(), 0x341b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0115
        gbc.setState(0x4f71, 0x5257, 0xa330, 0xe6dd, 0x6d8e, 0x317a, 0x0, 0x0);
        gbc.writeMem(0x4f71, { 0xce, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5257);
        EXPECT(gbc.pc(), 0x4f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0116
        gbc.setState(0x16ee, 0x2aee, 0x89f0, 0x4d41, 0xb615, 0xe00f, 0x0, 0x1);
        gbc.writeMem(0x16ee, { 0xce, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2aee);
        EXPECT(gbc.pc(), 0x16f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0117
        gbc.setState(0x10e8, 0x6ee4, 0xb850, 0x8cc1, 0x5f40, 0x21ee, 0x1, 0x1);
        gbc.writeMem(0x10e8, { 0xce, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6ee4);
        EXPECT(gbc.pc(), 0x10ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0118
        gbc.setState(0x923, 0x7831, 0xa0f0, 0xd1a6, 0xd973, 0xc27c, 0x0, 0x0);
        gbc.writeMem(0x923, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7831);
        EXPECT(gbc.pc(), 0x925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0119
        gbc.setState(0x5e60, 0x2d1c, 0x57b0, 0xf9cb, 0x697f, 0xc2cf, 0x0, 0x0);
        gbc.writeMem(0x5e60, { 0xce, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2d1c);
        EXPECT(gbc.pc(), 0x5e62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 011A
        gbc.setState(0x40cc, 0xd0ac, 0x53c0, 0x6dc9, 0x1112, 0x8594, 0x1, 0x1);
        gbc.writeMem(0x40cc, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd0ac);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 011B
        gbc.setState(0x9e6a, 0xc313, 0x83d0, 0xf116, 0xb044, 0xed5, 0x0, 0x0);
        gbc.writeMem(0x9e6a, { 0xce, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc313);
        EXPECT(gbc.pc(), 0x9e6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e6a), 0xce);
        EXPECT(gbc.readMem(0x9e6b), 0xde);
        // CE 011C
        gbc.setState(0x9ff8, 0x22d5, 0x18d0, 0xd3c6, 0x20b4, 0xbb2f, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xce, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x22d5);
        EXPECT(gbc.pc(), 0x9ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff8), 0xce);
        EXPECT(gbc.readMem(0x9ff9), 0x2c);
        // CE 011D
        gbc.setState(0x3bc7, 0x9267, 0x8920, 0x2fad, 0xb12b, 0xa312, 0x1, 0x0);
        gbc.writeMem(0x3bc7, { 0xce, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9267);
        EXPECT(gbc.pc(), 0x3bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 011E
        gbc.setState(0x1f41, 0xe7e, 0x4e90, 0x5a74, 0x31ef, 0xdfbe, 0x1, 0x0);
        gbc.writeMem(0x1f41, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe7e);
        EXPECT(gbc.pc(), 0x1f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 011F
        gbc.setState(0xe64a, 0xa9f4, 0x6aa0, 0x6b4b, 0xb202, 0x1daa, 0x1, 0x1);
        gbc.writeMem(0xe64a, { 0xce, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa9f4);
        EXPECT(gbc.pc(), 0xe64c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe64a), 0xce);
        EXPECT(gbc.readMem(0xe64b), 0x6d);
        // CE 0120
        gbc.setState(0x716d, 0xe9cc, 0x2190, 0x4e24, 0x8c2b, 0xdea9, 0x0, 0x1);
        gbc.writeMem(0x716d, { 0xce, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe9cc);
        EXPECT(gbc.pc(), 0x716f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0121
        gbc.setState(0x7133, 0x4407, 0x80c0, 0x3695, 0xdc78, 0x6a69, 0x0, 0x1);
        gbc.writeMem(0x7133, { 0xce, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4407);
        EXPECT(gbc.pc(), 0x7135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0122
        gbc.setState(0x27c3, 0xe036, 0x5180, 0x66a1, 0x425d, 0x123, 0x0, 0x0);
        gbc.writeMem(0x27c3, { 0xce, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe036);
        EXPECT(gbc.pc(), 0x27c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0123
        gbc.setState(0x7133, 0xf1f8, 0xe1c0, 0x79fc, 0x5c51, 0xa573, 0x0, 0x1);
        gbc.writeMem(0x7133, { 0xce, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xf1f8);
        EXPECT(gbc.pc(), 0x7135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0124
        gbc.setState(0x5f04, 0x43f1, 0xdc30, 0xbf, 0xa8c3, 0xf09b, 0x0, 0x1);
        gbc.writeMem(0x5f04, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x43f1);
        EXPECT(gbc.pc(), 0x5f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0125
        gbc.setState(0x8bb5, 0x4314, 0x2720, 0x9f0a, 0x39a1, 0x11e6, 0x0, 0x0);
        gbc.writeMem(0x8bb5, { 0xce, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4314);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb5), 0xce);
        EXPECT(gbc.readMem(0x8bb6), 0x65);
        // CE 0126
        gbc.setState(0xda96, 0x3f7e, 0xef30, 0x6388, 0xd6f5, 0xc460, 0x0, 0x1);
        gbc.writeMem(0xda96, { 0xce, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3f7e);
        EXPECT(gbc.pc(), 0xda98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda96), 0xce);
        EXPECT(gbc.readMem(0xda97), 0x3c);
        // CE 0127
        gbc.setState(0x40aa, 0x63db, 0x7b60, 0x87ef, 0x4106, 0x53e6, 0x0, 0x0);
        gbc.writeMem(0x40aa, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x63db);
        EXPECT(gbc.pc(), 0x40ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0128
        gbc.setState(0x31ec, 0xd97e, 0xbc20, 0xc43d, 0x1562, 0x7cec, 0x0, 0x1);
        gbc.writeMem(0x31ec, { 0xce, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd97e);
        EXPECT(gbc.pc(), 0x31ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0129
        gbc.setState(0x1441, 0x6fd9, 0xc410, 0xd2c5, 0x38d3, 0x433f, 0x1, 0x1);
        gbc.writeMem(0x1441, { 0xce, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6fd9);
        EXPECT(gbc.pc(), 0x1443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 012A
        gbc.setState(0x4d73, 0x382a, 0xd3c0, 0xff18, 0x195, 0x2e22, 0x1, 0x1);
        gbc.writeMem(0x4d73, { 0xce, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x382a);
        EXPECT(gbc.pc(), 0x4d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 012B
        gbc.setState(0x169c, 0xd995, 0x8a20, 0x4582, 0xc009, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0x169c, { 0xce, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd995);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 012C
        gbc.setState(0x9911, 0x1cff, 0x9d40, 0xf186, 0x92d2, 0xf4b2, 0x1, 0x1);
        gbc.writeMem(0x9911, { 0xce, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1cff);
        EXPECT(gbc.pc(), 0x9913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9911), 0xce);
        EXPECT(gbc.readMem(0x9912), 0x17);
        // CE 012D
        gbc.setState(0xc9f5, 0x366c, 0x5140, 0x5d93, 0x73dd, 0x6da9, 0x1, 0x1);
        gbc.writeMem(0xc9f5, { 0xce, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x366c);
        EXPECT(gbc.pc(), 0xc9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f5), 0xce);
        EXPECT(gbc.readMem(0xc9f6), 0xd3);
        // CE 012E
        gbc.setState(0x9f7, 0x9b06, 0x43d0, 0x36da, 0x8c39, 0x2e98, 0x0, 0x0);
        gbc.writeMem(0x9f7, { 0xce, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9b06);
        EXPECT(gbc.pc(), 0x9f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 012F
        gbc.setState(0x900c, 0x3cca, 0xa460, 0x5b2, 0x8c2b, 0x414b, 0x0, 0x1);
        gbc.writeMem(0x900c, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3cca);
        EXPECT(gbc.pc(), 0x900e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900c), 0xce);
        EXPECT(gbc.readMem(0x900d), 0xc0);
        // CE 0130
        gbc.setState(0xcc90, 0xdb5d, 0x61f0, 0x550b, 0x4409, 0xc4fb, 0x0, 0x1);
        gbc.writeMem(0xcc90, { 0xce, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdb5d);
        EXPECT(gbc.pc(), 0xcc92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc90), 0xce);
        EXPECT(gbc.readMem(0xcc91), 0x1f);
        // CE 0131
        gbc.setState(0xa06, 0xc8fd, 0x6220, 0xb620, 0xaf39, 0xb21, 0x1, 0x0);
        gbc.writeMem(0xa06, { 0xce, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc8fd);
        EXPECT(gbc.pc(), 0xa08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0132
        gbc.setState(0xa85f, 0x17f0, 0xd5c0, 0xb54f, 0x3251, 0xef1a, 0x0, 0x1);
        gbc.writeMem(0xa85f, { 0xce, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x17f0);
        EXPECT(gbc.pc(), 0xa861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85f), 0xce);
        EXPECT(gbc.readMem(0xa860), 0xf6);
        // CE 0133
        gbc.setState(0x6d0c, 0x238d, 0x48d0, 0x8c8b, 0xf3b, 0xe33, 0x0, 0x1);
        gbc.writeMem(0x6d0c, { 0xce, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x238d);
        EXPECT(gbc.pc(), 0x6d0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0134
        gbc.setState(0xd94a, 0x9d3b, 0x9b00, 0x36e6, 0x4fe3, 0x9b11, 0x0, 0x0);
        gbc.writeMem(0xd94a, { 0xce, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0xd94c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94a), 0xce);
        EXPECT(gbc.readMem(0xd94b), 0x54);
        // CE 0135
        gbc.setState(0x40d2, 0x2539, 0xf5d0, 0xf9b2, 0xb6e1, 0xc2fc, 0x0, 0x0);
        gbc.writeMem(0x40d2, { 0xce, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2539);
        EXPECT(gbc.pc(), 0x40d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0136
        gbc.setState(0x416, 0xc594, 0x68c0, 0xc183, 0x3c44, 0xeac9, 0x1, 0x1);
        gbc.writeMem(0x416, { 0xce, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc594);
        EXPECT(gbc.pc(), 0x418);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0138
        gbc.setState(0x33a7, 0x8bbc, 0x4d50, 0x4e76, 0x4b86, 0x729a, 0x1, 0x1);
        gbc.writeMem(0x33a7, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8bbc);
        EXPECT(gbc.pc(), 0x33a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 013A
        gbc.setState(0x95a2, 0x4774, 0x8430, 0xb347, 0x9ca0, 0xac0e, 0x0, 0x1);
        gbc.writeMem(0x95a2, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4774);
        EXPECT(gbc.pc(), 0x95a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a2), 0xce);
        EXPECT(gbc.readMem(0x95a3), 0x58);
        // CE 013B
        gbc.setState(0xcc15, 0xb36d, 0x6b40, 0x9e5c, 0x70eb, 0x5192, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xce, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xb36d);
        EXPECT(gbc.pc(), 0xcc17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc15), 0xce);
        EXPECT(gbc.readMem(0xcc16), 0x4f);
        // CE 013C
        gbc.setState(0xa360, 0x26da, 0x65d0, 0x91ba, 0x8d25, 0x9d18, 0x1, 0x1);
        gbc.writeMem(0xa360, { 0xce, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0xa362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa360), 0xce);
        EXPECT(gbc.readMem(0xa361), 0x8c);
        // CE 013D
        gbc.setState(0xde89, 0xf065, 0xece0, 0xe045, 0xbed9, 0x39e7, 0x0, 0x0);
        gbc.writeMem(0xde89, { 0xce, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf065);
        EXPECT(gbc.pc(), 0xde8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde89), 0xce);
        EXPECT(gbc.readMem(0xde8a), 0xae);
        // CE 013E
        gbc.setState(0x3a0a, 0x5e3e, 0xec80, 0xfd0d, 0x36c7, 0x5864, 0x1, 0x0);
        gbc.writeMem(0x3a0a, { 0xce, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5e3e);
        EXPECT(gbc.pc(), 0x3a0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 013F
        gbc.setState(0x14a7, 0x118a, 0x52e0, 0x63db, 0x547d, 0xc06c, 0x1, 0x0);
        gbc.writeMem(0x14a7, { 0xce, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x14a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0140
        gbc.setState(0xbe85, 0xbd69, 0xc520, 0xdb94, 0xb0ae, 0x5a22, 0x0, 0x0);
        gbc.writeMem(0xbe85, { 0xce, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbd69);
        EXPECT(gbc.pc(), 0xbe87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe85), 0xce);
        EXPECT(gbc.readMem(0xbe86), 0x98);
        // CE 0141
        gbc.setState(0x72e0, 0xd3d, 0x7be0, 0xbd4a, 0x5092, 0xa154, 0x0, 0x1);
        gbc.writeMem(0x72e0, { 0xce, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd3d);
        EXPECT(gbc.pc(), 0x72e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0142
        gbc.setState(0x738e, 0xa948, 0x14c0, 0x3246, 0xf336, 0xefc7, 0x0, 0x1);
        gbc.writeMem(0x738e, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa948);
        EXPECT(gbc.pc(), 0x7390);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0143
        gbc.setState(0x9655, 0x598b, 0xa380, 0xcbd9, 0x1558, 0x3e00, 0x1, 0x0);
        gbc.writeMem(0x9655, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x598b);
        EXPECT(gbc.pc(), 0x9657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9655), 0xce);
        EXPECT(gbc.readMem(0x9656), 0xcc);
        // CE 0144
        gbc.setState(0x545e, 0x6bed, 0xef0, 0x7d36, 0x98fb, 0x6981, 0x0, 0x1);
        gbc.writeMem(0x545e, { 0xce, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6bed);
        EXPECT(gbc.pc(), 0x5460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0145
        gbc.setState(0xcca, 0x7141, 0x81b0, 0xb5b8, 0x3129, 0xe7d, 0x1, 0x1);
        gbc.writeMem(0xcca, { 0xce, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7141);
        EXPECT(gbc.pc(), 0xccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0146
        gbc.setState(0x4783, 0xa4f3, 0xdbe0, 0xef6e, 0xd0ca, 0x7668, 0x1, 0x0);
        gbc.writeMem(0x4783, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa4f3);
        EXPECT(gbc.pc(), 0x4785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0148
        gbc.setState(0x4b9d, 0xa98c, 0xac20, 0x4902, 0xd82d, 0x9eab, 0x1, 0x0);
        gbc.writeMem(0x4b9d, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa98c);
        EXPECT(gbc.pc(), 0x4b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0149
        gbc.setState(0xe3e9, 0x219d, 0x95f0, 0xa9aa, 0xe1c4, 0xfb64, 0x1, 0x1);
        gbc.writeMem(0xe3e9, { 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x219d);
        EXPECT(gbc.pc(), 0xe3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e9), 0xce);
        EXPECT(gbc.readMem(0xe3ea), 0x88);
        // CE 014A
        gbc.setState(0x9378, 0x6f98, 0x200, 0xf0de, 0xba29, 0x9fd1, 0x1, 0x1);
        gbc.writeMem(0x9378, { 0xce, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6f98);
        EXPECT(gbc.pc(), 0x937a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9378), 0xce);
        EXPECT(gbc.readMem(0x9379), 0x82);
        // CE 014B
        gbc.setState(0xb2d2, 0x383e, 0x2510, 0x8b3c, 0x12cd, 0x3b12, 0x1, 0x1);
        gbc.writeMem(0xb2d2, { 0xce, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x383e);
        EXPECT(gbc.pc(), 0xb2d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2d2), 0xce);
        EXPECT(gbc.readMem(0xb2d3), 0x4a);
        // CE 014C
        gbc.setState(0x9de5, 0xda76, 0xed80, 0x4347, 0x266d, 0x301c, 0x0, 0x1);
        gbc.writeMem(0x9de5, { 0xce, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xda76);
        EXPECT(gbc.pc(), 0x9de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9de5), 0xce);
        EXPECT(gbc.readMem(0x9de6), 0x7a);
        // CE 014D
        gbc.setState(0x1e20, 0x77a1, 0xd30, 0x59b6, 0x3958, 0x7e49, 0x0, 0x1);
        gbc.writeMem(0x1e20, { 0xce, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x77a1);
        EXPECT(gbc.pc(), 0x1e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 014E
        gbc.setState(0x8606, 0xb379, 0xfc80, 0x3edd, 0x4c17, 0xdac5, 0x0, 0x1);
        gbc.writeMem(0x8606, { 0xce, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb379);
        EXPECT(gbc.pc(), 0x8608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8606), 0xce);
        EXPECT(gbc.readMem(0x8607), 0x31);
        // CE 014F
        gbc.setState(0xaf7c, 0x9ca7, 0xf440, 0x72ff, 0xdc65, 0x5355, 0x0, 0x1);
        gbc.writeMem(0xaf7c, { 0xce, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9ca7);
        EXPECT(gbc.pc(), 0xaf7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7c), 0xce);
        EXPECT(gbc.readMem(0xaf7d), 0xd1);
        // CE 0150
        gbc.setState(0xd507, 0x22b9, 0xc60, 0x929e, 0x93a6, 0x3975, 0x1, 0x0);
        gbc.writeMem(0xd507, { 0xce, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x22b9);
        EXPECT(gbc.pc(), 0xd509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd507), 0xce);
        EXPECT(gbc.readMem(0xd508), 0x2a);
        // CE 0151
        gbc.setState(0xe686, 0xe30c, 0x8980, 0xbfc4, 0xde9e, 0x24d4, 0x1, 0x1);
        gbc.writeMem(0xe686, { 0xce, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe30c);
        EXPECT(gbc.pc(), 0xe688);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe686), 0xce);
        EXPECT(gbc.readMem(0xe687), 0xa);
        // CE 0152
        gbc.setState(0x9c46, 0x267, 0xc270, 0x63ed, 0x5d45, 0xa16b, 0x0, 0x1);
        gbc.writeMem(0x9c46, { 0xce, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x267);
        EXPECT(gbc.pc(), 0x9c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c46), 0xce);
        EXPECT(gbc.readMem(0x9c47), 0x4a);
        // CE 0153
        gbc.setState(0x352c, 0xbf5a, 0x850, 0x9f9c, 0xe451, 0xc636, 0x1, 0x1);
        gbc.writeMem(0x352c, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbf5a);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0154
        gbc.setState(0x6361, 0xcd05, 0xeae0, 0x3b7a, 0xb941, 0xf966, 0x0, 0x0);
        gbc.writeMem(0x6361, { 0xce, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xcd05);
        EXPECT(gbc.pc(), 0x6363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0155
        gbc.setState(0x15a6, 0xd43c, 0x7420, 0x4d90, 0xaacd, 0x284e, 0x0, 0x1);
        gbc.writeMem(0x15a6, { 0xce, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd43c);
        EXPECT(gbc.pc(), 0x15a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0156
        gbc.setState(0xd5ce, 0x6da4, 0xa350, 0x2827, 0x9109, 0x39e, 0x1, 0x1);
        gbc.writeMem(0xd5ce, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6da4);
        EXPECT(gbc.pc(), 0xd5d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ce), 0xce);
        EXPECT(gbc.readMem(0xd5cf), 0xbf);
        // CE 0157
        gbc.setState(0xcc87, 0x6858, 0xec50, 0xde3b, 0x5e93, 0xd148, 0x1, 0x0);
        gbc.writeMem(0xcc87, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6858);
        EXPECT(gbc.pc(), 0xcc89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc87), 0xce);
        EXPECT(gbc.readMem(0xcc88), 0x1a);
        // CE 0158
        gbc.setState(0x6d07, 0x49f5, 0x8c10, 0xbded, 0xffe0, 0x83a0, 0x1, 0x0);
        gbc.writeMem(0x6d07, { 0xce, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x49f5);
        EXPECT(gbc.pc(), 0x6d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0159
        gbc.setState(0xb78b, 0x8ffc, 0x30a0, 0x45bc, 0xd887, 0x34d7, 0x1, 0x1);
        gbc.writeMem(0xb78b, { 0xce, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x8ffc);
        EXPECT(gbc.pc(), 0xb78d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78b), 0xce);
        EXPECT(gbc.readMem(0xb78c), 0x7c);
        // CE 015A
        gbc.setState(0xa58c, 0x83ec, 0xcd90, 0xbc48, 0x1b92, 0xbf47, 0x0, 0x1);
        gbc.writeMem(0xa58c, { 0xce, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x83ec);
        EXPECT(gbc.pc(), 0xa58e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58c), 0xce);
        EXPECT(gbc.readMem(0xa58d), 0xdc);
        // CE 015B
        gbc.setState(0xdcf3, 0xc743, 0xaa00, 0x3488, 0xcd85, 0x5429, 0x0, 0x1);
        gbc.writeMem(0xdcf3, { 0xce, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc743);
        EXPECT(gbc.pc(), 0xdcf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf3), 0xce);
        EXPECT(gbc.readMem(0xdcf4), 0x69);
        // CE 015C
        gbc.setState(0xa68f, 0x8d87, 0x8050, 0xb98c, 0x2a02, 0x15ac, 0x0, 0x1);
        gbc.writeMem(0xa68f, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x8d87);
        EXPECT(gbc.pc(), 0xa691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68f), 0xce);
        EXPECT(gbc.readMem(0xa690), 0x8f);
        // CE 015D
        gbc.setState(0x7445, 0xbb86, 0x6340, 0x4c55, 0x628a, 0xae5c, 0x0, 0x0);
        gbc.writeMem(0x7445, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbb86);
        EXPECT(gbc.pc(), 0x7447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 015E
        gbc.setState(0xe9ac, 0x389b, 0xc900, 0x2681, 0x74a2, 0x9cc7, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0xce, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x389b);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ac), 0xce);
        EXPECT(gbc.readMem(0xe9ad), 0x90);
        // CE 015F
        gbc.setState(0x688d, 0xee98, 0x5420, 0x7ba5, 0xfd70, 0x92fd, 0x1, 0x0);
        gbc.writeMem(0x688d, { 0xce, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xee98);
        EXPECT(gbc.pc(), 0x688f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0160
        gbc.setState(0x6cfe, 0x607e, 0xa8d0, 0xff9b, 0x55fe, 0xdcfc, 0x0, 0x1);
        gbc.writeMem(0x6cfe, { 0xce, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x607e);
        EXPECT(gbc.pc(), 0x6d00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0161
        gbc.setState(0x5ed2, 0x14f3, 0x3760, 0x9341, 0xaca7, 0x77a, 0x1, 0x1);
        gbc.writeMem(0x5ed2, { 0xce, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x14f3);
        EXPECT(gbc.pc(), 0x5ed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0162
        gbc.setState(0x9854, 0x8d5b, 0xb0, 0xc42c, 0x1a79, 0xa04b, 0x0, 0x0);
        gbc.writeMem(0x9854, { 0xce, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8d5b);
        EXPECT(gbc.pc(), 0x9856);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9854), 0xce);
        EXPECT(gbc.readMem(0x9855), 0xcb);
        // CE 0163
        gbc.setState(0x7d59, 0x6ef4, 0xcc80, 0xe9a3, 0xf833, 0x8dd0, 0x0, 0x1);
        gbc.writeMem(0x7d59, { 0xce, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6ef4);
        EXPECT(gbc.pc(), 0x7d5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0164
        gbc.setState(0xa208, 0x9fc4, 0x5f0, 0x1abc, 0x5d61, 0x1ae0, 0x1, 0x0);
        gbc.writeMem(0xa208, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9fc4);
        EXPECT(gbc.pc(), 0xa20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa208), 0xce);
        EXPECT(gbc.readMem(0xa209), 0x8e);
        // CE 0165
        gbc.setState(0x4fa5, 0xafbb, 0x1cb0, 0xece, 0xed8d, 0xf4db, 0x1, 0x0);
        gbc.writeMem(0x4fa5, { 0xce, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xafbb);
        EXPECT(gbc.pc(), 0x4fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0166
        gbc.setState(0xaa45, 0xe8e8, 0x9370, 0x9fe0, 0x3445, 0x2bd8, 0x1, 0x0);
        gbc.writeMem(0xaa45, { 0xce, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe8e8);
        EXPECT(gbc.pc(), 0xaa47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa45), 0xce);
        EXPECT(gbc.readMem(0xaa46), 0x83);
        // CE 0167
        gbc.setState(0xdb6e, 0x6b8b, 0x7e20, 0x3008, 0x8761, 0xb878, 0x0, 0x1);
        gbc.writeMem(0xdb6e, { 0xce, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6b8b);
        EXPECT(gbc.pc(), 0xdb70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6e), 0xce);
        EXPECT(gbc.readMem(0xdb6f), 0xf6);
        // CE 0168
        gbc.setState(0x5a15, 0xb9d2, 0x1360, 0xb062, 0x3a4a, 0x31ff, 0x0, 0x0);
        gbc.writeMem(0x5a15, { 0xce, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb9d2);
        EXPECT(gbc.pc(), 0x5a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0169
        gbc.setState(0x6077, 0x18c0, 0xd7f0, 0x956e, 0xab88, 0xa006, 0x0, 0x0);
        gbc.writeMem(0x6077, { 0xce, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x18c0);
        EXPECT(gbc.pc(), 0x6079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 016A
        gbc.setState(0x5e96, 0x715e, 0x17b0, 0xccc5, 0x7a6c, 0x5296, 0x0, 0x0);
        gbc.writeMem(0x5e96, { 0xce, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x715e);
        EXPECT(gbc.pc(), 0x5e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 016B
        gbc.setState(0xc135, 0x6e14, 0x17b0, 0x7e02, 0x8298, 0x8820, 0x1, 0x1);
        gbc.writeMem(0xc135, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6e14);
        EXPECT(gbc.pc(), 0xc137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc135), 0xce);
        EXPECT(gbc.readMem(0xc136), 0x77);
        // CE 016C
        gbc.setState(0x1496, 0xdcbe, 0xf340, 0x8444, 0x3182, 0xbec5, 0x0, 0x1);
        gbc.writeMem(0x1496, { 0xce, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xdcbe);
        EXPECT(gbc.pc(), 0x1498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 016E
        gbc.setState(0x9c6c, 0x4e78, 0xa330, 0x36d2, 0x31de, 0xe5de, 0x1, 0x0);
        gbc.writeMem(0x9c6c, { 0xce, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4e78);
        EXPECT(gbc.pc(), 0x9c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c6c), 0xce);
        EXPECT(gbc.readMem(0x9c6d), 0xe5);
        // CE 016F
        gbc.setState(0xa657, 0x44a7, 0x2340, 0x8599, 0x2b79, 0x960, 0x0, 0x1);
        gbc.writeMem(0xa657, { 0xce, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x44a7);
        EXPECT(gbc.pc(), 0xa659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa657), 0xce);
        EXPECT(gbc.readMem(0xa658), 0x5c);
        // CE 0170
        gbc.setState(0xbade, 0xf486, 0xc740, 0x827e, 0xe09e, 0xc606, 0x1, 0x1);
        gbc.writeMem(0xbade, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf486);
        EXPECT(gbc.pc(), 0xbae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbade), 0xce);
        EXPECT(gbc.readMem(0xbadf), 0xb2);
        // CE 0171
        gbc.setState(0x2162, 0xd122, 0xdb50, 0x62e9, 0xfdf3, 0x9382, 0x1, 0x1);
        gbc.writeMem(0x2162, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd122);
        EXPECT(gbc.pc(), 0x2164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0172
        gbc.setState(0xdd08, 0xdf44, 0xf4b0, 0xb2b9, 0xf602, 0x9662, 0x0, 0x1);
        gbc.writeMem(0xdd08, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdf44);
        EXPECT(gbc.pc(), 0xdd0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd08), 0xce);
        EXPECT(gbc.readMem(0xdd09), 0xac);
        // CE 0173
        gbc.setState(0x8be8, 0x3b00, 0x920, 0x16b9, 0xa5ec, 0x4f2e, 0x1, 0x1);
        gbc.writeMem(0x8be8, { 0xce, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3b00);
        EXPECT(gbc.pc(), 0x8bea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8be8), 0xce);
        EXPECT(gbc.readMem(0x8be9), 0x23);
        // CE 0174
        gbc.setState(0xeb6f, 0x5d98, 0x18c0, 0x2696, 0x1d8d, 0x5f7a, 0x1, 0x1);
        gbc.writeMem(0xeb6f, { 0xce, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5d98);
        EXPECT(gbc.pc(), 0xeb71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb6f), 0xce);
        EXPECT(gbc.readMem(0xeb70), 0xe5);
        // CE 0175
        gbc.setState(0xde3e, 0x9c17, 0x6be0, 0xc70c, 0xaa6c, 0xfcbd, 0x1, 0x0);
        gbc.writeMem(0xde3e, { 0xce, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9c17);
        EXPECT(gbc.pc(), 0xde40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3e), 0xce);
        EXPECT(gbc.readMem(0xde3f), 0xaf);
        // CE 0176
        gbc.setState(0xb051, 0x9976, 0x50a0, 0x5953, 0xd70b, 0xa397, 0x1, 0x1);
        gbc.writeMem(0xb051, { 0xce, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9976);
        EXPECT(gbc.pc(), 0xb053);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb051), 0xce);
        EXPECT(gbc.readMem(0xb052), 0xb);
        // CE 0177
        gbc.setState(0x2d15, 0x705e, 0xaba0, 0xc595, 0x11f1, 0xf3d5, 0x1, 0x1);
        gbc.writeMem(0x2d15, { 0xce, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x705e);
        EXPECT(gbc.pc(), 0x2d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0178
        gbc.setState(0x1a7c, 0x2546, 0xebd0, 0x48d3, 0x4e0f, 0xa7d4, 0x0, 0x0);
        gbc.writeMem(0x1a7c, { 0xce, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2546);
        EXPECT(gbc.pc(), 0x1a7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0179
        gbc.setState(0xa71e, 0x8c1a, 0xe320, 0x3ff5, 0x89d6, 0x8f5a, 0x1, 0x0);
        gbc.writeMem(0xa71e, { 0xce, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8c1a);
        EXPECT(gbc.pc(), 0xa720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa71e), 0xce);
        EXPECT(gbc.readMem(0xa71f), 0x78);
        // CE 017A
        gbc.setState(0xc3d9, 0x9179, 0x67f0, 0x57cd, 0xb7d5, 0x9924, 0x1, 0x1);
        gbc.writeMem(0xc3d9, { 0xce, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9179);
        EXPECT(gbc.pc(), 0xc3db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d9), 0xce);
        EXPECT(gbc.readMem(0xc3da), 0xd);
        // CE 017B
        gbc.setState(0x29d4, 0x6809, 0x2290, 0x4367, 0x3e41, 0x6b6c, 0x1, 0x1);
        gbc.writeMem(0x29d4, { 0xce, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6809);
        EXPECT(gbc.pc(), 0x29d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 017C
        gbc.setState(0x44bf, 0x29de, 0x5940, 0xda1f, 0xf31c, 0xa6ca, 0x0, 0x0);
        gbc.writeMem(0x44bf, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x29de);
        EXPECT(gbc.pc(), 0x44c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 017D
        gbc.setState(0xeaa7, 0xa59c, 0x6df0, 0x10e, 0x5316, 0x9591, 0x1, 0x0);
        gbc.writeMem(0xeaa7, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xa59c);
        EXPECT(gbc.pc(), 0xeaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa7), 0xce);
        EXPECT(gbc.readMem(0xeaa8), 0xa2);
        // CE 017E
        gbc.setState(0x2ace, 0x8b90, 0x5cc0, 0x8c74, 0xe4c4, 0x16e4, 0x0, 0x0);
        gbc.writeMem(0x2ace, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8b90);
        EXPECT(gbc.pc(), 0x2ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 017F
        gbc.setState(0x65ec, 0x1b54, 0xf7d0, 0xeb6e, 0x6223, 0x85bd, 0x1, 0x1);
        gbc.writeMem(0x65ec, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1b54);
        EXPECT(gbc.pc(), 0x65ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0180
        gbc.setState(0x6214, 0x5db4, 0x5d60, 0x6713, 0xafd4, 0x6e3d, 0x1, 0x0);
        gbc.writeMem(0x6214, { 0xce, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5db4);
        EXPECT(gbc.pc(), 0x6216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0181
        gbc.setState(0x1e46, 0x89c1, 0xcf20, 0x28af, 0x4a19, 0x146a, 0x1, 0x0);
        gbc.writeMem(0x1e46, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x89c1);
        EXPECT(gbc.pc(), 0x1e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0182
        gbc.setState(0x3f6f, 0xf3fb, 0xf050, 0x85f1, 0x23de, 0xdb95, 0x1, 0x1);
        gbc.writeMem(0x3f6f, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf3fb);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0183
        gbc.setState(0xa471, 0x93a2, 0x1760, 0xceed, 0x4854, 0x263c, 0x1, 0x0);
        gbc.writeMem(0xa471, { 0xce, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x93a2);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa471), 0xce);
        EXPECT(gbc.readMem(0xa472), 0x37);
        // CE 0184
        gbc.setState(0xc875, 0x1f33, 0x4570, 0x6242, 0x3576, 0x654a, 0x1, 0x1);
        gbc.writeMem(0xc875, { 0xce, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1f33);
        EXPECT(gbc.pc(), 0xc877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc875), 0xce);
        EXPECT(gbc.readMem(0xc876), 0x92);
        // CE 0185
        gbc.setState(0x8de7, 0x9ff, 0xc420, 0x25f2, 0x9cfd, 0xd85, 0x0, 0x1);
        gbc.writeMem(0x8de7, { 0xce, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9ff);
        EXPECT(gbc.pc(), 0x8de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de7), 0xce);
        EXPECT(gbc.readMem(0x8de8), 0x56);
        // CE 0186
        gbc.setState(0x48d3, 0xbae7, 0xf290, 0xc2ef, 0xa495, 0x365c, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0xce, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xbae7);
        EXPECT(gbc.pc(), 0x48d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0187
        gbc.setState(0x31da, 0xf1fd, 0xb560, 0xfe29, 0x4cf1, 0xc2b4, 0x1, 0x1);
        gbc.writeMem(0x31da, { 0xce, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf1fd);
        EXPECT(gbc.pc(), 0x31dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0188
        gbc.setState(0x6ec0, 0xd5a3, 0x9260, 0x86a1, 0x7da0, 0xc673, 0x0, 0x0);
        gbc.writeMem(0x6ec0, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd5a3);
        EXPECT(gbc.pc(), 0x6ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0189
        gbc.setState(0xed04, 0xdbde, 0xec80, 0x73ff, 0x1a09, 0x8140, 0x0, 0x1);
        gbc.writeMem(0xed04, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0xed06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed04), 0xce);
        EXPECT(gbc.readMem(0xed05), 0x1a);
        // CE 018A
        gbc.setState(0x80af, 0xcfd5, 0x80b0, 0x4116, 0x51f6, 0x474f, 0x0, 0x0);
        gbc.writeMem(0x80af, { 0xce, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcfd5);
        EXPECT(gbc.pc(), 0x80b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80af), 0xce);
        EXPECT(gbc.readMem(0x80b0), 0x1);
        // CE 018B
        gbc.setState(0xe440, 0x2f10, 0x2d50, 0x4354, 0x1660, 0x8b0e, 0x0, 0x1);
        gbc.writeMem(0xe440, { 0xce, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2f10);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe440), 0xce);
        EXPECT(gbc.readMem(0xe441), 0x62);
        // CE 018C
        gbc.setState(0x5f06, 0xd24e, 0xe6c0, 0xd1ba, 0xa377, 0x2808, 0x0, 0x0);
        gbc.writeMem(0x5f06, { 0xce, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd24e);
        EXPECT(gbc.pc(), 0x5f08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 018D
        gbc.setState(0x37e7, 0x7c37, 0x9d10, 0x24, 0x3bfe, 0xf2b6, 0x1, 0x1);
        gbc.writeMem(0x37e7, { 0xce, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7c37);
        EXPECT(gbc.pc(), 0x37e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 018E
        gbc.setState(0x1547, 0xdd24, 0x9e0, 0xcb79, 0x6ea4, 0x6c0c, 0x1, 0x0);
        gbc.writeMem(0x1547, { 0xce, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xdd24);
        EXPECT(gbc.pc(), 0x1549);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 018F
        gbc.setState(0xce94, 0x98cf, 0x5c0, 0xaa6e, 0x99b7, 0xf6a6, 0x1, 0x0);
        gbc.writeMem(0xce94, { 0xce, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x98cf);
        EXPECT(gbc.pc(), 0xce96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce94), 0xce);
        EXPECT(gbc.readMem(0xce95), 0x11);
        // CE 0190
        gbc.setState(0x2dc6, 0x3f5b, 0xc790, 0xc7dc, 0x4b4e, 0x16bd, 0x0, 0x0);
        gbc.writeMem(0x2dc6, { 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3f5b);
        EXPECT(gbc.pc(), 0x2dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0191
        gbc.setState(0x437, 0x1f3f, 0x8350, 0x2e3, 0x7e2d, 0x5a9d, 0x0, 0x1);
        gbc.writeMem(0x437, { 0xce, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1f3f);
        EXPECT(gbc.pc(), 0x439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0192
        gbc.setState(0xe3c1, 0xb30c, 0x6a10, 0x5c00, 0xf6c0, 0xdd5a, 0x0, 0x1);
        gbc.writeMem(0xe3c1, { 0xce, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb30c);
        EXPECT(gbc.pc(), 0xe3c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c1), 0xce);
        EXPECT(gbc.readMem(0xe3c2), 0x1d);
        // CE 0193
        gbc.setState(0xb996, 0x709f, 0xcb20, 0xb002, 0x6f43, 0x9aa0, 0x0, 0x1);
        gbc.writeMem(0xb996, { 0xce, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0xb998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb996), 0xce);
        EXPECT(gbc.readMem(0xb997), 0x44);
        // CE 0194
        gbc.setState(0xb8a7, 0xf422, 0x8e50, 0xc76f, 0xaa99, 0x914c, 0x1, 0x0);
        gbc.writeMem(0xb8a7, { 0xce, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xf422);
        EXPECT(gbc.pc(), 0xb8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8a7), 0xce);
        EXPECT(gbc.readMem(0xb8a8), 0xaf);
        // CE 0195
        gbc.setState(0x25c0, 0x5416, 0xb8c0, 0x1850, 0xb38e, 0xf540, 0x1, 0x1);
        gbc.writeMem(0x25c0, { 0xce, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5416);
        EXPECT(gbc.pc(), 0x25c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0196
        gbc.setState(0x8372, 0x23b2, 0x3590, 0xa63d, 0x274e, 0x7e2f, 0x0, 0x0);
        gbc.writeMem(0x8372, { 0xce, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x23b2);
        EXPECT(gbc.pc(), 0x8374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8372), 0xce);
        EXPECT(gbc.readMem(0x8373), 0x98);
        // CE 0197
        gbc.setState(0x9923, 0x5325, 0xc540, 0xfdaa, 0xc0f2, 0xf8cb, 0x1, 0x0);
        gbc.writeMem(0x9923, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x5325);
        EXPECT(gbc.pc(), 0x9925);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9923), 0xce);
        EXPECT(gbc.readMem(0x9924), 0xc0);
        // CE 0198
        gbc.setState(0x9397, 0x25a9, 0xdbd0, 0x438d, 0xcfc9, 0x735b, 0x0, 0x1);
        gbc.writeMem(0x9397, { 0xce, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x25a9);
        EXPECT(gbc.pc(), 0x9399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9397), 0xce);
        EXPECT(gbc.readMem(0x9398), 0x13);
        // CE 019A
        gbc.setState(0x159b, 0x7645, 0xd900, 0xc502, 0xdb58, 0x82fb, 0x1, 0x1);
        gbc.writeMem(0x159b, { 0xce, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7645);
        EXPECT(gbc.pc(), 0x159d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 019B
        gbc.setState(0x9c, 0x38ab, 0xf7a0, 0xb20a, 0xb075, 0x1270, 0x0, 0x0);
        gbc.writeMem(0x9c, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x38ab);
        EXPECT(gbc.pc(), 0x9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 019C
        gbc.setState(0x5002, 0x9111, 0x48b0, 0xa0bb, 0x6317, 0xb950, 0x1, 0x1);
        gbc.writeMem(0x5002, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0x5004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 019D
        gbc.setState(0x3446, 0x5e9d, 0x8d50, 0xcafa, 0xad8c, 0xd7e0, 0x1, 0x1);
        gbc.writeMem(0x3446, { 0xce, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5e9d);
        EXPECT(gbc.pc(), 0x3448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 019E
        gbc.setState(0xe545, 0xa763, 0xf20, 0x5a1e, 0x1afc, 0xf030, 0x0, 0x1);
        gbc.writeMem(0xe545, { 0xce, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa763);
        EXPECT(gbc.pc(), 0xe547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe545), 0xce);
        EXPECT(gbc.readMem(0xe546), 0x16);
        // CE 019F
        gbc.setState(0x905b, 0xbc4b, 0xdc40, 0xacc, 0x3967, 0x69ec, 0x1, 0x1);
        gbc.writeMem(0x905b, { 0xce, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbc4b);
        EXPECT(gbc.pc(), 0x905d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x905b), 0xce);
        EXPECT(gbc.readMem(0x905c), 0xb8);
        // CE 01A0
        gbc.setState(0x1b22, 0x8f82, 0xea20, 0x8731, 0x78cf, 0xce76, 0x1, 0x0);
        gbc.writeMem(0x1b22, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8f82);
        EXPECT(gbc.pc(), 0x1b24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01A1
        gbc.setState(0x30c1, 0xfa7e, 0x7f50, 0x923, 0x691a, 0x5039, 0x0, 0x1);
        gbc.writeMem(0x30c1, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfa7e);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01A3
        gbc.setState(0x1355, 0x1da7, 0xbf00, 0x76eb, 0x1315, 0x795b, 0x0, 0x1);
        gbc.writeMem(0x1355, { 0xce, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1da7);
        EXPECT(gbc.pc(), 0x1357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01A4
        gbc.setState(0x5714, 0x9ca2, 0xa3a0, 0xcb7a, 0xec05, 0x4884, 0x0, 0x0);
        gbc.writeMem(0x5714, { 0xce, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9ca2);
        EXPECT(gbc.pc(), 0x5716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01A5
        gbc.setState(0x2bf0, 0x6fca, 0x2fc0, 0x2eb9, 0x31fd, 0xd812, 0x1, 0x0);
        gbc.writeMem(0x2bf0, { 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x2bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01A6
        gbc.setState(0x4782, 0x9d05, 0xbdb0, 0xdd4d, 0x2f5f, 0x7aeb, 0x1, 0x0);
        gbc.writeMem(0x4782, { 0xce, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9d05);
        EXPECT(gbc.pc(), 0x4784);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01A7
        gbc.setState(0x82ac, 0xa86d, 0x8ae0, 0x2083, 0x5222, 0x6072, 0x0, 0x0);
        gbc.writeMem(0x82ac, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa86d);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ac), 0xce);
        EXPECT(gbc.readMem(0x82ad), 0xef);
        // CE 01A8
        gbc.setState(0xb843, 0xa006, 0x26f0, 0xcd35, 0xd9c8, 0x73f5, 0x0, 0x1);
        gbc.writeMem(0xb843, { 0xce, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa006);
        EXPECT(gbc.pc(), 0xb845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb843), 0xce);
        EXPECT(gbc.readMem(0xb844), 0xc8);
        // CE 01A9
        gbc.setState(0x8fd9, 0x67c8, 0x7150, 0x4e39, 0xdb25, 0x8a7c, 0x0, 0x0);
        gbc.writeMem(0x8fd9, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0x8fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd9), 0xce);
        EXPECT(gbc.readMem(0x8fda), 0x77);
        // CE 01AA
        gbc.setState(0x926e, 0xdd57, 0xc850, 0x2488, 0x4599, 0xa159, 0x0, 0x1);
        gbc.writeMem(0x926e, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdd57);
        EXPECT(gbc.pc(), 0x9270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926e), 0xce);
        EXPECT(gbc.readMem(0x926f), 0xef);
        // CE 01AB
        gbc.setState(0x621f, 0xf5d, 0x5200, 0xc307, 0x6b0d, 0x3108, 0x0, 0x0);
        gbc.writeMem(0x621f, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xf5d);
        EXPECT(gbc.pc(), 0x6221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01AD
        gbc.setState(0x7ca1, 0xfa32, 0xa350, 0x2fee, 0xdc89, 0xe6c3, 0x0, 0x1);
        gbc.writeMem(0x7ca1, { 0xce, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfa32);
        EXPECT(gbc.pc(), 0x7ca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01AE
        gbc.setState(0xb1b0, 0xf9d, 0xf910, 0x18a9, 0x42e, 0xab55, 0x0, 0x0);
        gbc.writeMem(0xb1b0, { 0xce, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf9d);
        EXPECT(gbc.pc(), 0xb1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b0), 0xce);
        EXPECT(gbc.readMem(0xb1b1), 0x76);
        // CE 01AF
        gbc.setState(0x4e8d, 0xe699, 0x8340, 0x8e5a, 0x9794, 0x50b9, 0x1, 0x1);
        gbc.writeMem(0x4e8d, { 0xce, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe699);
        EXPECT(gbc.pc(), 0x4e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01B0
        gbc.setState(0xe782, 0x338, 0x2490, 0x3a8a, 0x33be, 0x1a83, 0x0, 0x0);
        gbc.writeMem(0xe782, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x338);
        EXPECT(gbc.pc(), 0xe784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe782), 0xce);
        EXPECT(gbc.readMem(0xe783), 0xa9);
        // CE 01B1
        gbc.setState(0x8f3, 0x391e, 0xa4f0, 0xd9a4, 0x9d01, 0x3c6a, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x391e);
        EXPECT(gbc.pc(), 0x8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01B2
        gbc.setState(0x2f92, 0xc1a7, 0x3860, 0x10fa, 0x38de, 0x4312, 0x1, 0x1);
        gbc.writeMem(0x2f92, { 0xce, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc1a7);
        EXPECT(gbc.pc(), 0x2f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01B3
        gbc.setState(0x9cd6, 0xa4d1, 0x3650, 0xb91d, 0xadff, 0xd5f5, 0x1, 0x1);
        gbc.writeMem(0x9cd6, { 0xce, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa4d1);
        EXPECT(gbc.pc(), 0x9cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd6), 0xce);
        EXPECT(gbc.readMem(0x9cd7), 0x1d);
        // CE 01B4
        gbc.setState(0x70fe, 0xdd2f, 0x94a0, 0x2ff5, 0x8836, 0xb032, 0x1, 0x0);
        gbc.writeMem(0x70fe, { 0xce, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdd2f);
        EXPECT(gbc.pc(), 0x7100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01B6
        gbc.setState(0x4626, 0x5b9c, 0x5e0, 0x9cba, 0x9566, 0xfead, 0x0, 0x0);
        gbc.writeMem(0x4626, { 0xce, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5b9c);
        EXPECT(gbc.pc(), 0x4628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01B7
        gbc.setState(0x212a, 0x244, 0xa4f0, 0xfc46, 0x4669, 0xae11, 0x0, 0x1);
        gbc.writeMem(0x212a, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x244);
        EXPECT(gbc.pc(), 0x212c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01B8
        gbc.setState(0xd687, 0x79c1, 0x2680, 0x2d45, 0xbf1e, 0x356c, 0x1, 0x1);
        gbc.writeMem(0xd687, { 0xce, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x79c1);
        EXPECT(gbc.pc(), 0xd689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd687), 0xce);
        EXPECT(gbc.readMem(0xd688), 0xab);
        // CE 01B9
        gbc.setState(0xaa18, 0x8728, 0xa740, 0x29ac, 0xfeca, 0x36c6, 0x1, 0x0);
        gbc.writeMem(0xaa18, { 0xce, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8728);
        EXPECT(gbc.pc(), 0xaa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa18), 0xce);
        EXPECT(gbc.readMem(0xaa19), 0xe2);
        // CE 01BA
        gbc.setState(0xb5f3, 0xb5e1, 0x7d50, 0xee34, 0x3613, 0x7c28, 0x0, 0x1);
        gbc.writeMem(0xb5f3, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb5e1);
        EXPECT(gbc.pc(), 0xb5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5f3), 0xce);
        EXPECT(gbc.readMem(0xb5f4), 0x58);
        // CE 01BB
        gbc.setState(0xc825, 0x58b6, 0xd4b0, 0xd757, 0xc572, 0x6d3c, 0x0, 0x0);
        gbc.writeMem(0xc825, { 0xce, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x58b6);
        EXPECT(gbc.pc(), 0xc827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc825), 0xce);
        EXPECT(gbc.readMem(0xc826), 0x7e);
        // CE 01BC
        gbc.setState(0xde, 0xbc7f, 0xfb00, 0x2c97, 0x93a6, 0x95a4, 0x1, 0x1);
        gbc.writeMem(0xde, { 0xce, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbc7f);
        EXPECT(gbc.pc(), 0xe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01BE
        gbc.setState(0x1c2, 0xe18e, 0x38b0, 0xe1e0, 0xc0a3, 0xcca9, 0x1, 0x1);
        gbc.writeMem(0x1c2, { 0xce, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe18e);
        EXPECT(gbc.pc(), 0x1c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01BF
        gbc.setState(0x148c, 0xe06f, 0x34b0, 0x6c83, 0x148a, 0x72b2, 0x1, 0x0);
        gbc.writeMem(0x148c, { 0xce, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe06f);
        EXPECT(gbc.pc(), 0x148e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01C1
        gbc.setState(0x957a, 0xc5f6, 0xef80, 0x41d0, 0x45a3, 0xadeb, 0x1, 0x0);
        gbc.writeMem(0x957a, { 0xce, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc5f6);
        EXPECT(gbc.pc(), 0x957c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x957a), 0xce);
        EXPECT(gbc.readMem(0x957b), 0xd2);
        // CE 01C2
        gbc.setState(0xe7f9, 0x7a08, 0xade0, 0x22e3, 0x8a1b, 0xec5f, 0x1, 0x1);
        gbc.writeMem(0xe7f9, { 0xce, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0xe7fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f9), 0xce);
        EXPECT(gbc.readMem(0xe7fa), 0x20);
        // CE 01C3
        gbc.setState(0xa34e, 0x5ee8, 0x32e0, 0x3135, 0x240, 0xb926, 0x0, 0x1);
        gbc.writeMem(0xa34e, { 0xce, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x5ee8);
        EXPECT(gbc.pc(), 0xa350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34e), 0xce);
        EXPECT(gbc.readMem(0xa34f), 0x11);
        // CE 01C4
        gbc.setState(0x782f, 0x40dc, 0xf330, 0xa5a4, 0x11ab, 0x8cb2, 0x0, 0x1);
        gbc.writeMem(0x782f, { 0xce, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x40dc);
        EXPECT(gbc.pc(), 0x7831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01C5
        gbc.setState(0xd95d, 0x5dde, 0xb800, 0x36f5, 0x6942, 0x44b, 0x0, 0x0);
        gbc.writeMem(0xd95d, { 0xce, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5dde);
        EXPECT(gbc.pc(), 0xd95f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95d), 0xce);
        EXPECT(gbc.readMem(0xd95e), 0x32);
        // CE 01C6
        gbc.setState(0xb427, 0x19bb, 0x15a0, 0xe402, 0xa5e1, 0x15ac, 0x1, 0x0);
        gbc.writeMem(0xb427, { 0xce, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x19bb);
        EXPECT(gbc.pc(), 0xb429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb427), 0xce);
        EXPECT(gbc.readMem(0xb428), 0x66);
        // CE 01C7
        gbc.setState(0x9701, 0x9c2e, 0x75a0, 0x42d5, 0x2417, 0x6dd4, 0x0, 0x1);
        gbc.writeMem(0x9701, { 0xce, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x9c2e);
        EXPECT(gbc.pc(), 0x9703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9701), 0xce);
        EXPECT(gbc.readMem(0x9702), 0x0);
        // CE 01C8
        gbc.setState(0x7aa0, 0x80d0, 0xaa40, 0xb7e0, 0xfa92, 0x71d5, 0x1, 0x0);
        gbc.writeMem(0x7aa0, { 0xce, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0x7aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01C9
        gbc.setState(0xe62a, 0xc1de, 0xcac0, 0x7d8, 0x60ca, 0xe4a4, 0x0, 0x1);
        gbc.writeMem(0xe62a, { 0xce, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc1de);
        EXPECT(gbc.pc(), 0xe62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe62a), 0xce);
        EXPECT(gbc.readMem(0xe62b), 0x37);
        // CE 01CA
        gbc.setState(0x18fb, 0x8a50, 0x93b0, 0x7c9, 0x5345, 0xe10e, 0x0, 0x1);
        gbc.writeMem(0x18fb, { 0xce, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8a50);
        EXPECT(gbc.pc(), 0x18fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01CB
        gbc.setState(0x5753, 0x2746, 0xa650, 0x4322, 0x7e5f, 0xc1c, 0x1, 0x1);
        gbc.writeMem(0x5753, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x2746);
        EXPECT(gbc.pc(), 0x5755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01CC
        gbc.setState(0xe8fe, 0x1d9d, 0x1140, 0x6a71, 0x18a4, 0xc608, 0x0, 0x1);
        gbc.writeMem(0xe8fe, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1d9d);
        EXPECT(gbc.pc(), 0xe900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8fe), 0xce);
        EXPECT(gbc.readMem(0xe8ff), 0x3f);
        // CE 01CD
        gbc.setState(0x1ef0, 0x83e8, 0x8570, 0x122e, 0x2246, 0xeb2c, 0x1, 0x1);
        gbc.writeMem(0x1ef0, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x83e8);
        EXPECT(gbc.pc(), 0x1ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01CE
        gbc.setState(0xe1fd, 0x3f80, 0x39e0, 0x3b79, 0x45de, 0xa20c, 0x1, 0x0);
        gbc.writeMem(0xe1fd, { 0xce, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3f80);
        EXPECT(gbc.pc(), 0xe1ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1fd), 0xce);
        EXPECT(gbc.readMem(0xe1fe), 0x99);
        // CE 01CF
        gbc.setState(0x892a, 0x2724, 0xc660, 0x7a2a, 0x3f45, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0x892a, { 0xce, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2724);
        EXPECT(gbc.pc(), 0x892c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x892a), 0xce);
        EXPECT(gbc.readMem(0x892b), 0xb7);
        // CE 01D0
        gbc.setState(0xc3a, 0x4eec, 0xb300, 0xc8dd, 0xd00f, 0x7838, 0x0, 0x1);
        gbc.writeMem(0xc3a, { 0xce, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4eec);
        EXPECT(gbc.pc(), 0xc3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01D1
        gbc.setState(0x8a6, 0x3e59, 0xa400, 0x4226, 0x7dab, 0xe26f, 0x0, 0x1);
        gbc.writeMem(0x8a6, { 0xce, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x3e59);
        EXPECT(gbc.pc(), 0x8a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01D2
        gbc.setState(0xec72, 0x9690, 0xab30, 0x2b0, 0x10bd, 0xb5d0, 0x0, 0x0);
        gbc.writeMem(0xec72, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9690);
        EXPECT(gbc.pc(), 0xec74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec72), 0xce);
        EXPECT(gbc.readMem(0xec73), 0x5d);
        // CE 01D3
        gbc.setState(0x176b, 0x8fbd, 0x4420, 0xdc5c, 0x900c, 0x851c, 0x0, 0x0);
        gbc.writeMem(0x176b, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8fbd);
        EXPECT(gbc.pc(), 0x176d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01D4
        gbc.setState(0x2ff4, 0x64ac, 0xe400, 0x6e60, 0x369f, 0x7dd8, 0x1, 0x1);
        gbc.writeMem(0x2ff4, { 0xce, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x64ac);
        EXPECT(gbc.pc(), 0x2ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01D5
        gbc.setState(0x260e, 0x88ca, 0xdc0, 0xc7e3, 0x6524, 0xd58f, 0x1, 0x0);
        gbc.writeMem(0x260e, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x88ca);
        EXPECT(gbc.pc(), 0x2610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01D6
        gbc.setState(0x589b, 0x7258, 0x70e0, 0x3c96, 0x835, 0xcfd3, 0x1, 0x1);
        gbc.writeMem(0x589b, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7258);
        EXPECT(gbc.pc(), 0x589d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01D7
        gbc.setState(0xa220, 0x6aae, 0xd8b0, 0xacef, 0x23ff, 0xc18d, 0x0, 0x1);
        gbc.writeMem(0xa220, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6aae);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa220), 0xce);
        EXPECT(gbc.readMem(0xa221), 0xac);
        // CE 01D8
        gbc.setState(0xd748, 0x537d, 0x2870, 0x751a, 0x7442, 0xe1b, 0x1, 0x0);
        gbc.writeMem(0xd748, { 0xce, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x537d);
        EXPECT(gbc.pc(), 0xd74a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd748), 0xce);
        EXPECT(gbc.readMem(0xd749), 0x3c);
        // CE 01D9
        gbc.setState(0xdf50, 0x7658, 0xbbb0, 0xdd71, 0x5989, 0xb05f, 0x0, 0x0);
        gbc.writeMem(0xdf50, { 0xce, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7658);
        EXPECT(gbc.pc(), 0xdf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf50), 0xce);
        EXPECT(gbc.readMem(0xdf51), 0xc5);
        // CE 01DA
        gbc.setState(0xbd04, 0xfbae, 0xdbf0, 0xadc0, 0x4315, 0x9f60, 0x0, 0x1);
        gbc.writeMem(0xbd04, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfbae);
        EXPECT(gbc.pc(), 0xbd06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd04), 0xce);
        EXPECT(gbc.readMem(0xbd05), 0xf1);
        // CE 01DB
        gbc.setState(0x8dc5, 0x94bb, 0x90f0, 0x4e65, 0xd579, 0x8ee7, 0x1, 0x1);
        gbc.writeMem(0x8dc5, { 0xce, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x94bb);
        EXPECT(gbc.pc(), 0x8dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dc5), 0xce);
        EXPECT(gbc.readMem(0x8dc6), 0xa1);
        // CE 01DC
        gbc.setState(0x3593, 0x1c7c, 0x1030, 0x3ce1, 0x5869, 0x346f, 0x1, 0x0);
        gbc.writeMem(0x3593, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1c7c);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01DD
        gbc.setState(0x9d24, 0xabe5, 0xa60, 0x3a1b, 0xebca, 0x68cf, 0x0, 0x1);
        gbc.writeMem(0x9d24, { 0xce, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xabe5);
        EXPECT(gbc.pc(), 0x9d26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d24), 0xce);
        EXPECT(gbc.readMem(0x9d25), 0x6b);
        // CE 01DE
        gbc.setState(0x88e5, 0x8c1, 0xf590, 0xa814, 0x42b9, 0xe7a1, 0x0, 0x0);
        gbc.writeMem(0x88e5, { 0xce, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8c1);
        EXPECT(gbc.pc(), 0x88e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e5), 0xce);
        EXPECT(gbc.readMem(0x88e6), 0xbd);
        // CE 01DF
        gbc.setState(0x8c66, 0xe597, 0xeb70, 0x6186, 0xa5ac, 0x4afe, 0x1, 0x1);
        gbc.writeMem(0x8c66, { 0xce, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe597);
        EXPECT(gbc.pc(), 0x8c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c66), 0xce);
        EXPECT(gbc.readMem(0x8c67), 0x5f);
        // CE 01E0
        gbc.setState(0x126d, 0xf6fb, 0x7480, 0x7d21, 0x9332, 0x3c97, 0x1, 0x0);
        gbc.writeMem(0x126d, { 0xce, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf6fb);
        EXPECT(gbc.pc(), 0x126f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01E1
        gbc.setState(0xa49f, 0x5da0, 0x74f0, 0xe36b, 0x3391, 0x6a05, 0x1, 0x1);
        gbc.writeMem(0xa49f, { 0xce, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x5da0);
        EXPECT(gbc.pc(), 0xa4a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49f), 0xce);
        EXPECT(gbc.readMem(0xa4a0), 0x87);
        // CE 01E2
        gbc.setState(0xd531, 0x1405, 0xfb60, 0x7dea, 0x9ee1, 0xfbae, 0x0, 0x0);
        gbc.writeMem(0xd531, { 0xce, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1405);
        EXPECT(gbc.pc(), 0xd533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd531), 0xce);
        EXPECT(gbc.readMem(0xd532), 0x76);
        // CE 01E3
        gbc.setState(0x9d39, 0x3eff, 0x8860, 0x241a, 0xf0e0, 0xf96d, 0x0, 0x1);
        gbc.writeMem(0x9d39, { 0xce, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3eff);
        EXPECT(gbc.pc(), 0x9d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d39), 0xce);
        EXPECT(gbc.readMem(0x9d3a), 0x6);
        // CE 01E4
        gbc.setState(0xb77d, 0x26ef, 0xbdc0, 0xf0e4, 0xd050, 0xd186, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0xce, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x26ef);
        EXPECT(gbc.pc(), 0xb77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb77d), 0xce);
        EXPECT(gbc.readMem(0xb77e), 0x24);
        // CE 01E5
        gbc.setState(0x853d, 0x9061, 0x1fd0, 0x310b, 0x66dd, 0x3b34, 0x1, 0x0);
        gbc.writeMem(0x853d, { 0xce, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9061);
        EXPECT(gbc.pc(), 0x853f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x853d), 0xce);
        EXPECT(gbc.readMem(0x853e), 0x30);
        // CE 01E6
        gbc.setState(0x4b37, 0xae47, 0xa9a0, 0xd9ba, 0x50c0, 0x4e7c, 0x0, 0x1);
        gbc.writeMem(0x4b37, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xae47);
        EXPECT(gbc.pc(), 0x4b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01E7
        gbc.setState(0x6439, 0xe607, 0xc870, 0x43a5, 0x227c, 0xc535, 0x1, 0x1);
        gbc.writeMem(0x6439, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe607);
        EXPECT(gbc.pc(), 0x643b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01E8
        gbc.setState(0xbd38, 0x6743, 0x38a0, 0x5aac, 0x1393, 0xca47, 0x0, 0x0);
        gbc.writeMem(0xbd38, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0xbd3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd38), 0xce);
        EXPECT(gbc.readMem(0xbd39), 0x5d);
        // CE 01EB
        gbc.setState(0xb09a, 0xc76c, 0x1320, 0xb158, 0xea9c, 0xbe49, 0x0, 0x1);
        gbc.writeMem(0xb09a, { 0xce, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc76c);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xce);
        EXPECT(gbc.readMem(0xb09b), 0xd);
        // CE 01EC
        gbc.setState(0xc710, 0x2639, 0xac70, 0x4c3c, 0xaa50, 0xd597, 0x0, 0x0);
        gbc.writeMem(0xc710, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2639);
        EXPECT(gbc.pc(), 0xc712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc710), 0xce);
        EXPECT(gbc.readMem(0xc711), 0x94);
        // CE 01ED
        gbc.setState(0xe072, 0xb694, 0x860, 0xe7f9, 0x70f6, 0xc26d, 0x0, 0x1);
        gbc.writeMem(0xe072, { 0xce, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xb694);
        EXPECT(gbc.pc(), 0xe074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe072), 0xce);
        EXPECT(gbc.readMem(0xe073), 0xa3);
        // CE 01EE
        gbc.setState(0xb100, 0x6a2b, 0x5fc0, 0x94fb, 0x9ee4, 0x3d2b, 0x1, 0x0);
        gbc.writeMem(0xb100, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6a2b);
        EXPECT(gbc.pc(), 0xb102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0xce);
        EXPECT(gbc.readMem(0xb101), 0x18);
        // CE 01EF
        gbc.setState(0x31d8, 0x14b, 0xe850, 0xd4b0, 0x9e81, 0x5367, 0x0, 0x1);
        gbc.writeMem(0x31d8, { 0xce, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x14b);
        EXPECT(gbc.pc(), 0x31da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01F0
        gbc.setState(0x5fbf, 0xcd26, 0xccf0, 0xe521, 0x705d, 0xdb75, 0x0, 0x0);
        gbc.writeMem(0x5fbf, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcd26);
        EXPECT(gbc.pc(), 0x5fc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01F1
        gbc.setState(0xc4e4, 0x82a5, 0x5db0, 0x31bd, 0xbf21, 0x7649, 0x0, 0x0);
        gbc.writeMem(0xc4e4, { 0xce, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x82a5);
        EXPECT(gbc.pc(), 0xc4e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4e4), 0xce);
        EXPECT(gbc.readMem(0xc4e5), 0xc3);
        // CE 01F2
        gbc.setState(0xaab8, 0x7460, 0x1390, 0x285d, 0x6887, 0x2e54, 0x1, 0x0);
        gbc.writeMem(0xaab8, { 0xce, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7460);
        EXPECT(gbc.pc(), 0xaaba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaab8), 0xce);
        EXPECT(gbc.readMem(0xaab9), 0x83);
        // CE 01F3
        gbc.setState(0xbee, 0x5f30, 0x3670, 0xd5ab, 0xc1c1, 0x3b7f, 0x0, 0x1);
        gbc.writeMem(0xbee, { 0xce, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5f30);
        EXPECT(gbc.pc(), 0xbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01F4
        gbc.setState(0x225, 0x6964, 0x5f60, 0xf953, 0xf125, 0xa591, 0x0, 0x0);
        gbc.writeMem(0x225, { 0xce, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6964);
        EXPECT(gbc.pc(), 0x227);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01F5
        gbc.setState(0x30a4, 0xb1f1, 0x2630, 0x9d40, 0x814b, 0xac85, 0x1, 0x1);
        gbc.writeMem(0x30a4, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb1f1);
        EXPECT(gbc.pc(), 0x30a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01F6
        gbc.setState(0xbad8, 0x77b8, 0x3cc0, 0x7fbb, 0x5d41, 0xda7a, 0x0, 0x0);
        gbc.writeMem(0xbad8, { 0xce, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x77b8);
        EXPECT(gbc.pc(), 0xbada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad8), 0xce);
        EXPECT(gbc.readMem(0xbad9), 0xfb);
        // CE 01F7
        gbc.setState(0x6ff1, 0xe424, 0xdc80, 0xc3c4, 0xa4ee, 0xd237, 0x1, 0x0);
        gbc.writeMem(0x6ff1, { 0xce, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe424);
        EXPECT(gbc.pc(), 0x6ff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 01F8
        gbc.setState(0x8fe5, 0x2861, 0x7410, 0x1eb2, 0x167c, 0xdd2, 0x1, 0x0);
        gbc.writeMem(0x8fe5, { 0xce, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0x8fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe5), 0xce);
        EXPECT(gbc.readMem(0x8fe6), 0x6c);
        // CE 01F9
        gbc.setState(0x6165, 0xbe33, 0x7f90, 0x7dda, 0x77c, 0x733b, 0x0, 0x0);
        gbc.writeMem(0x6165, { 0xce, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbe33);
        EXPECT(gbc.pc(), 0x6167);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01FA
        gbc.setState(0x6d8e, 0x6e8, 0x9750, 0x353e, 0xc16e, 0x2158, 0x1, 0x0);
        gbc.writeMem(0x6d8e, { 0xce, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6e8);
        EXPECT(gbc.pc(), 0x6d90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 01FC
        gbc.setState(0xd3a5, 0xaace, 0x3030, 0x459d, 0xd538, 0x3742, 0x0, 0x0);
        gbc.writeMem(0xd3a5, { 0xce, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaace);
        EXPECT(gbc.pc(), 0xd3a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a5), 0xce);
        EXPECT(gbc.readMem(0xd3a6), 0xf7);
        // CE 01FD
        gbc.setState(0x7950, 0x7715, 0x9eb0, 0xe360, 0xf52e, 0xce09, 0x0, 0x1);
        gbc.writeMem(0x7950, { 0xce, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7715);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 01FE
        gbc.setState(0x3f5c, 0x7ba0, 0x30a0, 0x5c30, 0x2eef, 0xd2f8, 0x1, 0x1);
        gbc.writeMem(0x3f5c, { 0xce, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7ba0);
        EXPECT(gbc.pc(), 0x3f5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 01FF
        gbc.setState(0x61ff, 0x9924, 0x4fd0, 0x98fe, 0x9e10, 0x6a4a, 0x0, 0x0);
        gbc.writeMem(0x61ff, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x9924);
        EXPECT(gbc.pc(), 0x6201);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0200
        gbc.setState(0xea3f, 0x515f, 0xe2b0, 0x98a9, 0xffb0, 0x6229, 0x0, 0x0);
        gbc.writeMem(0xea3f, { 0xce, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x515f);
        EXPECT(gbc.pc(), 0xea41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea3f), 0xce);
        EXPECT(gbc.readMem(0xea40), 0x9e);
        // CE 0201
        gbc.setState(0x618a, 0x5ba7, 0x1bc0, 0x923, 0x91ba, 0xb24e, 0x0, 0x1);
        gbc.writeMem(0x618a, { 0xce, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5ba7);
        EXPECT(gbc.pc(), 0x618c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0202
        gbc.setState(0x9a06, 0xb615, 0x740, 0xb0ce, 0x1c60, 0x38ae, 0x1, 0x1);
        gbc.writeMem(0x9a06, { 0xce, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xb615);
        EXPECT(gbc.pc(), 0x9a08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a06), 0xce);
        EXPECT(gbc.readMem(0x9a07), 0xc2);
        // CE 0204
        gbc.setState(0x2150, 0x7827, 0x9fd0, 0x8709, 0x535, 0x434e, 0x0, 0x0);
        gbc.writeMem(0x2150, { 0xce, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7827);
        EXPECT(gbc.pc(), 0x2152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0205
        gbc.setState(0xde1d, 0x72c4, 0xb0b0, 0x7875, 0xf416, 0x8ae9, 0x0, 0x0);
        gbc.writeMem(0xde1d, { 0xce, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x72c4);
        EXPECT(gbc.pc(), 0xde1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde1d), 0xce);
        EXPECT(gbc.readMem(0xde1e), 0x67);
        // CE 0206
        gbc.setState(0xe98a, 0x7c44, 0x1650, 0xdbd2, 0x5a57, 0xe9e8, 0x1, 0x1);
        gbc.writeMem(0xe98a, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7c44);
        EXPECT(gbc.pc(), 0xe98c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe98a), 0xce);
        EXPECT(gbc.readMem(0xe98b), 0x18);
        // CE 0207
        gbc.setState(0x6ad4, 0x9c7f, 0xac90, 0xa712, 0x2484, 0x55f5, 0x1, 0x1);
        gbc.writeMem(0x6ad4, { 0xce, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9c7f);
        EXPECT(gbc.pc(), 0x6ad6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0208
        gbc.setState(0x9410, 0xbc9f, 0x6fa0, 0xd569, 0xd595, 0x69c, 0x1, 0x1);
        gbc.writeMem(0x9410, { 0xce, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbc9f);
        EXPECT(gbc.pc(), 0x9412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9410), 0xce);
        EXPECT(gbc.readMem(0x9411), 0xc8);
        // CE 0209
        gbc.setState(0xe6a3, 0x1ee, 0xac40, 0x8409, 0x90f9, 0xd46a, 0x1, 0x1);
        gbc.writeMem(0xe6a3, { 0xce, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x1ee);
        EXPECT(gbc.pc(), 0xe6a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a3), 0xce);
        EXPECT(gbc.readMem(0xe6a4), 0x9a);
        // CE 020A
        gbc.setState(0xdb7a, 0x602d, 0xd490, 0x7b28, 0x5796, 0x75d4, 0x1, 0x0);
        gbc.writeMem(0xdb7a, { 0xce, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x602d);
        EXPECT(gbc.pc(), 0xdb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7a), 0xce);
        EXPECT(gbc.readMem(0xdb7b), 0xe0);
        // CE 020B
        gbc.setState(0x5e46, 0xbf11, 0x67a0, 0xb3bc, 0xea84, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0x5e46, { 0xce, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbf11);
        EXPECT(gbc.pc(), 0x5e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 020C
        gbc.setState(0x3cc2, 0xaa96, 0xb120, 0xeba0, 0x7743, 0xd792, 0x1, 0x1);
        gbc.writeMem(0x3cc2, { 0xce, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaa96);
        EXPECT(gbc.pc(), 0x3cc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 020D
        gbc.setState(0x8ad1, 0x26b3, 0x66d0, 0x5cbb, 0xadad, 0xb8b7, 0x1, 0x1);
        gbc.writeMem(0x8ad1, { 0xce, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x26b3);
        EXPECT(gbc.pc(), 0x8ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ad1), 0xce);
        EXPECT(gbc.readMem(0x8ad2), 0xc3);
        // CE 020E
        gbc.setState(0x5302, 0x2bb7, 0x6260, 0x9b70, 0xb8ae, 0x3992, 0x0, 0x0);
        gbc.writeMem(0x5302, { 0xce, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2bb7);
        EXPECT(gbc.pc(), 0x5304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 020F
        gbc.setState(0xdc94, 0x4e7a, 0xb050, 0xa378, 0xcf46, 0xf149, 0x1, 0x0);
        gbc.writeMem(0xdc94, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4e7a);
        EXPECT(gbc.pc(), 0xdc96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc94), 0xce);
        EXPECT(gbc.readMem(0xdc95), 0x3a);
        // CE 0210
        gbc.setState(0x897d, 0xccba, 0xbe00, 0x95fe, 0x4f83, 0xb1aa, 0x0, 0x0);
        gbc.writeMem(0x897d, { 0xce, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xccba);
        EXPECT(gbc.pc(), 0x897f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897d), 0xce);
        EXPECT(gbc.readMem(0x897e), 0x57);
        // CE 0211
        gbc.setState(0x87c0, 0xfdcd, 0x7e00, 0x1505, 0xe87b, 0x4f22, 0x1, 0x1);
        gbc.writeMem(0x87c0, { 0xce, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfdcd);
        EXPECT(gbc.pc(), 0x87c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c0), 0xce);
        EXPECT(gbc.readMem(0x87c1), 0xb5);
        // CE 0212
        gbc.setState(0xe0e2, 0x9833, 0xa3c0, 0xf1b0, 0x6dab, 0x14ad, 0x1, 0x1);
        gbc.writeMem(0xe0e2, { 0xce, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x9833);
        EXPECT(gbc.pc(), 0xe0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e2), 0xce);
        EXPECT(gbc.readMem(0xe0e3), 0x69);
        // CE 0213
        gbc.setState(0xfa1, 0x4a84, 0x6100, 0xeba2, 0xa3bb, 0xfec4, 0x1, 0x0);
        gbc.writeMem(0xfa1, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4a84);
        EXPECT(gbc.pc(), 0xfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0214
        gbc.setState(0x9a6f, 0x1f0d, 0x1040, 0xf0a5, 0x3703, 0x543d, 0x1, 0x0);
        gbc.writeMem(0x9a6f, { 0xce, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1f0d);
        EXPECT(gbc.pc(), 0x9a71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a6f), 0xce);
        EXPECT(gbc.readMem(0x9a70), 0xd2);
        // CE 0215
        gbc.setState(0xef99, 0x958d, 0x9f40, 0xbf5a, 0xbc3b, 0x7f16, 0x1, 0x1);
        gbc.writeMem(0xef99, { 0xce, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x958d);
        EXPECT(gbc.pc(), 0xef9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef99), 0xce);
        EXPECT(gbc.readMem(0xef9a), 0xfd);
        // CE 0216
        gbc.setState(0x2a8b, 0x515d, 0x4330, 0x1d74, 0x3f70, 0x431b, 0x0, 0x0);
        gbc.writeMem(0x2a8b, { 0xce, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x515d);
        EXPECT(gbc.pc(), 0x2a8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0217
        gbc.setState(0x2ba, 0x6446, 0x14d0, 0xa3bd, 0xc8b2, 0x102c, 0x0, 0x1);
        gbc.writeMem(0x2ba, { 0xce, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6446);
        EXPECT(gbc.pc(), 0x2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0218
        gbc.setState(0x7c40, 0xa721, 0x510, 0x700e, 0x2056, 0xa477, 0x1, 0x0);
        gbc.writeMem(0x7c40, { 0xce, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa721);
        EXPECT(gbc.pc(), 0x7c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0219
        gbc.setState(0xb4ee, 0x8bf9, 0xe570, 0xd421, 0xa849, 0xb578, 0x0, 0x1);
        gbc.writeMem(0xb4ee, { 0xce, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8bf9);
        EXPECT(gbc.pc(), 0xb4f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ee), 0xce);
        EXPECT(gbc.readMem(0xb4ef), 0x9b);
        // CE 021A
        gbc.setState(0x9471, 0x2548, 0x1550, 0xbf58, 0x19d1, 0xa1d7, 0x1, 0x0);
        gbc.writeMem(0x9471, { 0xce, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2548);
        EXPECT(gbc.pc(), 0x9473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9471), 0xce);
        EXPECT(gbc.readMem(0x9472), 0xff);
        // CE 021B
        gbc.setState(0x7e11, 0xb64, 0x15a0, 0xa778, 0xb871, 0xaf03, 0x0, 0x0);
        gbc.writeMem(0x7e11, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb64);
        EXPECT(gbc.pc(), 0x7e13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 021C
        gbc.setState(0x3e46, 0x70fd, 0x4800, 0x9449, 0x6121, 0xbc38, 0x1, 0x1);
        gbc.writeMem(0x3e46, { 0xce, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x70fd);
        EXPECT(gbc.pc(), 0x3e48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 021D
        gbc.setState(0x4b92, 0xacee, 0x6830, 0xb212, 0xc223, 0xb5f4, 0x1, 0x0);
        gbc.writeMem(0x4b92, { 0xce, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xacee);
        EXPECT(gbc.pc(), 0x4b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 021E
        gbc.setState(0x1f86, 0x77ca, 0x7e40, 0xbb00, 0x9227, 0x95ab, 0x0, 0x1);
        gbc.writeMem(0x1f86, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0x1f88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 021F
        gbc.setState(0x5abe, 0x98fc, 0xf340, 0x68f9, 0xccc5, 0xb5d9, 0x1, 0x0);
        gbc.writeMem(0x5abe, { 0xce, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x98fc);
        EXPECT(gbc.pc(), 0x5ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0220
        gbc.setState(0x75cb, 0x33e8, 0xc9a0, 0x5ec2, 0x3fd8, 0x36b9, 0x0, 0x0);
        gbc.writeMem(0x75cb, { 0xce, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x33e8);
        EXPECT(gbc.pc(), 0x75cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0221
        gbc.setState(0xbfdd, 0xff69, 0x4dd0, 0x2acb, 0x5d36, 0xd655, 0x1, 0x0);
        gbc.writeMem(0xbfdd, { 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xff69);
        EXPECT(gbc.pc(), 0xbfdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdd), 0xce);
        EXPECT(gbc.readMem(0xbfde), 0xaa);
        // CE 0222
        gbc.setState(0xb3ba, 0x48c, 0x11a0, 0x65e7, 0xad7, 0xc044, 0x1, 0x1);
        gbc.writeMem(0xb3ba, { 0xce, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x48c);
        EXPECT(gbc.pc(), 0xb3bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ba), 0xce);
        EXPECT(gbc.readMem(0xb3bb), 0x7c);
        // CE 0223
        gbc.setState(0xbbbc, 0xd854, 0x8e00, 0x8d69, 0x8fdc, 0x96f9, 0x0, 0x1);
        gbc.writeMem(0xbbbc, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd854);
        EXPECT(gbc.pc(), 0xbbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbbc), 0xce);
        EXPECT(gbc.readMem(0xbbbd), 0x2b);
        // CE 0224
        gbc.setState(0x8e3c, 0x9283, 0x9bc0, 0x6e6, 0x354c, 0x37c, 0x1, 0x1);
        gbc.writeMem(0x8e3c, { 0xce, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9283);
        EXPECT(gbc.pc(), 0x8e3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3c), 0xce);
        EXPECT(gbc.readMem(0x8e3d), 0x54);
        // CE 0225
        gbc.setState(0xa433, 0x1b57, 0x5f90, 0x712a, 0xc9f5, 0x2e27, 0x0, 0x1);
        gbc.writeMem(0xa433, { 0xce, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1b57);
        EXPECT(gbc.pc(), 0xa435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa433), 0xce);
        EXPECT(gbc.readMem(0xa434), 0x9c);
        // CE 0226
        gbc.setState(0x98f1, 0xf693, 0x63c0, 0x39b9, 0x19bf, 0x111d, 0x0, 0x1);
        gbc.writeMem(0x98f1, { 0xce, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf693);
        EXPECT(gbc.pc(), 0x98f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f1), 0xce);
        EXPECT(gbc.readMem(0x98f2), 0xe7);
        // CE 0227
        gbc.setState(0x883d, 0x8a21, 0x3420, 0xc5c0, 0x3e8f, 0xd56b, 0x1, 0x1);
        gbc.writeMem(0x883d, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8a21);
        EXPECT(gbc.pc(), 0x883f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883d), 0xce);
        EXPECT(gbc.readMem(0x883e), 0xf9);
        // CE 0228
        gbc.setState(0x359a, 0x3bcd, 0xcd70, 0xd616, 0x6ddd, 0x5a9f, 0x1, 0x1);
        gbc.writeMem(0x359a, { 0xce, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3bcd);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0229
        gbc.setState(0xac5f, 0x3635, 0x8690, 0xd1f5, 0x3918, 0xf259, 0x0, 0x1);
        gbc.writeMem(0xac5f, { 0xce, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3635);
        EXPECT(gbc.pc(), 0xac61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac5f), 0xce);
        EXPECT(gbc.readMem(0xac60), 0xc6);
        // CE 022A
        gbc.setState(0x6060, 0x799f, 0xe6b0, 0xf1d0, 0x10a1, 0x3942, 0x1, 0x0);
        gbc.writeMem(0x6060, { 0xce, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x799f);
        EXPECT(gbc.pc(), 0x6062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 022B
        gbc.setState(0x3eed, 0xd102, 0x65d0, 0xf32e, 0xc573, 0x4979, 0x1, 0x1);
        gbc.writeMem(0x3eed, { 0xce, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd102);
        EXPECT(gbc.pc(), 0x3eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 022C
        gbc.setState(0x3fba, 0xde53, 0x92a0, 0x4009, 0x70f3, 0x1944, 0x1, 0x0);
        gbc.writeMem(0x3fba, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xde53);
        EXPECT(gbc.pc(), 0x3fbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 022D
        gbc.setState(0xd189, 0x202b, 0xc480, 0x10e3, 0x49c0, 0x29fc, 0x0, 0x1);
        gbc.writeMem(0xd189, { 0xce, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x202b);
        EXPECT(gbc.pc(), 0xd18b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd189), 0xce);
        EXPECT(gbc.readMem(0xd18a), 0x8d);
        // CE 022E
        gbc.setState(0x2462, 0x965a, 0x1f90, 0xcadb, 0x6f4b, 0xacc4, 0x0, 0x1);
        gbc.writeMem(0x2462, { 0xce, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x965a);
        EXPECT(gbc.pc(), 0x2464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 022F
        gbc.setState(0x2642, 0xbc93, 0x1f0, 0x3deb, 0x410a, 0x18b7, 0x0, 0x0);
        gbc.writeMem(0x2642, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xbc93);
        EXPECT(gbc.pc(), 0x2644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0230
        gbc.setState(0x16c7, 0xbd88, 0x9260, 0xb7aa, 0xb8e3, 0x5bde, 0x0, 0x1);
        gbc.writeMem(0x16c7, { 0xce, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbd88);
        EXPECT(gbc.pc(), 0x16c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0231
        gbc.setState(0x875a, 0x3d75, 0xe000, 0xdb13, 0x38d6, 0xafeb, 0x1, 0x0);
        gbc.writeMem(0x875a, { 0xce, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3d75);
        EXPECT(gbc.pc(), 0x875c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875a), 0xce);
        EXPECT(gbc.readMem(0x875b), 0x87);
        // CE 0232
        gbc.setState(0xa539, 0x8c6d, 0x2b10, 0xd19, 0x249c, 0x3850, 0x1, 0x0);
        gbc.writeMem(0xa539, { 0xce, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8c6d);
        EXPECT(gbc.pc(), 0xa53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa539), 0xce);
        EXPECT(gbc.readMem(0xa53a), 0xc3);
        // CE 0233
        gbc.setState(0xb9ed, 0xec5, 0xc740, 0xc59a, 0x8ad5, 0xe4b9, 0x1, 0x1);
        gbc.writeMem(0xb9ed, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xec5);
        EXPECT(gbc.pc(), 0xb9ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ed), 0xce);
        EXPECT(gbc.readMem(0xb9ee), 0xbf);
        // CE 0234
        gbc.setState(0x2779, 0xf83c, 0x3c70, 0x8b26, 0x33e0, 0x16c6, 0x0, 0x0);
        gbc.writeMem(0x2779, { 0xce, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf83c);
        EXPECT(gbc.pc(), 0x277b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0235
        gbc.setState(0x6e77, 0xb5b8, 0xe590, 0xc3e2, 0xe55b, 0x4efd, 0x0, 0x1);
        gbc.writeMem(0x6e77, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb5b8);
        EXPECT(gbc.pc(), 0x6e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0236
        gbc.setState(0xa2e5, 0x6f80, 0x1a20, 0xf20e, 0x75d4, 0x7ac3, 0x0, 0x0);
        gbc.writeMem(0xa2e5, { 0xce, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6f80);
        EXPECT(gbc.pc(), 0xa2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2e5), 0xce);
        EXPECT(gbc.readMem(0xa2e6), 0x2);
        // CE 0238
        gbc.setState(0x1263, 0x61d6, 0x9780, 0x29eb, 0x8ac4, 0xb025, 0x0, 0x1);
        gbc.writeMem(0x1263, { 0xce, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x61d6);
        EXPECT(gbc.pc(), 0x1265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0239
        gbc.setState(0xd63b, 0xf6e8, 0x73e0, 0x9162, 0xb0af, 0x4b2c, 0x1, 0x1);
        gbc.writeMem(0xd63b, { 0xce, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf6e8);
        EXPECT(gbc.pc(), 0xd63d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd63b), 0xce);
        EXPECT(gbc.readMem(0xd63c), 0x9a);
        // CE 023A
        gbc.setState(0xef3f, 0x8a00, 0xcce0, 0x641c, 0x161a, 0xe4fb, 0x1, 0x1);
        gbc.writeMem(0xef3f, { 0xce, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0xef41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3f), 0xce);
        EXPECT(gbc.readMem(0xef40), 0xe1);
        // CE 023B
        gbc.setState(0x9fc1, 0x58de, 0x6ac0, 0x511b, 0xbac4, 0xd595, 0x0, 0x0);
        gbc.writeMem(0x9fc1, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x58de);
        EXPECT(gbc.pc(), 0x9fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fc1), 0xce);
        EXPECT(gbc.readMem(0x9fc2), 0xb4);
        // CE 023C
        gbc.setState(0x7fa5, 0xcc92, 0x43f0, 0x38bf, 0xc069, 0x4508, 0x0, 0x0);
        gbc.writeMem(0x7fa5, { 0xce, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xcc92);
        EXPECT(gbc.pc(), 0x7fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 023D
        gbc.setState(0x4521, 0xa79a, 0x2240, 0xa8fd, 0x7c46, 0x9ac9, 0x0, 0x1);
        gbc.writeMem(0x4521, { 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa79a);
        EXPECT(gbc.pc(), 0x4523);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 023E
        gbc.setState(0xac9d, 0xd89b, 0x6b50, 0xb67, 0xb39c, 0xa779, 0x1, 0x1);
        gbc.writeMem(0xac9d, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd89b);
        EXPECT(gbc.pc(), 0xac9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9d), 0xce);
        EXPECT(gbc.readMem(0xac9e), 0xf4);
        // CE 023F
        gbc.setState(0xbc55, 0x664, 0x1d80, 0x43fe, 0xddee, 0x82de, 0x0, 0x0);
        gbc.writeMem(0xbc55, { 0xce, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x664);
        EXPECT(gbc.pc(), 0xbc57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc55), 0xce);
        EXPECT(gbc.readMem(0xbc56), 0x14);
        // CE 0240
        gbc.setState(0x5d33, 0xb0c3, 0xe260, 0x3c31, 0x3ee2, 0x9574, 0x1, 0x1);
        gbc.writeMem(0x5d33, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb0c3);
        EXPECT(gbc.pc(), 0x5d35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0241
        gbc.setState(0xd71d, 0xea12, 0x1c60, 0x94b9, 0x29a6, 0xea3c, 0x1, 0x1);
        gbc.writeMem(0xd71d, { 0xce, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xea12);
        EXPECT(gbc.pc(), 0xd71f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71d), 0xce);
        EXPECT(gbc.readMem(0xd71e), 0xa0);
        // CE 0242
        gbc.setState(0x9947, 0xed2, 0xcc60, 0x1c90, 0x403b, 0x77c1, 0x1, 0x1);
        gbc.writeMem(0x9947, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xed2);
        EXPECT(gbc.pc(), 0x9949);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9947), 0xce);
        EXPECT(gbc.readMem(0x9948), 0x5d);
        // CE 0243
        gbc.setState(0x1d0a, 0x1422, 0xc970, 0x80db, 0x1912, 0x860c, 0x1, 0x0);
        gbc.writeMem(0x1d0a, { 0xce, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1422);
        EXPECT(gbc.pc(), 0x1d0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0244
        gbc.setState(0x90ba, 0x1254, 0x1c00, 0x8c51, 0x9e5b, 0x5073, 0x0, 0x0);
        gbc.writeMem(0x90ba, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x1254);
        EXPECT(gbc.pc(), 0x90bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ba), 0xce);
        EXPECT(gbc.readMem(0x90bb), 0xbf);
        // CE 0245
        gbc.setState(0x75a7, 0x5925, 0x3200, 0x85ba, 0x8039, 0xd6e5, 0x0, 0x1);
        gbc.writeMem(0x75a7, { 0xce, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0x75a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0246
        gbc.setState(0x6ab8, 0xbc01, 0x48e0, 0xc500, 0x7a31, 0x719e, 0x1, 0x0);
        gbc.writeMem(0x6ab8, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbc01);
        EXPECT(gbc.pc(), 0x6aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0247
        gbc.setState(0xd014, 0x8e23, 0xbea0, 0x18da, 0x971, 0x1f9a, 0x0, 0x1);
        gbc.writeMem(0xd014, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8e23);
        EXPECT(gbc.pc(), 0xd016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd014), 0xce);
        EXPECT(gbc.readMem(0xd015), 0x26);
        // CE 0248
        gbc.setState(0xbc3, 0xb26b, 0xce00, 0x6c37, 0xd85, 0x6f25, 0x0, 0x1);
        gbc.writeMem(0xbc3, { 0xce, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb26b);
        EXPECT(gbc.pc(), 0xbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0249
        gbc.setState(0x809b, 0x393b, 0x5bf0, 0xdbcb, 0x5323, 0x5610, 0x0, 0x0);
        gbc.writeMem(0x809b, { 0xce, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x393b);
        EXPECT(gbc.pc(), 0x809d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x809b), 0xce);
        EXPECT(gbc.readMem(0x809c), 0x61);
        // CE 024B
        gbc.setState(0x14b4, 0x7c0b, 0xdcc0, 0x549a, 0x2157, 0xa275, 0x1, 0x0);
        gbc.writeMem(0x14b4, { 0xce, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7c0b);
        EXPECT(gbc.pc(), 0x14b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 024C
        gbc.setState(0xb1e6, 0x33d, 0x9290, 0xdad, 0x7614, 0x9ac3, 0x0, 0x0);
        gbc.writeMem(0xb1e6, { 0xce, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x33d);
        EXPECT(gbc.pc(), 0xb1e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e6), 0xce);
        EXPECT(gbc.readMem(0xb1e7), 0x70);
        // CE 024D
        gbc.setState(0x637e, 0xbfa0, 0xa5b0, 0x9597, 0x4390, 0xee5a, 0x1, 0x1);
        gbc.writeMem(0x637e, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbfa0);
        EXPECT(gbc.pc(), 0x6380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 024E
        gbc.setState(0xa340, 0x708a, 0xe070, 0x4976, 0xf5bc, 0x31d, 0x0, 0x1);
        gbc.writeMem(0xa340, { 0xce, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x708a);
        EXPECT(gbc.pc(), 0xa342);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa340), 0xce);
        EXPECT(gbc.readMem(0xa341), 0x4c);
        // CE 024F
        gbc.setState(0x59a, 0xc433, 0xdbc0, 0x20a8, 0xc2b2, 0xdf9b, 0x1, 0x0);
        gbc.writeMem(0x59a, { 0xce, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc433);
        EXPECT(gbc.pc(), 0x59c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0250
        gbc.setState(0xcd4c, 0xfd9d, 0x24d0, 0xbb7b, 0xd4b2, 0xc6ba, 0x1, 0x0);
        gbc.writeMem(0xcd4c, { 0xce, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xfd9d);
        EXPECT(gbc.pc(), 0xcd4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4c), 0xce);
        EXPECT(gbc.readMem(0xcd4d), 0x45);
        // CE 0251
        gbc.setState(0xbb76, 0x43bd, 0x7da0, 0x139f, 0x6c92, 0xdcf5, 0x0, 0x1);
        gbc.writeMem(0xbb76, { 0xce, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x43bd);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb76), 0xce);
        EXPECT(gbc.readMem(0xbb77), 0x4e);
        // CE 0252
        gbc.setState(0x9fcc, 0xdfc5, 0x79a0, 0x540b, 0x7144, 0x1828, 0x0, 0x1);
        gbc.writeMem(0x9fcc, { 0xce, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdfc5);
        EXPECT(gbc.pc(), 0x9fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fcc), 0xce);
        EXPECT(gbc.readMem(0x9fcd), 0x4b);
        // CE 0253
        gbc.setState(0x5716, 0xcd85, 0xf7c0, 0xb248, 0x7d48, 0x1277, 0x1, 0x0);
        gbc.writeMem(0x5716, { 0xce, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xcd85);
        EXPECT(gbc.pc(), 0x5718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0254
        gbc.setState(0x77c6, 0x645f, 0x6b90, 0x2e10, 0x6275, 0xe16e, 0x0, 0x0);
        gbc.writeMem(0x77c6, { 0xce, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x645f);
        EXPECT(gbc.pc(), 0x77c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0255
        gbc.setState(0xbaa5, 0x5e2c, 0x9320, 0xb72a, 0xfb56, 0xa522, 0x1, 0x1);
        gbc.writeMem(0xbaa5, { 0xce, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x5e2c);
        EXPECT(gbc.pc(), 0xbaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaa5), 0xce);
        EXPECT(gbc.readMem(0xbaa6), 0xb6);
        // CE 0256
        gbc.setState(0x3371, 0xd82f, 0xe810, 0xc51b, 0x9507, 0x7705, 0x1, 0x1);
        gbc.writeMem(0x3371, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd82f);
        EXPECT(gbc.pc(), 0x3373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0257
        gbc.setState(0x2295, 0x9d98, 0xbdb0, 0x172c, 0x4f18, 0xb98c, 0x0, 0x1);
        gbc.writeMem(0x2295, { 0xce, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0x2297);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0258
        gbc.setState(0x9662, 0x5249, 0xe250, 0xc1d5, 0xc1e3, 0x564a, 0x0, 0x1);
        gbc.writeMem(0x9662, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9662), 0xce);
        EXPECT(gbc.readMem(0x9663), 0x26);
        // CE 0259
        gbc.setState(0x95b3, 0x292f, 0x8e20, 0x4b6b, 0xeff7, 0x9b7f, 0x0, 0x1);
        gbc.writeMem(0x95b3, { 0xce, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x292f);
        EXPECT(gbc.pc(), 0x95b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95b3), 0xce);
        EXPECT(gbc.readMem(0x95b4), 0x7d);
        // CE 025A
        gbc.setState(0x1e76, 0x9b99, 0xf370, 0xc4ca, 0x5c15, 0x4a67, 0x1, 0x0);
        gbc.writeMem(0x1e76, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9b99);
        EXPECT(gbc.pc(), 0x1e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 025B
        gbc.setState(0x7403, 0x2db7, 0xf1c0, 0x41b5, 0x9796, 0xf3, 0x1, 0x0);
        gbc.writeMem(0x7403, { 0xce, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x2db7);
        EXPECT(gbc.pc(), 0x7405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 025C
        gbc.setState(0x149f, 0xd0e9, 0xed00, 0x2127, 0xa985, 0x355b, 0x1, 0x0);
        gbc.writeMem(0x149f, { 0xce, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd0e9);
        EXPECT(gbc.pc(), 0x14a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 025D
        gbc.setState(0x1a68, 0x145b, 0x8e40, 0xa094, 0x2cdc, 0x6125, 0x0, 0x0);
        gbc.writeMem(0x1a68, { 0xce, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x145b);
        EXPECT(gbc.pc(), 0x1a6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 025E
        gbc.setState(0x5332, 0x87a5, 0x6070, 0xa1e9, 0xc211, 0xd9b1, 0x1, 0x0);
        gbc.writeMem(0x5332, { 0xce, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x87a5);
        EXPECT(gbc.pc(), 0x5334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 025F
        gbc.setState(0x45cf, 0x3abb, 0xbef0, 0xc080, 0x7033, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x45cf, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3abb);
        EXPECT(gbc.pc(), 0x45d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0260
        gbc.setState(0xebc5, 0x648d, 0x33d0, 0xd916, 0x56f9, 0x6517, 0x1, 0x0);
        gbc.writeMem(0xebc5, { 0xce, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x648d);
        EXPECT(gbc.pc(), 0xebc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc5), 0xce);
        EXPECT(gbc.readMem(0xebc6), 0x3);
        // CE 0261
        gbc.setState(0x4d77, 0x8f19, 0x84f0, 0x3372, 0x9748, 0x7f2d, 0x0, 0x0);
        gbc.writeMem(0x4d77, { 0xce, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8f19);
        EXPECT(gbc.pc(), 0x4d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0262
        gbc.setState(0x887e, 0x96dc, 0x4140, 0x1486, 0x1681, 0xfb98, 0x1, 0x1);
        gbc.writeMem(0x887e, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x96dc);
        EXPECT(gbc.pc(), 0x8880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887e), 0xce);
        EXPECT(gbc.readMem(0x887f), 0x3a);
        // CE 0264
        gbc.setState(0xd7f7, 0x4faa, 0xfd50, 0x3dbc, 0xfc3e, 0x136d, 0x0, 0x1);
        gbc.writeMem(0xd7f7, { 0xce, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4faa);
        EXPECT(gbc.pc(), 0xd7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f7), 0xce);
        EXPECT(gbc.readMem(0xd7f8), 0x42);
        // CE 0265
        gbc.setState(0x9c3e, 0x1313, 0xc0, 0x4e1, 0x3b28, 0xc062, 0x1, 0x0);
        gbc.writeMem(0x9c3e, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1313);
        EXPECT(gbc.pc(), 0x9c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3e), 0xce);
        EXPECT(gbc.readMem(0x9c3f), 0x1c);
        // CE 0266
        gbc.setState(0xd73e, 0xe88a, 0x4d60, 0x9827, 0x3406, 0x7cff, 0x1, 0x0);
        gbc.writeMem(0xd73e, { 0xce, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe88a);
        EXPECT(gbc.pc(), 0xd740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd73e), 0xce);
        EXPECT(gbc.readMem(0xd73f), 0x50);
        // CE 0267
        gbc.setState(0x55c9, 0x1e96, 0x9180, 0x79a8, 0x67e7, 0xa3be, 0x0, 0x0);
        gbc.writeMem(0x55c9, { 0xce, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1e96);
        EXPECT(gbc.pc(), 0x55cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0268
        gbc.setState(0x186f, 0xdea6, 0xe5a0, 0x1f09, 0xd307, 0x5497, 0x1, 0x1);
        gbc.writeMem(0x186f, { 0xce, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xdea6);
        EXPECT(gbc.pc(), 0x1871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0269
        gbc.setState(0xeb5a, 0xdc54, 0xec60, 0x73c4, 0x3de1, 0xf360, 0x0, 0x0);
        gbc.writeMem(0xeb5a, { 0xce, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdc54);
        EXPECT(gbc.pc(), 0xeb5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb5a), 0xce);
        EXPECT(gbc.readMem(0xeb5b), 0xa1);
        // CE 026A
        gbc.setState(0x3e13, 0x1535, 0xc850, 0x6078, 0xda3f, 0x9ffc, 0x1, 0x0);
        gbc.writeMem(0x3e13, { 0xce, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x1535);
        EXPECT(gbc.pc(), 0x3e15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 026B
        gbc.setState(0x2a0, 0xde1a, 0xbf80, 0x7155, 0xee97, 0xaee5, 0x0, 0x0);
        gbc.writeMem(0x2a0, { 0xce, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xde1a);
        EXPECT(gbc.pc(), 0x2a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 026C
        gbc.setState(0x13f3, 0x4947, 0xe9e0, 0x670e, 0x4541, 0x8cbc, 0x0, 0x0);
        gbc.writeMem(0x13f3, { 0xce, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4947);
        EXPECT(gbc.pc(), 0x13f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 026D
        gbc.setState(0xb409, 0xee11, 0x6610, 0x9ec1, 0x8682, 0xf292, 0x1, 0x0);
        gbc.writeMem(0xb409, { 0xce, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xee11);
        EXPECT(gbc.pc(), 0xb40b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb409), 0xce);
        EXPECT(gbc.readMem(0xb40a), 0xfa);
        // CE 026E
        gbc.setState(0xdac6, 0xe60f, 0xa7a0, 0xecb4, 0xe689, 0x561a, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0xce, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0xdac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac6), 0xce);
        EXPECT(gbc.readMem(0xdac7), 0xf3);
        // CE 026F
        gbc.setState(0x2734, 0xc5e7, 0x6c70, 0x2ae7, 0x3003, 0xe13, 0x0, 0x1);
        gbc.writeMem(0x2734, { 0xce, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc5e7);
        EXPECT(gbc.pc(), 0x2736);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0270
        gbc.setState(0xb9f0, 0x744c, 0x3330, 0xc5ed, 0x86c1, 0xeea3, 0x1, 0x1);
        gbc.writeMem(0xb9f0, { 0xce, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x744c);
        EXPECT(gbc.pc(), 0xb9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f0), 0xce);
        EXPECT(gbc.readMem(0xb9f1), 0x59);
        // CE 0271
        gbc.setState(0x4474, 0xaaba, 0xd30, 0x61df, 0x9dde, 0x2791, 0x1, 0x0);
        gbc.writeMem(0x4474, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaaba);
        EXPECT(gbc.pc(), 0x4476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0272
        gbc.setState(0xc5be, 0x213d, 0xef0, 0x1e3, 0xbdc4, 0xdb94, 0x1, 0x0);
        gbc.writeMem(0xc5be, { 0xce, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x213d);
        EXPECT(gbc.pc(), 0xc5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5be), 0xce);
        EXPECT(gbc.readMem(0xc5bf), 0xfe);
        // CE 0273
        gbc.setState(0x300c, 0x1a32, 0xa670, 0x6c32, 0x8e1, 0xe6cd, 0x0, 0x0);
        gbc.writeMem(0x300c, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1a32);
        EXPECT(gbc.pc(), 0x300e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0274
        gbc.setState(0x791f, 0x378b, 0x87b0, 0x6bfb, 0xe01d, 0xb87b, 0x1, 0x0);
        gbc.writeMem(0x791f, { 0xce, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x378b);
        EXPECT(gbc.pc(), 0x7921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0275
        gbc.setState(0x8ff, 0x2299, 0xb7d0, 0xcb10, 0xe4, 0xfbfc, 0x1, 0x0);
        gbc.writeMem(0x8ff, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0x901);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0276
        gbc.setState(0xbe1f, 0x9163, 0x70a0, 0xa8a9, 0x1ffa, 0x7b14, 0x0, 0x0);
        gbc.writeMem(0xbe1f, { 0xce, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9163);
        EXPECT(gbc.pc(), 0xbe21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe1f), 0xce);
        EXPECT(gbc.readMem(0xbe20), 0xac);
        // CE 0277
        gbc.setState(0xd394, 0x38bf, 0x4c60, 0xbac5, 0x8397, 0x12c8, 0x0, 0x1);
        gbc.writeMem(0xd394, { 0xce, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x38bf);
        EXPECT(gbc.pc(), 0xd396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd394), 0xce);
        EXPECT(gbc.readMem(0xd395), 0xda);
        // CE 0278
        gbc.setState(0x53e3, 0xadd7, 0xb140, 0x2cb1, 0x4f0d, 0x90d9, 0x0, 0x0);
        gbc.writeMem(0x53e3, { 0xce, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xadd7);
        EXPECT(gbc.pc(), 0x53e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0279
        gbc.setState(0xc8ea, 0x8d7c, 0x9050, 0xc82b, 0x1ce6, 0xdbcb, 0x1, 0x0);
        gbc.writeMem(0xc8ea, { 0xce, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8d7c);
        EXPECT(gbc.pc(), 0xc8ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ea), 0xce);
        EXPECT(gbc.readMem(0xc8eb), 0x63);
        // CE 027A
        gbc.setState(0x86ad, 0x3864, 0x4c90, 0x16d9, 0x4567, 0x355e, 0x1, 0x0);
        gbc.writeMem(0x86ad, { 0xce, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3864);
        EXPECT(gbc.pc(), 0x86af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ad), 0xce);
        EXPECT(gbc.readMem(0x86ae), 0x76);
        // CE 027B
        gbc.setState(0x4d18, 0x1882, 0x5220, 0x2bad, 0x1a68, 0x1ca1, 0x1, 0x1);
        gbc.writeMem(0x4d18, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1882);
        EXPECT(gbc.pc(), 0x4d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 027C
        gbc.setState(0x91b5, 0xdf31, 0xdc0, 0xdf80, 0x5caa, 0x5e7d, 0x0, 0x1);
        gbc.writeMem(0x91b5, { 0xce, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xdf31);
        EXPECT(gbc.pc(), 0x91b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b5), 0xce);
        EXPECT(gbc.readMem(0x91b6), 0x2a);
        // CE 027D
        gbc.setState(0x4a7b, 0x375e, 0x2260, 0xd955, 0x3692, 0x2a79, 0x0, 0x0);
        gbc.writeMem(0x4a7b, { 0xce, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x375e);
        EXPECT(gbc.pc(), 0x4a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 027E
        gbc.setState(0x9a5d, 0x6112, 0xedf0, 0x7d4, 0x1b41, 0xbddc, 0x0, 0x0);
        gbc.writeMem(0x9a5d, { 0xce, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6112);
        EXPECT(gbc.pc(), 0x9a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a5d), 0xce);
        EXPECT(gbc.readMem(0x9a5e), 0x9f);
        // CE 027F
        gbc.setState(0x804, 0x1c32, 0x7930, 0x84d1, 0xab79, 0x5a4b, 0x1, 0x0);
        gbc.writeMem(0x804, { 0xce, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1c32);
        EXPECT(gbc.pc(), 0x806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0280
        gbc.setState(0xc509, 0x1fe8, 0x30d0, 0x4c33, 0xc9db, 0xbc53, 0x1, 0x0);
        gbc.writeMem(0xc509, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1fe8);
        EXPECT(gbc.pc(), 0xc50b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc509), 0xce);
        EXPECT(gbc.readMem(0xc50a), 0xf9);
        // CE 0281
        gbc.setState(0x1e, 0x1646, 0x6880, 0x4c3b, 0xc3a2, 0xd907, 0x1, 0x0);
        gbc.writeMem(0x1e, { 0xce, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x1646);
        EXPECT(gbc.pc(), 0x20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0282
        gbc.setState(0x546e, 0x8414, 0xc2f0, 0xaeba, 0x350f, 0xe889, 0x0, 0x0);
        gbc.writeMem(0x546e, { 0xce, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8414);
        EXPECT(gbc.pc(), 0x5470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0283
        gbc.setState(0x5ee2, 0xffd8, 0xe080, 0xb4a5, 0xb5d0, 0x3fe4, 0x1, 0x1);
        gbc.writeMem(0x5ee2, { 0xce, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xffd8);
        EXPECT(gbc.pc(), 0x5ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0284
        gbc.setState(0x3984, 0x1a1f, 0xb480, 0x3ef8, 0x64ce, 0xa0c9, 0x0, 0x1);
        gbc.writeMem(0x3984, { 0xce, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1a1f);
        EXPECT(gbc.pc(), 0x3986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0285
        gbc.setState(0xac82, 0x2ac2, 0x170, 0x8adc, 0xbaab, 0x38, 0x0, 0x1);
        gbc.writeMem(0xac82, { 0xce, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x2ac2);
        EXPECT(gbc.pc(), 0xac84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac82), 0xce);
        EXPECT(gbc.readMem(0xac83), 0x67);
        // CE 0286
        gbc.setState(0x5d51, 0x4aac, 0x7ac0, 0x4fb3, 0x9c83, 0x2316, 0x0, 0x1);
        gbc.writeMem(0x5d51, { 0xce, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4aac);
        EXPECT(gbc.pc(), 0x5d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0288
        gbc.setState(0xa3f4, 0x8eb1, 0x96a0, 0xb566, 0xf4aa, 0x2d5e, 0x0, 0x0);
        gbc.writeMem(0xa3f4, { 0xce, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8eb1);
        EXPECT(gbc.pc(), 0xa3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f4), 0xce);
        EXPECT(gbc.readMem(0xa3f5), 0xb5);
        // CE 0289
        gbc.setState(0x5fcb, 0xfa84, 0xde70, 0x55d, 0x6c94, 0x2e52, 0x1, 0x1);
        gbc.writeMem(0x5fcb, { 0xce, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfa84);
        EXPECT(gbc.pc(), 0x5fcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 028A
        gbc.setState(0x8766, 0xbd95, 0x6330, 0x81e2, 0x76fc, 0x95c4, 0x0, 0x1);
        gbc.writeMem(0x8766, { 0xce, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbd95);
        EXPECT(gbc.pc(), 0x8768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8766), 0xce);
        EXPECT(gbc.readMem(0x8767), 0xda);
        // CE 028B
        gbc.setState(0x40e5, 0x6285, 0x7a10, 0x6f01, 0x8d71, 0xadbb, 0x0, 0x1);
        gbc.writeMem(0x40e5, { 0xce, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6285);
        EXPECT(gbc.pc(), 0x40e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 028C
        gbc.setState(0x6f11, 0x20f9, 0x1a90, 0x4cf2, 0x9e33, 0xed4c, 0x1, 0x1);
        gbc.writeMem(0x6f11, { 0xce, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x20f9);
        EXPECT(gbc.pc(), 0x6f13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 028D
        gbc.setState(0x9c2c, 0x93f7, 0xccf0, 0xae53, 0xf6e6, 0x1bc8, 0x0, 0x1);
        gbc.writeMem(0x9c2c, { 0xce, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0x9c2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c2c), 0xce);
        EXPECT(gbc.readMem(0x9c2d), 0x86);
        // CE 028E
        gbc.setState(0x919, 0x8ff6, 0xafd0, 0x83d6, 0xb6aa, 0x83f7, 0x1, 0x0);
        gbc.writeMem(0x919, { 0xce, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8ff6);
        EXPECT(gbc.pc(), 0x91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 028F
        gbc.setState(0xc573, 0x35c7, 0xa150, 0xd416, 0x2f71, 0xd252, 0x1, 0x1);
        gbc.writeMem(0xc573, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x35c7);
        EXPECT(gbc.pc(), 0xc575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc573), 0xce);
        EXPECT(gbc.readMem(0xc574), 0xa9);
        // CE 0290
        gbc.setState(0x58e8, 0x9ece, 0xeec0, 0x33aa, 0x52f6, 0x9b14, 0x0, 0x1);
        gbc.writeMem(0x58e8, { 0xce, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9ece);
        EXPECT(gbc.pc(), 0x58ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0292
        gbc.setState(0x7a72, 0xd129, 0x6ef0, 0x1f06, 0xe01b, 0xf822, 0x0, 0x0);
        gbc.writeMem(0x7a72, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xd129);
        EXPECT(gbc.pc(), 0x7a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0293
        gbc.setState(0x3b76, 0x5c10, 0xaf60, 0x8cb4, 0x6462, 0x6865, 0x1, 0x0);
        gbc.writeMem(0x3b76, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5c10);
        EXPECT(gbc.pc(), 0x3b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0294
        gbc.setState(0x2d8, 0x42b4, 0x27b0, 0xe2da, 0xf87a, 0x468c, 0x1, 0x1);
        gbc.writeMem(0x2d8, { 0xce, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x42b4);
        EXPECT(gbc.pc(), 0x2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0295
        gbc.setState(0xa9b9, 0x82eb, 0x3580, 0xc1d2, 0xeb6d, 0x7b7b, 0x1, 0x0);
        gbc.writeMem(0xa9b9, { 0xce, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x82eb);
        EXPECT(gbc.pc(), 0xa9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9b9), 0xce);
        EXPECT(gbc.readMem(0xa9ba), 0x9d);
        // CE 0296
        gbc.setState(0x9b54, 0x5f, 0x2910, 0x7545, 0x7796, 0x810b, 0x0, 0x0);
        gbc.writeMem(0x9b54, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5f);
        EXPECT(gbc.pc(), 0x9b56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b54), 0xce);
        EXPECT(gbc.readMem(0x9b55), 0xf9);
        // CE 0297
        gbc.setState(0xa7a7, 0x317c, 0xee00, 0x8d89, 0xf49a, 0xae64, 0x0, 0x0);
        gbc.writeMem(0xa7a7, { 0xce, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x317c);
        EXPECT(gbc.pc(), 0xa7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a7), 0xce);
        EXPECT(gbc.readMem(0xa7a8), 0xe5);
        // CE 0298
        gbc.setState(0xde2d, 0xc087, 0xfec0, 0xbdfe, 0x3e56, 0xb1f5, 0x0, 0x1);
        gbc.writeMem(0xde2d, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc087);
        EXPECT(gbc.pc(), 0xde2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2d), 0xce);
        EXPECT(gbc.readMem(0xde2e), 0xf4);
        // CE 0299
        gbc.setState(0x36e8, 0xe64a, 0x29e0, 0xce5a, 0x49dc, 0x70ae, 0x1, 0x0);
        gbc.writeMem(0x36e8, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe64a);
        EXPECT(gbc.pc(), 0x36ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 029A
        gbc.setState(0x9338, 0xae62, 0x6a10, 0x11d4, 0x7aa9, 0x2f7, 0x1, 0x0);
        gbc.writeMem(0x9338, { 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xae62);
        EXPECT(gbc.pc(), 0x933a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9338), 0xce);
        EXPECT(gbc.readMem(0x9339), 0x88);
        // CE 029B
        gbc.setState(0x9f42, 0x5500, 0x9340, 0x5b41, 0x981d, 0xb31c, 0x0, 0x1);
        gbc.writeMem(0x9f42, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5500);
        EXPECT(gbc.pc(), 0x9f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f42), 0xce);
        EXPECT(gbc.readMem(0x9f43), 0xba);
        // CE 029D
        gbc.setState(0x196f, 0x9298, 0xe10, 0x6273, 0x3dff, 0x99a5, 0x1, 0x1);
        gbc.writeMem(0x196f, { 0xce, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9298);
        EXPECT(gbc.pc(), 0x1971);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 029E
        gbc.setState(0xe5c3, 0x824a, 0xef20, 0x8ee4, 0x2bb3, 0x1b0c, 0x0, 0x0);
        gbc.writeMem(0xe5c3, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x824a);
        EXPECT(gbc.pc(), 0xe5c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c3), 0xce);
        EXPECT(gbc.readMem(0xe5c4), 0x27);
        // CE 029F
        gbc.setState(0x7c7e, 0x8123, 0xb90, 0x8f6a, 0x6b6a, 0x84ba, 0x0, 0x0);
        gbc.writeMem(0x7c7e, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8123);
        EXPECT(gbc.pc(), 0x7c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02A0
        gbc.setState(0xa073, 0xb570, 0xe780, 0xa095, 0x5022, 0x1c3, 0x0, 0x1);
        gbc.writeMem(0xa073, { 0xce, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb570);
        EXPECT(gbc.pc(), 0xa075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa073), 0xce);
        EXPECT(gbc.readMem(0xa074), 0x6c);
        // CE 02A1
        gbc.setState(0x25ef, 0x5238, 0xc80, 0x9f98, 0xeafc, 0x8a74, 0x1, 0x0);
        gbc.writeMem(0x25ef, { 0xce, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5238);
        EXPECT(gbc.pc(), 0x25f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02A2
        gbc.setState(0x660a, 0x945d, 0x23d0, 0xfcb4, 0xb15d, 0x470a, 0x1, 0x1);
        gbc.writeMem(0x660a, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x945d);
        EXPECT(gbc.pc(), 0x660c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02A3
        gbc.setState(0x1eae, 0x87e5, 0x1490, 0x1266, 0xedd9, 0x8859, 0x0, 0x0);
        gbc.writeMem(0x1eae, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x87e5);
        EXPECT(gbc.pc(), 0x1eb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02A4
        gbc.setState(0x6380, 0x40a2, 0xe770, 0xfa31, 0x3be0, 0x2b84, 0x1, 0x1);
        gbc.writeMem(0x6380, { 0xce, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x40a2);
        EXPECT(gbc.pc(), 0x6382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02A5
        gbc.setState(0x865a, 0x8d38, 0x4b20, 0x12d1, 0x3b1e, 0x8614, 0x1, 0x1);
        gbc.writeMem(0x865a, { 0xce, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8d38);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865a), 0xce);
        EXPECT(gbc.readMem(0x865b), 0xe6);
        // CE 02A6
        gbc.setState(0xbacd, 0xaf31, 0x41f0, 0xde28, 0xc92b, 0x2ad3, 0x1, 0x1);
        gbc.writeMem(0xbacd, { 0xce, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaf31);
        EXPECT(gbc.pc(), 0xbacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacd), 0xce);
        EXPECT(gbc.readMem(0xbace), 0xa4);
        // CE 02A7
        gbc.setState(0x78db, 0xeab, 0xfee0, 0xbaa3, 0x3e5c, 0x6169, 0x1, 0x1);
        gbc.writeMem(0x78db, { 0xce, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xeab);
        EXPECT(gbc.pc(), 0x78dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02A8
        gbc.setState(0x6f9f, 0x89d2, 0x6650, 0xcf05, 0xb3fa, 0x7897, 0x1, 0x1);
        gbc.writeMem(0x6f9f, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x89d2);
        EXPECT(gbc.pc(), 0x6fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02A9
        gbc.setState(0x67b8, 0xeca3, 0x56c0, 0xf27e, 0xf6fd, 0xd661, 0x0, 0x1);
        gbc.writeMem(0x67b8, { 0xce, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xeca3);
        EXPECT(gbc.pc(), 0x67ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02AA
        gbc.setState(0xe77, 0xb152, 0xcf00, 0xd9e0, 0xcdca, 0x4c42, 0x0, 0x1);
        gbc.writeMem(0xe77, { 0xce, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb152);
        EXPECT(gbc.pc(), 0xe79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02AB
        gbc.setState(0x3183, 0xdf80, 0x1cf0, 0x55ec, 0x97a2, 0x79c7, 0x0, 0x0);
        gbc.writeMem(0x3183, { 0xce, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdf80);
        EXPECT(gbc.pc(), 0x3185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02AC
        gbc.setState(0x52b, 0xad25, 0x3420, 0xf19b, 0x7f5a, 0xc5ff, 0x1, 0x1);
        gbc.writeMem(0x52b, { 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xad25);
        EXPECT(gbc.pc(), 0x52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02AD
        gbc.setState(0x15e6, 0xccd, 0x6760, 0x1e0, 0x37f3, 0xa693, 0x0, 0x1);
        gbc.writeMem(0x15e6, { 0xce, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xccd);
        EXPECT(gbc.pc(), 0x15e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02AE
        gbc.setState(0x4ed5, 0xb4ee, 0x7a0, 0x8cd, 0x769c, 0x200a, 0x1, 0x1);
        gbc.writeMem(0x4ed5, { 0xce, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb4ee);
        EXPECT(gbc.pc(), 0x4ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02AF
        gbc.setState(0xb0b, 0x9f16, 0xdda0, 0x8826, 0xe671, 0x4bbf, 0x1, 0x1);
        gbc.writeMem(0xb0b, { 0xce, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9f16);
        EXPECT(gbc.pc(), 0xb0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02B0
        gbc.setState(0xc6e4, 0x67b9, 0xd470, 0xc48e, 0xa433, 0x69bd, 0x0, 0x1);
        gbc.writeMem(0xc6e4, { 0xce, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x67b9);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e4), 0xce);
        EXPECT(gbc.readMem(0xc6e5), 0x92);
        // CE 02B1
        gbc.setState(0xdb3c, 0x8655, 0x9ca0, 0x4a44, 0x750e, 0xf534, 0x0, 0x1);
        gbc.writeMem(0xdb3c, { 0xce, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8655);
        EXPECT(gbc.pc(), 0xdb3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3c), 0xce);
        EXPECT(gbc.readMem(0xdb3d), 0x3);
        // CE 02B2
        gbc.setState(0x181b, 0xa8e6, 0x7490, 0x94a, 0xfe68, 0xa6c5, 0x1, 0x0);
        gbc.writeMem(0x181b, { 0xce, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa8e6);
        EXPECT(gbc.pc(), 0x181d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02B3
        gbc.setState(0x650d, 0xc495, 0xb990, 0x30a8, 0x42d5, 0x320d, 0x0, 0x0);
        gbc.writeMem(0x650d, { 0xce, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc495);
        EXPECT(gbc.pc(), 0x650f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02B4
        gbc.setState(0x86d2, 0x8ce2, 0x2d90, 0x526, 0x2d77, 0x429f, 0x0, 0x1);
        gbc.writeMem(0x86d2, { 0xce, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x8ce2);
        EXPECT(gbc.pc(), 0x86d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d2), 0xce);
        EXPECT(gbc.readMem(0x86d3), 0xb);
        // CE 02B5
        gbc.setState(0xc69b, 0xa164, 0xccd0, 0x9fc7, 0x177c, 0xcd88, 0x1, 0x0);
        gbc.writeMem(0xc69b, { 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xa164);
        EXPECT(gbc.pc(), 0xc69d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69b), 0xce);
        EXPECT(gbc.readMem(0xc69c), 0x41);
        // CE 02B6
        gbc.setState(0x96db, 0x8bf, 0x9ba0, 0x47e7, 0x17f0, 0x2e17, 0x0, 0x1);
        gbc.writeMem(0x96db, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x8bf);
        EXPECT(gbc.pc(), 0x96dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96db), 0xce);
        EXPECT(gbc.readMem(0x96dc), 0xc0);
        // CE 02B7
        gbc.setState(0x8bde, 0x44a7, 0xdf90, 0xc463, 0x6e91, 0xf6c6, 0x1, 0x0);
        gbc.writeMem(0x8bde, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x44a7);
        EXPECT(gbc.pc(), 0x8be0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bde), 0xce);
        EXPECT(gbc.readMem(0x8bdf), 0xca);
        // CE 02B8
        gbc.setState(0xa726, 0x4925, 0x1cb0, 0x482c, 0xd5fb, 0x75da, 0x0, 0x0);
        gbc.writeMem(0xa726, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4925);
        EXPECT(gbc.pc(), 0xa728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa726), 0xce);
        EXPECT(gbc.readMem(0xa727), 0xe9);
        // CE 02B9
        gbc.setState(0x8674, 0x6939, 0x80b0, 0xdea7, 0x516d, 0xcf5a, 0x0, 0x0);
        gbc.writeMem(0x8674, { 0xce, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x6939);
        EXPECT(gbc.pc(), 0x8676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8674), 0xce);
        EXPECT(gbc.readMem(0x8675), 0xc5);
        // CE 02BA
        gbc.setState(0xdfb9, 0x83e8, 0x3860, 0xbc62, 0xdc18, 0x4b53, 0x0, 0x0);
        gbc.writeMem(0xdfb9, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x83e8);
        EXPECT(gbc.pc(), 0xdfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb9), 0xce);
        EXPECT(gbc.readMem(0xdfba), 0x95);
        // CE 02BB
        gbc.setState(0xdbf6, 0x3e46, 0x2470, 0x9c8a, 0x4dba, 0xc5f, 0x1, 0x1);
        gbc.writeMem(0xdbf6, { 0xce, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3e46);
        EXPECT(gbc.pc(), 0xdbf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf6), 0xce);
        EXPECT(gbc.readMem(0xdbf7), 0xce);
        // CE 02BC
        gbc.setState(0x38d2, 0xe549, 0x6770, 0x3738, 0x1b4c, 0xbea5, 0x0, 0x1);
        gbc.writeMem(0x38d2, { 0xce, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe549);
        EXPECT(gbc.pc(), 0x38d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02BD
        gbc.setState(0x365a, 0xacdb, 0x42e0, 0x491a, 0x218c, 0xf7a0, 0x1, 0x0);
        gbc.writeMem(0x365a, { 0xce, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xacdb);
        EXPECT(gbc.pc(), 0x365c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02BE
        gbc.setState(0xdbe9, 0xcea1, 0xef70, 0x11fb, 0xbb08, 0xb35a, 0x0, 0x0);
        gbc.writeMem(0xdbe9, { 0xce, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcea1);
        EXPECT(gbc.pc(), 0xdbeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe9), 0xce);
        EXPECT(gbc.readMem(0xdbea), 0xd6);
        // CE 02BF
        gbc.setState(0x6efe, 0xe45f, 0xf050, 0x8e31, 0x8a8, 0xbb92, 0x1, 0x0);
        gbc.writeMem(0x6efe, { 0xce, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe45f);
        EXPECT(gbc.pc(), 0x6f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02C0
        gbc.setState(0x1699, 0x11b1, 0xeb30, 0x39bb, 0x7f2a, 0xdc86, 0x0, 0x0);
        gbc.writeMem(0x1699, { 0xce, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x11b1);
        EXPECT(gbc.pc(), 0x169b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02C1
        gbc.setState(0xb604, 0x4cd6, 0xeb00, 0xa1f5, 0x36f1, 0x9553, 0x1, 0x0);
        gbc.writeMem(0xb604, { 0xce, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4cd6);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb604), 0xce);
        EXPECT(gbc.readMem(0xb605), 0x26);
        // CE 02C2
        gbc.setState(0xce35, 0x694d, 0x7120, 0x81ad, 0x7051, 0x2bd, 0x1, 0x1);
        gbc.writeMem(0xce35, { 0xce, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x694d);
        EXPECT(gbc.pc(), 0xce37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce35), 0xce);
        EXPECT(gbc.readMem(0xce36), 0xd6);
        // CE 02C3
        gbc.setState(0xa4e5, 0xc13b, 0xaaf0, 0xa77d, 0x3b45, 0xcae1, 0x1, 0x0);
        gbc.writeMem(0xa4e5, { 0xce, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc13b);
        EXPECT(gbc.pc(), 0xa4e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e5), 0xce);
        EXPECT(gbc.readMem(0xa4e6), 0xb1);
        // CE 02C6
        gbc.setState(0xd22d, 0x95c5, 0x7c70, 0x6f72, 0x1aac, 0x5117, 0x1, 0x0);
        gbc.writeMem(0xd22d, { 0xce, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x95c5);
        EXPECT(gbc.pc(), 0xd22f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22d), 0xce);
        EXPECT(gbc.readMem(0xd22e), 0x38);
        // CE 02C7
        gbc.setState(0xb3f1, 0xe0d3, 0x27e0, 0x3d73, 0xcffd, 0x2ef0, 0x1, 0x0);
        gbc.writeMem(0xb3f1, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe0d3);
        EXPECT(gbc.pc(), 0xb3f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3f1), 0xce);
        EXPECT(gbc.readMem(0xb3f2), 0xc0);
        // CE 02C8
        gbc.setState(0xa01c, 0x5c4c, 0xffd0, 0x5363, 0xe350, 0x26d1, 0x1, 0x1);
        gbc.writeMem(0xa01c, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5c4c);
        EXPECT(gbc.pc(), 0xa01e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01c), 0xce);
        EXPECT(gbc.readMem(0xa01d), 0xec);
        // CE 02C9
        gbc.setState(0x2e63, 0xcbc9, 0x95f0, 0xfca9, 0xee00, 0xcf0e, 0x1, 0x1);
        gbc.writeMem(0x2e63, { 0xce, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xcbc9);
        EXPECT(gbc.pc(), 0x2e65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02CA
        gbc.setState(0xb0b1, 0xe3d4, 0xd2b0, 0xde3f, 0x4c5d, 0x8bd3, 0x1, 0x0);
        gbc.writeMem(0xb0b1, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xe3d4);
        EXPECT(gbc.pc(), 0xb0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b1), 0xce);
        EXPECT(gbc.readMem(0xb0b2), 0xb2);
        // CE 02CC
        gbc.setState(0x2adb, 0xbca4, 0x2af0, 0xd1a9, 0xf659, 0xf286, 0x0, 0x1);
        gbc.writeMem(0x2adb, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbca4);
        EXPECT(gbc.pc(), 0x2add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02CD
        gbc.setState(0x9350, 0x75be, 0xc30, 0xbe62, 0xe689, 0x68fd, 0x1, 0x0);
        gbc.writeMem(0x9350, { 0xce, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x75be);
        EXPECT(gbc.pc(), 0x9352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9350), 0xce);
        EXPECT(gbc.readMem(0x9351), 0x67);
        // CE 02CE
        gbc.setState(0x9b3a, 0xffda, 0x1110, 0x51e5, 0x6e88, 0x9201, 0x1, 0x1);
        gbc.writeMem(0x9b3a, { 0xce, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xffda);
        EXPECT(gbc.pc(), 0x9b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b3a), 0xce);
        EXPECT(gbc.readMem(0x9b3b), 0x4e);
        // CE 02CF
        gbc.setState(0x6880, 0x657a, 0x490, 0xc8b0, 0x3715, 0x864c, 0x0, 0x1);
        gbc.writeMem(0x6880, { 0xce, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x657a);
        EXPECT(gbc.pc(), 0x6882);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02D0
        gbc.setState(0xda4c, 0x284d, 0x4c50, 0xaba8, 0xde8f, 0x7c6e, 0x1, 0x1);
        gbc.writeMem(0xda4c, { 0xce, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x284d);
        EXPECT(gbc.pc(), 0xda4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4c), 0xce);
        EXPECT(gbc.readMem(0xda4d), 0x3b);
        // CE 02D1
        gbc.setState(0xde64, 0x3628, 0x77c0, 0xb329, 0x5db3, 0x2aed, 0x0, 0x0);
        gbc.writeMem(0xde64, { 0xce, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3628);
        EXPECT(gbc.pc(), 0xde66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde64), 0xce);
        EXPECT(gbc.readMem(0xde65), 0xae);
        // CE 02D2
        gbc.setState(0x9dec, 0x3a12, 0x8c60, 0x8276, 0xd260, 0x632e, 0x0, 0x1);
        gbc.writeMem(0x9dec, { 0xce, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3a12);
        EXPECT(gbc.pc(), 0x9dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dec), 0xce);
        EXPECT(gbc.readMem(0x9ded), 0x3e);
        // CE 02D3
        gbc.setState(0xc1b7, 0xf55e, 0x52b0, 0x3c32, 0x1c0a, 0xadd, 0x1, 0x0);
        gbc.writeMem(0xc1b7, { 0xce, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf55e);
        EXPECT(gbc.pc(), 0xc1b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b7), 0xce);
        EXPECT(gbc.readMem(0xc1b8), 0xa9);
        // CE 02D4
        gbc.setState(0xb233, 0x2b7c, 0x8710, 0x8e4, 0xead0, 0xbb2f, 0x0, 0x0);
        gbc.writeMem(0xb233, { 0xce, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b7c);
        EXPECT(gbc.pc(), 0xb235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb233), 0xce);
        EXPECT(gbc.readMem(0xb234), 0xe2);
        // CE 02D5
        gbc.setState(0x1e89, 0xc0e1, 0x4510, 0x1a32, 0xb062, 0x580e, 0x1, 0x1);
        gbc.writeMem(0x1e89, { 0xce, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc0e1);
        EXPECT(gbc.pc(), 0x1e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02D6
        gbc.setState(0x9eff, 0xf62d, 0x8ac0, 0x6dde, 0x79d, 0xe778, 0x1, 0x1);
        gbc.writeMem(0x9eff, { 0xce, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf62d);
        EXPECT(gbc.pc(), 0x9f01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eff), 0xce);
        EXPECT(gbc.readMem(0x9f00), 0xb5);
        // CE 02D7
        gbc.setState(0xd51c, 0xcff7, 0xa840, 0xfb55, 0x7fcb, 0xc89e, 0x1, 0x0);
        gbc.writeMem(0xd51c, { 0xce, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcff7);
        EXPECT(gbc.pc(), 0xd51e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51c), 0xce);
        EXPECT(gbc.readMem(0xd51d), 0xdf);
        // CE 02D8
        gbc.setState(0xbb52, 0xef95, 0xd3e0, 0x5842, 0x1d41, 0x5b39, 0x1, 0x0);
        gbc.writeMem(0xbb52, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xef95);
        EXPECT(gbc.pc(), 0xbb54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb52), 0xce);
        EXPECT(gbc.readMem(0xbb53), 0x95);
        // CE 02D9
        gbc.setState(0x9514, 0x27ea, 0xe590, 0xadc7, 0xcb4d, 0x256d, 0x1, 0x0);
        gbc.writeMem(0x9514, { 0xce, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x27ea);
        EXPECT(gbc.pc(), 0x9516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9514), 0xce);
        EXPECT(gbc.readMem(0x9515), 0xa7);
        // CE 02DA
        gbc.setState(0x7012, 0x8507, 0xf860, 0x7f20, 0xfd1b, 0xcc59, 0x1, 0x0);
        gbc.writeMem(0x7012, { 0xce, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8507);
        EXPECT(gbc.pc(), 0x7014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02DB
        gbc.setState(0x64, 0xcbac, 0x8e40, 0x6504, 0x5cce, 0x7591, 0x1, 0x1);
        gbc.writeMem(0x64, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcbac);
        EXPECT(gbc.pc(), 0x66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02DC
        gbc.setState(0xb15d, 0xe7e1, 0x43b0, 0xd3fb, 0xfc21, 0x9c7, 0x0, 0x1);
        gbc.writeMem(0xb15d, { 0xce, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe7e1);
        EXPECT(gbc.pc(), 0xb15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb15d), 0xce);
        EXPECT(gbc.readMem(0xb15e), 0xf6);
        // CE 02DD
        gbc.setState(0x656e, 0xea0c, 0x1150, 0x75fd, 0x3bd2, 0x584b, 0x0, 0x1);
        gbc.writeMem(0x656e, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xea0c);
        EXPECT(gbc.pc(), 0x6570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02DE
        gbc.setState(0x5fd0, 0x7453, 0xfb00, 0xf702, 0xa128, 0x7a84, 0x1, 0x0);
        gbc.writeMem(0x5fd0, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7453);
        EXPECT(gbc.pc(), 0x5fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02DF
        gbc.setState(0x62d5, 0xc278, 0x8600, 0x69a5, 0x2751, 0x6ec9, 0x0, 0x0);
        gbc.writeMem(0x62d5, { 0xce, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc278);
        EXPECT(gbc.pc(), 0x62d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02E0
        gbc.setState(0x61b9, 0x6a97, 0x76b0, 0xb996, 0x801d, 0x7863, 0x1, 0x0);
        gbc.writeMem(0x61b9, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6a97);
        EXPECT(gbc.pc(), 0x61bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02E1
        gbc.setState(0x31ce, 0xc757, 0xa470, 0x4b86, 0x744f, 0xbe5, 0x0, 0x1);
        gbc.writeMem(0x31ce, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc757);
        EXPECT(gbc.pc(), 0x31d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02E3
        gbc.setState(0x4a2b, 0x31, 0xb7f0, 0xefc2, 0xc9c7, 0xf84b, 0x1, 0x1);
        gbc.writeMem(0x4a2b, { 0xce, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x31);
        EXPECT(gbc.pc(), 0x4a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02E4
        gbc.setState(0x6abd, 0xbc24, 0x3f80, 0x1b6f, 0x3201, 0x83ed, 0x0, 0x1);
        gbc.writeMem(0x6abd, { 0xce, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbc24);
        EXPECT(gbc.pc(), 0x6abf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02E5
        gbc.setState(0xa411, 0x139d, 0x4410, 0x6ca0, 0x2c59, 0x3e08, 0x0, 0x0);
        gbc.writeMem(0xa411, { 0xce, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x139d);
        EXPECT(gbc.pc(), 0xa413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa411), 0xce);
        EXPECT(gbc.readMem(0xa412), 0x2d);
        // CE 02E6
        gbc.setState(0x5566, 0x76a2, 0x9100, 0x5886, 0xb4cf, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0x5566, { 0xce, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x76a2);
        EXPECT(gbc.pc(), 0x5568);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02E7
        gbc.setState(0x2251, 0xef66, 0xc360, 0x5d2d, 0x80bb, 0x9c3d, 0x1, 0x0);
        gbc.writeMem(0x2251, { 0xce, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xef66);
        EXPECT(gbc.pc(), 0x2253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02E8
        gbc.setState(0x2fdf, 0xa6b3, 0xb810, 0x808f, 0x75ce, 0x598c, 0x0, 0x1);
        gbc.writeMem(0x2fdf, { 0xce, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa6b3);
        EXPECT(gbc.pc(), 0x2fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02E9
        gbc.setState(0xa98c, 0x6e19, 0x9560, 0xc6c2, 0xc888, 0xf1d2, 0x1, 0x0);
        gbc.writeMem(0xa98c, { 0xce, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x6e19);
        EXPECT(gbc.pc(), 0xa98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98c), 0xce);
        EXPECT(gbc.readMem(0xa98d), 0xc5);
        // CE 02EB
        gbc.setState(0x4ab6, 0xce50, 0xf050, 0x4df8, 0xa781, 0xf8e4, 0x1, 0x1);
        gbc.writeMem(0x4ab6, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xce50);
        EXPECT(gbc.pc(), 0x4ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 02EC
        gbc.setState(0x7026, 0x7ae, 0x180, 0x7234, 0x1e5b, 0xd4d3, 0x1, 0x0);
        gbc.writeMem(0x7026, { 0xce, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x7ae);
        EXPECT(gbc.pc(), 0x7028);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02ED
        gbc.setState(0xc974, 0x77be, 0xe210, 0xca77, 0x96ab, 0x8737, 0x0, 0x1);
        gbc.writeMem(0xc974, { 0xce, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x77be);
        EXPECT(gbc.pc(), 0xc976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc974), 0xce);
        EXPECT(gbc.readMem(0xc975), 0xbe);
        // CE 02EE
        gbc.setState(0x4813, 0x2592, 0x740, 0x7a66, 0x5066, 0x64b4, 0x1, 0x1);
        gbc.writeMem(0x4813, { 0xce, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2592);
        EXPECT(gbc.pc(), 0x4815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02EF
        gbc.setState(0x3f4f, 0x86b6, 0x49f0, 0x9a50, 0x62c9, 0xd85e, 0x0, 0x0);
        gbc.writeMem(0x3f4f, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 02F0
        gbc.setState(0x762f, 0x53c8, 0xd7b0, 0xf47c, 0x6378, 0x52af, 0x0, 0x1);
        gbc.writeMem(0x762f, { 0xce, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x53c8);
        EXPECT(gbc.pc(), 0x7631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02F1
        gbc.setState(0x80f2, 0xd4a6, 0x19f0, 0xda2e, 0x92a9, 0xc307, 0x0, 0x0);
        gbc.writeMem(0x80f2, { 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd4a6);
        EXPECT(gbc.pc(), 0x80f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f2), 0xce);
        EXPECT(gbc.readMem(0x80f3), 0x88);
        // CE 02F2
        gbc.setState(0x37d, 0xe1ae, 0x520, 0x5e17, 0xfb89, 0xaf33, 0x0, 0x0);
        gbc.writeMem(0x37d, { 0xce, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe1ae);
        EXPECT(gbc.pc(), 0x37f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02F3
        gbc.setState(0xaee1, 0xd032, 0xd00, 0x6209, 0xbaad, 0x88f1, 0x0, 0x0);
        gbc.writeMem(0xaee1, { 0xce, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd032);
        EXPECT(gbc.pc(), 0xaee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee1), 0xce);
        EXPECT(gbc.readMem(0xaee2), 0xa8);
        // CE 02F4
        gbc.setState(0xb7cc, 0x9510, 0x6640, 0x49e5, 0x80dd, 0x3afd, 0x1, 0x0);
        gbc.writeMem(0xb7cc, { 0xce, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9510);
        EXPECT(gbc.pc(), 0xb7ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cc), 0xce);
        EXPECT(gbc.readMem(0xb7cd), 0xd2);
        // CE 02F5
        gbc.setState(0x1e96, 0x106, 0xa100, 0x107e, 0x251b, 0x7daf, 0x0, 0x0);
        gbc.writeMem(0x1e96, { 0xce, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x106);
        EXPECT(gbc.pc(), 0x1e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02F6
        gbc.setState(0xcc2b, 0xb942, 0xce50, 0xa0e1, 0xeb6, 0x9f12, 0x0, 0x1);
        gbc.writeMem(0xcc2b, { 0xce, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb942);
        EXPECT(gbc.pc(), 0xcc2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2b), 0xce);
        EXPECT(gbc.readMem(0xcc2c), 0xe8);
        // CE 02F7
        gbc.setState(0x4c96, 0x7fbc, 0x9680, 0x1121, 0x5b0c, 0x9289, 0x0, 0x1);
        gbc.writeMem(0x4c96, { 0xce, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x7fbc);
        EXPECT(gbc.pc(), 0x4c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 02F8
        gbc.setState(0x8bc4, 0xa778, 0x8e70, 0x41fe, 0x21e4, 0x196, 0x1, 0x0);
        gbc.writeMem(0x8bc4, { 0xce, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa778);
        EXPECT(gbc.pc(), 0x8bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc4), 0xce);
        EXPECT(gbc.readMem(0x8bc5), 0x66);
        // CE 02F9
        gbc.setState(0x3aa1, 0x7e51, 0xa860, 0x3ac6, 0x4811, 0x3987, 0x0, 0x0);
        gbc.writeMem(0x3aa1, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7e51);
        EXPECT(gbc.pc(), 0x3aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 02FA
        gbc.setState(0xa4f1, 0x3780, 0x4b80, 0x22fc, 0xb777, 0xd215, 0x0, 0x1);
        gbc.writeMem(0xa4f1, { 0xce, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3780);
        EXPECT(gbc.pc(), 0xa4f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4f1), 0xce);
        EXPECT(gbc.readMem(0xa4f2), 0x23);
        // CE 02FB
        gbc.setState(0xb1d4, 0x131c, 0xa720, 0xa08c, 0x5a19, 0x706e, 0x0, 0x0);
        gbc.writeMem(0xb1d4, { 0xce, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x131c);
        EXPECT(gbc.pc(), 0xb1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1d4), 0xce);
        EXPECT(gbc.readMem(0xb1d5), 0x3d);
        // CE 02FC
        gbc.setState(0xa08f, 0xe40c, 0x21e0, 0xb1b7, 0xe491, 0x4f89, 0x1, 0x1);
        gbc.writeMem(0xa08f, { 0xce, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe40c);
        EXPECT(gbc.pc(), 0xa091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa08f), 0xce);
        EXPECT(gbc.readMem(0xa090), 0x6b);
        // CE 02FE
        gbc.setState(0xd088, 0x7018, 0x5d00, 0x410d, 0xb9af, 0xeded, 0x1, 0x0);
        gbc.writeMem(0xd088, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7018);
        EXPECT(gbc.pc(), 0xd08a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd088), 0xce);
        EXPECT(gbc.readMem(0xd089), 0x94);
        // CE 02FF
        gbc.setState(0x880a, 0xa6a3, 0x5a00, 0x7b90, 0x4f26, 0xc5f5, 0x1, 0x0);
        gbc.writeMem(0x880a, { 0xce, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa6a3);
        EXPECT(gbc.pc(), 0x880c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x880a), 0xce);
        EXPECT(gbc.readMem(0x880b), 0xf6);
        // CE 0300
        gbc.setState(0x9fc4, 0x219d, 0x4110, 0xefa1, 0xdf02, 0xfad4, 0x0, 0x0);
        gbc.writeMem(0x9fc4, { 0xce, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x219d);
        EXPECT(gbc.pc(), 0x9fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc4), 0xce);
        EXPECT(gbc.readMem(0x9fc5), 0x16);
        // CE 0301
        gbc.setState(0xb0f, 0x6f25, 0x3f10, 0xbf10, 0xb55c, 0xa1eb, 0x0, 0x1);
        gbc.writeMem(0xb0f, { 0xce, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6f25);
        EXPECT(gbc.pc(), 0xb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0302
        gbc.setState(0x1146, 0x7134, 0xc0, 0xd1fd, 0xbc70, 0x2a43, 0x1, 0x1);
        gbc.writeMem(0x1146, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7134);
        EXPECT(gbc.pc(), 0x1148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0304
        gbc.setState(0x18e0, 0xde0b, 0xd260, 0xc8df, 0x407d, 0x15ad, 0x0, 0x1);
        gbc.writeMem(0x18e0, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xde0b);
        EXPECT(gbc.pc(), 0x18e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0305
        gbc.setState(0x6b64, 0x905f, 0xecc0, 0xd905, 0xf964, 0xd519, 0x1, 0x0);
        gbc.writeMem(0x6b64, { 0xce, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x905f);
        EXPECT(gbc.pc(), 0x6b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0306
        gbc.setState(0x61e4, 0x544f, 0x9b40, 0x7ec3, 0x9104, 0xaa52, 0x0, 0x1);
        gbc.writeMem(0x61e4, { 0xce, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x544f);
        EXPECT(gbc.pc(), 0x61e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0307
        gbc.setState(0xbdf3, 0xe4d2, 0xcfe0, 0xaf7a, 0x50e, 0x5322, 0x0, 0x1);
        gbc.writeMem(0xbdf3, { 0xce, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe4d2);
        EXPECT(gbc.pc(), 0xbdf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdf3), 0xce);
        EXPECT(gbc.readMem(0xbdf4), 0x57);
        // CE 0308
        gbc.setState(0xba59, 0x447a, 0x30f0, 0x269d, 0xd567, 0xa5d3, 0x1, 0x0);
        gbc.writeMem(0xba59, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x447a);
        EXPECT(gbc.pc(), 0xba5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba59), 0xce);
        EXPECT(gbc.readMem(0xba5a), 0x43);
        // CE 0309
        gbc.setState(0xcebd, 0xadb9, 0xcef0, 0xf6da, 0xb65a, 0xff20, 0x0, 0x1);
        gbc.writeMem(0xcebd, { 0xce, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xadb9);
        EXPECT(gbc.pc(), 0xcebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcebd), 0xce);
        EXPECT(gbc.readMem(0xcebe), 0x4f);
        // CE 030A
        gbc.setState(0x63a4, 0x19f1, 0x9820, 0x9a66, 0x4c1d, 0xfc1d, 0x0, 0x1);
        gbc.writeMem(0x63a4, { 0xce, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x19f1);
        EXPECT(gbc.pc(), 0x63a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 030B
        gbc.setState(0x4659, 0x79a7, 0x1310, 0xae1, 0x3eb1, 0x26e4, 0x1, 0x0);
        gbc.writeMem(0x4659, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x79a7);
        EXPECT(gbc.pc(), 0x465b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 030C
        gbc.setState(0x927a, 0x166d, 0x8ce0, 0x1078, 0x5509, 0x9596, 0x1, 0x0);
        gbc.writeMem(0x927a, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x166d);
        EXPECT(gbc.pc(), 0x927c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x927a), 0xce);
        EXPECT(gbc.readMem(0x927b), 0xd4);
        // CE 030D
        gbc.setState(0x984b, 0x6735, 0xbfb0, 0x4cdb, 0x1fde, 0x3afe, 0x1, 0x1);
        gbc.writeMem(0x984b, { 0xce, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6735);
        EXPECT(gbc.pc(), 0x984d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x984b), 0xce);
        EXPECT(gbc.readMem(0x984c), 0xe0);
        // CE 030F
        gbc.setState(0x38e8, 0x9190, 0xf990, 0x16fd, 0xf729, 0xdc8a, 0x1, 0x1);
        gbc.writeMem(0x38e8, { 0xce, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9190);
        EXPECT(gbc.pc(), 0x38ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0310
        gbc.setState(0x6d5f, 0x7740, 0x52e0, 0xc483, 0xc71d, 0x6bdb, 0x1, 0x0);
        gbc.writeMem(0x6d5f, { 0xce, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7740);
        EXPECT(gbc.pc(), 0x6d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0311
        gbc.setState(0x142b, 0x121d, 0x3620, 0xc0f1, 0xfa05, 0x51e8, 0x1, 0x0);
        gbc.writeMem(0x142b, { 0xce, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x121d);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0312
        gbc.setState(0x159e, 0x2d5d, 0x9320, 0xd942, 0x85c2, 0xf63f, 0x0, 0x0);
        gbc.writeMem(0x159e, { 0xce, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2d5d);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0313
        gbc.setState(0x6ff8, 0x40e8, 0x8f10, 0x3a01, 0x8a1, 0xfae9, 0x1, 0x0);
        gbc.writeMem(0x6ff8, { 0xce, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x6ffa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0314
        gbc.setState(0x4177, 0xb794, 0x2380, 0x79e, 0x946d, 0xac68, 0x0, 0x1);
        gbc.writeMem(0x4177, { 0xce, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb794);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0315
        gbc.setState(0x9671, 0x8561, 0x3440, 0x656c, 0x7499, 0xf8f5, 0x1, 0x1);
        gbc.writeMem(0x9671, { 0xce, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8561);
        EXPECT(gbc.pc(), 0x9673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9671), 0xce);
        EXPECT(gbc.readMem(0x9672), 0x75);
        // CE 0316
        gbc.setState(0xd8df, 0x4e31, 0x2e20, 0x2f57, 0xf6c7, 0x603b, 0x0, 0x1);
        gbc.writeMem(0xd8df, { 0xce, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4e31);
        EXPECT(gbc.pc(), 0xd8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8df), 0xce);
        EXPECT(gbc.readMem(0xd8e0), 0x50);
        // CE 0317
        gbc.setState(0x9221, 0x47cd, 0xfb90, 0xbb81, 0x8c73, 0xe3a6, 0x1, 0x1);
        gbc.writeMem(0x9221, { 0xce, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x47cd);
        EXPECT(gbc.pc(), 0x9223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9221), 0xce);
        EXPECT(gbc.readMem(0x9222), 0xee);
        // CE 0318
        gbc.setState(0xb11, 0x6059, 0xf4d0, 0xa04e, 0x2303, 0xc0d, 0x1, 0x1);
        gbc.writeMem(0xb11, { 0xce, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6059);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0319
        gbc.setState(0x85eb, 0x8ce0, 0xbee0, 0xb292, 0xba5, 0x9aeb, 0x1, 0x0);
        gbc.writeMem(0x85eb, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8ce0);
        EXPECT(gbc.pc(), 0x85ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85eb), 0xce);
        EXPECT(gbc.readMem(0x85ec), 0xf1);
        // CE 031B
        gbc.setState(0xce33, 0xc654, 0xdad0, 0x5bcc, 0x9116, 0x34e4, 0x1, 0x1);
        gbc.writeMem(0xce33, { 0xce, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc654);
        EXPECT(gbc.pc(), 0xce35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce33), 0xce);
        EXPECT(gbc.readMem(0xce34), 0x58);
        // CE 031C
        gbc.setState(0x8e41, 0x4b8e, 0x14d0, 0xd842, 0x8fe6, 0x4eff, 0x0, 0x0);
        gbc.writeMem(0x8e41, { 0xce, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x4b8e);
        EXPECT(gbc.pc(), 0x8e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e41), 0xce);
        EXPECT(gbc.readMem(0x8e42), 0x3b);
        // CE 031D
        gbc.setState(0x5090, 0x4ef5, 0xfcf0, 0x2fc6, 0x472d, 0xa2d1, 0x0, 0x1);
        gbc.writeMem(0x5090, { 0xce, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x4ef5);
        EXPECT(gbc.pc(), 0x5092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 031E
        gbc.setState(0xe2d1, 0x3e24, 0xd340, 0xa913, 0x9b34, 0x7fc3, 0x0, 0x0);
        gbc.writeMem(0xe2d1, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0xe2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d1), 0xce);
        EXPECT(gbc.readMem(0xe2d2), 0xb4);
        // CE 031F
        gbc.setState(0xc85a, 0x73de, 0xfe20, 0x44ef, 0xb397, 0xe000, 0x1, 0x0);
        gbc.writeMem(0xc85a, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x73de);
        EXPECT(gbc.pc(), 0xc85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc85a), 0xce);
        EXPECT(gbc.readMem(0xc85b), 0xf8);
        // CE 0320
        gbc.setState(0x980e, 0x1dc3, 0xb10, 0xbec7, 0xa29a, 0x8c5c, 0x1, 0x1);
        gbc.writeMem(0x980e, { 0xce, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0x9810);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x980e), 0xce);
        EXPECT(gbc.readMem(0x980f), 0xb8);
        // CE 0321
        gbc.setState(0xbd1, 0xe95b, 0x5d90, 0xc429, 0x588d, 0x6f99, 0x1, 0x1);
        gbc.writeMem(0xbd1, { 0xce, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xe95b);
        EXPECT(gbc.pc(), 0xbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0322
        gbc.setState(0xb924, 0x4a78, 0xcbc0, 0xc75, 0x4b6e, 0xe9f5, 0x0, 0x1);
        gbc.writeMem(0xb924, { 0xce, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x4a78);
        EXPECT(gbc.pc(), 0xb926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb924), 0xce);
        EXPECT(gbc.readMem(0xb925), 0x0);
        // CE 0323
        gbc.setState(0x2af, 0x7197, 0xc050, 0x3ac8, 0x3aa8, 0x93f4, 0x1, 0x1);
        gbc.writeMem(0x2af, { 0xce, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7197);
        EXPECT(gbc.pc(), 0x2b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0324
        gbc.setState(0xaa61, 0xa8d0, 0x3570, 0x45d8, 0x18a4, 0x7ea2, 0x0, 0x0);
        gbc.writeMem(0xaa61, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa8d0);
        EXPECT(gbc.pc(), 0xaa63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa61), 0xce);
        EXPECT(gbc.readMem(0xaa62), 0x73);
        // CE 0325
        gbc.setState(0x9adb, 0x29bb, 0xd410, 0xdb53, 0x536d, 0x20b0, 0x1, 0x1);
        gbc.writeMem(0x9adb, { 0xce, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x29bb);
        EXPECT(gbc.pc(), 0x9add);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9adb), 0xce);
        EXPECT(gbc.readMem(0x9adc), 0x9);
        // CE 0326
        gbc.setState(0xbae5, 0x3028, 0x1a90, 0xca6, 0x8c47, 0x9419, 0x1, 0x1);
        gbc.writeMem(0xbae5, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3028);
        EXPECT(gbc.pc(), 0xbae7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbae5), 0xce);
        EXPECT(gbc.readMem(0xbae6), 0xca);
        // CE 0327
        gbc.setState(0x743b, 0x709f, 0x13b0, 0x6b73, 0xe53e, 0x40b4, 0x0, 0x1);
        gbc.writeMem(0x743b, { 0xce, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x709f);
        EXPECT(gbc.pc(), 0x743d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0328
        gbc.setState(0x85f5, 0x4731, 0x2e10, 0x9f05, 0xff46, 0xdd88, 0x1, 0x0);
        gbc.writeMem(0x85f5, { 0xce, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4731);
        EXPECT(gbc.pc(), 0x85f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f5), 0xce);
        EXPECT(gbc.readMem(0x85f6), 0xfe);
        // CE 0329
        gbc.setState(0x529, 0x7802, 0xdc10, 0x65eb, 0x759, 0x655a, 0x0, 0x1);
        gbc.writeMem(0x529, { 0xce, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x7802);
        EXPECT(gbc.pc(), 0x52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 032A
        gbc.setState(0x965a, 0x84b2, 0xb010, 0xf2c6, 0xcf75, 0x8421, 0x1, 0x1);
        gbc.writeMem(0x965a, { 0xce, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x84b2);
        EXPECT(gbc.pc(), 0x965c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965a), 0xce);
        EXPECT(gbc.readMem(0x965b), 0x29);
        // CE 032B
        gbc.setState(0x8fde, 0x109d, 0x34e0, 0x94e4, 0x1fa2, 0xa05a, 0x0, 0x0);
        gbc.writeMem(0x8fde, { 0xce, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x109d);
        EXPECT(gbc.pc(), 0x8fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fde), 0xce);
        EXPECT(gbc.readMem(0x8fdf), 0x96);
        // CE 032C
        gbc.setState(0xba42, 0xc66b, 0xe260, 0x34bd, 0x273b, 0x2840, 0x1, 0x0);
        gbc.writeMem(0xba42, { 0xce, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc66b);
        EXPECT(gbc.pc(), 0xba44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba42), 0xce);
        EXPECT(gbc.readMem(0xba43), 0x4b);
        // CE 032D
        gbc.setState(0x86a8, 0xd453, 0x3f40, 0xe139, 0x2f7c, 0x6620, 0x1, 0x0);
        gbc.writeMem(0x86a8, { 0xce, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd453);
        EXPECT(gbc.pc(), 0x86aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86a8), 0xce);
        EXPECT(gbc.readMem(0x86a9), 0x84);
        // CE 032E
        gbc.setState(0xedb3, 0x6662, 0x1e0, 0x4e92, 0x93a7, 0xe4d5, 0x1, 0x1);
        gbc.writeMem(0xedb3, { 0xce, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6662);
        EXPECT(gbc.pc(), 0xedb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedb3), 0xce);
        EXPECT(gbc.readMem(0xedb4), 0x61);
        // CE 032F
        gbc.setState(0x95a7, 0xe76b, 0x2870, 0xf7b2, 0x10da, 0x6a60, 0x1, 0x0);
        gbc.writeMem(0x95a7, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe76b);
        EXPECT(gbc.pc(), 0x95a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a7), 0xce);
        EXPECT(gbc.readMem(0x95a8), 0xba);
        // CE 0330
        gbc.setState(0xae75, 0xa37c, 0xe530, 0xee2, 0x85a5, 0x9c51, 0x0, 0x0);
        gbc.writeMem(0xae75, { 0xce, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa37c);
        EXPECT(gbc.pc(), 0xae77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae75), 0xce);
        EXPECT(gbc.readMem(0xae76), 0xe8);
        // CE 0331
        gbc.setState(0xde76, 0xcdca, 0xd630, 0x2ac1, 0x303b, 0x385, 0x1, 0x0);
        gbc.writeMem(0xde76, { 0xce, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcdca);
        EXPECT(gbc.pc(), 0xde78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde76), 0xce);
        EXPECT(gbc.readMem(0xde77), 0x6c);
        // CE 0332
        gbc.setState(0x26fa, 0x4024, 0x3950, 0x79af, 0x6aae, 0x2891, 0x0, 0x0);
        gbc.writeMem(0x26fa, { 0xce, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4024);
        EXPECT(gbc.pc(), 0x26fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0333
        gbc.setState(0xdc31, 0xa9a1, 0xc1e0, 0xf848, 0xc05f, 0x31cd, 0x0, 0x0);
        gbc.writeMem(0xdc31, { 0xce, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa9a1);
        EXPECT(gbc.pc(), 0xdc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc31), 0xce);
        EXPECT(gbc.readMem(0xdc32), 0x8b);
        // CE 0334
        gbc.setState(0x2061, 0x4e50, 0x37c0, 0xacf, 0xccf2, 0xc084, 0x0, 0x1);
        gbc.writeMem(0x2061, { 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4e50);
        EXPECT(gbc.pc(), 0x2063);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0336
        gbc.setState(0x5350, 0xc366, 0x3100, 0x98c2, 0x719b, 0x67f, 0x1, 0x0);
        gbc.writeMem(0x5350, { 0xce, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc366);
        EXPECT(gbc.pc(), 0x5352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0337
        gbc.setState(0x8172, 0xa311, 0x7d10, 0xf016, 0xed52, 0x12bb, 0x0, 0x1);
        gbc.writeMem(0x8172, { 0xce, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa311);
        EXPECT(gbc.pc(), 0x8174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8172), 0xce);
        EXPECT(gbc.readMem(0x8173), 0xd8);
        // CE 0338
        gbc.setState(0x683b, 0x1156, 0xe320, 0xe806, 0xbc16, 0xcb66, 0x0, 0x0);
        gbc.writeMem(0x683b, { 0xce, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1156);
        EXPECT(gbc.pc(), 0x683d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0339
        gbc.setState(0x9388, 0x11b3, 0x8f20, 0x6bc0, 0x6b97, 0xbc19, 0x1, 0x1);
        gbc.writeMem(0x9388, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x11b3);
        EXPECT(gbc.pc(), 0x938a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9388), 0xce);
        EXPECT(gbc.readMem(0x9389), 0x94);
        // CE 033A
        gbc.setState(0x8b2b, 0x7764, 0xcc90, 0x7f01, 0x46c, 0xa076, 0x0, 0x1);
        gbc.writeMem(0x8b2b, { 0xce, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7764);
        EXPECT(gbc.pc(), 0x8b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b2b), 0xce);
        EXPECT(gbc.readMem(0x8b2c), 0xfe);
        // CE 033B
        gbc.setState(0xc601, 0xb3a0, 0x8d60, 0xbdd8, 0xfb18, 0x1241, 0x0, 0x0);
        gbc.writeMem(0xc601, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb3a0);
        EXPECT(gbc.pc(), 0xc603);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc601), 0xce);
        EXPECT(gbc.readMem(0xc602), 0xdb);
        // CE 033C
        gbc.setState(0x2ad3, 0x9086, 0x9c20, 0x94bd, 0x6995, 0x3e8b, 0x0, 0x0);
        gbc.writeMem(0x2ad3, { 0xce, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9086);
        EXPECT(gbc.pc(), 0x2ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 033D
        gbc.setState(0x6df1, 0x9cc, 0x7a40, 0x439c, 0xd09b, 0xd916, 0x0, 0x1);
        gbc.writeMem(0x6df1, { 0xce, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x9cc);
        EXPECT(gbc.pc(), 0x6df3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 033E
        gbc.setState(0x6eca, 0x79b, 0xdf30, 0xe288, 0x9da4, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0x6eca, { 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x79b);
        EXPECT(gbc.pc(), 0x6ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 033F
        gbc.setState(0x9d7c, 0x3e53, 0x3950, 0x63e7, 0x2ca8, 0x2651, 0x1, 0x1);
        gbc.writeMem(0x9d7c, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3e53);
        EXPECT(gbc.pc(), 0x9d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d7c), 0xce);
        EXPECT(gbc.readMem(0x9d7d), 0xd9);
        // CE 0340
        gbc.setState(0x328e, 0x1047, 0x4a90, 0x22a9, 0x1d90, 0x3587, 0x0, 0x1);
        gbc.writeMem(0x328e, { 0xce, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1047);
        EXPECT(gbc.pc(), 0x3290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0341
        gbc.setState(0xdca1, 0x3642, 0x2600, 0xb365, 0xcc5e, 0x2fb0, 0x0, 0x0);
        gbc.writeMem(0xdca1, { 0xce, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3642);
        EXPECT(gbc.pc(), 0xdca3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca1), 0xce);
        EXPECT(gbc.readMem(0xdca2), 0x54);
        // CE 0342
        gbc.setState(0x54f4, 0x107c, 0x1ab0, 0x91fb, 0x9339, 0x182f, 0x0, 0x1);
        gbc.writeMem(0x54f4, { 0xce, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x107c);
        EXPECT(gbc.pc(), 0x54f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0343
        gbc.setState(0x43cf, 0x3eb4, 0x7060, 0xfdce, 0xdda0, 0xe04d, 0x0, 0x0);
        gbc.writeMem(0x43cf, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3eb4);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0344
        gbc.setState(0xe91c, 0x2643, 0xe180, 0x4175, 0xa41c, 0x464, 0x1, 0x1);
        gbc.writeMem(0xe91c, { 0xce, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2643);
        EXPECT(gbc.pc(), 0xe91e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91c), 0xce);
        EXPECT(gbc.readMem(0xe91d), 0xd5);
        // CE 0345
        gbc.setState(0x5b92, 0x2ac2, 0xba70, 0x7a35, 0xb881, 0x65eb, 0x1, 0x0);
        gbc.writeMem(0x5b92, { 0xce, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2ac2);
        EXPECT(gbc.pc(), 0x5b94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0346
        gbc.setState(0xa049, 0x73df, 0x2220, 0xb53d, 0x2326, 0xc9d6, 0x1, 0x0);
        gbc.writeMem(0xa049, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x73df);
        EXPECT(gbc.pc(), 0xa04b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa049), 0xce);
        EXPECT(gbc.readMem(0xa04a), 0xf1);
        // CE 0347
        gbc.setState(0x4edd, 0x4091, 0x1df0, 0x59c, 0xc8ae, 0x513d, 0x0, 0x0);
        gbc.writeMem(0x4edd, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x4091);
        EXPECT(gbc.pc(), 0x4edf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0348
        gbc.setState(0xe82f, 0xe90b, 0x68f0, 0xfe44, 0x7e59, 0xea66, 0x0, 0x0);
        gbc.writeMem(0xe82f, { 0xce, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe90b);
        EXPECT(gbc.pc(), 0xe831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe82f), 0xce);
        EXPECT(gbc.readMem(0xe830), 0x7d);
        // CE 0349
        gbc.setState(0x5dd5, 0x3e8a, 0xcaf0, 0xbb76, 0x934e, 0xd11a, 0x1, 0x1);
        gbc.writeMem(0x5dd5, { 0xce, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3e8a);
        EXPECT(gbc.pc(), 0x5dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 034A
        gbc.setState(0x1993, 0xa253, 0xe990, 0x3a0f, 0xbb7f, 0xfb2f, 0x0, 0x0);
        gbc.writeMem(0x1993, { 0xce, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa253);
        EXPECT(gbc.pc(), 0x1995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 034B
        gbc.setState(0xb905, 0xfb10, 0x9c10, 0x8f67, 0x2405, 0x26d2, 0x1, 0x1);
        gbc.writeMem(0xb905, { 0xce, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xfb10);
        EXPECT(gbc.pc(), 0xb907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb905), 0xce);
        EXPECT(gbc.readMem(0xb906), 0x42);
        // CE 034C
        gbc.setState(0x6033, 0xe093, 0x910, 0xd21, 0xb34d, 0x5874, 0x1, 0x0);
        gbc.writeMem(0x6033, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xe093);
        EXPECT(gbc.pc(), 0x6035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 034D
        gbc.setState(0x2c47, 0x544d, 0xb4a0, 0xd29c, 0xbf84, 0x2841, 0x1, 0x1);
        gbc.writeMem(0x2c47, { 0xce, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x544d);
        EXPECT(gbc.pc(), 0x2c49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 034E
        gbc.setState(0xc49d, 0x5c07, 0x6dc0, 0xee80, 0xd2a, 0x6592, 0x1, 0x1);
        gbc.writeMem(0xc49d, { 0xce, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5c07);
        EXPECT(gbc.pc(), 0xc49f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc49d), 0xce);
        EXPECT(gbc.readMem(0xc49e), 0x3b);
        // CE 034F
        gbc.setState(0xc68b, 0x49f, 0x6d0, 0x1ce6, 0x7a40, 0x233a, 0x1, 0x1);
        gbc.writeMem(0xc68b, { 0xce, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x49f);
        EXPECT(gbc.pc(), 0xc68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68b), 0xce);
        EXPECT(gbc.readMem(0xc68c), 0x47);
        // CE 0350
        gbc.setState(0x21b, 0x8442, 0xd790, 0x2f70, 0xb3a6, 0xca48, 0x1, 0x0);
        gbc.writeMem(0x21b, { 0xce, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8442);
        EXPECT(gbc.pc(), 0x21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0351
        gbc.setState(0x5c72, 0x6386, 0x3a80, 0x5636, 0x8d83, 0x803d, 0x0, 0x1);
        gbc.writeMem(0x5c72, { 0xce, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x6386);
        EXPECT(gbc.pc(), 0x5c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0352
        gbc.setState(0x77f, 0x6099, 0x5e00, 0x37f4, 0x6815, 0x202f, 0x1, 0x1);
        gbc.writeMem(0x77f, { 0xce, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6099);
        EXPECT(gbc.pc(), 0x781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0353
        gbc.setState(0x9366, 0x66ac, 0x3960, 0xa12, 0x7e33, 0xf67c, 0x1, 0x0);
        gbc.writeMem(0x9366, { 0xce, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x66ac);
        EXPECT(gbc.pc(), 0x9368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9366), 0xce);
        EXPECT(gbc.readMem(0x9367), 0x33);
        // CE 0354
        gbc.setState(0xef05, 0xe13f, 0xe610, 0x2e67, 0x44c8, 0x1c7, 0x1, 0x0);
        gbc.writeMem(0xef05, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe13f);
        EXPECT(gbc.pc(), 0xef07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef05), 0xce);
        EXPECT(gbc.readMem(0xef06), 0x73);
        // CE 0355
        gbc.setState(0xae34, 0x427a, 0x8580, 0x183c, 0x8cc7, 0xe0d5, 0x1, 0x0);
        gbc.writeMem(0xae34, { 0xce, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x427a);
        EXPECT(gbc.pc(), 0xae36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae34), 0xce);
        EXPECT(gbc.readMem(0xae35), 0x80);
        // CE 0356
        gbc.setState(0x621c, 0x8471, 0x5f20, 0x1d07, 0x9837, 0xb984, 0x0, 0x0);
        gbc.writeMem(0x621c, { 0xce, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8471);
        EXPECT(gbc.pc(), 0x621e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0357
        gbc.setState(0xfff, 0xa1c1, 0x43a0, 0x12c6, 0xb5b0, 0x4384, 0x1, 0x0);
        gbc.writeMem(0xfff, { 0xce, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0x1001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0358
        gbc.setState(0xbe8b, 0xfbbf, 0x20, 0x6153, 0xdac, 0xa3b8, 0x1, 0x0);
        gbc.writeMem(0xbe8b, { 0xce, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfbbf);
        EXPECT(gbc.pc(), 0xbe8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe8b), 0xce);
        EXPECT(gbc.readMem(0xbe8c), 0x8d);
        // CE 0359
        gbc.setState(0x5833, 0xe965, 0xc210, 0x2e5a, 0xfbc5, 0x1d5f, 0x0, 0x1);
        gbc.writeMem(0x5833, { 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe965);
        EXPECT(gbc.pc(), 0x5835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 035A
        gbc.setState(0xd5a9, 0xe3b1, 0xb400, 0x2e6c, 0xc483, 0xf218, 0x0, 0x0);
        gbc.writeMem(0xd5a9, { 0xce, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe3b1);
        EXPECT(gbc.pc(), 0xd5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5a9), 0xce);
        EXPECT(gbc.readMem(0xd5aa), 0x78);
        // CE 035B
        gbc.setState(0xbbc, 0xd385, 0x90e0, 0xbbfc, 0xb6e3, 0xd375, 0x0, 0x1);
        gbc.writeMem(0xbbc, { 0xce, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd385);
        EXPECT(gbc.pc(), 0xbbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 035C
        gbc.setState(0x31d1, 0xaf87, 0x60, 0x510f, 0x8942, 0x56d0, 0x0, 0x1);
        gbc.writeMem(0x31d1, { 0xce, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaf87);
        EXPECT(gbc.pc(), 0x31d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 035D
        gbc.setState(0x31ce, 0x8049, 0x9b20, 0x2d1, 0xff93, 0x6405, 0x1, 0x1);
        gbc.writeMem(0x31ce, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8049);
        EXPECT(gbc.pc(), 0x31d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 035E
        gbc.setState(0xf38, 0xc30f, 0x80d0, 0x6501, 0xf5f, 0x182, 0x0, 0x0);
        gbc.writeMem(0xf38, { 0xce, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc30f);
        EXPECT(gbc.pc(), 0xf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 035F
        gbc.setState(0x8d45, 0x483, 0x60d0, 0x5193, 0xf68f, 0x9d9, 0x0, 0x1);
        gbc.writeMem(0x8d45, { 0xce, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x483);
        EXPECT(gbc.pc(), 0x8d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d45), 0xce);
        EXPECT(gbc.readMem(0x8d46), 0x32);
        // CE 0360
        gbc.setState(0xe4c4, 0xaa1f, 0xd7c0, 0xbd63, 0x878e, 0xf215, 0x1, 0x0);
        gbc.writeMem(0xe4c4, { 0xce, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xaa1f);
        EXPECT(gbc.pc(), 0xe4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c4), 0xce);
        EXPECT(gbc.readMem(0xe4c5), 0x37);
        // CE 0361
        gbc.setState(0x611b, 0x2a62, 0xbf50, 0x503a, 0xf457, 0x382, 0x0, 0x1);
        gbc.writeMem(0x611b, { 0xce, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2a62);
        EXPECT(gbc.pc(), 0x611d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0362
        gbc.setState(0x5e0d, 0x515b, 0xe6f0, 0xce28, 0xcfd6, 0xf480, 0x1, 0x0);
        gbc.writeMem(0x5e0d, { 0xce, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x515b);
        EXPECT(gbc.pc(), 0x5e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0363
        gbc.setState(0x7d0b, 0x14a6, 0x9b40, 0xbe7a, 0x23c1, 0x9bb2, 0x1, 0x1);
        gbc.writeMem(0x7d0b, { 0xce, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x14a6);
        EXPECT(gbc.pc(), 0x7d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0364
        gbc.setState(0x1442, 0xd18a, 0x9780, 0x89a5, 0xfdd8, 0x572a, 0x0, 0x0);
        gbc.writeMem(0x1442, { 0xce, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd18a);
        EXPECT(gbc.pc(), 0x1444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0365
        gbc.setState(0x1e16, 0x3ece, 0xb4d0, 0xb8bb, 0xdb46, 0xa284, 0x0, 0x1);
        gbc.writeMem(0x1e16, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3ece);
        EXPECT(gbc.pc(), 0x1e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0366
        gbc.setState(0x2574, 0xb16e, 0x6c00, 0x9a37, 0xeb8c, 0xa13b, 0x0, 0x1);
        gbc.writeMem(0x2574, { 0xce, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb16e);
        EXPECT(gbc.pc(), 0x2576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0367
        gbc.setState(0x8f37, 0xd5c6, 0x48c0, 0xbf1c, 0x7d7c, 0x7752, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0xce, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd5c6);
        EXPECT(gbc.pc(), 0x8f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f37), 0xce);
        EXPECT(gbc.readMem(0x8f38), 0x24);
        // CE 0368
        gbc.setState(0x72a8, 0x4c39, 0x7cf0, 0x5eb3, 0x8aae, 0xd46d, 0x0, 0x1);
        gbc.writeMem(0x72a8, { 0xce, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0369
        gbc.setState(0x6e8, 0xf375, 0x7550, 0xa0c5, 0xdf2e, 0x4749, 0x0, 0x1);
        gbc.writeMem(0x6e8, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf375);
        EXPECT(gbc.pc(), 0x6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 036A
        gbc.setState(0xa63d, 0x715a, 0x2520, 0x91ce, 0xc2b8, 0x27a2, 0x0, 0x1);
        gbc.writeMem(0xa63d, { 0xce, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x715a);
        EXPECT(gbc.pc(), 0xa63f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa63d), 0xce);
        EXPECT(gbc.readMem(0xa63e), 0xa);
        // CE 036B
        gbc.setState(0xcca3, 0xfa0b, 0x78f0, 0xcd2f, 0x45c8, 0xd9b5, 0x1, 0x1);
        gbc.writeMem(0xcca3, { 0xce, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfa0b);
        EXPECT(gbc.pc(), 0xcca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca3), 0xce);
        EXPECT(gbc.readMem(0xcca4), 0xb3);
        // CE 036C
        gbc.setState(0xc1f3, 0x1a73, 0x80, 0x2cd9, 0xf9c3, 0x65cb, 0x0, 0x1);
        gbc.writeMem(0xc1f3, { 0xce, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1a73);
        EXPECT(gbc.pc(), 0xc1f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1f3), 0xce);
        EXPECT(gbc.readMem(0xc1f4), 0x4f);
        // CE 036D
        gbc.setState(0xdbb3, 0x758a, 0xac90, 0xbd18, 0x4377, 0xfe87, 0x1, 0x0);
        gbc.writeMem(0xdbb3, { 0xce, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x758a);
        EXPECT(gbc.pc(), 0xdbb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb3), 0xce);
        EXPECT(gbc.readMem(0xdbb4), 0x8a);
        // CE 036E
        gbc.setState(0xb6c2, 0x685, 0xe360, 0x416d, 0x6e3, 0x2c67, 0x1, 0x1);
        gbc.writeMem(0xb6c2, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x685);
        EXPECT(gbc.pc(), 0xb6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c2), 0xce);
        EXPECT(gbc.readMem(0xb6c3), 0x1c);
        // CE 036F
        gbc.setState(0xc111, 0x5808, 0x11c0, 0xc0d6, 0xdc7b, 0x8910, 0x0, 0x1);
        gbc.writeMem(0xc111, { 0xce, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5808);
        EXPECT(gbc.pc(), 0xc113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc111), 0xce);
        EXPECT(gbc.readMem(0xc112), 0x2);
        // CE 0370
        gbc.setState(0xcb3b, 0xdd2d, 0x4b80, 0xa3de, 0x3e6b, 0x2e0a, 0x1, 0x0);
        gbc.writeMem(0xcb3b, { 0xce, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdd2d);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3b), 0xce);
        EXPECT(gbc.readMem(0xcb3c), 0x88);
        // CE 0371
        gbc.setState(0x392a, 0xaaaf, 0x1150, 0xe7a5, 0xd546, 0x6a77, 0x0, 0x1);
        gbc.writeMem(0x392a, { 0xce, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaaaf);
        EXPECT(gbc.pc(), 0x392c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0372
        gbc.setState(0xa889, 0xab93, 0xd680, 0xede2, 0xab35, 0x4597, 0x1, 0x0);
        gbc.writeMem(0xa889, { 0xce, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xab93);
        EXPECT(gbc.pc(), 0xa88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa889), 0xce);
        EXPECT(gbc.readMem(0xa88a), 0xb8);
        // CE 0373
        gbc.setState(0x2044, 0x4b58, 0xc660, 0x4bfe, 0x5781, 0xa1ef, 0x1, 0x1);
        gbc.writeMem(0x2044, { 0xce, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x4b58);
        EXPECT(gbc.pc(), 0x2046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0374
        gbc.setState(0x604d, 0x9495, 0x7ca0, 0xefe2, 0xbd2e, 0x63c1, 0x1, 0x0);
        gbc.writeMem(0x604d, { 0xce, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9495);
        EXPECT(gbc.pc(), 0x604f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0375
        gbc.setState(0x90c5, 0x5ae3, 0xacd0, 0x70f3, 0x74c5, 0xaf42, 0x0, 0x0);
        gbc.writeMem(0x90c5, { 0xce, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5ae3);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c5), 0xce);
        EXPECT(gbc.readMem(0x90c6), 0xc9);
        // CE 0376
        gbc.setState(0x40b, 0x619a, 0xd710, 0xc8b, 0xecde, 0xc9d8, 0x1, 0x0);
        gbc.writeMem(0x40b, { 0xce, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x619a);
        EXPECT(gbc.pc(), 0x40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0377
        gbc.setState(0x362c, 0xd7ae, 0xc9e0, 0xcde6, 0x9b4, 0x23ba, 0x0, 0x1);
        gbc.writeMem(0x362c, { 0xce, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd7ae);
        EXPECT(gbc.pc(), 0x362e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0378
        gbc.setState(0x3168, 0x6540, 0x34b0, 0x3f21, 0x8212, 0x1d57, 0x0, 0x1);
        gbc.writeMem(0x3168, { 0xce, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6540);
        EXPECT(gbc.pc(), 0x316a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0379
        gbc.setState(0xda9, 0xa2ad, 0x28d0, 0x79e2, 0x5ad9, 0xd7b1, 0x0, 0x0);
        gbc.writeMem(0xda9, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa2ad);
        EXPECT(gbc.pc(), 0xdab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 037A
        gbc.setState(0x3826, 0xea63, 0x10f0, 0x7e85, 0x74dd, 0xa3c3, 0x1, 0x1);
        gbc.writeMem(0x3826, { 0xce, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xea63);
        EXPECT(gbc.pc(), 0x3828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 037B
        gbc.setState(0xcede, 0x41f2, 0x390, 0x9a54, 0x8e68, 0x8b39, 0x0, 0x0);
        gbc.writeMem(0xcede, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x41f2);
        EXPECT(gbc.pc(), 0xcee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcede), 0xce);
        EXPECT(gbc.readMem(0xcedf), 0xd9);
        // CE 037C
        gbc.setState(0x8537, 0x5100, 0x9700, 0x958d, 0x3357, 0x91d2, 0x0, 0x1);
        gbc.writeMem(0x8537, { 0xce, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5100);
        EXPECT(gbc.pc(), 0x8539);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8537), 0xce);
        EXPECT(gbc.readMem(0x8538), 0xdb);
        // CE 037D
        gbc.setState(0xbbe1, 0x9efd, 0x4ac0, 0xe797, 0x1588, 0x2798, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0xce, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9efd);
        EXPECT(gbc.pc(), 0xbbe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe1), 0xce);
        EXPECT(gbc.readMem(0xbbe2), 0x43);
        // CE 037E
        gbc.setState(0xeaba, 0x15a2, 0x9190, 0xfec0, 0xf844, 0xce99, 0x1, 0x0);
        gbc.writeMem(0xeaba, { 0xce, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x15a2);
        EXPECT(gbc.pc(), 0xeabc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaba), 0xce);
        EXPECT(gbc.readMem(0xeabb), 0xca);
        // CE 037F
        gbc.setState(0x3ba3, 0x2532, 0xd170, 0xf430, 0xc9c9, 0xa35b, 0x1, 0x0);
        gbc.writeMem(0x3ba3, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2532);
        EXPECT(gbc.pc(), 0x3ba5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0380
        gbc.setState(0x4e2d, 0x524e, 0xa210, 0x9008, 0xec07, 0x4539, 0x1, 0x1);
        gbc.writeMem(0x4e2d, { 0xce, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x524e);
        EXPECT(gbc.pc(), 0x4e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0381
        gbc.setState(0x79ce, 0x4622, 0x3ce0, 0x85fa, 0x3088, 0x2d29, 0x1, 0x1);
        gbc.writeMem(0x79ce, { 0xce, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4622);
        EXPECT(gbc.pc(), 0x79d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0382
        gbc.setState(0x5914, 0xb8f2, 0x69c0, 0x5112, 0xf84b, 0xe93b, 0x0, 0x0);
        gbc.writeMem(0x5914, { 0xce, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb8f2);
        EXPECT(gbc.pc(), 0x5916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 0383
        gbc.setState(0x5b21, 0xc690, 0xcfc0, 0x7b52, 0x122d, 0x8212, 0x0, 0x0);
        gbc.writeMem(0x5b21, { 0xce, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc690);
        EXPECT(gbc.pc(), 0x5b23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0384
        gbc.setState(0x4922, 0xe682, 0x1a0, 0x35ae, 0xced6, 0x2f91, 0x1, 0x0);
        gbc.writeMem(0x4922, { 0xce, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xe682);
        EXPECT(gbc.pc(), 0x4924);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0385
        gbc.setState(0x9748, 0x5249, 0xfd20, 0xeda7, 0x2ffa, 0xcef9, 0x1, 0x0);
        gbc.writeMem(0x9748, { 0xce, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0x974a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9748), 0xce);
        EXPECT(gbc.readMem(0x9749), 0x99);
        // CE 0386
        gbc.setState(0x823a, 0xe1fd, 0xf0d0, 0x3683, 0x3920, 0x4818, 0x0, 0x1);
        gbc.writeMem(0x823a, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe1fd);
        EXPECT(gbc.pc(), 0x823c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x823a), 0xce);
        EXPECT(gbc.readMem(0x823b), 0xd9);
        // CE 0387
        gbc.setState(0xc939, 0xbf05, 0x8150, 0xcbc9, 0x25cd, 0x4379, 0x0, 0x0);
        gbc.writeMem(0xc939, { 0xce, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbf05);
        EXPECT(gbc.pc(), 0xc93b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc939), 0xce);
        EXPECT(gbc.readMem(0xc93a), 0xf5);
        // CE 0388
        gbc.setState(0xa2d7, 0xb673, 0xdba0, 0x74e1, 0xc315, 0x7e58, 0x0, 0x0);
        gbc.writeMem(0xa2d7, { 0xce, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb673);
        EXPECT(gbc.pc(), 0xa2d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2d7), 0xce);
        EXPECT(gbc.readMem(0xa2d8), 0x27);
        // CE 0389
        gbc.setState(0xda85, 0x7738, 0xcf70, 0x5a90, 0x5606, 0xe328, 0x0, 0x0);
        gbc.writeMem(0xda85, { 0xce, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7738);
        EXPECT(gbc.pc(), 0xda87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda85), 0xce);
        EXPECT(gbc.readMem(0xda86), 0x77);
        // CE 038A
        gbc.setState(0xd608, 0xa04a, 0x82b0, 0xaddf, 0xbd89, 0x7fd5, 0x1, 0x0);
        gbc.writeMem(0xd608, { 0xce, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa04a);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xce);
        EXPECT(gbc.readMem(0xd609), 0x1d);
        // CE 038B
        gbc.setState(0xc703, 0xf588, 0x3040, 0x8280, 0x178b, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0xc703, { 0xce, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf588);
        EXPECT(gbc.pc(), 0xc705);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc703), 0xce);
        EXPECT(gbc.readMem(0xc704), 0x1b);
        // CE 038C
        gbc.setState(0x4e5e, 0x1756, 0xee0, 0x777a, 0xd23c, 0xa96b, 0x1, 0x0);
        gbc.writeMem(0x4e5e, { 0xce, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x1756);
        EXPECT(gbc.pc(), 0x4e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 038D
        gbc.setState(0xef2d, 0xf25e, 0x48d0, 0xbfc, 0x297d, 0xa2c2, 0x0, 0x1);
        gbc.writeMem(0xef2d, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef2d), 0xce);
        EXPECT(gbc.readMem(0xef2e), 0xb2);
        // CE 038E
        gbc.setState(0x730a, 0xabe7, 0xbc80, 0x3552, 0x287b, 0xc851, 0x0, 0x1);
        gbc.writeMem(0x730a, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xabe7);
        EXPECT(gbc.pc(), 0x730c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 038F
        gbc.setState(0x2bc2, 0x69d1, 0xa340, 0xecc5, 0xc5ba, 0xdb1d, 0x0, 0x0);
        gbc.writeMem(0x2bc2, { 0xce, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x69d1);
        EXPECT(gbc.pc(), 0x2bc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0390
        gbc.setState(0xcb56, 0xc957, 0x45a0, 0x8387, 0x64f5, 0x98d6, 0x1, 0x1);
        gbc.writeMem(0xcb56, { 0xce, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc957);
        EXPECT(gbc.pc(), 0xcb58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb56), 0xce);
        EXPECT(gbc.readMem(0xcb57), 0x36);
        // CE 0391
        gbc.setState(0xac1, 0xc9b4, 0xd970, 0x7eca, 0xb6bf, 0x2fcd, 0x1, 0x1);
        gbc.writeMem(0xac1, { 0xce, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc9b4);
        EXPECT(gbc.pc(), 0xac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0393
        gbc.setState(0xab57, 0xf03e, 0x5540, 0xf7e5, 0xd4ec, 0x8190, 0x0, 0x1);
        gbc.writeMem(0xab57, { 0xce, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xf03e);
        EXPECT(gbc.pc(), 0xab59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab57), 0xce);
        EXPECT(gbc.readMem(0xab58), 0x5c);
        // CE 0394
        gbc.setState(0x6fa9, 0xb1ba, 0x4480, 0x939, 0x620, 0xc417, 0x0, 0x0);
        gbc.writeMem(0x6fa9, { 0xce, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb1ba);
        EXPECT(gbc.pc(), 0x6fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 0395
        gbc.setState(0x82eb, 0xdaca, 0xedd0, 0xb947, 0x76f9, 0x5d83, 0x0, 0x1);
        gbc.writeMem(0x82eb, { 0xce, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xdaca);
        EXPECT(gbc.pc(), 0x82ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82eb), 0xce);
        EXPECT(gbc.readMem(0x82ec), 0x69);
        // CE 0396
        gbc.setState(0x64a4, 0xcdde, 0x17d0, 0x8936, 0xbbfc, 0x274c, 0x1, 0x1);
        gbc.writeMem(0x64a4, { 0xce, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xcdde);
        EXPECT(gbc.pc(), 0x64a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 0397
        gbc.setState(0xdccf, 0x2fcc, 0x3870, 0x1a40, 0xf28a, 0xed19, 0x0, 0x0);
        gbc.writeMem(0xdccf, { 0xce, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2fcc);
        EXPECT(gbc.pc(), 0xdcd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdccf), 0xce);
        EXPECT(gbc.readMem(0xdcd0), 0xe);
        // CE 0398
        gbc.setState(0x58d, 0xf912, 0x9e40, 0xe946, 0x677e, 0xbb9b, 0x1, 0x1);
        gbc.writeMem(0x58d, { 0xce, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf912);
        EXPECT(gbc.pc(), 0x58f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 0399
        gbc.setState(0x4c1e, 0x64f8, 0x85d0, 0x2644, 0x1bc9, 0x312, 0x0, 0x1);
        gbc.writeMem(0x4c1e, { 0xce, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x64f8);
        EXPECT(gbc.pc(), 0x4c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 039A
        gbc.setState(0x6f4e, 0x625d, 0x1930, 0xc8c, 0xd1dc, 0xb3c0, 0x0, 0x1);
        gbc.writeMem(0x6f4e, { 0xce, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x625d);
        EXPECT(gbc.pc(), 0x6f50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 039C
        gbc.setState(0x7e95, 0x30, 0x88d0, 0xb37, 0xd20a, 0xf3c0, 0x1, 0x0);
        gbc.writeMem(0x7e95, { 0xce, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x30);
        EXPECT(gbc.pc(), 0x7e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 039D
        gbc.setState(0x86db, 0x734, 0x1dd0, 0xb400, 0x10c5, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0x86db, { 0xce, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x734);
        EXPECT(gbc.pc(), 0x86dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86db), 0xce);
        EXPECT(gbc.readMem(0x86dc), 0x1c);
        // CE 039E
        gbc.setState(0xa776, 0xbfb9, 0x4c30, 0x7e1e, 0x2f1f, 0x4466, 0x1, 0x1);
        gbc.writeMem(0xa776, { 0xce, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbfb9);
        EXPECT(gbc.pc(), 0xa778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa776), 0xce);
        EXPECT(gbc.readMem(0xa777), 0xb9);
        // CE 039F
        gbc.setState(0xbc31, 0x306e, 0x7c90, 0x7b01, 0x587e, 0xe73, 0x0, 0x0);
        gbc.writeMem(0xbc31, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x306e);
        EXPECT(gbc.pc(), 0xbc33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc31), 0xce);
        EXPECT(gbc.readMem(0xbc32), 0xec);
        // CE 03A1
        gbc.setState(0x2dca, 0xca2b, 0xf0a0, 0x53e6, 0x5f7b, 0xf05a, 0x1, 0x0);
        gbc.writeMem(0x2dca, { 0xce, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xca2b);
        EXPECT(gbc.pc(), 0x2dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03A2
        gbc.setState(0x8569, 0x57a6, 0xeac0, 0xaa84, 0x1db9, 0x4186, 0x1, 0x0);
        gbc.writeMem(0x8569, { 0xce, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x57a6);
        EXPECT(gbc.pc(), 0x856b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8569), 0xce);
        EXPECT(gbc.readMem(0x856a), 0xe3);
        // CE 03A3
        gbc.setState(0x11e1, 0xa630, 0x2680, 0x775, 0x8161, 0xbc5a, 0x1, 0x0);
        gbc.writeMem(0x11e1, { 0xce, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa630);
        EXPECT(gbc.pc(), 0x11e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03A4
        gbc.setState(0xc12a, 0xffa, 0x8e70, 0xa774, 0x4e5d, 0xabc5, 0x1, 0x1);
        gbc.writeMem(0xc12a, { 0xce, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xffa);
        EXPECT(gbc.pc(), 0xc12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc12a), 0xce);
        EXPECT(gbc.readMem(0xc12b), 0x91);
        // CE 03A5
        gbc.setState(0x7e64, 0xec20, 0x1c30, 0x8c7e, 0x870b, 0xfa62, 0x1, 0x1);
        gbc.writeMem(0x7e64, { 0xce, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xec20);
        EXPECT(gbc.pc(), 0x7e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 03A6
        gbc.setState(0x2c58, 0x8c5e, 0x9be0, 0x689e, 0x7969, 0x991f, 0x1, 0x1);
        gbc.writeMem(0x2c58, { 0xce, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x8c5e);
        EXPECT(gbc.pc(), 0x2c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03A7
        gbc.setState(0x3919, 0x1f48, 0x34a0, 0xeda3, 0x6262, 0x544a, 0x0, 0x1);
        gbc.writeMem(0x3919, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1f48);
        EXPECT(gbc.pc(), 0x391b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03A8
        gbc.setState(0xebb0, 0x15c6, 0x3660, 0xb263, 0xd8c1, 0xd52a, 0x0, 0x1);
        gbc.writeMem(0xebb0, { 0xce, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x15c6);
        EXPECT(gbc.pc(), 0xebb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebb0), 0xce);
        EXPECT(gbc.readMem(0xebb1), 0xbc);
        // CE 03A9
        gbc.setState(0x4aa1, 0xb1b3, 0xe3d0, 0x2283, 0x2612, 0xe074, 0x0, 0x0);
        gbc.writeMem(0x4aa1, { 0xce, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb1b3);
        EXPECT(gbc.pc(), 0x4aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03AB
        gbc.setState(0x48b3, 0x182c, 0xb840, 0x16c8, 0x713a, 0xa60b, 0x0, 0x0);
        gbc.writeMem(0x48b3, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x182c);
        EXPECT(gbc.pc(), 0x48b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03AC
        gbc.setState(0xad9, 0xffb1, 0x1710, 0x296f, 0xc646, 0xb787, 0x1, 0x0);
        gbc.writeMem(0xad9, { 0xce, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xffb1);
        EXPECT(gbc.pc(), 0xadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03AD
        gbc.setState(0x25de, 0x586a, 0xa3f0, 0x932c, 0x2dc4, 0x4561, 0x0, 0x0);
        gbc.writeMem(0x25de, { 0xce, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x586a);
        EXPECT(gbc.pc(), 0x25e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03AE
        gbc.setState(0xa177, 0xfe00, 0x1ba0, 0x9a34, 0x3957, 0xb757, 0x1, 0x1);
        gbc.writeMem(0xa177, { 0xce, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfe00);
        EXPECT(gbc.pc(), 0xa179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa177), 0xce);
        EXPECT(gbc.readMem(0xa178), 0x36);
        // CE 03AF
        gbc.setState(0xcc25, 0xc572, 0xcc60, 0x47d1, 0x5d43, 0x48ad, 0x0, 0x1);
        gbc.writeMem(0xcc25, { 0xce, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc572);
        EXPECT(gbc.pc(), 0xcc27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc25), 0xce);
        EXPECT(gbc.readMem(0xcc26), 0x4c);
        // CE 03B0
        gbc.setState(0xad7f, 0xc309, 0xbc0, 0xe916, 0x276b, 0x9c02, 0x0, 0x1);
        gbc.writeMem(0xad7f, { 0xce, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc309);
        EXPECT(gbc.pc(), 0xad81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7f), 0xce);
        EXPECT(gbc.readMem(0xad80), 0x1a);
        // CE 03B1
        gbc.setState(0x9cef, 0x6e0c, 0x1b00, 0xcc14, 0x798b, 0x56ec, 0x0, 0x0);
        gbc.writeMem(0x9cef, { 0xce, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6e0c);
        EXPECT(gbc.pc(), 0x9cf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cef), 0xce);
        EXPECT(gbc.readMem(0x9cf0), 0x94);
        // CE 03B3
        gbc.setState(0xd883, 0x6dbf, 0x3350, 0xb63e, 0xeec, 0xad05, 0x1, 0x1);
        gbc.writeMem(0xd883, { 0xce, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6dbf);
        EXPECT(gbc.pc(), 0xd885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd883), 0xce);
        EXPECT(gbc.readMem(0xd884), 0xb4);
        // CE 03B5
        gbc.setState(0xb8b5, 0x58bc, 0x7a80, 0x5ea1, 0xf64d, 0x3f11, 0x0, 0x0);
        gbc.writeMem(0xb8b5, { 0xce, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x58bc);
        EXPECT(gbc.pc(), 0xb8b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8b5), 0xce);
        EXPECT(gbc.readMem(0xb8b6), 0x12);
        // CE 03B6
        gbc.setState(0xe157, 0x2fc8, 0x3b0, 0x3a23, 0xcd79, 0x6d22, 0x1, 0x1);
        gbc.writeMem(0xe157, { 0xce, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2fc8);
        EXPECT(gbc.pc(), 0xe159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe157), 0xce);
        EXPECT(gbc.readMem(0xe158), 0x4c);
        // CE 03B7
        gbc.setState(0x10d8, 0xfead, 0xe340, 0xb5e5, 0x814f, 0x9dcd, 0x0, 0x0);
        gbc.writeMem(0x10d8, { 0xce, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfead);
        EXPECT(gbc.pc(), 0x10da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03B8
        gbc.setState(0x8293, 0xe836, 0x8050, 0x3709, 0x55f, 0x675c, 0x1, 0x1);
        gbc.writeMem(0x8293, { 0xce, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe836);
        EXPECT(gbc.pc(), 0x8295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8293), 0xce);
        EXPECT(gbc.readMem(0x8294), 0x2a);
        // CE 03B9
        gbc.setState(0x887f, 0x698a, 0xe680, 0x777e, 0x9b04, 0x67ef, 0x1, 0x0);
        gbc.writeMem(0x887f, { 0xce, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x698a);
        EXPECT(gbc.pc(), 0x8881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887f), 0xce);
        EXPECT(gbc.readMem(0x8880), 0xd6);
        // CE 03BA
        gbc.setState(0xae04, 0x7ece, 0x4580, 0xb9eb, 0x325c, 0x28ee, 0x1, 0x1);
        gbc.writeMem(0xae04, { 0xce, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7ece);
        EXPECT(gbc.pc(), 0xae06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae04), 0xce);
        EXPECT(gbc.readMem(0xae05), 0xfe);
        // CE 03BB
        gbc.setState(0x64c5, 0xfa38, 0x5360, 0xe3bc, 0xc539, 0x2236, 0x0, 0x0);
        gbc.writeMem(0x64c5, { 0xce, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xfa38);
        EXPECT(gbc.pc(), 0x64c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03BC
        gbc.setState(0x1f66, 0x7fe0, 0x93e0, 0xcebe, 0x6e1d, 0x357c, 0x0, 0x0);
        gbc.writeMem(0x1f66, { 0xce, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7fe0);
        EXPECT(gbc.pc(), 0x1f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03BD
        gbc.setState(0xcea, 0xc296, 0x5fb0, 0x2712, 0x21e1, 0xa991, 0x0, 0x1);
        gbc.writeMem(0xcea, { 0xce, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xc296);
        EXPECT(gbc.pc(), 0xcec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03BE
        gbc.setState(0x7add, 0x17b, 0x6ba0, 0xac55, 0xe41, 0x551b, 0x1, 0x0);
        gbc.writeMem(0x7add, { 0xce, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x17b);
        EXPECT(gbc.pc(), 0x7adf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03BF
        gbc.setState(0x1961, 0xa29c, 0x4b10, 0xb2e7, 0xfef6, 0x7ae4, 0x0, 0x1);
        gbc.writeMem(0x1961, { 0xce, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa29c);
        EXPECT(gbc.pc(), 0x1963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 03C0
        gbc.setState(0x6702, 0x928b, 0x7250, 0xd7ae, 0x353d, 0xdc37, 0x1, 0x0);
        gbc.writeMem(0x6702, { 0xce, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x928b);
        EXPECT(gbc.pc(), 0x6704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03C1
        gbc.setState(0x25a5, 0xa78e, 0xed80, 0xf419, 0xa7e4, 0xf77, 0x1, 0x0);
        gbc.writeMem(0x25a5, { 0xce, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa78e);
        EXPECT(gbc.pc(), 0x25a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03C2
        gbc.setState(0x87c, 0x53c1, 0x1540, 0x14a8, 0xadbd, 0x44fe, 0x0, 0x1);
        gbc.writeMem(0x87c, { 0xce, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x53c1);
        EXPECT(gbc.pc(), 0x87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03C3
        gbc.setState(0xd1e, 0x53ac, 0xda00, 0x6283, 0x1f93, 0xde82, 0x1, 0x0);
        gbc.writeMem(0xd1e, { 0xce, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x53ac);
        EXPECT(gbc.pc(), 0xd20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03C4
        gbc.setState(0xa2ec, 0x4d8d, 0xbd50, 0x8b5, 0x34c2, 0x29a6, 0x0, 0x1);
        gbc.writeMem(0xa2ec, { 0xce, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4d8d);
        EXPECT(gbc.pc(), 0xa2ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ec), 0xce);
        EXPECT(gbc.readMem(0xa2ed), 0x5a);
        // CE 03C5
        gbc.setState(0x73c8, 0xa775, 0x7240, 0x1766, 0xf890, 0x6b35, 0x0, 0x0);
        gbc.writeMem(0x73c8, { 0xce, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa775);
        EXPECT(gbc.pc(), 0x73ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03C6
        gbc.setState(0xb757, 0x1da4, 0xeec0, 0xbfed, 0x2d2, 0xdf54, 0x0, 0x0);
        gbc.writeMem(0xb757, { 0xce, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0xb759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb757), 0xce);
        EXPECT(gbc.readMem(0xb758), 0x87);
        // CE 03C7
        gbc.setState(0xd805, 0xa755, 0x2190, 0x7f90, 0x1521, 0xc311, 0x1, 0x1);
        gbc.writeMem(0xd805, { 0xce, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa755);
        EXPECT(gbc.pc(), 0xd807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd805), 0xce);
        EXPECT(gbc.readMem(0xd806), 0x78);
        // CE 03C8
        gbc.setState(0x8958, 0x798, 0x63f0, 0xcb42, 0xdea, 0xac1a, 0x1, 0x0);
        gbc.writeMem(0x8958, { 0xce, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x798);
        EXPECT(gbc.pc(), 0x895a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8958), 0xce);
        EXPECT(gbc.readMem(0x8959), 0x13);
        // CE 03CA
        gbc.setState(0x1fde, 0xbc0b, 0xa780, 0xa24a, 0x72c7, 0xf6bf, 0x1, 0x0);
        gbc.writeMem(0x1fde, { 0xce, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbc0b);
        EXPECT(gbc.pc(), 0x1fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 03CB
        gbc.setState(0x94b3, 0x5436, 0x6040, 0xfb91, 0x5c05, 0x50ab, 0x0, 0x0);
        gbc.writeMem(0x94b3, { 0xce, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x5436);
        EXPECT(gbc.pc(), 0x94b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b3), 0xce);
        EXPECT(gbc.readMem(0x94b4), 0x6d);
        // CE 03CD
        gbc.setState(0x96a7, 0x3edc, 0x9e20, 0x2008, 0x6d9e, 0x441e, 0x0, 0x1);
        gbc.writeMem(0x96a7, { 0xce, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3edc);
        EXPECT(gbc.pc(), 0x96a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a7), 0xce);
        EXPECT(gbc.readMem(0x96a8), 0x91);
        // CE 03CE
        gbc.setState(0xb5be, 0x7194, 0x95c0, 0x218e, 0x83c4, 0xcd42, 0x0, 0x0);
        gbc.writeMem(0xb5be, { 0xce, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7194);
        EXPECT(gbc.pc(), 0xb5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5be), 0xce);
        EXPECT(gbc.readMem(0xb5bf), 0x7c);
        // CE 03CF
        gbc.setState(0xa588, 0xef03, 0xe090, 0x4fae, 0x8047, 0x27e6, 0x0, 0x1);
        gbc.writeMem(0xa588, { 0xce, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xef03);
        EXPECT(gbc.pc(), 0xa58a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa588), 0xce);
        EXPECT(gbc.readMem(0xa589), 0x41);
        // CE 03D0
        gbc.setState(0x9744, 0xc5b1, 0x1750, 0x9847, 0xa1b8, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x9744, { 0xce, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc5b1);
        EXPECT(gbc.pc(), 0x9746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9744), 0xce);
        EXPECT(gbc.readMem(0x9745), 0x9a);
        // CE 03D1
        gbc.setState(0x3dbc, 0x631c, 0x6d50, 0x604a, 0xe21, 0xeea8, 0x0, 0x1);
        gbc.writeMem(0x3dbc, { 0xce, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x631c);
        EXPECT(gbc.pc(), 0x3dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 03D2
        gbc.setState(0xa0b2, 0x36ae, 0x7fd0, 0xca21, 0xe0bb, 0x5275, 0x0, 0x1);
        gbc.writeMem(0xa0b2, { 0xce, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x36ae);
        EXPECT(gbc.pc(), 0xa0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b2), 0xce);
        EXPECT(gbc.readMem(0xa0b3), 0x56);
        // CE 03D3
        gbc.setState(0xdf16, 0x9869, 0xd3d0, 0xfe1b, 0x2bea, 0x865, 0x1, 0x1);
        gbc.writeMem(0xdf16, { 0xce, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9869);
        EXPECT(gbc.pc(), 0xdf18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf16), 0xce);
        EXPECT(gbc.readMem(0xdf17), 0x60);
        // CE 03D4
        gbc.setState(0x3afc, 0x699b, 0x9720, 0x51a2, 0xea14, 0xe156, 0x0, 0x1);
        gbc.writeMem(0x3afc, { 0xce, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x699b);
        EXPECT(gbc.pc(), 0x3afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03D5
        gbc.setState(0x6b12, 0x7d2c, 0x3730, 0x49f8, 0xe47, 0xc35d, 0x0, 0x0);
        gbc.writeMem(0x6b12, { 0xce, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7d2c);
        EXPECT(gbc.pc(), 0x6b14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CE 03D6
        gbc.setState(0x537d, 0xf628, 0x1b40, 0xb5d8, 0x6bc6, 0x110c, 0x1, 0x0);
        gbc.writeMem(0x537d, { 0xce, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf628);
        EXPECT(gbc.pc(), 0x537f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03D7
        gbc.setState(0x3ddd, 0xc7aa, 0x3140, 0x1c4f, 0x2665, 0xf10e, 0x0, 0x1);
        gbc.writeMem(0x3ddd, { 0xce, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc7aa);
        EXPECT(gbc.pc(), 0x3ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03D8
        gbc.setState(0xdf19, 0x8c53, 0x7a70, 0x2aed, 0x31bf, 0xaaae, 0x1, 0x1);
        gbc.writeMem(0xdf19, { 0xce, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8c53);
        EXPECT(gbc.pc(), 0xdf1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf19), 0xce);
        EXPECT(gbc.readMem(0xdf1a), 0xf5);
        // CE 03D9
        gbc.setState(0x2fc, 0xe381, 0x6950, 0x1633, 0x5870, 0x77e6, 0x1, 0x1);
        gbc.writeMem(0x2fc, { 0xce, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe381);
        EXPECT(gbc.pc(), 0x2fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03DA
        gbc.setState(0x1ada, 0xc641, 0x5610, 0xf49b, 0xfa86, 0x4046, 0x1, 0x1);
        gbc.writeMem(0x1ada, { 0xce, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc641);
        EXPECT(gbc.pc(), 0x1adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03DB
        gbc.setState(0xa991, 0xfca2, 0xc7f0, 0x8186, 0x78f4, 0x93ad, 0x1, 0x0);
        gbc.writeMem(0xa991, { 0xce, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xfca2);
        EXPECT(gbc.pc(), 0xa993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa991), 0xce);
        EXPECT(gbc.readMem(0xa992), 0xeb);
        // CE 03DC
        gbc.setState(0x2f5e, 0x3234, 0x87f0, 0xdca9, 0x81e, 0x4e7d, 0x0, 0x1);
        gbc.writeMem(0x2f5e, { 0xce, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3234);
        EXPECT(gbc.pc(), 0x2f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03DE
        gbc.setState(0xb233, 0x1b1f, 0xa530, 0xbec3, 0xfcad, 0x1a0e, 0x0, 0x1);
        gbc.writeMem(0xb233, { 0xce, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1b1f);
        EXPECT(gbc.pc(), 0xb235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb233), 0xce);
        EXPECT(gbc.readMem(0xb234), 0xe2);
        // CE 03DF
        gbc.setState(0xd98e, 0xfa2b, 0x15b0, 0xc5a4, 0x90f6, 0xa415, 0x1, 0x0);
        gbc.writeMem(0xd98e, { 0xce, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfa2b);
        EXPECT(gbc.pc(), 0xd990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd98e), 0xce);
        EXPECT(gbc.readMem(0xd98f), 0xbb);
        // CE 03E1
        gbc.setState(0x5496, 0x5611, 0x3fb0, 0x8ea8, 0xde72, 0x9b07, 0x0, 0x1);
        gbc.writeMem(0x5496, { 0xce, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5611);
        EXPECT(gbc.pc(), 0x5498);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CE 03E2
        gbc.setState(0xab76, 0x44fb, 0xc990, 0xb7b8, 0xc371, 0xbb0f, 0x0, 0x0);
        gbc.writeMem(0xab76, { 0xce, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x44fb);
        EXPECT(gbc.pc(), 0xab78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab76), 0xce);
        EXPECT(gbc.readMem(0xab77), 0xbd);
        // CE 03E3
        gbc.setState(0xb111, 0x61c, 0x2e70, 0x4ead, 0xdcbc, 0x6833, 0x0, 0x0);
        gbc.writeMem(0xb111, { 0xce, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x61c);
        EXPECT(gbc.pc(), 0xb113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb111), 0xce);
        EXPECT(gbc.readMem(0xb112), 0xad);
        // CE 03E4
        gbc.setState(0x4697, 0x4803, 0x6510, 0x9c25, 0xb66d, 0x8838, 0x0, 0x0);
        gbc.writeMem(0x4697, { 0xce, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4803);
        EXPECT(gbc.pc(), 0x4699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CE 03E5
        gbc.setState(0xea23, 0xbfdb, 0x8e20, 0x4bd5, 0x2f95, 0xc5af, 0x0, 0x0);
        gbc.writeMem(0xea23, { 0xce, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbfdb);
        EXPECT(gbc.pc(), 0xea25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea23), 0xce);
        EXPECT(gbc.readMem(0xea24), 0xec);
        // CE 03E6
        gbc.setState(0x1d4a, 0x6749, 0xf7f0, 0x60f9, 0xbd9f, 0x5c4, 0x1, 0x0);
        gbc.writeMem(0x1d4a, { 0xce, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6749);
        EXPECT(gbc.pc(), 0x1d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CE 03E7
        gbc.setState(0x93f, 0x9d51, 0xd590, 0xd6cf, 0xb948, 0xb6b5, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xce, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9d51);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
    }
}
#endif
