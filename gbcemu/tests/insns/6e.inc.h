    TEST(gbcemu, opcode_6e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 6E 0000
        gbc.setState(0x49b5, 0x999e, 0xcd60, 0x1ced, 0xed78, 0x2d0, 0x0, 0x1);
        gbc.writeMem(0x2d0, { 0x9e });
        gbc.writeMem(0x49b5, { 0x6e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x999e, gbc.sp());
        EXPECT(0x49b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0001
        gbc.setState(0x8b6b, 0xc535, 0xc310, 0x1b74, 0xc193, 0x2ac3, 0x1, 0x0);
        gbc.writeMem(0x2ac3, { 0xb5 });
        gbc.writeMem(0x8b6b, { 0x6e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0x8b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8b6b));
        // 6E 0002
        gbc.setState(0x38dd, 0xac4b, 0x4560, 0x9d1c, 0x8dd, 0x94a7, 0x0, 0x1);
        gbc.writeMem(0x38dd, { 0x6e });
        gbc.writeMem(0x94a7, { 0xf4 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x38de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x94a7));
        // 6E 0003
        gbc.setState(0x2844, 0x3845, 0xba90, 0x4d85, 0x8ab3, 0x70d5, 0x0, 0x0);
        gbc.writeMem(0x2844, { 0x6e });
        gbc.writeMem(0x70d5, { 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3845, gbc.sp());
        EXPECT(0x2845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0004
        gbc.setState(0xd107, 0x9480, 0x8c40, 0x9375, 0xc994, 0x30d9, 0x0, 0x1);
        gbc.writeMem(0x30d9, { 0x8a });
        gbc.writeMem(0xd107, { 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9480, gbc.sp());
        EXPECT(0xd108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd107));
        // 6E 0005
        gbc.setState(0xeb56, 0xe9ab, 0x6430, 0xf4b7, 0x581c, 0xe107, 0x1, 0x0);
        gbc.writeMem(0xe107, { 0xe5 });
        gbc.writeMem(0xeb56, { 0x6e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe9ab, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe107));
        EXPECT(0x6e, gbc.readMem(0xeb56));
        // 6E 0006
        gbc.setState(0xee25, 0xcc12, 0x860, 0xc9d5, 0x41, 0xf489, 0x0, 0x0);
        gbc.writeMem(0xee25, { 0x6e });
        gbc.writeMem(0xf489, { 0x2b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcc12, gbc.sp());
        EXPECT(0xee26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xee25));
        EXPECT(0x2b, gbc.readMem(0xf489));
        // 6E 0007
        gbc.setState(0x721d, 0x40dc, 0x4f60, 0x20f0, 0x38ab, 0x991a, 0x0, 0x1);
        gbc.writeMem(0x721d, { 0x6e });
        gbc.writeMem(0x991a, { 0xa5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40dc, gbc.sp());
        EXPECT(0x721e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x991a));
        // 6E 0008
        gbc.setState(0x6370, 0x990, 0xdea0, 0x8e5c, 0x7f23, 0xd905, 0x1, 0x0);
        gbc.writeMem(0x6370, { 0x6e });
        gbc.writeMem(0xd905, { 0xa0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x990, gbc.sp());
        EXPECT(0x6371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd905));
        // 6E 0009
        gbc.setState(0x18a1, 0x1f29, 0xb810, 0xfe70, 0x215c, 0x3def, 0x1, 0x0);
        gbc.writeMem(0x18a1, { 0x6e });
        gbc.writeMem(0x3def, { 0x3a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0x18a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 000A
        gbc.setState(0x381a, 0xbe17, 0xfd10, 0x8593, 0xf37f, 0x2325, 0x0, 0x0);
        gbc.writeMem(0x2325, { 0x61 });
        gbc.writeMem(0x381a, { 0x6e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbe17, gbc.sp());
        EXPECT(0x381b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 000B
        gbc.setState(0xe709, 0x203b, 0x9240, 0xc3b, 0xdfd9, 0x88c4, 0x1, 0x0);
        gbc.writeMem(0x88c4, { 0x3e });
        gbc.writeMem(0xe709, { 0x6e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x203b, gbc.sp());
        EXPECT(0xe70a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x88c4));
        EXPECT(0x6e, gbc.readMem(0xe709));
        // 6E 000C
        gbc.setState(0x8be1, 0xaa9, 0xbd00, 0x8ce5, 0x71a6, 0x6612, 0x0, 0x0);
        gbc.writeMem(0x6612, { 0x46 });
        gbc.writeMem(0x8be1, { 0x6e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaa9, gbc.sp());
        EXPECT(0x8be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8be1));
        // 6E 000D
        gbc.setState(0x4a36, 0x2065, 0x3d50, 0xbb74, 0xfd3b, 0x3c48, 0x1, 0x0);
        gbc.writeMem(0x3c48, { 0x78 });
        gbc.writeMem(0x4a36, { 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2065, gbc.sp());
        EXPECT(0x4a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 000F
        gbc.setState(0xdde9, 0x4eec, 0xb120, 0x7f00, 0xe122, 0x3c4c, 0x1, 0x0);
        gbc.writeMem(0x3c4c, { 0xeb });
        gbc.writeMem(0xdde9, { 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0xddea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdde9));
        // 6E 0010
        gbc.setState(0x8aa2, 0x623e, 0xdc10, 0xbfca, 0xd417, 0x546e, 0x1, 0x1);
        gbc.writeMem(0x546e, { 0xbf });
        gbc.writeMem(0x8aa2, { 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x623e, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8aa2));
        // 6E 0011
        gbc.setState(0x1506, 0x88df, 0xc1c0, 0x765a, 0x135f, 0x732e, 0x0, 0x0);
        gbc.writeMem(0x1506, { 0x6e });
        gbc.writeMem(0x732e, { 0xd2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x88df, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0012
        gbc.setState(0x933a, 0xd2db, 0xf370, 0x2146, 0xa3ac, 0x7e4, 0x0, 0x0);
        gbc.writeMem(0x7e4, { 0x64 });
        gbc.writeMem(0x933a, { 0x6e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd2db, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x933a));
        // 6E 0013
        gbc.setState(0x4f80, 0xd5ba, 0xa090, 0x88f3, 0x90fc, 0xe088, 0x1, 0x0);
        gbc.writeMem(0x4f80, { 0x6e });
        gbc.writeMem(0xe088, { 0xe2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd5ba, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe088));
        // 6E 0014
        gbc.setState(0x2b4e, 0x4327, 0xd1c0, 0xf044, 0x836b, 0x4c19, 0x1, 0x0);
        gbc.writeMem(0x2b4e, { 0x6e });
        gbc.writeMem(0x4c19, { 0xcc });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4327, gbc.sp());
        EXPECT(0x2b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0015
        gbc.setState(0x2f6e, 0xdf71, 0x3870, 0xfd7b, 0x2f35, 0x66da, 0x0, 0x0);
        gbc.writeMem(0x2f6e, { 0x6e });
        gbc.writeMem(0x66da, { 0x74 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xdf71, gbc.sp());
        EXPECT(0x2f6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0016
        gbc.setState(0x8cd2, 0x92fc, 0xf680, 0xc5f6, 0xc450, 0xc60f, 0x0, 0x0);
        gbc.writeMem(0x8cd2, { 0x6e });
        gbc.writeMem(0xc60f, { 0x28 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x92fc, gbc.sp());
        EXPECT(0x8cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8cd2));
        EXPECT(0x28, gbc.readMem(0xc60f));
        // 6E 0017
        gbc.setState(0x770a, 0x231b, 0xf940, 0x379a, 0xc1fb, 0x72e5, 0x1, 0x1);
        gbc.writeMem(0x72e5, { 0xf8 });
        gbc.writeMem(0x770a, { 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x231b, gbc.sp());
        EXPECT(0x770b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0018
        gbc.setState(0x64d5, 0x79d8, 0xe390, 0x9ba0, 0xad0, 0x9125, 0x0, 0x0);
        gbc.writeMem(0x64d5, { 0x6e });
        gbc.writeMem(0x9125, { 0x6a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x79d8, gbc.sp());
        EXPECT(0x64d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x9125));
        // 6E 001A
        gbc.setState(0xaf73, 0x8dd5, 0xe340, 0x6f3e, 0x475b, 0xd225, 0x1, 0x0);
        gbc.writeMem(0xaf73, { 0x6e });
        gbc.writeMem(0xd225, { 0x83 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8dd5, gbc.sp());
        EXPECT(0xaf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaf73));
        EXPECT(0x83, gbc.readMem(0xd225));
        // 6E 001B
        gbc.setState(0xbaa0, 0x822c, 0x13b0, 0x8fc4, 0xc879, 0x38c9, 0x1, 0x1);
        gbc.writeMem(0x38c9, { 0xa6 });
        gbc.writeMem(0xbaa0, { 0x6e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x822c, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbaa0));
        // 6E 001C
        gbc.setState(0x8aaf, 0x5d03, 0x5eb0, 0xfbeb, 0x6727, 0x5586, 0x1, 0x0);
        gbc.writeMem(0x5586, { 0x89 });
        gbc.writeMem(0x8aaf, { 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5d03, gbc.sp());
        EXPECT(0x8ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8aaf));
        // 6E 001D
        gbc.setState(0x3d76, 0xcdde, 0x5e60, 0xd298, 0x7756, 0x53ab, 0x1, 0x1);
        gbc.writeMem(0x3d76, { 0x6e });
        gbc.writeMem(0x53ab, { 0xa2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xcdde, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 001E
        gbc.setState(0x356, 0x2b42, 0xeb90, 0xd5ae, 0x5f70, 0xef78, 0x0, 0x0);
        gbc.writeMem(0x356, { 0x6e });
        gbc.writeMem(0xef78, { 0x5b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2b42, gbc.sp());
        EXPECT(0x357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xef78));
        // 6E 001F
        gbc.setState(0xde11, 0x704c, 0x8880, 0xb8fc, 0xca2b, 0xae07, 0x0, 0x0);
        gbc.writeMem(0xae07, { 0xfe });
        gbc.writeMem(0xde11, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0xde12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xae07));
        EXPECT(0x6e, gbc.readMem(0xde11));
        // 6E 0020
        gbc.setState(0x3fc, 0xe7b9, 0x7140, 0x3c72, 0x4269, 0x1e93, 0x1, 0x1);
        gbc.writeMem(0x3fc, { 0x6e });
        gbc.writeMem(0x1e93, { 0x7d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe7b9, gbc.sp());
        EXPECT(0x3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0022
        gbc.setState(0x51b7, 0xb3f5, 0xbc50, 0xc6bb, 0x5861, 0x7993, 0x0, 0x0);
        gbc.writeMem(0x51b7, { 0x6e });
        gbc.writeMem(0x7993, { 0x55 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb3f5, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0023
        gbc.setState(0x7f2b, 0x6e18, 0xb130, 0xebf0, 0x62cd, 0xc521, 0x1, 0x0);
        gbc.writeMem(0x7f2b, { 0x6e });
        gbc.writeMem(0xc521, { 0xc2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6e18, gbc.sp());
        EXPECT(0x7f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xc521));
        // 6E 0024
        gbc.setState(0xe999, 0x80a5, 0xea50, 0xe583, 0x17b5, 0x7787, 0x0, 0x0);
        gbc.writeMem(0x7787, { 0x92 });
        gbc.writeMem(0xe999, { 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0xe99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe999));
        // 6E 0026
        gbc.setState(0x8f0b, 0x2eeb, 0x51a0, 0xa905, 0x634a, 0x8fe0, 0x1, 0x1);
        gbc.writeMem(0x8f0b, { 0x6e });
        gbc.writeMem(0x8fe0, { 0x6f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2eeb, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f0b));
        EXPECT(0x6f, gbc.readMem(0x8fe0));
        // 6E 0028
        gbc.setState(0x5099, 0x5c99, 0xb290, 0xba33, 0x77e7, 0x7824, 0x1, 0x0);
        gbc.writeMem(0x5099, { 0x6e });
        gbc.writeMem(0x7824, { 0x23 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5c99, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0029
        gbc.setState(0x2def, 0x16a0, 0x790, 0xe3b4, 0x8505, 0xfef0, 0x1, 0x0);
        gbc.writeMem(0x2def, { 0x6e });
        gbc.writeMem(0xfef0, { 0x35 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x16a0, gbc.sp());
        EXPECT(0x2df0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xfef0));
        // 6E 002A
        gbc.setState(0xe854, 0x40e2, 0x7170, 0xe609, 0xa33e, 0x3262, 0x0, 0x0);
        gbc.writeMem(0x3262, { 0xd6 });
        gbc.writeMem(0xe854, { 0x6e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x40e2, gbc.sp());
        EXPECT(0xe855, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe854));
        // 6E 002B
        gbc.setState(0xd2d5, 0x8705, 0x8540, 0xc89e, 0x68d0, 0xaeff, 0x1, 0x0);
        gbc.writeMem(0xaeff, { 0xf8 });
        gbc.writeMem(0xd2d5, { 0x6e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8705, gbc.sp());
        EXPECT(0xd2d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xaeff));
        EXPECT(0x6e, gbc.readMem(0xd2d5));
        // 6E 002C
        gbc.setState(0x1858, 0x2e64, 0xe950, 0x13dc, 0xba41, 0x168f, 0x0, 0x1);
        gbc.writeMem(0x168f, { 0xf1 });
        gbc.writeMem(0x1858, { 0x6e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e64, gbc.sp());
        EXPECT(0x1859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 002D
        gbc.setState(0x4302, 0xb66, 0xa030, 0xb855, 0x744e, 0x7f88, 0x0, 0x0);
        gbc.writeMem(0x4302, { 0x6e });
        gbc.writeMem(0x7f88, { 0xfc });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb66, gbc.sp());
        EXPECT(0x4303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 002E
        gbc.setState(0x54ec, 0xbe2b, 0xcfd0, 0x998b, 0xb57, 0xe87, 0x1, 0x0);
        gbc.writeMem(0xe87, { 0x9b });
        gbc.writeMem(0x54ec, { 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbe2b, gbc.sp());
        EXPECT(0x54ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 002F
        gbc.setState(0x495e, 0xa472, 0x76c0, 0xc33a, 0xc26e, 0xee1f, 0x0, 0x0);
        gbc.writeMem(0x495e, { 0x6e });
        gbc.writeMem(0xee1f, { 0xc6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa472, gbc.sp());
        EXPECT(0x495f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xee1f));
        // 6E 0031
        gbc.setState(0x239f, 0xeb1b, 0x9190, 0xeb79, 0x4fae, 0xe8f5, 0x1, 0x1);
        gbc.writeMem(0x239f, { 0x6e });
        gbc.writeMem(0xe8f5, { 0xa6 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xe8f5));
        // 6E 0032
        gbc.setState(0x842f, 0xb02, 0x1fd0, 0x6f, 0x2596, 0x48fb, 0x0, 0x1);
        gbc.writeMem(0x48fb, { 0x2a });
        gbc.writeMem(0x842f, { 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb02, gbc.sp());
        EXPECT(0x8430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x842f));
        // 6E 0033
        gbc.setState(0x476c, 0x65a0, 0xe4b0, 0x359f, 0xebaf, 0x3e41, 0x0, 0x1);
        gbc.writeMem(0x3e41, { 0x1a });
        gbc.writeMem(0x476c, { 0x6e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x65a0, gbc.sp());
        EXPECT(0x476d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0034
        gbc.setState(0x9d90, 0xc015, 0x2830, 0x4e37, 0xeb1a, 0x91ae, 0x0, 0x1);
        gbc.writeMem(0x91ae, { 0x75 });
        gbc.writeMem(0x9d90, { 0x6e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x9d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x91ae));
        EXPECT(0x6e, gbc.readMem(0x9d90));
        // 6E 0035
        gbc.setState(0x5319, 0xc626, 0x4fa0, 0x2924, 0xb428, 0x9c22, 0x1, 0x0);
        gbc.writeMem(0x5319, { 0x6e });
        gbc.writeMem(0x9c22, { 0xe4 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc626, gbc.sp());
        EXPECT(0x531a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9c22));
        // 6E 0037
        gbc.setState(0xb35e, 0x6800, 0x1200, 0x9938, 0xb870, 0x1ec, 0x1, 0x0);
        gbc.writeMem(0x1ec, { 0xae });
        gbc.writeMem(0xb35e, { 0x6e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6800, gbc.sp());
        EXPECT(0xb35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb35e));
        // 6E 0038
        gbc.setState(0xea23, 0x1973, 0xaa30, 0xca35, 0xb759, 0x302d, 0x1, 0x0);
        gbc.writeMem(0x302d, { 0x19 });
        gbc.writeMem(0xea23, { 0x6e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0xea24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xea23));
        // 6E 0039
        gbc.setState(0x8aad, 0x14bf, 0x3cf0, 0x7899, 0x75ad, 0x2a4, 0x1, 0x0);
        gbc.writeMem(0x2a4, { 0x28 });
        gbc.writeMem(0x8aad, { 0x6e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x14bf, gbc.sp());
        EXPECT(0x8aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8aad));
        // 6E 003A
        gbc.setState(0xc856, 0xd23, 0x46d0, 0x8c46, 0xa411, 0x9a80, 0x0, 0x1);
        gbc.writeMem(0x9a80, { 0x5a });
        gbc.writeMem(0xc856, { 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd23, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9a80));
        EXPECT(0x6e, gbc.readMem(0xc856));
        // 6E 003B
        gbc.setState(0x9b52, 0x412, 0x3050, 0xffef, 0xd537, 0x5cb3, 0x1, 0x1);
        gbc.writeMem(0x5cb3, { 0x1a });
        gbc.writeMem(0x9b52, { 0x6e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x412, gbc.sp());
        EXPECT(0x9b53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9b52));
        // 6E 003D
        gbc.setState(0xc1ef, 0xc19d, 0x6da0, 0x639a, 0xc78, 0x3d53, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x63 });
        gbc.writeMem(0xc1ef, { 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc19d, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc1ef));
        // 6E 003E
        gbc.setState(0xc862, 0x31a1, 0xf600, 0xa4b2, 0xd1ee, 0xcbae, 0x0, 0x0);
        gbc.writeMem(0xc862, { 0x6e });
        gbc.writeMem(0xcbae, { 0x20 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x31a1, gbc.sp());
        EXPECT(0xc863, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc862));
        EXPECT(0x20, gbc.readMem(0xcbae));
        // 6E 003F
        gbc.setState(0x294e, 0xd030, 0x5f00, 0x6e6e, 0x3718, 0x825e, 0x0, 0x1);
        gbc.writeMem(0x294e, { 0x6e });
        gbc.writeMem(0x825e, { 0xe9 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd030, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0x825e));
        // 6E 0040
        gbc.setState(0xa04d, 0x928d, 0xdd60, 0x47dd, 0xf37c, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0xa04d, { 0x6e });
        gbc.writeMem(0xb91c, { 0x17 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x928d, gbc.sp());
        EXPECT(0xa04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa04d));
        EXPECT(0x17, gbc.readMem(0xb91c));
        // 6E 0041
        gbc.setState(0xe1de, 0x4c0f, 0xc260, 0xd827, 0x600a, 0x87ca, 0x0, 0x1);
        gbc.writeMem(0x87ca, { 0x83 });
        gbc.writeMem(0xe1de, { 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4c0f, gbc.sp());
        EXPECT(0xe1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x87ca));
        EXPECT(0x6e, gbc.readMem(0xe1de));
        // 6E 0042
        gbc.setState(0xa35f, 0xc108, 0x3640, 0xcb6, 0x982f, 0x9b37, 0x1, 0x0);
        gbc.writeMem(0x9b37, { 0x2c });
        gbc.writeMem(0xa35f, { 0x6e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0xa360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9b37));
        EXPECT(0x6e, gbc.readMem(0xa35f));
        // 6E 0043
        gbc.setState(0x891a, 0xa253, 0xe600, 0x98c3, 0xdffb, 0x7298, 0x0, 0x1);
        gbc.writeMem(0x7298, { 0xfb });
        gbc.writeMem(0x891a, { 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0x891b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x891a));
        // 6E 0044
        gbc.setState(0x92aa, 0x8ddd, 0xbe0, 0xc41, 0x4dc8, 0xbf9c, 0x0, 0x1);
        gbc.writeMem(0x92aa, { 0x6e });
        gbc.writeMem(0xbf9c, { 0xef });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8ddd, gbc.sp());
        EXPECT(0x92ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x92aa));
        EXPECT(0xef, gbc.readMem(0xbf9c));
        // 6E 0045
        gbc.setState(0xa8b7, 0xf5d9, 0x9550, 0x48e3, 0xadb4, 0x2fe0, 0x0, 0x1);
        gbc.writeMem(0x2fe0, { 0xb0 });
        gbc.writeMem(0xa8b7, { 0x6e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf5d9, gbc.sp());
        EXPECT(0xa8b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa8b7));
        // 6E 0046
        gbc.setState(0xbbaf, 0x7a1f, 0xec40, 0x2bd2, 0xcc20, 0xb296, 0x0, 0x1);
        gbc.writeMem(0xb296, { 0x2e });
        gbc.writeMem(0xbbaf, { 0x6e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7a1f, gbc.sp());
        EXPECT(0xbbb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xb296));
        EXPECT(0x6e, gbc.readMem(0xbbaf));
        // 6E 0047
        gbc.setState(0xb0a3, 0x20cb, 0x5e20, 0xe0cb, 0x9dac, 0xda81, 0x1, 0x1);
        gbc.writeMem(0xb0a3, { 0x6e });
        gbc.writeMem(0xda81, { 0x75 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x20cb, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb0a3));
        EXPECT(0x75, gbc.readMem(0xda81));
        // 6E 0048
        gbc.setState(0x1332, 0xc8a9, 0xf430, 0xa518, 0x6af9, 0x5b62, 0x0, 0x0);
        gbc.writeMem(0x1332, { 0x6e });
        gbc.writeMem(0x5b62, { 0xa2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc8a9, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0049
        gbc.setState(0x2817, 0x96a4, 0x7b20, 0xe07e, 0x6491, 0x31c2, 0x0, 0x0);
        gbc.writeMem(0x2817, { 0x6e });
        gbc.writeMem(0x31c2, { 0x42 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x96a4, gbc.sp());
        EXPECT(0x2818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 004A
        gbc.setState(0xa741, 0xa2c2, 0xc8b0, 0x9952, 0x5eb, 0x9824, 0x1, 0x0);
        gbc.writeMem(0x9824, { 0xed });
        gbc.writeMem(0xa741, { 0x6e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa2c2, gbc.sp());
        EXPECT(0xa742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9824));
        EXPECT(0x6e, gbc.readMem(0xa741));
        // 6E 004B
        gbc.setState(0x99cf, 0xb158, 0x8a00, 0x4590, 0xf4a8, 0xf81d, 0x1, 0x0);
        gbc.writeMem(0x99cf, { 0x6e });
        gbc.writeMem(0xf81d, { 0x8b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb158, gbc.sp());
        EXPECT(0x99d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x99cf));
        EXPECT(0x8b, gbc.readMem(0xf81d));
        // 6E 004C
        gbc.setState(0xc57c, 0x860, 0x6980, 0x6f5e, 0x764b, 0x5e4f, 0x0, 0x0);
        gbc.writeMem(0x5e4f, { 0x70 });
        gbc.writeMem(0xc57c, { 0x6e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x860, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc57c));
        // 6E 004D
        gbc.setState(0x7680, 0xf0ae, 0x9fd0, 0x9469, 0x4add, 0xb20d, 0x1, 0x0);
        gbc.writeMem(0x7680, { 0x6e });
        gbc.writeMem(0xb20d, { 0xdc });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf0ae, gbc.sp());
        EXPECT(0x7681, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xb20d));
        // 6E 004E
        gbc.setState(0xcfaf, 0x637b, 0xee10, 0x581a, 0xc760, 0xff9a, 0x0, 0x0);
        gbc.writeMem(0xcfaf, { 0x6e });
        gbc.writeMem(0xff9a, { 0x2f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x637b, gbc.sp());
        EXPECT(0xcfb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcfaf));
        EXPECT(0x2f, gbc.readMem(0xff9a));
        // 6E 004F
        gbc.setState(0xa7df, 0xe656, 0x7990, 0xa9e4, 0xd6eb, 0xe2a6, 0x1, 0x1);
        gbc.writeMem(0xa7df, { 0x6e });
        gbc.writeMem(0xe2a6, { 0xb9 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe656, gbc.sp());
        EXPECT(0xa7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa7df));
        EXPECT(0xb9, gbc.readMem(0xe2a6));
        // 6E 0050
        gbc.setState(0xc973, 0xee45, 0x8e10, 0x4973, 0x3b09, 0x39ba, 0x1, 0x0);
        gbc.writeMem(0x39ba, { 0x47 });
        gbc.writeMem(0xc973, { 0x6e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xee45, gbc.sp());
        EXPECT(0xc974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc973));
        // 6E 0051
        gbc.setState(0x9657, 0xafa1, 0xab0, 0xee85, 0xe052, 0xd686, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0x6e });
        gbc.writeMem(0xd686, { 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xafa1, gbc.sp());
        EXPECT(0x9658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9657));
        EXPECT(0x2c, gbc.readMem(0xd686));
        // 6E 0052
        gbc.setState(0xe8db, 0x381b, 0xcfa0, 0x126e, 0x91c3, 0xa5b8, 0x0, 0x1);
        gbc.writeMem(0xa5b8, { 0xc9 });
        gbc.writeMem(0xe8db, { 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x381b, gbc.sp());
        EXPECT(0xe8dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa5b8));
        EXPECT(0x6e, gbc.readMem(0xe8db));
        // 6E 0053
        gbc.setState(0x6b50, 0xd677, 0xb980, 0x1dd3, 0xd9a1, 0x8be5, 0x1, 0x1);
        gbc.writeMem(0x6b50, { 0x6e });
        gbc.writeMem(0x8be5, { 0xf7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd677, gbc.sp());
        EXPECT(0x6b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x8be5));
        // 6E 0054
        gbc.setState(0x4253, 0x1149, 0x8270, 0x1613, 0x566d, 0x72a1, 0x1, 0x1);
        gbc.writeMem(0x4253, { 0x6e });
        gbc.writeMem(0x72a1, { 0xf9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1149, gbc.sp());
        EXPECT(0x4254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0055
        gbc.setState(0x3af1, 0x8b0a, 0xca10, 0x8268, 0x8cf4, 0x3ce4, 0x1, 0x0);
        gbc.writeMem(0x3af1, { 0x6e });
        gbc.writeMem(0x3ce4, { 0xe1 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8b0a, gbc.sp());
        EXPECT(0x3af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0056
        gbc.setState(0x87bc, 0xdaf0, 0x73b0, 0x9333, 0xffdd, 0xe94e, 0x0, 0x1);
        gbc.writeMem(0x87bc, { 0x6e });
        gbc.writeMem(0xe94e, { 0xfa });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x87bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x87bc));
        EXPECT(0xfa, gbc.readMem(0xe94e));
        // 6E 0057
        gbc.setState(0xa7ae, 0x7e64, 0x88d0, 0xec61, 0xfbac, 0xbb52, 0x1, 0x0);
        gbc.writeMem(0xa7ae, { 0x6e });
        gbc.writeMem(0xbb52, { 0x1f });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7e64, gbc.sp());
        EXPECT(0xa7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa7ae));
        EXPECT(0x1f, gbc.readMem(0xbb52));
        // 6E 0058
        gbc.setState(0xa7be, 0x8e0, 0xf350, 0x5af1, 0x5eac, 0xcba1, 0x0, 0x1);
        gbc.writeMem(0xa7be, { 0x6e });
        gbc.writeMem(0xcba1, { 0x51 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8e0, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa7be));
        EXPECT(0x51, gbc.readMem(0xcba1));
        // 6E 0059
        gbc.setState(0x618f, 0x69d7, 0xc810, 0x4901, 0x4f92, 0x2d8d, 0x1, 0x0);
        gbc.writeMem(0x2d8d, { 0x5a });
        gbc.writeMem(0x618f, { 0x6e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x69d7, gbc.sp());
        EXPECT(0x6190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 005A
        gbc.setState(0x596d, 0x30ec, 0x5de0, 0x3f3c, 0xbea, 0x22f7, 0x0, 0x0);
        gbc.writeMem(0x22f7, { 0xad });
        gbc.writeMem(0x596d, { 0x6e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x30ec, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 005B
        gbc.setState(0x5e3f, 0xf56f, 0xde10, 0x4cca, 0x707d, 0x8e03, 0x0, 0x1);
        gbc.writeMem(0x5e3f, { 0x6e });
        gbc.writeMem(0x8e03, { 0x1d });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf56f, gbc.sp());
        EXPECT(0x5e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8e03));
        // 6E 005C
        gbc.setState(0x769a, 0x92a6, 0xe360, 0x10c2, 0xa7b9, 0x894f, 0x1, 0x0);
        gbc.writeMem(0x769a, { 0x6e });
        gbc.writeMem(0x894f, { 0xd9 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x92a6, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x894f));
        // 6E 005D
        gbc.setState(0x8926, 0x68f3, 0x8690, 0x7971, 0xa24d, 0x2829, 0x0, 0x1);
        gbc.writeMem(0x2829, { 0x10 });
        gbc.writeMem(0x8926, { 0x6e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x68f3, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8926));
        // 6E 005E
        gbc.setState(0x91db, 0x563, 0x7d60, 0x61ec, 0xedf2, 0xe01f, 0x0, 0x1);
        gbc.writeMem(0x91db, { 0x6e });
        gbc.writeMem(0xe01f, { 0xb5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x91dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x91db));
        EXPECT(0xb5, gbc.readMem(0xe01f));
        // 6E 005F
        gbc.setState(0x5498, 0x44fd, 0xcdf0, 0x4237, 0x3784, 0x473f, 0x0, 0x0);
        gbc.writeMem(0x473f, { 0x9 });
        gbc.writeMem(0x5498, { 0x6e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x44fd, gbc.sp());
        EXPECT(0x5499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0060
        gbc.setState(0x24f, 0xbdd5, 0x5870, 0x80a9, 0x99e5, 0x9a29, 0x1, 0x1);
        gbc.writeMem(0x24f, { 0x6e });
        gbc.writeMem(0x9a29, { 0xdd });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbdd5, gbc.sp());
        EXPECT(0x250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9a29));
        // 6E 0061
        gbc.setState(0x3618, 0x227c, 0x62e0, 0xf818, 0xa83e, 0x107c, 0x1, 0x1);
        gbc.writeMem(0x107c, { 0xc8 });
        gbc.writeMem(0x3618, { 0x6e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x3619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0062
        gbc.setState(0x6b9b, 0x1f49, 0xe680, 0xfd41, 0x8633, 0x925f, 0x1, 0x1);
        gbc.writeMem(0x6b9b, { 0x6e });
        gbc.writeMem(0x925f, { 0xa2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0x6b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x925f));
        // 6E 0063
        gbc.setState(0xd6b4, 0x6ba2, 0x7280, 0x28e0, 0x36d4, 0xf7e7, 0x0, 0x1);
        gbc.writeMem(0xd6b4, { 0x6e });
        gbc.writeMem(0xf7e7, { 0x2e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6ba2, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd6b4));
        EXPECT(0x2e, gbc.readMem(0xf7e7));
        // 6E 0064
        gbc.setState(0xa814, 0xa477, 0xffd0, 0x31b4, 0xf9e7, 0x49fa, 0x1, 0x1);
        gbc.writeMem(0x49fa, { 0x61 });
        gbc.writeMem(0xa814, { 0x6e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa477, gbc.sp());
        EXPECT(0xa815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa814));
        // 6E 0065
        gbc.setState(0xc651, 0x8ff8, 0xab50, 0xf6dc, 0x5c6, 0xdfbd, 0x0, 0x1);
        gbc.writeMem(0xc651, { 0x6e });
        gbc.writeMem(0xdfbd, { 0x14 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8ff8, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc651));
        EXPECT(0x14, gbc.readMem(0xdfbd));
        // 6E 0066
        gbc.setState(0x4798, 0xfa9e, 0x92d0, 0x2e48, 0x7068, 0xe117, 0x1, 0x1);
        gbc.writeMem(0x4798, { 0x6e });
        gbc.writeMem(0xe117, { 0x7f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfa9e, gbc.sp());
        EXPECT(0x4799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xe117));
        // 6E 0067
        gbc.setState(0x25a5, 0xefb9, 0x8020, 0xc8c7, 0xc254, 0x5d1b, 0x0, 0x1);
        gbc.writeMem(0x25a5, { 0x6e });
        gbc.writeMem(0x5d1b, { 0x68 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xefb9, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0068
        gbc.setState(0x65a0, 0x590c, 0xdf10, 0x12e0, 0x3108, 0x797, 0x0, 0x1);
        gbc.writeMem(0x797, { 0x35 });
        gbc.writeMem(0x65a0, { 0x6e });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x590c, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0069
        gbc.setState(0xd914, 0xf08e, 0xfa0, 0x100e, 0xb3ef, 0x40f5, 0x1, 0x1);
        gbc.writeMem(0x40f5, { 0x3b });
        gbc.writeMem(0xd914, { 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf08e, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd914));
        // 6E 006A
        gbc.setState(0xda2c, 0xd042, 0xf950, 0x4339, 0x18b8, 0x40f8, 0x0, 0x0);
        gbc.writeMem(0x40f8, { 0x6a });
        gbc.writeMem(0xda2c, { 0x6e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd042, gbc.sp());
        EXPECT(0xda2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda2c));
        // 6E 006B
        gbc.setState(0xa10d, 0xe94c, 0x3010, 0xa2bc, 0x2ecc, 0xbcca, 0x0, 0x0);
        gbc.writeMem(0xa10d, { 0x6e });
        gbc.writeMem(0xbcca, { 0x7d });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa10d));
        EXPECT(0x7d, gbc.readMem(0xbcca));
        // 6E 006C
        gbc.setState(0x1266, 0x953e, 0xf20, 0xad3c, 0x614b, 0xa532, 0x0, 0x1);
        gbc.writeMem(0x1266, { 0x6e });
        gbc.writeMem(0xa532, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x953e, gbc.sp());
        EXPECT(0x1267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa532));
        // 6E 006D
        gbc.setState(0x86dd, 0xf84d, 0x7360, 0xf650, 0x10c7, 0xb7ea, 0x0, 0x1);
        gbc.writeMem(0x86dd, { 0x6e });
        gbc.writeMem(0xb7ea, { 0x8f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf84d, gbc.sp());
        EXPECT(0x86de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x86dd));
        EXPECT(0x8f, gbc.readMem(0xb7ea));
        // 6E 006E
        gbc.setState(0x84c9, 0x8840, 0x9480, 0x53a7, 0x8738, 0xdedf, 0x1, 0x0);
        gbc.writeMem(0x84c9, { 0x6e });
        gbc.writeMem(0xdedf, { 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8840, gbc.sp());
        EXPECT(0x84ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x84c9));
        EXPECT(0xc3, gbc.readMem(0xdedf));
        // 6E 006F
        gbc.setState(0xaa9d, 0x400f, 0x8140, 0x9eb7, 0x3d81, 0x5489, 0x0, 0x1);
        gbc.writeMem(0x5489, { 0x14 });
        gbc.writeMem(0xaa9d, { 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x400f, gbc.sp());
        EXPECT(0xaa9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaa9d));
        // 6E 0070
        gbc.setState(0xe7f8, 0xd1ed, 0x1a20, 0x6450, 0xcede, 0xf8da, 0x0, 0x0);
        gbc.writeMem(0xe7f8, { 0x6e });
        gbc.writeMem(0xf8da, { 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd1ed, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe7f8));
        EXPECT(0x12, gbc.readMem(0xf8da));
        // 6E 0071
        gbc.setState(0x21cc, 0x6d0b, 0x13f0, 0x31b, 0x60b, 0xc4c9, 0x1, 0x1);
        gbc.writeMem(0x21cc, { 0x6e });
        gbc.writeMem(0xc4c9, { 0xa2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6d0b, gbc.sp());
        EXPECT(0x21cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xc4c9));
        // 6E 0072
        gbc.setState(0x5078, 0x6d8f, 0xcfa0, 0xb8cc, 0x9466, 0x402b, 0x0, 0x0);
        gbc.writeMem(0x402b, { 0xa0 });
        gbc.writeMem(0x5078, { 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6d8f, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0073
        gbc.setState(0x79e2, 0x6176, 0xebc0, 0xa366, 0x7a1d, 0xc5c8, 0x1, 0x0);
        gbc.writeMem(0x79e2, { 0x6e });
        gbc.writeMem(0xc5c8, { 0xf });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6176, gbc.sp());
        EXPECT(0x79e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc5c8));
        // 6E 0074
        gbc.setState(0x3226, 0xaa0d, 0x96f0, 0x16bf, 0x873e, 0xc7dd, 0x1, 0x0);
        gbc.writeMem(0x3226, { 0x6e });
        gbc.writeMem(0xc7dd, { 0x85 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x3227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc7dd));
        // 6E 0075
        gbc.setState(0x6771, 0xe5ec, 0x5c30, 0x3e26, 0xcf8a, 0x4080, 0x0, 0x0);
        gbc.writeMem(0x4080, { 0x53 });
        gbc.writeMem(0x6771, { 0x6e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe5ec, gbc.sp());
        EXPECT(0x6772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0076
        gbc.setState(0xdd77, 0x55b0, 0xda0, 0x7235, 0x3718, 0x4e90, 0x1, 0x0);
        gbc.writeMem(0x4e90, { 0x70 });
        gbc.writeMem(0xdd77, { 0x6e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0xdd78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdd77));
        // 6E 0077
        gbc.setState(0xb9c6, 0xf63d, 0xe380, 0xe889, 0x881e, 0x76fe, 0x1, 0x0);
        gbc.writeMem(0x76fe, { 0xbf });
        gbc.writeMem(0xb9c6, { 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf63d, gbc.sp());
        EXPECT(0xb9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb9c6));
        // 6E 0078
        gbc.setState(0xdbf, 0x56f5, 0x210, 0x9c1c, 0xacd9, 0x16f0, 0x0, 0x1);
        gbc.writeMem(0xdbf, { 0x6e });
        gbc.writeMem(0x16f0, { 0xae });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x56f5, gbc.sp());
        EXPECT(0xdc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0079
        gbc.setState(0x592b, 0x741d, 0xd650, 0xa091, 0x2a93, 0x204e, 0x1, 0x0);
        gbc.writeMem(0x204e, { 0xc4 });
        gbc.writeMem(0x592b, { 0x6e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x741d, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 007A
        gbc.setState(0x39f0, 0x655c, 0xf620, 0xa963, 0x7b31, 0x470, 0x1, 0x1);
        gbc.writeMem(0x470, { 0x32 });
        gbc.writeMem(0x39f0, { 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x655c, gbc.sp());
        EXPECT(0x39f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 007B
        gbc.setState(0x9b6, 0x7618, 0x8c60, 0x39c, 0xc633, 0xa306, 0x1, 0x1);
        gbc.writeMem(0x9b6, { 0x6e });
        gbc.writeMem(0xa306, { 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7618, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa306));
        // 6E 007C
        gbc.setState(0xcbe8, 0xb43e, 0x69d0, 0xc6d2, 0xb369, 0xd4b4, 0x0, 0x0);
        gbc.writeMem(0xcbe8, { 0x6e });
        gbc.writeMem(0xd4b4, { 0xa2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb43e, gbc.sp());
        EXPECT(0xcbe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcbe8));
        EXPECT(0xa2, gbc.readMem(0xd4b4));
        // 6E 007F
        gbc.setState(0x6078, 0x86e7, 0xda70, 0x5e5a, 0x512f, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0x6078, { 0x6e });
        gbc.writeMem(0xb1cd, { 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x6079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xb1cd));
        // 6E 0080
        gbc.setState(0xda9c, 0x557, 0x200, 0xfe59, 0x811f, 0xe9a7, 0x1, 0x0);
        gbc.writeMem(0xda9c, { 0x6e });
        gbc.writeMem(0xe9a7, { 0x23 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x557, gbc.sp());
        EXPECT(0xda9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda9c));
        EXPECT(0x23, gbc.readMem(0xe9a7));
        // 6E 0081
        gbc.setState(0x2a61, 0x1048, 0x6db0, 0x1793, 0x3c8a, 0x9117, 0x0, 0x0);
        gbc.writeMem(0x2a61, { 0x6e });
        gbc.writeMem(0x9117, { 0xab });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1048, gbc.sp());
        EXPECT(0x2a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9117));
        // 6E 0082
        gbc.setState(0xd091, 0x4b5b, 0x8c90, 0xb505, 0xc84c, 0xbcb9, 0x1, 0x0);
        gbc.writeMem(0xbcb9, { 0x14 });
        gbc.writeMem(0xd091, { 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4b5b, gbc.sp());
        EXPECT(0xd092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xbcb9));
        EXPECT(0x6e, gbc.readMem(0xd091));
        // 6E 0083
        gbc.setState(0x4168, 0xd3b9, 0xcdc0, 0x7667, 0x7763, 0x86b4, 0x1, 0x1);
        gbc.writeMem(0x4168, { 0x6e });
        gbc.writeMem(0x86b4, { 0xf7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd3b9, gbc.sp());
        EXPECT(0x4169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0x86b4));
        // 6E 0084
        gbc.setState(0x4712, 0xf6f8, 0x21b0, 0x6759, 0xcfb8, 0x79f6, 0x1, 0x0);
        gbc.writeMem(0x4712, { 0x6e });
        gbc.writeMem(0x79f6, { 0x5c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf6f8, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0086
        gbc.setState(0x94de, 0x441f, 0xeb30, 0xeb22, 0x11a4, 0xa0e1, 0x0, 0x1);
        gbc.writeMem(0x94de, { 0x6e });
        gbc.writeMem(0xa0e1, { 0x3a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x441f, gbc.sp());
        EXPECT(0x94df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x94de));
        EXPECT(0x3a, gbc.readMem(0xa0e1));
        // 6E 0087
        gbc.setState(0xccd1, 0x6c55, 0x6c10, 0x3c04, 0xcbce, 0x75ed, 0x1, 0x0);
        gbc.writeMem(0x75ed, { 0x67 });
        gbc.writeMem(0xccd1, { 0x6e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6c55, gbc.sp());
        EXPECT(0xccd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xccd1));
        // 6E 0088
        gbc.setState(0x7b6f, 0xf21d, 0x22e0, 0x2af9, 0x69cc, 0xe90, 0x0, 0x0);
        gbc.writeMem(0xe90, { 0x49 });
        gbc.writeMem(0x7b6f, { 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf21d, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0089
        gbc.setState(0xa873, 0x2a69, 0xc3a0, 0xf70d, 0x3c2a, 0xf689, 0x1, 0x1);
        gbc.writeMem(0xa873, { 0x6e });
        gbc.writeMem(0xf689, { 0x91 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2a69, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa873));
        EXPECT(0x91, gbc.readMem(0xf689));
        // 6E 008A
        gbc.setState(0x3f43, 0x576e, 0x7bc0, 0xf784, 0xfaf4, 0x17f5, 0x1, 0x0);
        gbc.writeMem(0x17f5, { 0xd4 });
        gbc.writeMem(0x3f43, { 0x6e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x576e, gbc.sp());
        EXPECT(0x3f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 008B
        gbc.setState(0x64c2, 0x6470, 0xd1a0, 0xafda, 0xc7a2, 0x35ec, 0x0, 0x0);
        gbc.writeMem(0x35ec, { 0xf2 });
        gbc.writeMem(0x64c2, { 0x6e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6470, gbc.sp());
        EXPECT(0x64c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 008C
        gbc.setState(0x34e, 0x3e6e, 0xc8c0, 0x9ac5, 0xb261, 0x754b, 0x0, 0x0);
        gbc.writeMem(0x34e, { 0x6e });
        gbc.writeMem(0x754b, { 0x98 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3e6e, gbc.sp());
        EXPECT(0x34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 008E
        gbc.setState(0x5384, 0x40ea, 0x23a0, 0xb16a, 0x2ff9, 0x7cf3, 0x1, 0x1);
        gbc.writeMem(0x5384, { 0x6e });
        gbc.writeMem(0x7cf3, { 0x7d });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x40ea, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 008F
        gbc.setState(0x5065, 0x4657, 0xc270, 0x575f, 0x452b, 0x3932, 0x0, 0x1);
        gbc.writeMem(0x3932, { 0xe });
        gbc.writeMem(0x5065, { 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0x5066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0090
        gbc.setState(0xd486, 0x861b, 0x4690, 0x332a, 0x7210, 0x40c7, 0x1, 0x0);
        gbc.writeMem(0x40c7, { 0x63 });
        gbc.writeMem(0xd486, { 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x861b, gbc.sp());
        EXPECT(0xd487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd486));
        // 6E 0091
        gbc.setState(0xea5d, 0x891e, 0xe890, 0x5207, 0x39db, 0x81ff, 0x0, 0x1);
        gbc.writeMem(0x81ff, { 0x2e });
        gbc.writeMem(0xea5d, { 0x6e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0xea5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x81ff));
        EXPECT(0x6e, gbc.readMem(0xea5d));
        // 6E 0092
        gbc.setState(0x6188, 0xe241, 0x74b0, 0xc2c6, 0x9887, 0x6bcf, 0x1, 0x1);
        gbc.writeMem(0x6188, { 0x6e });
        gbc.writeMem(0x6bcf, { 0x8e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe241, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0093
        gbc.setState(0xc328, 0xecd7, 0xa000, 0xde8f, 0x352c, 0x9f83, 0x1, 0x0);
        gbc.writeMem(0x9f83, { 0xa0 });
        gbc.writeMem(0xc328, { 0x6e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0xc329, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0x9f83));
        EXPECT(0x6e, gbc.readMem(0xc328));
        // 6E 0094
        gbc.setState(0x30d8, 0x5e9f, 0x7730, 0x18e6, 0x5fbb, 0x6ea, 0x1, 0x0);
        gbc.writeMem(0x6ea, { 0xa0 });
        gbc.writeMem(0x30d8, { 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x30d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0095
        gbc.setState(0x12c, 0x708d, 0x60b0, 0x7032, 0x2e45, 0x1e24, 0x0, 0x0);
        gbc.writeMem(0x12c, { 0x6e });
        gbc.writeMem(0x1e24, { 0x65 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x708d, gbc.sp());
        EXPECT(0x12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0096
        gbc.setState(0x9d52, 0xbc03, 0x93d0, 0x122e, 0xf5c, 0xcf65, 0x1, 0x0);
        gbc.writeMem(0x9d52, { 0x6e });
        gbc.writeMem(0xcf65, { 0xa6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbc03, gbc.sp());
        EXPECT(0x9d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9d52));
        EXPECT(0xa6, gbc.readMem(0xcf65));
        // 6E 0098
        gbc.setState(0x318a, 0x9661, 0x4720, 0x7b2f, 0x917d, 0x48fc, 0x1, 0x1);
        gbc.writeMem(0x318a, { 0x6e });
        gbc.writeMem(0x48fc, { 0x52 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9661, gbc.sp());
        EXPECT(0x318b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0099
        gbc.setState(0x4c0e, 0xceb4, 0xdf40, 0xbc7a, 0xd9ad, 0xc50a, 0x0, 0x1);
        gbc.writeMem(0x4c0e, { 0x6e });
        gbc.writeMem(0xc50a, { 0xf9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xceb4, gbc.sp());
        EXPECT(0x4c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc50a));
        // 6E 009A
        gbc.setState(0x66d2, 0x5464, 0xa1a0, 0x906c, 0x6f2d, 0xde17, 0x1, 0x0);
        gbc.writeMem(0x66d2, { 0x6e });
        gbc.writeMem(0xde17, { 0xb3 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x66d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xde17));
        // 6E 009B
        gbc.setState(0x221a, 0xa904, 0x7b00, 0x943b, 0xea5b, 0x8365, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0x6e });
        gbc.writeMem(0x8365, { 0x5d });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x221b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8365));
        // 6E 009C
        gbc.setState(0x5eef, 0x404c, 0xfd60, 0x7057, 0x1c02, 0x3d8f, 0x1, 0x1);
        gbc.writeMem(0x3d8f, { 0xa1 });
        gbc.writeMem(0x5eef, { 0x6e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x404c, gbc.sp());
        EXPECT(0x5ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 009E
        gbc.setState(0x8752, 0xa664, 0x2140, 0xb1c7, 0xecfd, 0x375f, 0x1, 0x1);
        gbc.writeMem(0x375f, { 0x94 });
        gbc.writeMem(0x8752, { 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa664, gbc.sp());
        EXPECT(0x8753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8752));
        // 6E 009F
        gbc.setState(0xa9f7, 0xa5af, 0x7a80, 0x4169, 0x54b9, 0xd17f, 0x0, 0x1);
        gbc.writeMem(0xa9f7, { 0x6e });
        gbc.writeMem(0xd17f, { 0x9a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa5af, gbc.sp());
        EXPECT(0xa9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa9f7));
        EXPECT(0x9a, gbc.readMem(0xd17f));
        // 6E 00A0
        gbc.setState(0x7ad1, 0xa552, 0x6f00, 0xf5e6, 0x4e92, 0x6b46, 0x1, 0x1);
        gbc.writeMem(0x6b46, { 0xd0 });
        gbc.writeMem(0x7ad1, { 0x6e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa552, gbc.sp());
        EXPECT(0x7ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00A1
        gbc.setState(0x2942, 0x2d61, 0xfc30, 0xf8c6, 0x21, 0xb576, 0x0, 0x1);
        gbc.writeMem(0x2942, { 0x6e });
        gbc.writeMem(0xb576, { 0x14 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2d61, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xb576));
        // 6E 00A2
        gbc.setState(0xad1d, 0x5d8f, 0x9750, 0x8e65, 0xf20d, 0x2d03, 0x1, 0x1);
        gbc.writeMem(0x2d03, { 0x36 });
        gbc.writeMem(0xad1d, { 0x6e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5d8f, gbc.sp());
        EXPECT(0xad1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xad1d));
        // 6E 00A3
        gbc.setState(0x5678, 0xe587, 0x2d60, 0x4e3, 0x6786, 0xe17c, 0x1, 0x0);
        gbc.writeMem(0x5678, { 0x6e });
        gbc.writeMem(0xe17c, { 0x65 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x5679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe17c));
        // 6E 00A4
        gbc.setState(0x3dbf, 0xffd9, 0xc3d0, 0x53a, 0xbe76, 0x88cb, 0x1, 0x0);
        gbc.writeMem(0x3dbf, { 0x6e });
        gbc.writeMem(0x88cb, { 0x2a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xffd9, gbc.sp());
        EXPECT(0x3dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x88cb));
        // 6E 00A5
        gbc.setState(0xd644, 0xb9a6, 0x3150, 0x828d, 0x79c7, 0xbda5, 0x0, 0x1);
        gbc.writeMem(0xbda5, { 0x30 });
        gbc.writeMem(0xd644, { 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xb9a6, gbc.sp());
        EXPECT(0xd645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xbda5));
        EXPECT(0x6e, gbc.readMem(0xd644));
        // 6E 00A6
        gbc.setState(0x8246, 0x844b, 0x57a0, 0x1613, 0x3e34, 0x40ac, 0x1, 0x1);
        gbc.writeMem(0x40ac, { 0xa6 });
        gbc.writeMem(0x8246, { 0x6e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x844b, gbc.sp());
        EXPECT(0x8247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8246));
        // 6E 00A7
        gbc.setState(0x4bbc, 0xe311, 0x3360, 0x7e19, 0x6865, 0x2a13, 0x1, 0x0);
        gbc.writeMem(0x2a13, { 0x58 });
        gbc.writeMem(0x4bbc, { 0x6e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe311, gbc.sp());
        EXPECT(0x4bbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00A8
        gbc.setState(0x3e5b, 0x24ed, 0x72c0, 0x97ef, 0x3ae4, 0x72af, 0x1, 0x0);
        gbc.writeMem(0x3e5b, { 0x6e });
        gbc.writeMem(0x72af, { 0x27 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x24ed, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00A9
        gbc.setState(0xbb52, 0x59af, 0x14a0, 0x2c3f, 0x4ae4, 0x494, 0x0, 0x1);
        gbc.writeMem(0x494, { 0x8c });
        gbc.writeMem(0xbb52, { 0x6e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x59af, gbc.sp());
        EXPECT(0xbb53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbb52));
        // 6E 00AA
        gbc.setState(0x1224, 0x721, 0xb30, 0xbf8a, 0x742a, 0x7296, 0x0, 0x0);
        gbc.writeMem(0x1224, { 0x6e });
        gbc.writeMem(0x7296, { 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x721, gbc.sp());
        EXPECT(0x1225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00AB
        gbc.setState(0x3af5, 0xcbcb, 0x7550, 0x6ad, 0x5723, 0xe6b5, 0x1, 0x0);
        gbc.writeMem(0x3af5, { 0x6e });
        gbc.writeMem(0xe6b5, { 0xe1 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xcbcb, gbc.sp());
        EXPECT(0x3af6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe6b5));
        // 6E 00AC
        gbc.setState(0x618, 0x5b66, 0xa8f0, 0x81, 0xc67c, 0x92eb, 0x0, 0x0);
        gbc.writeMem(0x618, { 0x6e });
        gbc.writeMem(0x92eb, { 0xfb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5b66, gbc.sp());
        EXPECT(0x619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x92eb));
        // 6E 00AD
        gbc.setState(0x340c, 0x5b5f, 0xc8a0, 0xe99e, 0x6ab0, 0xa90e, 0x0, 0x0);
        gbc.writeMem(0x340c, { 0x6e });
        gbc.writeMem(0xa90e, { 0x6e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5b5f, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa90e));
        // 6E 00AE
        gbc.setState(0x31b3, 0xd613, 0x9e50, 0xeb7e, 0x498f, 0xb0b5, 0x0, 0x0);
        gbc.writeMem(0x31b3, { 0x6e });
        gbc.writeMem(0xb0b5, { 0x21 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd613, gbc.sp());
        EXPECT(0x31b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb0b5));
        // 6E 00AF
        gbc.setState(0x1c5d, 0xe42, 0x2030, 0xd250, 0xc2ec, 0xb899, 0x0, 0x1);
        gbc.writeMem(0x1c5d, { 0x6e });
        gbc.writeMem(0xb899, { 0x39 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xe42, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb899));
        // 6E 00B0
        gbc.setState(0x86d8, 0x5974, 0x11d0, 0x8f09, 0x478f, 0xea82, 0x1, 0x0);
        gbc.writeMem(0x86d8, { 0x6e });
        gbc.writeMem(0xea82, { 0x32 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5974, gbc.sp());
        EXPECT(0x86d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x86d8));
        EXPECT(0x32, gbc.readMem(0xea82));
        // 6E 00B1
        gbc.setState(0xd0b3, 0x34e4, 0x96a0, 0x71b, 0x916e, 0xb419, 0x1, 0x1);
        gbc.writeMem(0xb419, { 0x94 });
        gbc.writeMem(0xd0b3, { 0x6e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x34e4, gbc.sp());
        EXPECT(0xd0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb419));
        EXPECT(0x6e, gbc.readMem(0xd0b3));
        // 6E 00B3
        gbc.setState(0xc0b, 0xd050, 0x75d0, 0xda17, 0x42f4, 0x73db, 0x0, 0x0);
        gbc.writeMem(0xc0b, { 0x6e });
        gbc.writeMem(0x73db, { 0x92 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd050, gbc.sp());
        EXPECT(0xc0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00B4
        gbc.setState(0xa3d, 0xac7b, 0xa590, 0x8f37, 0xf992, 0xe426, 0x1, 0x0);
        gbc.writeMem(0xa3d, { 0x6e });
        gbc.writeMem(0xe426, { 0xb9 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xac7b, gbc.sp());
        EXPECT(0xa3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe426));
        // 6E 00B5
        gbc.setState(0xc198, 0x42fb, 0x9db0, 0x44b0, 0xe2a3, 0x36b6, 0x0, 0x0);
        gbc.writeMem(0x36b6, { 0xc1 });
        gbc.writeMem(0xc198, { 0x6e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x42fb, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc198));
        // 6E 00B6
        gbc.setState(0x4a91, 0x5957, 0x2aa0, 0x3cf5, 0xec33, 0xe91e, 0x1, 0x1);
        gbc.writeMem(0x4a91, { 0x6e });
        gbc.writeMem(0xe91e, { 0x81 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x5957, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xe91e));
        // 6E 00B7
        gbc.setState(0x878, 0xf116, 0x4860, 0xaabd, 0x3fdf, 0xe548, 0x1, 0x1);
        gbc.writeMem(0x878, { 0x6e });
        gbc.writeMem(0xe548, { 0x72 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf116, gbc.sp());
        EXPECT(0x879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe548));
        // 6E 00B8
        gbc.setState(0x826f, 0xff3, 0x8c00, 0xfcd6, 0x1b01, 0x74c8, 0x0, 0x0);
        gbc.writeMem(0x74c8, { 0x5b });
        gbc.writeMem(0x826f, { 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xff3, gbc.sp());
        EXPECT(0x8270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x826f));
        // 6E 00B9
        gbc.setState(0x30df, 0x216b, 0xae30, 0x3bf3, 0x879d, 0x406d, 0x0, 0x1);
        gbc.writeMem(0x30df, { 0x6e });
        gbc.writeMem(0x406d, { 0xd3 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x216b, gbc.sp());
        EXPECT(0x30e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00BA
        gbc.setState(0x8b16, 0xeb90, 0x4080, 0x698d, 0x7b84, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x8a5b, { 0xfa });
        gbc.writeMem(0x8b16, { 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xeb90, gbc.sp());
        EXPECT(0x8b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8a5b));
        EXPECT(0x6e, gbc.readMem(0x8b16));
        // 6E 00BB
        gbc.setState(0x7c03, 0x25f1, 0xe050, 0xf6d6, 0xc56d, 0x944d, 0x0, 0x1);
        gbc.writeMem(0x7c03, { 0x6e });
        gbc.writeMem(0x944d, { 0x32 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x25f1, gbc.sp());
        EXPECT(0x7c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x944d));
        // 6E 00BC
        gbc.setState(0x295e, 0x2980, 0x8940, 0x9ecc, 0x7c5c, 0x519a, 0x1, 0x0);
        gbc.writeMem(0x295e, { 0x6e });
        gbc.writeMem(0x519a, { 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00BD
        gbc.setState(0xc9f5, 0x2bf0, 0xde50, 0xc5f4, 0x8e87, 0x6402, 0x1, 0x1);
        gbc.writeMem(0x6402, { 0xe9 });
        gbc.writeMem(0xc9f5, { 0x6e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2bf0, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc9f5));
        // 6E 00BF
        gbc.setState(0xceb, 0xea0f, 0x9870, 0x6909, 0x6779, 0x2767, 0x1, 0x1);
        gbc.writeMem(0xceb, { 0x6e });
        gbc.writeMem(0x2767, { 0x2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xea0f, gbc.sp());
        EXPECT(0xcec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00C0
        gbc.setState(0x9038, 0x285f, 0xabb0, 0x6263, 0x5f51, 0xa2d, 0x1, 0x1);
        gbc.writeMem(0xa2d, { 0x12 });
        gbc.writeMem(0x9038, { 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x285f, gbc.sp());
        EXPECT(0x9039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9038));
        // 6E 00C1
        gbc.setState(0x1a6e, 0xace5, 0x460, 0xd527, 0x55ca, 0xf763, 0x1, 0x1);
        gbc.writeMem(0x1a6e, { 0x6e });
        gbc.writeMem(0xf763, { 0x6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x1a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xf763));
        // 6E 00C3
        gbc.setState(0xb089, 0xd9d5, 0xe250, 0xe3ba, 0xa2af, 0x586b, 0x1, 0x0);
        gbc.writeMem(0x586b, { 0xb8 });
        gbc.writeMem(0xb089, { 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd9d5, gbc.sp());
        EXPECT(0xb08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb089));
        // 6E 00C4
        gbc.setState(0x93fc, 0x5fbb, 0x72f0, 0x1abe, 0xee4f, 0x2c1f, 0x1, 0x1);
        gbc.writeMem(0x2c1f, { 0x18 });
        gbc.writeMem(0x93fc, { 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5fbb, gbc.sp());
        EXPECT(0x93fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x93fc));
        // 6E 00C5
        gbc.setState(0x70e6, 0x1cda, 0x95c0, 0x8761, 0x7c69, 0x1ca7, 0x1, 0x1);
        gbc.writeMem(0x1ca7, { 0xdd });
        gbc.writeMem(0x70e6, { 0x6e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1cda, gbc.sp());
        EXPECT(0x70e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00C7
        gbc.setState(0xdcc3, 0x5bd9, 0xe570, 0xfbcf, 0x8032, 0xbc08, 0x1, 0x1);
        gbc.writeMem(0xbc08, { 0x6e });
        gbc.writeMem(0xdcc3, { 0x6e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5bd9, gbc.sp());
        EXPECT(0xdcc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbc08));
        EXPECT(0x6e, gbc.readMem(0xdcc3));
        // 6E 00C8
        gbc.setState(0xebbc, 0x57dc, 0xc5e0, 0x6dc2, 0xba3f, 0x304d, 0x0, 0x0);
        gbc.writeMem(0x304d, { 0x1a });
        gbc.writeMem(0xebbc, { 0x6e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x57dc, gbc.sp());
        EXPECT(0xebbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xebbc));
        // 6E 00C9
        gbc.setState(0x7d06, 0x6944, 0x7750, 0x3a7d, 0xfbea, 0x5535, 0x1, 0x0);
        gbc.writeMem(0x5535, { 0xef });
        gbc.writeMem(0x7d06, { 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6944, gbc.sp());
        EXPECT(0x7d07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00CA
        gbc.setState(0x328e, 0xc895, 0x5ee0, 0xa15a, 0x71d3, 0xa304, 0x0, 0x1);
        gbc.writeMem(0x328e, { 0x6e });
        gbc.writeMem(0xa304, { 0x95 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc895, gbc.sp());
        EXPECT(0x328f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa304));
        // 6E 00CB
        gbc.setState(0x3659, 0xb79e, 0x1520, 0xa9be, 0x59d5, 0xb823, 0x0, 0x0);
        gbc.writeMem(0x3659, { 0x6e });
        gbc.writeMem(0xb823, { 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb79e, gbc.sp());
        EXPECT(0x365a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xb823));
        // 6E 00CC
        gbc.setState(0x9960, 0x2f8, 0x29e0, 0x6671, 0x30f2, 0xcd40, 0x0, 0x1);
        gbc.writeMem(0x9960, { 0x6e });
        gbc.writeMem(0xcd40, { 0xe2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0x9961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9960));
        EXPECT(0xe2, gbc.readMem(0xcd40));
        // 6E 00CD
        gbc.setState(0x8f7e, 0xaac2, 0x6910, 0x6d89, 0xddc5, 0x3402, 0x1, 0x0);
        gbc.writeMem(0x3402, { 0xb1 });
        gbc.writeMem(0x8f7e, { 0x6e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x8f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f7e));
        // 6E 00CE
        gbc.setState(0x7d1a, 0x2a62, 0x6520, 0x4bdb, 0x3b83, 0xb1c9, 0x1, 0x1);
        gbc.writeMem(0x7d1a, { 0x6e });
        gbc.writeMem(0xb1c9, { 0x40 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2a62, gbc.sp());
        EXPECT(0x7d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xb1c9));
        // 6E 00CF
        gbc.setState(0xcd50, 0x6ea4, 0xe6a0, 0x49de, 0xb84b, 0x4805, 0x1, 0x1);
        gbc.writeMem(0x4805, { 0xda });
        gbc.writeMem(0xcd50, { 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xcd51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcd50));
        // 6E 00D0
        gbc.setState(0x8d5d, 0xe149, 0xb440, 0x4c53, 0x839d, 0xcc99, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0x6e });
        gbc.writeMem(0xcc99, { 0x84 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe149, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8d5d));
        EXPECT(0x84, gbc.readMem(0xcc99));
        // 6E 00D1
        gbc.setState(0x50ee, 0x20c4, 0x7470, 0xe398, 0xf765, 0xada0, 0x1, 0x0);
        gbc.writeMem(0x50ee, { 0x6e });
        gbc.writeMem(0xada0, { 0x2e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x20c4, gbc.sp());
        EXPECT(0x50ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xada0));
        // 6E 00D2
        gbc.setState(0x8b81, 0xb1ce, 0xd080, 0x2762, 0x37f1, 0x34ea, 0x1, 0x1);
        gbc.writeMem(0x34ea, { 0x3e });
        gbc.writeMem(0x8b81, { 0x6e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb1ce, gbc.sp());
        EXPECT(0x8b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8b81));
        // 6E 00D3
        gbc.setState(0x6df6, 0x7f15, 0x5e50, 0xea16, 0x9b3a, 0x771e, 0x0, 0x1);
        gbc.writeMem(0x6df6, { 0x6e });
        gbc.writeMem(0x771e, { 0x6c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7f15, gbc.sp());
        EXPECT(0x6df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00D4
        gbc.setState(0xe605, 0xa073, 0xe870, 0xfede, 0x72eb, 0x2232, 0x1, 0x0);
        gbc.writeMem(0x2232, { 0x41 });
        gbc.writeMem(0xe605, { 0x6e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa073, gbc.sp());
        EXPECT(0xe606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe605));
        // 6E 00D5
        gbc.setState(0x3217, 0xc345, 0xad50, 0x46f1, 0xf330, 0xd29a, 0x0, 0x0);
        gbc.writeMem(0x3217, { 0x6e });
        gbc.writeMem(0xd29a, { 0x84 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc345, gbc.sp());
        EXPECT(0x3218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd29a));
        // 6E 00D6
        gbc.setState(0x668f, 0x9511, 0x1ad0, 0xe250, 0xa5a5, 0x5cae, 0x0, 0x0);
        gbc.writeMem(0x5cae, { 0x24 });
        gbc.writeMem(0x668f, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9511, gbc.sp());
        EXPECT(0x6690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00D7
        gbc.setState(0x717d, 0x31e5, 0x1e30, 0xf7d1, 0x9a8, 0x8aab, 0x0, 0x0);
        gbc.writeMem(0x717d, { 0x6e });
        gbc.writeMem(0x8aab, { 0x9e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x31e5, gbc.sp());
        EXPECT(0x717e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8aab));
        // 6E 00D8
        gbc.setState(0x6402, 0x4df1, 0xec60, 0x19d7, 0xb8e5, 0xb52, 0x1, 0x0);
        gbc.writeMem(0xb52, { 0x41 });
        gbc.writeMem(0x6402, { 0x6e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4df1, gbc.sp());
        EXPECT(0x6403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00D9
        gbc.setState(0x570b, 0xbf79, 0x1c30, 0x284, 0xb8bd, 0xd904, 0x0, 0x1);
        gbc.writeMem(0x570b, { 0x6e });
        gbc.writeMem(0xd904, { 0x81 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbf79, gbc.sp());
        EXPECT(0x570c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xd904));
        // 6E 00DB
        gbc.setState(0xea60, 0xe7e2, 0x9030, 0x8e82, 0x912f, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xda39, { 0xa2 });
        gbc.writeMem(0xea60, { 0x6e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe7e2, gbc.sp());
        EXPECT(0xea61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xda39));
        EXPECT(0x6e, gbc.readMem(0xea60));
        // 6E 00DC
        gbc.setState(0x1b36, 0xe7d2, 0x12e0, 0xfcab, 0xcfb4, 0x1dce, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0x6e });
        gbc.writeMem(0x1dce, { 0xcd });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe7d2, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00DD
        gbc.setState(0xd710, 0x3b9c, 0xef70, 0xecba, 0x856b, 0xed1f, 0x1, 0x0);
        gbc.writeMem(0xd710, { 0x6e });
        gbc.writeMem(0xed1f, { 0x5a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3b9c, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd710));
        EXPECT(0x5a, gbc.readMem(0xed1f));
        // 6E 00DE
        gbc.setState(0x39fd, 0x3582, 0x9a30, 0xe0b9, 0x3d78, 0x1f96, 0x1, 0x0);
        gbc.writeMem(0x1f96, { 0xc5 });
        gbc.writeMem(0x39fd, { 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3582, gbc.sp());
        EXPECT(0x39fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00DF
        gbc.setState(0x3a4, 0x9633, 0x1320, 0xaee4, 0xf788, 0x5283, 0x1, 0x0);
        gbc.writeMem(0x3a4, { 0x6e });
        gbc.writeMem(0x5283, { 0xac });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9633, gbc.sp());
        EXPECT(0x3a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00E0
        gbc.setState(0xbabb, 0xc841, 0xec90, 0xb8f3, 0x53ea, 0x8b60, 0x1, 0x1);
        gbc.writeMem(0x8b60, { 0x5d });
        gbc.writeMem(0xbabb, { 0x6e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc841, gbc.sp());
        EXPECT(0xbabc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8b60));
        EXPECT(0x6e, gbc.readMem(0xbabb));
        // 6E 00E1
        gbc.setState(0xefe8, 0x36f5, 0xb230, 0xc84b, 0xc47e, 0x16c9, 0x1, 0x1);
        gbc.writeMem(0x16c9, { 0x74 });
        gbc.writeMem(0xefe8, { 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x36f5, gbc.sp());
        EXPECT(0xefe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xefe8));
        // 6E 00E2
        gbc.setState(0x23f4, 0x7f57, 0xc2f0, 0xbb5, 0x376a, 0x62f0, 0x0, 0x1);
        gbc.writeMem(0x23f4, { 0x6e });
        gbc.writeMem(0x62f0, { 0x10 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7f57, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00E3
        gbc.setState(0xe805, 0x565c, 0xab70, 0xe923, 0x5211, 0x4ded, 0x0, 0x0);
        gbc.writeMem(0x4ded, { 0x6a });
        gbc.writeMem(0xe805, { 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x565c, gbc.sp());
        EXPECT(0xe806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe805));
        // 6E 00E5
        gbc.setState(0x6738, 0xd8d4, 0x2ab0, 0x73a1, 0xa4b3, 0x8fec, 0x1, 0x1);
        gbc.writeMem(0x6738, { 0x6e });
        gbc.writeMem(0x8fec, { 0x50 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd8d4, gbc.sp());
        EXPECT(0x6739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8fec));
        // 6E 00E6
        gbc.setState(0x7314, 0x6b0e, 0xc5e0, 0xb636, 0xc26, 0xb58e, 0x1, 0x1);
        gbc.writeMem(0x7314, { 0x6e });
        gbc.writeMem(0xb58e, { 0x56 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6b0e, gbc.sp());
        EXPECT(0x7315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xb58e));
        // 6E 00E7
        gbc.setState(0x82ba, 0xb80, 0x24a0, 0x7c2e, 0x8b01, 0xc4fc, 0x1, 0x0);
        gbc.writeMem(0x82ba, { 0x6e });
        gbc.writeMem(0xc4fc, { 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb80, gbc.sp());
        EXPECT(0x82bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x82ba));
        EXPECT(0x2, gbc.readMem(0xc4fc));
        // 6E 00E8
        gbc.setState(0xc71f, 0x98ac, 0xe5e0, 0xcb3f, 0x1c3c, 0x1973, 0x1, 0x1);
        gbc.writeMem(0x1973, { 0x8e });
        gbc.writeMem(0xc71f, { 0x6e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x98ac, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc71f));
        // 6E 00E9
        gbc.setState(0x147, 0x7560, 0xe4a0, 0xb2a6, 0xdeb, 0xf922, 0x1, 0x0);
        gbc.writeMem(0x147, { 0x6e });
        gbc.writeMem(0xf922, { 0x50 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0x148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xf922));
        // 6E 00EB
        gbc.setState(0xbad, 0x189, 0x1780, 0x8fb1, 0x2508, 0xc27d, 0x1, 0x1);
        gbc.writeMem(0xbad, { 0x6e });
        gbc.writeMem(0xc27d, { 0x51 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0xbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xc27d));
        // 6E 00EC
        gbc.setState(0x9a8c, 0x9c7, 0x3d20, 0x4b4, 0x3fd8, 0xcc1a, 0x1, 0x0);
        gbc.writeMem(0x9a8c, { 0x6e });
        gbc.writeMem(0xcc1a, { 0xa0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9c7, gbc.sp());
        EXPECT(0x9a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9a8c));
        EXPECT(0xa0, gbc.readMem(0xcc1a));
        // 6E 00ED
        gbc.setState(0x1e11, 0x840f, 0xd670, 0xa18d, 0xb82d, 0xae6f, 0x0, 0x1);
        gbc.writeMem(0x1e11, { 0x6e });
        gbc.writeMem(0xae6f, { 0x84 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x840f, gbc.sp());
        EXPECT(0x1e12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xae6f));
        // 6E 00EE
        gbc.setState(0x5221, 0x719d, 0xd1a0, 0x960c, 0xbdc0, 0x3783, 0x1, 0x1);
        gbc.writeMem(0x3783, { 0x50 });
        gbc.writeMem(0x5221, { 0x6e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x719d, gbc.sp());
        EXPECT(0x5222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00EF
        gbc.setState(0x9349, 0xed38, 0xbcf0, 0x2a8a, 0xde31, 0xfaa7, 0x1, 0x0);
        gbc.writeMem(0x9349, { 0x6e });
        gbc.writeMem(0xfaa7, { 0xab });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9349));
        EXPECT(0xab, gbc.readMem(0xfaa7));
        // 6E 00F0
        gbc.setState(0x569a, 0x79db, 0x5320, 0x3cc9, 0x80ea, 0x1487, 0x0, 0x0);
        gbc.writeMem(0x1487, { 0xd9 });
        gbc.writeMem(0x569a, { 0x6e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x79db, gbc.sp());
        EXPECT(0x569b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00F1
        gbc.setState(0x785, 0xaac2, 0x430, 0x5c58, 0xa2fa, 0x4caa, 0x1, 0x0);
        gbc.writeMem(0x785, { 0x6e });
        gbc.writeMem(0x4caa, { 0xf0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaac2, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00F2
        gbc.setState(0xb07f, 0x1606, 0x190, 0xc9a0, 0xa4dc, 0x22c, 0x1, 0x1);
        gbc.writeMem(0x22c, { 0xf3 });
        gbc.writeMem(0xb07f, { 0x6e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1606, gbc.sp());
        EXPECT(0xb080, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb07f));
        // 6E 00F3
        gbc.setState(0x7fa3, 0xdfc3, 0x8330, 0x44b0, 0x7121, 0xbfcf, 0x0, 0x0);
        gbc.writeMem(0x7fa3, { 0x6e });
        gbc.writeMem(0xbfcf, { 0x46 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdfc3, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xbfcf));
        // 6E 00F4
        gbc.setState(0xa15d, 0x42ef, 0x12b0, 0x80c9, 0x6b16, 0xe6c6, 0x0, 0x0);
        gbc.writeMem(0xa15d, { 0x6e });
        gbc.writeMem(0xe6c6, { 0x5 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xa15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa15d));
        EXPECT(0x5, gbc.readMem(0xe6c6));
        // 6E 00F5
        gbc.setState(0x4d9b, 0x8f58, 0x6d70, 0xc95a, 0x8f11, 0xaf6, 0x1, 0x1);
        gbc.writeMem(0xaf6, { 0x43 });
        gbc.writeMem(0x4d9b, { 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8f58, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 00F6
        gbc.setState(0x6ed6, 0xa07b, 0x39f0, 0xe566, 0xefd0, 0xa765, 0x1, 0x1);
        gbc.writeMem(0x6ed6, { 0x6e });
        gbc.writeMem(0xa765, { 0x7b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa07b, gbc.sp());
        EXPECT(0x6ed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xa765));
        // 6E 00F7
        gbc.setState(0x16c2, 0x53bb, 0xdc60, 0xcaef, 0xce5c, 0xfd4, 0x1, 0x1);
        gbc.writeMem(0xfd4, { 0x9a });
        gbc.writeMem(0x16c2, { 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x53bb, gbc.sp());
        EXPECT(0x16c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00F8
        gbc.setState(0xe5c4, 0xedb0, 0xf8e0, 0xdc4a, 0xd8ef, 0xe9e8, 0x1, 0x0);
        gbc.writeMem(0xe5c4, { 0x6e });
        gbc.writeMem(0xe9e8, { 0x76 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xedb0, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe5c4));
        EXPECT(0x76, gbc.readMem(0xe9e8));
        // 6E 00F9
        gbc.setState(0x20ae, 0xccd5, 0x3d10, 0xd413, 0x82d0, 0xb0a9, 0x1, 0x0);
        gbc.writeMem(0x20ae, { 0x6e });
        gbc.writeMem(0xb0a9, { 0xea });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xccd5, gbc.sp());
        EXPECT(0x20af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xb0a9));
        // 6E 00FA
        gbc.setState(0x444f, 0xdc7f, 0xe500, 0xf9cd, 0x8bd5, 0x25c8, 0x1, 0x0);
        gbc.writeMem(0x25c8, { 0x9c });
        gbc.writeMem(0x444f, { 0x6e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xdc7f, gbc.sp());
        EXPECT(0x4450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00FB
        gbc.setState(0x31d0, 0x1584, 0x8a0, 0x4050, 0xf61, 0x678a, 0x0, 0x1);
        gbc.writeMem(0x31d0, { 0x6e });
        gbc.writeMem(0x678a, { 0x78 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1584, gbc.sp());
        EXPECT(0x31d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00FC
        gbc.setState(0x1828, 0xec21, 0x8cb0, 0x1d04, 0x3241, 0xd1ec, 0x1, 0x1);
        gbc.writeMem(0x1828, { 0x6e });
        gbc.writeMem(0xd1ec, { 0x31 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd1ec));
        // 6E 00FD
        gbc.setState(0x1e60, 0x1c97, 0x5320, 0x150, 0xc685, 0x5f14, 0x0, 0x1);
        gbc.writeMem(0x1e60, { 0x6e });
        gbc.writeMem(0x5f14, { 0x56 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1c97, gbc.sp());
        EXPECT(0x1e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 00FE
        gbc.setState(0x75b9, 0x2e0c, 0x5690, 0x50f6, 0xf79, 0xeecd, 0x0, 0x0);
        gbc.writeMem(0x75b9, { 0x6e });
        gbc.writeMem(0xeecd, { 0xd3 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x75ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xeecd));
        // 6E 00FF
        gbc.setState(0x5a41, 0x5733, 0xc730, 0x761d, 0x58c5, 0xb401, 0x0, 0x0);
        gbc.writeMem(0x5a41, { 0x6e });
        gbc.writeMem(0xb401, { 0x6c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0x5a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xb401));
        // 6E 0100
        gbc.setState(0x9980, 0x9098, 0x4050, 0x5404, 0x7958, 0x3fd8, 0x1, 0x1);
        gbc.writeMem(0x3fd8, { 0x92 });
        gbc.writeMem(0x9980, { 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9098, gbc.sp());
        EXPECT(0x9981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9980));
        // 6E 0101
        gbc.setState(0xd38c, 0xf825, 0x6ad0, 0xbf5b, 0xfff1, 0x2dc9, 0x0, 0x0);
        gbc.writeMem(0x2dc9, { 0x3d });
        gbc.writeMem(0xd38c, { 0x6e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf825, gbc.sp());
        EXPECT(0xd38d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd38c));
        // 6E 0102
        gbc.setState(0x8ab6, 0xfc2e, 0xf0c0, 0xf298, 0x9388, 0xc298, 0x1, 0x0);
        gbc.writeMem(0x8ab6, { 0x6e });
        gbc.writeMem(0xc298, { 0x92 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0x8ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8ab6));
        EXPECT(0x92, gbc.readMem(0xc298));
        // 6E 0103
        gbc.setState(0x789a, 0xe922, 0x7930, 0x57a4, 0x8114, 0x9291, 0x1, 0x1);
        gbc.writeMem(0x789a, { 0x6e });
        gbc.writeMem(0x9291, { 0xe8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe922, gbc.sp());
        EXPECT(0x789b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0x9291));
        // 6E 0104
        gbc.setState(0x26ef, 0xebbe, 0x3000, 0xc00, 0xda15, 0x1740, 0x1, 0x1);
        gbc.writeMem(0x1740, { 0xa });
        gbc.writeMem(0x26ef, { 0x6e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xebbe, gbc.sp());
        EXPECT(0x26f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0105
        gbc.setState(0x4ab1, 0x576e, 0xc930, 0x5680, 0x8110, 0xbdd5, 0x1, 0x1);
        gbc.writeMem(0x4ab1, { 0x6e });
        gbc.writeMem(0xbdd5, { 0xe2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x576e, gbc.sp());
        EXPECT(0x4ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xbdd5));
        // 6E 0106
        gbc.setState(0x5b4b, 0xd21b, 0x8270, 0xc0b3, 0x7280, 0x780f, 0x0, 0x0);
        gbc.writeMem(0x5b4b, { 0x6e });
        gbc.writeMem(0x780f, { 0x71 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd21b, gbc.sp());
        EXPECT(0x5b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0107
        gbc.setState(0x117d, 0x6060, 0x8220, 0x476a, 0x39bf, 0x4c08, 0x1, 0x0);
        gbc.writeMem(0x117d, { 0x6e });
        gbc.writeMem(0x4c08, { 0x6f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6060, gbc.sp());
        EXPECT(0x117e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0108
        gbc.setState(0x9977, 0x53c6, 0x7900, 0xb262, 0x479b, 0x5812, 0x1, 0x1);
        gbc.writeMem(0x5812, { 0x4c });
        gbc.writeMem(0x9977, { 0x6e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x53c6, gbc.sp());
        EXPECT(0x9978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9977));
        // 6E 0109
        gbc.setState(0x6779, 0x58e6, 0xbb90, 0x777c, 0xc83a, 0xde1f, 0x0, 0x0);
        gbc.writeMem(0x6779, { 0x6e });
        gbc.writeMem(0xde1f, { 0x5 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x58e6, gbc.sp());
        EXPECT(0x677a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xde1f));
        // 6E 010A
        gbc.setState(0x4e29, 0x8fc3, 0xece0, 0xb084, 0xde9d, 0x7b8d, 0x1, 0x1);
        gbc.writeMem(0x4e29, { 0x6e });
        gbc.writeMem(0x7b8d, { 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8fc3, gbc.sp());
        EXPECT(0x4e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 010B
        gbc.setState(0x771e, 0x2a43, 0x8d70, 0x6e13, 0x18f2, 0x5dc3, 0x0, 0x1);
        gbc.writeMem(0x5dc3, { 0x63 });
        gbc.writeMem(0x771e, { 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2a43, gbc.sp());
        EXPECT(0x771f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 010C
        gbc.setState(0x22ba, 0x6a2b, 0x1d80, 0xabb2, 0x5496, 0x10f9, 0x0, 0x1);
        gbc.writeMem(0x10f9, { 0x79 });
        gbc.writeMem(0x22ba, { 0x6e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x6a2b, gbc.sp());
        EXPECT(0x22bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 010D
        gbc.setState(0x61bf, 0x5b9f, 0xfa90, 0xb0f, 0xf0d, 0xcd23, 0x1, 0x0);
        gbc.writeMem(0x61bf, { 0x6e });
        gbc.writeMem(0xcd23, { 0x17 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5b9f, gbc.sp());
        EXPECT(0x61c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xcd23));
        // 6E 010E
        gbc.setState(0x6f6c, 0xca19, 0xeed0, 0x3129, 0x93ba, 0x3534, 0x0, 0x1);
        gbc.writeMem(0x3534, { 0x75 });
        gbc.writeMem(0x6f6c, { 0x6e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xca19, gbc.sp());
        EXPECT(0x6f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 010F
        gbc.setState(0x7e6d, 0x4300, 0xb360, 0x9082, 0xaf45, 0x373, 0x0, 0x1);
        gbc.writeMem(0x373, { 0x7 });
        gbc.writeMem(0x7e6d, { 0x6e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4300, gbc.sp());
        EXPECT(0x7e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0110
        gbc.setState(0xde96, 0x8581, 0x52c0, 0x8063, 0x1cf3, 0xef39, 0x0, 0x1);
        gbc.writeMem(0xde96, { 0x6e });
        gbc.writeMem(0xef39, { 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8581, gbc.sp());
        EXPECT(0xde97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xde96));
        EXPECT(0x2c, gbc.readMem(0xef39));
        // 6E 0111
        gbc.setState(0xba55, 0xeabe, 0x7350, 0xc0d7, 0xf08b, 0xc6bd, 0x1, 0x1);
        gbc.writeMem(0xba55, { 0x6e });
        gbc.writeMem(0xc6bd, { 0xdf });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xeabe, gbc.sp());
        EXPECT(0xba56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xba55));
        EXPECT(0xdf, gbc.readMem(0xc6bd));
        // 6E 0112
        gbc.setState(0xdc7e, 0x27c2, 0xeac0, 0x1554, 0xa2f6, 0xcf85, 0x1, 0x1);
        gbc.writeMem(0xcf85, { 0x7b });
        gbc.writeMem(0xdc7e, { 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x27c2, gbc.sp());
        EXPECT(0xdc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xcf85));
        EXPECT(0x6e, gbc.readMem(0xdc7e));
        // 6E 0113
        gbc.setState(0x6bab, 0xcea6, 0x6d10, 0x520a, 0x56ea, 0xa4df, 0x0, 0x1);
        gbc.writeMem(0x6bab, { 0x6e });
        gbc.writeMem(0xa4df, { 0x4f });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xa4df));
        // 6E 0114
        gbc.setState(0x2773, 0x2e58, 0x5350, 0x9f1, 0xe6ef, 0x1b9b, 0x1, 0x1);
        gbc.writeMem(0x1b9b, { 0xc0 });
        gbc.writeMem(0x2773, { 0x6e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2e58, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0115
        gbc.setState(0xaf4b, 0x3ded, 0xc140, 0x7746, 0x4f5a, 0xf19e, 0x1, 0x1);
        gbc.writeMem(0xaf4b, { 0x6e });
        gbc.writeMem(0xf19e, { 0x31 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3ded, gbc.sp());
        EXPECT(0xaf4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaf4b));
        EXPECT(0x31, gbc.readMem(0xf19e));
        // 6E 0116
        gbc.setState(0x21c, 0x53b5, 0xf240, 0x5c18, 0x5c8a, 0xc104, 0x0, 0x0);
        gbc.writeMem(0x21c, { 0x6e });
        gbc.writeMem(0xc104, { 0x3e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x53b5, gbc.sp());
        EXPECT(0x21d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xc104));
        // 6E 0117
        gbc.setState(0xbbe2, 0x76c6, 0x4b60, 0xd336, 0x664b, 0x2c2f, 0x1, 0x0);
        gbc.writeMem(0x2c2f, { 0x75 });
        gbc.writeMem(0xbbe2, { 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x76c6, gbc.sp());
        EXPECT(0xbbe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbbe2));
        // 6E 0118
        gbc.setState(0xb39e, 0x6888, 0x6c40, 0xe6a0, 0xad39, 0xdc5c, 0x0, 0x0);
        gbc.writeMem(0xb39e, { 0x6e });
        gbc.writeMem(0xdc5c, { 0x46 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x6888, gbc.sp());
        EXPECT(0xb39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb39e));
        EXPECT(0x46, gbc.readMem(0xdc5c));
        // 6E 0119
        gbc.setState(0x1126, 0x92f4, 0x8750, 0x14db, 0x2673, 0x9567, 0x1, 0x0);
        gbc.writeMem(0x1126, { 0x6e });
        gbc.writeMem(0x9567, { 0x9b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x1127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9567));
        // 6E 011A
        gbc.setState(0x956c, 0xc39, 0xe780, 0x907c, 0xbba4, 0x8501, 0x1, 0x1);
        gbc.writeMem(0x8501, { 0xe6 });
        gbc.writeMem(0x956c, { 0x6e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc39, gbc.sp());
        EXPECT(0x956d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x8501));
        EXPECT(0x6e, gbc.readMem(0x956c));
        // 6E 011B
        gbc.setState(0x21d, 0xab2e, 0xf400, 0xfd0f, 0xb445, 0xb271, 0x0, 0x0);
        gbc.writeMem(0x21d, { 0x6e });
        gbc.writeMem(0xb271, { 0xcd });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xab2e, gbc.sp());
        EXPECT(0x21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb271));
        // 6E 011C
        gbc.setState(0xcdb3, 0x2462, 0xc650, 0xf840, 0xb1e0, 0x6571, 0x1, 0x1);
        gbc.writeMem(0x6571, { 0x96 });
        gbc.writeMem(0xcdb3, { 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2462, gbc.sp());
        EXPECT(0xcdb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcdb3));
        // 6E 011D
        gbc.setState(0xd537, 0xb196, 0xa520, 0x832f, 0x2a42, 0x276e, 0x0, 0x1);
        gbc.writeMem(0x276e, { 0x6b });
        gbc.writeMem(0xd537, { 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb196, gbc.sp());
        EXPECT(0xd538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd537));
        // 6E 011E
        gbc.setState(0xbfa5, 0x37d2, 0x3210, 0xda39, 0x861f, 0x240f, 0x1, 0x0);
        gbc.writeMem(0x240f, { 0x53 });
        gbc.writeMem(0xbfa5, { 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x37d2, gbc.sp());
        EXPECT(0xbfa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbfa5));
        // 6E 011F
        gbc.setState(0xc933, 0x7f66, 0xbbd0, 0x85e6, 0x2a59, 0x539a, 0x0, 0x0);
        gbc.writeMem(0x539a, { 0x6d });
        gbc.writeMem(0xc933, { 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7f66, gbc.sp());
        EXPECT(0xc934, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc933));
        // 6E 0120
        gbc.setState(0x4447, 0x7412, 0xc2c0, 0x2a94, 0x3214, 0x29f, 0x0, 0x0);
        gbc.writeMem(0x29f, { 0xf9 });
        gbc.writeMem(0x4447, { 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7412, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0121
        gbc.setState(0x1505, 0xafaa, 0x83b0, 0x57dd, 0xf719, 0xf164, 0x0, 0x1);
        gbc.writeMem(0x1505, { 0x6e });
        gbc.writeMem(0xf164, { 0xe });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xafaa, gbc.sp());
        EXPECT(0x1506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xf164));
        // 6E 0122
        gbc.setState(0x9ee0, 0xa977, 0x7030, 0xda7f, 0x4f8b, 0xf052, 0x1, 0x0);
        gbc.writeMem(0x9ee0, { 0x6e });
        gbc.writeMem(0xf052, { 0xf7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa977, gbc.sp());
        EXPECT(0x9ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9ee0));
        EXPECT(0xf7, gbc.readMem(0xf052));
        // 6E 0123
        gbc.setState(0x8da4, 0x1c39, 0x6f0, 0x6ba6, 0x5262, 0x196d, 0x1, 0x0);
        gbc.writeMem(0x196d, { 0xa3 });
        gbc.writeMem(0x8da4, { 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1c39, gbc.sp());
        EXPECT(0x8da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8da4));
        // 6E 0124
        gbc.setState(0x389a, 0xd49a, 0xcee0, 0xe81d, 0x87ef, 0x322b, 0x1, 0x0);
        gbc.writeMem(0x322b, { 0x32 });
        gbc.writeMem(0x389a, { 0x6e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd49a, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0125
        gbc.setState(0xb7f, 0x391e, 0x35f0, 0xa1db, 0xa007, 0x818b, 0x0, 0x0);
        gbc.writeMem(0xb7f, { 0x6e });
        gbc.writeMem(0x818b, { 0xbe });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x391e, gbc.sp());
        EXPECT(0xb80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x818b));
        // 6E 0126
        gbc.setState(0x5d1a, 0x3509, 0xb350, 0xbec0, 0x70f, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0x2a98, { 0xb4 });
        gbc.writeMem(0x5d1a, { 0x6e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0127
        gbc.setState(0x5782, 0x22e3, 0xe120, 0x34ac, 0xc8f2, 0x5e7b, 0x1, 0x1);
        gbc.writeMem(0x5782, { 0x6e });
        gbc.writeMem(0x5e7b, { 0x9d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x22e3, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0128
        gbc.setState(0x83d6, 0xaab9, 0x6770, 0xa360, 0xfac, 0x1979, 0x1, 0x0);
        gbc.writeMem(0x1979, { 0x3c });
        gbc.writeMem(0x83d6, { 0x6e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaab9, gbc.sp());
        EXPECT(0x83d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x83d6));
        // 6E 0129
        gbc.setState(0x4bae, 0xc0a0, 0x4840, 0x2040, 0xdfaa, 0xf403, 0x0, 0x0);
        gbc.writeMem(0x4bae, { 0x6e });
        gbc.writeMem(0xf403, { 0x83 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x4baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xf403));
        // 6E 012B
        gbc.setState(0xd98, 0x6cdc, 0x82e0, 0xe9dc, 0x778c, 0x2c80, 0x0, 0x0);
        gbc.writeMem(0xd98, { 0x6e });
        gbc.writeMem(0x2c80, { 0x6d });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6cdc, gbc.sp());
        EXPECT(0xd99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 012C
        gbc.setState(0x1425, 0xb532, 0x7fd0, 0xd47b, 0xe180, 0xa32, 0x0, 0x1);
        gbc.writeMem(0xa32, { 0xe2 });
        gbc.writeMem(0x1425, { 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x1426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 012D
        gbc.setState(0xaa4d, 0xc6be, 0x5e70, 0xe6ac, 0xcdc9, 0xdea4, 0x0, 0x0);
        gbc.writeMem(0xaa4d, { 0x6e });
        gbc.writeMem(0xdea4, { 0x69 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0xaa4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaa4d));
        EXPECT(0x69, gbc.readMem(0xdea4));
        // 6E 012E
        gbc.setState(0xad1e, 0x631, 0x98e0, 0x251c, 0xda39, 0x53ed, 0x0, 0x0);
        gbc.writeMem(0x53ed, { 0x5c });
        gbc.writeMem(0xad1e, { 0x6e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0xad1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xad1e));
        // 6E 012F
        gbc.setState(0xb90e, 0x663c, 0x9210, 0x5af0, 0x43d4, 0xdbc2, 0x0, 0x0);
        gbc.writeMem(0xb90e, { 0x6e });
        gbc.writeMem(0xdbc2, { 0x63 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x663c, gbc.sp());
        EXPECT(0xb90f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb90e));
        EXPECT(0x63, gbc.readMem(0xdbc2));
        // 6E 0130
        gbc.setState(0x6331, 0x196c, 0x8fe0, 0x5af2, 0x2a7d, 0xfbce, 0x1, 0x1);
        gbc.writeMem(0x6331, { 0x6e });
        gbc.writeMem(0xfbce, { 0x43 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0x6332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xfbce));
        // 6E 0131
        gbc.setState(0xb34b, 0xa058, 0x8f80, 0xbd67, 0x915a, 0x53c2, 0x0, 0x1);
        gbc.writeMem(0x53c2, { 0x9 });
        gbc.writeMem(0xb34b, { 0x6e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa058, gbc.sp());
        EXPECT(0xb34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb34b));
        // 6E 0132
        gbc.setState(0x287d, 0x8638, 0x35c0, 0xae3, 0x3cd9, 0xbfd6, 0x0, 0x0);
        gbc.writeMem(0x287d, { 0x6e });
        gbc.writeMem(0xbfd6, { 0xda });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8638, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xbfd6));
        // 6E 0133
        gbc.setState(0x8103, 0xc682, 0x9010, 0x75cc, 0x29fd, 0xfff8, 0x1, 0x1);
        gbc.writeMem(0x8103, { 0x6e });
        gbc.writeMem(0xfff8, { 0xf8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0x8104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8103));
        EXPECT(0xf8, gbc.readMem(0xfff8));
        // 6E 0134
        gbc.setState(0xba15, 0xb5d0, 0x960, 0x7c07, 0x725, 0x38bf, 0x1, 0x1);
        gbc.writeMem(0x38bf, { 0x4a });
        gbc.writeMem(0xba15, { 0x6e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb5d0, gbc.sp());
        EXPECT(0xba16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xba15));
        // 6E 0135
        gbc.setState(0x5990, 0xef07, 0xac20, 0x9126, 0xdbfd, 0x93bf, 0x1, 0x0);
        gbc.writeMem(0x5990, { 0x6e });
        gbc.writeMem(0x93bf, { 0x79 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x93bf));
        // 6E 0136
        gbc.setState(0x855b, 0x646e, 0x2de0, 0xaf0c, 0x660, 0xf1b1, 0x0, 0x0);
        gbc.writeMem(0x855b, { 0x6e });
        gbc.writeMem(0xf1b1, { 0xf2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x646e, gbc.sp());
        EXPECT(0x855c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x855b));
        EXPECT(0xf2, gbc.readMem(0xf1b1));
        // 6E 0137
        gbc.setState(0xd26b, 0x75c0, 0x7e10, 0xaaad, 0x2614, 0xefa2, 0x1, 0x0);
        gbc.writeMem(0xd26b, { 0x6e });
        gbc.writeMem(0xefa2, { 0xbe });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x75c0, gbc.sp());
        EXPECT(0xd26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd26b));
        EXPECT(0xbe, gbc.readMem(0xefa2));
        // 6E 0138
        gbc.setState(0xa7b, 0xe132, 0x1840, 0xbf1, 0x9a6c, 0xa82d, 0x1, 0x0);
        gbc.writeMem(0xa7b, { 0x6e });
        gbc.writeMem(0xa82d, { 0xda });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0xa7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa82d));
        // 6E 0139
        gbc.setState(0xa407, 0x1193, 0x4c80, 0xa65, 0x4279, 0xfc4d, 0x1, 0x1);
        gbc.writeMem(0xa407, { 0x6e });
        gbc.writeMem(0xfc4d, { 0xe4 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1193, gbc.sp());
        EXPECT(0xa408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa407));
        EXPECT(0xe4, gbc.readMem(0xfc4d));
        // 6E 013B
        gbc.setState(0x719f, 0x3813, 0x8f90, 0x65cd, 0x3dcb, 0x5c17, 0x0, 0x1);
        gbc.writeMem(0x5c17, { 0x2f });
        gbc.writeMem(0x719f, { 0x6e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3813, gbc.sp());
        EXPECT(0x71a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 013C
        gbc.setState(0x6f6a, 0x7ac6, 0x55a0, 0xcd9c, 0x9371, 0xd00f, 0x1, 0x0);
        gbc.writeMem(0x6f6a, { 0x6e });
        gbc.writeMem(0xd00f, { 0xf3 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7ac6, gbc.sp());
        EXPECT(0x6f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xd00f));
        // 6E 013D
        gbc.setState(0x735b, 0x8775, 0xd1b0, 0x23c2, 0xfedf, 0xb5c0, 0x1, 0x1);
        gbc.writeMem(0x735b, { 0x6e });
        gbc.writeMem(0xb5c0, { 0x94 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0x735c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xb5c0));
        // 6E 013E
        gbc.setState(0x4df4, 0x6896, 0x8dc0, 0x7cb8, 0x3333, 0x46aa, 0x0, 0x0);
        gbc.writeMem(0x46aa, { 0xa8 });
        gbc.writeMem(0x4df4, { 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6896, gbc.sp());
        EXPECT(0x4df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 013F
        gbc.setState(0x2893, 0xdc8f, 0x7f20, 0xd69a, 0xcbd9, 0xb68b, 0x1, 0x0);
        gbc.writeMem(0x2893, { 0x6e });
        gbc.writeMem(0xb68b, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdc8f, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb68b));
        // 6E 0140
        gbc.setState(0x1b19, 0xf2ec, 0xb960, 0xafe, 0x11b1, 0x78c6, 0x1, 0x1);
        gbc.writeMem(0x1b19, { 0x6e });
        gbc.writeMem(0x78c6, { 0xd1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf2ec, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0141
        gbc.setState(0xe31c, 0x422c, 0xe6c0, 0x6663, 0x2705, 0xe36f, 0x0, 0x1);
        gbc.writeMem(0xe31c, { 0x6e });
        gbc.writeMem(0xe36f, { 0x1b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x422c, gbc.sp());
        EXPECT(0xe31d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe31c));
        EXPECT(0x1b, gbc.readMem(0xe36f));
        // 6E 0142
        gbc.setState(0x14d6, 0x9380, 0x9c90, 0xe968, 0xbb35, 0xd203, 0x0, 0x1);
        gbc.writeMem(0x14d6, { 0x6e });
        gbc.writeMem(0xd203, { 0x6b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9380, gbc.sp());
        EXPECT(0x14d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xd203));
        // 6E 0144
        gbc.setState(0x9790, 0xc435, 0x9630, 0x70f3, 0x3126, 0xc1f, 0x0, 0x1);
        gbc.writeMem(0xc1f, { 0x7a });
        gbc.writeMem(0x9790, { 0x6e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc435, gbc.sp());
        EXPECT(0x9791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9790));
        // 6E 0145
        gbc.setState(0xef95, 0x6b17, 0x1ee0, 0xc277, 0xc29f, 0x414e, 0x0, 0x1);
        gbc.writeMem(0x414e, { 0x1c });
        gbc.writeMem(0xef95, { 0x6e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0xef96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xef95));
        // 6E 0146
        gbc.setState(0xb6be, 0xa3c2, 0xab20, 0x9cca, 0xd5d3, 0x4bb, 0x1, 0x0);
        gbc.writeMem(0x4bb, { 0xde });
        gbc.writeMem(0xb6be, { 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xa3c2, gbc.sp());
        EXPECT(0xb6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb6be));
        // 6E 0147
        gbc.setState(0x7db5, 0x3147, 0xac20, 0x1654, 0xc4b5, 0x4680, 0x0, 0x0);
        gbc.writeMem(0x4680, { 0x7a });
        gbc.writeMem(0x7db5, { 0x6e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3147, gbc.sp());
        EXPECT(0x7db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0148
        gbc.setState(0xb6f5, 0xa1c1, 0x870, 0x734a, 0xb58e, 0x8c9e, 0x1, 0x1);
        gbc.writeMem(0x8c9e, { 0x93 });
        gbc.writeMem(0xb6f5, { 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa1c1, gbc.sp());
        EXPECT(0xb6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8c9e));
        EXPECT(0x6e, gbc.readMem(0xb6f5));
        // 6E 0149
        gbc.setState(0x21b0, 0x4a65, 0x35e0, 0x432a, 0x4dfb, 0xee04, 0x1, 0x0);
        gbc.writeMem(0x21b0, { 0x6e });
        gbc.writeMem(0xee04, { 0xd2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4a65, gbc.sp());
        EXPECT(0x21b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xee04));
        // 6E 014A
        gbc.setState(0xb73d, 0x3e1f, 0xcd60, 0x34ec, 0xf8b3, 0xebf6, 0x0, 0x0);
        gbc.writeMem(0xb73d, { 0x6e });
        gbc.writeMem(0xebf6, { 0x13 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3e1f, gbc.sp());
        EXPECT(0xb73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb73d));
        EXPECT(0x13, gbc.readMem(0xebf6));
        // 6E 014B
        gbc.setState(0xe85d, 0xbdca, 0xfce0, 0xbd99, 0x5478, 0xb46f, 0x0, 0x0);
        gbc.writeMem(0xb46f, { 0x12 });
        gbc.writeMem(0xe85d, { 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbdca, gbc.sp());
        EXPECT(0xe85e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xb46f));
        EXPECT(0x6e, gbc.readMem(0xe85d));
        // 6E 014C
        gbc.setState(0x6df2, 0x5330, 0x410, 0x2727, 0x11bc, 0x4c88, 0x0, 0x0);
        gbc.writeMem(0x4c88, { 0x33 });
        gbc.writeMem(0x6df2, { 0x6e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5330, gbc.sp());
        EXPECT(0x6df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 014D
        gbc.setState(0xbbe3, 0x8f89, 0xab20, 0xdf40, 0x6cf3, 0x74a9, 0x1, 0x1);
        gbc.writeMem(0x74a9, { 0xf9 });
        gbc.writeMem(0xbbe3, { 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8f89, gbc.sp());
        EXPECT(0xbbe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbbe3));
        // 6E 014E
        gbc.setState(0x723, 0x989b, 0x3bc0, 0xafbe, 0xc032, 0xece1, 0x0, 0x1);
        gbc.writeMem(0x723, { 0x6e });
        gbc.writeMem(0xece1, { 0xbc });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x989b, gbc.sp());
        EXPECT(0x724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xece1));
        // 6E 014F
        gbc.setState(0x1332, 0x9989, 0x5650, 0xfcb7, 0xd583, 0xb218, 0x1, 0x1);
        gbc.writeMem(0x1332, { 0x6e });
        gbc.writeMem(0xb218, { 0xd0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x1333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xb218));
        // 6E 0150
        gbc.setState(0x27a4, 0xd09e, 0x1f90, 0x5f34, 0xbbbb, 0x3230, 0x0, 0x0);
        gbc.writeMem(0x27a4, { 0x6e });
        gbc.writeMem(0x3230, { 0x4e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd09e, gbc.sp());
        EXPECT(0x27a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0151
        gbc.setState(0x25be, 0xfee2, 0xab30, 0xbe61, 0x6d86, 0xed01, 0x0, 0x0);
        gbc.writeMem(0x25be, { 0x6e });
        gbc.writeMem(0xed01, { 0x84 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfee2, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xed01));
        // 6E 0152
        gbc.setState(0x628c, 0xab2d, 0x5ba0, 0x5e73, 0xc152, 0xc950, 0x1, 0x0);
        gbc.writeMem(0x628c, { 0x6e });
        gbc.writeMem(0xc950, { 0xad });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xab2d, gbc.sp());
        EXPECT(0x628d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xc950));
        // 6E 0154
        gbc.setState(0x565f, 0xb5c8, 0x6230, 0x8645, 0x3243, 0x69b3, 0x0, 0x0);
        gbc.writeMem(0x565f, { 0x6e });
        gbc.writeMem(0x69b3, { 0xaf });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0155
        gbc.setState(0x2fb0, 0xd706, 0x7150, 0x8429, 0x101e, 0x6ff5, 0x0, 0x0);
        gbc.writeMem(0x2fb0, { 0x6e });
        gbc.writeMem(0x6ff5, { 0xeb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0x2fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0156
        gbc.setState(0x1f4f, 0x5d31, 0x530, 0x137d, 0xc6da, 0x7c72, 0x0, 0x1);
        gbc.writeMem(0x1f4f, { 0x6e });
        gbc.writeMem(0x7c72, { 0xcf });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x5d31, gbc.sp());
        EXPECT(0x1f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0157
        gbc.setState(0x4d3e, 0x6965, 0x5140, 0xf021, 0xdeed, 0xacfb, 0x1, 0x1);
        gbc.writeMem(0x4d3e, { 0x6e });
        gbc.writeMem(0xacfb, { 0xc7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0x4d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xacfb));
        // 6E 0159
        gbc.setState(0x4508, 0xb687, 0xad90, 0x71f3, 0x9824, 0x5738, 0x1, 0x0);
        gbc.writeMem(0x4508, { 0x6e });
        gbc.writeMem(0x5738, { 0xdc });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0x4509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 015A
        gbc.setState(0x8ba, 0x6d8b, 0xb330, 0xc93, 0xdfa8, 0xe8a9, 0x1, 0x0);
        gbc.writeMem(0x8ba, { 0x6e });
        gbc.writeMem(0xe8a9, { 0x11 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6d8b, gbc.sp());
        EXPECT(0x8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xe8a9));
        // 6E 015C
        gbc.setState(0x1d96, 0x68ad, 0xd9a0, 0x4522, 0x3eaa, 0x7de1, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0x6e });
        gbc.writeMem(0x7de1, { 0x67 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x68ad, gbc.sp());
        EXPECT(0x1d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 015D
        gbc.setState(0x983, 0x3104, 0xa620, 0xd0ab, 0x2672, 0x1308, 0x0, 0x0);
        gbc.writeMem(0x983, { 0x6e });
        gbc.writeMem(0x1308, { 0xe0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3104, gbc.sp());
        EXPECT(0x984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 015E
        gbc.setState(0xaee0, 0xc8f8, 0x2c10, 0x6f6c, 0xdfad, 0x4db7, 0x1, 0x0);
        gbc.writeMem(0x4db7, { 0xd1 });
        gbc.writeMem(0xaee0, { 0x6e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc8f8, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaee0));
        // 6E 015F
        gbc.setState(0xa352, 0x1d4d, 0xbf70, 0xddf7, 0xb0f8, 0x5bd7, 0x0, 0x1);
        gbc.writeMem(0x5bd7, { 0x4a });
        gbc.writeMem(0xa352, { 0x6e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1d4d, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa352));
        // 6E 0160
        gbc.setState(0xed03, 0xb126, 0x3a0, 0x4bdc, 0xdd4c, 0x7d5d, 0x1, 0x0);
        gbc.writeMem(0x7d5d, { 0xb3 });
        gbc.writeMem(0xed03, { 0x6e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb126, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xed03));
        // 6E 0161
        gbc.setState(0xb19b, 0x20f8, 0xa9a0, 0x3a38, 0x3983, 0x1bf2, 0x0, 0x0);
        gbc.writeMem(0x1bf2, { 0xdd });
        gbc.writeMem(0xb19b, { 0x6e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x20f8, gbc.sp());
        EXPECT(0xb19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb19b));
        // 6E 0163
        gbc.setState(0xc05e, 0x4f3d, 0x9fc0, 0x241, 0x438f, 0x3c66, 0x0, 0x1);
        gbc.writeMem(0x3c66, { 0xd });
        gbc.writeMem(0xc05e, { 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4f3d, gbc.sp());
        EXPECT(0xc05f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc05e));
        // 6E 0164
        gbc.setState(0xc94f, 0x3276, 0x4d50, 0x94b0, 0x5735, 0xb5db, 0x1, 0x0);
        gbc.writeMem(0xb5db, { 0x8a });
        gbc.writeMem(0xc94f, { 0x6e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3276, gbc.sp());
        EXPECT(0xc950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xb5db));
        EXPECT(0x6e, gbc.readMem(0xc94f));
        // 6E 0165
        gbc.setState(0xae08, 0x121e, 0x44a0, 0x67c5, 0xa88e, 0xab72, 0x1, 0x1);
        gbc.writeMem(0xab72, { 0x36 });
        gbc.writeMem(0xae08, { 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x121e, gbc.sp());
        EXPECT(0xae09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xab72));
        EXPECT(0x6e, gbc.readMem(0xae08));
        // 6E 0166
        gbc.setState(0x2481, 0xa146, 0xf5e0, 0x41db, 0x1e86, 0xe529, 0x0, 0x0);
        gbc.writeMem(0x2481, { 0x6e });
        gbc.writeMem(0xe529, { 0x38 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa146, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe529));
        // 6E 0167
        gbc.setState(0x21d0, 0xe588, 0x4950, 0x88e3, 0x6df8, 0x2bb2, 0x0, 0x1);
        gbc.writeMem(0x21d0, { 0x6e });
        gbc.writeMem(0x2bb2, { 0x19 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x21d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0168
        gbc.setState(0xeca8, 0x3a86, 0x4590, 0x216b, 0xaa9c, 0x272b, 0x0, 0x1);
        gbc.writeMem(0x272b, { 0x11 });
        gbc.writeMem(0xeca8, { 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xeca8));
        // 6E 0169
        gbc.setState(0xcaf5, 0x6852, 0x4710, 0xf5f9, 0x6c23, 0x9dda, 0x0, 0x0);
        gbc.writeMem(0x9dda, { 0x1c });
        gbc.writeMem(0xcaf5, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0xcaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9dda));
        EXPECT(0x6e, gbc.readMem(0xcaf5));
        // 6E 016A
        gbc.setState(0xa79b, 0x8ccc, 0x3fe0, 0xb515, 0xf766, 0x92cf, 0x1, 0x0);
        gbc.writeMem(0x92cf, { 0x8b });
        gbc.writeMem(0xa79b, { 0x6e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8ccc, gbc.sp());
        EXPECT(0xa79c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x92cf));
        EXPECT(0x6e, gbc.readMem(0xa79b));
        // 6E 016B
        gbc.setState(0xd42a, 0x8503, 0xe900, 0x7540, 0x3943, 0x65a8, 0x0, 0x0);
        gbc.writeMem(0x65a8, { 0x35 });
        gbc.writeMem(0xd42a, { 0x6e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8503, gbc.sp());
        EXPECT(0xd42b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd42a));
        // 6E 016D
        gbc.setState(0xba0c, 0x8f35, 0x4f00, 0xf34a, 0xbf98, 0x28fb, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0x6b });
        gbc.writeMem(0xba0c, { 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0xba0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xba0c));
        // 6E 016E
        gbc.setState(0x15fe, 0x4e94, 0x5610, 0x3478, 0x801c, 0x7476, 0x1, 0x1);
        gbc.writeMem(0x15fe, { 0x6e });
        gbc.writeMem(0x7476, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0x15ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 016F
        gbc.setState(0x722e, 0x6e6f, 0xa8c0, 0x8a15, 0x8430, 0x3151, 0x1, 0x0);
        gbc.writeMem(0x3151, { 0x8b });
        gbc.writeMem(0x722e, { 0x6e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6e6f, gbc.sp());
        EXPECT(0x722f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0170
        gbc.setState(0x4e3e, 0xe997, 0xd800, 0xfc2, 0xf454, 0xc9f, 0x0, 0x1);
        gbc.writeMem(0xc9f, { 0x8f });
        gbc.writeMem(0x4e3e, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe997, gbc.sp());
        EXPECT(0x4e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0171
        gbc.setState(0xd3a, 0x149d, 0x5460, 0xd9f6, 0xb4f0, 0x7e18, 0x0, 0x0);
        gbc.writeMem(0xd3a, { 0x6e });
        gbc.writeMem(0x7e18, { 0x23 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x149d, gbc.sp());
        EXPECT(0xd3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0172
        gbc.setState(0x60d1, 0x98e3, 0x38f0, 0x620, 0x5a5e, 0x80c1, 0x0, 0x0);
        gbc.writeMem(0x60d1, { 0x6e });
        gbc.writeMem(0x80c1, { 0x8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x98e3, gbc.sp());
        EXPECT(0x60d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x80c1));
        // 6E 0174
        gbc.setState(0xaceb, 0xb93c, 0xf0, 0x5ecd, 0x59cf, 0xe0af, 0x0, 0x0);
        gbc.writeMem(0xaceb, { 0x6e });
        gbc.writeMem(0xe0af, { 0x78 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb93c, gbc.sp());
        EXPECT(0xacec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaceb));
        EXPECT(0x78, gbc.readMem(0xe0af));
        // 6E 0175
        gbc.setState(0x5760, 0x351, 0x4f60, 0x8370, 0x45c4, 0x7b49, 0x0, 0x0);
        gbc.writeMem(0x5760, { 0x6e });
        gbc.writeMem(0x7b49, { 0xec });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x351, gbc.sp());
        EXPECT(0x5761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0176
        gbc.setState(0xdba6, 0xaa99, 0xaa20, 0x5859, 0x891b, 0xb251, 0x0, 0x1);
        gbc.writeMem(0xb251, { 0x6d });
        gbc.writeMem(0xdba6, { 0x6e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaa99, gbc.sp());
        EXPECT(0xdba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb251));
        EXPECT(0x6e, gbc.readMem(0xdba6));
        // 6E 0177
        gbc.setState(0x588c, 0x5f54, 0xe840, 0x2c17, 0xf5bb, 0xcc0e, 0x1, 0x0);
        gbc.writeMem(0x588c, { 0x6e });
        gbc.writeMem(0xcc0e, { 0xb6 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x5f54, gbc.sp());
        EXPECT(0x588d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcc0e));
        // 6E 0178
        gbc.setState(0x3b4d, 0xb484, 0xb990, 0x2149, 0xf401, 0xce9, 0x0, 0x1);
        gbc.writeMem(0xce9, { 0xf });
        gbc.writeMem(0x3b4d, { 0x6e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb484, gbc.sp());
        EXPECT(0x3b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0179
        gbc.setState(0xcbcb, 0x833c, 0x8960, 0x214b, 0x7eb3, 0xd649, 0x1, 0x0);
        gbc.writeMem(0xcbcb, { 0x6e });
        gbc.writeMem(0xd649, { 0x6b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x833c, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcbcb));
        EXPECT(0x6b, gbc.readMem(0xd649));
        // 6E 017A
        gbc.setState(0x3e75, 0xe2c7, 0x68e0, 0x1830, 0x943e, 0x1d51, 0x1, 0x0);
        gbc.writeMem(0x1d51, { 0x78 });
        gbc.writeMem(0x3e75, { 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe2c7, gbc.sp());
        EXPECT(0x3e76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 017B
        gbc.setState(0x2a4a, 0x5382, 0x45b0, 0xd2c8, 0x765b, 0x62cd, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0x6e });
        gbc.writeMem(0x62cd, { 0x2d });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5382, gbc.sp());
        EXPECT(0x2a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 017C
        gbc.setState(0xb8f, 0xb8d7, 0xa400, 0x7854, 0x54b7, 0x4264, 0x0, 0x1);
        gbc.writeMem(0xb8f, { 0x6e });
        gbc.writeMem(0x4264, { 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb8d7, gbc.sp());
        EXPECT(0xb90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 017D
        gbc.setState(0x662a, 0x8354, 0x83f0, 0xe175, 0x4352, 0xc631, 0x1, 0x0);
        gbc.writeMem(0x662a, { 0x6e });
        gbc.writeMem(0xc631, { 0x64 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8354, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xc631));
        // 6E 017E
        gbc.setState(0x60c6, 0x4250, 0x3650, 0x6f6e, 0xa7c4, 0x88ae, 0x0, 0x1);
        gbc.writeMem(0x60c6, { 0x6e });
        gbc.writeMem(0x88ae, { 0xb1 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4250, gbc.sp());
        EXPECT(0x60c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x88ae));
        // 6E 017F
        gbc.setState(0x5dca, 0xd7a1, 0x16f0, 0xd9ad, 0xe68e, 0xd27b, 0x1, 0x0);
        gbc.writeMem(0x5dca, { 0x6e });
        gbc.writeMem(0xd27b, { 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd7a1, gbc.sp());
        EXPECT(0x5dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd27b));
        // 6E 0180
        gbc.setState(0x444b, 0xfca, 0x99f0, 0x1498, 0xf4c7, 0xfb8a, 0x1, 0x1);
        gbc.writeMem(0x444b, { 0x6e });
        gbc.writeMem(0xfb8a, { 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0x444c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xfb8a));
        // 6E 0181
        gbc.setState(0x8f9d, 0x2182, 0x3e90, 0x1bf5, 0xd50a, 0x95ca, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0x6e });
        gbc.writeMem(0x95ca, { 0xed });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2182, gbc.sp());
        EXPECT(0x8f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f9d));
        EXPECT(0xed, gbc.readMem(0x95ca));
        // 6E 0182
        gbc.setState(0x8f3, 0x68ec, 0xe330, 0xd61d, 0x85a1, 0x4975, 0x0, 0x0);
        gbc.writeMem(0x8f3, { 0x6e });
        gbc.writeMem(0x4975, { 0x1c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x68ec, gbc.sp());
        EXPECT(0x8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0183
        gbc.setState(0x1305, 0xe067, 0xde90, 0x2d7f, 0x77c5, 0xe268, 0x0, 0x1);
        gbc.writeMem(0x1305, { 0x6e });
        gbc.writeMem(0xe268, { 0x17 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe067, gbc.sp());
        EXPECT(0x1306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe268));
        // 6E 0184
        gbc.setState(0xaa3, 0x3474, 0x8700, 0x795b, 0xa066, 0xe2d5, 0x0, 0x0);
        gbc.writeMem(0xaa3, { 0x6e });
        gbc.writeMem(0xe2d5, { 0x95 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3474, gbc.sp());
        EXPECT(0xaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe2d5));
        // 6E 0185
        gbc.setState(0xd59b, 0x7c2b, 0x3550, 0x9d9a, 0xffa2, 0x3d0c, 0x0, 0x0);
        gbc.writeMem(0x3d0c, { 0x5a });
        gbc.writeMem(0xd59b, { 0x6e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7c2b, gbc.sp());
        EXPECT(0xd59c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd59b));
        // 6E 0186
        gbc.setState(0xb814, 0xf38a, 0x8a00, 0x80e4, 0x9ea7, 0x3988, 0x1, 0x1);
        gbc.writeMem(0x3988, { 0xf4 });
        gbc.writeMem(0xb814, { 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf38a, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb814));
        // 6E 0187
        gbc.setState(0xdafd, 0xa26d, 0xfe00, 0xd76, 0xcb7b, 0xef74, 0x0, 0x0);
        gbc.writeMem(0xdafd, { 0x6e });
        gbc.writeMem(0xef74, { 0x4c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa26d, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdafd));
        EXPECT(0x4c, gbc.readMem(0xef74));
        // 6E 0188
        gbc.setState(0x630f, 0x9ca5, 0x47b0, 0x6239, 0x75fd, 0x46bd, 0x0, 0x0);
        gbc.writeMem(0x46bd, { 0xb });
        gbc.writeMem(0x630f, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0189
        gbc.setState(0xaa25, 0x9478, 0x700, 0x5d69, 0xc604, 0x7a35, 0x1, 0x0);
        gbc.writeMem(0x7a35, { 0xde });
        gbc.writeMem(0xaa25, { 0x6e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9478, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaa25));
        // 6E 018A
        gbc.setState(0x2765, 0x2ad6, 0x4330, 0x9b40, 0xea68, 0x62df, 0x0, 0x1);
        gbc.writeMem(0x2765, { 0x6e });
        gbc.writeMem(0x62df, { 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2ad6, gbc.sp());
        EXPECT(0x2766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 018B
        gbc.setState(0x5595, 0xc151, 0x6a00, 0x3862, 0x75b2, 0x159e, 0x1, 0x0);
        gbc.writeMem(0x159e, { 0x80 });
        gbc.writeMem(0x5595, { 0x6e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc151, gbc.sp());
        EXPECT(0x5596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 018C
        gbc.setState(0x5dd7, 0x4876, 0xa710, 0x7c69, 0x76a, 0xd54b, 0x0, 0x0);
        gbc.writeMem(0x5dd7, { 0x6e });
        gbc.writeMem(0xd54b, { 0xb7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4876, gbc.sp());
        EXPECT(0x5dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd54b));
        // 6E 018D
        gbc.setState(0x2e95, 0x6da9, 0x4710, 0x79e4, 0x6ee8, 0xa783, 0x1, 0x0);
        gbc.writeMem(0x2e95, { 0x6e });
        gbc.writeMem(0xa783, { 0xd6 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6da9, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xa783));
        // 6E 018E
        gbc.setState(0x3604, 0x8719, 0x27e0, 0x92e0, 0xc025, 0xe5d9, 0x1, 0x0);
        gbc.writeMem(0x3604, { 0x6e });
        gbc.writeMem(0xe5d9, { 0xcc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8719, gbc.sp());
        EXPECT(0x3605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xe5d9));
        // 6E 018F
        gbc.setState(0x84c7, 0xe356, 0x4390, 0x52e1, 0x728, 0x2976, 0x1, 0x0);
        gbc.writeMem(0x2976, { 0xe2 });
        gbc.writeMem(0x84c7, { 0x6e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe356, gbc.sp());
        EXPECT(0x84c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x84c7));
        // 6E 0190
        gbc.setState(0x9c69, 0xc3a1, 0x2030, 0x8aba, 0xd66c, 0xc40e, 0x1, 0x0);
        gbc.writeMem(0x9c69, { 0x6e });
        gbc.writeMem(0xc40e, { 0x94 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc3a1, gbc.sp());
        EXPECT(0x9c6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9c69));
        EXPECT(0x94, gbc.readMem(0xc40e));
        // 6E 0191
        gbc.setState(0xcbe5, 0xe33c, 0x9850, 0xc334, 0x9f79, 0x677f, 0x1, 0x0);
        gbc.writeMem(0x677f, { 0xbd });
        gbc.writeMem(0xcbe5, { 0x6e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xe33c, gbc.sp());
        EXPECT(0xcbe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcbe5));
        // 6E 0192
        gbc.setState(0xa54a, 0xa740, 0x2690, 0x8dfa, 0x9fe1, 0x5446, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0x57 });
        gbc.writeMem(0xa54a, { 0x6e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa740, gbc.sp());
        EXPECT(0xa54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa54a));
        // 6E 0193
        gbc.setState(0x36c4, 0x60f7, 0x6310, 0x2f2, 0x1d1d, 0x2740, 0x1, 0x1);
        gbc.writeMem(0x2740, { 0x63 });
        gbc.writeMem(0x36c4, { 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x60f7, gbc.sp());
        EXPECT(0x36c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0194
        gbc.setState(0x108e, 0xcd3e, 0x42d0, 0xffdd, 0x1171, 0xf38e, 0x1, 0x0);
        gbc.writeMem(0x108e, { 0x6e });
        gbc.writeMem(0xf38e, { 0xdc });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcd3e, gbc.sp());
        EXPECT(0x108f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf38e));
        // 6E 0195
        gbc.setState(0x7e4c, 0x4606, 0xa350, 0x5dda, 0x50b7, 0x43bb, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0xa5 });
        gbc.writeMem(0x7e4c, { 0x6e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4606, gbc.sp());
        EXPECT(0x7e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0196
        gbc.setState(0xda90, 0x6d54, 0xa930, 0x56d6, 0x5989, 0x44e7, 0x0, 0x1);
        gbc.writeMem(0x44e7, { 0x4a });
        gbc.writeMem(0xda90, { 0x6e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d54, gbc.sp());
        EXPECT(0xda91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda90));
        // 6E 0197
        gbc.setState(0x55f5, 0x7de2, 0x1fa0, 0xbfdc, 0xc1c3, 0x50f0, 0x1, 0x1);
        gbc.writeMem(0x50f0, { 0xcf });
        gbc.writeMem(0x55f5, { 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0x55f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0198
        gbc.setState(0x5db6, 0x4355, 0x6fc0, 0xed46, 0x239f, 0x2b69, 0x1, 0x1);
        gbc.writeMem(0x2b69, { 0xe5 });
        gbc.writeMem(0x5db6, { 0x6e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4355, gbc.sp());
        EXPECT(0x5db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0199
        gbc.setState(0x9604, 0x463a, 0xf050, 0x58d0, 0xbf5f, 0x3ab2, 0x0, 0x0);
        gbc.writeMem(0x3ab2, { 0xeb });
        gbc.writeMem(0x9604, { 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x463a, gbc.sp());
        EXPECT(0x9605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9604));
        // 6E 019A
        gbc.setState(0x753d, 0xbd90, 0x2030, 0xcab5, 0x5bc8, 0x893, 0x1, 0x1);
        gbc.writeMem(0x893, { 0xa6 });
        gbc.writeMem(0x753d, { 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xbd90, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 019B
        gbc.setState(0x15dd, 0xd41c, 0xbb60, 0x198b, 0x21f0, 0xc588, 0x0, 0x0);
        gbc.writeMem(0x15dd, { 0x6e });
        gbc.writeMem(0xc588, { 0xe6 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd41c, gbc.sp());
        EXPECT(0x15de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xc588));
        // 6E 019C
        gbc.setState(0xa90f, 0xbf18, 0xfe00, 0xdee4, 0xc761, 0xf907, 0x0, 0x0);
        gbc.writeMem(0xa90f, { 0x6e });
        gbc.writeMem(0xf907, { 0x6d });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xbf18, gbc.sp());
        EXPECT(0xa910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa90f));
        EXPECT(0x6d, gbc.readMem(0xf907));
        // 6E 019D
        gbc.setState(0xcec3, 0xd947, 0x5260, 0x2016, 0xd4e0, 0x6086, 0x0, 0x0);
        gbc.writeMem(0x6086, { 0x8d });
        gbc.writeMem(0xcec3, { 0x6e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd947, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcec3));
        // 6E 019E
        gbc.setState(0xda36, 0x13c, 0xa90, 0x5766, 0x2dd5, 0x22d4, 0x1, 0x1);
        gbc.writeMem(0x22d4, { 0xaa });
        gbc.writeMem(0xda36, { 0x6e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda36));
        // 6E 019F
        gbc.setState(0x4ed9, 0xcc4e, 0x2e00, 0x90da, 0x1730, 0xc9d6, 0x1, 0x0);
        gbc.writeMem(0x4ed9, { 0x6e });
        gbc.writeMem(0xc9d6, { 0xa });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcc4e, gbc.sp());
        EXPECT(0x4eda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xc9d6));
        // 6E 01A0
        gbc.setState(0xcbbe, 0xf8e1, 0xfc30, 0x7e7, 0xa611, 0xa549, 0x1, 0x1);
        gbc.writeMem(0xa549, { 0x69 });
        gbc.writeMem(0xcbbe, { 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf8e1, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xa549));
        EXPECT(0x6e, gbc.readMem(0xcbbe));
        // 6E 01A1
        gbc.setState(0xc72d, 0x2ec6, 0x1f10, 0xad88, 0xa141, 0x7d56, 0x0, 0x1);
        gbc.writeMem(0x7d56, { 0x79 });
        gbc.writeMem(0xc72d, { 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0xc72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc72d));
        // 6E 01A2
        gbc.setState(0xa896, 0x306e, 0x9d0, 0x64b9, 0xc34c, 0xe830, 0x0, 0x0);
        gbc.writeMem(0xa896, { 0x6e });
        gbc.writeMem(0xe830, { 0x7d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0xa897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa896));
        EXPECT(0x7d, gbc.readMem(0xe830));
        // 6E 01A3
        gbc.setState(0xda7f, 0x8787, 0x1aa0, 0x2ab2, 0xe029, 0x806b, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0xba });
        gbc.writeMem(0xda7f, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8787, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x806b));
        EXPECT(0x6e, gbc.readMem(0xda7f));
        // 6E 01A4
        gbc.setState(0xd59e, 0x59ab, 0xd920, 0x943b, 0x2672, 0x353b, 0x0, 0x1);
        gbc.writeMem(0x353b, { 0xb0 });
        gbc.writeMem(0xd59e, { 0x6e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x59ab, gbc.sp());
        EXPECT(0xd59f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd59e));
        // 6E 01A5
        gbc.setState(0x5011, 0x9c5, 0xe730, 0x4347, 0x978a, 0x3e9b, 0x0, 0x0);
        gbc.writeMem(0x3e9b, { 0xc9 });
        gbc.writeMem(0x5011, { 0x6e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x5012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01A6
        gbc.setState(0xea8, 0x2f5e, 0x9310, 0x3061, 0xfacc, 0x7e9e, 0x0, 0x1);
        gbc.writeMem(0xea8, { 0x6e });
        gbc.writeMem(0x7e9e, { 0xdb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2f5e, gbc.sp());
        EXPECT(0xea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01A7
        gbc.setState(0xea24, 0x86e2, 0x150, 0x833a, 0xc821, 0x86d2, 0x0, 0x1);
        gbc.writeMem(0x86d2, { 0xae });
        gbc.writeMem(0xea24, { 0x6e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x86e2, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x86d2));
        EXPECT(0x6e, gbc.readMem(0xea24));
        // 6E 01A8
        gbc.setState(0x78f8, 0xa74a, 0xd680, 0x6d92, 0x4e63, 0x354d, 0x1, 0x1);
        gbc.writeMem(0x354d, { 0x5b });
        gbc.writeMem(0x78f8, { 0x6e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa74a, gbc.sp());
        EXPECT(0x78f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01A9
        gbc.setState(0xacaf, 0xf9b8, 0x4ff0, 0x6e7a, 0xe68e, 0x49da, 0x0, 0x0);
        gbc.writeMem(0x49da, { 0x46 });
        gbc.writeMem(0xacaf, { 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0xacb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xacaf));
        // 6E 01AA
        gbc.setState(0x5136, 0x6565, 0x9b40, 0x7701, 0x8107, 0xbe7b, 0x1, 0x1);
        gbc.writeMem(0x5136, { 0x6e });
        gbc.writeMem(0xbe7b, { 0x85 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6565, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xbe7b));
        // 6E 01AC
        gbc.setState(0x8188, 0x902a, 0x4160, 0x49ef, 0xf9da, 0x838c, 0x1, 0x1);
        gbc.writeMem(0x8188, { 0x6e });
        gbc.writeMem(0x838c, { 0x79 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x902a, gbc.sp());
        EXPECT(0x8189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8188));
        EXPECT(0x79, gbc.readMem(0x838c));
        // 6E 01AD
        gbc.setState(0x360c, 0xeee8, 0xd560, 0x57ee, 0xec40, 0xe6ef, 0x0, 0x0);
        gbc.writeMem(0x360c, { 0x6e });
        gbc.writeMem(0xe6ef, { 0xec });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeee8, gbc.sp());
        EXPECT(0x360d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xe6ef));
        // 6E 01AE
        gbc.setState(0x80c1, 0xe4bd, 0x2ab0, 0x98bb, 0xcda4, 0x893b, 0x1, 0x1);
        gbc.writeMem(0x80c1, { 0x6e });
        gbc.writeMem(0x893b, { 0xef });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe4bd, gbc.sp());
        EXPECT(0x80c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x80c1));
        EXPECT(0xef, gbc.readMem(0x893b));
        // 6E 01AF
        gbc.setState(0x76d4, 0x7f4a, 0x7af0, 0xb6d0, 0x77a8, 0x316, 0x1, 0x1);
        gbc.writeMem(0x316, { 0x2f });
        gbc.writeMem(0x76d4, { 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7f4a, gbc.sp());
        EXPECT(0x76d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01B0
        gbc.setState(0x5cc7, 0x4132, 0x5470, 0x90df, 0xf57a, 0x4538, 0x0, 0x1);
        gbc.writeMem(0x4538, { 0x8b });
        gbc.writeMem(0x5cc7, { 0x6e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x4132, gbc.sp());
        EXPECT(0x5cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01B1
        gbc.setState(0xc46a, 0xf3a1, 0x4e10, 0x27ea, 0x5728, 0xbe03, 0x0, 0x1);
        gbc.writeMem(0xbe03, { 0x4d });
        gbc.writeMem(0xc46a, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf3a1, gbc.sp());
        EXPECT(0xc46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xbe03));
        EXPECT(0x6e, gbc.readMem(0xc46a));
        // 6E 01B2
        gbc.setState(0xdae1, 0x7ff8, 0x8890, 0x4ba7, 0xa157, 0xdb53, 0x0, 0x0);
        gbc.writeMem(0xdae1, { 0x6e });
        gbc.writeMem(0xdb53, { 0xdd });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7ff8, gbc.sp());
        EXPECT(0xdae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdae1));
        EXPECT(0xdd, gbc.readMem(0xdb53));
        // 6E 01B3
        gbc.setState(0x2c8b, 0xc2fc, 0x6cf0, 0x601c, 0x2e50, 0xd40, 0x1, 0x1);
        gbc.writeMem(0xd40, { 0xfa });
        gbc.writeMem(0x2c8b, { 0x6e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc2fc, gbc.sp());
        EXPECT(0x2c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01B4
        gbc.setState(0xbacf, 0x2cd3, 0xe970, 0x5a8e, 0xc0ce, 0x82cc, 0x0, 0x1);
        gbc.writeMem(0x82cc, { 0x77 });
        gbc.writeMem(0xbacf, { 0x6e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x2cd3, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x82cc));
        EXPECT(0x6e, gbc.readMem(0xbacf));
        // 6E 01B5
        gbc.setState(0x839c, 0xe925, 0x2a10, 0x5cc4, 0x3356, 0xa6ef, 0x0, 0x0);
        gbc.writeMem(0x839c, { 0x6e });
        gbc.writeMem(0xa6ef, { 0x76 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe925, gbc.sp());
        EXPECT(0x839d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x839c));
        EXPECT(0x76, gbc.readMem(0xa6ef));
        // 6E 01B6
        gbc.setState(0xb1ea, 0x2a39, 0xea60, 0xd6ce, 0x3d98, 0x9bb5, 0x0, 0x1);
        gbc.writeMem(0x9bb5, { 0x8f });
        gbc.writeMem(0xb1ea, { 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2a39, gbc.sp());
        EXPECT(0xb1eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x9bb5));
        EXPECT(0x6e, gbc.readMem(0xb1ea));
        // 6E 01B7
        gbc.setState(0xb7a2, 0xffa1, 0xab60, 0xafb9, 0x2265, 0xcf19, 0x1, 0x1);
        gbc.writeMem(0xb7a2, { 0x6e });
        gbc.writeMem(0xcf19, { 0x10 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xffa1, gbc.sp());
        EXPECT(0xb7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb7a2));
        EXPECT(0x10, gbc.readMem(0xcf19));
        // 6E 01B8
        gbc.setState(0xec3e, 0xa69, 0x7750, 0x6d84, 0x7979, 0x7709, 0x1, 0x0);
        gbc.writeMem(0x7709, { 0xd0 });
        gbc.writeMem(0xec3e, { 0x6e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa69, gbc.sp());
        EXPECT(0xec3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xec3e));
        // 6E 01B9
        gbc.setState(0xe60d, 0x92fe, 0xddf0, 0x9f03, 0x451c, 0x4a91, 0x1, 0x1);
        gbc.writeMem(0x4a91, { 0x77 });
        gbc.writeMem(0xe60d, { 0x6e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x92fe, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe60d));
        // 6E 01BA
        gbc.setState(0x97b3, 0x747e, 0x4d90, 0xe52c, 0xf3f0, 0xb985, 0x0, 0x1);
        gbc.writeMem(0x97b3, { 0x6e });
        gbc.writeMem(0xb985, { 0x30 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x747e, gbc.sp());
        EXPECT(0x97b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x97b3));
        EXPECT(0x30, gbc.readMem(0xb985));
        // 6E 01BB
        gbc.setState(0x62dc, 0x6687, 0xb2d0, 0x991b, 0x3668, 0x9761, 0x1, 0x0);
        gbc.writeMem(0x62dc, { 0x6e });
        gbc.writeMem(0x9761, { 0x3 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6687, gbc.sp());
        EXPECT(0x62dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9761));
        // 6E 01BC
        gbc.setState(0x9897, 0x542d, 0x18d0, 0x933c, 0x182, 0xb1ed, 0x1, 0x0);
        gbc.writeMem(0x9897, { 0x6e });
        gbc.writeMem(0xb1ed, { 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x542d, gbc.sp());
        EXPECT(0x9898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9897));
        EXPECT(0x7e, gbc.readMem(0xb1ed));
        // 6E 01BD
        gbc.setState(0xc044, 0x1973, 0x3b80, 0xef39, 0x3a85, 0x5dcd, 0x0, 0x1);
        gbc.writeMem(0x5dcd, { 0x3a });
        gbc.writeMem(0xc044, { 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1973, gbc.sp());
        EXPECT(0xc045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc044));
        // 6E 01BE
        gbc.setState(0xc4b3, 0x8eb8, 0x8fd0, 0xb318, 0xf176, 0x66d8, 0x0, 0x0);
        gbc.writeMem(0x66d8, { 0xe8 });
        gbc.writeMem(0xc4b3, { 0x6e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0xc4b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc4b3));
        // 6E 01BF
        gbc.setState(0x2e67, 0xfdc2, 0xbc40, 0xa7c5, 0x4339, 0x3351, 0x1, 0x1);
        gbc.writeMem(0x2e67, { 0x6e });
        gbc.writeMem(0x3351, { 0x99 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfdc2, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01C0
        gbc.setState(0xb99c, 0x40bc, 0x1fd0, 0x287e, 0xbea3, 0x7bed, 0x0, 0x1);
        gbc.writeMem(0x7bed, { 0xc5 });
        gbc.writeMem(0xb99c, { 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x40bc, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb99c));
        // 6E 01C1
        gbc.setState(0xcb98, 0x3ef3, 0x9a00, 0x933c, 0xb04a, 0xab96, 0x0, 0x0);
        gbc.writeMem(0xab96, { 0x8e });
        gbc.writeMem(0xcb98, { 0x6e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3ef3, gbc.sp());
        EXPECT(0xcb99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xab96));
        EXPECT(0x6e, gbc.readMem(0xcb98));
        // 6E 01C2
        gbc.setState(0x94ce, 0x4c07, 0x4750, 0xdb18, 0x491, 0x2686, 0x1, 0x0);
        gbc.writeMem(0x2686, { 0xe3 });
        gbc.writeMem(0x94ce, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4c07, gbc.sp());
        EXPECT(0x94cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x94ce));
        // 6E 01C3
        gbc.setState(0xe1a0, 0xab48, 0xd210, 0x7922, 0xcef9, 0xf1a7, 0x1, 0x1);
        gbc.writeMem(0xe1a0, { 0x6e });
        gbc.writeMem(0xf1a7, { 0xcf });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe1a0));
        EXPECT(0xcf, gbc.readMem(0xf1a7));
        // 6E 01C4
        gbc.setState(0x2982, 0x4e64, 0xa500, 0xaf57, 0x2802, 0xaf7e, 0x0, 0x0);
        gbc.writeMem(0x2982, { 0x6e });
        gbc.writeMem(0xaf7e, { 0x25 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4e64, gbc.sp());
        EXPECT(0x2983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xaf7e));
        // 6E 01C5
        gbc.setState(0x6a51, 0xe327, 0x6bc0, 0x23c4, 0x826b, 0x3fd6, 0x1, 0x0);
        gbc.writeMem(0x3fd6, { 0xd8 });
        gbc.writeMem(0x6a51, { 0x6e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe327, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01C6
        gbc.setState(0xadb0, 0x7b3d, 0x9c90, 0xf616, 0xd63f, 0x1373, 0x0, 0x0);
        gbc.writeMem(0x1373, { 0xa8 });
        gbc.writeMem(0xadb0, { 0x6e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7b3d, gbc.sp());
        EXPECT(0xadb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xadb0));
        // 6E 01C7
        gbc.setState(0xb063, 0xf82b, 0xf020, 0xb2d5, 0x1603, 0xaf9, 0x1, 0x1);
        gbc.writeMem(0xaf9, { 0xdb });
        gbc.writeMem(0xb063, { 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf82b, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb063));
        // 6E 01C8
        gbc.setState(0x8aaa, 0x945d, 0x2ed0, 0x3ae6, 0x5023, 0x8e2, 0x1, 0x1);
        gbc.writeMem(0x8e2, { 0x27 });
        gbc.writeMem(0x8aaa, { 0x6e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x945d, gbc.sp());
        EXPECT(0x8aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8aaa));
        // 6E 01C9
        gbc.setState(0x38d0, 0x511, 0xec50, 0x221, 0x4508, 0xa1a7, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0x6e });
        gbc.writeMem(0xa1a7, { 0xc4 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x511, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xa1a7));
        // 6E 01CA
        gbc.setState(0xdef2, 0x5711, 0x90d0, 0x54e9, 0x8b47, 0x60d1, 0x0, 0x1);
        gbc.writeMem(0x60d1, { 0xc5 });
        gbc.writeMem(0xdef2, { 0x6e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5711, gbc.sp());
        EXPECT(0xdef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdef2));
        // 6E 01CB
        gbc.setState(0x6fb6, 0x789b, 0x9680, 0xcfcc, 0x999f, 0x9f60, 0x1, 0x1);
        gbc.writeMem(0x6fb6, { 0x6e });
        gbc.writeMem(0x9f60, { 0x8e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x789b, gbc.sp());
        EXPECT(0x6fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x9f60));
        // 6E 01CC
        gbc.setState(0xb92f, 0xfdb6, 0xa5b0, 0xc940, 0x1596, 0xae50, 0x1, 0x1);
        gbc.writeMem(0xae50, { 0x37 });
        gbc.writeMem(0xb92f, { 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfdb6, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xae50));
        EXPECT(0x6e, gbc.readMem(0xb92f));
        // 6E 01CD
        gbc.setState(0xba8a, 0xba85, 0x1b90, 0x4d06, 0x55dd, 0xb7f4, 0x1, 0x0);
        gbc.writeMem(0xb7f4, { 0x8 });
        gbc.writeMem(0xba8a, { 0x6e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xba85, gbc.sp());
        EXPECT(0xba8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xb7f4));
        EXPECT(0x6e, gbc.readMem(0xba8a));
        // 6E 01CE
        gbc.setState(0x8937, 0x9962, 0xf5c0, 0x7682, 0xf887, 0x413f, 0x0, 0x1);
        gbc.writeMem(0x413f, { 0xc2 });
        gbc.writeMem(0x8937, { 0x6e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9962, gbc.sp());
        EXPECT(0x8938, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8937));
        // 6E 01CF
        gbc.setState(0x3e0b, 0xa8f, 0x9430, 0xe1e7, 0x8bdb, 0x330c, 0x1, 0x1);
        gbc.writeMem(0x330c, { 0x56 });
        gbc.writeMem(0x3e0b, { 0x6e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa8f, gbc.sp());
        EXPECT(0x3e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01D0
        gbc.setState(0xace, 0xa4c7, 0x81d0, 0x1910, 0x8446, 0x9b1, 0x1, 0x0);
        gbc.writeMem(0x9b1, { 0xf4 });
        gbc.writeMem(0xace, { 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa4c7, gbc.sp());
        EXPECT(0xacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01D1
        gbc.setState(0xa90c, 0x7174, 0x2980, 0x8222, 0xb7df, 0x90ee, 0x0, 0x1);
        gbc.writeMem(0x90ee, { 0xf8 });
        gbc.writeMem(0xa90c, { 0x6e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7174, gbc.sp());
        EXPECT(0xa90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x90ee));
        EXPECT(0x6e, gbc.readMem(0xa90c));
        // 6E 01D2
        gbc.setState(0x6be3, 0x9630, 0x71f0, 0x4d1d, 0x953d, 0xb5d3, 0x0, 0x1);
        gbc.writeMem(0x6be3, { 0x6e });
        gbc.writeMem(0xb5d3, { 0x6d });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9630, gbc.sp());
        EXPECT(0x6be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xb5d3));
        // 6E 01D3
        gbc.setState(0xe5b5, 0x10d5, 0xb260, 0xcfff, 0x5338, 0x84e4, 0x1, 0x0);
        gbc.writeMem(0x84e4, { 0xfb });
        gbc.writeMem(0xe5b5, { 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x10d5, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x84e4));
        EXPECT(0x6e, gbc.readMem(0xe5b5));
        // 6E 01D4
        gbc.setState(0x233f, 0x811, 0x1180, 0x9dfe, 0x1f5, 0x6398, 0x0, 0x1);
        gbc.writeMem(0x233f, { 0x6e });
        gbc.writeMem(0x6398, { 0xd });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x811, gbc.sp());
        EXPECT(0x2340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01D6
        gbc.setState(0x7617, 0xf654, 0xc940, 0x76d1, 0x4567, 0xaf7c, 0x1, 0x0);
        gbc.writeMem(0x7617, { 0x6e });
        gbc.writeMem(0xaf7c, { 0x5f });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf654, gbc.sp());
        EXPECT(0x7618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xaf7c));
        // 6E 01D7
        gbc.setState(0x288f, 0x1d0e, 0xa400, 0x5dee, 0x41e6, 0xd66a, 0x0, 0x0);
        gbc.writeMem(0x288f, { 0x6e });
        gbc.writeMem(0xd66a, { 0xf7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1d0e, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd66a));
        // 6E 01D8
        gbc.setState(0xcf9e, 0xa6c8, 0xf50, 0x8393, 0xc8c1, 0x7919, 0x1, 0x0);
        gbc.writeMem(0x7919, { 0xdc });
        gbc.writeMem(0xcf9e, { 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa6c8, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcf9e));
        // 6E 01D9
        gbc.setState(0xcc62, 0xcf6a, 0x9310, 0x413b, 0x1b06, 0x46cb, 0x0, 0x1);
        gbc.writeMem(0x46cb, { 0xae });
        gbc.writeMem(0xcc62, { 0x6e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcf6a, gbc.sp());
        EXPECT(0xcc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcc62));
        // 6E 01DA
        gbc.setState(0x789, 0xea56, 0x9230, 0x9832, 0x2e23, 0xfff9, 0x0, 0x0);
        gbc.writeMem(0x789, { 0x6e });
        gbc.writeMem(0xfff9, { 0x10 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xea56, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfff9));
        // 6E 01DB
        gbc.setState(0x5251, 0x3988, 0x7840, 0xba7f, 0xd35, 0x5d82, 0x0, 0x0);
        gbc.writeMem(0x5251, { 0x6e });
        gbc.writeMem(0x5d82, { 0xa7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3988, gbc.sp());
        EXPECT(0x5252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01DC
        gbc.setState(0x3f84, 0x1ecd, 0xe620, 0xf760, 0x83e4, 0xdb5d, 0x0, 0x1);
        gbc.writeMem(0x3f84, { 0x6e });
        gbc.writeMem(0xdb5d, { 0x1 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1ecd, gbc.sp());
        EXPECT(0x3f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xdb5d));
        // 6E 01DD
        gbc.setState(0xae83, 0xa456, 0xdb70, 0x18c8, 0xfb2c, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x5190, { 0xf6 });
        gbc.writeMem(0xae83, { 0x6e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa456, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xae83));
        // 6E 01DE
        gbc.setState(0xc90d, 0x3491, 0xe180, 0xd7ef, 0xf38d, 0x5b5a, 0x0, 0x0);
        gbc.writeMem(0x5b5a, { 0x47 });
        gbc.writeMem(0xc90d, { 0x6e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x3491, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc90d));
        // 6E 01DF
        gbc.setState(0xa844, 0xaa6f, 0x6120, 0x477b, 0x48e7, 0x205a, 0x0, 0x1);
        gbc.writeMem(0x205a, { 0x59 });
        gbc.writeMem(0xa844, { 0x6e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xaa6f, gbc.sp());
        EXPECT(0xa845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa844));
        // 6E 01E0
        gbc.setState(0x3dd4, 0x2fde, 0xd050, 0x4e02, 0xf476, 0x1709, 0x1, 0x1);
        gbc.writeMem(0x1709, { 0x6c });
        gbc.writeMem(0x3dd4, { 0x6e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0x3dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01E2
        gbc.setState(0x3c60, 0x5132, 0xd4e0, 0xf3de, 0xaa4d, 0xfeac, 0x1, 0x1);
        gbc.writeMem(0x3c60, { 0x6e });
        gbc.writeMem(0xfeac, { 0x8b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5132, gbc.sp());
        EXPECT(0x3c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xfeac));
        // 6E 01E3
        gbc.setState(0x841c, 0x11d7, 0x2220, 0x4ab2, 0x9c53, 0x554b, 0x0, 0x0);
        gbc.writeMem(0x554b, { 0x54 });
        gbc.writeMem(0x841c, { 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x11d7, gbc.sp());
        EXPECT(0x841d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x841c));
        // 6E 01E4
        gbc.setState(0xb9e1, 0x4c6d, 0x6400, 0xc045, 0xf270, 0x7f3b, 0x1, 0x0);
        gbc.writeMem(0x7f3b, { 0xbf });
        gbc.writeMem(0xb9e1, { 0x6e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4c6d, gbc.sp());
        EXPECT(0xb9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb9e1));
        // 6E 01E5
        gbc.setState(0xa0d4, 0xaa4, 0x3e00, 0xdb51, 0x6cc4, 0x2802, 0x0, 0x1);
        gbc.writeMem(0x2802, { 0x9c });
        gbc.writeMem(0xa0d4, { 0x6e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xaa4, gbc.sp());
        EXPECT(0xa0d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa0d4));
        // 6E 01E6
        gbc.setState(0xa441, 0x1d09, 0x7560, 0xb6fd, 0xf988, 0x2519, 0x0, 0x1);
        gbc.writeMem(0x2519, { 0x1f });
        gbc.writeMem(0xa441, { 0x6e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1d09, gbc.sp());
        EXPECT(0xa442, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa441));
        // 6E 01E7
        gbc.setState(0x5ff7, 0x6b48, 0xc2b0, 0x4093, 0x77a7, 0x42ce, 0x0, 0x0);
        gbc.writeMem(0x42ce, { 0xf7 });
        gbc.writeMem(0x5ff7, { 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6b48, gbc.sp());
        EXPECT(0x5ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01E8
        gbc.setState(0x378c, 0x3d82, 0xe000, 0x67ed, 0x7360, 0x2585, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0xa3 });
        gbc.writeMem(0x378c, { 0x6e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3d82, gbc.sp());
        EXPECT(0x378d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01E9
        gbc.setState(0xd34a, 0x3509, 0xda20, 0x73d9, 0x60fd, 0x9936, 0x0, 0x1);
        gbc.writeMem(0x9936, { 0x9a });
        gbc.writeMem(0xd34a, { 0x6e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3509, gbc.sp());
        EXPECT(0xd34b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0x9936));
        EXPECT(0x6e, gbc.readMem(0xd34a));
        // 6E 01EA
        gbc.setState(0xd62b, 0x876c, 0xf160, 0xb8db, 0x96a2, 0xde1a, 0x1, 0x1);
        gbc.writeMem(0xd62b, { 0x6e });
        gbc.writeMem(0xde1a, { 0x60 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x876c, gbc.sp());
        EXPECT(0xd62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd62b));
        EXPECT(0x60, gbc.readMem(0xde1a));
        // 6E 01EB
        gbc.setState(0x8c7d, 0x1afc, 0x10c0, 0x9db4, 0x57ab, 0x161f, 0x0, 0x1);
        gbc.writeMem(0x161f, { 0xc3 });
        gbc.writeMem(0x8c7d, { 0x6e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x8c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8c7d));
        // 6E 01EC
        gbc.setState(0xbb42, 0x9cca, 0x86f0, 0x54f5, 0x4caf, 0xc289, 0x1, 0x1);
        gbc.writeMem(0xbb42, { 0x6e });
        gbc.writeMem(0xc289, { 0xce });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9cca, gbc.sp());
        EXPECT(0xbb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbb42));
        EXPECT(0xce, gbc.readMem(0xc289));
        // 6E 01ED
        gbc.setState(0x6646, 0xaa09, 0xc660, 0xfa61, 0x6b2c, 0xa8e1, 0x0, 0x1);
        gbc.writeMem(0x6646, { 0x6e });
        gbc.writeMem(0xa8e1, { 0xce });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaa09, gbc.sp());
        EXPECT(0x6647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xa8e1));
        // 6E 01EE
        gbc.setState(0xaf8a, 0x3dd0, 0x9080, 0x2a7e, 0x6330, 0x80bb, 0x1, 0x0);
        gbc.writeMem(0x80bb, { 0x3d });
        gbc.writeMem(0xaf8a, { 0x6e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3dd0, gbc.sp());
        EXPECT(0xaf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x80bb));
        EXPECT(0x6e, gbc.readMem(0xaf8a));
        // 6E 01EF
        gbc.setState(0xd800, 0xaca0, 0x6310, 0xe615, 0x6573, 0xdac1, 0x0, 0x1);
        gbc.writeMem(0xd800, { 0x6e });
        gbc.writeMem(0xdac1, { 0x73 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xaca0, gbc.sp());
        EXPECT(0xd801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd800));
        EXPECT(0x73, gbc.readMem(0xdac1));
        // 6E 01F0
        gbc.setState(0x2b2d, 0xca9, 0x6140, 0xaddf, 0x14ac, 0x8d74, 0x0, 0x1);
        gbc.writeMem(0x2b2d, { 0x6e });
        gbc.writeMem(0x8d74, { 0x67 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0x2b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8d74));
        // 6E 01F1
        gbc.setState(0x9643, 0xd61a, 0x9260, 0x2e19, 0x38c8, 0x61f1, 0x0, 0x0);
        gbc.writeMem(0x61f1, { 0xf7 });
        gbc.writeMem(0x9643, { 0x6e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd61a, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9643));
        // 6E 01F2
        gbc.setState(0x68ef, 0xeb1b, 0x1050, 0xbda7, 0xc613, 0x2d4a, 0x0, 0x1);
        gbc.writeMem(0x2d4a, { 0x7c });
        gbc.writeMem(0x68ef, { 0x6e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeb1b, gbc.sp());
        EXPECT(0x68f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01F3
        gbc.setState(0xd426, 0x14ea, 0x3ec0, 0x61fa, 0x6ad4, 0xb048, 0x1, 0x1);
        gbc.writeMem(0xb048, { 0x5e });
        gbc.writeMem(0xd426, { 0x6e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x14ea, gbc.sp());
        EXPECT(0xd427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb048));
        EXPECT(0x6e, gbc.readMem(0xd426));
        // 6E 01F4
        gbc.setState(0xec19, 0x2376, 0xab10, 0xdcdc, 0x3d07, 0x1cad, 0x0, 0x0);
        gbc.writeMem(0x1cad, { 0x2b });
        gbc.writeMem(0xec19, { 0x6e });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2376, gbc.sp());
        EXPECT(0xec1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xec19));
        // 6E 01F5
        gbc.setState(0x3a0b, 0x6466, 0x9630, 0x737c, 0x4016, 0x8a6f, 0x0, 0x1);
        gbc.writeMem(0x3a0b, { 0x6e });
        gbc.writeMem(0x8a6f, { 0x8b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6466, gbc.sp());
        EXPECT(0x3a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8a6f));
        // 6E 01F6
        gbc.setState(0x9316, 0x1110, 0xaee0, 0x78df, 0x97b3, 0x5279, 0x0, 0x1);
        gbc.writeMem(0x5279, { 0x74 });
        gbc.writeMem(0x9316, { 0x6e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1110, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9316));
        // 6E 01F7
        gbc.setState(0x8ff0, 0x33df, 0x5090, 0x1d6f, 0x472f, 0x2b58, 0x0, 0x0);
        gbc.writeMem(0x2b58, { 0xc9 });
        gbc.writeMem(0x8ff0, { 0x6e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x33df, gbc.sp());
        EXPECT(0x8ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8ff0));
        // 6E 01F8
        gbc.setState(0xe0c1, 0x9f5, 0xdec0, 0xf4a4, 0x320e, 0xbadc, 0x1, 0x0);
        gbc.writeMem(0xbadc, { 0xdb });
        gbc.writeMem(0xe0c1, { 0x6e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9f5, gbc.sp());
        EXPECT(0xe0c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xbadc));
        EXPECT(0x6e, gbc.readMem(0xe0c1));
        // 6E 01F9
        gbc.setState(0x1f9c, 0xbbe7, 0x4600, 0x9a95, 0xfc2c, 0xfe1b, 0x0, 0x1);
        gbc.writeMem(0x1f9c, { 0x6e });
        gbc.writeMem(0xfe1b, { 0x24 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbbe7, gbc.sp());
        EXPECT(0x1f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xfe1b));
        // 6E 01FA
        gbc.setState(0xaf2a, 0xe3bd, 0x2600, 0x27c3, 0x7506, 0x886d, 0x0, 0x0);
        gbc.writeMem(0x886d, { 0x29 });
        gbc.writeMem(0xaf2a, { 0x6e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe3bd, gbc.sp());
        EXPECT(0xaf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0x886d));
        EXPECT(0x6e, gbc.readMem(0xaf2a));
        // 6E 01FB
        gbc.setState(0x50c4, 0x59bb, 0x9f60, 0x4f39, 0x5372, 0x1d20, 0x0, 0x1);
        gbc.writeMem(0x1d20, { 0xe0 });
        gbc.writeMem(0x50c4, { 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x50c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 01FC
        gbc.setState(0x70ec, 0xf2be, 0x3820, 0xe9b6, 0x54be, 0xba7c, 0x0, 0x0);
        gbc.writeMem(0x70ec, { 0x6e });
        gbc.writeMem(0xba7c, { 0x3a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf2be, gbc.sp());
        EXPECT(0x70ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0xba7c));
        // 6E 01FD
        gbc.setState(0x177b, 0x9113, 0x5f40, 0x58a9, 0xc33c, 0xa367, 0x1, 0x1);
        gbc.writeMem(0x177b, { 0x6e });
        gbc.writeMem(0xa367, { 0xc1 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9113, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xa367));
        // 6E 01FE
        gbc.setState(0x5089, 0xd330, 0x890, 0x895c, 0x3e07, 0x1f06, 0x1, 0x1);
        gbc.writeMem(0x1f06, { 0x16 });
        gbc.writeMem(0x5089, { 0x6e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd330, gbc.sp());
        EXPECT(0x508a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 01FF
        gbc.setState(0x2f35, 0xe56e, 0x8390, 0xe572, 0xfcb0, 0xf609, 0x1, 0x0);
        gbc.writeMem(0x2f35, { 0x6e });
        gbc.writeMem(0xf609, { 0xfa });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe56e, gbc.sp());
        EXPECT(0x2f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xf609));
        // 6E 0200
        gbc.setState(0x4c02, 0x1290, 0xa340, 0x98b7, 0xed09, 0x404b, 0x0, 0x0);
        gbc.writeMem(0x404b, { 0xc3 });
        gbc.writeMem(0x4c02, { 0x6e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1290, gbc.sp());
        EXPECT(0x4c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0201
        gbc.setState(0x48d3, 0x59f1, 0xd300, 0xf3d0, 0x2f60, 0x25, 0x0, 0x0);
        gbc.writeMem(0x25, { 0x19 });
        gbc.writeMem(0x48d3, { 0x6e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x59f1, gbc.sp());
        EXPECT(0x48d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0202
        gbc.setState(0x3a96, 0x4b94, 0x7940, 0x7f66, 0x9ac7, 0x7762, 0x0, 0x0);
        gbc.writeMem(0x3a96, { 0x6e });
        gbc.writeMem(0x7762, { 0x60 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x4b94, gbc.sp());
        EXPECT(0x3a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0203
        gbc.setState(0xa9d4, 0x8925, 0x1a00, 0x2897, 0x6265, 0x43f9, 0x0, 0x0);
        gbc.writeMem(0x43f9, { 0xbd });
        gbc.writeMem(0xa9d4, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8925, gbc.sp());
        EXPECT(0xa9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa9d4));
        // 6E 0204
        gbc.setState(0x1e4f, 0x650d, 0x81c0, 0x9636, 0x3aae, 0xe13c, 0x1, 0x0);
        gbc.writeMem(0x1e4f, { 0x6e });
        gbc.writeMem(0xe13c, { 0x46 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x650d, gbc.sp());
        EXPECT(0x1e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe13c));
        // 6E 0205
        gbc.setState(0xa1dc, 0x2d96, 0xd810, 0xfeba, 0xab1e, 0xb29, 0x1, 0x1);
        gbc.writeMem(0xb29, { 0x23 });
        gbc.writeMem(0xa1dc, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0xa1dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa1dc));
        // 6E 0206
        gbc.setState(0x707b, 0xd5, 0xb9d0, 0xa625, 0x9184, 0xebb6, 0x1, 0x0);
        gbc.writeMem(0x707b, { 0x6e });
        gbc.writeMem(0xebb6, { 0xb0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd5, gbc.sp());
        EXPECT(0x707c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xebb6));
        // 6E 0207
        gbc.setState(0x4b48, 0x2d4c, 0xc880, 0x6c04, 0xa770, 0x206, 0x0, 0x0);
        gbc.writeMem(0x206, { 0xfd });
        gbc.writeMem(0x4b48, { 0x6e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2d4c, gbc.sp());
        EXPECT(0x4b49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0208
        gbc.setState(0xd31d, 0x6aa2, 0x22c0, 0x3478, 0x53a7, 0x7cb9, 0x0, 0x0);
        gbc.writeMem(0x7cb9, { 0xf0 });
        gbc.writeMem(0xd31d, { 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x6aa2, gbc.sp());
        EXPECT(0xd31e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd31d));
        // 6E 0209
        gbc.setState(0xc6b2, 0x64dc, 0xbc90, 0x33e0, 0x7f54, 0x3093, 0x1, 0x1);
        gbc.writeMem(0x3093, { 0x6a });
        gbc.writeMem(0xc6b2, { 0x6e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x64dc, gbc.sp());
        EXPECT(0xc6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc6b2));
        // 6E 020A
        gbc.setState(0xb3b9, 0x3e1, 0x7360, 0x251e, 0xf1a3, 0xa209, 0x0, 0x1);
        gbc.writeMem(0xa209, { 0x8e });
        gbc.writeMem(0xb3b9, { 0x6e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3e1, gbc.sp());
        EXPECT(0xb3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa209));
        EXPECT(0x6e, gbc.readMem(0xb3b9));
        // 6E 020B
        gbc.setState(0xc375, 0x680e, 0x38f0, 0x8f0, 0xd0b4, 0xe027, 0x1, 0x1);
        gbc.writeMem(0xc375, { 0x6e });
        gbc.writeMem(0xe027, { 0xfb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc375));
        EXPECT(0xfb, gbc.readMem(0xe027));
        // 6E 020C
        gbc.setState(0x67ad, 0xe79, 0x52c0, 0x75fe, 0x8841, 0x2dfc, 0x1, 0x1);
        gbc.writeMem(0x2dfc, { 0xb5 });
        gbc.writeMem(0x67ad, { 0x6e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe79, gbc.sp());
        EXPECT(0x67ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 020D
        gbc.setState(0x82c, 0xde, 0x6f70, 0xd25, 0xf830, 0x183f, 0x0, 0x0);
        gbc.writeMem(0x82c, { 0x6e });
        gbc.writeMem(0x183f, { 0xc7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xde, gbc.sp());
        EXPECT(0x82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 020E
        gbc.setState(0x525c, 0x9cb9, 0xfbc0, 0x5d63, 0xadfa, 0xdbda, 0x0, 0x1);
        gbc.writeMem(0x525c, { 0x6e });
        gbc.writeMem(0xdbda, { 0x8b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9cb9, gbc.sp());
        EXPECT(0x525d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xdbda));
        // 6E 0210
        gbc.setState(0x7939, 0x5724, 0x8610, 0x9779, 0xe492, 0x77d8, 0x0, 0x1);
        gbc.writeMem(0x77d8, { 0xd4 });
        gbc.writeMem(0x7939, { 0x6e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5724, gbc.sp());
        EXPECT(0x793a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0212
        gbc.setState(0x49f7, 0x4440, 0x90e0, 0xc24, 0x3b9e, 0x5c27, 0x0, 0x0);
        gbc.writeMem(0x49f7, { 0x6e });
        gbc.writeMem(0x5c27, { 0xab });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4440, gbc.sp());
        EXPECT(0x49f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0213
        gbc.setState(0x420, 0x59a2, 0xfa00, 0xaeee, 0xa226, 0xe4a3, 0x1, 0x1);
        gbc.writeMem(0x420, { 0x6e });
        gbc.writeMem(0xe4a3, { 0x2e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x59a2, gbc.sp());
        EXPECT(0x421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe4a3));
        // 6E 0215
        gbc.setState(0xa2dd, 0xbf19, 0xb7b0, 0x1c9, 0xb9d7, 0x5974, 0x1, 0x0);
        gbc.writeMem(0x5974, { 0xde });
        gbc.writeMem(0xa2dd, { 0x6e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbf19, gbc.sp());
        EXPECT(0xa2de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa2dd));
        // 6E 0216
        gbc.setState(0x4bf0, 0x2021, 0x5800, 0x4ef6, 0xdf09, 0x1a4b, 0x1, 0x0);
        gbc.writeMem(0x1a4b, { 0xc9 });
        gbc.writeMem(0x4bf0, { 0x6e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2021, gbc.sp());
        EXPECT(0x4bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0217
        gbc.setState(0x541a, 0x1915, 0x4f10, 0x8299, 0xbac2, 0xd25f, 0x1, 0x0);
        gbc.writeMem(0x541a, { 0x6e });
        gbc.writeMem(0xd25f, { 0x26 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x1915, gbc.sp());
        EXPECT(0x541b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xd25f));
        // 6E 0218
        gbc.setState(0x4441, 0xd4ca, 0x2e10, 0x32ee, 0xa3c1, 0xe70f, 0x1, 0x0);
        gbc.writeMem(0x4441, { 0x6e });
        gbc.writeMem(0xe70f, { 0xff });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd4ca, gbc.sp());
        EXPECT(0x4442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xe70f));
        // 6E 0219
        gbc.setState(0x7270, 0x4a72, 0xb750, 0x76b5, 0x21f0, 0xe524, 0x1, 0x1);
        gbc.writeMem(0x7270, { 0x6e });
        gbc.writeMem(0xe524, { 0x5b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x4a72, gbc.sp());
        EXPECT(0x7271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xe524));
        // 6E 021B
        gbc.setState(0x58b1, 0xfca, 0xa5e0, 0x4c5f, 0xa3c8, 0x2838, 0x0, 0x1);
        gbc.writeMem(0x2838, { 0xc2 });
        gbc.writeMem(0x58b1, { 0x6e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xfca, gbc.sp());
        EXPECT(0x58b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 021C
        gbc.setState(0x4baa, 0xb26d, 0xb890, 0xd5f4, 0x442e, 0xb49a, 0x0, 0x1);
        gbc.writeMem(0x4baa, { 0x6e });
        gbc.writeMem(0xb49a, { 0xef });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb26d, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xb49a));
        // 6E 021D
        gbc.setState(0xcabd, 0x213f, 0xb3a0, 0xe21d, 0x3c67, 0x4a9f, 0x1, 0x0);
        gbc.writeMem(0x4a9f, { 0xee });
        gbc.writeMem(0xcabd, { 0x6e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0xcabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcabd));
        // 6E 021E
        gbc.setState(0x813c, 0x8958, 0xcd20, 0x816a, 0x472, 0x21e, 0x1, 0x1);
        gbc.writeMem(0x21e, { 0xef });
        gbc.writeMem(0x813c, { 0x6e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8958, gbc.sp());
        EXPECT(0x813d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x813c));
        // 6E 021F
        gbc.setState(0x7916, 0xe5b4, 0x1c20, 0xc4c2, 0x7583, 0x3931, 0x1, 0x0);
        gbc.writeMem(0x3931, { 0xc1 });
        gbc.writeMem(0x7916, { 0x6e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe5b4, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0220
        gbc.setState(0x769c, 0xf15d, 0x7b20, 0x740d, 0x9e3f, 0x119d, 0x0, 0x0);
        gbc.writeMem(0x119d, { 0x22 });
        gbc.writeMem(0x769c, { 0x6e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf15d, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0221
        gbc.setState(0x3ec4, 0x75d3, 0x72a0, 0xfc6b, 0xd47e, 0xa2ca, 0x0, 0x0);
        gbc.writeMem(0x3ec4, { 0x6e });
        gbc.writeMem(0xa2ca, { 0x1d });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x75d3, gbc.sp());
        EXPECT(0x3ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xa2ca));
        // 6E 0222
        gbc.setState(0xd916, 0xe675, 0x9d90, 0x48e4, 0x6fff, 0x12b9, 0x0, 0x0);
        gbc.writeMem(0x12b9, { 0x76 });
        gbc.writeMem(0xd916, { 0x6e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0xd917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd916));
        // 6E 0223
        gbc.setState(0xb9eb, 0x78c9, 0xe7a0, 0x7c98, 0x63fc, 0x7f9b, 0x0, 0x0);
        gbc.writeMem(0x7f9b, { 0x5b });
        gbc.writeMem(0xb9eb, { 0x6e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x78c9, gbc.sp());
        EXPECT(0xb9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb9eb));
        // 6E 0224
        gbc.setState(0xa204, 0x79f4, 0xdc90, 0xaaea, 0xb1e6, 0x303e, 0x1, 0x1);
        gbc.writeMem(0x303e, { 0x59 });
        gbc.writeMem(0xa204, { 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x79f4, gbc.sp());
        EXPECT(0xa205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa204));
        // 6E 0225
        gbc.setState(0x820f, 0x8812, 0x7530, 0xff8c, 0xc7ad, 0x9f1a, 0x1, 0x0);
        gbc.writeMem(0x820f, { 0x6e });
        gbc.writeMem(0x9f1a, { 0x68 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8812, gbc.sp());
        EXPECT(0x8210, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x820f));
        EXPECT(0x68, gbc.readMem(0x9f1a));
        // 6E 0226
        gbc.setState(0x64a5, 0xa2f2, 0x8d60, 0x942e, 0x950d, 0x73a1, 0x1, 0x0);
        gbc.writeMem(0x64a5, { 0x6e });
        gbc.writeMem(0x73a1, { 0x4 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa2f2, gbc.sp());
        EXPECT(0x64a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0227
        gbc.setState(0x9128, 0x9701, 0x3b50, 0x34b5, 0x5d98, 0x492, 0x1, 0x0);
        gbc.writeMem(0x492, { 0x8c });
        gbc.writeMem(0x9128, { 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9701, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9128));
        // 6E 0228
        gbc.setState(0x9a37, 0x5f00, 0xd850, 0xdeff, 0x5f62, 0x3b62, 0x1, 0x1);
        gbc.writeMem(0x3b62, { 0xd0 });
        gbc.writeMem(0x9a37, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5f00, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9a37));
        // 6E 0229
        gbc.setState(0xeab3, 0xd6f0, 0x3100, 0xa97d, 0xe8fb, 0xd8a4, 0x1, 0x1);
        gbc.writeMem(0xd8a4, { 0x97 });
        gbc.writeMem(0xeab3, { 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd6f0, gbc.sp());
        EXPECT(0xeab4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd8a4));
        EXPECT(0x6e, gbc.readMem(0xeab3));
        // 6E 022A
        gbc.setState(0xd081, 0x7baf, 0x8bd0, 0x4320, 0x4d71, 0x71b5, 0x0, 0x0);
        gbc.writeMem(0x71b5, { 0xde });
        gbc.writeMem(0xd081, { 0x6e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7baf, gbc.sp());
        EXPECT(0xd082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd081));
        // 6E 022B
        gbc.setState(0x30dd, 0xdb79, 0x7cd0, 0x1590, 0xcd70, 0x1a95, 0x1, 0x1);
        gbc.writeMem(0x1a95, { 0xb7 });
        gbc.writeMem(0x30dd, { 0x6e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xdb79, gbc.sp());
        EXPECT(0x30de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 022C
        gbc.setState(0xd5f7, 0xd761, 0xf110, 0xf5af, 0x4c23, 0xb8a3, 0x0, 0x1);
        gbc.writeMem(0xb8a3, { 0xe1 });
        gbc.writeMem(0xd5f7, { 0x6e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd761, gbc.sp());
        EXPECT(0xd5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xb8a3));
        EXPECT(0x6e, gbc.readMem(0xd5f7));
        // 6E 022D
        gbc.setState(0x7e2d, 0x4412, 0xe830, 0x6e0d, 0xee50, 0xe7e3, 0x0, 0x0);
        gbc.writeMem(0x7e2d, { 0x6e });
        gbc.writeMem(0xe7e3, { 0x4b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4412, gbc.sp());
        EXPECT(0x7e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe7e3));
        // 6E 022E
        gbc.setState(0xbfe, 0x36b8, 0x3250, 0x7672, 0x2300, 0x7bdb, 0x0, 0x1);
        gbc.writeMem(0xbfe, { 0x6e });
        gbc.writeMem(0x7bdb, { 0x8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x36b8, gbc.sp());
        EXPECT(0xbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 022F
        gbc.setState(0x9b25, 0xb9, 0xe930, 0x46dd, 0x6bf0, 0xaf62, 0x0, 0x1);
        gbc.writeMem(0x9b25, { 0x6e });
        gbc.writeMem(0xaf62, { 0xff });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb9, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9b25));
        EXPECT(0xff, gbc.readMem(0xaf62));
        // 6E 0230
        gbc.setState(0x5c3a, 0xb9ea, 0x42e0, 0xe467, 0xf6e9, 0x5567, 0x1, 0x0);
        gbc.writeMem(0x5567, { 0xaa });
        gbc.writeMem(0x5c3a, { 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb9ea, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0231
        gbc.setState(0x287c, 0xddd2, 0xff70, 0x20c9, 0xf123, 0x242, 0x0, 0x0);
        gbc.writeMem(0x242, { 0xad });
        gbc.writeMem(0x287c, { 0x6e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xddd2, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0232
        gbc.setState(0x93c0, 0x9ed0, 0xa630, 0x20e1, 0xa624, 0xb190, 0x1, 0x0);
        gbc.writeMem(0x93c0, { 0x6e });
        gbc.writeMem(0xb190, { 0xc3 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9ed0, gbc.sp());
        EXPECT(0x93c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x93c0));
        EXPECT(0xc3, gbc.readMem(0xb190));
        // 6E 0233
        gbc.setState(0xce65, 0xdeba, 0xde10, 0xa59b, 0xe6ad, 0x2bd9, 0x0, 0x1);
        gbc.writeMem(0x2bd9, { 0x16 });
        gbc.writeMem(0xce65, { 0x6e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdeba, gbc.sp());
        EXPECT(0xce66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xce65));
        // 6E 0234
        gbc.setState(0xe2f0, 0x54f6, 0x5e00, 0x27f2, 0x6ccb, 0x4dfe, 0x0, 0x1);
        gbc.writeMem(0x4dfe, { 0x43 });
        gbc.writeMem(0xe2f0, { 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x54f6, gbc.sp());
        EXPECT(0xe2f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe2f0));
        // 6E 0235
        gbc.setState(0xe493, 0xa4b0, 0xe3f0, 0x9db, 0x8051, 0x6fc3, 0x0, 0x1);
        gbc.writeMem(0x6fc3, { 0x80 });
        gbc.writeMem(0xe493, { 0x6e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0xe494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe493));
        // 6E 0236
        gbc.setState(0x6098, 0xfc4a, 0x6c60, 0xa559, 0xfdaa, 0x43f7, 0x1, 0x0);
        gbc.writeMem(0x43f7, { 0xab });
        gbc.writeMem(0x6098, { 0x6e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfc4a, gbc.sp());
        EXPECT(0x6099, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0237
        gbc.setState(0x9a76, 0xfb6a, 0xdd10, 0x16dc, 0xa3c1, 0xee52, 0x0, 0x0);
        gbc.writeMem(0x9a76, { 0x6e });
        gbc.writeMem(0xee52, { 0xa });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfb6a, gbc.sp());
        EXPECT(0x9a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9a76));
        EXPECT(0xa, gbc.readMem(0xee52));
        // 6E 0238
        gbc.setState(0xce2e, 0x7aa0, 0xc630, 0x41ed, 0xf526, 0xe0bb, 0x0, 0x1);
        gbc.writeMem(0xce2e, { 0x6e });
        gbc.writeMem(0xe0bb, { 0x70 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7aa0, gbc.sp());
        EXPECT(0xce2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xce2e));
        EXPECT(0x70, gbc.readMem(0xe0bb));
        // 6E 0239
        gbc.setState(0x72d4, 0x1fc1, 0xc080, 0xa98a, 0x326c, 0xd6f7, 0x0, 0x0);
        gbc.writeMem(0x72d4, { 0x6e });
        gbc.writeMem(0xd6f7, { 0x18 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd6f7));
        // 6E 023A
        gbc.setState(0xae3b, 0xed42, 0x3fd0, 0xd837, 0x3edc, 0x7fee, 0x0, 0x0);
        gbc.writeMem(0x7fee, { 0xb0 });
        gbc.writeMem(0xae3b, { 0x6e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xed42, gbc.sp());
        EXPECT(0xae3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xae3b));
        // 6E 023B
        gbc.setState(0x73a9, 0x852, 0x4c40, 0xee6f, 0xacac, 0xc8e3, 0x1, 0x0);
        gbc.writeMem(0x73a9, { 0x6e });
        gbc.writeMem(0xc8e3, { 0xaf });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x73aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc8e3));
        // 6E 023C
        gbc.setState(0xc916, 0x509, 0xf640, 0x9680, 0xdbeb, 0xbf59, 0x1, 0x0);
        gbc.writeMem(0xbf59, { 0x53 });
        gbc.writeMem(0xc916, { 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x509, gbc.sp());
        EXPECT(0xc917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf59));
        EXPECT(0x6e, gbc.readMem(0xc916));
        // 6E 023D
        gbc.setState(0x68f6, 0x9124, 0xaec0, 0x879d, 0xaa06, 0xa1fc, 0x1, 0x0);
        gbc.writeMem(0x68f6, { 0x6e });
        gbc.writeMem(0xa1fc, { 0x14 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9124, gbc.sp());
        EXPECT(0x68f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa1fc));
        // 6E 023E
        gbc.setState(0xe03c, 0xf99, 0x4240, 0xa4bb, 0xc402, 0xcfe8, 0x0, 0x0);
        gbc.writeMem(0xcfe8, { 0xee });
        gbc.writeMem(0xe03c, { 0x6e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf99, gbc.sp());
        EXPECT(0xe03d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xcfe8));
        EXPECT(0x6e, gbc.readMem(0xe03c));
        // 6E 023F
        gbc.setState(0xbd42, 0xc790, 0x22a0, 0x6d9d, 0x9e56, 0xe6b, 0x1, 0x0);
        gbc.writeMem(0xe6b, { 0x1b });
        gbc.writeMem(0xbd42, { 0x6e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc790, gbc.sp());
        EXPECT(0xbd43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbd42));
        // 6E 0240
        gbc.setState(0x4467, 0x35a2, 0x8ca0, 0xef0e, 0x5399, 0x5274, 0x0, 0x1);
        gbc.writeMem(0x4467, { 0x6e });
        gbc.writeMem(0x5274, { 0xc2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x35a2, gbc.sp());
        EXPECT(0x4468, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0241
        gbc.setState(0xc283, 0xeac3, 0x4de0, 0x58c5, 0xc84a, 0xe0bc, 0x1, 0x0);
        gbc.writeMem(0xc283, { 0x6e });
        gbc.writeMem(0xe0bc, { 0x8f });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0xc284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc283));
        EXPECT(0x8f, gbc.readMem(0xe0bc));
        // 6E 0242
        gbc.setState(0x5a73, 0xf02a, 0xdb40, 0xb19a, 0xa7fc, 0x73e7, 0x0, 0x0);
        gbc.writeMem(0x5a73, { 0x6e });
        gbc.writeMem(0x73e7, { 0xb1 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf02a, gbc.sp());
        EXPECT(0x5a74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0243
        gbc.setState(0xa661, 0x36bd, 0xd200, 0x445d, 0x5c62, 0x1312, 0x1, 0x0);
        gbc.writeMem(0x1312, { 0xa5 });
        gbc.writeMem(0xa661, { 0x6e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x36bd, gbc.sp());
        EXPECT(0xa662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa661));
        // 6E 0244
        gbc.setState(0xb451, 0x63c, 0xdbd0, 0xf944, 0xc5cf, 0x3a37, 0x0, 0x0);
        gbc.writeMem(0x3a37, { 0x1a });
        gbc.writeMem(0xb451, { 0x6e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x63c, gbc.sp());
        EXPECT(0xb452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb451));
        // 6E 0245
        gbc.setState(0xb8e1, 0xae86, 0xef10, 0x7752, 0xe210, 0x3871, 0x0, 0x0);
        gbc.writeMem(0x3871, { 0x73 });
        gbc.writeMem(0xb8e1, { 0x6e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xae86, gbc.sp());
        EXPECT(0xb8e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb8e1));
        // 6E 0246
        gbc.setState(0xb761, 0xa5cc, 0x8840, 0x73d, 0x6b3c, 0x3a3, 0x1, 0x0);
        gbc.writeMem(0x3a3, { 0x4b });
        gbc.writeMem(0xb761, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xa5cc, gbc.sp());
        EXPECT(0xb762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb761));
        // 6E 0247
        gbc.setState(0x252, 0xf548, 0x4930, 0xb64e, 0xf628, 0xeb31, 0x0, 0x1);
        gbc.writeMem(0x252, { 0x6e });
        gbc.writeMem(0xeb31, { 0x47 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf548, gbc.sp());
        EXPECT(0x253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xeb31));
        // 6E 0248
        gbc.setState(0xcc84, 0xebf3, 0x32d0, 0xf81d, 0xfbd2, 0xa92e, 0x1, 0x0);
        gbc.writeMem(0xa92e, { 0xda });
        gbc.writeMem(0xcc84, { 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xebf3, gbc.sp());
        EXPECT(0xcc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xa92e));
        EXPECT(0x6e, gbc.readMem(0xcc84));
        // 6E 0249
        gbc.setState(0x764d, 0xe332, 0x9960, 0xc1ce, 0xda89, 0x1dfc, 0x0, 0x1);
        gbc.writeMem(0x1dfc, { 0x26 });
        gbc.writeMem(0x764d, { 0x6e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe332, gbc.sp());
        EXPECT(0x764e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 024A
        gbc.setState(0x9693, 0xe91e, 0x5aa0, 0xe2b7, 0x43d5, 0x219, 0x0, 0x1);
        gbc.writeMem(0x219, { 0xd5 });
        gbc.writeMem(0x9693, { 0x6e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0x9694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9693));
        // 6E 024B
        gbc.setState(0x82fd, 0xff50, 0xa7f0, 0xdf4, 0x772b, 0x5c3b, 0x1, 0x0);
        gbc.writeMem(0x5c3b, { 0xe4 });
        gbc.writeMem(0x82fd, { 0x6e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xff50, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x82fd));
        // 6E 024C
        gbc.setState(0x7389, 0x2051, 0x4c40, 0xa117, 0x75ed, 0x64ff, 0x0, 0x1);
        gbc.writeMem(0x64ff, { 0xaf });
        gbc.writeMem(0x7389, { 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2051, gbc.sp());
        EXPECT(0x738a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 024D
        gbc.setState(0x9909, 0x87e3, 0x5ea0, 0x39c8, 0xb390, 0x4f0e, 0x1, 0x1);
        gbc.writeMem(0x4f0e, { 0x5f });
        gbc.writeMem(0x9909, { 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0x990a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9909));
        // 6E 024E
        gbc.setState(0x9c32, 0x5327, 0x9700, 0xf6a2, 0x57dc, 0x690d, 0x0, 0x1);
        gbc.writeMem(0x690d, { 0xe2 });
        gbc.writeMem(0x9c32, { 0x6e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5327, gbc.sp());
        EXPECT(0x9c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9c32));
        // 6E 024F
        gbc.setState(0x9bfb, 0xaeb8, 0x7fa0, 0xe499, 0xac2b, 0x577e, 0x0, 0x0);
        gbc.writeMem(0x577e, { 0x3c });
        gbc.writeMem(0x9bfb, { 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaeb8, gbc.sp());
        EXPECT(0x9bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9bfb));
        // 6E 0250
        gbc.setState(0xb0ca, 0x5bb0, 0xbb40, 0x262b, 0x20fb, 0x400, 0x1, 0x1);
        gbc.writeMem(0x400, { 0x9b });
        gbc.writeMem(0xb0ca, { 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5bb0, gbc.sp());
        EXPECT(0xb0cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb0ca));
        // 6E 0251
        gbc.setState(0x4f50, 0x49fc, 0xc30, 0xd8a9, 0x98aa, 0x44a6, 0x0, 0x1);
        gbc.writeMem(0x44a6, { 0x9 });
        gbc.writeMem(0x4f50, { 0x6e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x49fc, gbc.sp());
        EXPECT(0x4f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0252
        gbc.setState(0x77fe, 0xbc95, 0xdd00, 0xffbe, 0x99f6, 0xe101, 0x1, 0x0);
        gbc.writeMem(0x77fe, { 0x6e });
        gbc.writeMem(0xe101, { 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc95, gbc.sp());
        EXPECT(0x77ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xe101));
        // 6E 0253
        gbc.setState(0x15b5, 0x267a, 0x79c0, 0x95a9, 0xf146, 0x5a29, 0x0, 0x1);
        gbc.writeMem(0x15b5, { 0x6e });
        gbc.writeMem(0x5a29, { 0x27 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x267a, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0254
        gbc.setState(0xad8a, 0x958a, 0x6450, 0x1ec3, 0x325e, 0x4aa1, 0x0, 0x0);
        gbc.writeMem(0x4aa1, { 0xaa });
        gbc.writeMem(0xad8a, { 0x6e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x958a, gbc.sp());
        EXPECT(0xad8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xad8a));
        // 6E 0255
        gbc.setState(0x7e2, 0x350e, 0x93f0, 0x5836, 0x5eeb, 0x2f02, 0x1, 0x0);
        gbc.writeMem(0x7e2, { 0x6e });
        gbc.writeMem(0x2f02, { 0xd5 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0x7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0256
        gbc.setState(0xcf53, 0xdbd5, 0x6880, 0x330d, 0x4996, 0x81ae, 0x1, 0x1);
        gbc.writeMem(0x81ae, { 0x3a });
        gbc.writeMem(0xcf53, { 0x6e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdbd5, gbc.sp());
        EXPECT(0xcf54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x81ae));
        EXPECT(0x6e, gbc.readMem(0xcf53));
        // 6E 0257
        gbc.setState(0xcd0c, 0x44c0, 0xef90, 0x5d9f, 0x633a, 0x6e5e, 0x0, 0x1);
        gbc.writeMem(0x6e5e, { 0xb2 });
        gbc.writeMem(0xcd0c, { 0x6e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x44c0, gbc.sp());
        EXPECT(0xcd0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcd0c));
        // 6E 0258
        gbc.setState(0x2161, 0xaf18, 0x3720, 0xabea, 0xbfd, 0x4275, 0x1, 0x1);
        gbc.writeMem(0x2161, { 0x6e });
        gbc.writeMem(0x4275, { 0x7d });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaf18, gbc.sp());
        EXPECT(0x2162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 025A
        gbc.setState(0x74fc, 0x7422, 0x5850, 0x113a, 0x67f3, 0xfa56, 0x0, 0x1);
        gbc.writeMem(0x74fc, { 0x6e });
        gbc.writeMem(0xfa56, { 0xfb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7422, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xfa56));
        // 6E 025B
        gbc.setState(0x7a83, 0x78d, 0x9c30, 0xc6d9, 0x125e, 0x5e64, 0x1, 0x0);
        gbc.writeMem(0x5e64, { 0x83 });
        gbc.writeMem(0x7a83, { 0x6e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x78d, gbc.sp());
        EXPECT(0x7a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 025C
        gbc.setState(0xdc26, 0x6650, 0x1ff0, 0x30c8, 0x2d4, 0x1594, 0x1, 0x1);
        gbc.writeMem(0x1594, { 0xfd });
        gbc.writeMem(0xdc26, { 0x6e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6650, gbc.sp());
        EXPECT(0xdc27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdc26));
        // 6E 025D
        gbc.setState(0x13a8, 0x59fa, 0xc3c0, 0xa972, 0x6105, 0x6b2b, 0x1, 0x0);
        gbc.writeMem(0x13a8, { 0x6e });
        gbc.writeMem(0x6b2b, { 0xd2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x59fa, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 025E
        gbc.setState(0x717, 0x16c1, 0x8000, 0xf3e3, 0x3c9, 0x30af, 0x1, 0x0);
        gbc.writeMem(0x717, { 0x6e });
        gbc.writeMem(0x30af, { 0xda });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x16c1, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0260
        gbc.setState(0x1e6f, 0xb940, 0xd90, 0xaf42, 0x4e33, 0x20c2, 0x0, 0x0);
        gbc.writeMem(0x1e6f, { 0x6e });
        gbc.writeMem(0x20c2, { 0x4 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb940, gbc.sp());
        EXPECT(0x1e70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0261
        gbc.setState(0x67c2, 0xd50d, 0xfa50, 0xcb62, 0x325b, 0x9c03, 0x1, 0x1);
        gbc.writeMem(0x67c2, { 0x6e });
        gbc.writeMem(0x9c03, { 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0x67c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9c03));
        // 6E 0262
        gbc.setState(0x4aca, 0xfcf1, 0x58f0, 0x953d, 0x4a94, 0x50c6, 0x0, 0x1);
        gbc.writeMem(0x4aca, { 0x6e });
        gbc.writeMem(0x50c6, { 0x5 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0x4acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0263
        gbc.setState(0x6a0a, 0x4a6f, 0x4540, 0x439d, 0x9c6c, 0xb56, 0x1, 0x0);
        gbc.writeMem(0xb56, { 0x9c });
        gbc.writeMem(0x6a0a, { 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4a6f, gbc.sp());
        EXPECT(0x6a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0264
        gbc.setState(0x4936, 0x69bf, 0xc70, 0xe9c8, 0x4e1a, 0xbfbb, 0x0, 0x1);
        gbc.writeMem(0x4936, { 0x6e });
        gbc.writeMem(0xbfbb, { 0x8a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x69bf, gbc.sp());
        EXPECT(0x4937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xbfbb));
        // 6E 0265
        gbc.setState(0xce56, 0x36e, 0xcfc0, 0x5f2a, 0xf147, 0x11f3, 0x1, 0x0);
        gbc.writeMem(0x11f3, { 0xe });
        gbc.writeMem(0xce56, { 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x36e, gbc.sp());
        EXPECT(0xce57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xce56));
        // 6E 0266
        gbc.setState(0x65ba, 0xd4d, 0x5620, 0x8494, 0x1d75, 0xf73f, 0x0, 0x1);
        gbc.writeMem(0x65ba, { 0x6e });
        gbc.writeMem(0xf73f, { 0xaf });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd4d, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xf73f));
        // 6E 0267
        gbc.setState(0x2530, 0xbfde, 0xae50, 0x19ab, 0x2a37, 0x3c61, 0x1, 0x0);
        gbc.writeMem(0x2530, { 0x6e });
        gbc.writeMem(0x3c61, { 0xfc });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0x2531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0268
        gbc.setState(0x2c78, 0xf355, 0x8800, 0x1087, 0xd375, 0x91f0, 0x0, 0x0);
        gbc.writeMem(0x2c78, { 0x6e });
        gbc.writeMem(0x91f0, { 0xf8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xf355, gbc.sp());
        EXPECT(0x2c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x91f0));
        // 6E 0269
        gbc.setState(0x1369, 0xf092, 0x89c0, 0x148b, 0x53d6, 0x159a, 0x0, 0x0);
        gbc.writeMem(0x1369, { 0x6e });
        gbc.writeMem(0x159a, { 0xcc });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf092, gbc.sp());
        EXPECT(0x136a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 026A
        gbc.setState(0xb7c3, 0xa8de, 0x2640, 0xe469, 0x8c0a, 0xeae9, 0x0, 0x0);
        gbc.writeMem(0xb7c3, { 0x6e });
        gbc.writeMem(0xeae9, { 0xae });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa8de, gbc.sp());
        EXPECT(0xb7c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb7c3));
        EXPECT(0xae, gbc.readMem(0xeae9));
        // 6E 026B
        gbc.setState(0xa1a7, 0xafd0, 0x63d0, 0x3d59, 0x215d, 0x2363, 0x1, 0x0);
        gbc.writeMem(0x2363, { 0x8e });
        gbc.writeMem(0xa1a7, { 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xafd0, gbc.sp());
        EXPECT(0xa1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa1a7));
        // 6E 026C
        gbc.setState(0x36a9, 0x56e4, 0xc700, 0x7c30, 0x1638, 0x3179, 0x0, 0x1);
        gbc.writeMem(0x3179, { 0x42 });
        gbc.writeMem(0x36a9, { 0x6e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x56e4, gbc.sp());
        EXPECT(0x36aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 026E
        gbc.setState(0x8f29, 0x43c9, 0xf400, 0x7d82, 0x2882, 0xc553, 0x0, 0x0);
        gbc.writeMem(0x8f29, { 0x6e });
        gbc.writeMem(0xc553, { 0xa1 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0x8f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8f29));
        EXPECT(0xa1, gbc.readMem(0xc553));
        // 6E 026F
        gbc.setState(0xdae9, 0x6155, 0x7ab0, 0xc0bd, 0xdb57, 0x4465, 0x0, 0x0);
        gbc.writeMem(0x4465, { 0xa8 });
        gbc.writeMem(0xdae9, { 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6155, gbc.sp());
        EXPECT(0xdaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdae9));
        // 6E 0270
        gbc.setState(0x242c, 0xe615, 0x3760, 0x4b72, 0xc391, 0x3e3e, 0x0, 0x1);
        gbc.writeMem(0x242c, { 0x6e });
        gbc.writeMem(0x3e3e, { 0xbb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe615, gbc.sp());
        EXPECT(0x242d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0271
        gbc.setState(0xe445, 0xb4b0, 0x7de0, 0x22c6, 0xf443, 0xa8ff, 0x0, 0x0);
        gbc.writeMem(0xa8ff, { 0x68 });
        gbc.writeMem(0xe445, { 0x6e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0xe446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xa8ff));
        EXPECT(0x6e, gbc.readMem(0xe445));
        // 6E 0272
        gbc.setState(0x1210, 0xb3c9, 0x4090, 0xd8d7, 0xa885, 0xbe0d, 0x1, 0x1);
        gbc.writeMem(0x1210, { 0x6e });
        gbc.writeMem(0xbe0d, { 0x8d });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0x1211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xbe0d));
        // 6E 0273
        gbc.setState(0x710a, 0x3440, 0xb5b0, 0x79ec, 0x93b5, 0xb602, 0x0, 0x0);
        gbc.writeMem(0x710a, { 0x6e });
        gbc.writeMem(0xb602, { 0xb1 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3440, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb602));
        // 6E 0274
        gbc.setState(0x247, 0xda05, 0xed50, 0x3a65, 0x7e82, 0x389f, 0x0, 0x1);
        gbc.writeMem(0x247, { 0x6e });
        gbc.writeMem(0x389f, { 0x12 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xda05, gbc.sp());
        EXPECT(0x248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0275
        gbc.setState(0xa1af, 0x23d, 0xfcc0, 0x29ad, 0xa55e, 0xf527, 0x0, 0x0);
        gbc.writeMem(0xa1af, { 0x6e });
        gbc.writeMem(0xf527, { 0x23 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x23d, gbc.sp());
        EXPECT(0xa1b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa1af));
        EXPECT(0x23, gbc.readMem(0xf527));
        // 6E 0276
        gbc.setState(0x51ec, 0xcdd6, 0x7280, 0x8242, 0x7a5e, 0x576d, 0x1, 0x1);
        gbc.writeMem(0x51ec, { 0x6e });
        gbc.writeMem(0x576d, { 0x81 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0x51ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0277
        gbc.setState(0x6232, 0xcd16, 0xf210, 0x229d, 0xa3c6, 0x54cb, 0x0, 0x0);
        gbc.writeMem(0x54cb, { 0x11 });
        gbc.writeMem(0x6232, { 0x6e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xcd16, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0278
        gbc.setState(0x3e87, 0xe2ac, 0x6950, 0xa763, 0xf491, 0xcb0b, 0x1, 0x0);
        gbc.writeMem(0x3e87, { 0x6e });
        gbc.writeMem(0xcb0b, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe2ac, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcb0b));
        // 6E 0279
        gbc.setState(0x3519, 0x4c87, 0x2460, 0x4cc3, 0x5885, 0x3353, 0x0, 0x1);
        gbc.writeMem(0x3353, { 0x36 });
        gbc.writeMem(0x3519, { 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4c87, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 027A
        gbc.setState(0x5be2, 0x76ac, 0xb720, 0x58b2, 0xe835, 0x8376, 0x0, 0x1);
        gbc.writeMem(0x5be2, { 0x6e });
        gbc.writeMem(0x8376, { 0xcf });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x76ac, gbc.sp());
        EXPECT(0x5be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8376));
        // 6E 027B
        gbc.setState(0x83f8, 0x16e6, 0x5520, 0x33ce, 0x1bd5, 0xa15b, 0x0, 0x1);
        gbc.writeMem(0x83f8, { 0x6e });
        gbc.writeMem(0xa15b, { 0x67 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x16e6, gbc.sp());
        EXPECT(0x83f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x83f8));
        EXPECT(0x67, gbc.readMem(0xa15b));
        // 6E 027C
        gbc.setState(0xb92f, 0xdc90, 0x4e20, 0x6a7b, 0x38a0, 0x714, 0x1, 0x1);
        gbc.writeMem(0x714, { 0x4c });
        gbc.writeMem(0xb92f, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdc90, gbc.sp());
        EXPECT(0xb930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb92f));
        // 6E 027E
        gbc.setState(0xe9ea, 0xdaa0, 0x2980, 0x40b4, 0x2771, 0x1592, 0x0, 0x1);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0xe9ea, { 0x6e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0xe9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe9ea));
        // 6E 027F
        gbc.setState(0x3373, 0xd512, 0x47f0, 0xa132, 0x69d9, 0x2cd9, 0x1, 0x1);
        gbc.writeMem(0x2cd9, { 0x34 });
        gbc.writeMem(0x3373, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x3374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0280
        gbc.setState(0xbeff, 0xdb39, 0x23f0, 0x2615, 0x278b, 0x5941, 0x1, 0x0);
        gbc.writeMem(0x5941, { 0x7 });
        gbc.writeMem(0xbeff, { 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdb39, gbc.sp());
        EXPECT(0xbf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbeff));
        // 6E 0281
        gbc.setState(0x1165, 0x9c83, 0x7c10, 0x7f27, 0xa4ff, 0xcfa7, 0x1, 0x1);
        gbc.writeMem(0x1165, { 0x6e });
        gbc.writeMem(0xcfa7, { 0xca });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0x1166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xcfa7));
        // 6E 0282
        gbc.setState(0xe37e, 0xafa2, 0x8cb0, 0x8116, 0x3cbe, 0xf832, 0x1, 0x0);
        gbc.writeMem(0xe37e, { 0x6e });
        gbc.writeMem(0xf832, { 0xf0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0xe37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe37e));
        EXPECT(0xf0, gbc.readMem(0xf832));
        // 6E 0283
        gbc.setState(0x1eac, 0x7b3a, 0x6000, 0xfb26, 0x22a6, 0x384, 0x0, 0x0);
        gbc.writeMem(0x384, { 0xe6 });
        gbc.writeMem(0x1eac, { 0x6e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0x1ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0284
        gbc.setState(0xb92b, 0xaee7, 0xbd20, 0x8c9d, 0xdabe, 0xbdad, 0x1, 0x0);
        gbc.writeMem(0xb92b, { 0x6e });
        gbc.writeMem(0xbdad, { 0x99 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xaee7, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb92b));
        EXPECT(0x99, gbc.readMem(0xbdad));
        // 6E 0285
        gbc.setState(0x5841, 0xfd03, 0xbb80, 0xc23b, 0x7eac, 0x3d31, 0x1, 0x1);
        gbc.writeMem(0x3d31, { 0x26 });
        gbc.writeMem(0x5841, { 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0x5842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0286
        gbc.setState(0x9f57, 0xbe0a, 0xd820, 0xd362, 0x653, 0x6343, 0x0, 0x1);
        gbc.writeMem(0x6343, { 0x8e });
        gbc.writeMem(0x9f57, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbe0a, gbc.sp());
        EXPECT(0x9f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9f57));
        // 6E 0287
        gbc.setState(0x9e7a, 0x1b28, 0xa560, 0xba29, 0x569, 0xa868, 0x1, 0x1);
        gbc.writeMem(0x9e7a, { 0x6e });
        gbc.writeMem(0xa868, { 0x8d });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1b28, gbc.sp());
        EXPECT(0x9e7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9e7a));
        EXPECT(0x8d, gbc.readMem(0xa868));
        // 6E 0288
        gbc.setState(0x10fa, 0xf829, 0x2e20, 0xd260, 0x54cc, 0x914b, 0x0, 0x0);
        gbc.writeMem(0x10fa, { 0x6e });
        gbc.writeMem(0x914b, { 0x73 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf829, gbc.sp());
        EXPECT(0x10fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x914b));
        // 6E 0289
        gbc.setState(0x32fb, 0x1fa0, 0xe640, 0x185f, 0xeff2, 0x7d8, 0x0, 0x0);
        gbc.writeMem(0x7d8, { 0x9 });
        gbc.writeMem(0x32fb, { 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1fa0, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 028A
        gbc.setState(0x2bf0, 0xab41, 0x45f0, 0x6666, 0x39bf, 0x1782, 0x0, 0x0);
        gbc.writeMem(0x1782, { 0xb3 });
        gbc.writeMem(0x2bf0, { 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xab41, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 028B
        gbc.setState(0x7be3, 0xa790, 0xd860, 0xebc8, 0x7795, 0x51cc, 0x0, 0x0);
        gbc.writeMem(0x51cc, { 0x90 });
        gbc.writeMem(0x7be3, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa790, gbc.sp());
        EXPECT(0x7be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 028C
        gbc.setState(0xb008, 0x517d, 0x5290, 0x9f10, 0xef87, 0x7daa, 0x1, 0x0);
        gbc.writeMem(0x7daa, { 0xd1 });
        gbc.writeMem(0xb008, { 0x6e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x517d, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb008));
        // 6E 028D
        gbc.setState(0x9050, 0xe80f, 0x32a0, 0x16ee, 0x6c22, 0xc768, 0x1, 0x0);
        gbc.writeMem(0x9050, { 0x6e });
        gbc.writeMem(0xc768, { 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe80f, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9050));
        EXPECT(0xa1, gbc.readMem(0xc768));
        // 6E 028E
        gbc.setState(0x338f, 0x8200, 0x330, 0x5172, 0x145c, 0x61ac, 0x0, 0x1);
        gbc.writeMem(0x338f, { 0x6e });
        gbc.writeMem(0x61ac, { 0x9e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8200, gbc.sp());
        EXPECT(0x3390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 028F
        gbc.setState(0xe70, 0x8749, 0xa860, 0x3d03, 0x6f43, 0xa9c5, 0x1, 0x1);
        gbc.writeMem(0xe70, { 0x6e });
        gbc.writeMem(0xa9c5, { 0xbe });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8749, gbc.sp());
        EXPECT(0xe71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xa9c5));
        // 6E 0290
        gbc.setState(0x72db, 0x71d2, 0x9240, 0xf5f3, 0xdb22, 0xe27f, 0x0, 0x1);
        gbc.writeMem(0x72db, { 0x6e });
        gbc.writeMem(0xe27f, { 0x46 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x72dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe27f));
        // 6E 0291
        gbc.setState(0xc0c5, 0x4bf4, 0x8040, 0x7c7, 0xe73b, 0xb0, 0x0, 0x0);
        gbc.writeMem(0xb0, { 0x9 });
        gbc.writeMem(0xc0c5, { 0x6e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4bf4, gbc.sp());
        EXPECT(0xc0c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc0c5));
        // 6E 0292
        gbc.setState(0xa7ab, 0xb412, 0x6930, 0x71fc, 0x9df0, 0xe0d9, 0x0, 0x0);
        gbc.writeMem(0xa7ab, { 0x6e });
        gbc.writeMem(0xe0d9, { 0x97 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb412, gbc.sp());
        EXPECT(0xa7ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa7ab));
        EXPECT(0x97, gbc.readMem(0xe0d9));
        // 6E 0293
        gbc.setState(0x4f35, 0x3733, 0xb00, 0x78a9, 0xce44, 0x93b9, 0x1, 0x0);
        gbc.writeMem(0x4f35, { 0x6e });
        gbc.writeMem(0x93b9, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3733, gbc.sp());
        EXPECT(0x4f36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x93b9));
        // 6E 0294
        gbc.setState(0xce62, 0x686a, 0xfb90, 0xf7ae, 0xecab, 0x8fcd, 0x1, 0x0);
        gbc.writeMem(0x8fcd, { 0x30 });
        gbc.writeMem(0xce62, { 0x6e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x686a, gbc.sp());
        EXPECT(0xce63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8fcd));
        EXPECT(0x6e, gbc.readMem(0xce62));
        // 6E 0296
        gbc.setState(0x22bf, 0x8943, 0xb80, 0xfe7a, 0x63c0, 0x2bc9, 0x1, 0x0);
        gbc.writeMem(0x22bf, { 0x6e });
        gbc.writeMem(0x2bc9, { 0x49 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8943, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0297
        gbc.setState(0xb0ff, 0x11e4, 0x6a60, 0x87c8, 0x80d1, 0xba95, 0x1, 0x1);
        gbc.writeMem(0xb0ff, { 0x6e });
        gbc.writeMem(0xba95, { 0xc });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x11e4, gbc.sp());
        EXPECT(0xb100, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb0ff));
        EXPECT(0xc, gbc.readMem(0xba95));
        // 6E 0298
        gbc.setState(0x106f, 0x9159, 0xaa30, 0xe4e0, 0x8ad5, 0x667f, 0x1, 0x0);
        gbc.writeMem(0x106f, { 0x6e });
        gbc.writeMem(0x667f, { 0x8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0x1070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0299
        gbc.setState(0x5658, 0x498a, 0xe420, 0xd11c, 0xf90a, 0xc5be, 0x1, 0x1);
        gbc.writeMem(0x5658, { 0x6e });
        gbc.writeMem(0xc5be, { 0x27 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc5be));
        // 6E 029A
        gbc.setState(0xc84f, 0x651e, 0xbfa0, 0x1c43, 0xe7e5, 0x2464, 0x0, 0x0);
        gbc.writeMem(0x2464, { 0x9 });
        gbc.writeMem(0xc84f, { 0x6e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x651e, gbc.sp());
        EXPECT(0xc850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc84f));
        // 6E 029B
        gbc.setState(0xed30, 0x63, 0x5cb0, 0xb15f, 0x1c20, 0xfe1e, 0x0, 0x1);
        gbc.writeMem(0xed30, { 0x6e });
        gbc.writeMem(0xfe1e, { 0xf1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x63, gbc.sp());
        EXPECT(0xed31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xed30));
        EXPECT(0xf1, gbc.readMem(0xfe1e));
        // 6E 029C
        gbc.setState(0x9a2e, 0xad0e, 0xb050, 0xd186, 0xdd4, 0xe829, 0x0, 0x1);
        gbc.writeMem(0x9a2e, { 0x6e });
        gbc.writeMem(0xe829, { 0xfe });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xad0e, gbc.sp());
        EXPECT(0x9a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9a2e));
        EXPECT(0xfe, gbc.readMem(0xe829));
        // 6E 029D
        gbc.setState(0x583d, 0x3c67, 0x2770, 0xc8e4, 0x6b4c, 0x7c3d, 0x0, 0x0);
        gbc.writeMem(0x583d, { 0x6e });
        gbc.writeMem(0x7c3d, { 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3c67, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 029E
        gbc.setState(0x7418, 0x44b7, 0x82f0, 0x5538, 0xee49, 0x39dd, 0x1, 0x1);
        gbc.writeMem(0x39dd, { 0x27 });
        gbc.writeMem(0x7418, { 0x6e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x44b7, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 029F
        gbc.setState(0x6db5, 0xdbe1, 0xc4c0, 0x326e, 0xea47, 0x5b54, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0xbc });
        gbc.writeMem(0x6db5, { 0x6e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdbe1, gbc.sp());
        EXPECT(0x6db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02A0
        gbc.setState(0xcdab, 0x7460, 0x1de0, 0xf6ab, 0xc885, 0x7719, 0x0, 0x0);
        gbc.writeMem(0x7719, { 0x61 });
        gbc.writeMem(0xcdab, { 0x6e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7460, gbc.sp());
        EXPECT(0xcdac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcdab));
        // 6E 02A1
        gbc.setState(0x713e, 0x7d32, 0xfe20, 0x8b2d, 0x9a56, 0x499f, 0x1, 0x1);
        gbc.writeMem(0x499f, { 0x2e });
        gbc.writeMem(0x713e, { 0x6e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7d32, gbc.sp());
        EXPECT(0x713f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02A2
        gbc.setState(0x90da, 0xbd1b, 0x7940, 0xa451, 0x12ca, 0xa60d, 0x0, 0x1);
        gbc.writeMem(0x90da, { 0x6e });
        gbc.writeMem(0xa60d, { 0xf7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbd1b, gbc.sp());
        EXPECT(0x90db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x90da));
        EXPECT(0xf7, gbc.readMem(0xa60d));
        // 6E 02A3
        gbc.setState(0xa9d7, 0x86a0, 0x84e0, 0x72bb, 0xc3d8, 0xa3e9, 0x1, 0x0);
        gbc.writeMem(0xa3e9, { 0x93 });
        gbc.writeMem(0xa9d7, { 0x6e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x86a0, gbc.sp());
        EXPECT(0xa9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xa3e9));
        EXPECT(0x6e, gbc.readMem(0xa9d7));
        // 6E 02A4
        gbc.setState(0x11, 0x8af5, 0x2510, 0x5e9f, 0x2d5e, 0x9c5, 0x0, 0x0);
        gbc.writeMem(0x11, { 0x6e });
        gbc.writeMem(0x9c5, { 0x57 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8af5, gbc.sp());
        EXPECT(0x12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02A5
        gbc.setState(0x8085, 0xfef2, 0x3a0, 0xeb9f, 0xd439, 0x1784, 0x0, 0x1);
        gbc.writeMem(0x1784, { 0x7d });
        gbc.writeMem(0x8085, { 0x6e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x8086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8085));
        // 6E 02A6
        gbc.setState(0x3c11, 0xe2ca, 0x1eb0, 0x2b87, 0xaaca, 0xab50, 0x1, 0x0);
        gbc.writeMem(0x3c11, { 0x6e });
        gbc.writeMem(0xab50, { 0x6 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe2ca, gbc.sp());
        EXPECT(0x3c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xab50));
        // 6E 02A7
        gbc.setState(0x435c, 0x4dbb, 0xeb70, 0xa8f1, 0x6a25, 0xfdde, 0x0, 0x0);
        gbc.writeMem(0x435c, { 0x6e });
        gbc.writeMem(0xfdde, { 0x3e });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4dbb, gbc.sp());
        EXPECT(0x435d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xfdde));
        // 6E 02A8
        gbc.setState(0xb173, 0xc3a7, 0x90d0, 0x803a, 0xfb0f, 0xcbb4, 0x1, 0x0);
        gbc.writeMem(0xb173, { 0x6e });
        gbc.writeMem(0xcbb4, { 0x61 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc3a7, gbc.sp());
        EXPECT(0xb174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb173));
        EXPECT(0x61, gbc.readMem(0xcbb4));
        // 6E 02A9
        gbc.setState(0x7d94, 0x65c5, 0x1250, 0x1905, 0x1a0d, 0x4708, 0x0, 0x1);
        gbc.writeMem(0x4708, { 0xfd });
        gbc.writeMem(0x7d94, { 0x6e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x65c5, gbc.sp());
        EXPECT(0x7d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02AA
        gbc.setState(0xb5df, 0x6ce5, 0x6b30, 0x12dd, 0x351f, 0x93c5, 0x0, 0x1);
        gbc.writeMem(0x93c5, { 0x9b });
        gbc.writeMem(0xb5df, { 0x6e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6ce5, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x93c5));
        EXPECT(0x6e, gbc.readMem(0xb5df));
        // 6E 02AB
        gbc.setState(0x3c5a, 0x17e3, 0x3580, 0x5337, 0xed32, 0x8440, 0x1, 0x1);
        gbc.writeMem(0x3c5a, { 0x6e });
        gbc.writeMem(0x8440, { 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x17e3, gbc.sp());
        EXPECT(0x3c5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8440));
        // 6E 02AC
        gbc.setState(0x1db1, 0xc82b, 0x160, 0xc2e1, 0xb214, 0x45c6, 0x0, 0x1);
        gbc.writeMem(0x1db1, { 0x6e });
        gbc.writeMem(0x45c6, { 0xb8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc82b, gbc.sp());
        EXPECT(0x1db2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02AD
        gbc.setState(0xc936, 0xfbdb, 0xe540, 0x4151, 0x4f92, 0xdb66, 0x1, 0x0);
        gbc.writeMem(0xc936, { 0x6e });
        gbc.writeMem(0xdb66, { 0xd0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfbdb, gbc.sp());
        EXPECT(0xc937, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc936));
        EXPECT(0xd0, gbc.readMem(0xdb66));
        // 6E 02AE
        gbc.setState(0xb81d, 0x8366, 0xeac0, 0x8033, 0x466, 0x5ae6, 0x0, 0x1);
        gbc.writeMem(0x5ae6, { 0x5 });
        gbc.writeMem(0xb81d, { 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb81d));
        // 6E 02AF
        gbc.setState(0xc1e4, 0xb855, 0x2fb0, 0xc64f, 0x4df, 0xfe0c, 0x1, 0x1);
        gbc.writeMem(0xc1e4, { 0x6e });
        gbc.writeMem(0xfe0c, { 0x65 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb855, gbc.sp());
        EXPECT(0xc1e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc1e4));
        EXPECT(0x65, gbc.readMem(0xfe0c));
        // 6E 02B0
        gbc.setState(0xc8e5, 0xa64c, 0x3240, 0x758d, 0x7ece, 0x7607, 0x0, 0x1);
        gbc.writeMem(0x7607, { 0x6b });
        gbc.writeMem(0xc8e5, { 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa64c, gbc.sp());
        EXPECT(0xc8e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc8e5));
        // 6E 02B1
        gbc.setState(0x90f0, 0xdc06, 0x5b90, 0x30c0, 0xf9d6, 0xa38e, 0x1, 0x0);
        gbc.writeMem(0x90f0, { 0x6e });
        gbc.writeMem(0xa38e, { 0x27 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0x90f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x90f0));
        EXPECT(0x27, gbc.readMem(0xa38e));
        // 6E 02B2
        gbc.setState(0x2393, 0x6019, 0x4c60, 0x4d87, 0x9a32, 0x49af, 0x0, 0x1);
        gbc.writeMem(0x2393, { 0x6e });
        gbc.writeMem(0x49af, { 0xa6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6019, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02B4
        gbc.setState(0x26af, 0xcd23, 0xa8f0, 0x959e, 0x34d6, 0xb2a5, 0x1, 0x1);
        gbc.writeMem(0x26af, { 0x6e });
        gbc.writeMem(0xb2a5, { 0x4f });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0x26b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xb2a5));
        // 6E 02B5
        gbc.setState(0x1503, 0xcd5e, 0xa680, 0xcd2a, 0xee7, 0xb3c5, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0x6e });
        gbc.writeMem(0xb3c5, { 0xcd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcd5e, gbc.sp());
        EXPECT(0x1504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb3c5));
        // 6E 02B6
        gbc.setState(0x3acf, 0x41a8, 0x8ac0, 0x571b, 0x8bd5, 0x36e3, 0x0, 0x1);
        gbc.writeMem(0x36e3, { 0x41 });
        gbc.writeMem(0x3acf, { 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x3ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02B7
        gbc.setState(0xa2bb, 0x4349, 0x78a0, 0xeeda, 0xfd2a, 0xb5e9, 0x0, 0x1);
        gbc.writeMem(0xa2bb, { 0x6e });
        gbc.writeMem(0xb5e9, { 0xb3 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4349, gbc.sp());
        EXPECT(0xa2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa2bb));
        EXPECT(0xb3, gbc.readMem(0xb5e9));
        // 6E 02B8
        gbc.setState(0x71f6, 0x6190, 0xaa50, 0x178d, 0xea46, 0x7a68, 0x0, 0x0);
        gbc.writeMem(0x71f6, { 0x6e });
        gbc.writeMem(0x7a68, { 0xa0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6190, gbc.sp());
        EXPECT(0x71f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02B9
        gbc.setState(0x2934, 0xace4, 0xf0a0, 0x81b0, 0xd658, 0xcc51, 0x0, 0x0);
        gbc.writeMem(0x2934, { 0x6e });
        gbc.writeMem(0xcc51, { 0x1d });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xace4, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xcc51));
        // 6E 02BA
        gbc.setState(0xe520, 0xcffb, 0x4090, 0x87a7, 0xddeb, 0x2634, 0x0, 0x0);
        gbc.writeMem(0x2634, { 0xb0 });
        gbc.writeMem(0xe520, { 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcffb, gbc.sp());
        EXPECT(0xe521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe520));
        // 6E 02BB
        gbc.setState(0x8c7a, 0x8bd, 0x4e10, 0xf559, 0x8403, 0x3431, 0x1, 0x0);
        gbc.writeMem(0x3431, { 0xbf });
        gbc.writeMem(0x8c7a, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8bd, gbc.sp());
        EXPECT(0x8c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8c7a));
        // 6E 02BC
        gbc.setState(0xe9eb, 0x7128, 0x58c0, 0xfd06, 0x4097, 0x9a2f, 0x0, 0x0);
        gbc.writeMem(0x9a2f, { 0x18 });
        gbc.writeMem(0xe9eb, { 0x6e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0xe9ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x9a2f));
        EXPECT(0x6e, gbc.readMem(0xe9eb));
        // 6E 02BE
        gbc.setState(0xb1f1, 0x12f3, 0xf880, 0x26f1, 0xead5, 0xa2e, 0x0, 0x0);
        gbc.writeMem(0xa2e, { 0x4f });
        gbc.writeMem(0xb1f1, { 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x12f3, gbc.sp());
        EXPECT(0xb1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb1f1));
        // 6E 02BF
        gbc.setState(0x2ce4, 0x8b80, 0x350, 0xeeba, 0xd0b9, 0xba0f, 0x0, 0x0);
        gbc.writeMem(0x2ce4, { 0x6e });
        gbc.writeMem(0xba0f, { 0x54 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8b80, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xba0f));
        // 6E 02C0
        gbc.setState(0xb400, 0x620b, 0x72c0, 0x5b0c, 0x8645, 0xb392, 0x0, 0x0);
        gbc.writeMem(0xb392, { 0x27 });
        gbc.writeMem(0xb400, { 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x620b, gbc.sp());
        EXPECT(0xb401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb392));
        EXPECT(0x6e, gbc.readMem(0xb400));
        // 6E 02C1
        gbc.setState(0xc44c, 0x6bd0, 0xb580, 0x48da, 0x43b4, 0x82d2, 0x0, 0x0);
        gbc.writeMem(0x82d2, { 0x2a });
        gbc.writeMem(0xc44c, { 0x6e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6bd0, gbc.sp());
        EXPECT(0xc44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x82d2));
        EXPECT(0x6e, gbc.readMem(0xc44c));
        // 6E 02C2
        gbc.setState(0x80c1, 0xbaec, 0x1490, 0x7495, 0x80e1, 0x5abf, 0x0, 0x1);
        gbc.writeMem(0x5abf, { 0xc });
        gbc.writeMem(0x80c1, { 0x6e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbaec, gbc.sp());
        EXPECT(0x80c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x80c1));
        // 6E 02C3
        gbc.setState(0x585, 0xb91d, 0x9440, 0xc7a0, 0x571e, 0x949f, 0x1, 0x0);
        gbc.writeMem(0x585, { 0x6e });
        gbc.writeMem(0x949f, { 0xd });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0x586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x949f));
        // 6E 02C4
        gbc.setState(0xd25c, 0x3b60, 0x26e0, 0xa97d, 0x161e, 0xf121, 0x1, 0x0);
        gbc.writeMem(0xd25c, { 0x6e });
        gbc.writeMem(0xf121, { 0x97 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3b60, gbc.sp());
        EXPECT(0xd25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd25c));
        EXPECT(0x97, gbc.readMem(0xf121));
        // 6E 02C5
        gbc.setState(0x36dd, 0xf72a, 0x8620, 0x65b8, 0x7f33, 0xcd71, 0x0, 0x1);
        gbc.writeMem(0x36dd, { 0x6e });
        gbc.writeMem(0xcd71, { 0x87 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf72a, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xcd71));
        // 6E 02C7
        gbc.setState(0x79dc, 0x514e, 0x4fd0, 0x947a, 0xd501, 0x88c, 0x1, 0x0);
        gbc.writeMem(0x88c, { 0xdc });
        gbc.writeMem(0x79dc, { 0x6e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x514e, gbc.sp());
        EXPECT(0x79dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02C8
        gbc.setState(0x9ae8, 0xb4f2, 0x650, 0x535b, 0x1053, 0x54d5, 0x1, 0x0);
        gbc.writeMem(0x54d5, { 0x64 });
        gbc.writeMem(0x9ae8, { 0x6e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb4f2, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9ae8));
        // 6E 02C9
        gbc.setState(0x6825, 0x6c58, 0xf7f0, 0xad41, 0x3b38, 0x5ca9, 0x0, 0x1);
        gbc.writeMem(0x5ca9, { 0xee });
        gbc.writeMem(0x6825, { 0x6e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6c58, gbc.sp());
        EXPECT(0x6826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02CA
        gbc.setState(0xd883, 0xd202, 0x25d0, 0x77ba, 0xe109, 0x1e65, 0x0, 0x1);
        gbc.writeMem(0x1e65, { 0x4f });
        gbc.writeMem(0xd883, { 0x6e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xd202, gbc.sp());
        EXPECT(0xd884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd883));
        // 6E 02CB
        gbc.setState(0x2674, 0x5db1, 0xddb0, 0xf537, 0x643f, 0x56bc, 0x1, 0x0);
        gbc.writeMem(0x2674, { 0x6e });
        gbc.writeMem(0x56bc, { 0x1c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5db1, gbc.sp());
        EXPECT(0x2675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02CC
        gbc.setState(0x74bc, 0x21d5, 0xfff0, 0xc7ef, 0xf05c, 0xf631, 0x1, 0x1);
        gbc.writeMem(0x74bc, { 0x6e });
        gbc.writeMem(0xf631, { 0xfd });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x21d5, gbc.sp());
        EXPECT(0x74bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xf631));
        // 6E 02CD
        gbc.setState(0x5f91, 0x3f5c, 0x2230, 0xa6de, 0x4977, 0x6b26, 0x1, 0x1);
        gbc.writeMem(0x5f91, { 0x6e });
        gbc.writeMem(0x6b26, { 0x17 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3f5c, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02CE
        gbc.setState(0xdd7a, 0xae8c, 0x8cf0, 0xd52, 0xf05a, 0x220a, 0x1, 0x1);
        gbc.writeMem(0x220a, { 0x2c });
        gbc.writeMem(0xdd7a, { 0x6e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xae8c, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdd7a));
        // 6E 02CF
        gbc.setState(0xbbdf, 0xc7f8, 0xc1e0, 0x10a2, 0xc4dd, 0xc9d8, 0x1, 0x1);
        gbc.writeMem(0xbbdf, { 0x6e });
        gbc.writeMem(0xc9d8, { 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc7f8, gbc.sp());
        EXPECT(0xbbe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbbdf));
        EXPECT(0x4b, gbc.readMem(0xc9d8));
        // 6E 02D1
        gbc.setState(0x571c, 0xf006, 0x87c0, 0x350a, 0x7e06, 0x99be, 0x0, 0x1);
        gbc.writeMem(0x571c, { 0x6e });
        gbc.writeMem(0x99be, { 0x6f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf006, gbc.sp());
        EXPECT(0x571d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x99be));
        // 6E 02D2
        gbc.setState(0x9759, 0x4c3, 0x2000, 0xc991, 0xea03, 0xa24f, 0x0, 0x1);
        gbc.writeMem(0x9759, { 0x6e });
        gbc.writeMem(0xa24f, { 0x8e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4c3, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9759));
        EXPECT(0x8e, gbc.readMem(0xa24f));
        // 6E 02D3
        gbc.setState(0x19a5, 0xe6e3, 0xbc20, 0x1c9a, 0x4f1c, 0x48b, 0x1, 0x1);
        gbc.writeMem(0x48b, { 0x5d });
        gbc.writeMem(0x19a5, { 0x6e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0x19a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02D4
        gbc.setState(0x9be0, 0x8893, 0x2750, 0xa5bf, 0x528c, 0xf345, 0x0, 0x0);
        gbc.writeMem(0x9be0, { 0x6e });
        gbc.writeMem(0xf345, { 0xe5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8893, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9be0));
        EXPECT(0xe5, gbc.readMem(0xf345));
        // 6E 02D5
        gbc.setState(0x16a5, 0xa18e, 0x630, 0xa52d, 0xbda0, 0xe0c2, 0x0, 0x0);
        gbc.writeMem(0x16a5, { 0x6e });
        gbc.writeMem(0xe0c2, { 0xea });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa18e, gbc.sp());
        EXPECT(0x16a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xe0c2));
        // 6E 02D6
        gbc.setState(0x12bb, 0xf970, 0x4ef0, 0x2b30, 0xc3ba, 0x60ec, 0x0, 0x0);
        gbc.writeMem(0x12bb, { 0x6e });
        gbc.writeMem(0x60ec, { 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf970, gbc.sp());
        EXPECT(0x12bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02D7
        gbc.setState(0x26bc, 0xada4, 0x4140, 0x1594, 0x9fe1, 0xe492, 0x0, 0x0);
        gbc.writeMem(0x26bc, { 0x6e });
        gbc.writeMem(0xe492, { 0x99 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xada4, gbc.sp());
        EXPECT(0x26bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xe492));
        // 6E 02D8
        gbc.setState(0xb0fd, 0x7f87, 0x72f0, 0xa29d, 0x8a08, 0x38e, 0x1, 0x0);
        gbc.writeMem(0x38e, { 0xf9 });
        gbc.writeMem(0xb0fd, { 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7f87, gbc.sp());
        EXPECT(0xb0fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb0fd));
        // 6E 02D9
        gbc.setState(0xdd89, 0xd6a7, 0xf260, 0xc8d, 0xf2e2, 0x6610, 0x1, 0x0);
        gbc.writeMem(0x6610, { 0xc5 });
        gbc.writeMem(0xdd89, { 0x6e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd6a7, gbc.sp());
        EXPECT(0xdd8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdd89));
        // 6E 02DA
        gbc.setState(0x70d8, 0x5188, 0x2000, 0x999d, 0x41ac, 0x902e, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0x6e });
        gbc.writeMem(0x902e, { 0x6 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5188, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x902e));
        // 6E 02DB
        gbc.setState(0x6988, 0x3413, 0xc650, 0x743, 0x8eba, 0x2d67, 0x1, 0x1);
        gbc.writeMem(0x2d67, { 0x40 });
        gbc.writeMem(0x6988, { 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3413, gbc.sp());
        EXPECT(0x6989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02DC
        gbc.setState(0x55ec, 0xdcbc, 0xf30, 0x363f, 0x67f2, 0xd60c, 0x0, 0x0);
        gbc.writeMem(0x55ec, { 0x6e });
        gbc.writeMem(0xd60c, { 0xa0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdcbc, gbc.sp());
        EXPECT(0x55ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd60c));
        // 6E 02DD
        gbc.setState(0x9bd4, 0x893d, 0x8ac0, 0xe3e5, 0x6e4b, 0x6c6c, 0x0, 0x1);
        gbc.writeMem(0x6c6c, { 0xe5 });
        gbc.writeMem(0x9bd4, { 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x893d, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9bd4));
        // 6E 02DE
        gbc.setState(0xd4d6, 0xf7a7, 0xf8f0, 0x8151, 0xc12c, 0x56bc, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0x1c });
        gbc.writeMem(0xd4d6, { 0x6e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf7a7, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd4d6));
        // 6E 02DF
        gbc.setState(0xc9e4, 0x1dd9, 0xb180, 0x2797, 0x74d, 0x4a46, 0x0, 0x0);
        gbc.writeMem(0x4a46, { 0x10 });
        gbc.writeMem(0xc9e4, { 0x6e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1dd9, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc9e4));
        // 6E 02E0
        gbc.setState(0x5e3c, 0xc642, 0xe310, 0xedd0, 0x919, 0xcebb, 0x0, 0x1);
        gbc.writeMem(0x5e3c, { 0x6e });
        gbc.writeMem(0xcebb, { 0x7f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc642, gbc.sp());
        EXPECT(0x5e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xcebb));
        // 6E 02E1
        gbc.setState(0x93f9, 0x9fd3, 0xe610, 0x71f1, 0xcf23, 0x5849, 0x0, 0x0);
        gbc.writeMem(0x5849, { 0x40 });
        gbc.writeMem(0x93f9, { 0x6e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9fd3, gbc.sp());
        EXPECT(0x93fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x93f9));
        // 6E 02E2
        gbc.setState(0xb9bc, 0x53b5, 0x94a0, 0xb838, 0x66d6, 0x1a8d, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0x4a });
        gbc.writeMem(0xb9bc, { 0x6e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x53b5, gbc.sp());
        EXPECT(0xb9bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb9bc));
        // 6E 02E3
        gbc.setState(0x9204, 0xe386, 0xea90, 0x273b, 0xcd1b, 0x446c, 0x0, 0x1);
        gbc.writeMem(0x446c, { 0xf });
        gbc.writeMem(0x9204, { 0x6e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe386, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9204));
        // 6E 02E4
        gbc.setState(0x73b5, 0x23e3, 0xf30, 0xe150, 0x6a66, 0xe269, 0x1, 0x0);
        gbc.writeMem(0x73b5, { 0x6e });
        gbc.writeMem(0xe269, { 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x23e3, gbc.sp());
        EXPECT(0x73b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe269));
        // 6E 02E5
        gbc.setState(0xb787, 0xb2c3, 0xfa0, 0x92af, 0x5be4, 0x4a01, 0x0, 0x0);
        gbc.writeMem(0x4a01, { 0x15 });
        gbc.writeMem(0xb787, { 0x6e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb2c3, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb787));
        // 6E 02E6
        gbc.setState(0x7262, 0x292d, 0x3440, 0xd8e7, 0x35c1, 0xff32, 0x1, 0x0);
        gbc.writeMem(0x7262, { 0x6e });
        gbc.writeMem(0xff32, { 0x92 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x292d, gbc.sp());
        EXPECT(0x7263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xff32));
        // 6E 02E7
        gbc.setState(0xb2a5, 0x2156, 0x27e0, 0x602f, 0x53d2, 0x666b, 0x1, 0x0);
        gbc.writeMem(0x666b, { 0x11 });
        gbc.writeMem(0xb2a5, { 0x6e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2156, gbc.sp());
        EXPECT(0xb2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb2a5));
        // 6E 02E8
        gbc.setState(0x6873, 0xd9e2, 0xd2d0, 0xe543, 0x1283, 0xba6b, 0x1, 0x1);
        gbc.writeMem(0x6873, { 0x6e });
        gbc.writeMem(0xba6b, { 0x42 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd9e2, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xba6b));
        // 6E 02EA
        gbc.setState(0x570f, 0xcbec, 0x1b0, 0xd243, 0x7c49, 0x1ac0, 0x1, 0x0);
        gbc.writeMem(0x1ac0, { 0x94 });
        gbc.writeMem(0x570f, { 0x6e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcbec, gbc.sp());
        EXPECT(0x5710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 02EB
        gbc.setState(0x6b7f, 0xcc82, 0x9ca0, 0x7d9e, 0x819c, 0x726f, 0x1, 0x0);
        gbc.writeMem(0x6b7f, { 0x6e });
        gbc.writeMem(0x726f, { 0xf4 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcc82, gbc.sp());
        EXPECT(0x6b80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02EC
        gbc.setState(0xcc55, 0x6fa3, 0xc9b0, 0x1e19, 0x7f2d, 0x47e2, 0x0, 0x1);
        gbc.writeMem(0x47e2, { 0xc0 });
        gbc.writeMem(0xcc55, { 0x6e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6fa3, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xcc55));
        // 6E 02ED
        gbc.setState(0x42e6, 0x58f1, 0xaa80, 0x49b6, 0xb129, 0xff54, 0x0, 0x0);
        gbc.writeMem(0x42e6, { 0x6e });
        gbc.writeMem(0xff54, { 0xa1 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x58f1, gbc.sp());
        EXPECT(0x42e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xff54));
        // 6E 02EE
        gbc.setState(0x68df, 0xd125, 0xa0c0, 0xa966, 0x898d, 0xd82, 0x1, 0x0);
        gbc.writeMem(0xd82, { 0x77 });
        gbc.writeMem(0x68df, { 0x6e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x68e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02EF
        gbc.setState(0x2829, 0xb72c, 0x6f20, 0x5f8a, 0x464c, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x2829, { 0x6e });
        gbc.writeMem(0x53d8, { 0x28 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0x282a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02F0
        gbc.setState(0xef03, 0xab14, 0x34c0, 0xf9a5, 0x94a4, 0x2986, 0x0, 0x0);
        gbc.writeMem(0x2986, { 0x4 });
        gbc.writeMem(0xef03, { 0x6e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xab14, gbc.sp());
        EXPECT(0xef04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xef03));
        // 6E 02F1
        gbc.setState(0xe233, 0xdb93, 0x1950, 0xc71b, 0x58b7, 0x49d5, 0x1, 0x1);
        gbc.writeMem(0x49d5, { 0xa5 });
        gbc.writeMem(0xe233, { 0x6e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xdb93, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe233));
        // 6E 02F2
        gbc.setState(0x52f6, 0xa9c9, 0xb700, 0xc937, 0xba04, 0xe194, 0x0, 0x0);
        gbc.writeMem(0x52f6, { 0x6e });
        gbc.writeMem(0xe194, { 0xca });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa9c9, gbc.sp());
        EXPECT(0x52f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xe194));
        // 6E 02F3
        gbc.setState(0xc7fe, 0x3541, 0xfda0, 0xd728, 0xb1e2, 0x81ab, 0x0, 0x1);
        gbc.writeMem(0x81ab, { 0xd4 });
        gbc.writeMem(0xc7fe, { 0x6e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3541, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x81ab));
        EXPECT(0x6e, gbc.readMem(0xc7fe));
        // 6E 02F4
        gbc.setState(0xa427, 0x7cfa, 0x4190, 0xaa2d, 0x47bd, 0xd968, 0x0, 0x0);
        gbc.writeMem(0xa427, { 0x6e });
        gbc.writeMem(0xd968, { 0x1e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa427));
        EXPECT(0x1e, gbc.readMem(0xd968));
        // 6E 02F6
        gbc.setState(0x8d46, 0xc60d, 0x8860, 0xff6e, 0x73f3, 0x24d4, 0x1, 0x0);
        gbc.writeMem(0x24d4, { 0x14 });
        gbc.writeMem(0x8d46, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc60d, gbc.sp());
        EXPECT(0x8d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8d46));
        // 6E 02F7
        gbc.setState(0x202a, 0x74c, 0x2560, 0x6517, 0x4841, 0x9096, 0x0, 0x1);
        gbc.writeMem(0x202a, { 0x6e });
        gbc.writeMem(0x9096, { 0x35 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x74c, gbc.sp());
        EXPECT(0x202b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9096));
        // 6E 02F8
        gbc.setState(0x3b7d, 0xa840, 0x44c0, 0xfe4e, 0x4aae, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0x3b7d, { 0x6e });
        gbc.writeMem(0x75bd, { 0xb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa840, gbc.sp());
        EXPECT(0x3b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 02F9
        gbc.setState(0x87a0, 0xb474, 0xa6a0, 0xaa52, 0x327, 0xbf01, 0x1, 0x0);
        gbc.writeMem(0x87a0, { 0x6e });
        gbc.writeMem(0xbf01, { 0xb4 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb474, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x87a0));
        EXPECT(0xb4, gbc.readMem(0xbf01));
        // 6E 02FA
        gbc.setState(0xdbb3, 0xf3ac, 0x98d0, 0xc721, 0xe9db, 0x50b8, 0x0, 0x0);
        gbc.writeMem(0x50b8, { 0xe6 });
        gbc.writeMem(0xdbb3, { 0x6e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0xdbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdbb3));
        // 6E 02FB
        gbc.setState(0x38f6, 0x871c, 0xb950, 0xb575, 0x7cb5, 0xa3cb, 0x1, 0x1);
        gbc.writeMem(0x38f6, { 0x6e });
        gbc.writeMem(0xa3cb, { 0x6b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x871c, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xa3cb));
        // 6E 02FC
        gbc.setState(0x21ba, 0xcf73, 0xc7d0, 0x1660, 0x5f7f, 0x89aa, 0x0, 0x0);
        gbc.writeMem(0x21ba, { 0x6e });
        gbc.writeMem(0x89aa, { 0x60 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xcf73, gbc.sp());
        EXPECT(0x21bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x89aa));
        // 6E 02FD
        gbc.setState(0xc4b1, 0xf21f, 0x24f0, 0x379b, 0xc4b, 0x3b22, 0x0, 0x0);
        gbc.writeMem(0x3b22, { 0xce });
        gbc.writeMem(0xc4b1, { 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf21f, gbc.sp());
        EXPECT(0xc4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc4b1));
        // 6E 02FE
        gbc.setState(0x578e, 0x46c9, 0x68e0, 0x5aeb, 0x8490, 0x9def, 0x1, 0x1);
        gbc.writeMem(0x578e, { 0x6e });
        gbc.writeMem(0x9def, { 0x19 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x578f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x9def));
        // 6E 02FF
        gbc.setState(0xd29c, 0x859d, 0x6390, 0xd358, 0xff78, 0x7970, 0x1, 0x1);
        gbc.writeMem(0x7970, { 0x35 });
        gbc.writeMem(0xd29c, { 0x6e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x859d, gbc.sp());
        EXPECT(0xd29d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd29c));
        // 6E 0301
        gbc.setState(0x39c0, 0x8cb4, 0x48e0, 0xe510, 0x9b4, 0x3bf4, 0x0, 0x0);
        gbc.writeMem(0x39c0, { 0x6e });
        gbc.writeMem(0x3bf4, { 0xe0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8cb4, gbc.sp());
        EXPECT(0x39c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0302
        gbc.setState(0x438a, 0x2c89, 0x4340, 0xe79e, 0x5d1f, 0xbcce, 0x0, 0x0);
        gbc.writeMem(0x438a, { 0x6e });
        gbc.writeMem(0xbcce, { 0x5a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2c89, gbc.sp());
        EXPECT(0x438b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xbcce));
        // 6E 0303
        gbc.setState(0x9d76, 0x114d, 0x6130, 0xd778, 0xfc27, 0xb962, 0x1, 0x0);
        gbc.writeMem(0x9d76, { 0x6e });
        gbc.writeMem(0xb962, { 0x66 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x114d, gbc.sp());
        EXPECT(0x9d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9d76));
        EXPECT(0x66, gbc.readMem(0xb962));
        // 6E 0304
        gbc.setState(0x6ee2, 0xf203, 0xf130, 0xf76f, 0x3cf0, 0xa6f6, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0x6e });
        gbc.writeMem(0xa6f6, { 0x48 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf203, gbc.sp());
        EXPECT(0x6ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6f6));
        // 6E 0305
        gbc.setState(0x7c73, 0x748b, 0x8960, 0xfc95, 0xd9f6, 0xfcc3, 0x0, 0x0);
        gbc.writeMem(0x7c73, { 0x6e });
        gbc.writeMem(0xfcc3, { 0xfd });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x748b, gbc.sp());
        EXPECT(0x7c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xfcc3));
        // 6E 0306
        gbc.setState(0x9966, 0xcd7b, 0xfb40, 0xc766, 0x3bbd, 0x306b, 0x0, 0x1);
        gbc.writeMem(0x306b, { 0x3c });
        gbc.writeMem(0x9966, { 0x6e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcd7b, gbc.sp());
        EXPECT(0x9967, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9966));
        // 6E 0307
        gbc.setState(0x9359, 0x34e3, 0x2160, 0x206b, 0xaca4, 0x42b, 0x0, 0x1);
        gbc.writeMem(0x42b, { 0x79 });
        gbc.writeMem(0x9359, { 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x34e3, gbc.sp());
        EXPECT(0x935a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9359));
        // 6E 0308
        gbc.setState(0x1dde, 0x455, 0xd1b0, 0x8b87, 0xd4d7, 0xfb40, 0x1, 0x1);
        gbc.writeMem(0x1dde, { 0x6e });
        gbc.writeMem(0xfb40, { 0xc7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0x1ddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xfb40));
        // 6E 0309
        gbc.setState(0xb81e, 0xd8ae, 0x46d0, 0x7add, 0x735d, 0x346d, 0x0, 0x0);
        gbc.writeMem(0x346d, { 0xfc });
        gbc.writeMem(0xb81e, { 0x6e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd8ae, gbc.sp());
        EXPECT(0xb81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb81e));
        // 6E 030A
        gbc.setState(0xaa09, 0x475, 0x7300, 0x6b8, 0x70da, 0xaf70, 0x1, 0x0);
        gbc.writeMem(0xaa09, { 0x6e });
        gbc.writeMem(0xaf70, { 0x8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x475, gbc.sp());
        EXPECT(0xaa0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaa09));
        EXPECT(0x8, gbc.readMem(0xaf70));
        // 6E 030B
        gbc.setState(0x716b, 0x1678, 0x81a0, 0xd6b3, 0x9582, 0x65d1, 0x0, 0x1);
        gbc.writeMem(0x65d1, { 0x9c });
        gbc.writeMem(0x716b, { 0x6e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1678, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 030C
        gbc.setState(0xe85e, 0xa5c0, 0x4b80, 0xbaa4, 0x7df4, 0xbb38, 0x1, 0x0);
        gbc.writeMem(0xbb38, { 0xd0 });
        gbc.writeMem(0xe85e, { 0x6e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa5c0, gbc.sp());
        EXPECT(0xe85f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbb38));
        EXPECT(0x6e, gbc.readMem(0xe85e));
        // 6E 030D
        gbc.setState(0x9c37, 0xf2aa, 0xf620, 0x1306, 0xbb9d, 0x70d9, 0x0, 0x0);
        gbc.writeMem(0x70d9, { 0xad });
        gbc.writeMem(0x9c37, { 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf2aa, gbc.sp());
        EXPECT(0x9c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9c37));
        // 6E 030E
        gbc.setState(0x964f, 0xfa3e, 0x3bc0, 0x3a15, 0x2db8, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0x64e6, { 0xdb });
        gbc.writeMem(0x964f, { 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfa3e, gbc.sp());
        EXPECT(0x9650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x964f));
        // 6E 030F
        gbc.setState(0x3d0a, 0xad84, 0x3080, 0x7479, 0x126f, 0xd570, 0x0, 0x1);
        gbc.writeMem(0x3d0a, { 0x6e });
        gbc.writeMem(0xd570, { 0xb2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xad84, gbc.sp());
        EXPECT(0x3d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xd570));
        // 6E 0310
        gbc.setState(0x8df4, 0x49f, 0xbc30, 0xfcea, 0x1bf4, 0x7160, 0x0, 0x1);
        gbc.writeMem(0x7160, { 0x7c });
        gbc.writeMem(0x8df4, { 0x6e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0x8df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8df4));
        // 6E 0311
        gbc.setState(0xab3a, 0xa4f2, 0xe2c0, 0x16d4, 0x318, 0x7e0f, 0x0, 0x1);
        gbc.writeMem(0x7e0f, { 0xc9 });
        gbc.writeMem(0xab3a, { 0x6e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa4f2, gbc.sp());
        EXPECT(0xab3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xab3a));
        // 6E 0312
        gbc.setState(0xb663, 0x62f0, 0x83f0, 0x8037, 0xc327, 0x34f7, 0x0, 0x1);
        gbc.writeMem(0x34f7, { 0x5f });
        gbc.writeMem(0xb663, { 0x6e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x62f0, gbc.sp());
        EXPECT(0xb664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb663));
        // 6E 0313
        gbc.setState(0x4359, 0xefc3, 0x92a0, 0xcd58, 0xa229, 0xf421, 0x1, 0x1);
        gbc.writeMem(0x4359, { 0x6e });
        gbc.writeMem(0xf421, { 0xf5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xefc3, gbc.sp());
        EXPECT(0x435a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xf421));
        // 6E 0314
        gbc.setState(0xac3b, 0x2de, 0x31c0, 0x6b7a, 0xf796, 0x560f, 0x1, 0x1);
        gbc.writeMem(0x560f, { 0x52 });
        gbc.writeMem(0xac3b, { 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2de, gbc.sp());
        EXPECT(0xac3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xac3b));
        // 6E 0315
        gbc.setState(0x69d2, 0xf055, 0x1330, 0x77d7, 0x20f, 0x467b, 0x0, 0x0);
        gbc.writeMem(0x467b, { 0xac });
        gbc.writeMem(0x69d2, { 0x6e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0x69d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0316
        gbc.setState(0xe761, 0x94fa, 0x23f0, 0x4b8b, 0x8b9b, 0xb7d2, 0x1, 0x1);
        gbc.writeMem(0xb7d2, { 0x4d });
        gbc.writeMem(0xe761, { 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x94fa, gbc.sp());
        EXPECT(0xe762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb7d2));
        EXPECT(0x6e, gbc.readMem(0xe761));
        // 6E 0318
        gbc.setState(0xe917, 0xa01e, 0xf6b0, 0x98eb, 0xe1a7, 0xbb92, 0x0, 0x0);
        gbc.writeMem(0xbb92, { 0xbf });
        gbc.writeMem(0xe917, { 0x6e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0xe918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xbb92));
        EXPECT(0x6e, gbc.readMem(0xe917));
        // 6E 031A
        gbc.setState(0x8fb6, 0x589b, 0x3d00, 0x96ba, 0xe56f, 0x32c, 0x0, 0x0);
        gbc.writeMem(0x32c, { 0x32 });
        gbc.writeMem(0x8fb6, { 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x589b, gbc.sp());
        EXPECT(0x8fb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8fb6));
        // 6E 031C
        gbc.setState(0xe480, 0x3b8f, 0x11b0, 0x64a0, 0xd760, 0x8dce, 0x0, 0x0);
        gbc.writeMem(0x8dce, { 0xe });
        gbc.writeMem(0xe480, { 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3b8f, gbc.sp());
        EXPECT(0xe481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x8dce));
        EXPECT(0x6e, gbc.readMem(0xe480));
        // 6E 031E
        gbc.setState(0xe3d0, 0x4bad, 0x72f0, 0xd66b, 0x7be2, 0x144e, 0x1, 0x1);
        gbc.writeMem(0x144e, { 0x7d });
        gbc.writeMem(0xe3d0, { 0x6e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4bad, gbc.sp());
        EXPECT(0xe3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe3d0));
        // 6E 031F
        gbc.setState(0xc22, 0x691b, 0x47c0, 0x6858, 0x1e3c, 0xda, 0x0, 0x1);
        gbc.writeMem(0xda, { 0xcb });
        gbc.writeMem(0xc22, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x691b, gbc.sp());
        EXPECT(0xc23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0320
        gbc.setState(0x4793, 0x5b43, 0x2670, 0x18ba, 0x2849, 0xc572, 0x1, 0x1);
        gbc.writeMem(0x4793, { 0x6e });
        gbc.writeMem(0xc572, { 0x2d });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5b43, gbc.sp());
        EXPECT(0x4794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xc572));
        // 6E 0321
        gbc.setState(0xe3d5, 0xb4df, 0x1ac0, 0xdfb9, 0x2a8c, 0xa8a7, 0x1, 0x0);
        gbc.writeMem(0xa8a7, { 0x44 });
        gbc.writeMem(0xe3d5, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb4df, gbc.sp());
        EXPECT(0xe3d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa8a7));
        EXPECT(0x6e, gbc.readMem(0xe3d5));
        // 6E 0322
        gbc.setState(0x21cb, 0x909e, 0x48e0, 0xc38c, 0x4b59, 0x873c, 0x1, 0x1);
        gbc.writeMem(0x21cb, { 0x6e });
        gbc.writeMem(0x873c, { 0x38 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x909e, gbc.sp());
        EXPECT(0x21cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x873c));
        // 6E 0323
        gbc.setState(0xec83, 0xdaa5, 0x2400, 0x515a, 0xbc73, 0x90b3, 0x0, 0x1);
        gbc.writeMem(0x90b3, { 0x8e });
        gbc.writeMem(0xec83, { 0x6e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdaa5, gbc.sp());
        EXPECT(0xec84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x90b3));
        EXPECT(0x6e, gbc.readMem(0xec83));
        // 6E 0324
        gbc.setState(0x8c43, 0xf0f3, 0xff50, 0xa884, 0x5ee9, 0x3fcd, 0x1, 0x0);
        gbc.writeMem(0x3fcd, { 0x39 });
        gbc.writeMem(0x8c43, { 0x6e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf0f3, gbc.sp());
        EXPECT(0x8c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8c43));
        // 6E 0325
        gbc.setState(0x7e08, 0xdb50, 0x4540, 0x7889, 0x35b, 0x20f3, 0x1, 0x1);
        gbc.writeMem(0x20f3, { 0x9b });
        gbc.writeMem(0x7e08, { 0x6e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x7e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0326
        gbc.setState(0x8860, 0x1f85, 0x2220, 0xa45c, 0x7cf7, 0xfd95, 0x1, 0x1);
        gbc.writeMem(0x8860, { 0x6e });
        gbc.writeMem(0xfd95, { 0xdc });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1f85, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8860));
        EXPECT(0xdc, gbc.readMem(0xfd95));
        // 6E 0328
        gbc.setState(0xb7f1, 0xbe93, 0x4ea0, 0x9256, 0xceef, 0x21c2, 0x1, 0x1);
        gbc.writeMem(0x21c2, { 0xaa });
        gbc.writeMem(0xb7f1, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xbe93, gbc.sp());
        EXPECT(0xb7f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb7f1));
        // 6E 0329
        gbc.setState(0x60e4, 0x7e96, 0xcee0, 0x5c29, 0x872b, 0xcef5, 0x0, 0x1);
        gbc.writeMem(0x60e4, { 0x6e });
        gbc.writeMem(0xcef5, { 0xb7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7e96, gbc.sp());
        EXPECT(0x60e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcef5));
        // 6E 032A
        gbc.setState(0xdffe, 0x9f20, 0x3870, 0x355f, 0x8196, 0x35ff, 0x1, 0x1);
        gbc.writeMem(0x35ff, { 0xfb });
        gbc.writeMem(0xdffe, { 0x6e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f20, gbc.sp());
        EXPECT(0xdfff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdffe));
        // 6E 032B
        gbc.setState(0x809d, 0x18ad, 0xfaf0, 0xe24f, 0xb903, 0xfe36, 0x0, 0x1);
        gbc.writeMem(0x809d, { 0x6e });
        gbc.writeMem(0xfe36, { 0xa6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x18ad, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x809d));
        EXPECT(0xa6, gbc.readMem(0xfe36));
        // 6E 032C
        gbc.setState(0x462e, 0x43ea, 0x2bc0, 0x24c1, 0xefd0, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x462e, { 0x6e });
        gbc.writeMem(0x6bbf, { 0x29 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x43ea, gbc.sp());
        EXPECT(0x462f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 032D
        gbc.setState(0xb97f, 0x7f18, 0xfcc0, 0x1535, 0x3da4, 0x5c76, 0x0, 0x0);
        gbc.writeMem(0x5c76, { 0xb });
        gbc.writeMem(0xb97f, { 0x6e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7f18, gbc.sp());
        EXPECT(0xb980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb97f));
        // 6E 032E
        gbc.setState(0x47bf, 0x2df7, 0x8dc0, 0x1076, 0x9f56, 0x23b3, 0x1, 0x1);
        gbc.writeMem(0x23b3, { 0xeb });
        gbc.writeMem(0x47bf, { 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2df7, gbc.sp());
        EXPECT(0x47c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 032F
        gbc.setState(0x70b4, 0xf4e6, 0x26e0, 0xf810, 0xd96b, 0x124a, 0x1, 0x0);
        gbc.writeMem(0x124a, { 0x97 });
        gbc.writeMem(0x70b4, { 0x6e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf4e6, gbc.sp());
        EXPECT(0x70b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0330
        gbc.setState(0x59c3, 0xd21b, 0xa410, 0x6ffa, 0x78fc, 0xdabf, 0x1, 0x1);
        gbc.writeMem(0x59c3, { 0x6e });
        gbc.writeMem(0xdabf, { 0x49 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd21b, gbc.sp());
        EXPECT(0x59c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xdabf));
        // 6E 0331
        gbc.setState(0x9a96, 0x6cb6, 0x2300, 0xbe02, 0x1b47, 0x9649, 0x1, 0x1);
        gbc.writeMem(0x9649, { 0x2d });
        gbc.writeMem(0x9a96, { 0x6e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6cb6, gbc.sp());
        EXPECT(0x9a97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9649));
        EXPECT(0x6e, gbc.readMem(0x9a96));
        // 6E 0332
        gbc.setState(0xc4b9, 0x6ef8, 0x7f90, 0x2ce4, 0xcb97, 0x8ca8, 0x1, 0x0);
        gbc.writeMem(0x8ca8, { 0xdf });
        gbc.writeMem(0xc4b9, { 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6ef8, gbc.sp());
        EXPECT(0xc4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x8ca8));
        EXPECT(0x6e, gbc.readMem(0xc4b9));
        // 6E 0333
        gbc.setState(0x1183, 0xc9f5, 0xe000, 0xcd8b, 0x361d, 0xf3e6, 0x0, 0x1);
        gbc.writeMem(0x1183, { 0x6e });
        gbc.writeMem(0xf3e6, { 0xc3 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc9f5, gbc.sp());
        EXPECT(0x1184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xf3e6));
        // 6E 0334
        gbc.setState(0x7d5f, 0xbf9d, 0xde0, 0x8753, 0x5666, 0x6ce6, 0x1, 0x0);
        gbc.writeMem(0x6ce6, { 0xc0 });
        gbc.writeMem(0x7d5f, { 0x6e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbf9d, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0335
        gbc.setState(0x38bb, 0x895d, 0xe770, 0x5216, 0x76d2, 0xf6, 0x0, 0x1);
        gbc.writeMem(0xf6, { 0xc6 });
        gbc.writeMem(0x38bb, { 0x6e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x895d, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0336
        gbc.setState(0x8b9f, 0x273a, 0x18a0, 0x7cd1, 0xebcb, 0x4f10, 0x1, 0x1);
        gbc.writeMem(0x4f10, { 0xc9 });
        gbc.writeMem(0x8b9f, { 0x6e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x273a, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8b9f));
        // 6E 0337
        gbc.setState(0x636f, 0x99b5, 0x7b20, 0xe48d, 0x88e5, 0x89ae, 0x1, 0x1);
        gbc.writeMem(0x636f, { 0x6e });
        gbc.writeMem(0x89ae, { 0xcc });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x99b5, gbc.sp());
        EXPECT(0x6370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x89ae));
        // 6E 0338
        gbc.setState(0x701, 0x7c66, 0xe10, 0x2dab, 0xabf3, 0x7031, 0x1, 0x1);
        gbc.writeMem(0x701, { 0x6e });
        gbc.writeMem(0x7031, { 0x14 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7c66, gbc.sp());
        EXPECT(0x702, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0339
        gbc.setState(0xc2f, 0xe285, 0x4c40, 0xe838, 0x5228, 0x462, 0x0, 0x0);
        gbc.writeMem(0x462, { 0xb4 });
        gbc.writeMem(0xc2f, { 0x6e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe285, gbc.sp());
        EXPECT(0xc30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 033A
        gbc.setState(0xd5cb, 0xd65e, 0xafb0, 0x8b6a, 0x5377, 0x9199, 0x1, 0x1);
        gbc.writeMem(0x9199, { 0x8d });
        gbc.writeMem(0xd5cb, { 0x6e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd65e, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9199));
        EXPECT(0x6e, gbc.readMem(0xd5cb));
        // 6E 033B
        gbc.setState(0x2c38, 0xbaac, 0x2790, 0x41e1, 0x6d07, 0x9979, 0x0, 0x1);
        gbc.writeMem(0x2c38, { 0x6e });
        gbc.writeMem(0x9979, { 0x8d });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xbaac, gbc.sp());
        EXPECT(0x2c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x9979));
        // 6E 033C
        gbc.setState(0x1785, 0x1eb, 0xd020, 0x9be9, 0xd805, 0xfc3f, 0x0, 0x1);
        gbc.writeMem(0x1785, { 0x6e });
        gbc.writeMem(0xfc3f, { 0x10 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1eb, gbc.sp());
        EXPECT(0x1786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xfc3f));
        // 6E 033D
        gbc.setState(0x223a, 0x4992, 0xb790, 0xe96f, 0x628, 0x90e5, 0x0, 0x1);
        gbc.writeMem(0x223a, { 0x6e });
        gbc.writeMem(0x90e5, { 0x22 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4992, gbc.sp());
        EXPECT(0x223b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0x90e5));
        // 6E 033E
        gbc.setState(0x6e5e, 0x3bf7, 0xea20, 0xd02, 0x8711, 0xceac, 0x1, 0x1);
        gbc.writeMem(0x6e5e, { 0x6e });
        gbc.writeMem(0xceac, { 0x50 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3bf7, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xceac));
        // 6E 033F
        gbc.setState(0x104e, 0x58ae, 0x2160, 0x695f, 0x89c0, 0x70e, 0x1, 0x0);
        gbc.writeMem(0x70e, { 0x87 });
        gbc.writeMem(0x104e, { 0x6e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x58ae, gbc.sp());
        EXPECT(0x104f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0340
        gbc.setState(0xaebd, 0x9917, 0xcb00, 0x3c23, 0x7b9e, 0xca6c, 0x0, 0x1);
        gbc.writeMem(0xaebd, { 0x6e });
        gbc.writeMem(0xca6c, { 0x7d });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9917, gbc.sp());
        EXPECT(0xaebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xaebd));
        EXPECT(0x7d, gbc.readMem(0xca6c));
        // 6E 0341
        gbc.setState(0x61ec, 0x8d96, 0x1ed0, 0xd9ce, 0x9c1f, 0x5a4c, 0x1, 0x0);
        gbc.writeMem(0x5a4c, { 0x1a });
        gbc.writeMem(0x61ec, { 0x6e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8d96, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0342
        gbc.setState(0x20b9, 0xacc1, 0x86f0, 0x469, 0xf7e6, 0xf200, 0x1, 0x1);
        gbc.writeMem(0x20b9, { 0x6e });
        gbc.writeMem(0xf200, { 0x82 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xacc1, gbc.sp());
        EXPECT(0x20ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xf200));
        // 6E 0343
        gbc.setState(0x2abf, 0xe90c, 0x3ff0, 0x4e21, 0xc419, 0xb849, 0x1, 0x0);
        gbc.writeMem(0x2abf, { 0x6e });
        gbc.writeMem(0xb849, { 0xcc });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe90c, gbc.sp());
        EXPECT(0x2ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xb849));
        // 6E 0344
        gbc.setState(0x13d9, 0xe51b, 0x7090, 0xffaf, 0x654a, 0x1f10, 0x1, 0x1);
        gbc.writeMem(0x13d9, { 0x6e });
        gbc.writeMem(0x1f10, { 0x6c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe51b, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0345
        gbc.setState(0x6f2b, 0x5c89, 0x1600, 0xcfbd, 0xbc5, 0xe808, 0x1, 0x0);
        gbc.writeMem(0x6f2b, { 0x6e });
        gbc.writeMem(0xe808, { 0x38 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5c89, gbc.sp());
        EXPECT(0x6f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xe808));
        // 6E 0346
        gbc.setState(0x3235, 0x1c6b, 0x8880, 0xdc28, 0x53b8, 0x2cf1, 0x0, 0x0);
        gbc.writeMem(0x2cf1, { 0x78 });
        gbc.writeMem(0x3235, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1c6b, gbc.sp());
        EXPECT(0x3236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0347
        gbc.setState(0xd142, 0xb6a0, 0x4740, 0x7842, 0x2acb, 0xc99, 0x1, 0x0);
        gbc.writeMem(0xc99, { 0xb4 });
        gbc.writeMem(0xd142, { 0x6e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xb6a0, gbc.sp());
        EXPECT(0xd143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd142));
        // 6E 0348
        gbc.setState(0xa2a5, 0x7c98, 0xaec0, 0xd07f, 0x9d4b, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0xa2a5, { 0x6e });
        gbc.writeMem(0xfc9f, { 0xe4 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7c98, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa2a5));
        EXPECT(0xe4, gbc.readMem(0xfc9f));
        // 6E 0349
        gbc.setState(0xa8ea, 0xc88f, 0x91b0, 0xccbd, 0x13ac, 0x89c1, 0x1, 0x0);
        gbc.writeMem(0x89c1, { 0x80 });
        gbc.writeMem(0xa8ea, { 0x6e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0xa8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x89c1));
        EXPECT(0x6e, gbc.readMem(0xa8ea));
        // 6E 034A
        gbc.setState(0x95e0, 0x44d3, 0x7f70, 0x31be, 0x6293, 0x366, 0x0, 0x1);
        gbc.writeMem(0x366, { 0x77 });
        gbc.writeMem(0x95e0, { 0x6e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x44d3, gbc.sp());
        EXPECT(0x95e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x95e0));
        // 6E 034B
        gbc.setState(0x6abd, 0x850c, 0x7a70, 0xae6, 0x24f, 0xe5bb, 0x0, 0x1);
        gbc.writeMem(0x6abd, { 0x6e });
        gbc.writeMem(0xe5bb, { 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x850c, gbc.sp());
        EXPECT(0x6abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xe5bb));
        // 6E 034C
        gbc.setState(0xb9d3, 0x5dce, 0xc0d0, 0x4d81, 0xab61, 0x4f6a, 0x0, 0x1);
        gbc.writeMem(0x4f6a, { 0xc7 });
        gbc.writeMem(0xb9d3, { 0x6e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5dce, gbc.sp());
        EXPECT(0xb9d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb9d3));
        // 6E 034D
        gbc.setState(0x4e26, 0x2df7, 0x4760, 0x7248, 0xd0af, 0x5706, 0x1, 0x0);
        gbc.writeMem(0x4e26, { 0x6e });
        gbc.writeMem(0x5706, { 0xcf });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2df7, gbc.sp());
        EXPECT(0x4e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 034E
        gbc.setState(0x58b4, 0x8f6c, 0xb70, 0x7b28, 0x294c, 0x113d, 0x0, 0x0);
        gbc.writeMem(0x113d, { 0x23 });
        gbc.writeMem(0x58b4, { 0x6e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8f6c, gbc.sp());
        EXPECT(0x58b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 034F
        gbc.setState(0x2892, 0x96b5, 0x3b70, 0x2754, 0xbaa, 0x950, 0x1, 0x0);
        gbc.writeMem(0x950, { 0x8e });
        gbc.writeMem(0x2892, { 0x6e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x96b5, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0350
        gbc.setState(0xb6e9, 0x3aaa, 0xaac0, 0x727f, 0x598d, 0xd00b, 0x0, 0x1);
        gbc.writeMem(0xb6e9, { 0x6e });
        gbc.writeMem(0xd00b, { 0x1e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3aaa, gbc.sp());
        EXPECT(0xb6ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb6e9));
        EXPECT(0x1e, gbc.readMem(0xd00b));
        // 6E 0352
        gbc.setState(0x5658, 0x1852, 0x480, 0xcafc, 0xd86d, 0x4ae1, 0x0, 0x0);
        gbc.writeMem(0x4ae1, { 0x6f });
        gbc.writeMem(0x5658, { 0x6e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0353
        gbc.setState(0xe055, 0x6ccc, 0x7ef0, 0x37c6, 0x5b96, 0x7946, 0x0, 0x1);
        gbc.writeMem(0x7946, { 0xfb });
        gbc.writeMem(0xe055, { 0x6e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6ccc, gbc.sp());
        EXPECT(0xe056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe055));
        // 6E 0354
        gbc.setState(0x6421, 0x8d0a, 0xd160, 0x9b7b, 0x3c23, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x6421, { 0x6e });
        gbc.writeMem(0xba53, { 0x9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8d0a, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xba53));
        // 6E 0355
        gbc.setState(0x872c, 0xf3e3, 0x7af0, 0xd0da, 0x9bf3, 0x5455, 0x0, 0x0);
        gbc.writeMem(0x5455, { 0xb8 });
        gbc.writeMem(0x872c, { 0x6e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf3e3, gbc.sp());
        EXPECT(0x872d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x872c));
        // 6E 0356
        gbc.setState(0x4874, 0xe3c, 0x1db0, 0x2055, 0x143f, 0xe74f, 0x0, 0x1);
        gbc.writeMem(0x4874, { 0x6e });
        gbc.writeMem(0xe74f, { 0xb2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe3c, gbc.sp());
        EXPECT(0x4875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xe74f));
        // 6E 0357
        gbc.setState(0xb056, 0xab1d, 0x55d0, 0xfe63, 0x63a9, 0x9bcf, 0x1, 0x0);
        gbc.writeMem(0x9bcf, { 0x71 });
        gbc.writeMem(0xb056, { 0x6e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0xb057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x9bcf));
        EXPECT(0x6e, gbc.readMem(0xb056));
        // 6E 0358
        gbc.setState(0xa21d, 0xaf80, 0xcf90, 0x2c74, 0x7695, 0xf639, 0x1, 0x0);
        gbc.writeMem(0xa21d, { 0x6e });
        gbc.writeMem(0xf639, { 0xfa });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0xa21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa21d));
        EXPECT(0xfa, gbc.readMem(0xf639));
        // 6E 0359
        gbc.setState(0xeb3f, 0x4154, 0xcda0, 0x704c, 0xb3ea, 0xd7c9, 0x0, 0x0);
        gbc.writeMem(0xd7c9, { 0x53 });
        gbc.writeMem(0xeb3f, { 0x6e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4154, gbc.sp());
        EXPECT(0xeb40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xd7c9));
        EXPECT(0x6e, gbc.readMem(0xeb3f));
        // 6E 035A
        gbc.setState(0x54f4, 0x43c8, 0xed70, 0x870b, 0x325d, 0x8ce1, 0x0, 0x0);
        gbc.writeMem(0x54f4, { 0x6e });
        gbc.writeMem(0x8ce1, { 0xa9 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0x54f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8ce1));
        // 6E 035B
        gbc.setState(0xb0cb, 0xeb24, 0x2f40, 0x6869, 0x257b, 0x23f, 0x0, 0x0);
        gbc.writeMem(0x23f, { 0xd6 });
        gbc.writeMem(0xb0cb, { 0x6e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeb24, gbc.sp());
        EXPECT(0xb0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb0cb));
        // 6E 035C
        gbc.setState(0x7c87, 0x61ed, 0x3360, 0x2100, 0x18e7, 0x35e9, 0x0, 0x0);
        gbc.writeMem(0x35e9, { 0x84 });
        gbc.writeMem(0x7c87, { 0x6e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 035D
        gbc.setState(0x6cfa, 0x93d, 0x11d0, 0x5cba, 0x7b0c, 0x17d6, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xfe });
        gbc.writeMem(0x6cfa, { 0x6e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x93d, gbc.sp());
        EXPECT(0x6cfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 035E
        gbc.setState(0x3469, 0x9c30, 0x5c20, 0x825, 0xedb7, 0xafc2, 0x1, 0x1);
        gbc.writeMem(0x3469, { 0x6e });
        gbc.writeMem(0xafc2, { 0xae });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9c30, gbc.sp());
        EXPECT(0x346a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xafc2));
        // 6E 035F
        gbc.setState(0xd23d, 0x65d5, 0x29b0, 0xed70, 0xde8b, 0xf9a8, 0x0, 0x1);
        gbc.writeMem(0xd23d, { 0x6e });
        gbc.writeMem(0xf9a8, { 0x10 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x65d5, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd23d));
        EXPECT(0x10, gbc.readMem(0xf9a8));
        // 6E 0360
        gbc.setState(0x9cbe, 0xd7fd, 0x30e0, 0xe1f3, 0x5104, 0xd324, 0x0, 0x1);
        gbc.writeMem(0x9cbe, { 0x6e });
        gbc.writeMem(0xd324, { 0xec });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0x9cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9cbe));
        EXPECT(0xec, gbc.readMem(0xd324));
        // 6E 0361
        gbc.setState(0x25ac, 0x57e9, 0xbea0, 0x5217, 0x68ea, 0xaac9, 0x1, 0x1);
        gbc.writeMem(0x25ac, { 0x6e });
        gbc.writeMem(0xaac9, { 0xff });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xaac9));
        // 6E 0362
        gbc.setState(0x553d, 0x4289, 0x12f0, 0x143, 0x685a, 0x998a, 0x0, 0x0);
        gbc.writeMem(0x553d, { 0x6e });
        gbc.writeMem(0x998a, { 0xe });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4289, gbc.sp());
        EXPECT(0x553e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x998a));
        // 6E 0363
        gbc.setState(0x4252, 0x3993, 0x66f0, 0xc74e, 0x9536, 0x9190, 0x1, 0x1);
        gbc.writeMem(0x4252, { 0x6e });
        gbc.writeMem(0x9190, { 0x2a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3993, gbc.sp());
        EXPECT(0x4253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9190));
        // 6E 0364
        gbc.setState(0x3c0f, 0xeb9c, 0x3c30, 0x682a, 0xb800, 0xc4ea, 0x1, 0x1);
        gbc.writeMem(0x3c0f, { 0x6e });
        gbc.writeMem(0xc4ea, { 0xb1 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xeb9c, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xc4ea));
        // 6E 0365
        gbc.setState(0x8ae7, 0x1b30, 0xc420, 0x863c, 0x3b67, 0xa8e5, 0x0, 0x0);
        gbc.writeMem(0x8ae7, { 0x6e });
        gbc.writeMem(0xa8e5, { 0x80 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1b30, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8ae7));
        EXPECT(0x80, gbc.readMem(0xa8e5));
        // 6E 0366
        gbc.setState(0x7eb6, 0xa990, 0x1de0, 0x99a1, 0x81b3, 0x5190, 0x0, 0x0);
        gbc.writeMem(0x5190, { 0xf6 });
        gbc.writeMem(0x7eb6, { 0x6e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa990, gbc.sp());
        EXPECT(0x7eb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0367
        gbc.setState(0x62de, 0x92a5, 0x9350, 0x26cb, 0xf9bd, 0xa6f6, 0x1, 0x1);
        gbc.writeMem(0x62de, { 0x6e });
        gbc.writeMem(0xa6f6, { 0x48 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x92a5, gbc.sp());
        EXPECT(0x62df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa6f6));
        // 6E 0368
        gbc.setState(0x955c, 0x70c8, 0x5fb0, 0xb510, 0x8186, 0x619f, 0x1, 0x1);
        gbc.writeMem(0x619f, { 0x1c });
        gbc.writeMem(0x955c, { 0x6e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x70c8, gbc.sp());
        EXPECT(0x955d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x955c));
        // 6E 0369
        gbc.setState(0xb12b, 0x8dff, 0xd8e0, 0x7580, 0xab99, 0x1a91, 0x0, 0x0);
        gbc.writeMem(0x1a91, { 0x30 });
        gbc.writeMem(0xb12b, { 0x6e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8dff, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb12b));
        // 6E 036A
        gbc.setState(0x4671, 0x22f, 0x67d0, 0xed57, 0x7674, 0xaab3, 0x1, 0x0);
        gbc.writeMem(0x4671, { 0x6e });
        gbc.writeMem(0xaab3, { 0x70 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x22f, gbc.sp());
        EXPECT(0x4672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xaab3));
        // 6E 036B
        gbc.setState(0x8ec9, 0x3867, 0x4de0, 0x72d0, 0xc60f, 0x6e38, 0x1, 0x0);
        gbc.writeMem(0x6e38, { 0x64 });
        gbc.writeMem(0x8ec9, { 0x6e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3867, gbc.sp());
        EXPECT(0x8eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8ec9));
        // 6E 036C
        gbc.setState(0xb808, 0x7c40, 0x9f00, 0xb1c1, 0xd904, 0x49, 0x0, 0x0);
        gbc.writeMem(0x49, { 0xc0 });
        gbc.writeMem(0xb808, { 0x6e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7c40, gbc.sp());
        EXPECT(0xb809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb808));
        // 6E 036D
        gbc.setState(0xe014, 0xa7f7, 0xb2d0, 0x228e, 0x346c, 0x33d6, 0x1, 0x0);
        gbc.writeMem(0x33d6, { 0xc9 });
        gbc.writeMem(0xe014, { 0x6e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa7f7, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe014));
        // 6E 036E
        gbc.setState(0x9719, 0x4db6, 0xdc00, 0xf33f, 0x6e0b, 0x7906, 0x0, 0x0);
        gbc.writeMem(0x7906, { 0xae });
        gbc.writeMem(0x9719, { 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x971a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9719));
        // 6E 036F
        gbc.setState(0xa0fb, 0x876c, 0x4e50, 0xfb20, 0xad86, 0x366, 0x1, 0x1);
        gbc.writeMem(0x366, { 0x77 });
        gbc.writeMem(0xa0fb, { 0x6e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x876c, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa0fb));
        // 6E 0370
        gbc.setState(0x8989, 0xf807, 0x1470, 0x6bcc, 0x7ef4, 0x999e, 0x0, 0x0);
        gbc.writeMem(0x8989, { 0x6e });
        gbc.writeMem(0x999e, { 0x49 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf807, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8989));
        EXPECT(0x49, gbc.readMem(0x999e));
        // 6E 0371
        gbc.setState(0x6a32, 0xff77, 0x2ae0, 0x6db6, 0xe3d6, 0x5ea7, 0x0, 0x0);
        gbc.writeMem(0x5ea7, { 0x71 });
        gbc.writeMem(0x6a32, { 0x6e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xff77, gbc.sp());
        EXPECT(0x6a33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0372
        gbc.setState(0x1438, 0x97a9, 0x2280, 0x1561, 0xf36, 0x2ef5, 0x1, 0x0);
        gbc.writeMem(0x1438, { 0x6e });
        gbc.writeMem(0x2ef5, { 0x58 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x97a9, gbc.sp());
        EXPECT(0x1439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0373
        gbc.setState(0x6a65, 0xd4b4, 0x5e70, 0x9d16, 0x2c2c, 0x236, 0x1, 0x1);
        gbc.writeMem(0x236, { 0xc3 });
        gbc.writeMem(0x6a65, { 0x6e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd4b4, gbc.sp());
        EXPECT(0x6a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0374
        gbc.setState(0x6754, 0x23aa, 0xde70, 0x1e, 0x719f, 0xe37a, 0x1, 0x1);
        gbc.writeMem(0x6754, { 0x6e });
        gbc.writeMem(0xe37a, { 0xcb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x23aa, gbc.sp());
        EXPECT(0x6755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37a));
        // 6E 0375
        gbc.setState(0x19be, 0x9354, 0x7420, 0xcd83, 0x33fe, 0x54eb, 0x1, 0x0);
        gbc.writeMem(0x19be, { 0x6e });
        gbc.writeMem(0x54eb, { 0x5d });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x19bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0376
        gbc.setState(0x2aff, 0xe29d, 0x6d30, 0x660a, 0xccdd, 0x2591, 0x0, 0x1);
        gbc.writeMem(0x2591, { 0x79 });
        gbc.writeMem(0x2aff, { 0x6e });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0x2b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0377
        gbc.setState(0xeba7, 0xcf88, 0x8a20, 0x3065, 0x40a1, 0x7f84, 0x1, 0x1);
        gbc.writeMem(0x7f84, { 0xa1 });
        gbc.writeMem(0xeba7, { 0x6e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcf88, gbc.sp());
        EXPECT(0xeba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xeba7));
        // 6E 0378
        gbc.setState(0x5f5c, 0xf8b1, 0x3b90, 0x6947, 0x9c4d, 0x7c1c, 0x1, 0x0);
        gbc.writeMem(0x5f5c, { 0x6e });
        gbc.writeMem(0x7c1c, { 0x19 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf8b1, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0379
        gbc.setState(0xba9b, 0x1213, 0xa690, 0xb47f, 0x99bd, 0xbf16, 0x1, 0x1);
        gbc.writeMem(0xba9b, { 0x6e });
        gbc.writeMem(0xbf16, { 0x43 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1213, gbc.sp());
        EXPECT(0xba9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xba9b));
        EXPECT(0x43, gbc.readMem(0xbf16));
        // 6E 037A
        gbc.setState(0xa853, 0x748, 0x190, 0x5674, 0x5b11, 0xccc4, 0x1, 0x0);
        gbc.writeMem(0xa853, { 0x6e });
        gbc.writeMem(0xccc4, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xa854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa853));
        EXPECT(0x65, gbc.readMem(0xccc4));
        // 6E 037D
        gbc.setState(0xb877, 0xc770, 0xf470, 0xf23, 0x94ca, 0x26b, 0x1, 0x0);
        gbc.writeMem(0x26b, { 0xb3 });
        gbc.writeMem(0xb877, { 0x6e });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc770, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb877));
        // 6E 037E
        gbc.setState(0x8ff9, 0x1f50, 0x3680, 0x8891, 0x9a17, 0x195a, 0x0, 0x0);
        gbc.writeMem(0x195a, { 0x8b });
        gbc.writeMem(0x8ff9, { 0x6e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1f50, gbc.sp());
        EXPECT(0x8ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8ff9));
        // 6E 037F
        gbc.setState(0xe727, 0xefcf, 0x3410, 0xb398, 0x8bdf, 0x1221, 0x0, 0x1);
        gbc.writeMem(0x1221, { 0x36 });
        gbc.writeMem(0xe727, { 0x6e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0xe728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe727));
        // 6E 0380
        gbc.setState(0x2af0, 0x5ebf, 0xb910, 0xdf32, 0xbd8b, 0x5eff, 0x0, 0x1);
        gbc.writeMem(0x2af0, { 0x6e });
        gbc.writeMem(0x5eff, { 0xf8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5ebf, gbc.sp());
        EXPECT(0x2af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0381
        gbc.setState(0x29d0, 0x5b03, 0x71f0, 0x43ea, 0xf4d0, 0xc048, 0x1, 0x0);
        gbc.writeMem(0x29d0, { 0x6e });
        gbc.writeMem(0xc048, { 0xa1 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0x29d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xc048));
        // 6E 0382
        gbc.setState(0x7ad2, 0x9d2a, 0xe30, 0xdfca, 0x6ab2, 0x832d, 0x0, 0x1);
        gbc.writeMem(0x7ad2, { 0x6e });
        gbc.writeMem(0x832d, { 0x3d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9d2a, gbc.sp());
        EXPECT(0x7ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0x832d));
        // 6E 0383
        gbc.setState(0x9dbd, 0x4a49, 0x4750, 0x831d, 0x817f, 0xd5fa, 0x0, 0x1);
        gbc.writeMem(0x9dbd, { 0x6e });
        gbc.writeMem(0xd5fa, { 0x30 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4a49, gbc.sp());
        EXPECT(0x9dbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9dbd));
        EXPECT(0x30, gbc.readMem(0xd5fa));
        // 6E 0384
        gbc.setState(0xe982, 0x3a2, 0x7440, 0x55c8, 0x6b2f, 0x36f4, 0x1, 0x1);
        gbc.writeMem(0x36f4, { 0x6d });
        gbc.writeMem(0xe982, { 0x6e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3a2, gbc.sp());
        EXPECT(0xe983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe982));
        // 6E 0385
        gbc.setState(0x6ca0, 0x6235, 0x36e0, 0x17bc, 0x4367, 0x5093, 0x1, 0x0);
        gbc.writeMem(0x5093, { 0x47 });
        gbc.writeMem(0x6ca0, { 0x6e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6235, gbc.sp());
        EXPECT(0x6ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0386
        gbc.setState(0x46ec, 0xee62, 0xee0, 0xda24, 0xb9f5, 0x800f, 0x1, 0x1);
        gbc.writeMem(0x46ec, { 0x6e });
        gbc.writeMem(0x800f, { 0x2f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xee62, gbc.sp());
        EXPECT(0x46ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x800f));
        // 6E 0387
        gbc.setState(0x7a6f, 0xd35e, 0xa30, 0xc6a8, 0xed10, 0xe75, 0x0, 0x1);
        gbc.writeMem(0xe75, { 0x1a });
        gbc.writeMem(0x7a6f, { 0x6e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd35e, gbc.sp());
        EXPECT(0x7a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0388
        gbc.setState(0x3ece, 0x8366, 0xa9b0, 0x132f, 0x2cb8, 0x5554, 0x0, 0x0);
        gbc.writeMem(0x3ece, { 0x6e });
        gbc.writeMem(0x5554, { 0x5b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8366, gbc.sp());
        EXPECT(0x3ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 038A
        gbc.setState(0x8afc, 0xc2ac, 0x9210, 0x7463, 0xaba7, 0x9ed9, 0x0, 0x0);
        gbc.writeMem(0x8afc, { 0x6e });
        gbc.writeMem(0x9ed9, { 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x8afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8afc));
        EXPECT(0x2, gbc.readMem(0x9ed9));
        // 6E 038B
        gbc.setState(0xb139, 0x469e, 0x43d0, 0xbf2b, 0x4894, 0xdd04, 0x0, 0x1);
        gbc.writeMem(0xb139, { 0x6e });
        gbc.writeMem(0xdd04, { 0xbb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0xb13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb139));
        EXPECT(0xbb, gbc.readMem(0xdd04));
        // 6E 038C
        gbc.setState(0x5699, 0x2d95, 0xee00, 0xb518, 0x484a, 0x8914, 0x0, 0x0);
        gbc.writeMem(0x5699, { 0x6e });
        gbc.writeMem(0x8914, { 0x38 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2d95, gbc.sp());
        EXPECT(0x569a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8914));
        // 6E 038D
        gbc.setState(0xf00, 0x279c, 0xe0a0, 0x3820, 0x1d9c, 0x5cdb, 0x0, 0x1);
        gbc.writeMem(0xf00, { 0x6e });
        gbc.writeMem(0x5cdb, { 0xe4 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x279c, gbc.sp());
        EXPECT(0xf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 038E
        gbc.setState(0xc81b, 0x3053, 0x2a30, 0x2fb, 0x2eb0, 0x27b8, 0x1, 0x0);
        gbc.writeMem(0x27b8, { 0x41 });
        gbc.writeMem(0xc81b, { 0x6e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0xc81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc81b));
        // 6E 038F
        gbc.setState(0x744, 0x750, 0x8f30, 0x398a, 0xc726, 0x491a, 0x0, 0x0);
        gbc.writeMem(0x744, { 0x6e });
        gbc.writeMem(0x491a, { 0xfd });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x750, gbc.sp());
        EXPECT(0x745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0390
        gbc.setState(0xaa40, 0x783a, 0xdd10, 0x18c2, 0x7724, 0x8be7, 0x1, 0x0);
        gbc.writeMem(0x8be7, { 0x7a });
        gbc.writeMem(0xaa40, { 0x6e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0xaa41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8be7));
        EXPECT(0x6e, gbc.readMem(0xaa40));
        // 6E 0391
        gbc.setState(0xd988, 0x1ad2, 0xbbd0, 0x1975, 0xf5ed, 0x1952, 0x1, 0x0);
        gbc.writeMem(0x1952, { 0x5f });
        gbc.writeMem(0xd988, { 0x6e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1ad2, gbc.sp());
        EXPECT(0xd989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd988));
        // 6E 0392
        gbc.setState(0x5d70, 0x9469, 0xb70, 0xf56b, 0xea15, 0x7521, 0x1, 0x0);
        gbc.writeMem(0x5d70, { 0x6e });
        gbc.writeMem(0x7521, { 0x72 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9469, gbc.sp());
        EXPECT(0x5d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0393
        gbc.setState(0x5f64, 0x6ad0, 0xc640, 0x2e1b, 0x5c07, 0x1a5b, 0x0, 0x0);
        gbc.writeMem(0x1a5b, { 0x3b });
        gbc.writeMem(0x5f64, { 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6ad0, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0394
        gbc.setState(0xda61, 0x4a56, 0x1ad0, 0xce9, 0x356, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0x6b3d, { 0xe9 });
        gbc.writeMem(0xda61, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4a56, gbc.sp());
        EXPECT(0xda62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda61));
        // 6E 0395
        gbc.setState(0x2527, 0xb6bd, 0xc6a0, 0xa80f, 0xb5bd, 0xc75, 0x0, 0x1);
        gbc.writeMem(0xc75, { 0x3 });
        gbc.writeMem(0x2527, { 0x6e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb6bd, gbc.sp());
        EXPECT(0x2528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0396
        gbc.setState(0x77df, 0x9bcf, 0x560, 0x44cc, 0xafdd, 0x5af6, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0x82 });
        gbc.writeMem(0x77df, { 0x6e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 0397
        gbc.setState(0xa086, 0x1709, 0xdcf0, 0x483b, 0x288d, 0x10bb, 0x0, 0x0);
        gbc.writeMem(0x10bb, { 0x8b });
        gbc.writeMem(0xa086, { 0x6e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0xa087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa086));
        // 6E 0398
        gbc.setState(0x61ea, 0x5aa0, 0x49b0, 0xdade, 0xbc6, 0x1455, 0x1, 0x0);
        gbc.writeMem(0x1455, { 0x6e });
        gbc.writeMem(0x61ea, { 0x6e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5aa0, gbc.sp());
        EXPECT(0x61eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 0399
        gbc.setState(0x5de5, 0xd8ac, 0xe120, 0xdf3, 0xac67, 0xde03, 0x0, 0x0);
        gbc.writeMem(0x5de5, { 0x6e });
        gbc.writeMem(0xde03, { 0xe5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xd8ac, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xde03));
        // 6E 039A
        gbc.setState(0xef3f, 0xa086, 0x7870, 0x238f, 0xfdd2, 0x4673, 0x0, 0x0);
        gbc.writeMem(0x4673, { 0x44 });
        gbc.writeMem(0xef3f, { 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa086, gbc.sp());
        EXPECT(0xef40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xef3f));
        // 6E 039B
        gbc.setState(0x3a37, 0x12d9, 0x9d0, 0x2986, 0xa4ce, 0x444f, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0x6e });
        gbc.writeMem(0x444f, { 0x21 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0x3a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 039C
        gbc.setState(0xe978, 0xc37, 0xb0, 0xc992, 0xadf7, 0xc520, 0x1, 0x0);
        gbc.writeMem(0xc520, { 0x10 });
        gbc.writeMem(0xe978, { 0x6e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc37, gbc.sp());
        EXPECT(0xe979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xc520));
        EXPECT(0x6e, gbc.readMem(0xe978));
        // 6E 039D
        gbc.setState(0x4513, 0x8d65, 0x1830, 0xd580, 0xc79e, 0x95a, 0x1, 0x0);
        gbc.writeMem(0x95a, { 0xb8 });
        gbc.writeMem(0x4513, { 0x6e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8d65, gbc.sp());
        EXPECT(0x4514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 039E
        gbc.setState(0xb229, 0x64aa, 0xcf10, 0x2707, 0xc3e8, 0x3791, 0x0, 0x1);
        gbc.writeMem(0x3791, { 0x47 });
        gbc.writeMem(0xb229, { 0x6e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x64aa, gbc.sp());
        EXPECT(0xb22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb229));
        // 6E 039F
        gbc.setState(0xea59, 0xdaca, 0x32e0, 0xe1eb, 0xbbc6, 0xf002, 0x1, 0x1);
        gbc.writeMem(0xea59, { 0x6e });
        gbc.writeMem(0xf002, { 0x89 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdaca, gbc.sp());
        EXPECT(0xea5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xea59));
        EXPECT(0x89, gbc.readMem(0xf002));
        // 6E 03A0
        gbc.setState(0xc7ec, 0x42d9, 0x8630, 0x1cc6, 0x9132, 0x7534, 0x1, 0x1);
        gbc.writeMem(0x7534, { 0x6d });
        gbc.writeMem(0xc7ec, { 0x6e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x42d9, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc7ec));
        // 6E 03A1
        gbc.setState(0xc369, 0x2a4f, 0x3710, 0x8c0c, 0x39d, 0x3130, 0x1, 0x1);
        gbc.writeMem(0x3130, { 0xef });
        gbc.writeMem(0xc369, { 0x6e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2a4f, gbc.sp());
        EXPECT(0xc36a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xc369));
        // 6E 03A2
        gbc.setState(0xb3d0, 0x185c, 0xd9f0, 0xcf3b, 0xa478, 0xee04, 0x1, 0x1);
        gbc.writeMem(0xb3d0, { 0x6e });
        gbc.writeMem(0xee04, { 0xd2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb3d0));
        EXPECT(0xd2, gbc.readMem(0xee04));
        // 6E 03A3
        gbc.setState(0x47bd, 0xf4f1, 0xef40, 0x50fd, 0x7b45, 0xdbb5, 0x1, 0x0);
        gbc.writeMem(0x47bd, { 0x6e });
        gbc.writeMem(0xdbb5, { 0xcb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf4f1, gbc.sp());
        EXPECT(0x47be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbb5));
        // 6E 03A4
        gbc.setState(0x7afc, 0x6ee9, 0xaa10, 0xc7ca, 0x6a3f, 0x6a94, 0x0, 0x0);
        gbc.writeMem(0x6a94, { 0x76 });
        gbc.writeMem(0x7afc, { 0x6e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6ee9, gbc.sp());
        EXPECT(0x7afd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03A5
        gbc.setState(0xbdc7, 0x4f33, 0xfd90, 0x5ff4, 0x542d, 0xf5fd, 0x0, 0x1);
        gbc.writeMem(0xbdc7, { 0x6e });
        gbc.writeMem(0xf5fd, { 0xef });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0xbdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xbdc7));
        EXPECT(0xef, gbc.readMem(0xf5fd));
        // 6E 03A6
        gbc.setState(0xe5da, 0xce18, 0xdb30, 0xfed0, 0x17c4, 0x4a99, 0x0, 0x0);
        gbc.writeMem(0x4a99, { 0x86 });
        gbc.writeMem(0xe5da, { 0x6e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xce18, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe5da));
        // 6E 03A8
        gbc.setState(0x5cc, 0xc5f9, 0xe1b0, 0xa8ed, 0x4860, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x5cc, { 0x6e });
        gbc.writeMem(0x336f, { 0x20 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc5f9, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03A9
        gbc.setState(0x70b7, 0x3528, 0x6cb0, 0x416a, 0x71fe, 0xa1d8, 0x1, 0x1);
        gbc.writeMem(0x70b7, { 0x6e });
        gbc.writeMem(0xa1d8, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3528, gbc.sp());
        EXPECT(0x70b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa1d8));
        // 6E 03AA
        gbc.setState(0xb552, 0x78ff, 0x3c20, 0xf2e2, 0x3411, 0xd019, 0x1, 0x0);
        gbc.writeMem(0xb552, { 0x6e });
        gbc.writeMem(0xd019, { 0xa4 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x78ff, gbc.sp());
        EXPECT(0xb553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb552));
        EXPECT(0xa4, gbc.readMem(0xd019));
        // 6E 03AB
        gbc.setState(0x827b, 0xb9a, 0x260, 0xf697, 0x2c7b, 0x9660, 0x1, 0x1);
        gbc.writeMem(0x827b, { 0x6e });
        gbc.writeMem(0x9660, { 0xda });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb9a, gbc.sp());
        EXPECT(0x827c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x827b));
        EXPECT(0xda, gbc.readMem(0x9660));
        // 6E 03AC
        gbc.setState(0x827, 0x47e4, 0x1170, 0xeb2, 0xef9a, 0x6b1c, 0x1, 0x1);
        gbc.writeMem(0x827, { 0x6e });
        gbc.writeMem(0x6b1c, { 0xe0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x47e4, gbc.sp());
        EXPECT(0x828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03AD
        gbc.setState(0x13b, 0x8d84, 0x86c0, 0xd5da, 0xeef2, 0x6a0e, 0x0, 0x0);
        gbc.writeMem(0x13b, { 0x6e });
        gbc.writeMem(0x6a0e, { 0xd9 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8d84, gbc.sp());
        EXPECT(0x13c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03AE
        gbc.setState(0xa5f5, 0xe6da, 0xc300, 0x2895, 0x4d70, 0xbb39, 0x1, 0x0);
        gbc.writeMem(0xa5f5, { 0x6e });
        gbc.writeMem(0xbb39, { 0xd1 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe6da, gbc.sp());
        EXPECT(0xa5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa5f5));
        EXPECT(0xd1, gbc.readMem(0xbb39));
        // 6E 03AF
        gbc.setState(0x243a, 0x805e, 0xf090, 0xd74f, 0x4a7f, 0x2178, 0x1, 0x0);
        gbc.writeMem(0x2178, { 0x7d });
        gbc.writeMem(0x243a, { 0x6e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x805e, gbc.sp());
        EXPECT(0x243b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03B0
        gbc.setState(0x72ab, 0xe383, 0x6ff0, 0xde3c, 0x5cf3, 0x4f35, 0x0, 0x0);
        gbc.writeMem(0x4f35, { 0x5c });
        gbc.writeMem(0x72ab, { 0x6e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe383, gbc.sp());
        EXPECT(0x72ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03B1
        gbc.setState(0xd41f, 0xc37c, 0x5050, 0x9ee2, 0x2390, 0x984a, 0x0, 0x0);
        gbc.writeMem(0x984a, { 0xf2 });
        gbc.writeMem(0xd41f, { 0x6e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc37c, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x984a));
        EXPECT(0x6e, gbc.readMem(0xd41f));
        // 6E 03B2
        gbc.setState(0x4db, 0xc537, 0xb540, 0x81fc, 0x65b, 0x6c03, 0x0, 0x1);
        gbc.writeMem(0x4db, { 0x6e });
        gbc.writeMem(0x6c03, { 0x90 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc537, gbc.sp());
        EXPECT(0x4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03B3
        gbc.setState(0x1efe, 0x6150, 0x2790, 0x10e9, 0x9069, 0xca1, 0x1, 0x1);
        gbc.writeMem(0xca1, { 0x59 });
        gbc.writeMem(0x1efe, { 0x6e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6150, gbc.sp());
        EXPECT(0x1eff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03B4
        gbc.setState(0x8b43, 0x49f1, 0x5970, 0x6f91, 0xc925, 0x62ab, 0x0, 0x1);
        gbc.writeMem(0x62ab, { 0x33 });
        gbc.writeMem(0x8b43, { 0x6e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x49f1, gbc.sp());
        EXPECT(0x8b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8b43));
        // 6E 03B5
        gbc.setState(0x126, 0x9bbc, 0xaf80, 0xfb18, 0x76ea, 0x9183, 0x1, 0x1);
        gbc.writeMem(0x126, { 0x6e });
        gbc.writeMem(0x9183, { 0xab });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9bbc, gbc.sp());
        EXPECT(0x127, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9183));
        // 6E 03B6
        gbc.setState(0x70d6, 0x88d, 0xdb20, 0xd37c, 0xa96d, 0xca8a, 0x1, 0x1);
        gbc.writeMem(0x70d6, { 0x6e });
        gbc.writeMem(0xca8a, { 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x88d, gbc.sp());
        EXPECT(0x70d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xca8a));
        // 6E 03B7
        gbc.setState(0x6fe6, 0xfb2c, 0xccb0, 0xa013, 0x4c4b, 0x9f72, 0x1, 0x0);
        gbc.writeMem(0x6fe6, { 0x6e });
        gbc.writeMem(0x9f72, { 0x4d });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfb2c, gbc.sp());
        EXPECT(0x6fe7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x9f72));
        // 6E 03B8
        gbc.setState(0xd167, 0x1b7d, 0x5620, 0x2fd3, 0x1065, 0x9201, 0x1, 0x1);
        gbc.writeMem(0x9201, { 0x16 });
        gbc.writeMem(0xd167, { 0x6e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0xd168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x9201));
        EXPECT(0x6e, gbc.readMem(0xd167));
        // 6E 03BA
        gbc.setState(0x999c, 0x7303, 0x8da0, 0x872, 0xdce, 0x2bea, 0x1, 0x1);
        gbc.writeMem(0x2bea, { 0xda });
        gbc.writeMem(0x999c, { 0x6e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7303, gbc.sp());
        EXPECT(0x999d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x999c));
        // 6E 03BB
        gbc.setState(0x6efc, 0xcda5, 0xd3f0, 0xb5c, 0xc21e, 0x9517, 0x0, 0x0);
        gbc.writeMem(0x6efc, { 0x6e });
        gbc.writeMem(0x9517, { 0xb3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcda5, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x9517));
        // 6E 03BC
        gbc.setState(0x1976, 0xd43f, 0x80a0, 0x7073, 0xdd2, 0xff53, 0x1, 0x1);
        gbc.writeMem(0x1976, { 0x6e });
        gbc.writeMem(0xff53, { 0xd2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd43f, gbc.sp());
        EXPECT(0x1977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xff53));
        // 6E 03BD
        gbc.setState(0xdea3, 0x596e, 0x3210, 0x5e9c, 0x7fda, 0x6a47, 0x0, 0x1);
        gbc.writeMem(0x6a47, { 0x66 });
        gbc.writeMem(0xdea3, { 0x6e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x596e, gbc.sp());
        EXPECT(0xdea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdea3));
        // 6E 03BE
        gbc.setState(0x8398, 0x944d, 0xef50, 0x1681, 0x8705, 0x725a, 0x1, 0x1);
        gbc.writeMem(0x725a, { 0x4d });
        gbc.writeMem(0x8398, { 0x6e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x944d, gbc.sp());
        EXPECT(0x8399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8398));
        // 6E 03BF
        gbc.setState(0xa92f, 0x30cc, 0xaf10, 0x563f, 0x491a, 0x92f3, 0x0, 0x0);
        gbc.writeMem(0x92f3, { 0x75 });
        gbc.writeMem(0xa92f, { 0x6e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x30cc, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x92f3));
        EXPECT(0x6e, gbc.readMem(0xa92f));
        // 6E 03C0
        gbc.setState(0x40de, 0xb032, 0x6860, 0x634c, 0x69ee, 0xa024, 0x0, 0x1);
        gbc.writeMem(0x40de, { 0x6e });
        gbc.writeMem(0xa024, { 0x5b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb032, gbc.sp());
        EXPECT(0x40df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa024));
        // 6E 03C1
        gbc.setState(0x66f4, 0x564c, 0xd340, 0x6047, 0xfc34, 0x2d26, 0x0, 0x1);
        gbc.writeMem(0x2d26, { 0x7a });
        gbc.writeMem(0x66f4, { 0x6e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x564c, gbc.sp());
        EXPECT(0x66f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03C2
        gbc.setState(0x1e7, 0x586a, 0xcc10, 0xd902, 0x2fb6, 0x620e, 0x1, 0x1);
        gbc.writeMem(0x1e7, { 0x6e });
        gbc.writeMem(0x620e, { 0x52 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x586a, gbc.sp());
        EXPECT(0x1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03C3
        gbc.setState(0x468a, 0x5aa6, 0x20c0, 0xb652, 0xe5dc, 0x97c, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xca });
        gbc.writeMem(0x468a, { 0x6e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5aa6, gbc.sp());
        EXPECT(0x468b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03C4
        gbc.setState(0xaa31, 0x2aa7, 0x3de0, 0xf1ba, 0xa117, 0xa48f, 0x1, 0x1);
        gbc.writeMem(0xa48f, { 0x12 });
        gbc.writeMem(0xaa31, { 0x6e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0xaa32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xa48f));
        EXPECT(0x6e, gbc.readMem(0xaa31));
        // 6E 03C5
        gbc.setState(0xcf6, 0x9dc2, 0x8860, 0xc872, 0xacdd, 0x8b04, 0x0, 0x0);
        gbc.writeMem(0xcf6, { 0x6e });
        gbc.writeMem(0x8b04, { 0x21 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9dc2, gbc.sp());
        EXPECT(0xcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x8b04));
        // 6E 03C6
        gbc.setState(0xb50, 0xbede, 0x5a20, 0xb6e3, 0x2814, 0xd045, 0x0, 0x1);
        gbc.writeMem(0xb50, { 0x6e });
        gbc.writeMem(0xd045, { 0x28 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbede, gbc.sp());
        EXPECT(0xb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xd045));
        // 6E 03C7
        gbc.setState(0xe106, 0xfb69, 0x94f0, 0x3db7, 0x38e9, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0x10e2, { 0xa7 });
        gbc.writeMem(0xe106, { 0x6e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0xe107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe106));
        // 6E 03C8
        gbc.setState(0xe566, 0x2475, 0x1960, 0x4c51, 0xd4d, 0x9eea, 0x1, 0x1);
        gbc.writeMem(0x9eea, { 0xf2 });
        gbc.writeMem(0xe566, { 0x6e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2475, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0x9eea));
        EXPECT(0x6e, gbc.readMem(0xe566));
        // 6E 03C9
        gbc.setState(0x220f, 0xc18f, 0xb5e0, 0xb51b, 0x9a6b, 0xbd8e, 0x0, 0x1);
        gbc.writeMem(0x220f, { 0x6e });
        gbc.writeMem(0xbd8e, { 0x83 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc18f, gbc.sp());
        EXPECT(0x2210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbd8e));
        // 6E 03CA
        gbc.setState(0xed4c, 0x743a, 0xedd0, 0xc9bb, 0x9757, 0x7237, 0x0, 0x1);
        gbc.writeMem(0x7237, { 0x6a });
        gbc.writeMem(0xed4c, { 0x6e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x743a, gbc.sp());
        EXPECT(0xed4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xed4c));
        // 6E 03CB
        gbc.setState(0xda45, 0x7c70, 0x37a0, 0x571e, 0x4bad, 0xc70a, 0x1, 0x0);
        gbc.writeMem(0xc70a, { 0x7 });
        gbc.writeMem(0xda45, { 0x6e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7c70, gbc.sp());
        EXPECT(0xda46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xc70a));
        EXPECT(0x6e, gbc.readMem(0xda45));
        // 6E 03CC
        gbc.setState(0x35fb, 0x4c9e, 0x1970, 0xaa7b, 0x62f, 0x9a37, 0x1, 0x0);
        gbc.writeMem(0x35fb, { 0x6e });
        gbc.writeMem(0x9a37, { 0xf4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4c9e, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9a37));
        // 6E 03CD
        gbc.setState(0xe3f3, 0xe4b2, 0x1a50, 0xcfc7, 0x688c, 0x1443, 0x0, 0x0);
        gbc.writeMem(0x1443, { 0x8e });
        gbc.writeMem(0xe3f3, { 0x6e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe4b2, gbc.sp());
        EXPECT(0xe3f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xe3f3));
        // 6E 03CE
        gbc.setState(0xee06, 0x28d8, 0xa4a0, 0xc36c, 0x7012, 0xc966, 0x1, 0x0);
        gbc.writeMem(0xc966, { 0xc1 });
        gbc.writeMem(0xee06, { 0x6e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x28d8, gbc.sp());
        EXPECT(0xee07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc966));
        EXPECT(0x6e, gbc.readMem(0xee06));
        // 6E 03CF
        gbc.setState(0x61ae, 0xcf0f, 0xe720, 0x8421, 0x601c, 0xd768, 0x0, 0x1);
        gbc.writeMem(0x61ae, { 0x6e });
        gbc.writeMem(0xd768, { 0xf7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0x61af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd768));
        // 6E 03D0
        gbc.setState(0x9999, 0x879, 0x8870, 0x3baf, 0xef19, 0x3a0d, 0x1, 0x1);
        gbc.writeMem(0x3a0d, { 0xc7 });
        gbc.writeMem(0x9999, { 0x6e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x879, gbc.sp());
        EXPECT(0x999a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x9999));
        // 6E 03D1
        gbc.setState(0xafce, 0x9a69, 0xb980, 0xfa32, 0xace3, 0xecbb, 0x0, 0x0);
        gbc.writeMem(0xafce, { 0x6e });
        gbc.writeMem(0xecbb, { 0x5a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9a69, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xafce));
        EXPECT(0x5a, gbc.readMem(0xecbb));
        // 6E 03D2
        gbc.setState(0x521b, 0xd8df, 0xe30, 0xa902, 0xa802, 0xc604, 0x1, 0x1);
        gbc.writeMem(0x521b, { 0x6e });
        gbc.writeMem(0xc604, { 0x8e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x521c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xc604));
        // 6E 03D3
        gbc.setState(0xb55b, 0x2013, 0xc3b0, 0xd1dc, 0x6ecf, 0x1687, 0x0, 0x0);
        gbc.writeMem(0x1687, { 0x65 });
        gbc.writeMem(0xb55b, { 0x6e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2013, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb55b));
        // 6E 03D4
        gbc.setState(0xda28, 0xb612, 0x44a0, 0x4cd3, 0xd0e4, 0x448, 0x0, 0x0);
        gbc.writeMem(0x448, { 0x59 });
        gbc.writeMem(0xda28, { 0x6e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb612, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xda28));
        // 6E 03D5
        gbc.setState(0x1cc2, 0xd8f6, 0xb240, 0x966, 0x318f, 0xaa2f, 0x0, 0x0);
        gbc.writeMem(0x1cc2, { 0x6e });
        gbc.writeMem(0xaa2f, { 0xdb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd8f6, gbc.sp());
        EXPECT(0x1cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0xaa2f));
        // 6E 03D6
        gbc.setState(0x6fff, 0xffdb, 0x87e0, 0x2b7c, 0x2ce5, 0xa184, 0x1, 0x1);
        gbc.writeMem(0x6fff, { 0x6e });
        gbc.writeMem(0xa184, { 0x45 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xffdb, gbc.sp());
        EXPECT(0x7000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa184));
        // 6E 03D7
        gbc.setState(0x8067, 0x4af3, 0x3fe0, 0x4b1b, 0x8c05, 0xccff, 0x0, 0x0);
        gbc.writeMem(0x8067, { 0x6e });
        gbc.writeMem(0xccff, { 0x4 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4af3, gbc.sp());
        EXPECT(0x8068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8067));
        EXPECT(0x4, gbc.readMem(0xccff));
        // 6E 03D8
        gbc.setState(0x66c2, 0xdacf, 0x3170, 0x1ef2, 0x857f, 0xf878, 0x1, 0x1);
        gbc.writeMem(0x66c2, { 0x6e });
        gbc.writeMem(0xf878, { 0xe2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0x66c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xf878));
        // 6E 03D9
        gbc.setState(0x71b7, 0xeb7f, 0x5120, 0xc681, 0xa437, 0xec2b, 0x0, 0x0);
        gbc.writeMem(0x71b7, { 0x6e });
        gbc.writeMem(0xec2b, { 0x75 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xeb7f, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xec2b));
        // 6E 03DA
        gbc.setState(0x7fd3, 0x7907, 0x14f0, 0x674b, 0xb390, 0xb1ce, 0x1, 0x1);
        gbc.writeMem(0x7fd3, { 0x6e });
        gbc.writeMem(0xb1ce, { 0xcf });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7907, gbc.sp());
        EXPECT(0x7fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb1ce));
        // 6E 03DC
        gbc.setState(0xd9ba, 0xa0e6, 0x3100, 0x3f9b, 0x3a98, 0x6043, 0x0, 0x1);
        gbc.writeMem(0x6043, { 0x6b });
        gbc.writeMem(0xd9ba, { 0x6e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa0e6, gbc.sp());
        EXPECT(0xd9bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd9ba));
        // 6E 03DD
        gbc.setState(0xa624, 0x7ae4, 0xbaa0, 0x1653, 0xf3ef, 0xca72, 0x0, 0x1);
        gbc.writeMem(0xa624, { 0x6e });
        gbc.writeMem(0xca72, { 0x55 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7ae4, gbc.sp());
        EXPECT(0xa625, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa624));
        EXPECT(0x55, gbc.readMem(0xca72));
        // 6E 03DE
        gbc.setState(0x59d9, 0x6a73, 0xf570, 0x234b, 0xb633, 0xf301, 0x0, 0x0);
        gbc.writeMem(0x59d9, { 0x6e });
        gbc.writeMem(0xf301, { 0x69 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6a73, gbc.sp());
        EXPECT(0x59da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xf301));
        // 6E 03DF
        gbc.setState(0x4fa7, 0x6053, 0x8f0, 0xb611, 0x40f8, 0x58cd, 0x1, 0x0);
        gbc.writeMem(0x4fa7, { 0x6e });
        gbc.writeMem(0x58cd, { 0x86 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6053, gbc.sp());
        EXPECT(0x4fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 6E 03E1
        gbc.setState(0x1a6, 0xc528, 0xa4c0, 0x9f47, 0xfc94, 0xca9b, 0x1, 0x0);
        gbc.writeMem(0x1a6, { 0x6e });
        gbc.writeMem(0xca9b, { 0x90 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc528, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xca9b));
        // 6E 03E2
        gbc.setState(0x1078, 0x2337, 0xcea0, 0xad1c, 0x3b89, 0x671c, 0x1, 0x0);
        gbc.writeMem(0x1078, { 0x6e });
        gbc.writeMem(0x671c, { 0x4 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2337, gbc.sp());
        EXPECT(0x1079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03E3
        gbc.setState(0x83fc, 0x1dea, 0xa840, 0x4897, 0x6082, 0xbaf7, 0x0, 0x0);
        gbc.writeMem(0x83fc, { 0x6e });
        gbc.writeMem(0xbaf7, { 0xbf });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1dea, gbc.sp());
        EXPECT(0x83fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x83fc));
        EXPECT(0xbf, gbc.readMem(0xbaf7));
        // 6E 03E4
        gbc.setState(0x2058, 0x9989, 0x6f00, 0xc75b, 0x394e, 0x3b90, 0x0, 0x0);
        gbc.writeMem(0x2058, { 0x6e });
        gbc.writeMem(0x3b90, { 0x29 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9989, gbc.sp());
        EXPECT(0x2059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03E5
        gbc.setState(0x4a6d, 0x678, 0xc2c0, 0x9581, 0x51fd, 0x33b7, 0x1, 0x1);
        gbc.writeMem(0x33b7, { 0x30 });
        gbc.writeMem(0x4a6d, { 0x6e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x4a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 6E 03E6
        gbc.setState(0xeab, 0xac37, 0xef10, 0x439, 0x8097, 0xde95, 0x0, 0x1);
        gbc.writeMem(0xeab, { 0x6e });
        gbc.writeMem(0xde95, { 0xff });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xde95));
        // 6E 03E7
        gbc.setState(0x2b26, 0x6a46, 0x6ff0, 0xfa46, 0x71f0, 0xc16e, 0x0, 0x0);
        gbc.writeMem(0x2b26, { 0x6e });
        gbc.writeMem(0xc16e, { 0x97 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6a46, gbc.sp());
        EXPECT(0x2b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc16e));
    }
