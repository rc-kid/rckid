    TEST(gbcemu, opcode_cb_02) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 02 0000
        gbc.setState(0x2f0, 0x9d7f, 0xbce0, 0x7929, 0x237b, 0x9658, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0001
        gbc.setState(0x2636, 0x8bf9, 0x98a0, 0x4d91, 0x4157, 0xef46, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8bf9, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0002
        gbc.setState(0xa282, 0x83f3, 0xf760, 0x3763, 0x78fc, 0xb7d6, 0x0, 0x0);
        gbc.writeMem(0xa282, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0xa284, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa282));
        EXPECT(0x2, gbc.readMem(0xa283));
        // CB 02 0003
        gbc.setState(0xb3b0, 0x715f, 0xfa30, 0x967e, 0xd8fd, 0x89a0, 0x1, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x715f, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0x2, gbc.readMem(0xb3b1));
        // CB 02 0004
        gbc.setState(0xa124, 0xc429, 0xcc10, 0xd2c2, 0x739, 0xafbe, 0x1, 0x1);
        gbc.writeMem(0xa124, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0xa126, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa124));
        EXPECT(0x2, gbc.readMem(0xa125));
        // CB 02 0005
        gbc.setState(0x3f8e, 0x8cdc, 0x74e0, 0x369a, 0x2ad5, 0x6c40, 0x1, 0x0);
        gbc.writeMem(0x3f8e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8cdc, gbc.sp());
        EXPECT(0x3f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0006
        gbc.setState(0x2d7b, 0xae91, 0xae50, 0x83e2, 0xc8bf, 0x1544, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x2d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0007
        gbc.setState(0x71d7, 0x93d7, 0xd0e0, 0xd6e1, 0x49b0, 0xd371, 0x1, 0x0);
        gbc.writeMem(0x71d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x93d7, gbc.sp());
        EXPECT(0x71d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0008
        gbc.setState(0xf4f, 0x5092, 0x92c0, 0xd46d, 0xac5e, 0xef60, 0x1, 0x1);
        gbc.writeMem(0xf4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5092, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0009
        gbc.setState(0x8e1e, 0xe21d, 0xdab0, 0x802f, 0xcfd2, 0x6391, 0x0, 0x1);
        gbc.writeMem(0x8e1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe21d, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e1e));
        EXPECT(0x2, gbc.readMem(0x8e1f));
        // CB 02 000A
        gbc.setState(0x2c1c, 0xd79f, 0xaca0, 0xf924, 0x8c57, 0x376d, 0x0, 0x1);
        gbc.writeMem(0x2c1c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd79f, gbc.sp());
        EXPECT(0x2c1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 000B
        gbc.setState(0x32e5, 0x9fb3, 0xb340, 0xcd67, 0x9457, 0xbe0d, 0x0, 0x0);
        gbc.writeMem(0x32e5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9fb3, gbc.sp());
        EXPECT(0x32e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 000C
        gbc.setState(0xc6a6, 0xffde, 0xd620, 0x66a5, 0x4069, 0xef5c, 0x1, 0x0);
        gbc.writeMem(0xc6a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xffde, gbc.sp());
        EXPECT(0xc6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6a6));
        EXPECT(0x2, gbc.readMem(0xc6a7));
        // CB 02 000D
        gbc.setState(0x6ccd, 0xb244, 0xe640, 0xfe44, 0xe62d, 0xd102, 0x1, 0x0);
        gbc.writeMem(0x6ccd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb244, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 000E
        gbc.setState(0x59d7, 0xf4b2, 0xaab0, 0x9706, 0xc3bb, 0x82b5, 0x1, 0x0);
        gbc.writeMem(0x59d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf4b2, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0010
        gbc.setState(0x13f3, 0x13c8, 0x3ca0, 0xd925, 0xf07b, 0xdc6b, 0x0, 0x0);
        gbc.writeMem(0x13f3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0x13f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0011
        gbc.setState(0xc478, 0x42a8, 0x5b20, 0xaca8, 0x4a4f, 0x7666, 0x1, 0x0);
        gbc.writeMem(0xc478, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x42a8, gbc.sp());
        EXPECT(0xc47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc478));
        EXPECT(0x2, gbc.readMem(0xc479));
        // CB 02 0012
        gbc.setState(0x5a05, 0xe9e8, 0xc760, 0xa0a, 0x9485, 0x231f, 0x1, 0x1);
        gbc.writeMem(0x5a05, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe9e8, gbc.sp());
        EXPECT(0x5a07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0014
        gbc.setState(0x77ce, 0x90ba, 0xc050, 0x392, 0xfb7b, 0x47ac, 0x0, 0x1);
        gbc.writeMem(0x77ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x90ba, gbc.sp());
        EXPECT(0x77d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0015
        gbc.setState(0xe39e, 0xc752, 0x5f50, 0x3c22, 0xff1d, 0xd647, 0x0, 0x1);
        gbc.writeMem(0xe39e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc752, gbc.sp());
        EXPECT(0xe3a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39e));
        EXPECT(0x2, gbc.readMem(0xe39f));
        // CB 02 0016
        gbc.setState(0x9672, 0x288, 0x7600, 0x6433, 0xe5af, 0x2f9d, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x288, gbc.sp());
        EXPECT(0x9674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9672));
        EXPECT(0x2, gbc.readMem(0x9673));
        // CB 02 0017
        gbc.setState(0xea3, 0xcad5, 0x7790, 0xdc11, 0xc7b2, 0x2579, 0x0, 0x1);
        gbc.writeMem(0xea3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xcad5, gbc.sp());
        EXPECT(0xea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0018
        gbc.setState(0xa583, 0xd6e8, 0x990, 0x26fe, 0x9dd2, 0x5435, 0x1, 0x1);
        gbc.writeMem(0xa583, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd6e8, gbc.sp());
        EXPECT(0xa585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa583));
        EXPECT(0x2, gbc.readMem(0xa584));
        // CB 02 0019
        gbc.setState(0xd1bb, 0x2de1, 0x3ca0, 0x37c8, 0x4161, 0xee14, 0x1, 0x0);
        gbc.writeMem(0xd1bb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2de1, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bb));
        EXPECT(0x2, gbc.readMem(0xd1bc));
        // CB 02 001A
        gbc.setState(0xafc1, 0xfc6b, 0x83f0, 0x926b, 0xe2f6, 0x47a1, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0xafc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc1));
        EXPECT(0x2, gbc.readMem(0xafc2));
        // CB 02 001B
        gbc.setState(0xd4b6, 0x941d, 0x2a10, 0xd77c, 0xf8c5, 0x23d2, 0x1, 0x1);
        gbc.writeMem(0xd4b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x941d, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4b6));
        EXPECT(0x2, gbc.readMem(0xd4b7));
        // CB 02 001C
        gbc.setState(0xcd5c, 0x915f, 0xb8f0, 0xea0d, 0x148a, 0x3551, 0x1, 0x1);
        gbc.writeMem(0xcd5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x915f, gbc.sp());
        EXPECT(0xcd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5c));
        EXPECT(0x2, gbc.readMem(0xcd5d));
        // CB 02 001D
        gbc.setState(0x62c, 0x764, 0xcc50, 0x2fc7, 0xdc88, 0x1f6d, 0x0, 0x1);
        gbc.writeMem(0x62c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 001E
        gbc.setState(0x33df, 0xa841, 0x2f70, 0xca15, 0xf2f0, 0xf0f0, 0x0, 0x0);
        gbc.writeMem(0x33df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa841, gbc.sp());
        EXPECT(0x33e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 001F
        gbc.setState(0x9b2d, 0x36, 0x28c0, 0x2a8e, 0x7223, 0x8005, 0x0, 0x1);
        gbc.writeMem(0x9b2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x36, gbc.sp());
        EXPECT(0x9b2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2d));
        EXPECT(0x2, gbc.readMem(0x9b2e));
        // CB 02 0020
        gbc.setState(0xe873, 0xf180, 0x150, 0x8871, 0x50a8, 0xbf15, 0x1, 0x0);
        gbc.writeMem(0xe873, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf180, gbc.sp());
        EXPECT(0xe875, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe873));
        EXPECT(0x2, gbc.readMem(0xe874));
        // CB 02 0021
        gbc.setState(0xd2d0, 0x604b, 0x5850, 0xe6a7, 0x92b4, 0x905e, 0x1, 0x0);
        gbc.writeMem(0xd2d0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x604b, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d0));
        EXPECT(0x2, gbc.readMem(0xd2d1));
        // CB 02 0022
        gbc.setState(0x7ff0, 0x5980, 0xd8a0, 0x25c0, 0x4fa9, 0xb6dc, 0x1, 0x0);
        gbc.writeMem(0x7ff0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5980, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0023
        gbc.setState(0x5054, 0x6293, 0xe430, 0x91cf, 0x3b34, 0x43c8, 0x1, 0x0);
        gbc.writeMem(0x5054, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6293, gbc.sp());
        EXPECT(0x5056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0025
        gbc.setState(0x5880, 0x408f, 0x74b0, 0x2696, 0x91c0, 0x6ae8, 0x0, 0x0);
        gbc.writeMem(0x5880, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x408f, gbc.sp());
        EXPECT(0x5882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0026
        gbc.setState(0x2a9d, 0x8e6, 0x8600, 0xa1e, 0x38a5, 0xf36f, 0x0, 0x1);
        gbc.writeMem(0x2a9d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8e6, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0027
        gbc.setState(0x21b6, 0x2a17, 0xe030, 0x6f09, 0x2f78, 0x7a11, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2a17, gbc.sp());
        EXPECT(0x21b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0028
        gbc.setState(0x9de2, 0x4de9, 0x12f0, 0x698d, 0xe296, 0xcf5a, 0x1, 0x0);
        gbc.writeMem(0x9de2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4de9, gbc.sp());
        EXPECT(0x9de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de2));
        EXPECT(0x2, gbc.readMem(0x9de3));
        // CB 02 0029
        gbc.setState(0x1713, 0x8a84, 0xd030, 0xa572, 0xb003, 0x4328, 0x0, 0x1);
        gbc.writeMem(0x1713, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8a84, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 002A
        gbc.setState(0xdba0, 0xa0ec, 0x9200, 0x3e8, 0xb98f, 0x9f3a, 0x0, 0x1);
        gbc.writeMem(0xdba0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa0ec, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba0));
        EXPECT(0x2, gbc.readMem(0xdba1));
        // CB 02 002B
        gbc.setState(0xca69, 0xc445, 0x40f0, 0xf4c0, 0xd4a1, 0xc0d7, 0x0, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc445, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0x2, gbc.readMem(0xca6a));
        // CB 02 002C
        gbc.setState(0x702, 0x204c, 0x6440, 0x21f6, 0x6125, 0x647f, 0x1, 0x0);
        gbc.writeMem(0x702, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x204c, gbc.sp());
        EXPECT(0x704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 002D
        gbc.setState(0x4cda, 0x1fd9, 0x4a30, 0x2c2d, 0xebc8, 0xda9b, 0x0, 0x0);
        gbc.writeMem(0x4cda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1fd9, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 002E
        gbc.setState(0xf6b, 0x5823, 0xd110, 0xcde2, 0xab32, 0x17e1, 0x0, 0x0);
        gbc.writeMem(0xf6b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5823, gbc.sp());
        EXPECT(0xf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 002F
        gbc.setState(0x280, 0x532f, 0xc620, 0x2e9d, 0x2681, 0x8c6e, 0x1, 0x0);
        gbc.writeMem(0x280, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x532f, gbc.sp());
        EXPECT(0x282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0030
        gbc.setState(0x5177, 0xd84d, 0x3320, 0x15cb, 0x280c, 0xbc59, 0x0, 0x0);
        gbc.writeMem(0x5177, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd84d, gbc.sp());
        EXPECT(0x5179, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0031
        gbc.setState(0xd26b, 0x2f9a, 0x5a60, 0x4510, 0x1265, 0xdb5e, 0x0, 0x0);
        gbc.writeMem(0xd26b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2f9a, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26b));
        EXPECT(0x2, gbc.readMem(0xd26c));
        // CB 02 0032
        gbc.setState(0xcd29, 0xe7b0, 0x8490, 0x6649, 0x8435, 0xc750, 0x1, 0x0);
        gbc.writeMem(0xcd29, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd29));
        EXPECT(0x2, gbc.readMem(0xcd2a));
        // CB 02 0033
        gbc.setState(0x6246, 0x6b04, 0xbf0, 0x1f67, 0x3abe, 0xa935, 0x0, 0x0);
        gbc.writeMem(0x6246, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6b04, gbc.sp());
        EXPECT(0x6248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0034
        gbc.setState(0x9938, 0x530, 0x7950, 0x6833, 0xeb2b, 0xee1f, 0x0, 0x0);
        gbc.writeMem(0x9938, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x530, gbc.sp());
        EXPECT(0x993a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9938));
        EXPECT(0x2, gbc.readMem(0x9939));
        // CB 02 0035
        gbc.setState(0xae1d, 0xb190, 0x92f0, 0x415, 0xe71a, 0xe9ab, 0x1, 0x1);
        gbc.writeMem(0xae1d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb190, gbc.sp());
        EXPECT(0xae1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1d));
        EXPECT(0x2, gbc.readMem(0xae1e));
        // CB 02 0036
        gbc.setState(0xd1ef, 0x81ed, 0xf340, 0x46dc, 0xdcc, 0x2d24, 0x0, 0x0);
        gbc.writeMem(0xd1ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x81ed, gbc.sp());
        EXPECT(0xd1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ef));
        EXPECT(0x2, gbc.readMem(0xd1f0));
        // CB 02 0037
        gbc.setState(0x2694, 0xbe45, 0x2860, 0xb2c, 0x4234, 0x4895, 0x1, 0x0);
        gbc.writeMem(0x2694, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x2696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0038
        gbc.setState(0x8965, 0x7882, 0x5fc0, 0x78c4, 0xa47a, 0x8c88, 0x1, 0x1);
        gbc.writeMem(0x8965, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7882, gbc.sp());
        EXPECT(0x8967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8965));
        EXPECT(0x2, gbc.readMem(0x8966));
        // CB 02 003A
        gbc.setState(0x5f88, 0x2b86, 0x5df0, 0x3ac6, 0x6aaf, 0x2b12, 0x1, 0x0);
        gbc.writeMem(0x5f88, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 003B
        gbc.setState(0x18df, 0xeabc, 0xee50, 0xef00, 0xecbe, 0x9f7a, 0x1, 0x1);
        gbc.writeMem(0x18df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeabc, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 003C
        gbc.setState(0x10e8, 0xa543, 0x94d0, 0xc5fe, 0x1d6e, 0xc648, 0x0, 0x1);
        gbc.writeMem(0x10e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0x10ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 003D
        gbc.setState(0x6a8a, 0x556d, 0x8230, 0x6af4, 0x9ae, 0x9ee4, 0x0, 0x1);
        gbc.writeMem(0x6a8a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0x6a8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 003E
        gbc.setState(0x4446, 0xcda7, 0x1a80, 0x4b1a, 0xb66e, 0x927e, 0x0, 0x1);
        gbc.writeMem(0x4446, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0x4448, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 003F
        gbc.setState(0x4a30, 0x6a7c, 0x7ec0, 0x25c6, 0x9009, 0x3276, 0x0, 0x1);
        gbc.writeMem(0x4a30, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a7c, gbc.sp());
        EXPECT(0x4a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0040
        gbc.setState(0x72e9, 0xf1da, 0x66c0, 0x3c13, 0x2cdf, 0x41f9, 0x0, 0x0);
        gbc.writeMem(0x72e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x72eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0041
        gbc.setState(0x438e, 0xad7c, 0x4a0, 0xbeed, 0x6b71, 0x545d, 0x0, 0x1);
        gbc.writeMem(0x438e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xad7c, gbc.sp());
        EXPECT(0x4390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0042
        gbc.setState(0xcfd8, 0xbdf1, 0x2940, 0xcd3, 0xc125, 0x2817, 0x0, 0x1);
        gbc.writeMem(0xcfd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbdf1, gbc.sp());
        EXPECT(0xcfda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd8));
        EXPECT(0x2, gbc.readMem(0xcfd9));
        // CB 02 0043
        gbc.setState(0x7262, 0xe96d, 0x2ef0, 0x371f, 0x215a, 0x8931, 0x1, 0x1);
        gbc.writeMem(0x7262, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe96d, gbc.sp());
        EXPECT(0x7264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0044
        gbc.setState(0x5410, 0x91b1, 0x3be0, 0x2e65, 0x3257, 0x687b, 0x0, 0x1);
        gbc.writeMem(0x5410, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x91b1, gbc.sp());
        EXPECT(0x5412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0045
        gbc.setState(0x9048, 0x6cf4, 0x23c0, 0xc927, 0x7809, 0x1173, 0x1, 0x1);
        gbc.writeMem(0x9048, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6cf4, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9048));
        EXPECT(0x2, gbc.readMem(0x9049));
        // CB 02 0046
        gbc.setState(0x9251, 0x30c2, 0x55b0, 0xaac8, 0xb0b9, 0x2d7, 0x0, 0x1);
        gbc.writeMem(0x9251, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x30c2, gbc.sp());
        EXPECT(0x9253, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9251));
        EXPECT(0x2, gbc.readMem(0x9252));
        // CB 02 0047
        gbc.setState(0xeaa, 0x6bad, 0xa8a0, 0xffb, 0xc542, 0xf139, 0x1, 0x1);
        gbc.writeMem(0xeaa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6bad, gbc.sp());
        EXPECT(0xeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0048
        gbc.setState(0x40f5, 0x1fbb, 0x4710, 0xa455, 0x959d, 0x752d, 0x0, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1fbb, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0049
        gbc.setState(0xdfb0, 0xdc84, 0xf10, 0xc96b, 0x3444, 0x7a32, 0x1, 0x1);
        gbc.writeMem(0xdfb0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdc84, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb0));
        EXPECT(0x2, gbc.readMem(0xdfb1));
        // CB 02 004A
        gbc.setState(0x8c0a, 0x731e, 0x5ba0, 0xd66d, 0x805c, 0x9c96, 0x1, 0x1);
        gbc.writeMem(0x8c0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x731e, gbc.sp());
        EXPECT(0x8c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0a));
        EXPECT(0x2, gbc.readMem(0x8c0b));
        // CB 02 004B
        gbc.setState(0xe7f6, 0xf582, 0x5810, 0x9a43, 0x28ae, 0x4804, 0x0, 0x1);
        gbc.writeMem(0xe7f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0xe7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f6));
        EXPECT(0x2, gbc.readMem(0xe7f7));
        // CB 02 004D
        gbc.setState(0xad68, 0x5373, 0x1f50, 0x5096, 0x8860, 0x6003, 0x1, 0x0);
        gbc.writeMem(0xad68, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5373, gbc.sp());
        EXPECT(0xad6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad68));
        EXPECT(0x2, gbc.readMem(0xad69));
        // CB 02 004E
        gbc.setState(0xb4f6, 0x6f45, 0xaf0, 0x4237, 0xf82b, 0x9f8d, 0x1, 0x1);
        gbc.writeMem(0xb4f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6f45, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f6));
        EXPECT(0x2, gbc.readMem(0xb4f7));
        // CB 02 004F
        gbc.setState(0x2e5e, 0x4d95, 0x2900, 0x4151, 0x10ea, 0xa1f0, 0x0, 0x0);
        gbc.writeMem(0x2e5e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0x2e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0050
        gbc.setState(0x5af6, 0xc5e6, 0x40c0, 0xec66, 0x1c3e, 0x73db, 0x1, 0x0);
        gbc.writeMem(0x5af6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc5e6, gbc.sp());
        EXPECT(0x5af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0051
        gbc.setState(0xbed6, 0xed6f, 0x5f40, 0x1432, 0x68c3, 0x67b1, 0x0, 0x1);
        gbc.writeMem(0xbed6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xed6f, gbc.sp());
        EXPECT(0xbed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed6));
        EXPECT(0x2, gbc.readMem(0xbed7));
        // CB 02 0052
        gbc.setState(0xe5e, 0xedc9, 0x5f0, 0x1aed, 0x9d58, 0x212, 0x1, 0x0);
        gbc.writeMem(0xe5e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xedc9, gbc.sp());
        EXPECT(0xe60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0053
        gbc.setState(0x2527, 0x3c15, 0xd3a0, 0x8a67, 0x2a3c, 0x508a, 0x0, 0x0);
        gbc.writeMem(0x2527, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3c15, gbc.sp());
        EXPECT(0x2529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0054
        gbc.setState(0xc882, 0x5588, 0x7ae0, 0x3fe5, 0x854, 0x66fa, 0x1, 0x0);
        gbc.writeMem(0xc882, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc882));
        EXPECT(0x2, gbc.readMem(0xc883));
        // CB 02 0055
        gbc.setState(0x6154, 0xd50d, 0x9240, 0x6c6c, 0x5866, 0x1533, 0x0, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd50d, gbc.sp());
        EXPECT(0x6156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0056
        gbc.setState(0xdd20, 0x116, 0xf460, 0x9197, 0xbb64, 0x997a, 0x1, 0x1);
        gbc.writeMem(0xdd20, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x116, gbc.sp());
        EXPECT(0xdd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd20));
        EXPECT(0x2, gbc.readMem(0xdd21));
        // CB 02 0057
        gbc.setState(0x5ba1, 0xbfbe, 0xb2c0, 0x968e, 0x71cf, 0x3b99, 0x1, 0x0);
        gbc.writeMem(0x5ba1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbfbe, gbc.sp());
        EXPECT(0x5ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0058
        gbc.setState(0x122a, 0x2553, 0x7e30, 0xb8fa, 0xad66, 0x7808, 0x1, 0x1);
        gbc.writeMem(0x122a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2553, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0059
        gbc.setState(0x686c, 0x60c2, 0xa8d0, 0x16c2, 0x320f, 0x3c92, 0x1, 0x1);
        gbc.writeMem(0x686c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x60c2, gbc.sp());
        EXPECT(0x686e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 005A
        gbc.setState(0x9fb3, 0x934d, 0xa030, 0x3120, 0x68ae, 0x42ef, 0x0, 0x0);
        gbc.writeMem(0x9fb3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x934d, gbc.sp());
        EXPECT(0x9fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fb3));
        EXPECT(0x2, gbc.readMem(0x9fb4));
        // CB 02 005B
        gbc.setState(0xd59f, 0x4f26, 0x7420, 0xed3c, 0xd7ba, 0x3077, 0x0, 0x1);
        gbc.writeMem(0xd59f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4f26, gbc.sp());
        EXPECT(0xd5a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59f));
        EXPECT(0x2, gbc.readMem(0xd5a0));
        // CB 02 005C
        gbc.setState(0xbb60, 0x478, 0x4f80, 0x5666, 0xf9f8, 0x79f6, 0x1, 0x0);
        gbc.writeMem(0xbb60, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0xbb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb60));
        EXPECT(0x2, gbc.readMem(0xbb61));
        // CB 02 005D
        gbc.setState(0xb72c, 0xa2a8, 0x3b50, 0xfe7f, 0xe7d9, 0x4668, 0x1, 0x1);
        gbc.writeMem(0xb72c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa2a8, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72c));
        EXPECT(0x2, gbc.readMem(0xb72d));
        // CB 02 005E
        gbc.setState(0x2a25, 0x405d, 0xcb60, 0x1b19, 0x8735, 0xd63e, 0x1, 0x1);
        gbc.writeMem(0x2a25, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x2a27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 005F
        gbc.setState(0x8e73, 0xcdeb, 0xd8c0, 0x2526, 0xf79c, 0x8898, 0x0, 0x0);
        gbc.writeMem(0x8e73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0x8e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e73));
        EXPECT(0x2, gbc.readMem(0x8e74));
        // CB 02 0060
        gbc.setState(0x9ae7, 0x44fa, 0xce90, 0x2a02, 0xd56, 0x71d, 0x1, 0x1);
        gbc.writeMem(0x9ae7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x44fa, gbc.sp());
        EXPECT(0x9ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ae7));
        EXPECT(0x2, gbc.readMem(0x9ae8));
        // CB 02 0061
        gbc.setState(0x125f, 0x2b4f, 0xc580, 0xede0, 0x249, 0x9333, 0x0, 0x1);
        gbc.writeMem(0x125f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b4f, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0062
        gbc.setState(0x93d5, 0xc82, 0x3f90, 0xedfa, 0x5ad2, 0x4e57, 0x0, 0x1);
        gbc.writeMem(0x93d5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc82, gbc.sp());
        EXPECT(0x93d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d5));
        EXPECT(0x2, gbc.readMem(0x93d6));
        // CB 02 0063
        gbc.setState(0x1065, 0x3d81, 0x7620, 0xf523, 0x5884, 0x37e0, 0x0, 0x0);
        gbc.writeMem(0x1065, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3d81, gbc.sp());
        EXPECT(0x1067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0064
        gbc.setState(0x8db9, 0x7715, 0x8fa0, 0x795, 0xa1c8, 0x9a8b, 0x1, 0x0);
        gbc.writeMem(0x8db9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7715, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0x2, gbc.readMem(0x8dba));
        // CB 02 0065
        gbc.setState(0xaf7b, 0x8c8, 0x60b0, 0x5606, 0xd716, 0xef59, 0x0, 0x1);
        gbc.writeMem(0xaf7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8c8, gbc.sp());
        EXPECT(0xaf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf7b));
        EXPECT(0x2, gbc.readMem(0xaf7c));
        // CB 02 0066
        gbc.setState(0x6958, 0xbdbb, 0x7450, 0x2429, 0xbb84, 0x28f4, 0x0, 0x1);
        gbc.writeMem(0x6958, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbdbb, gbc.sp());
        EXPECT(0x695a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0067
        gbc.setState(0x20f, 0xc956, 0xea00, 0xec43, 0x9f6b, 0x8202, 0x0, 0x0);
        gbc.writeMem(0x20f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc956, gbc.sp());
        EXPECT(0x211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0068
        gbc.setState(0x3ace, 0xb72c, 0x9210, 0x8913, 0x6e3d, 0x9ba1, 0x0, 0x1);
        gbc.writeMem(0x3ace, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0x3ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0069
        gbc.setState(0xda7a, 0xfaad, 0xeb20, 0x2e0c, 0x11d, 0x6fe, 0x0, 0x1);
        gbc.writeMem(0xda7a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfaad, gbc.sp());
        EXPECT(0xda7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7a));
        EXPECT(0x2, gbc.readMem(0xda7b));
        // CB 02 006A
        gbc.setState(0xc6d5, 0xb024, 0x1b0, 0x7e82, 0xe726, 0x5de4, 0x0, 0x1);
        gbc.writeMem(0xc6d5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0xc6d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d5));
        EXPECT(0x2, gbc.readMem(0xc6d6));
        // CB 02 006B
        gbc.setState(0x941e, 0x4ca9, 0x90e0, 0x882a, 0x8dc4, 0x505d, 0x1, 0x0);
        gbc.writeMem(0x941e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0x9420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x941e));
        EXPECT(0x2, gbc.readMem(0x941f));
        // CB 02 006C
        gbc.setState(0x66b6, 0x6ca, 0x5200, 0x9498, 0x2a12, 0x7fae, 0x1, 0x1);
        gbc.writeMem(0x66b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6ca, gbc.sp());
        EXPECT(0x66b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 006D
        gbc.setState(0xd27a, 0xdf69, 0x1880, 0x9aca, 0x556, 0xa41, 0x0, 0x1);
        gbc.writeMem(0xd27a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdf69, gbc.sp());
        EXPECT(0xd27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd27a));
        EXPECT(0x2, gbc.readMem(0xd27b));
        // CB 02 006E
        gbc.setState(0x6fc9, 0x5f92, 0x650, 0x2baa, 0xcded, 0x85cd, 0x1, 0x0);
        gbc.writeMem(0x6fc9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5f92, gbc.sp());
        EXPECT(0x6fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 006F
        gbc.setState(0xc2bd, 0x13cf, 0x18f0, 0x7dcc, 0x81aa, 0xc0ef, 0x1, 0x0);
        gbc.writeMem(0xc2bd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x13cf, gbc.sp());
        EXPECT(0xc2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2bd));
        EXPECT(0x2, gbc.readMem(0xc2be));
        // CB 02 0070
        gbc.setState(0x6ecb, 0x5bf9, 0x26e0, 0x4645, 0xdf4a, 0xa1f, 0x1, 0x1);
        gbc.writeMem(0x6ecb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5bf9, gbc.sp());
        EXPECT(0x6ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0071
        gbc.setState(0xda6e, 0x955c, 0xfb20, 0x4e7d, 0x3094, 0xd711, 0x1, 0x1);
        gbc.writeMem(0xda6e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0xda70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6e));
        EXPECT(0x2, gbc.readMem(0xda6f));
        // CB 02 0072
        gbc.setState(0x456e, 0xfe9b, 0xa680, 0x2a39, 0xe709, 0xbad, 0x1, 0x0);
        gbc.writeMem(0x456e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfe9b, gbc.sp());
        EXPECT(0x4570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0073
        gbc.setState(0xd0d1, 0xdc26, 0x9100, 0xa9e, 0x9f02, 0x41d4, 0x0, 0x0);
        gbc.writeMem(0xd0d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdc26, gbc.sp());
        EXPECT(0xd0d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0d1));
        EXPECT(0x2, gbc.readMem(0xd0d2));
        // CB 02 0074
        gbc.setState(0xebb8, 0xa978, 0x6540, 0x6ffc, 0x2aaa, 0x16e1, 0x1, 0x1);
        gbc.writeMem(0xebb8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa978, gbc.sp());
        EXPECT(0xebba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebb8));
        EXPECT(0x2, gbc.readMem(0xebb9));
        // CB 02 0075
        gbc.setState(0x186a, 0xa7ed, 0xeef0, 0x1ff3, 0x93df, 0x165f, 0x0, 0x1);
        gbc.writeMem(0x186a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x186c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0076
        gbc.setState(0xba5d, 0x6482, 0xc440, 0xb29, 0xf1d6, 0x660d, 0x1, 0x1);
        gbc.writeMem(0xba5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6482, gbc.sp());
        EXPECT(0xba5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5d));
        EXPECT(0x2, gbc.readMem(0xba5e));
        // CB 02 0077
        gbc.setState(0xeda7, 0x454b, 0x770, 0xfc67, 0xd3d0, 0x9, 0x0, 0x1);
        gbc.writeMem(0xeda7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x454b, gbc.sp());
        EXPECT(0xeda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeda7));
        EXPECT(0x2, gbc.readMem(0xeda8));
        // CB 02 0078
        gbc.setState(0xdbc8, 0xac07, 0x8b50, 0x4588, 0x8581, 0x21a4, 0x0, 0x1);
        gbc.writeMem(0xdbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xac07, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc8));
        EXPECT(0x2, gbc.readMem(0xdbc9));
        // CB 02 0079
        gbc.setState(0xbdfc, 0x2fe1, 0x3b30, 0x15df, 0xb1fc, 0x5ac7, 0x1, 0x1);
        gbc.writeMem(0xbdfc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2fe1, gbc.sp());
        EXPECT(0xbdfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfc));
        EXPECT(0x2, gbc.readMem(0xbdfd));
        // CB 02 007A
        gbc.setState(0xbd0e, 0x7ef, 0x1e20, 0x1582, 0x95ab, 0xf55b, 0x1, 0x0);
        gbc.writeMem(0xbd0e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7ef, gbc.sp());
        EXPECT(0xbd10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0e));
        EXPECT(0x2, gbc.readMem(0xbd0f));
        // CB 02 007B
        gbc.setState(0xb938, 0xcb35, 0xa720, 0x8a12, 0xe36e, 0x775c, 0x1, 0x1);
        gbc.writeMem(0xb938, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0xb93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb938));
        EXPECT(0x2, gbc.readMem(0xb939));
        // CB 02 007C
        gbc.setState(0x928c, 0x45cc, 0x160, 0x1905, 0x7f31, 0xb745, 0x0, 0x0);
        gbc.writeMem(0x928c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x45cc, gbc.sp());
        EXPECT(0x928e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928c));
        EXPECT(0x2, gbc.readMem(0x928d));
        // CB 02 007D
        gbc.setState(0xdfcd, 0xb3f0, 0xfb10, 0xa3b0, 0xf744, 0x1497, 0x0, 0x0);
        gbc.writeMem(0xdfcd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0xdfcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfcd));
        EXPECT(0x2, gbc.readMem(0xdfce));
        // CB 02 007F
        gbc.setState(0x84b6, 0x1c1a, 0x3a90, 0x4367, 0x2b37, 0xae8b, 0x0, 0x0);
        gbc.writeMem(0x84b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1c1a, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b6));
        EXPECT(0x2, gbc.readMem(0x84b7));
        // CB 02 0080
        gbc.setState(0x6410, 0xf7d2, 0x85f0, 0xd75c, 0x4e2f, 0xb640, 0x0, 0x1);
        gbc.writeMem(0x6410, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf7d2, gbc.sp());
        EXPECT(0x6412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0081
        gbc.setState(0xb7f6, 0x74eb, 0x4db0, 0x357a, 0x18d9, 0x33b5, 0x0, 0x0);
        gbc.writeMem(0xb7f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x74eb, gbc.sp());
        EXPECT(0xb7f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7f6));
        EXPECT(0x2, gbc.readMem(0xb7f7));
        // CB 02 0082
        gbc.setState(0x7946, 0x5758, 0x3b40, 0x2eaf, 0x9fe3, 0xc39a, 0x0, 0x1);
        gbc.writeMem(0x7946, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5758, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0083
        gbc.setState(0x10e7, 0x6ea2, 0x9600, 0x320e, 0x2ce5, 0xfa1, 0x0, 0x1);
        gbc.writeMem(0x10e7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6ea2, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0084
        gbc.setState(0x45fd, 0x5c2a, 0xc030, 0xe227, 0xad1b, 0x7431, 0x1, 0x0);
        gbc.writeMem(0x45fd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0x45ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0085
        gbc.setState(0x99d, 0x2a62, 0x34c0, 0xe57c, 0x878d, 0xfce6, 0x1, 0x1);
        gbc.writeMem(0x99d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2a62, gbc.sp());
        EXPECT(0x99f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0086
        gbc.setState(0x42c3, 0x321, 0x5f80, 0x9103, 0x90b6, 0xd4da, 0x0, 0x0);
        gbc.writeMem(0x42c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x321, gbc.sp());
        EXPECT(0x42c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0087
        gbc.setState(0x812a, 0x10c3, 0x11b0, 0x44f3, 0x4d13, 0x3f11, 0x1, 0x1);
        gbc.writeMem(0x812a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x10c3, gbc.sp());
        EXPECT(0x812c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812a));
        EXPECT(0x2, gbc.readMem(0x812b));
        // CB 02 0088
        gbc.setState(0x2b26, 0xf44c, 0xbe20, 0x46c, 0xf6a2, 0xa779, 0x0, 0x0);
        gbc.writeMem(0x2b26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf44c, gbc.sp());
        EXPECT(0x2b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 008A
        gbc.setState(0xb06f, 0x7f0b, 0x8700, 0x2a95, 0xb634, 0x8957, 0x1, 0x0);
        gbc.writeMem(0xb06f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7f0b, gbc.sp());
        EXPECT(0xb071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06f));
        EXPECT(0x2, gbc.readMem(0xb070));
        // CB 02 008B
        gbc.setState(0xaab4, 0x353a, 0xfed0, 0xbcee, 0xbf7d, 0xa978, 0x1, 0x1);
        gbc.writeMem(0xaab4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x353a, gbc.sp());
        EXPECT(0xaab6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab4));
        EXPECT(0x2, gbc.readMem(0xaab5));
        // CB 02 008C
        gbc.setState(0x9bdf, 0x8c4b, 0x8aa0, 0x628e, 0x6aeb, 0x229, 0x1, 0x1);
        gbc.writeMem(0x9bdf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c4b, gbc.sp());
        EXPECT(0x9be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bdf));
        EXPECT(0x2, gbc.readMem(0x9be0));
        // CB 02 008D
        gbc.setState(0xd17b, 0xdb6b, 0x5060, 0x3db3, 0xa214, 0x70e, 0x1, 0x1);
        gbc.writeMem(0xd17b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xdb6b, gbc.sp());
        EXPECT(0xd17d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd17b));
        EXPECT(0x2, gbc.readMem(0xd17c));
        // CB 02 008E
        gbc.setState(0x4dbe, 0x673, 0xc480, 0x6fa7, 0x275d, 0xab2e, 0x0, 0x1);
        gbc.writeMem(0x4dbe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x673, gbc.sp());
        EXPECT(0x4dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 008F
        gbc.setState(0x1c4a, 0xea80, 0xd530, 0x1f99, 0x8164, 0xe3b6, 0x1, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xea80, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0090
        gbc.setState(0x2253, 0xe14d, 0x5630, 0x11e2, 0xeaa9, 0xcef3, 0x1, 0x0);
        gbc.writeMem(0x2253, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe14d, gbc.sp());
        EXPECT(0x2255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0091
        gbc.setState(0xd98a, 0x6cf1, 0x5e00, 0x7434, 0x2f35, 0x447a, 0x0, 0x1);
        gbc.writeMem(0xd98a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6cf1, gbc.sp());
        EXPECT(0xd98c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd98a));
        EXPECT(0x2, gbc.readMem(0xd98b));
        // CB 02 0092
        gbc.setState(0x497b, 0x1271, 0xbbb0, 0xb9c1, 0xe939, 0xbb3b, 0x0, 0x1);
        gbc.writeMem(0x497b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0093
        gbc.setState(0x7d89, 0x870c, 0x7bf0, 0xea1a, 0x2286, 0x97b1, 0x0, 0x0);
        gbc.writeMem(0x7d89, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0x7d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0094
        gbc.setState(0xb4f8, 0x9f63, 0x7480, 0xf38, 0xcbac, 0x8498, 0x1, 0x1);
        gbc.writeMem(0xb4f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9f63, gbc.sp());
        EXPECT(0xb4fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f8));
        EXPECT(0x2, gbc.readMem(0xb4f9));
        // CB 02 0095
        gbc.setState(0xbb82, 0x9df2, 0xeed0, 0x97e5, 0xdd0a, 0x9511, 0x1, 0x0);
        gbc.writeMem(0xbb82, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9df2, gbc.sp());
        EXPECT(0xbb84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb82));
        EXPECT(0x2, gbc.readMem(0xbb83));
        // CB 02 0096
        gbc.setState(0x3485, 0xef4a, 0x1320, 0x1536, 0x2531, 0x4703, 0x0, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xef4a, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0097
        gbc.setState(0x37f, 0x8e78, 0xdf20, 0x7ba7, 0xe7a7, 0x682d, 0x0, 0x1);
        gbc.writeMem(0x37f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8e78, gbc.sp());
        EXPECT(0x381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0098
        gbc.setState(0x2b9b, 0x89a9, 0x4c30, 0x5b65, 0x4a7e, 0x8e39, 0x0, 0x0);
        gbc.writeMem(0x2b9b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x89a9, gbc.sp());
        EXPECT(0x2b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0099
        gbc.setState(0x6e57, 0x423e, 0xee0, 0x1c1f, 0xae97, 0xaff1, 0x0, 0x0);
        gbc.writeMem(0x6e57, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x423e, gbc.sp());
        EXPECT(0x6e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 009A
        gbc.setState(0x621f, 0x36ff, 0xf6e0, 0xfcc5, 0x1bed, 0x1615, 0x1, 0x0);
        gbc.writeMem(0x621f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x36ff, gbc.sp());
        EXPECT(0x6221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 009B
        gbc.setState(0xb557, 0x92e9, 0xd850, 0x95c6, 0x7a8a, 0xf973, 0x1, 0x0);
        gbc.writeMem(0xb557, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x92e9, gbc.sp());
        EXPECT(0xb559, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb557));
        EXPECT(0x2, gbc.readMem(0xb558));
        // CB 02 009C
        gbc.setState(0x75a7, 0x28fe, 0x8300, 0x7071, 0xe448, 0x65f9, 0x0, 0x1);
        gbc.writeMem(0x75a7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x28fe, gbc.sp());
        EXPECT(0x75a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 009D
        gbc.setState(0xd4ee, 0x17a6, 0xcab0, 0xaf88, 0xc4f6, 0xe800, 0x0, 0x1);
        gbc.writeMem(0xd4ee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x17a6, gbc.sp());
        EXPECT(0xd4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4ee));
        EXPECT(0x2, gbc.readMem(0xd4ef));
        // CB 02 009F
        gbc.setState(0x51e2, 0x4da9, 0x8140, 0x1d19, 0x7eb3, 0x3912, 0x1, 0x0);
        gbc.writeMem(0x51e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4da9, gbc.sp());
        EXPECT(0x51e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00A0
        gbc.setState(0x3547, 0x1ca2, 0xabf0, 0x213a, 0x76ca, 0x57ec, 0x0, 0x0);
        gbc.writeMem(0x3547, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0x3549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00A1
        gbc.setState(0x1481, 0xb128, 0x7360, 0xc155, 0xe146, 0x579, 0x0, 0x0);
        gbc.writeMem(0x1481, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb128, gbc.sp());
        EXPECT(0x1483, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00A2
        gbc.setState(0xac0b, 0x9f9e, 0x4b90, 0x55ac, 0xead1, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xac0b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9f9e, gbc.sp());
        EXPECT(0xac0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0b));
        EXPECT(0x2, gbc.readMem(0xac0c));
        // CB 02 00A3
        gbc.setState(0x5aac, 0xe938, 0x7490, 0xe9be, 0xcd5e, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x5aac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe938, gbc.sp());
        EXPECT(0x5aae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00A4
        gbc.setState(0xdccb, 0xa0f1, 0xc220, 0x9790, 0x787c, 0x4669, 0x1, 0x0);
        gbc.writeMem(0xdccb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa0f1, gbc.sp());
        EXPECT(0xdccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdccb));
        EXPECT(0x2, gbc.readMem(0xdccc));
        // CB 02 00A5
        gbc.setState(0x4a82, 0x301a, 0x5ec0, 0x367, 0x75b7, 0x66a3, 0x1, 0x0);
        gbc.writeMem(0x4a82, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x301a, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00A6
        gbc.setState(0x778, 0xdcd1, 0xd790, 0x8710, 0xb055, 0x59, 0x0, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdcd1, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00A7
        gbc.setState(0x22b5, 0x436d, 0xaf0, 0x59f8, 0xddd2, 0xbbb5, 0x1, 0x1);
        gbc.writeMem(0x22b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x436d, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00A8
        gbc.setState(0x1093, 0x67ea, 0xd8f0, 0x14fb, 0x50ee, 0x2c2, 0x1, 0x1);
        gbc.writeMem(0x1093, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x67ea, gbc.sp());
        EXPECT(0x1095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00A9
        gbc.setState(0xe1c8, 0xa9a8, 0x3d10, 0x5bc9, 0xffba, 0xd215, 0x1, 0x1);
        gbc.writeMem(0xe1c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa9a8, gbc.sp());
        EXPECT(0xe1ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c8));
        EXPECT(0x2, gbc.readMem(0xe1c9));
        // CB 02 00AA
        gbc.setState(0xb9a2, 0xafa2, 0xa560, 0xab03, 0xf79c, 0xe79b, 0x0, 0x1);
        gbc.writeMem(0xb9a2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xafa2, gbc.sp());
        EXPECT(0xb9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a2));
        EXPECT(0x2, gbc.readMem(0xb9a3));
        // CB 02 00AB
        gbc.setState(0x98c9, 0x3694, 0x1bc0, 0x41f1, 0xeb3d, 0x678b, 0x1, 0x1);
        gbc.writeMem(0x98c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3694, gbc.sp());
        EXPECT(0x98cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98c9));
        EXPECT(0x2, gbc.readMem(0x98ca));
        // CB 02 00AC
        gbc.setState(0xcacd, 0x28c5, 0x5380, 0x655b, 0x4ea, 0x1d2d, 0x0, 0x0);
        gbc.writeMem(0xcacd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x28c5, gbc.sp());
        EXPECT(0xcacf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcacd));
        EXPECT(0x2, gbc.readMem(0xcace));
        // CB 02 00AD
        gbc.setState(0x8978, 0xb2e9, 0xae30, 0xd3fb, 0x998d, 0xfb, 0x0, 0x0);
        gbc.writeMem(0x8978, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb2e9, gbc.sp());
        EXPECT(0x897a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8978));
        EXPECT(0x2, gbc.readMem(0x8979));
        // CB 02 00AE
        gbc.setState(0x9862, 0xa887, 0x5180, 0xe0cb, 0x63f0, 0xb114, 0x0, 0x0);
        gbc.writeMem(0x9862, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa887, gbc.sp());
        EXPECT(0x9864, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9862));
        EXPECT(0x2, gbc.readMem(0x9863));
        // CB 02 00AF
        gbc.setState(0x556b, 0xeb5, 0x2dc0, 0x29c6, 0x2f89, 0x97ba, 0x0, 0x0);
        gbc.writeMem(0x556b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xeb5, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00B0
        gbc.setState(0x8774, 0x66ee, 0x5680, 0xc44, 0x1e2, 0xa32c, 0x1, 0x0);
        gbc.writeMem(0x8774, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x66ee, gbc.sp());
        EXPECT(0x8776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8774));
        EXPECT(0x2, gbc.readMem(0x8775));
        // CB 02 00B1
        gbc.setState(0x514f, 0x3d88, 0xfe40, 0x5d86, 0x7434, 0x6213, 0x1, 0x1);
        gbc.writeMem(0x514f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3d88, gbc.sp());
        EXPECT(0x5151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00B2
        gbc.setState(0xd7f5, 0xdacf, 0x90f0, 0x9685, 0x9148, 0x4d02, 0x0, 0x1);
        gbc.writeMem(0xd7f5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdacf, gbc.sp());
        EXPECT(0xd7f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f5));
        EXPECT(0x2, gbc.readMem(0xd7f6));
        // CB 02 00B3
        gbc.setState(0x92eb, 0x58cc, 0x7f10, 0x6526, 0x4ed6, 0x865d, 0x0, 0x1);
        gbc.writeMem(0x92eb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x58cc, gbc.sp());
        EXPECT(0x92ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92eb));
        EXPECT(0x2, gbc.readMem(0x92ec));
        // CB 02 00B4
        gbc.setState(0x1c51, 0x1851, 0x9bd0, 0x926, 0x82c7, 0xfe94, 0x1, 0x0);
        gbc.writeMem(0x1c51, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1851, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00B5
        gbc.setState(0x4a97, 0x953, 0x97e0, 0x645d, 0x952b, 0x11ac, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x4a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00B6
        gbc.setState(0x3d72, 0xd50e, 0x9190, 0x1ddd, 0xa4cf, 0xa99, 0x0, 0x0);
        gbc.writeMem(0x3d72, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd50e, gbc.sp());
        EXPECT(0x3d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00B7
        gbc.setState(0x7c3, 0x2a98, 0x4bc0, 0x346e, 0xafd8, 0x86aa, 0x1, 0x0);
        gbc.writeMem(0x7c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2a98, gbc.sp());
        EXPECT(0x7c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00B8
        gbc.setState(0x51a6, 0xbedf, 0xee40, 0x11da, 0x699c, 0xb0e8, 0x1, 0x0);
        gbc.writeMem(0x51a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbedf, gbc.sp());
        EXPECT(0x51a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00B9
        gbc.setState(0x75d9, 0x8020, 0x17b0, 0x6807, 0x6524, 0xb1ca, 0x0, 0x1);
        gbc.writeMem(0x75d9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8020, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00BA
        gbc.setState(0x98cb, 0x380, 0x2580, 0x4065, 0xce08, 0x9b19, 0x1, 0x0);
        gbc.writeMem(0x98cb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98cb));
        EXPECT(0x2, gbc.readMem(0x98cc));
        // CB 02 00BB
        gbc.setState(0xde98, 0x4501, 0x10, 0x921e, 0x739c, 0x103f, 0x0, 0x1);
        gbc.writeMem(0xde98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4501, gbc.sp());
        EXPECT(0xde9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde98));
        EXPECT(0x2, gbc.readMem(0xde99));
        // CB 02 00BC
        gbc.setState(0x9e02, 0x94e6, 0xd630, 0xd71f, 0x920, 0x746a, 0x1, 0x0);
        gbc.writeMem(0x9e02, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e02));
        EXPECT(0x2, gbc.readMem(0x9e03));
        // CB 02 00BD
        gbc.setState(0xe064, 0x54ec, 0x340, 0x3e5, 0xb878, 0xd80, 0x0, 0x0);
        gbc.writeMem(0xe064, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x54ec, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe064));
        EXPECT(0x2, gbc.readMem(0xe065));
        // CB 02 00BE
        gbc.setState(0x2340, 0x971d, 0x3630, 0x79d6, 0xfa2c, 0x3963, 0x0, 0x0);
        gbc.writeMem(0x2340, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x971d, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00C0
        gbc.setState(0xd9, 0x6b2d, 0xdf50, 0x57a8, 0xce5e, 0x3b69, 0x0, 0x1);
        gbc.writeMem(0xd9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0xdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00C2
        gbc.setState(0x8658, 0x80f4, 0x4d50, 0xec3c, 0x695e, 0xd1fd, 0x1, 0x1);
        gbc.writeMem(0x8658, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x80f4, gbc.sp());
        EXPECT(0x865a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8658));
        EXPECT(0x2, gbc.readMem(0x8659));
        // CB 02 00C3
        gbc.setState(0xc436, 0x751e, 0x5360, 0x2ff7, 0x999c, 0x29b5, 0x1, 0x1);
        gbc.writeMem(0xc436, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0xc438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc436));
        EXPECT(0x2, gbc.readMem(0xc437));
        // CB 02 00C4
        gbc.setState(0xcb4d, 0x1918, 0x2f90, 0x57bd, 0x820e, 0x7f6c, 0x0, 0x0);
        gbc.writeMem(0xcb4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1918, gbc.sp());
        EXPECT(0xcb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4d));
        EXPECT(0x2, gbc.readMem(0xcb4e));
        // CB 02 00C5
        gbc.setState(0x2170, 0x384c, 0x1450, 0x8726, 0x4133, 0x5275, 0x0, 0x0);
        gbc.writeMem(0x2170, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x384c, gbc.sp());
        EXPECT(0x2172, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00C7
        gbc.setState(0x9343, 0x9074, 0x74f0, 0x9ef9, 0x4ba1, 0xcee9, 0x1, 0x1);
        gbc.writeMem(0x9343, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9074, gbc.sp());
        EXPECT(0x9345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9343));
        EXPECT(0x2, gbc.readMem(0x9344));
        // CB 02 00C8
        gbc.setState(0x6231, 0xba67, 0xc250, 0xd8ba, 0xcafa, 0x88ba, 0x1, 0x0);
        gbc.writeMem(0x6231, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xba67, gbc.sp());
        EXPECT(0x6233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00C9
        gbc.setState(0x42ca, 0xe28e, 0x5420, 0xa9d6, 0xb14d, 0x5833, 0x0, 0x0);
        gbc.writeMem(0x42ca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe28e, gbc.sp());
        EXPECT(0x42cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00CA
        gbc.setState(0x3fd8, 0x3709, 0xb220, 0x34d6, 0x1d89, 0xe6f5, 0x1, 0x0);
        gbc.writeMem(0x3fd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3709, gbc.sp());
        EXPECT(0x3fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00CB
        gbc.setState(0x276b, 0xa6c8, 0x20d0, 0x88da, 0x7352, 0x3987, 0x1, 0x0);
        gbc.writeMem(0x276b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa6c8, gbc.sp());
        EXPECT(0x276d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00CC
        gbc.setState(0x90bf, 0xae30, 0x2bf0, 0x9ba7, 0xc78e, 0xe922, 0x0, 0x1);
        gbc.writeMem(0x90bf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xae30, gbc.sp());
        EXPECT(0x90c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bf));
        EXPECT(0x2, gbc.readMem(0x90c0));
        // CB 02 00CD
        gbc.setState(0x33e6, 0x2d53, 0x4b60, 0xf43a, 0x80fb, 0xae72, 0x0, 0x0);
        gbc.writeMem(0x33e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2d53, gbc.sp());
        EXPECT(0x33e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00CF
        gbc.setState(0xb2f, 0xd247, 0xe220, 0x2c38, 0x3277, 0x7554, 0x0, 0x0);
        gbc.writeMem(0xb2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd247, gbc.sp());
        EXPECT(0xb31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00D0
        gbc.setState(0x9901, 0x5488, 0x7fe0, 0x3815, 0x21d2, 0xae60, 0x0, 0x1);
        gbc.writeMem(0x9901, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5488, gbc.sp());
        EXPECT(0x9903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9901));
        EXPECT(0x2, gbc.readMem(0x9902));
        // CB 02 00D1
        gbc.setState(0x20d1, 0x170e, 0x5b40, 0xefb2, 0xad88, 0xae2d, 0x1, 0x0);
        gbc.writeMem(0x20d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x170e, gbc.sp());
        EXPECT(0x20d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00D2
        gbc.setState(0xc7db, 0x5d23, 0x4930, 0x2fce, 0x57af, 0x51fa, 0x1, 0x0);
        gbc.writeMem(0xc7db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5d23, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7db));
        EXPECT(0x2, gbc.readMem(0xc7dc));
        // CB 02 00D3
        gbc.setState(0xd99c, 0x319c, 0xb960, 0xbd89, 0x8c98, 0xa567, 0x1, 0x0);
        gbc.writeMem(0xd99c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x319c, gbc.sp());
        EXPECT(0xd99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd99c));
        EXPECT(0x2, gbc.readMem(0xd99d));
        // CB 02 00D4
        gbc.setState(0x3e7e, 0x2c97, 0x7cd0, 0x5d93, 0x204f, 0xcebb, 0x0, 0x0);
        gbc.writeMem(0x3e7e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2c97, gbc.sp());
        EXPECT(0x3e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00D6
        gbc.setState(0xea88, 0xf280, 0x72b0, 0xcab3, 0x6fed, 0xa5df, 0x1, 0x0);
        gbc.writeMem(0xea88, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf280, gbc.sp());
        EXPECT(0xea8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea88));
        EXPECT(0x2, gbc.readMem(0xea89));
        // CB 02 00D7
        gbc.setState(0x32b9, 0x9539, 0x3c40, 0x7ca8, 0xa5fd, 0x4f6a, 0x1, 0x1);
        gbc.writeMem(0x32b9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9539, gbc.sp());
        EXPECT(0x32bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00D8
        gbc.setState(0xe673, 0x8a99, 0xd8d0, 0xc01c, 0x7fb4, 0xcfba, 0x0, 0x1);
        gbc.writeMem(0xe673, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8a99, gbc.sp());
        EXPECT(0xe675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe673));
        EXPECT(0x2, gbc.readMem(0xe674));
        // CB 02 00D9
        gbc.setState(0x2db4, 0x5a8f, 0xc100, 0xf195, 0x1584, 0x1e5d, 0x1, 0x0);
        gbc.writeMem(0x2db4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5a8f, gbc.sp());
        EXPECT(0x2db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00DA
        gbc.setState(0x6090, 0x100b, 0x460, 0x6d16, 0x7678, 0xf389, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00DB
        gbc.setState(0xce6, 0xc41f, 0xb140, 0x6c16, 0xce46, 0x1499, 0x1, 0x1);
        gbc.writeMem(0xce6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc41f, gbc.sp());
        EXPECT(0xce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00DC
        gbc.setState(0x298a, 0x880b, 0x700, 0xf78b, 0x672, 0xb94d, 0x0, 0x1);
        gbc.writeMem(0x298a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0x298c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00DE
        gbc.setState(0x46aa, 0x9109, 0x4e30, 0x5c16, 0x84dc, 0xc188, 0x1, 0x1);
        gbc.writeMem(0x46aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0x46ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00DF
        gbc.setState(0x4941, 0x7f10, 0x6ba0, 0x2e3f, 0x3d52, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0x4941, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7f10, gbc.sp());
        EXPECT(0x4943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00E0
        gbc.setState(0x2985, 0x395e, 0x6160, 0x8922, 0x7228, 0xe9a9, 0x1, 0x0);
        gbc.writeMem(0x2985, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x395e, gbc.sp());
        EXPECT(0x2987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00E2
        gbc.setState(0xb5f4, 0x77d3, 0xff90, 0x3b61, 0xbf75, 0xc832, 0x1, 0x0);
        gbc.writeMem(0xb5f4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x77d3, gbc.sp());
        EXPECT(0xb5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f4));
        EXPECT(0x2, gbc.readMem(0xb5f5));
        // CB 02 00E3
        gbc.setState(0x6532, 0x55a4, 0xd5e0, 0x331c, 0x3174, 0x1fb7, 0x1, 0x0);
        gbc.writeMem(0x6532, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x55a4, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00E5
        gbc.setState(0xa496, 0x4a7f, 0xdf60, 0x413b, 0x1e98, 0xe4f8, 0x0, 0x0);
        gbc.writeMem(0xa496, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4a7f, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa496));
        EXPECT(0x2, gbc.readMem(0xa497));
        // CB 02 00E7
        gbc.setState(0x40c3, 0x3298, 0x61e0, 0x5d3a, 0xc9f7, 0x4e20, 0x1, 0x1);
        gbc.writeMem(0x40c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3298, gbc.sp());
        EXPECT(0x40c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00E8
        gbc.setState(0xa39, 0x7008, 0x1450, 0x5dd2, 0x8448, 0xa540, 0x0, 0x0);
        gbc.writeMem(0xa39, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7008, gbc.sp());
        EXPECT(0xa3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00E9
        gbc.setState(0x5844, 0xd4e8, 0xb400, 0xac9c, 0x2e4a, 0x97b5, 0x1, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0x5846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00EA
        gbc.setState(0xee39, 0x6dfa, 0xc420, 0xdf5e, 0x690, 0x3700, 0x1, 0x1);
        gbc.writeMem(0xee39, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x6dfa, gbc.sp());
        EXPECT(0xee3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee39));
        EXPECT(0x2, gbc.readMem(0xee3a));
        // CB 02 00EB
        gbc.setState(0x91db, 0x7ca8, 0x74f0, 0xdddd, 0x1959, 0x6b94, 0x1, 0x1);
        gbc.writeMem(0x91db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7ca8, gbc.sp());
        EXPECT(0x91dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91db));
        EXPECT(0x2, gbc.readMem(0x91dc));
        // CB 02 00EC
        gbc.setState(0xe5d3, 0x1af3, 0x3b90, 0x2b20, 0x73a4, 0x2200, 0x1, 0x0);
        gbc.writeMem(0xe5d3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1af3, gbc.sp());
        EXPECT(0xe5d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d3));
        EXPECT(0x2, gbc.readMem(0xe5d4));
        // CB 02 00ED
        gbc.setState(0xece2, 0x50fc, 0x62a0, 0x3ca9, 0x8b3a, 0x39bc, 0x0, 0x0);
        gbc.writeMem(0xece2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50fc, gbc.sp());
        EXPECT(0xece4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece2));
        EXPECT(0x2, gbc.readMem(0xece3));
        // CB 02 00EE
        gbc.setState(0x1262, 0x539f, 0x4050, 0xc283, 0xb3c0, 0x7d0b, 0x1, 0x0);
        gbc.writeMem(0x1262, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x539f, gbc.sp());
        EXPECT(0x1264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00EF
        gbc.setState(0x55ed, 0x309e, 0xe230, 0xb797, 0x76f6, 0x2504, 0x0, 0x1);
        gbc.writeMem(0x55ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x309e, gbc.sp());
        EXPECT(0x55ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00F0
        gbc.setState(0x98ed, 0xfe5e, 0x330, 0x8013, 0xccca, 0x2f8, 0x1, 0x1);
        gbc.writeMem(0x98ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xfe5e, gbc.sp());
        EXPECT(0x98ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ed));
        EXPECT(0x2, gbc.readMem(0x98ee));
        // CB 02 00F1
        gbc.setState(0x12fd, 0xab8c, 0x2960, 0x91c2, 0xd901, 0x6d7b, 0x0, 0x1);
        gbc.writeMem(0x12fd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xab8c, gbc.sp());
        EXPECT(0x12ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00F2
        gbc.setState(0x15d6, 0x3fc8, 0xef40, 0x9cc3, 0xf51, 0xd766, 0x0, 0x0);
        gbc.writeMem(0x15d6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3fc8, gbc.sp());
        EXPECT(0x15d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00F3
        gbc.setState(0xe3f1, 0x66ef, 0xf480, 0xa9d1, 0xb164, 0xb983, 0x0, 0x1);
        gbc.writeMem(0xe3f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x66ef, gbc.sp());
        EXPECT(0xe3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f1));
        EXPECT(0x2, gbc.readMem(0xe3f2));
        // CB 02 00F5
        gbc.setState(0xd3bc, 0x5ce5, 0x18f0, 0xa646, 0x8dc, 0xc528, 0x0, 0x1);
        gbc.writeMem(0xd3bc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5ce5, gbc.sp());
        EXPECT(0xd3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3bc));
        EXPECT(0x2, gbc.readMem(0xd3bd));
        // CB 02 00F6
        gbc.setState(0xb007, 0xd0c6, 0x3880, 0x7956, 0x2d75, 0x3127, 0x1, 0x0);
        gbc.writeMem(0xb007, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0xb009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb007));
        EXPECT(0x2, gbc.readMem(0xb008));
        // CB 02 00F7
        gbc.setState(0xe26a, 0xd455, 0xbe70, 0xf1c2, 0x4b79, 0x5d10, 0x0, 0x1);
        gbc.writeMem(0xe26a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0xe26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26a));
        EXPECT(0x2, gbc.readMem(0xe26b));
        // CB 02 00F8
        gbc.setState(0x48e2, 0x18c8, 0x9d60, 0x6de2, 0xcd0f, 0xc7c5, 0x0, 0x1);
        gbc.writeMem(0x48e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x18c8, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00FA
        gbc.setState(0xb7aa, 0x55ec, 0x5850, 0xab36, 0xe0f2, 0x2103, 0x1, 0x0);
        gbc.writeMem(0xb7aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x55ec, gbc.sp());
        EXPECT(0xb7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7aa));
        EXPECT(0x2, gbc.readMem(0xb7ab));
        // CB 02 00FB
        gbc.setState(0x354a, 0xb331, 0x7b90, 0xf7c1, 0x3144, 0xca54, 0x0, 0x1);
        gbc.writeMem(0x354a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb331, gbc.sp());
        EXPECT(0x354c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 00FC
        gbc.setState(0x4172, 0x467c, 0x7270, 0x3139, 0x9a6d, 0xef4f, 0x1, 0x1);
        gbc.writeMem(0x4172, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x467c, gbc.sp());
        EXPECT(0x4174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00FD
        gbc.setState(0x180b, 0xda4c, 0xc9b0, 0x45af, 0xb487, 0xf062, 0x1, 0x1);
        gbc.writeMem(0x180b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xda4c, gbc.sp());
        EXPECT(0x180d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00FE
        gbc.setState(0x617b, 0xcbe7, 0xa2b0, 0x5e86, 0xd93e, 0x1ec7, 0x1, 0x0);
        gbc.writeMem(0x617b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 00FF
        gbc.setState(0xcdfa, 0xc92b, 0xfe60, 0x7f28, 0x8003, 0x680a, 0x1, 0x0);
        gbc.writeMem(0xcdfa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc92b, gbc.sp());
        EXPECT(0xcdfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdfa));
        EXPECT(0x2, gbc.readMem(0xcdfb));
        // CB 02 0100
        gbc.setState(0xe0a4, 0x3f4a, 0xd650, 0xc366, 0x4dcd, 0x115f, 0x1, 0x1);
        gbc.writeMem(0xe0a4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3f4a, gbc.sp());
        EXPECT(0xe0a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0a4));
        EXPECT(0x2, gbc.readMem(0xe0a5));
        // CB 02 0103
        gbc.setState(0x894c, 0xd144, 0x16a0, 0x9fce, 0x8bfb, 0x1e88, 0x0, 0x0);
        gbc.writeMem(0x894c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0x894e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894c));
        EXPECT(0x2, gbc.readMem(0x894d));
        // CB 02 0104
        gbc.setState(0x2e1f, 0xeaa0, 0x1d90, 0x52d5, 0xecc6, 0xb6cb, 0x1, 0x0);
        gbc.writeMem(0x2e1f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeaa0, gbc.sp());
        EXPECT(0x2e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0105
        gbc.setState(0xb435, 0x1b66, 0x1820, 0xb116, 0x627b, 0x847a, 0x1, 0x1);
        gbc.writeMem(0xb435, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1b66, gbc.sp());
        EXPECT(0xb437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb435));
        EXPECT(0x2, gbc.readMem(0xb436));
        // CB 02 0106
        gbc.setState(0x6388, 0xf38d, 0x5790, 0x7bc8, 0xdef9, 0x84d1, 0x1, 0x0);
        gbc.writeMem(0x6388, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf38d, gbc.sp());
        EXPECT(0x638a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0107
        gbc.setState(0x37a8, 0x9f4a, 0x4b40, 0xdec7, 0xb70, 0x234d, 0x1, 0x0);
        gbc.writeMem(0x37a8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f4a, gbc.sp());
        EXPECT(0x37aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0108
        gbc.setState(0x3224, 0x465d, 0x77e0, 0x63e3, 0x72ab, 0xe08e, 0x0, 0x0);
        gbc.writeMem(0x3224, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x465d, gbc.sp());
        EXPECT(0x3226, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0109
        gbc.setState(0x5ecb, 0x64b, 0x29d0, 0x2f6, 0x2bc5, 0x3b26, 0x1, 0x0);
        gbc.writeMem(0x5ecb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x64b, gbc.sp());
        EXPECT(0x5ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 010A
        gbc.setState(0x32fa, 0xc880, 0xaa0, 0xacfc, 0x9b59, 0x9345, 0x1, 0x0);
        gbc.writeMem(0x32fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x32fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 010B
        gbc.setState(0x494e, 0x1db5, 0x7b70, 0xb712, 0x8a25, 0x4fe2, 0x0, 0x1);
        gbc.writeMem(0x494e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1db5, gbc.sp());
        EXPECT(0x4950, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 010C
        gbc.setState(0x2a93, 0x66e4, 0x5eb0, 0xe678, 0x703a, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0x2a93, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x66e4, gbc.sp());
        EXPECT(0x2a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 010D
        gbc.setState(0x271c, 0x9173, 0x9040, 0x3c36, 0xa825, 0xdd58, 0x1, 0x0);
        gbc.writeMem(0x271c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9173, gbc.sp());
        EXPECT(0x271e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 010E
        gbc.setState(0x7c4e, 0xf297, 0x2010, 0xaa65, 0x1948, 0xa380, 0x0, 0x0);
        gbc.writeMem(0x7c4e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf297, gbc.sp());
        EXPECT(0x7c50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 010F
        gbc.setState(0x6657, 0xa15, 0xa9c0, 0xdc7c, 0xee34, 0x4368, 0x0, 0x1);
        gbc.writeMem(0x6657, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa15, gbc.sp());
        EXPECT(0x6659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0110
        gbc.setState(0xcb45, 0x1bba, 0x7650, 0x6cd1, 0x89a, 0x25f3, 0x0, 0x1);
        gbc.writeMem(0xcb45, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1bba, gbc.sp());
        EXPECT(0xcb47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb45));
        EXPECT(0x2, gbc.readMem(0xcb46));
        // CB 02 0111
        gbc.setState(0xcfca, 0xb8d8, 0xc8b0, 0x4730, 0x7a89, 0xfaf9, 0x0, 0x1);
        gbc.writeMem(0xcfca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb8d8, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfca));
        EXPECT(0x2, gbc.readMem(0xcfcb));
        // CB 02 0112
        gbc.setState(0x443f, 0xe08e, 0xc600, 0x1658, 0xfabb, 0x5953, 0x0, 0x0);
        gbc.writeMem(0x443f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe08e, gbc.sp());
        EXPECT(0x4441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0113
        gbc.setState(0xc0, 0x61f0, 0x54c0, 0x863c, 0x3e99, 0x14c3, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x61f0, gbc.sp());
        EXPECT(0xc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0114
        gbc.setState(0x75a6, 0x135, 0x9290, 0x1895, 0x4555, 0x4139, 0x1, 0x1);
        gbc.writeMem(0x75a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x135, gbc.sp());
        EXPECT(0x75a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0115
        gbc.setState(0xc3df, 0x1183, 0x4f60, 0x389, 0x52e1, 0x79a4, 0x0, 0x1);
        gbc.writeMem(0xc3df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1183, gbc.sp());
        EXPECT(0xc3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3df));
        EXPECT(0x2, gbc.readMem(0xc3e0));
        // CB 02 0116
        gbc.setState(0xd674, 0x82e8, 0x4450, 0x649c, 0x48c3, 0xb295, 0x0, 0x0);
        gbc.writeMem(0xd674, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x82e8, gbc.sp());
        EXPECT(0xd676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd674));
        EXPECT(0x2, gbc.readMem(0xd675));
        // CB 02 0117
        gbc.setState(0x6e4, 0x2768, 0xd0, 0xf6f5, 0x5e44, 0x2517, 0x0, 0x0);
        gbc.writeMem(0x6e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0118
        gbc.setState(0x1319, 0x3ab8, 0x3e90, 0xdd6a, 0x14ee, 0x1554, 0x1, 0x1);
        gbc.writeMem(0x1319, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3ab8, gbc.sp());
        EXPECT(0x131b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0119
        gbc.setState(0xeaf, 0xc6c2, 0x49f0, 0x9d98, 0xb5cf, 0x61b4, 0x0, 0x1);
        gbc.writeMem(0xeaf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc6c2, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 011A
        gbc.setState(0x16d, 0xad11, 0x55f0, 0x1397, 0x3e95, 0xbc80, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xad11, gbc.sp());
        EXPECT(0x16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 011B
        gbc.setState(0x3a84, 0xda97, 0x100, 0xe53d, 0xc515, 0xc22a, 0x0, 0x0);
        gbc.writeMem(0x3a84, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x3a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 011C
        gbc.setState(0x7890, 0xd69e, 0xbb90, 0xf1d4, 0xd82d, 0x9ead, 0x1, 0x1);
        gbc.writeMem(0x7890, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd69e, gbc.sp());
        EXPECT(0x7892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 011D
        gbc.setState(0x8f8b, 0xc09e, 0xe570, 0xb286, 0xa8e3, 0x35e0, 0x0, 0x0);
        gbc.writeMem(0x8f8b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc09e, gbc.sp());
        EXPECT(0x8f8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8b));
        EXPECT(0x2, gbc.readMem(0x8f8c));
        // CB 02 011E
        gbc.setState(0xba5d, 0x2446, 0x1970, 0x571e, 0x4678, 0xd25f, 0x0, 0x0);
        gbc.writeMem(0xba5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2446, gbc.sp());
        EXPECT(0xba5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5d));
        EXPECT(0x2, gbc.readMem(0xba5e));
        // CB 02 011F
        gbc.setState(0x37a0, 0xadb5, 0x7660, 0xd7e9, 0xb6b7, 0xe668, 0x0, 0x0);
        gbc.writeMem(0x37a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xadb5, gbc.sp());
        EXPECT(0x37a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0120
        gbc.setState(0x6f5f, 0x370f, 0x9dd0, 0x4261, 0x97dd, 0xff6d, 0x0, 0x1);
        gbc.writeMem(0x6f5f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x370f, gbc.sp());
        EXPECT(0x6f61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0121
        gbc.setState(0x85a1, 0x59f, 0x2c10, 0x7ead, 0x44b0, 0xf6b6, 0x0, 0x1);
        gbc.writeMem(0x85a1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x59f, gbc.sp());
        EXPECT(0x85a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a1));
        EXPECT(0x2, gbc.readMem(0x85a2));
        // CB 02 0123
        gbc.setState(0xa512, 0xffa4, 0xcd70, 0x3c7b, 0x8da0, 0xa89a, 0x0, 0x1);
        gbc.writeMem(0xa512, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xffa4, gbc.sp());
        EXPECT(0xa514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa512));
        EXPECT(0x2, gbc.readMem(0xa513));
        // CB 02 0124
        gbc.setState(0x5516, 0x1337, 0x7210, 0xb2ba, 0x8584, 0x7afa, 0x0, 0x0);
        gbc.writeMem(0x5516, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1337, gbc.sp());
        EXPECT(0x5518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0125
        gbc.setState(0xe61e, 0x962b, 0xaff0, 0xb142, 0x6a5f, 0x14d9, 0x0, 0x0);
        gbc.writeMem(0xe61e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x962b, gbc.sp());
        EXPECT(0xe620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61e));
        EXPECT(0x2, gbc.readMem(0xe61f));
        // CB 02 0127
        gbc.setState(0xd7e9, 0x5f2a, 0x34d0, 0x354, 0xbb87, 0x145a, 0x0, 0x1);
        gbc.writeMem(0xd7e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5f2a, gbc.sp());
        EXPECT(0xd7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e9));
        EXPECT(0x2, gbc.readMem(0xd7ea));
        // CB 02 0128
        gbc.setState(0x845a, 0x5709, 0x1b60, 0xa3c3, 0x3b5f, 0x9026, 0x1, 0x0);
        gbc.writeMem(0x845a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5709, gbc.sp());
        EXPECT(0x845c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845a));
        EXPECT(0x2, gbc.readMem(0x845b));
        // CB 02 0129
        gbc.setState(0x1ee2, 0xab4e, 0xc800, 0xb406, 0xf94f, 0x574a, 0x0, 0x0);
        gbc.writeMem(0x1ee2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0x1ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 012A
        gbc.setState(0x9bbf, 0xc20f, 0x30e0, 0xc09, 0x331d, 0xd06, 0x0, 0x1);
        gbc.writeMem(0x9bbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc20f, gbc.sp());
        EXPECT(0x9bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bbf));
        EXPECT(0x2, gbc.readMem(0x9bc0));
        // CB 02 012B
        gbc.setState(0xe7f7, 0x88af, 0xc210, 0x6e81, 0x3809, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0xe7f7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x88af, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f7));
        EXPECT(0x2, gbc.readMem(0xe7f8));
        // CB 02 012C
        gbc.setState(0x8470, 0x53cc, 0x40f0, 0x7319, 0x6de7, 0x5b9d, 0x0, 0x0);
        gbc.writeMem(0x8470, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x53cc, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8470));
        EXPECT(0x2, gbc.readMem(0x8471));
        // CB 02 012D
        gbc.setState(0x3b1a, 0xd609, 0xf8d0, 0x40de, 0xeb3c, 0xd3ec, 0x1, 0x1);
        gbc.writeMem(0x3b1a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd609, gbc.sp());
        EXPECT(0x3b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 012E
        gbc.setState(0xa3be, 0x851, 0xfd10, 0xc58b, 0xd2f4, 0xdd6c, 0x1, 0x0);
        gbc.writeMem(0xa3be, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x851, gbc.sp());
        EXPECT(0xa3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3be));
        EXPECT(0x2, gbc.readMem(0xa3bf));
        // CB 02 012F
        gbc.setState(0x4cda, 0x5fef, 0x7bf0, 0x504b, 0x1e9f, 0xf96c, 0x1, 0x0);
        gbc.writeMem(0x4cda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5fef, gbc.sp());
        EXPECT(0x4cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0130
        gbc.setState(0xa164, 0x692, 0xc850, 0x7ff1, 0x9fd1, 0x6d59, 0x1, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa164));
        EXPECT(0x2, gbc.readMem(0xa165));
        // CB 02 0131
        gbc.setState(0x897d, 0xb06a, 0xeb90, 0x8b5d, 0x79c9, 0x79c, 0x0, 0x1);
        gbc.writeMem(0x897d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb06a, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897d));
        EXPECT(0x2, gbc.readMem(0x897e));
        // CB 02 0132
        gbc.setState(0xde3b, 0x5ba6, 0x34c0, 0x2c5f, 0x9f30, 0xa64c, 0x0, 0x1);
        gbc.writeMem(0xde3b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5ba6, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde3b));
        EXPECT(0x2, gbc.readMem(0xde3c));
        // CB 02 0133
        gbc.setState(0x7716, 0xa0, 0xf400, 0xbbf, 0x92a5, 0x96e7, 0x1, 0x0);
        gbc.writeMem(0x7716, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa0, gbc.sp());
        EXPECT(0x7718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0134
        gbc.setState(0x9ccc, 0x6a11, 0xa7f0, 0xe4e4, 0x4a31, 0xc43f, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6a11, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccc));
        EXPECT(0x2, gbc.readMem(0x9ccd));
        // CB 02 0135
        gbc.setState(0xcc9, 0x3471, 0xdad0, 0xb39d, 0xc1d0, 0xbe98, 0x1, 0x0);
        gbc.writeMem(0xcc9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3471, gbc.sp());
        EXPECT(0xccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0136
        gbc.setState(0x4b6c, 0x643d, 0x9650, 0x7e02, 0xd626, 0x1989, 0x0, 0x1);
        gbc.writeMem(0x4b6c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x643d, gbc.sp());
        EXPECT(0x4b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0137
        gbc.setState(0x8195, 0x2042, 0x3070, 0x5dd8, 0x2631, 0xf649, 0x1, 0x0);
        gbc.writeMem(0x8195, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x8197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8195));
        EXPECT(0x2, gbc.readMem(0x8196));
        // CB 02 0138
        gbc.setState(0x171b, 0xdab8, 0xc240, 0x8380, 0x676b, 0xcfe9, 0x1, 0x0);
        gbc.writeMem(0x171b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdab8, gbc.sp());
        EXPECT(0x171d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0139
        gbc.setState(0x8541, 0x5443, 0xc250, 0xe172, 0xbc8b, 0x2065, 0x1, 0x1);
        gbc.writeMem(0x8541, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x5443, gbc.sp());
        EXPECT(0x8543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8541));
        EXPECT(0x2, gbc.readMem(0x8542));
        // CB 02 013A
        gbc.setState(0x642e, 0x85e4, 0x6c40, 0x3d5b, 0x5542, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x642e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x85e4, gbc.sp());
        EXPECT(0x6430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 013C
        gbc.setState(0xc74e, 0x517e, 0xb230, 0x8b43, 0x85f5, 0xfe1a, 0x1, 0x1);
        gbc.writeMem(0xc74e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x517e, gbc.sp());
        EXPECT(0xc750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74e));
        EXPECT(0x2, gbc.readMem(0xc74f));
        // CB 02 013D
        gbc.setState(0x7780, 0xc18, 0xf4f0, 0x403f, 0xacfb, 0x3d00, 0x0, 0x0);
        gbc.writeMem(0x7780, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc18, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 013E
        gbc.setState(0x7677, 0x35a6, 0xce0, 0x3db2, 0x9fa2, 0x1c0a, 0x0, 0x0);
        gbc.writeMem(0x7677, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x35a6, gbc.sp());
        EXPECT(0x7679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 013F
        gbc.setState(0xce76, 0x8ba1, 0x97e0, 0x69fb, 0xaba8, 0x4bd, 0x0, 0x0);
        gbc.writeMem(0xce76, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8ba1, gbc.sp());
        EXPECT(0xce78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce76));
        EXPECT(0x2, gbc.readMem(0xce77));
        // CB 02 0140
        gbc.setState(0x1191, 0xda22, 0xcc00, 0x8705, 0xce3, 0xaa33, 0x1, 0x0);
        gbc.writeMem(0x1191, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0x1193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0141
        gbc.setState(0x3ebb, 0xff30, 0x4f30, 0x8d23, 0xa73f, 0x275a, 0x1, 0x0);
        gbc.writeMem(0x3ebb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xff30, gbc.sp());
        EXPECT(0x3ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0143
        gbc.setState(0x8f6e, 0x1935, 0xaa60, 0x64d1, 0x6291, 0x7c32, 0x0, 0x1);
        gbc.writeMem(0x8f6e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1935, gbc.sp());
        EXPECT(0x8f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f6e));
        EXPECT(0x2, gbc.readMem(0x8f6f));
        // CB 02 0144
        gbc.setState(0x78b5, 0x4c6d, 0x3cc0, 0xba48, 0xa609, 0x6309, 0x1, 0x1);
        gbc.writeMem(0x78b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4c6d, gbc.sp());
        EXPECT(0x78b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0145
        gbc.setState(0xe48c, 0x6225, 0x4790, 0x89b9, 0xb5b8, 0x95ed, 0x0, 0x1);
        gbc.writeMem(0xe48c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6225, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0x2, gbc.readMem(0xe48d));
        // CB 02 0146
        gbc.setState(0xd1d1, 0x778b, 0xea10, 0x21ff, 0x30f2, 0x7789, 0x0, 0x0);
        gbc.writeMem(0xd1d1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x778b, gbc.sp());
        EXPECT(0xd1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d1));
        EXPECT(0x2, gbc.readMem(0xd1d2));
        // CB 02 0147
        gbc.setState(0x68da, 0x53a3, 0x4c20, 0x4c9a, 0x598e, 0xcb10, 0x0, 0x1);
        gbc.writeMem(0x68da, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x53a3, gbc.sp());
        EXPECT(0x68dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0148
        gbc.setState(0x2342, 0xfd22, 0x8a00, 0xc770, 0x893d, 0xf58f, 0x1, 0x0);
        gbc.writeMem(0x2342, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfd22, gbc.sp());
        EXPECT(0x2344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0149
        gbc.setState(0xecf5, 0x6df5, 0x9dd0, 0x3c49, 0x1875, 0x57c9, 0x1, 0x1);
        gbc.writeMem(0xecf5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6df5, gbc.sp());
        EXPECT(0xecf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf5));
        EXPECT(0x2, gbc.readMem(0xecf6));
        // CB 02 014A
        gbc.setState(0xec3f, 0x3218, 0xe760, 0x2331, 0x45e9, 0xe28c, 0x1, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0xec41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec3f));
        EXPECT(0x2, gbc.readMem(0xec40));
        // CB 02 014B
        gbc.setState(0x7459, 0x498c, 0xb3b0, 0xd82, 0xa3d5, 0xbf43, 0x0, 0x0);
        gbc.writeMem(0x7459, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x498c, gbc.sp());
        EXPECT(0x745b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 014C
        gbc.setState(0xc56, 0x207b, 0x250, 0xfc7b, 0x59da, 0xc986, 0x1, 0x0);
        gbc.writeMem(0xc56, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x207b, gbc.sp());
        EXPECT(0xc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 014D
        gbc.setState(0xe10b, 0x203e, 0x3bd0, 0xbe85, 0x6670, 0xb13b, 0x0, 0x0);
        gbc.writeMem(0xe10b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x203e, gbc.sp());
        EXPECT(0xe10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10b));
        EXPECT(0x2, gbc.readMem(0xe10c));
        // CB 02 014E
        gbc.setState(0xc6e4, 0xec25, 0x3620, 0xf709, 0xce37, 0xb6ae, 0x0, 0x0);
        gbc.writeMem(0xc6e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xec25, gbc.sp());
        EXPECT(0xc6e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e4));
        EXPECT(0x2, gbc.readMem(0xc6e5));
        // CB 02 014F
        gbc.setState(0x661e, 0x7375, 0x69a0, 0x1b8e, 0x36f2, 0x67c7, 0x1, 0x1);
        gbc.writeMem(0x661e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7375, gbc.sp());
        EXPECT(0x6620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0150
        gbc.setState(0x19e7, 0x5001, 0x9800, 0xb833, 0xc584, 0xab80, 0x1, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5001, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0151
        gbc.setState(0xe420, 0x9b15, 0x24e0, 0xaa81, 0x4b7, 0xc015, 0x1, 0x1);
        gbc.writeMem(0xe420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9b15, gbc.sp());
        EXPECT(0xe422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe420));
        EXPECT(0x2, gbc.readMem(0xe421));
        // CB 02 0152
        gbc.setState(0x67db, 0x3930, 0x9f10, 0xbfc9, 0xd14e, 0xdc31, 0x0, 0x1);
        gbc.writeMem(0x67db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3930, gbc.sp());
        EXPECT(0x67dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0153
        gbc.setState(0x75c9, 0xb59a, 0xb030, 0xcfd, 0x842d, 0xe1f3, 0x0, 0x0);
        gbc.writeMem(0x75c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb59a, gbc.sp());
        EXPECT(0x75cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0154
        gbc.setState(0x17c5, 0x9c51, 0x1d20, 0x8956, 0xe259, 0xedee, 0x0, 0x0);
        gbc.writeMem(0x17c5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x17c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0155
        gbc.setState(0xe15, 0x5e3a, 0x7f00, 0xbf6, 0x9e0c, 0x93f1, 0x0, 0x0);
        gbc.writeMem(0xe15, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5e3a, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0156
        gbc.setState(0xb79f, 0x2aa8, 0xc190, 0x9ae4, 0xbb5f, 0x8869, 0x1, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2aa8, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0x2, gbc.readMem(0xb7a0));
        // CB 02 0157
        gbc.setState(0x132c, 0x9f77, 0xf1f0, 0x4ac3, 0x2627, 0x7b9c, 0x1, 0x0);
        gbc.writeMem(0x132c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0x132e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0158
        gbc.setState(0x8fa3, 0x6ea8, 0x1a30, 0x82b4, 0x220, 0xaff8, 0x1, 0x0);
        gbc.writeMem(0x8fa3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x8fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fa3));
        EXPECT(0x2, gbc.readMem(0x8fa4));
        // CB 02 0159
        gbc.setState(0x762a, 0x3b3c, 0x3970, 0x67f, 0xacf3, 0x51f, 0x0, 0x1);
        gbc.writeMem(0x762a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0x762c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 015A
        gbc.setState(0x697f, 0x811d, 0x5150, 0xab72, 0xd1fb, 0xb759, 0x0, 0x0);
        gbc.writeMem(0x697f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x811d, gbc.sp());
        EXPECT(0x6981, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 015B
        gbc.setState(0x8650, 0xada1, 0x200, 0xa2a5, 0x36dc, 0xc037, 0x0, 0x0);
        gbc.writeMem(0x8650, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xada1, gbc.sp());
        EXPECT(0x8652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8650));
        EXPECT(0x2, gbc.readMem(0x8651));
        // CB 02 015C
        gbc.setState(0x5910, 0xaaec, 0xeeb0, 0xa811, 0x1eb3, 0xa2a6, 0x0, 0x0);
        gbc.writeMem(0x5910, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xaaec, gbc.sp());
        EXPECT(0x5912, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 015D
        gbc.setState(0xa400, 0x6d2e, 0x40, 0x8c4a, 0x77fa, 0x246c, 0x1, 0x1);
        gbc.writeMem(0xa400, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xa402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa400));
        EXPECT(0x2, gbc.readMem(0xa401));
        // CB 02 015E
        gbc.setState(0x13f, 0x8912, 0x79a0, 0xf967, 0x17fe, 0x253e, 0x1, 0x1);
        gbc.writeMem(0x13f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8912, gbc.sp());
        EXPECT(0x141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 015F
        gbc.setState(0x946f, 0x1352, 0x7b50, 0x7fa1, 0x384b, 0x1b9c, 0x0, 0x0);
        gbc.writeMem(0x946f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1352, gbc.sp());
        EXPECT(0x9471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x946f));
        EXPECT(0x2, gbc.readMem(0x9470));
        // CB 02 0160
        gbc.setState(0x334e, 0xa88b, 0x7590, 0x7204, 0x80c0, 0x851c, 0x0, 0x1);
        gbc.writeMem(0x334e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa88b, gbc.sp());
        EXPECT(0x3350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0162
        gbc.setState(0x61b5, 0x8577, 0xdb30, 0xa45, 0x157, 0xc866, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8577, gbc.sp());
        EXPECT(0x61b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0163
        gbc.setState(0xb344, 0xa1d3, 0x6520, 0xdeff, 0x2b0, 0xe2b1, 0x0, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa1d3, gbc.sp());
        EXPECT(0xb346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb344));
        EXPECT(0x2, gbc.readMem(0xb345));
        // CB 02 0164
        gbc.setState(0x4c30, 0xc3d7, 0x2540, 0x176b, 0x360c, 0x6712, 0x0, 0x0);
        gbc.writeMem(0x4c30, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc3d7, gbc.sp());
        EXPECT(0x4c32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0165
        gbc.setState(0x9443, 0xfd5f, 0x3550, 0xb945, 0xc46b, 0xe268, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xfd5f, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0x2, gbc.readMem(0x9444));
        // CB 02 0166
        gbc.setState(0x155, 0x7d2c, 0x92b0, 0xb958, 0x93ef, 0xe2f9, 0x1, 0x0);
        gbc.writeMem(0x155, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d2c, gbc.sp());
        EXPECT(0x157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0168
        gbc.setState(0x9988, 0x8493, 0x4ae0, 0xefa3, 0x85b3, 0xc1e, 0x0, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8493, gbc.sp());
        EXPECT(0x998a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9988));
        EXPECT(0x2, gbc.readMem(0x9989));
        // CB 02 016A
        gbc.setState(0x3673, 0x5e90, 0x58e0, 0x7335, 0x17ec, 0xf527, 0x0, 0x1);
        gbc.writeMem(0x3673, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 016C
        gbc.setState(0xbbc8, 0x67ed, 0xa120, 0x80b9, 0xc2a4, 0xd75c, 0x1, 0x1);
        gbc.writeMem(0xbbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x67ed, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc8));
        EXPECT(0x2, gbc.readMem(0xbbc9));
        // CB 02 016D
        gbc.setState(0x9657, 0x3a9d, 0x6d00, 0xc5c9, 0xf011, 0xd70c, 0x1, 0x0);
        gbc.writeMem(0x9657, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3a9d, gbc.sp());
        EXPECT(0x9659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9657));
        EXPECT(0x2, gbc.readMem(0x9658));
        // CB 02 016E
        gbc.setState(0x82ac, 0x22e7, 0x1610, 0x88a2, 0x90cb, 0x70f3, 0x1, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x22e7, gbc.sp());
        EXPECT(0x82ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ac));
        EXPECT(0x2, gbc.readMem(0x82ad));
        // CB 02 016F
        gbc.setState(0x4dcc, 0xb6ed, 0x2c20, 0xaa6, 0xbd62, 0x8c0c, 0x0, 0x0);
        gbc.writeMem(0x4dcc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb6ed, gbc.sp());
        EXPECT(0x4dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0170
        gbc.setState(0xa6d3, 0xaf49, 0x3d80, 0x744, 0x1604, 0xbf10, 0x1, 0x0);
        gbc.writeMem(0xa6d3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xaf49, gbc.sp());
        EXPECT(0xa6d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d3));
        EXPECT(0x2, gbc.readMem(0xa6d4));
        // CB 02 0172
        gbc.setState(0x28d2, 0x12b5, 0x9780, 0x9263, 0xad0a, 0xcd2e, 0x0, 0x1);
        gbc.writeMem(0x28d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x12b5, gbc.sp());
        EXPECT(0x28d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0173
        gbc.setState(0x836e, 0x51eb, 0x9f80, 0xe7ac, 0x50d9, 0x5d5c, 0x0, 0x0);
        gbc.writeMem(0x836e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x51eb, gbc.sp());
        EXPECT(0x8370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x836e));
        EXPECT(0x2, gbc.readMem(0x836f));
        // CB 02 0174
        gbc.setState(0xbbc8, 0xa1fe, 0xab10, 0x7ec9, 0xaa3e, 0xda53, 0x0, 0x0);
        gbc.writeMem(0xbbc8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa1fe, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc8));
        EXPECT(0x2, gbc.readMem(0xbbc9));
        // CB 02 0175
        gbc.setState(0x1d8e, 0x113f, 0x7fd0, 0xefce, 0x367f, 0xfe79, 0x0, 0x1);
        gbc.writeMem(0x1d8e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x113f, gbc.sp());
        EXPECT(0x1d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0176
        gbc.setState(0x4a0a, 0x182f, 0xc270, 0x5b22, 0x6fc3, 0x828a, 0x1, 0x1);
        gbc.writeMem(0x4a0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x182f, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0177
        gbc.setState(0xdebd, 0xbf94, 0x4f30, 0x30ac, 0x5857, 0x36ff, 0x1, 0x0);
        gbc.writeMem(0xdebd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbf94, gbc.sp());
        EXPECT(0xdebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdebd));
        EXPECT(0x2, gbc.readMem(0xdebe));
        // CB 02 0178
        gbc.setState(0x83df, 0x8c7d, 0x36b0, 0xac41, 0xc6b1, 0xfce4, 0x0, 0x1);
        gbc.writeMem(0x83df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8c7d, gbc.sp());
        EXPECT(0x83e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83df));
        EXPECT(0x2, gbc.readMem(0x83e0));
        // CB 02 0179
        gbc.setState(0x6edb, 0x7b80, 0x5df0, 0x9794, 0xa81c, 0x3784, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7b80, gbc.sp());
        EXPECT(0x6edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 017A
        gbc.setState(0x5628, 0x1469, 0x4b30, 0xf2ff, 0x4559, 0x9a79, 0x0, 0x0);
        gbc.writeMem(0x5628, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1469, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 017B
        gbc.setState(0x8735, 0x8833, 0xd440, 0x2697, 0x1186, 0xb2e6, 0x1, 0x1);
        gbc.writeMem(0x8735, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8833, gbc.sp());
        EXPECT(0x8737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8735));
        EXPECT(0x2, gbc.readMem(0x8736));
        // CB 02 017C
        gbc.setState(0x7e90, 0x358b, 0x7e80, 0x7ed1, 0x63ae, 0x5ba1, 0x0, 0x1);
        gbc.writeMem(0x7e90, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x358b, gbc.sp());
        EXPECT(0x7e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 017E
        gbc.setState(0xd906, 0x2a55, 0xba50, 0x1630, 0x80a4, 0xb909, 0x1, 0x1);
        gbc.writeMem(0xd906, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2a55, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0x2, gbc.readMem(0xd907));
        // CB 02 017F
        gbc.setState(0xa968, 0x95bd, 0x7730, 0xef96, 0xcd75, 0x9524, 0x1, 0x0);
        gbc.writeMem(0xa968, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x95bd, gbc.sp());
        EXPECT(0xa96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa968));
        EXPECT(0x2, gbc.readMem(0xa969));
        // CB 02 0180
        gbc.setState(0x81a6, 0x6726, 0x9420, 0xfac7, 0x59c4, 0xeb59, 0x1, 0x1);
        gbc.writeMem(0x81a6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6726, gbc.sp());
        EXPECT(0x81a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a6));
        EXPECT(0x2, gbc.readMem(0x81a7));
        // CB 02 0181
        gbc.setState(0xcba4, 0x42ae, 0xe220, 0x2b2, 0xa1e7, 0x9140, 0x1, 0x0);
        gbc.writeMem(0xcba4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x42ae, gbc.sp());
        EXPECT(0xcba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcba4));
        EXPECT(0x2, gbc.readMem(0xcba5));
        // CB 02 0182
        gbc.setState(0x2a40, 0x945, 0x3580, 0x84a3, 0xcae9, 0xc4c2, 0x1, 0x0);
        gbc.writeMem(0x2a40, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x945, gbc.sp());
        EXPECT(0x2a42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0183
        gbc.setState(0x386d, 0x9091, 0xd870, 0x9d6a, 0x53b4, 0x7579, 0x0, 0x1);
        gbc.writeMem(0x386d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0x386f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0184
        gbc.setState(0x741e, 0x2fc3, 0x8eb0, 0x152e, 0xe2f5, 0x3fe, 0x1, 0x1);
        gbc.writeMem(0x741e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2fc3, gbc.sp());
        EXPECT(0x7420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0185
        gbc.setState(0xcb9a, 0xf6ea, 0xa710, 0x5dcd, 0x475d, 0x712a, 0x0, 0x0);
        gbc.writeMem(0xcb9a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf6ea, gbc.sp());
        EXPECT(0xcb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9a));
        EXPECT(0x2, gbc.readMem(0xcb9b));
        // CB 02 0186
        gbc.setState(0xbf58, 0x6093, 0xb1a0, 0xf020, 0xd49f, 0x4f3, 0x1, 0x0);
        gbc.writeMem(0xbf58, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6093, gbc.sp());
        EXPECT(0xbf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf58));
        EXPECT(0x2, gbc.readMem(0xbf59));
        // CB 02 0187
        gbc.setState(0x4e7c, 0xa0f8, 0x9c00, 0x759b, 0x48c0, 0xbf5f, 0x0, 0x1);
        gbc.writeMem(0x4e7c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0x4e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0188
        gbc.setState(0xe4d0, 0xd245, 0x4930, 0x3f75, 0xfb7a, 0xed0d, 0x0, 0x0);
        gbc.writeMem(0xe4d0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0xe4d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d0));
        EXPECT(0x2, gbc.readMem(0xe4d1));
        // CB 02 0189
        gbc.setState(0x2f53, 0x428c, 0xd920, 0x992f, 0x16eb, 0x2292, 0x1, 0x0);
        gbc.writeMem(0x2f53, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x428c, gbc.sp());
        EXPECT(0x2f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 018A
        gbc.setState(0x9b99, 0xf671, 0xadf0, 0x37ae, 0xf943, 0x68c7, 0x1, 0x1);
        gbc.writeMem(0x9b99, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf671, gbc.sp());
        EXPECT(0x9b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b99));
        EXPECT(0x2, gbc.readMem(0x9b9a));
        // CB 02 018B
        gbc.setState(0x3be3, 0xc9c6, 0xd4d0, 0x46e0, 0xda9a, 0x8aa5, 0x1, 0x1);
        gbc.writeMem(0x3be3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc9c6, gbc.sp());
        EXPECT(0x3be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 018C
        gbc.setState(0xc39d, 0x5211, 0xc490, 0x2238, 0x63f3, 0x5023, 0x0, 0x0);
        gbc.writeMem(0xc39d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5211, gbc.sp());
        EXPECT(0xc39f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39d));
        EXPECT(0x2, gbc.readMem(0xc39e));
        // CB 02 018D
        gbc.setState(0x29e9, 0xf37, 0xa120, 0x4038, 0xbfa5, 0x5943, 0x0, 0x0);
        gbc.writeMem(0x29e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0x29eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 018E
        gbc.setState(0x6e8b, 0xb5b2, 0xd0, 0x47f3, 0xc13, 0x3b60, 0x1, 0x1);
        gbc.writeMem(0x6e8b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb5b2, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 018F
        gbc.setState(0x6314, 0xa90b, 0x9030, 0xd41c, 0x151f, 0xe222, 0x0, 0x1);
        gbc.writeMem(0x6314, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa90b, gbc.sp());
        EXPECT(0x6316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0191
        gbc.setState(0xc584, 0x5f83, 0x7250, 0x29dd, 0x3664, 0x375e, 0x0, 0x0);
        gbc.writeMem(0xc584, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc584));
        EXPECT(0x2, gbc.readMem(0xc585));
        // CB 02 0192
        gbc.setState(0x4b25, 0x1de3, 0xf7c0, 0x8393, 0x9edc, 0x3561, 0x0, 0x1);
        gbc.writeMem(0x4b25, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1de3, gbc.sp());
        EXPECT(0x4b27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0193
        gbc.setState(0x555a, 0x1443, 0x3790, 0xa294, 0xf57f, 0x2d5f, 0x1, 0x0);
        gbc.writeMem(0x555a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1443, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0194
        gbc.setState(0xa340, 0x25ce, 0x4dd0, 0xe342, 0x81fa, 0x93c0, 0x1, 0x0);
        gbc.writeMem(0xa340, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x25ce, gbc.sp());
        EXPECT(0xa342, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa340));
        EXPECT(0x2, gbc.readMem(0xa341));
        // CB 02 0195
        gbc.setState(0x97ef, 0x1d64, 0x4530, 0x807f, 0x5627, 0x3dae, 0x1, 0x0);
        gbc.writeMem(0x97ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1d64, gbc.sp());
        EXPECT(0x97f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ef));
        EXPECT(0x2, gbc.readMem(0x97f0));
        // CB 02 0196
        gbc.setState(0x287c, 0x6f15, 0x80b0, 0x1021, 0x1888, 0x78ad, 0x1, 0x0);
        gbc.writeMem(0x287c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6f15, gbc.sp());
        EXPECT(0x287e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0197
        gbc.setState(0xe15a, 0xb510, 0xa850, 0xca94, 0x3097, 0x2cea, 0x1, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb510, gbc.sp());
        EXPECT(0xe15c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15a));
        EXPECT(0x2, gbc.readMem(0xe15b));
        // CB 02 0199
        gbc.setState(0x6485, 0x47a1, 0xa0e0, 0xa13d, 0xc2d6, 0x3d5c, 0x0, 0x1);
        gbc.writeMem(0x6485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x47a1, gbc.sp());
        EXPECT(0x6487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 019A
        gbc.setState(0x20c3, 0x2dff, 0x1780, 0x35a8, 0x6a38, 0xf07a, 0x1, 0x0);
        gbc.writeMem(0x20c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2dff, gbc.sp());
        EXPECT(0x20c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 019B
        gbc.setState(0x96a7, 0x9964, 0x2cd0, 0x4839, 0x6bfa, 0xf281, 0x0, 0x0);
        gbc.writeMem(0x96a7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9964, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a7));
        EXPECT(0x2, gbc.readMem(0x96a8));
        // CB 02 019C
        gbc.setState(0xbe6a, 0x359b, 0x74d0, 0x2e7a, 0xda5d, 0x2eff, 0x0, 0x0);
        gbc.writeMem(0xbe6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x359b, gbc.sp());
        EXPECT(0xbe6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6a));
        EXPECT(0x2, gbc.readMem(0xbe6b));
        // CB 02 019D
        gbc.setState(0x1e4f, 0x116c, 0x7d60, 0x3ff4, 0x2a84, 0xa263, 0x1, 0x1);
        gbc.writeMem(0x1e4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x116c, gbc.sp());
        EXPECT(0x1e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 019E
        gbc.setState(0x5f3a, 0xb841, 0x7a80, 0xe9f6, 0xe83f, 0xfaed, 0x0, 0x0);
        gbc.writeMem(0x5f3a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb841, gbc.sp());
        EXPECT(0x5f3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 019F
        gbc.setState(0xdcda, 0xe129, 0xaec0, 0x71fa, 0x75af, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0xdcda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe129, gbc.sp());
        EXPECT(0xdcdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcda));
        EXPECT(0x2, gbc.readMem(0xdcdb));
        // CB 02 01A0
        gbc.setState(0x45e1, 0xde5d, 0xb190, 0x6cb9, 0xaf24, 0x55a, 0x1, 0x0);
        gbc.writeMem(0x45e1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xde5d, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01A1
        gbc.setState(0x9669, 0x79d1, 0x3de0, 0x41fe, 0x6f62, 0x8f97, 0x0, 0x1);
        gbc.writeMem(0x9669, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x79d1, gbc.sp());
        EXPECT(0x966b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9669));
        EXPECT(0x2, gbc.readMem(0x966a));
        // CB 02 01A2
        gbc.setState(0x8314, 0x82e9, 0xa70, 0xe237, 0xc8c4, 0x7d75, 0x0, 0x0);
        gbc.writeMem(0x8314, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x82e9, gbc.sp());
        EXPECT(0x8316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8314));
        EXPECT(0x2, gbc.readMem(0x8315));
        // CB 02 01A3
        gbc.setState(0xd918, 0xe95e, 0xb8d0, 0x626d, 0xe240, 0xbc86, 0x0, 0x0);
        gbc.writeMem(0xd918, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe95e, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd918));
        EXPECT(0x2, gbc.readMem(0xd919));
        // CB 02 01A4
        gbc.setState(0x6b7, 0xbc41, 0x180, 0xffa7, 0x63aa, 0x7992, 0x0, 0x0);
        gbc.writeMem(0x6b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbc41, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01A5
        gbc.setState(0x6a2f, 0x7239, 0x2f70, 0x1351, 0xe5cf, 0xbd93, 0x0, 0x1);
        gbc.writeMem(0x6a2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7239, gbc.sp());
        EXPECT(0x6a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01A6
        gbc.setState(0x73b0, 0xba95, 0x3450, 0x898d, 0x44ff, 0x7402, 0x1, 0x0);
        gbc.writeMem(0x73b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xba95, gbc.sp());
        EXPECT(0x73b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01A7
        gbc.setState(0x7139, 0x9d73, 0x38e0, 0x61c5, 0x974f, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0x7139, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9d73, gbc.sp());
        EXPECT(0x713b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01A8
        gbc.setState(0xe6fa, 0x4683, 0x4270, 0xee5, 0x94ac, 0xdc7d, 0x0, 0x0);
        gbc.writeMem(0xe6fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4683, gbc.sp());
        EXPECT(0xe6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fa));
        EXPECT(0x2, gbc.readMem(0xe6fb));
        // CB 02 01A9
        gbc.setState(0x2301, 0xd190, 0xfcb0, 0x3957, 0xfa16, 0xd100, 0x0, 0x1);
        gbc.writeMem(0x2301, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd190, gbc.sp());
        EXPECT(0x2303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01AA
        gbc.setState(0x118d, 0xc747, 0xb3b0, 0xe85, 0xc63f, 0x3f3d, 0x1, 0x0);
        gbc.writeMem(0x118d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc747, gbc.sp());
        EXPECT(0x118f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01AB
        gbc.setState(0xcd98, 0x6a25, 0x9650, 0xa53c, 0x4ef8, 0xa84e, 0x0, 0x1);
        gbc.writeMem(0xcd98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6a25, gbc.sp());
        EXPECT(0xcd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd98));
        EXPECT(0x2, gbc.readMem(0xcd99));
        // CB 02 01AC
        gbc.setState(0xb43c, 0x4913, 0xa0d0, 0xa6a, 0x95ef, 0x5e4b, 0x1, 0x1);
        gbc.writeMem(0xb43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4913, gbc.sp());
        EXPECT(0xb43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb43c));
        EXPECT(0x2, gbc.readMem(0xb43d));
        // CB 02 01AD
        gbc.setState(0x913c, 0x3b39, 0x99c0, 0x364, 0xb6c4, 0xcd91, 0x0, 0x0);
        gbc.writeMem(0x913c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3b39, gbc.sp());
        EXPECT(0x913e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x913c));
        EXPECT(0x2, gbc.readMem(0x913d));
        // CB 02 01B0
        gbc.setState(0x5a04, 0xb2ae, 0x5220, 0x8968, 0xed76, 0xf891, 0x1, 0x0);
        gbc.writeMem(0x5a04, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb2ae, gbc.sp());
        EXPECT(0x5a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01B1
        gbc.setState(0x7788, 0x327, 0xe090, 0x6592, 0x7fc7, 0xe08d, 0x0, 0x1);
        gbc.writeMem(0x7788, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01B2
        gbc.setState(0x174b, 0x6849, 0x3ec0, 0x6b51, 0x8149, 0xec03, 0x1, 0x0);
        gbc.writeMem(0x174b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6849, gbc.sp());
        EXPECT(0x174d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01B3
        gbc.setState(0xd3c3, 0x9cec, 0x4ba0, 0x34dc, 0xa90b, 0xe9b9, 0x1, 0x0);
        gbc.writeMem(0xd3c3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9cec, gbc.sp());
        EXPECT(0xd3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c3));
        EXPECT(0x2, gbc.readMem(0xd3c4));
        // CB 02 01B4
        gbc.setState(0x250b, 0x5b38, 0x7c20, 0xb263, 0x59, 0x65f4, 0x0, 0x0);
        gbc.writeMem(0x250b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5b38, gbc.sp());
        EXPECT(0x250d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01B5
        gbc.setState(0x8939, 0xdfd3, 0x5a60, 0xf324, 0x5cb9, 0xd558, 0x0, 0x1);
        gbc.writeMem(0x8939, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xdfd3, gbc.sp());
        EXPECT(0x893b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8939));
        EXPECT(0x2, gbc.readMem(0x893a));
        // CB 02 01B7
        gbc.setState(0xeea7, 0x2754, 0x4660, 0xcce6, 0x855b, 0x4cd5, 0x0, 0x1);
        gbc.writeMem(0xeea7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2754, gbc.sp());
        EXPECT(0xeea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea7));
        EXPECT(0x2, gbc.readMem(0xeea8));
        // CB 02 01BA
        gbc.setState(0x61d7, 0xc718, 0x10d0, 0xc6b3, 0x549b, 0x5d4, 0x0, 0x1);
        gbc.writeMem(0x61d7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc718, gbc.sp());
        EXPECT(0x61d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01BB
        gbc.setState(0xebbe, 0x4500, 0xf1f0, 0xb7d7, 0xb199, 0x7df4, 0x0, 0x1);
        gbc.writeMem(0xebbe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0xebc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebbe));
        EXPECT(0x2, gbc.readMem(0xebbf));
        // CB 02 01BC
        gbc.setState(0x7629, 0xb020, 0xa450, 0xd21e, 0x3233, 0x64ad, 0x0, 0x1);
        gbc.writeMem(0x7629, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb020, gbc.sp());
        EXPECT(0x762b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01BD
        gbc.setState(0x5e7f, 0xabcd, 0xd000, 0x5e0e, 0x209c, 0x9c25, 0x1, 0x1);
        gbc.writeMem(0x5e7f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xabcd, gbc.sp());
        EXPECT(0x5e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01BE
        gbc.setState(0xbecc, 0xa41a, 0x3480, 0xb13f, 0x91ac, 0x9b82, 0x1, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa41a, gbc.sp());
        EXPECT(0xbece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecc));
        EXPECT(0x2, gbc.readMem(0xbecd));
        // CB 02 01BF
        gbc.setState(0x9b31, 0x9ffd, 0xa4f0, 0xda7, 0x5f79, 0x5f7a, 0x0, 0x1);
        gbc.writeMem(0x9b31, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9ffd, gbc.sp());
        EXPECT(0x9b33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b31));
        EXPECT(0x2, gbc.readMem(0x9b32));
        // CB 02 01C0
        gbc.setState(0xc39a, 0x68, 0x5ea0, 0x1fc3, 0xad97, 0x796e, 0x1, 0x0);
        gbc.writeMem(0xc39a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x68, gbc.sp());
        EXPECT(0xc39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39a));
        EXPECT(0x2, gbc.readMem(0xc39b));
        // CB 02 01C1
        gbc.setState(0x7b1c, 0xe6b3, 0xcf80, 0x61dc, 0xa630, 0xe522, 0x0, 0x1);
        gbc.writeMem(0x7b1c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe6b3, gbc.sp());
        EXPECT(0x7b1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01C2
        gbc.setState(0x643e, 0x8706, 0x9010, 0xc09f, 0xc7c3, 0x5dfc, 0x0, 0x1);
        gbc.writeMem(0x643e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8706, gbc.sp());
        EXPECT(0x6440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01C3
        gbc.setState(0x6921, 0x9fd2, 0x6150, 0x462e, 0x8a8f, 0x49dc, 0x0, 0x0);
        gbc.writeMem(0x6921, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9fd2, gbc.sp());
        EXPECT(0x6923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01C4
        gbc.setState(0x2f1a, 0x97, 0xc60, 0x499d, 0x7820, 0x6b6a, 0x1, 0x1);
        gbc.writeMem(0x2f1a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x97, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01C5
        gbc.setState(0xb9f0, 0xd19b, 0xd840, 0xf3d0, 0x92c5, 0x6c1d, 0x0, 0x1);
        gbc.writeMem(0xb9f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd19b, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f0));
        EXPECT(0x2, gbc.readMem(0xb9f1));
        // CB 02 01C6
        gbc.setState(0xeee9, 0x62f7, 0xd20, 0x3157, 0xd2ef, 0xc797, 0x0, 0x0);
        gbc.writeMem(0xeee9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x62f7, gbc.sp());
        EXPECT(0xeeeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee9));
        EXPECT(0x2, gbc.readMem(0xeeea));
        // CB 02 01C7
        gbc.setState(0x4cfc, 0xb0ce, 0xeb10, 0xd1d8, 0x8712, 0x6be6, 0x1, 0x0);
        gbc.writeMem(0x4cfc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb0ce, gbc.sp());
        EXPECT(0x4cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01C8
        gbc.setState(0xc401, 0x2f4a, 0xbbf0, 0x16ba, 0x5cb9, 0x62bf, 0x1, 0x1);
        gbc.writeMem(0xc401, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2f4a, gbc.sp());
        EXPECT(0xc403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc401));
        EXPECT(0x2, gbc.readMem(0xc402));
        // CB 02 01C9
        gbc.setState(0x934b, 0xc717, 0x39b0, 0x68b2, 0xb5f0, 0xbc16, 0x1, 0x0);
        gbc.writeMem(0x934b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc717, gbc.sp());
        EXPECT(0x934d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934b));
        EXPECT(0x2, gbc.readMem(0x934c));
        // CB 02 01CA
        gbc.setState(0xb5f1, 0x6766, 0xc2b0, 0x2ca, 0x29de, 0x2505, 0x1, 0x0);
        gbc.writeMem(0xb5f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6766, gbc.sp());
        EXPECT(0xb5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f1));
        EXPECT(0x2, gbc.readMem(0xb5f2));
        // CB 02 01CC
        gbc.setState(0x9e7f, 0xea43, 0xd890, 0x7cf1, 0x23a9, 0x60cb, 0x1, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xea43, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0x2, gbc.readMem(0x9e80));
        // CB 02 01CD
        gbc.setState(0x4541, 0x4f33, 0xdd90, 0x4053, 0x403e, 0x10f1, 0x0, 0x1);
        gbc.writeMem(0x4541, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4f33, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01CE
        gbc.setState(0x7b6, 0x4518, 0xca80, 0xd6c3, 0x1e84, 0x5fcc, 0x0, 0x1);
        gbc.writeMem(0x7b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4518, gbc.sp());
        EXPECT(0x7b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01CF
        gbc.setState(0xc14e, 0x22f6, 0x7950, 0x953a, 0x424c, 0xcacb, 0x0, 0x1);
        gbc.writeMem(0xc14e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x22f6, gbc.sp());
        EXPECT(0xc150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14e));
        EXPECT(0x2, gbc.readMem(0xc14f));
        // CB 02 01D0
        gbc.setState(0x3be3, 0x407f, 0x990, 0xd980, 0x6ee5, 0x9317, 0x1, 0x1);
        gbc.writeMem(0x3be3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x407f, gbc.sp());
        EXPECT(0x3be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01D1
        gbc.setState(0xe5f8, 0x242a, 0x90b0, 0xaf, 0x3a7, 0x33c3, 0x0, 0x1);
        gbc.writeMem(0xe5f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x242a, gbc.sp());
        EXPECT(0xe5fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5f8));
        EXPECT(0x2, gbc.readMem(0xe5f9));
        // CB 02 01D2
        gbc.setState(0xa175, 0xf7b4, 0x3190, 0xf9c9, 0xea28, 0x14d4, 0x1, 0x0);
        gbc.writeMem(0xa175, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf7b4, gbc.sp());
        EXPECT(0xa177, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa175));
        EXPECT(0x2, gbc.readMem(0xa176));
        // CB 02 01D3
        gbc.setState(0x4d2d, 0xa01e, 0x4b10, 0xf121, 0xb074, 0x2401, 0x0, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa01e, gbc.sp());
        EXPECT(0x4d2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01D4
        gbc.setState(0xc7b0, 0xad6f, 0x8990, 0xae05, 0xeb13, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0xc7b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xad6f, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0x2, gbc.readMem(0xc7b1));
        // CB 02 01D5
        gbc.setState(0xbe4e, 0x9901, 0x4160, 0x7615, 0xfb13, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0xbe4e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9901, gbc.sp());
        EXPECT(0xbe50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe4e));
        EXPECT(0x2, gbc.readMem(0xbe4f));
        // CB 02 01D6
        gbc.setState(0x63dd, 0x15ee, 0x7910, 0x33be, 0x925d, 0xf221, 0x1, 0x1);
        gbc.writeMem(0x63dd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0x63df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01D7
        gbc.setState(0x3bd7, 0xfb7c, 0xbc0, 0x5d9d, 0xda32, 0xa5d3, 0x1, 0x0);
        gbc.writeMem(0x3bd7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfb7c, gbc.sp());
        EXPECT(0x3bd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01D8
        gbc.setState(0xe905, 0x21bc, 0x66a0, 0xe7ff, 0xdc47, 0x2693, 0x0, 0x0);
        gbc.writeMem(0xe905, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0xe907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe905));
        EXPECT(0x2, gbc.readMem(0xe906));
        // CB 02 01D9
        gbc.setState(0xdfeb, 0xe1c1, 0xbe10, 0x132, 0x6f5d, 0x9d89, 0x1, 0x1);
        gbc.writeMem(0xdfeb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe1c1, gbc.sp());
        EXPECT(0xdfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfeb));
        EXPECT(0x2, gbc.readMem(0xdfec));
        // CB 02 01DA
        gbc.setState(0x9f98, 0xdbfd, 0x8550, 0x580d, 0x8ada, 0xb589, 0x0, 0x0);
        gbc.writeMem(0x9f98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdbfd, gbc.sp());
        EXPECT(0x9f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f98));
        EXPECT(0x2, gbc.readMem(0x9f99));
        // CB 02 01DB
        gbc.setState(0xe0b8, 0x6530, 0xc740, 0x520a, 0x135d, 0x4328, 0x1, 0x1);
        gbc.writeMem(0xe0b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6530, gbc.sp());
        EXPECT(0xe0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b8));
        EXPECT(0x2, gbc.readMem(0xe0b9));
        // CB 02 01DC
        gbc.setState(0x202a, 0xedd3, 0x18b0, 0x200c, 0xf89d, 0xa3d, 0x0, 0x1);
        gbc.writeMem(0x202a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xedd3, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01DD
        gbc.setState(0xe8e5, 0x2ff, 0x53c0, 0xa5a7, 0xfd77, 0x46e3, 0x0, 0x1);
        gbc.writeMem(0xe8e5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2ff, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e5));
        EXPECT(0x2, gbc.readMem(0xe8e6));
        // CB 02 01DE
        gbc.setState(0x2a29, 0x5f13, 0x7a00, 0xaa10, 0xd523, 0x5c8e, 0x0, 0x0);
        gbc.writeMem(0x2a29, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5f13, gbc.sp());
        EXPECT(0x2a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01DF
        gbc.setState(0xceca, 0xb48b, 0x8220, 0xa442, 0xa448, 0x492b, 0x1, 0x1);
        gbc.writeMem(0xceca, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb48b, gbc.sp());
        EXPECT(0xcecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceca));
        EXPECT(0x2, gbc.readMem(0xcecb));
        // CB 02 01E0
        gbc.setState(0x2ac1, 0x6037, 0x9c10, 0x43b4, 0xe684, 0x3c94, 0x1, 0x0);
        gbc.writeMem(0x2ac1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6037, gbc.sp());
        EXPECT(0x2ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01E1
        gbc.setState(0xd392, 0xd4fb, 0xf440, 0x379c, 0x2ea, 0x2b28, 0x0, 0x0);
        gbc.writeMem(0xd392, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0xd394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd392));
        EXPECT(0x2, gbc.readMem(0xd393));
        // CB 02 01E2
        gbc.setState(0x135b, 0xff00, 0xf5b0, 0xc83e, 0x1f55, 0xb339, 0x0, 0x1);
        gbc.writeMem(0x135b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xff00, gbc.sp());
        EXPECT(0x135d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01E3
        gbc.setState(0x6521, 0x1159, 0x8ef0, 0xab8f, 0xfe6d, 0x921d, 0x1, 0x1);
        gbc.writeMem(0x6521, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1159, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01E4
        gbc.setState(0x7a85, 0xc5f1, 0x20c0, 0xc777, 0x4684, 0xddd6, 0x0, 0x0);
        gbc.writeMem(0x7a85, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc5f1, gbc.sp());
        EXPECT(0x7a87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01E5
        gbc.setState(0xd906, 0xcaec, 0x9030, 0x419d, 0x835b, 0xd52, 0x0, 0x0);
        gbc.writeMem(0xd906, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcaec, gbc.sp());
        EXPECT(0xd908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd906));
        EXPECT(0x2, gbc.readMem(0xd907));
        // CB 02 01E6
        gbc.setState(0x3f27, 0xf21, 0x1a10, 0x82cb, 0x474f, 0xcfa4, 0x1, 0x1);
        gbc.writeMem(0x3f27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf21, gbc.sp());
        EXPECT(0x3f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01E7
        gbc.setState(0x751, 0xb17f, 0xc090, 0x4462, 0x83c3, 0x755d, 0x0, 0x1);
        gbc.writeMem(0x751, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb17f, gbc.sp());
        EXPECT(0x753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01E8
        gbc.setState(0x346a, 0xe0b6, 0xba0, 0xaad1, 0xc752, 0x5d4d, 0x0, 0x1);
        gbc.writeMem(0x346a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe0b6, gbc.sp());
        EXPECT(0x346c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01E9
        gbc.setState(0x9213, 0x5b82, 0x9cc0, 0xd7d4, 0x6c00, 0xcd64, 0x1, 0x1);
        gbc.writeMem(0x9213, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5b82, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0x2, gbc.readMem(0x9214));
        // CB 02 01EA
        gbc.setState(0x6cff, 0xd125, 0xf270, 0xf68c, 0x6804, 0x50c8, 0x1, 0x1);
        gbc.writeMem(0x6cff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x6d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01EB
        gbc.setState(0x9b24, 0xcb26, 0x2f50, 0x3987, 0x4ea0, 0x854a, 0x0, 0x0);
        gbc.writeMem(0x9b24, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x9b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b24));
        EXPECT(0x2, gbc.readMem(0x9b25));
        // CB 02 01EC
        gbc.setState(0x4250, 0xd438, 0xa820, 0x5f87, 0x89a2, 0x3926, 0x1, 0x0);
        gbc.writeMem(0x4250, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd438, gbc.sp());
        EXPECT(0x4252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01ED
        gbc.setState(0x26c2, 0x3427, 0x5110, 0x7766, 0x9ce3, 0xa8f5, 0x0, 0x0);
        gbc.writeMem(0x26c2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3427, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01EE
        gbc.setState(0xbb2d, 0x7718, 0xa020, 0x3cbb, 0x2994, 0xddfb, 0x0, 0x1);
        gbc.writeMem(0xbb2d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7718, gbc.sp());
        EXPECT(0xbb2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2d));
        EXPECT(0x2, gbc.readMem(0xbb2e));
        // CB 02 01EF
        gbc.setState(0xaaf, 0xe80d, 0x9640, 0x11cd, 0xc6fb, 0xc35, 0x1, 0x0);
        gbc.writeMem(0xaaf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe80d, gbc.sp());
        EXPECT(0xab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01F0
        gbc.setState(0x1ce8, 0xfeb7, 0x7940, 0x476b, 0x5ba4, 0xb46d, 0x1, 0x0);
        gbc.writeMem(0x1ce8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xfeb7, gbc.sp());
        EXPECT(0x1cea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01F1
        gbc.setState(0x7d2e, 0x79d0, 0x32c0, 0xcd7e, 0xfdec, 0x3ecc, 0x0, 0x1);
        gbc.writeMem(0x7d2e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x79d0, gbc.sp());
        EXPECT(0x7d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01F2
        gbc.setState(0x9601, 0x485e, 0xb050, 0x5cde, 0x2c56, 0x65a0, 0x1, 0x0);
        gbc.writeMem(0x9601, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x485e, gbc.sp());
        EXPECT(0x9603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9601));
        EXPECT(0x2, gbc.readMem(0x9602));
        // CB 02 01F3
        gbc.setState(0xd6f0, 0xa805, 0x7cc0, 0x181, 0x5830, 0xcd54, 0x0, 0x1);
        gbc.writeMem(0xd6f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa805, gbc.sp());
        EXPECT(0xd6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f0));
        EXPECT(0x2, gbc.readMem(0xd6f1));
        // CB 02 01F4
        gbc.setState(0x937c, 0x3e7e, 0xb0, 0x2cfa, 0x1f8, 0x6712, 0x0, 0x1);
        gbc.writeMem(0x937c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3e7e, gbc.sp());
        EXPECT(0x937e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x937c));
        EXPECT(0x2, gbc.readMem(0x937d));
        // CB 02 01F7
        gbc.setState(0x1544, 0x8189, 0x6670, 0x3b01, 0xa46e, 0xf397, 0x1, 0x1);
        gbc.writeMem(0x1544, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8189, gbc.sp());
        EXPECT(0x1546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01F8
        gbc.setState(0x71df, 0xc947, 0xf880, 0xa97f, 0x82ea, 0x1e79, 0x0, 0x0);
        gbc.writeMem(0x71df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc947, gbc.sp());
        EXPECT(0x71e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01F9
        gbc.setState(0x1c13, 0xec3d, 0x5df0, 0x1815, 0x167d, 0x4a45, 0x1, 0x1);
        gbc.writeMem(0x1c13, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xec3d, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 01FA
        gbc.setState(0x91c8, 0xfdbe, 0xbde0, 0xa7fb, 0x808b, 0xc022, 0x1, 0x0);
        gbc.writeMem(0x91c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xfdbe, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c8));
        EXPECT(0x2, gbc.readMem(0x91c9));
        // CB 02 01FB
        gbc.setState(0xc535, 0xaa79, 0x6c90, 0x47b8, 0x4d28, 0xafc3, 0x1, 0x0);
        gbc.writeMem(0xc535, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xaa79, gbc.sp());
        EXPECT(0xc537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc535));
        EXPECT(0x2, gbc.readMem(0xc536));
        // CB 02 01FD
        gbc.setState(0x2611, 0xaec2, 0xdd10, 0x1467, 0xbded, 0xd512, 0x0, 0x0);
        gbc.writeMem(0x2611, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xaec2, gbc.sp());
        EXPECT(0x2613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01FE
        gbc.setState(0x6cfa, 0xcf47, 0x4f30, 0x9b27, 0x8098, 0xc9ae, 0x0, 0x1);
        gbc.writeMem(0x6cfa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcf47, gbc.sp());
        EXPECT(0x6cfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 01FF
        gbc.setState(0xc534, 0xe8e8, 0x72c0, 0xb419, 0x19a0, 0x6f00, 0x1, 0x0);
        gbc.writeMem(0xc534, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0xc536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc534));
        EXPECT(0x2, gbc.readMem(0xc535));
        // CB 02 0200
        gbc.setState(0x9f9b, 0x7211, 0x8b30, 0x7fef, 0x389b, 0x93ab, 0x1, 0x0);
        gbc.writeMem(0x9f9b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7211, gbc.sp());
        EXPECT(0x9f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f9b));
        EXPECT(0x2, gbc.readMem(0x9f9c));
        // CB 02 0201
        gbc.setState(0x2866, 0x5e16, 0x8670, 0x3c76, 0x1ee4, 0xd5bf, 0x0, 0x0);
        gbc.writeMem(0x2866, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5e16, gbc.sp());
        EXPECT(0x2868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0202
        gbc.setState(0xd580, 0x491c, 0x8290, 0xcd1e, 0xba14, 0xf8e7, 0x0, 0x0);
        gbc.writeMem(0xd580, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x491c, gbc.sp());
        EXPECT(0xd582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd580));
        EXPECT(0x2, gbc.readMem(0xd581));
        // CB 02 0204
        gbc.setState(0x2cc3, 0x4460, 0xfda0, 0x5fbf, 0x40b, 0x92fb, 0x1, 0x1);
        gbc.writeMem(0x2cc3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4460, gbc.sp());
        EXPECT(0x2cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0205
        gbc.setState(0xbe31, 0x3802, 0x7310, 0xeee7, 0xfb7e, 0xe79e, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3802, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe31));
        EXPECT(0x2, gbc.readMem(0xbe32));
        // CB 02 0206
        gbc.setState(0xeafa, 0x1cb2, 0xc3d0, 0x67c5, 0x1846, 0x69f3, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1cb2, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafa));
        EXPECT(0x2, gbc.readMem(0xeafb));
        // CB 02 0207
        gbc.setState(0x3d1e, 0x99b4, 0x1ee0, 0x802a, 0xdc53, 0xe4e8, 0x0, 0x1);
        gbc.writeMem(0x3d1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x99b4, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0208
        gbc.setState(0x9f18, 0xaea1, 0xac40, 0xf972, 0x6ab0, 0xa02a, 0x0, 0x0);
        gbc.writeMem(0x9f18, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xaea1, gbc.sp());
        EXPECT(0x9f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f18));
        EXPECT(0x2, gbc.readMem(0x9f19));
        // CB 02 0209
        gbc.setState(0x688f, 0x14fc, 0x53b0, 0x8fb2, 0x9426, 0xb815, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x14fc, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 020A
        gbc.setState(0xbe0f, 0x91b7, 0x8d40, 0xa75a, 0x26cb, 0x7150, 0x0, 0x0);
        gbc.writeMem(0xbe0f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x91b7, gbc.sp());
        EXPECT(0xbe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0f));
        EXPECT(0x2, gbc.readMem(0xbe10));
        // CB 02 020B
        gbc.setState(0xc323, 0xed2, 0xff50, 0x3ba9, 0x360e, 0x38c4, 0x1, 0x0);
        gbc.writeMem(0xc323, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0x2, gbc.readMem(0xc324));
        // CB 02 020C
        gbc.setState(0x7ace, 0x39c1, 0x96a0, 0xa67c, 0x6b8, 0x62d3, 0x0, 0x1);
        gbc.writeMem(0x7ace, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x39c1, gbc.sp());
        EXPECT(0x7ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 020D
        gbc.setState(0xac59, 0xe581, 0x45c0, 0xe0ef, 0x3358, 0x2e62, 0x0, 0x0);
        gbc.writeMem(0xac59, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe581, gbc.sp());
        EXPECT(0xac5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac59));
        EXPECT(0x2, gbc.readMem(0xac5a));
        // CB 02 020E
        gbc.setState(0xbb27, 0xf354, 0x5190, 0x9f0d, 0xf538, 0x664a, 0x1, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf354, gbc.sp());
        EXPECT(0xbb29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb27));
        EXPECT(0x2, gbc.readMem(0xbb28));
        // CB 02 020F
        gbc.setState(0x86c0, 0x6b3, 0x6c0, 0x7e44, 0xffb5, 0xec6, 0x0, 0x0);
        gbc.writeMem(0x86c0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0x86c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c0));
        EXPECT(0x2, gbc.readMem(0x86c1));
        // CB 02 0210
        gbc.setState(0x48b4, 0xc212, 0xa400, 0xd407, 0x6d8f, 0xfc20, 0x0, 0x1);
        gbc.writeMem(0x48b4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc212, gbc.sp());
        EXPECT(0x48b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0211
        gbc.setState(0x23cc, 0x9cc6, 0xbd90, 0x9f0a, 0x4716, 0x90, 0x0, 0x1);
        gbc.writeMem(0x23cc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9cc6, gbc.sp());
        EXPECT(0x23ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0212
        gbc.setState(0xa78e, 0x6b20, 0xb50, 0x1bc5, 0x6a68, 0xf476, 0x1, 0x1);
        gbc.writeMem(0xa78e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6b20, gbc.sp());
        EXPECT(0xa790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa78e));
        EXPECT(0x2, gbc.readMem(0xa78f));
        // CB 02 0213
        gbc.setState(0xdfac, 0x41f3, 0x5e80, 0x4a26, 0x7ee6, 0x1b31, 0x0, 0x1);
        gbc.writeMem(0xdfac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x41f3, gbc.sp());
        EXPECT(0xdfae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfac));
        EXPECT(0x2, gbc.readMem(0xdfad));
        // CB 02 0214
        gbc.setState(0xd2ef, 0x873d, 0x6d50, 0xe31c, 0x351b, 0x8eaa, 0x1, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x873d, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ef));
        EXPECT(0x2, gbc.readMem(0xd2f0));
        // CB 02 0215
        gbc.setState(0xe38c, 0xf7e4, 0x7990, 0xeca6, 0xc19c, 0x84f5, 0x0, 0x1);
        gbc.writeMem(0xe38c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf7e4, gbc.sp());
        EXPECT(0xe38e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38c));
        EXPECT(0x2, gbc.readMem(0xe38d));
        // CB 02 0216
        gbc.setState(0x7653, 0x93b0, 0xcdf0, 0x9cc0, 0xda1d, 0x607f, 0x1, 0x1);
        gbc.writeMem(0x7653, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x93b0, gbc.sp());
        EXPECT(0x7655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0217
        gbc.setState(0xb04d, 0x224e, 0xd3a0, 0xdd72, 0xf9ea, 0xa097, 0x1, 0x0);
        gbc.writeMem(0xb04d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x224e, gbc.sp());
        EXPECT(0xb04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04d));
        EXPECT(0x2, gbc.readMem(0xb04e));
        // CB 02 0218
        gbc.setState(0x4ea0, 0xe888, 0xb2a0, 0xc7e8, 0xf636, 0x52b9, 0x1, 0x0);
        gbc.writeMem(0x4ea0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe888, gbc.sp());
        EXPECT(0x4ea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0219
        gbc.setState(0x7c0c, 0x1a26, 0x1610, 0x4cec, 0x2d75, 0xe79f, 0x0, 0x1);
        gbc.writeMem(0x7c0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1a26, gbc.sp());
        EXPECT(0x7c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 021A
        gbc.setState(0x882f, 0x398c, 0xea70, 0x6bd5, 0xa8c4, 0x12af, 0x1, 0x0);
        gbc.writeMem(0x882f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x398c, gbc.sp());
        EXPECT(0x8831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882f));
        EXPECT(0x2, gbc.readMem(0x8830));
        // CB 02 021B
        gbc.setState(0x847f, 0x7d93, 0xea20, 0x8f78, 0x6e5a, 0x2cd1, 0x1, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7d93, gbc.sp());
        EXPECT(0x8481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847f));
        EXPECT(0x2, gbc.readMem(0x8480));
        // CB 02 021C
        gbc.setState(0x4db6, 0x1ffb, 0x60c0, 0x8ec2, 0xe0dc, 0x685e, 0x0, 0x1);
        gbc.writeMem(0x4db6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1ffb, gbc.sp());
        EXPECT(0x4db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 021D
        gbc.setState(0x3429, 0x4ca1, 0x8900, 0xf547, 0xa1af, 0xe5d1, 0x1, 0x1);
        gbc.writeMem(0x3429, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4ca1, gbc.sp());
        EXPECT(0x342b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 021E
        gbc.setState(0x32db, 0xc57, 0x15e0, 0x7acd, 0x39af, 0xa94, 0x1, 0x0);
        gbc.writeMem(0x32db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0x32dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 021F
        gbc.setState(0x2156, 0x484c, 0x940, 0xcdec, 0xf1d7, 0x49f8, 0x1, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x484c, gbc.sp());
        EXPECT(0x2158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0221
        gbc.setState(0xaea1, 0xecd7, 0x7730, 0x1b92, 0x48f7, 0x23d4, 0x0, 0x1);
        gbc.writeMem(0xaea1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xecd7, gbc.sp());
        EXPECT(0xaea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea1));
        EXPECT(0x2, gbc.readMem(0xaea2));
        // CB 02 0222
        gbc.setState(0x266c, 0x9e8, 0x4e40, 0x685f, 0x9021, 0x217d, 0x0, 0x0);
        gbc.writeMem(0x266c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9e8, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0223
        gbc.setState(0x63fa, 0x637e, 0x3fd0, 0xc06d, 0x24a1, 0x3888, 0x0, 0x1);
        gbc.writeMem(0x63fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x637e, gbc.sp());
        EXPECT(0x63fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0224
        gbc.setState(0xa863, 0xe231, 0x7040, 0xd7e8, 0x34e9, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xa863, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe231, gbc.sp());
        EXPECT(0xa865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa863));
        EXPECT(0x2, gbc.readMem(0xa864));
        // CB 02 0225
        gbc.setState(0xcb4b, 0xe72b, 0x1170, 0x1b7a, 0x3352, 0x7b09, 0x0, 0x0);
        gbc.writeMem(0xcb4b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe72b, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb4b));
        EXPECT(0x2, gbc.readMem(0xcb4c));
        // CB 02 0227
        gbc.setState(0x5e61, 0x6e4d, 0x5470, 0x80bb, 0x2547, 0x4ed4, 0x0, 0x1);
        gbc.writeMem(0x5e61, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6e4d, gbc.sp());
        EXPECT(0x5e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0228
        gbc.setState(0xdfb4, 0xb31b, 0xfc40, 0x6ae8, 0x1536, 0x8dd3, 0x0, 0x1);
        gbc.writeMem(0xdfb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0xdfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb4));
        EXPECT(0x2, gbc.readMem(0xdfb5));
        // CB 02 0229
        gbc.setState(0x8a38, 0x89a5, 0xea50, 0x44ba, 0x9ad5, 0xe219, 0x1, 0x1);
        gbc.writeMem(0x8a38, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x89a5, gbc.sp());
        EXPECT(0x8a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a38));
        EXPECT(0x2, gbc.readMem(0x8a39));
        // CB 02 022A
        gbc.setState(0x5fd2, 0x1f8e, 0xdb0, 0x89ae, 0xb55b, 0x6d40, 0x0, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1f8e, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 022B
        gbc.setState(0x57e9, 0x9598, 0x61f0, 0xbad9, 0x5b39, 0xa435, 0x1, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9598, gbc.sp());
        EXPECT(0x57eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 022C
        gbc.setState(0xe9ef, 0x1ba6, 0x1c10, 0xfbd, 0x65de, 0x64fa, 0x0, 0x0);
        gbc.writeMem(0xe9ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x1ba6, gbc.sp());
        EXPECT(0xe9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ef));
        EXPECT(0x2, gbc.readMem(0xe9f0));
        // CB 02 022D
        gbc.setState(0xc8f, 0xcb7f, 0x4620, 0x7fa7, 0xa128, 0x86c5, 0x0, 0x1);
        gbc.writeMem(0xc8f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xcb7f, gbc.sp());
        EXPECT(0xc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 022E
        gbc.setState(0xacd3, 0x3287, 0x96e0, 0x8a83, 0x4763, 0xb924, 0x0, 0x1);
        gbc.writeMem(0xacd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3287, gbc.sp());
        EXPECT(0xacd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd3));
        EXPECT(0x2, gbc.readMem(0xacd4));
        // CB 02 022F
        gbc.setState(0xbd01, 0x71a7, 0xaeb0, 0x1f63, 0x93aa, 0x1519, 0x0, 0x0);
        gbc.writeMem(0xbd01, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x71a7, gbc.sp());
        EXPECT(0xbd03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd01));
        EXPECT(0x2, gbc.readMem(0xbd02));
        // CB 02 0230
        gbc.setState(0xc51a, 0xc93b, 0x5ae0, 0x8c2, 0x943f, 0x2ce1, 0x0, 0x1);
        gbc.writeMem(0xc51a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc93b, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51a));
        EXPECT(0x2, gbc.readMem(0xc51b));
        // CB 02 0231
        gbc.setState(0x506e, 0x7484, 0x910, 0x6a57, 0x3ea6, 0xa50b, 0x1, 0x1);
        gbc.writeMem(0x506e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7484, gbc.sp());
        EXPECT(0x5070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0232
        gbc.setState(0x6420, 0x947e, 0xd420, 0xa10a, 0xdcd7, 0xc914, 0x1, 0x1);
        gbc.writeMem(0x6420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x947e, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0233
        gbc.setState(0x4a0c, 0xd13d, 0x9680, 0xee41, 0x35fa, 0xfa7c, 0x1, 0x1);
        gbc.writeMem(0x4a0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd13d, gbc.sp());
        EXPECT(0x4a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0234
        gbc.setState(0x9e37, 0x479c, 0x7e70, 0xeb9c, 0xf68, 0x4fc1, 0x0, 0x0);
        gbc.writeMem(0x9e37, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x479c, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e37));
        EXPECT(0x2, gbc.readMem(0x9e38));
        // CB 02 0235
        gbc.setState(0x6805, 0x5cd9, 0xc810, 0x1ab4, 0xbe3c, 0x5b2e, 0x0, 0x1);
        gbc.writeMem(0x6805, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5cd9, gbc.sp());
        EXPECT(0x6807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0236
        gbc.setState(0x9658, 0x9f0a, 0x6fc0, 0x2095, 0x81f1, 0xd74d, 0x0, 0x1);
        gbc.writeMem(0x9658, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9f0a, gbc.sp());
        EXPECT(0x965a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9658));
        EXPECT(0x2, gbc.readMem(0x9659));
        // CB 02 0238
        gbc.setState(0x3edb, 0x4b32, 0xa7a0, 0xb24f, 0x513d, 0xdca0, 0x1, 0x0);
        gbc.writeMem(0x3edb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4b32, gbc.sp());
        EXPECT(0x3edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0239
        gbc.setState(0x254, 0x591e, 0x30b0, 0x3dcc, 0xca2, 0x235c, 0x0, 0x1);
        gbc.writeMem(0x254, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x591e, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 023B
        gbc.setState(0xd0f0, 0xf0eb, 0x4090, 0x4bf4, 0x137e, 0x584e, 0x0, 0x1);
        gbc.writeMem(0xd0f0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf0eb, gbc.sp());
        EXPECT(0xd0f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f0));
        EXPECT(0x2, gbc.readMem(0xd0f1));
        // CB 02 023C
        gbc.setState(0x8106, 0x1d6e, 0xfa80, 0xcd39, 0xcae7, 0xf02c, 0x0, 0x1);
        gbc.writeMem(0x8106, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1d6e, gbc.sp());
        EXPECT(0x8108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8106));
        EXPECT(0x2, gbc.readMem(0x8107));
        // CB 02 023D
        gbc.setState(0x5beb, 0x2397, 0x7760, 0xb34a, 0x3444, 0x7528, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2397, gbc.sp());
        EXPECT(0x5bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 023E
        gbc.setState(0x71e0, 0xc319, 0x38a0, 0x8a37, 0xc85f, 0x3be8, 0x1, 0x1);
        gbc.writeMem(0x71e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc319, gbc.sp());
        EXPECT(0x71e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0240
        gbc.setState(0x3d26, 0xf272, 0xbd20, 0x7584, 0x3e9, 0xd8e3, 0x0, 0x1);
        gbc.writeMem(0x3d26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf272, gbc.sp());
        EXPECT(0x3d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0241
        gbc.setState(0x2a78, 0xf960, 0x2910, 0xa0ae, 0x7f0a, 0x8a5b, 0x0, 0x0);
        gbc.writeMem(0x2a78, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf960, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0242
        gbc.setState(0x813, 0x9d1b, 0x71a0, 0xd5d5, 0xf1a1, 0xc56e, 0x0, 0x0);
        gbc.writeMem(0x813, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0243
        gbc.setState(0xad5f, 0xf5cf, 0x2360, 0x5794, 0x7c26, 0x1605, 0x0, 0x0);
        gbc.writeMem(0xad5f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf5cf, gbc.sp());
        EXPECT(0xad61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5f));
        EXPECT(0x2, gbc.readMem(0xad60));
        // CB 02 0244
        gbc.setState(0xd04c, 0x9d65, 0x76f0, 0x1047, 0x75ad, 0x2e18, 0x1, 0x1);
        gbc.writeMem(0xd04c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9d65, gbc.sp());
        EXPECT(0xd04e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04c));
        EXPECT(0x2, gbc.readMem(0xd04d));
        // CB 02 0245
        gbc.setState(0x7485, 0x22c7, 0x3b70, 0x43f9, 0x22a5, 0xc86c, 0x1, 0x1);
        gbc.writeMem(0x7485, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x22c7, gbc.sp());
        EXPECT(0x7487, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0246
        gbc.setState(0x3ece, 0xa306, 0xe390, 0x7982, 0x1e25, 0x78e3, 0x1, 0x1);
        gbc.writeMem(0x3ece, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa306, gbc.sp());
        EXPECT(0x3ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0247
        gbc.setState(0x9855, 0x20e0, 0x6140, 0xeb36, 0x5b25, 0x848, 0x1, 0x1);
        gbc.writeMem(0x9855, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x20e0, gbc.sp());
        EXPECT(0x9857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9855));
        EXPECT(0x2, gbc.readMem(0x9856));
        // CB 02 0248
        gbc.setState(0xd843, 0xf9ea, 0x8740, 0xc0eb, 0x2074, 0x10c6, 0x0, 0x1);
        gbc.writeMem(0xd843, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf9ea, gbc.sp());
        EXPECT(0xd845, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd843));
        EXPECT(0x2, gbc.readMem(0xd844));
        // CB 02 024A
        gbc.setState(0x8772, 0xb562, 0x1f0, 0xf57, 0xcef, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0x8772, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb562, gbc.sp());
        EXPECT(0x8774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8772));
        EXPECT(0x2, gbc.readMem(0x8773));
        // CB 02 024B
        gbc.setState(0x7594, 0xbe19, 0xfc30, 0x1cd4, 0x4de9, 0xc473, 0x0, 0x1);
        gbc.writeMem(0x7594, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xbe19, gbc.sp());
        EXPECT(0x7596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 024C
        gbc.setState(0x343a, 0xc65c, 0xa320, 0xcc4, 0x1704, 0x6c8b, 0x1, 0x0);
        gbc.writeMem(0x343a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc65c, gbc.sp());
        EXPECT(0x343c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 024D
        gbc.setState(0x1618, 0x7d4d, 0x14d0, 0x6cec, 0x2d68, 0x3c12, 0x1, 0x1);
        gbc.writeMem(0x1618, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7d4d, gbc.sp());
        EXPECT(0x161a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 024E
        gbc.setState(0x295d, 0x5e9, 0xbc90, 0x313c, 0x7ff3, 0x99e0, 0x0, 0x1);
        gbc.writeMem(0x295d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5e9, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 024F
        gbc.setState(0x1181, 0x9fe0, 0xca40, 0x7a48, 0x6a55, 0xb420, 0x1, 0x0);
        gbc.writeMem(0x1181, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9fe0, gbc.sp());
        EXPECT(0x1183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0250
        gbc.setState(0x8dc3, 0xc40f, 0xca20, 0xad1b, 0xcbce, 0xaf13, 0x0, 0x1);
        gbc.writeMem(0x8dc3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc40f, gbc.sp());
        EXPECT(0x8dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc3));
        EXPECT(0x2, gbc.readMem(0x8dc4));
        // CB 02 0251
        gbc.setState(0x536f, 0x209d, 0x8690, 0x7929, 0x5873, 0x4c12, 0x0, 0x0);
        gbc.writeMem(0x536f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x209d, gbc.sp());
        EXPECT(0x5371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0252
        gbc.setState(0x9b27, 0xeb91, 0x89d0, 0xb032, 0xee83, 0x2cde, 0x0, 0x0);
        gbc.writeMem(0x9b27, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xeb91, gbc.sp());
        EXPECT(0x9b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b27));
        EXPECT(0x2, gbc.readMem(0x9b28));
        // CB 02 0253
        gbc.setState(0x115b, 0xcfe5, 0xff10, 0xaf2, 0x435a, 0x66a1, 0x0, 0x0);
        gbc.writeMem(0x115b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcfe5, gbc.sp());
        EXPECT(0x115d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0255
        gbc.setState(0xbfab, 0x8de, 0x9f80, 0xceff, 0x320c, 0x2f1d, 0x1, 0x0);
        gbc.writeMem(0xbfab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8de, gbc.sp());
        EXPECT(0xbfad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfab));
        EXPECT(0x2, gbc.readMem(0xbfac));
        // CB 02 0256
        gbc.setState(0x3a, 0x44df, 0x3730, 0x986, 0x1d4a, 0x2dfd, 0x0, 0x1);
        gbc.writeMem(0x3a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x44df, gbc.sp());
        EXPECT(0x3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0257
        gbc.setState(0x2191, 0xce41, 0x4b40, 0x11e1, 0x17b6, 0xf821, 0x1, 0x1);
        gbc.writeMem(0x2191, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xce41, gbc.sp());
        EXPECT(0x2193, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0258
        gbc.setState(0x9e15, 0x89fe, 0x2850, 0x82ee, 0xe557, 0xb3bc, 0x0, 0x0);
        gbc.writeMem(0x9e15, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x89fe, gbc.sp());
        EXPECT(0x9e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e15));
        EXPECT(0x2, gbc.readMem(0x9e16));
        // CB 02 0259
        gbc.setState(0x5139, 0x8ecc, 0xbd70, 0xe80a, 0xad00, 0x6327, 0x0, 0x1);
        gbc.writeMem(0x5139, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8ecc, gbc.sp());
        EXPECT(0x513b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 025A
        gbc.setState(0x23de, 0x7728, 0x8590, 0xc01, 0x4078, 0x437b, 0x1, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7728, gbc.sp());
        EXPECT(0x23e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 025B
        gbc.setState(0x5035, 0x9513, 0xb320, 0x9ed0, 0xba, 0x1d14, 0x0, 0x0);
        gbc.writeMem(0x5035, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9513, gbc.sp());
        EXPECT(0x5037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 025C
        gbc.setState(0x2800, 0x4ffc, 0x1760, 0x511f, 0x5f0f, 0xb1d9, 0x1, 0x0);
        gbc.writeMem(0x2800, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4ffc, gbc.sp());
        EXPECT(0x2802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 025D
        gbc.setState(0x36be, 0xdcfd, 0x1510, 0x938d, 0xf095, 0xfab2, 0x0, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdcfd, gbc.sp());
        EXPECT(0x36c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 025F
        gbc.setState(0x39eb, 0x8740, 0x1350, 0x63b0, 0x1197, 0xd076, 0x1, 0x1);
        gbc.writeMem(0x39eb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8740, gbc.sp());
        EXPECT(0x39ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0260
        gbc.setState(0x9742, 0xd252, 0xf230, 0x410c, 0xe337, 0x4217, 0x0, 0x0);
        gbc.writeMem(0x9742, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd252, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9742));
        EXPECT(0x2, gbc.readMem(0x9743));
        // CB 02 0261
        gbc.setState(0xd0ee, 0x7753, 0x38d0, 0x80f2, 0xe430, 0x1282, 0x0, 0x0);
        gbc.writeMem(0xd0ee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7753, gbc.sp());
        EXPECT(0xd0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ee));
        EXPECT(0x2, gbc.readMem(0xd0ef));
        // CB 02 0262
        gbc.setState(0x4647, 0xfb2a, 0x5150, 0xdc3a, 0xc091, 0x2f6a, 0x0, 0x0);
        gbc.writeMem(0x4647, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfb2a, gbc.sp());
        EXPECT(0x4649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0263
        gbc.setState(0x2d0c, 0xe2fa, 0xd360, 0x6dfe, 0xe795, 0xeb17, 0x0, 0x0);
        gbc.writeMem(0x2d0c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xe2fa, gbc.sp());
        EXPECT(0x2d0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0264
        gbc.setState(0x85b5, 0x1534, 0xf4c0, 0x7b07, 0x3157, 0x9282, 0x1, 0x0);
        gbc.writeMem(0x85b5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1534, gbc.sp());
        EXPECT(0x85b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85b5));
        EXPECT(0x2, gbc.readMem(0x85b6));
        // CB 02 0265
        gbc.setState(0x97f1, 0x7736, 0xc3d0, 0xa783, 0xc41, 0xb342, 0x1, 0x1);
        gbc.writeMem(0x97f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x97f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f1));
        EXPECT(0x2, gbc.readMem(0x97f2));
        // CB 02 0266
        gbc.setState(0xcf1, 0xdbab, 0x5bc0, 0xb865, 0xf0b7, 0xc7fd, 0x0, 0x0);
        gbc.writeMem(0xcf1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdbab, gbc.sp());
        EXPECT(0xcf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0267
        gbc.setState(0x7ebe, 0x8d98, 0xfba0, 0xd950, 0x235, 0x80fc, 0x0, 0x0);
        gbc.writeMem(0x7ebe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8d98, gbc.sp());
        EXPECT(0x7ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0268
        gbc.setState(0x2d2c, 0x2d56, 0x9d60, 0xf4bf, 0x15fa, 0x21e4, 0x1, 0x0);
        gbc.writeMem(0x2d2c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d56, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0269
        gbc.setState(0x1b4c, 0x7dd1, 0x54f0, 0x7da4, 0xafa2, 0x2b91, 0x0, 0x0);
        gbc.writeMem(0x1b4c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7dd1, gbc.sp());
        EXPECT(0x1b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 026A
        gbc.setState(0x63bb, 0x5d0, 0x9840, 0x74a2, 0x16cd, 0x801d, 0x1, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5d0, gbc.sp());
        EXPECT(0x63bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 026B
        gbc.setState(0x5999, 0xc802, 0xcf10, 0x19ab, 0x7f62, 0x1608, 0x1, 0x1);
        gbc.writeMem(0x5999, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc802, gbc.sp());
        EXPECT(0x599b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 026C
        gbc.setState(0x5178, 0xdb3c, 0xa480, 0x26ea, 0x323b, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x5178, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdb3c, gbc.sp());
        EXPECT(0x517a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 026D
        gbc.setState(0x23dc, 0xbb4a, 0xbbe0, 0xb42b, 0x10e3, 0xb684, 0x1, 0x1);
        gbc.writeMem(0x23dc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb4a, gbc.sp());
        EXPECT(0x23de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 026E
        gbc.setState(0x38ed, 0x410, 0x79a0, 0xbc51, 0x3f35, 0xda17, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x410, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0270
        gbc.setState(0x5d4d, 0x9c49, 0x56f0, 0x6de4, 0x83d4, 0x849, 0x1, 0x0);
        gbc.writeMem(0x5d4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9c49, gbc.sp());
        EXPECT(0x5d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0271
        gbc.setState(0xaeda, 0x5fe4, 0xee20, 0x7853, 0x6fd4, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0xaeda, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5fe4, gbc.sp());
        EXPECT(0xaedc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeda));
        EXPECT(0x2, gbc.readMem(0xaedb));
        // CB 02 0272
        gbc.setState(0x8d75, 0x5a6, 0x8e50, 0xea34, 0x40a1, 0xe9ec, 0x1, 0x1);
        gbc.writeMem(0x8d75, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5a6, gbc.sp());
        EXPECT(0x8d77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d75));
        EXPECT(0x2, gbc.readMem(0x8d76));
        // CB 02 0273
        gbc.setState(0x3188, 0x86a5, 0xece0, 0x7b3b, 0x7b1, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0x3188, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x86a5, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0274
        gbc.setState(0x2ba8, 0xe05a, 0xbaf0, 0x8cc6, 0x9087, 0xc167, 0x1, 0x0);
        gbc.writeMem(0x2ba8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x2baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0275
        gbc.setState(0xcbe9, 0xc365, 0x4910, 0x2e4b, 0xd6f3, 0xbf64, 0x0, 0x1);
        gbc.writeMem(0xcbe9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc365, gbc.sp());
        EXPECT(0xcbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe9));
        EXPECT(0x2, gbc.readMem(0xcbea));
        // CB 02 0276
        gbc.setState(0x461f, 0x79d3, 0xe6d0, 0xa47c, 0x55fc, 0x699a, 0x1, 0x1);
        gbc.writeMem(0x461f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x79d3, gbc.sp());
        EXPECT(0x4621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0277
        gbc.setState(0x8ca0, 0xcdff, 0xe730, 0xfe96, 0x6f1b, 0x8e41, 0x0, 0x0);
        gbc.writeMem(0x8ca0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcdff, gbc.sp());
        EXPECT(0x8ca2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca0));
        EXPECT(0x2, gbc.readMem(0x8ca1));
        // CB 02 0278
        gbc.setState(0x420d, 0x76d3, 0x4610, 0x7967, 0x750f, 0x8a04, 0x0, 0x0);
        gbc.writeMem(0x420d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x76d3, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0279
        gbc.setState(0x383d, 0x8f63, 0xe6e0, 0xf635, 0x92bf, 0xf6d0, 0x1, 0x0);
        gbc.writeMem(0x383d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8f63, gbc.sp());
        EXPECT(0x383f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 027A
        gbc.setState(0x79e, 0x2a03, 0x5530, 0x4b75, 0xadcb, 0x6437, 0x0, 0x1);
        gbc.writeMem(0x79e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2a03, gbc.sp());
        EXPECT(0x7a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 027B
        gbc.setState(0xef1d, 0xfeb5, 0xa3e0, 0x2c27, 0xcc80, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0xef1d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfeb5, gbc.sp());
        EXPECT(0xef1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1d));
        EXPECT(0x2, gbc.readMem(0xef1e));
        // CB 02 027C
        gbc.setState(0x8d71, 0xd271, 0xdb60, 0x96b6, 0xb174, 0x27b7, 0x1, 0x1);
        gbc.writeMem(0x8d71, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd271, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0x2, gbc.readMem(0x8d72));
        // CB 02 027D
        gbc.setState(0x7e75, 0xdb4c, 0x9400, 0x4ae8, 0xcb22, 0x4d78, 0x0, 0x1);
        gbc.writeMem(0x7e75, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xdb4c, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 027E
        gbc.setState(0x7d6a, 0xe1d4, 0xc6f0, 0x954c, 0x59ee, 0x9e87, 0x0, 0x0);
        gbc.writeMem(0x7d6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0x7d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 027F
        gbc.setState(0xb5af, 0x4a93, 0xf860, 0x3d65, 0x3a5f, 0x780, 0x1, 0x0);
        gbc.writeMem(0xb5af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0x2, gbc.readMem(0xb5b0));
        // CB 02 0280
        gbc.setState(0x7cea, 0xff60, 0xbb40, 0xee18, 0x6fe2, 0x1b03, 0x1, 0x0);
        gbc.writeMem(0x7cea, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xff60, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0281
        gbc.setState(0x5bd8, 0x1e96, 0x4c50, 0x2b92, 0x76c9, 0xc31, 0x0, 0x1);
        gbc.writeMem(0x5bd8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1e96, gbc.sp());
        EXPECT(0x5bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0282
        gbc.setState(0x6462, 0x65cd, 0xcfe0, 0xea2a, 0x2661, 0xce09, 0x0, 0x0);
        gbc.writeMem(0x6462, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x65cd, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0283
        gbc.setState(0x2c81, 0x7c4a, 0x6a0, 0x829f, 0x2d6e, 0xbb4, 0x0, 0x0);
        gbc.writeMem(0x2c81, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x2c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0284
        gbc.setState(0x4841, 0xb6a2, 0x190, 0xa51e, 0x363e, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x4841, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb6a2, gbc.sp());
        EXPECT(0x4843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0285
        gbc.setState(0x8388, 0x79b0, 0x9580, 0x3aa2, 0xcab0, 0xc13d, 0x1, 0x1);
        gbc.writeMem(0x8388, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x79b0, gbc.sp());
        EXPECT(0x838a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8388));
        EXPECT(0x2, gbc.readMem(0x8389));
        // CB 02 0286
        gbc.setState(0xd0c8, 0xedf8, 0xb1d0, 0xbc09, 0x2824, 0x9653, 0x0, 0x1);
        gbc.writeMem(0xd0c8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xedf8, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0x2, gbc.readMem(0xd0c9));
        // CB 02 0287
        gbc.setState(0x5f06, 0x8b21, 0x49c0, 0xb565, 0x23c0, 0x3695, 0x0, 0x1);
        gbc.writeMem(0x5f06, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0288
        gbc.setState(0xeb09, 0x912f, 0x6370, 0x3a9b, 0xab76, 0xa36a, 0x0, 0x1);
        gbc.writeMem(0xeb09, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x912f, gbc.sp());
        EXPECT(0xeb0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb09));
        EXPECT(0x2, gbc.readMem(0xeb0a));
        // CB 02 0289
        gbc.setState(0x305d, 0x67bc, 0xba30, 0x2b44, 0xcdcf, 0x6997, 0x1, 0x0);
        gbc.writeMem(0x305d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x67bc, gbc.sp());
        EXPECT(0x305f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 028A
        gbc.setState(0xe189, 0x1f74, 0x2320, 0x1554, 0xe2b2, 0xc39e, 0x0, 0x0);
        gbc.writeMem(0xe189, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0xe18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe189));
        EXPECT(0x2, gbc.readMem(0xe18a));
        // CB 02 028B
        gbc.setState(0xc55e, 0xaf3a, 0x5630, 0x1886, 0x1f8c, 0xf0f0, 0x0, 0x1);
        gbc.writeMem(0xc55e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xaf3a, gbc.sp());
        EXPECT(0xc560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55e));
        EXPECT(0x2, gbc.readMem(0xc55f));
        // CB 02 028C
        gbc.setState(0x1c13, 0x4770, 0x1660, 0xf08e, 0x96e, 0x15b4, 0x1, 0x1);
        gbc.writeMem(0x1c13, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4770, gbc.sp());
        EXPECT(0x1c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 028D
        gbc.setState(0x636, 0x51fa, 0xdc90, 0x6ec7, 0x94be, 0xf606, 0x0, 0x0);
        gbc.writeMem(0x636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x51fa, gbc.sp());
        EXPECT(0x638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 028E
        gbc.setState(0x48e6, 0xa3ed, 0x7f30, 0x2438, 0xbcf8, 0xe84a, 0x1, 0x1);
        gbc.writeMem(0x48e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa3ed, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 028F
        gbc.setState(0x9172, 0xa70d, 0x8330, 0x4f35, 0x7731, 0xeff2, 0x1, 0x1);
        gbc.writeMem(0x9172, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa70d, gbc.sp());
        EXPECT(0x9174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9172));
        EXPECT(0x2, gbc.readMem(0x9173));
        // CB 02 0290
        gbc.setState(0xcdb4, 0xbfa6, 0xe890, 0x4911, 0xa9d5, 0x2b12, 0x1, 0x1);
        gbc.writeMem(0xcdb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbfa6, gbc.sp());
        EXPECT(0xcdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdb4));
        EXPECT(0x2, gbc.readMem(0xcdb5));
        // CB 02 0291
        gbc.setState(0x8116, 0x1c2b, 0x2970, 0x10c9, 0xd248, 0x3792, 0x0, 0x1);
        gbc.writeMem(0x8116, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1c2b, gbc.sp());
        EXPECT(0x8118, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8116));
        EXPECT(0x2, gbc.readMem(0x8117));
        // CB 02 0292
        gbc.setState(0xd274, 0x608, 0xdc90, 0x5a9d, 0x9a11, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0xd274, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0xd276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd274));
        EXPECT(0x2, gbc.readMem(0xd275));
        // CB 02 0293
        gbc.setState(0xe2b4, 0xbea, 0x490, 0x23bd, 0x458c, 0xf31b, 0x0, 0x0);
        gbc.writeMem(0xe2b4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbea, gbc.sp());
        EXPECT(0xe2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2b4));
        EXPECT(0x2, gbc.readMem(0xe2b5));
        // CB 02 0294
        gbc.setState(0xda89, 0xe1fe, 0xc340, 0xf71f, 0x5f90, 0x2883, 0x1, 0x0);
        gbc.writeMem(0xda89, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe1fe, gbc.sp());
        EXPECT(0xda8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda89));
        EXPECT(0x2, gbc.readMem(0xda8a));
        // CB 02 0295
        gbc.setState(0xcfc5, 0xb488, 0xc90, 0xabbc, 0x3aae, 0x6155, 0x0, 0x0);
        gbc.writeMem(0xcfc5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb488, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc5));
        EXPECT(0x2, gbc.readMem(0xcfc6));
        // CB 02 0296
        gbc.setState(0x5f9e, 0x1ca, 0xca00, 0x9a4c, 0xf2bc, 0xc1f8, 0x0, 0x1);
        gbc.writeMem(0x5f9e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x1ca, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0297
        gbc.setState(0xa718, 0x9ae, 0x6d0, 0x839a, 0xb27e, 0xaa60, 0x0, 0x1);
        gbc.writeMem(0xa718, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9ae, gbc.sp());
        EXPECT(0xa71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa718));
        EXPECT(0x2, gbc.readMem(0xa719));
        // CB 02 0298
        gbc.setState(0x350a, 0xcf89, 0xd330, 0xd2ae, 0xd45d, 0xfe22, 0x0, 0x0);
        gbc.writeMem(0x350a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xcf89, gbc.sp());
        EXPECT(0x350c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0299
        gbc.setState(0x63de, 0x9667, 0x69b0, 0xcce5, 0xe390, 0xb2ff, 0x1, 0x0);
        gbc.writeMem(0x63de, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9667, gbc.sp());
        EXPECT(0x63e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 029A
        gbc.setState(0x7947, 0x210f, 0x1400, 0x6f34, 0xd761, 0x76ab, 0x0, 0x1);
        gbc.writeMem(0x7947, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x210f, gbc.sp());
        EXPECT(0x7949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 029B
        gbc.setState(0x6880, 0x4241, 0x5de0, 0x458d, 0xff3d, 0x32cf, 0x1, 0x1);
        gbc.writeMem(0x6880, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0x6882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 029C
        gbc.setState(0xd43c, 0x83f2, 0xb9d0, 0x3d96, 0x5037, 0xa77c, 0x1, 0x1);
        gbc.writeMem(0xd43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x83f2, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43c));
        EXPECT(0x2, gbc.readMem(0xd43d));
        // CB 02 029D
        gbc.setState(0x5e14, 0xabd5, 0x4ad0, 0x610d, 0x7a30, 0xcc21, 0x0, 0x0);
        gbc.writeMem(0x5e14, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xabd5, gbc.sp());
        EXPECT(0x5e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 029E
        gbc.setState(0x69b8, 0xf44a, 0x9040, 0x822a, 0x9332, 0xab4, 0x1, 0x1);
        gbc.writeMem(0x69b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf44a, gbc.sp());
        EXPECT(0x69ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 029F
        gbc.setState(0x8455, 0x1aef, 0xce50, 0xccaa, 0xdf0, 0x70e6, 0x0, 0x1);
        gbc.writeMem(0x8455, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8455));
        EXPECT(0x2, gbc.readMem(0x8456));
        // CB 02 02A0
        gbc.setState(0x96b3, 0xa2d6, 0x6220, 0x18c4, 0xb514, 0x6caf, 0x1, 0x1);
        gbc.writeMem(0x96b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa2d6, gbc.sp());
        EXPECT(0x96b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b3));
        EXPECT(0x2, gbc.readMem(0x96b4));
        // CB 02 02A1
        gbc.setState(0xd035, 0xec7, 0x70e0, 0x49b4, 0x501a, 0x73bd, 0x0, 0x0);
        gbc.writeMem(0xd035, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec7, gbc.sp());
        EXPECT(0xd037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd035));
        EXPECT(0x2, gbc.readMem(0xd036));
        // CB 02 02A2
        gbc.setState(0xd848, 0xe805, 0xc550, 0xd319, 0x73d2, 0x1c68, 0x0, 0x1);
        gbc.writeMem(0xd848, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe805, gbc.sp());
        EXPECT(0xd84a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd848));
        EXPECT(0x2, gbc.readMem(0xd849));
        // CB 02 02A3
        gbc.setState(0x67c6, 0x137, 0xd200, 0xbd1f, 0xcd33, 0xab93, 0x0, 0x0);
        gbc.writeMem(0x67c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x137, gbc.sp());
        EXPECT(0x67c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02A4
        gbc.setState(0x1f1b, 0x98fd, 0xda80, 0xa498, 0xe321, 0xb117, 0x0, 0x1);
        gbc.writeMem(0x1f1b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0x1f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02A5
        gbc.setState(0x3a1f, 0xc439, 0x8300, 0xba2, 0x3234, 0x3d8a, 0x0, 0x0);
        gbc.writeMem(0x3a1f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0x3a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02A6
        gbc.setState(0xc5fb, 0xc51, 0x71d0, 0x7850, 0xa7e3, 0xe354, 0x1, 0x1);
        gbc.writeMem(0xc5fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc51, gbc.sp());
        EXPECT(0xc5fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5fb));
        EXPECT(0x2, gbc.readMem(0xc5fc));
        // CB 02 02A7
        gbc.setState(0x2404, 0x3f10, 0x70f0, 0xcbee, 0x660c, 0x4de2, 0x0, 0x1);
        gbc.writeMem(0x2404, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3f10, gbc.sp());
        EXPECT(0x2406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02A8
        gbc.setState(0xad3, 0x520f, 0x8120, 0x6775, 0x819b, 0xee64, 0x1, 0x0);
        gbc.writeMem(0xad3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x520f, gbc.sp());
        EXPECT(0xad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02A9
        gbc.setState(0xac4f, 0xb4e9, 0x1f0, 0xf8cd, 0xcf50, 0x3d5e, 0x0, 0x1);
        gbc.writeMem(0xac4f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4e9, gbc.sp());
        EXPECT(0xac51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4f));
        EXPECT(0x2, gbc.readMem(0xac50));
        // CB 02 02AA
        gbc.setState(0xa6e1, 0x438d, 0x81e0, 0x56d4, 0xb860, 0x4863, 0x0, 0x0);
        gbc.writeMem(0xa6e1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x438d, gbc.sp());
        EXPECT(0xa6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e1));
        EXPECT(0x2, gbc.readMem(0xa6e2));
        // CB 02 02AB
        gbc.setState(0x3462, 0xfcb, 0x7dc0, 0x9378, 0x6581, 0x7fa, 0x1, 0x1);
        gbc.writeMem(0x3462, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfcb, gbc.sp());
        EXPECT(0x3464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02AC
        gbc.setState(0x4a19, 0x7865, 0x4350, 0x88ae, 0x2192, 0xcb60, 0x1, 0x0);
        gbc.writeMem(0x4a19, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7865, gbc.sp());
        EXPECT(0x4a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02AD
        gbc.setState(0xc297, 0xf966, 0x94b0, 0xc100, 0xe467, 0xd352, 0x0, 0x0);
        gbc.writeMem(0xc297, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf966, gbc.sp());
        EXPECT(0xc299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc297));
        EXPECT(0x2, gbc.readMem(0xc298));
        // CB 02 02AE
        gbc.setState(0x789, 0x7c93, 0x2660, 0x26c0, 0xe7ae, 0x7a0a, 0x0, 0x0);
        gbc.writeMem(0x789, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7c93, gbc.sp());
        EXPECT(0x78b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02AF
        gbc.setState(0x805e, 0x693c, 0x4230, 0x84e3, 0x240a, 0xa132, 0x1, 0x1);
        gbc.writeMem(0x805e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x693c, gbc.sp());
        EXPECT(0x8060, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805e));
        EXPECT(0x2, gbc.readMem(0x805f));
        // CB 02 02B0
        gbc.setState(0x200f, 0x9f01, 0xe870, 0xd66f, 0x1e06, 0xa729, 0x0, 0x1);
        gbc.writeMem(0x200f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9f01, gbc.sp());
        EXPECT(0x2011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02B2
        gbc.setState(0x7231, 0x59bf, 0xf570, 0xe7c8, 0xff5, 0xae96, 0x1, 0x0);
        gbc.writeMem(0x7231, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x59bf, gbc.sp());
        EXPECT(0x7233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02B3
        gbc.setState(0x262e, 0xff08, 0x14a0, 0xfd68, 0xe386, 0x5ebf, 0x0, 0x0);
        gbc.writeMem(0x262e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x2630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02B4
        gbc.setState(0x60aa, 0x3ed9, 0xcb00, 0x8d6b, 0x4987, 0x553f, 0x0, 0x1);
        gbc.writeMem(0x60aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ed9, gbc.sp());
        EXPECT(0x60ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02B5
        gbc.setState(0xc43c, 0x6374, 0x6500, 0xbbcf, 0xe6f4, 0x8850, 0x1, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6374, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0x2, gbc.readMem(0xc43d));
        // CB 02 02B6
        gbc.setState(0xf4, 0xc31c, 0x69d0, 0x9a28, 0x35c4, 0x94dd, 0x0, 0x0);
        gbc.writeMem(0xf4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc31c, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02B7
        gbc.setState(0x80c9, 0x4ffe, 0xcf60, 0x1d08, 0x4c24, 0xd740, 0x0, 0x1);
        gbc.writeMem(0x80c9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4ffe, gbc.sp());
        EXPECT(0x80cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c9));
        EXPECT(0x2, gbc.readMem(0x80ca));
        // CB 02 02B8
        gbc.setState(0xb362, 0xc522, 0x4ba0, 0x2b3, 0x58de, 0xf62d, 0x0, 0x0);
        gbc.writeMem(0xb362, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc522, gbc.sp());
        EXPECT(0xb364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb362));
        EXPECT(0x2, gbc.readMem(0xb363));
        // CB 02 02B9
        gbc.setState(0x337e, 0x209c, 0xc190, 0xa136, 0x97e5, 0xb77e, 0x0, 0x1);
        gbc.writeMem(0x337e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x209c, gbc.sp());
        EXPECT(0x3380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02BA
        gbc.setState(0x9dfb, 0xd23c, 0xd2f0, 0x8b55, 0x3a74, 0x7795, 0x1, 0x0);
        gbc.writeMem(0x9dfb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd23c, gbc.sp());
        EXPECT(0x9dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfb));
        EXPECT(0x2, gbc.readMem(0x9dfc));
        // CB 02 02BC
        gbc.setState(0x9d, 0x9967, 0xffc0, 0xe5fd, 0xe358, 0xb2c3, 0x0, 0x1);
        gbc.writeMem(0x9d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02BD
        gbc.setState(0x9d06, 0x1df5, 0x2e50, 0xda33, 0xa350, 0xcdb7, 0x1, 0x0);
        gbc.writeMem(0x9d06, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1df5, gbc.sp());
        EXPECT(0x9d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d06));
        EXPECT(0x2, gbc.readMem(0x9d07));
        // CB 02 02BE
        gbc.setState(0x2ac4, 0x281c, 0x5870, 0x7cd8, 0x3e7c, 0xe5a0, 0x1, 0x1);
        gbc.writeMem(0x2ac4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0x2ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02BF
        gbc.setState(0x4c79, 0x84d6, 0x4970, 0x5da1, 0x1a2d, 0x5a29, 0x1, 0x0);
        gbc.writeMem(0x4c79, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x84d6, gbc.sp());
        EXPECT(0x4c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C0
        gbc.setState(0x6239, 0x9e0c, 0x1950, 0x1567, 0x7c52, 0x2311, 0x0, 0x0);
        gbc.writeMem(0x6239, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9e0c, gbc.sp());
        EXPECT(0x623b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C1
        gbc.setState(0xc584, 0xa503, 0xfaa0, 0xf148, 0xb684, 0x29c1, 0x1, 0x1);
        gbc.writeMem(0xc584, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa503, gbc.sp());
        EXPECT(0xc586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc584));
        EXPECT(0x2, gbc.readMem(0xc585));
        // CB 02 02C2
        gbc.setState(0x6716, 0x9570, 0x23e0, 0xeaf8, 0x152a, 0x976c, 0x1, 0x1);
        gbc.writeMem(0x6716, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9570, gbc.sp());
        EXPECT(0x6718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C3
        gbc.setState(0x851, 0xc3fc, 0xaee0, 0x33de, 0x85c8, 0x2b4f, 0x0, 0x1);
        gbc.writeMem(0x851, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02C4
        gbc.setState(0x91b8, 0x29be, 0x11f0, 0x8f0, 0x508d, 0x5781, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x29be, gbc.sp());
        EXPECT(0x91ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b8));
        EXPECT(0x2, gbc.readMem(0x91b9));
        // CB 02 02C5
        gbc.setState(0x7cdc, 0x6859, 0xbdd0, 0xcde3, 0xe4bf, 0xefd7, 0x1, 0x0);
        gbc.writeMem(0x7cdc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0x7cde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02C6
        gbc.setState(0x62e3, 0x831c, 0xa30, 0xbf46, 0x493c, 0xe0f9, 0x1, 0x0);
        gbc.writeMem(0x62e3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C7
        gbc.setState(0x3090, 0xedc, 0xdb0, 0x4099, 0x9c9, 0x2ab4, 0x0, 0x0);
        gbc.writeMem(0x3090, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xedc, gbc.sp());
        EXPECT(0x3092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C8
        gbc.setState(0x4996, 0x2827, 0xcb30, 0xf4cc, 0x5f17, 0xbc68, 0x1, 0x0);
        gbc.writeMem(0x4996, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2827, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02C9
        gbc.setState(0x9337, 0x8f28, 0x1550, 0xbabb, 0xaaf3, 0xfd0d, 0x1, 0x0);
        gbc.writeMem(0x9337, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8f28, gbc.sp());
        EXPECT(0x9339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9337));
        EXPECT(0x2, gbc.readMem(0x9338));
        // CB 02 02CA
        gbc.setState(0x4e32, 0xc68f, 0x3ed0, 0x4d41, 0x587e, 0x843d, 0x0, 0x1);
        gbc.writeMem(0x4e32, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc68f, gbc.sp());
        EXPECT(0x4e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02CB
        gbc.setState(0x8ea2, 0xb7fd, 0x1c20, 0x9336, 0x5066, 0x567c, 0x1, 0x1);
        gbc.writeMem(0x8ea2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb7fd, gbc.sp());
        EXPECT(0x8ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea2));
        EXPECT(0x2, gbc.readMem(0x8ea3));
        // CB 02 02CC
        gbc.setState(0x7b26, 0xcc65, 0xc810, 0xe032, 0x7185, 0x1541, 0x1, 0x1);
        gbc.writeMem(0x7b26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcc65, gbc.sp());
        EXPECT(0x7b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02CD
        gbc.setState(0x5317, 0xbb18, 0xb600, 0xb0a6, 0x44ee, 0x350d, 0x0, 0x1);
        gbc.writeMem(0x5317, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbb18, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02CE
        gbc.setState(0x3bfd, 0x5702, 0x1ed0, 0xf99c, 0x64d7, 0xe5a7, 0x0, 0x0);
        gbc.writeMem(0x3bfd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5702, gbc.sp());
        EXPECT(0x3bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02CF
        gbc.setState(0xe460, 0xb4cf, 0xd170, 0xcdc5, 0x7c07, 0xa947, 0x1, 0x0);
        gbc.writeMem(0xe460, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb4cf, gbc.sp());
        EXPECT(0xe462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe460));
        EXPECT(0x2, gbc.readMem(0xe461));
        // CB 02 02D0
        gbc.setState(0xa372, 0x3a18, 0x67a0, 0x148f, 0x84b7, 0x536b, 0x1, 0x0);
        gbc.writeMem(0xa372, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0xa374, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa372));
        EXPECT(0x2, gbc.readMem(0xa373));
        // CB 02 02D1
        gbc.setState(0x85ef, 0x6124, 0x7ee0, 0xfa04, 0x9fb, 0x4028, 0x1, 0x0);
        gbc.writeMem(0x85ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6124, gbc.sp());
        EXPECT(0x85f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ef));
        EXPECT(0x2, gbc.readMem(0x85f0));
        // CB 02 02D2
        gbc.setState(0xb47f, 0xf7d9, 0x99b0, 0x7ce0, 0x9242, 0x1c0f, 0x0, 0x0);
        gbc.writeMem(0xb47f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf7d9, gbc.sp());
        EXPECT(0xb481, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47f));
        EXPECT(0x2, gbc.readMem(0xb480));
        // CB 02 02D3
        gbc.setState(0xe9db, 0xc649, 0x4af0, 0x3ed5, 0x2483, 0x58cd, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc649, gbc.sp());
        EXPECT(0xe9dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9db));
        EXPECT(0x2, gbc.readMem(0xe9dc));
        // CB 02 02D4
        gbc.setState(0xabfe, 0x5178, 0x980, 0x5b6f, 0x4c08, 0x794d, 0x1, 0x0);
        gbc.writeMem(0xabfe, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5178, gbc.sp());
        EXPECT(0xac00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfe));
        EXPECT(0x2, gbc.readMem(0xabff));
        // CB 02 02D5
        gbc.setState(0x2a0a, 0xd474, 0xa730, 0xba7a, 0xe346, 0xaab0, 0x0, 0x1);
        gbc.writeMem(0x2a0a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd474, gbc.sp());
        EXPECT(0x2a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02D6
        gbc.setState(0x849e, 0xae7a, 0xeb10, 0x964e, 0x9be5, 0xd18, 0x0, 0x1);
        gbc.writeMem(0x849e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xae7a, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x849e));
        EXPECT(0x2, gbc.readMem(0x849f));
        // CB 02 02D7
        gbc.setState(0xb25d, 0x8b85, 0x37f0, 0x18e5, 0xd40b, 0xf235, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25d));
        EXPECT(0x2, gbc.readMem(0xb25e));
        // CB 02 02D8
        gbc.setState(0x4eb7, 0xa8b8, 0x3b00, 0x244d, 0x3bb5, 0x6b44, 0x1, 0x0);
        gbc.writeMem(0x4eb7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02D9
        gbc.setState(0x2d6d, 0xc597, 0x4b80, 0x723f, 0x2c57, 0x6839, 0x1, 0x0);
        gbc.writeMem(0x2d6d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xc597, gbc.sp());
        EXPECT(0x2d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02DA
        gbc.setState(0xc5b7, 0xc94d, 0x7c00, 0xeab8, 0xd848, 0xd88f, 0x0, 0x0);
        gbc.writeMem(0xc5b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc94d, gbc.sp());
        EXPECT(0xc5b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5b7));
        EXPECT(0x2, gbc.readMem(0xc5b8));
        // CB 02 02DC
        gbc.setState(0x1bbf, 0xaeb4, 0x7d60, 0x5c1e, 0x8587, 0x5da5, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xaeb4, gbc.sp());
        EXPECT(0x1bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02DD
        gbc.setState(0x6ce, 0xa4db, 0xa3c0, 0x9822, 0x29b9, 0x6232, 0x1, 0x1);
        gbc.writeMem(0x6ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02DE
        gbc.setState(0xcb9f, 0xdcef, 0xf130, 0x91b9, 0xb2a5, 0x9f8b, 0x1, 0x0);
        gbc.writeMem(0xcb9f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9f));
        EXPECT(0x2, gbc.readMem(0xcba0));
        // CB 02 02E0
        gbc.setState(0x34cb, 0xd538, 0xdde0, 0xe0ff, 0x87cc, 0x2235, 0x1, 0x0);
        gbc.writeMem(0x34cb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd538, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02E2
        gbc.setState(0x5805, 0x4909, 0x1680, 0xaaf2, 0x8609, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x5805, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4909, gbc.sp());
        EXPECT(0x5807, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02E3
        gbc.setState(0x57b7, 0x73f6, 0x2610, 0x1671, 0xd5a6, 0x716f, 0x0, 0x0);
        gbc.writeMem(0x57b7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x73f6, gbc.sp());
        EXPECT(0x57b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02E4
        gbc.setState(0xe23f, 0x9f9b, 0x9e30, 0xfb40, 0x5cd5, 0x3937, 0x1, 0x0);
        gbc.writeMem(0xe23f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9f9b, gbc.sp());
        EXPECT(0xe241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe23f));
        EXPECT(0x2, gbc.readMem(0xe240));
        // CB 02 02E5
        gbc.setState(0x7c08, 0xedc8, 0xbfc0, 0xb59b, 0xbeb6, 0xcbb8, 0x1, 0x1);
        gbc.writeMem(0x7c08, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xedc8, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02E6
        gbc.setState(0x835c, 0xc7c0, 0x1690, 0x439a, 0xd037, 0x5661, 0x0, 0x0);
        gbc.writeMem(0x835c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc7c0, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835c));
        EXPECT(0x2, gbc.readMem(0x835d));
        // CB 02 02E7
        gbc.setState(0x6afd, 0xcb5f, 0x6da0, 0x1969, 0x78ec, 0x9f7a, 0x0, 0x0);
        gbc.writeMem(0x6afd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcb5f, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02E8
        gbc.setState(0x9d2f, 0xe644, 0x8ef0, 0xd2e6, 0x80a1, 0x689e, 0x0, 0x0);
        gbc.writeMem(0x9d2f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe644, gbc.sp());
        EXPECT(0x9d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2f));
        EXPECT(0x2, gbc.readMem(0x9d30));
        // CB 02 02E9
        gbc.setState(0x6420, 0xcc5e, 0x3c10, 0x71ff, 0xc46b, 0xbe14, 0x0, 0x0);
        gbc.writeMem(0x6420, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xcc5e, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02EA
        gbc.setState(0x1418, 0xe54, 0x5b20, 0xacd9, 0x4079, 0x230c, 0x1, 0x1);
        gbc.writeMem(0x1418, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x141a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02EB
        gbc.setState(0xeddf, 0xb171, 0x1f80, 0xffe2, 0x4b9c, 0x8450, 0x0, 0x1);
        gbc.writeMem(0xeddf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb171, gbc.sp());
        EXPECT(0xede1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeddf));
        EXPECT(0x2, gbc.readMem(0xede0));
        // CB 02 02EC
        gbc.setState(0xae5d, 0x39df, 0xf7e0, 0x481a, 0xdb98, 0x51f2, 0x1, 0x1);
        gbc.writeMem(0xae5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x39df, gbc.sp());
        EXPECT(0xae5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae5d));
        EXPECT(0x2, gbc.readMem(0xae5e));
        // CB 02 02ED
        gbc.setState(0x19b1, 0xdc05, 0xc960, 0xc6f9, 0x394f, 0x69a8, 0x0, 0x1);
        gbc.writeMem(0x19b1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdc05, gbc.sp());
        EXPECT(0x19b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02EE
        gbc.setState(0xa37d, 0xd5e3, 0xe90, 0x39de, 0x6fe0, 0x83ed, 0x0, 0x0);
        gbc.writeMem(0xa37d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd5e3, gbc.sp());
        EXPECT(0xa37f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37d));
        EXPECT(0x2, gbc.readMem(0xa37e));
        // CB 02 02EF
        gbc.setState(0xbcb4, 0xa5d4, 0x2590, 0x5739, 0x4257, 0x8106, 0x0, 0x1);
        gbc.writeMem(0xbcb4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa5d4, gbc.sp());
        EXPECT(0xbcb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcb4));
        EXPECT(0x2, gbc.readMem(0xbcb5));
        // CB 02 02F0
        gbc.setState(0x4ae6, 0xa2d2, 0x1410, 0x3dc8, 0xa368, 0x9143, 0x0, 0x1);
        gbc.writeMem(0x4ae6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xa2d2, gbc.sp());
        EXPECT(0x4ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02F2
        gbc.setState(0xd331, 0xd7a2, 0x14a0, 0x2d24, 0x50f8, 0xe01c, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd7a2, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0x2, gbc.readMem(0xd332));
        // CB 02 02F3
        gbc.setState(0xa858, 0x9151, 0xde50, 0x266f, 0x8570, 0xe1c, 0x0, 0x1);
        gbc.writeMem(0xa858, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9151, gbc.sp());
        EXPECT(0xa85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa858));
        EXPECT(0x2, gbc.readMem(0xa859));
        // CB 02 02F4
        gbc.setState(0x4888, 0xe53, 0x4900, 0x2ae9, 0xe981, 0xece2, 0x0, 0x1);
        gbc.writeMem(0x4888, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe53, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02F5
        gbc.setState(0xa352, 0x7112, 0x330, 0x28db, 0x3088, 0x6466, 0x1, 0x0);
        gbc.writeMem(0xa352, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7112, gbc.sp());
        EXPECT(0xa354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa352));
        EXPECT(0x2, gbc.readMem(0xa353));
        // CB 02 02F6
        gbc.setState(0x239e, 0x4600, 0x5530, 0xcbe1, 0x17c1, 0x262c, 0x0, 0x0);
        gbc.writeMem(0x239e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4600, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 02F7
        gbc.setState(0x364a, 0x7342, 0x840, 0xe5ff, 0xf737, 0xf958, 0x1, 0x1);
        gbc.writeMem(0x364a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7342, gbc.sp());
        EXPECT(0x364c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02F8
        gbc.setState(0x8cd5, 0xb82f, 0x5310, 0xffcc, 0xb899, 0x441d, 0x1, 0x0);
        gbc.writeMem(0x8cd5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb82f, gbc.sp());
        EXPECT(0x8cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd5));
        EXPECT(0x2, gbc.readMem(0x8cd6));
        // CB 02 02F9
        gbc.setState(0x2d66, 0x6e45, 0xd950, 0x9266, 0x8bed, 0x1f1b, 0x1, 0x0);
        gbc.writeMem(0x2d66, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6e45, gbc.sp());
        EXPECT(0x2d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02FA
        gbc.setState(0x5824, 0x636c, 0xbe90, 0x4cb5, 0xe6f5, 0x49b, 0x0, 0x0);
        gbc.writeMem(0x5824, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x636c, gbc.sp());
        EXPECT(0x5826, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02FB
        gbc.setState(0xc6e6, 0x5759, 0x9340, 0x58ad, 0x9da3, 0x4a8a, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5759, gbc.sp());
        EXPECT(0xc6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e6));
        EXPECT(0x2, gbc.readMem(0xc6e7));
        // CB 02 02FC
        gbc.setState(0x30fa, 0xeedb, 0x3770, 0x4591, 0xb72f, 0xc30b, 0x1, 0x1);
        gbc.writeMem(0x30fa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 02FD
        gbc.setState(0x8dbf, 0x3343, 0xf020, 0x1d56, 0x9de4, 0x3413, 0x1, 0x0);
        gbc.writeMem(0x8dbf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3343, gbc.sp());
        EXPECT(0x8dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbf));
        EXPECT(0x2, gbc.readMem(0x8dc0));
        // CB 02 02FE
        gbc.setState(0xeb17, 0xd9e1, 0x9610, 0x511e, 0x3ca9, 0x9afb, 0x1, 0x0);
        gbc.writeMem(0xeb17, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd9e1, gbc.sp());
        EXPECT(0xeb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb17));
        EXPECT(0x2, gbc.readMem(0xeb18));
        // CB 02 02FF
        gbc.setState(0xb36, 0xaa80, 0x3290, 0x11ca, 0xd564, 0xed6a, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa80, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0300
        gbc.setState(0xac5c, 0x1b81, 0x20f0, 0xe4b2, 0x6de9, 0x37bd, 0x0, 0x1);
        gbc.writeMem(0xac5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1b81, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5c));
        EXPECT(0x2, gbc.readMem(0xac5d));
        // CB 02 0301
        gbc.setState(0x2ce3, 0x48de, 0x840, 0x38f3, 0x709b, 0x4745, 0x0, 0x1);
        gbc.writeMem(0x2ce3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x48de, gbc.sp());
        EXPECT(0x2ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0302
        gbc.setState(0x7870, 0xce54, 0xb790, 0x2c1f, 0x2b0e, 0x78bd, 0x1, 0x0);
        gbc.writeMem(0x7870, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce54, gbc.sp());
        EXPECT(0x7872, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0303
        gbc.setState(0xbbe2, 0x5339, 0xdf10, 0x42b, 0x234c, 0x5962, 0x0, 0x1);
        gbc.writeMem(0xbbe2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5339, gbc.sp());
        EXPECT(0xbbe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe2));
        EXPECT(0x2, gbc.readMem(0xbbe3));
        // CB 02 0304
        gbc.setState(0x48ce, 0x2b73, 0x3600, 0xea6a, 0xae1a, 0x7f0, 0x1, 0x1);
        gbc.writeMem(0x48ce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2b73, gbc.sp());
        EXPECT(0x48d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0305
        gbc.setState(0x3d2, 0xb51e, 0x3b80, 0xaa5e, 0x7f9b, 0xb8bb, 0x1, 0x0);
        gbc.writeMem(0x3d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb51e, gbc.sp());
        EXPECT(0x3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0306
        gbc.setState(0xa652, 0xaa39, 0xe5a0, 0x455c, 0x392, 0x2832, 0x1, 0x0);
        gbc.writeMem(0xa652, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaa39, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa652));
        EXPECT(0x2, gbc.readMem(0xa653));
        // CB 02 0307
        gbc.setState(0x2ef4, 0xf2e6, 0x5530, 0x8db8, 0xce5b, 0xb81a, 0x0, 0x1);
        gbc.writeMem(0x2ef4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x2ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0308
        gbc.setState(0x1b35, 0xfa6d, 0xfa40, 0x7003, 0x8ed2, 0xc6cd, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfa6d, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0309
        gbc.setState(0x7031, 0x2a77, 0x8490, 0xf664, 0xc99, 0xa34e, 0x1, 0x0);
        gbc.writeMem(0x7031, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2a77, gbc.sp());
        EXPECT(0x7033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 030A
        gbc.setState(0x75e4, 0xe036, 0x9a10, 0xca33, 0x9c9f, 0x950a, 0x0, 0x0);
        gbc.writeMem(0x75e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe036, gbc.sp());
        EXPECT(0x75e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 030B
        gbc.setState(0x371d, 0x31ef, 0xdb80, 0x2c27, 0xc9f4, 0x4787, 0x0, 0x0);
        gbc.writeMem(0x371d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x31ef, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 030C
        gbc.setState(0x82b1, 0xd5dd, 0xc4e0, 0xe743, 0x5e90, 0xacd9, 0x0, 0x0);
        gbc.writeMem(0x82b1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd5dd, gbc.sp());
        EXPECT(0x82b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82b1));
        EXPECT(0x2, gbc.readMem(0x82b2));
        // CB 02 030D
        gbc.setState(0x12ec, 0x1cc1, 0x8190, 0x9f3b, 0x7754, 0x96a8, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1cc1, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 030E
        gbc.setState(0x6ac4, 0x229e, 0xf340, 0x8ba2, 0x711e, 0x6de, 0x1, 0x0);
        gbc.writeMem(0x6ac4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x229e, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 030F
        gbc.setState(0x79ef, 0x443f, 0xe370, 0x33d, 0xe54c, 0x48ef, 0x1, 0x1);
        gbc.writeMem(0x79ef, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x443f, gbc.sp());
        EXPECT(0x79f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0310
        gbc.setState(0x1330, 0x1674, 0x2d40, 0x4d33, 0xd79a, 0x6708, 0x1, 0x0);
        gbc.writeMem(0x1330, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1674, gbc.sp());
        EXPECT(0x1332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0311
        gbc.setState(0x3dcf, 0x33bc, 0x4330, 0x2b7c, 0xd0c7, 0xac61, 0x0, 0x1);
        gbc.writeMem(0x3dcf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x33bc, gbc.sp());
        EXPECT(0x3dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0312
        gbc.setState(0x7c1e, 0x1c64, 0x92a0, 0x79f4, 0x8418, 0x894b, 0x1, 0x1);
        gbc.writeMem(0x7c1e, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1c64, gbc.sp());
        EXPECT(0x7c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0313
        gbc.setState(0x3316, 0x217f, 0xab80, 0x82b9, 0x47c9, 0xa8b5, 0x0, 0x0);
        gbc.writeMem(0x3316, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x217f, gbc.sp());
        EXPECT(0x3318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0314
        gbc.setState(0x58e2, 0x90dc, 0xf530, 0xb2e7, 0x5858, 0x844, 0x1, 0x0);
        gbc.writeMem(0x58e2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x90dc, gbc.sp());
        EXPECT(0x58e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0315
        gbc.setState(0xb4f6, 0x1255, 0x7d80, 0xd35e, 0x94a5, 0xaac7, 0x0, 0x1);
        gbc.writeMem(0xb4f6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1255, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f6));
        EXPECT(0x2, gbc.readMem(0xb4f7));
        // CB 02 0316
        gbc.setState(0x1dab, 0x106e, 0x5de0, 0x3a0a, 0x20d3, 0x5a8c, 0x1, 0x1);
        gbc.writeMem(0x1dab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x106e, gbc.sp());
        EXPECT(0x1dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0317
        gbc.setState(0xd322, 0xeac7, 0xdb30, 0x490b, 0x6a6b, 0xd876, 0x1, 0x0);
        gbc.writeMem(0xd322, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xeac7, gbc.sp());
        EXPECT(0xd324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd322));
        EXPECT(0x2, gbc.readMem(0xd323));
        // CB 02 0319
        gbc.setState(0x55e3, 0xfbf9, 0x5430, 0x1165, 0x2ff, 0xb9fa, 0x0, 0x1);
        gbc.writeMem(0x55e3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfbf9, gbc.sp());
        EXPECT(0x55e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 031A
        gbc.setState(0x27c6, 0xb376, 0x5760, 0x2c06, 0xbb6, 0x6cd1, 0x1, 0x0);
        gbc.writeMem(0x27c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb376, gbc.sp());
        EXPECT(0x27c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 031B
        gbc.setState(0xe210, 0x9125, 0x6e90, 0xb95b, 0x5718, 0xde76, 0x1, 0x0);
        gbc.writeMem(0xe210, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9125, gbc.sp());
        EXPECT(0xe212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe210));
        EXPECT(0x2, gbc.readMem(0xe211));
        // CB 02 031C
        gbc.setState(0x2873, 0x8317, 0xee20, 0xd95e, 0xfeea, 0xcfcb, 0x0, 0x0);
        gbc.writeMem(0x2873, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8317, gbc.sp());
        EXPECT(0x2875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 031D
        gbc.setState(0xc54d, 0x81d6, 0x3980, 0x7102, 0x9d58, 0xac7f, 0x1, 0x1);
        gbc.writeMem(0xc54d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x81d6, gbc.sp());
        EXPECT(0xc54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc54d));
        EXPECT(0x2, gbc.readMem(0xc54e));
        // CB 02 031E
        gbc.setState(0xbc8a, 0x7f85, 0x94c0, 0xedf1, 0x39b6, 0x8211, 0x0, 0x1);
        gbc.writeMem(0xbc8a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7f85, gbc.sp());
        EXPECT(0xbc8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc8a));
        EXPECT(0x2, gbc.readMem(0xbc8b));
        // CB 02 031F
        gbc.setState(0x6280, 0x4d52, 0xbef0, 0xe717, 0x3908, 0x156b, 0x1, 0x1);
        gbc.writeMem(0x6280, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4d52, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0320
        gbc.setState(0x567d, 0x9016, 0xea20, 0xf45b, 0x28e0, 0xb7dc, 0x0, 0x0);
        gbc.writeMem(0x567d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9016, gbc.sp());
        EXPECT(0x567f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0321
        gbc.setState(0x7dd2, 0x724e, 0x8260, 0xc5e6, 0x2c09, 0x39ab, 0x1, 0x1);
        gbc.writeMem(0x7dd2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x724e, gbc.sp());
        EXPECT(0x7dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0322
        gbc.setState(0x7e90, 0xb6ac, 0x52e0, 0xaf7c, 0x88a, 0xda1e, 0x0, 0x1);
        gbc.writeMem(0x7e90, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb6ac, gbc.sp());
        EXPECT(0x7e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0324
        gbc.setState(0x5a5c, 0x3abb, 0x4db0, 0x69c2, 0xb51a, 0x744, 0x0, 0x0);
        gbc.writeMem(0x5a5c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3abb, gbc.sp());
        EXPECT(0x5a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0325
        gbc.setState(0x26b3, 0xcb0c, 0x6b0, 0xc5ec, 0xee97, 0xd858, 0x1, 0x0);
        gbc.writeMem(0x26b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcb0c, gbc.sp());
        EXPECT(0x26b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0326
        gbc.setState(0xad77, 0x54f1, 0xf180, 0xdb44, 0xc8a2, 0x1733, 0x0, 0x1);
        gbc.writeMem(0xad77, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x54f1, gbc.sp());
        EXPECT(0xad79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad77));
        EXPECT(0x2, gbc.readMem(0xad78));
        // CB 02 0327
        gbc.setState(0xb3f, 0x4ab1, 0x9660, 0xd954, 0x49a0, 0xe10b, 0x1, 0x1);
        gbc.writeMem(0xb3f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4ab1, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0328
        gbc.setState(0xa1ff, 0x5269, 0x60b0, 0xa78, 0xff87, 0xc0b4, 0x0, 0x0);
        gbc.writeMem(0xa1ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5269, gbc.sp());
        EXPECT(0xa201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ff));
        EXPECT(0x2, gbc.readMem(0xa200));
        // CB 02 0329
        gbc.setState(0xb9fc, 0x704a, 0xd3a0, 0x31c8, 0xbfbb, 0x316f, 0x1, 0x0);
        gbc.writeMem(0xb9fc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x704a, gbc.sp());
        EXPECT(0xb9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9fc));
        EXPECT(0x2, gbc.readMem(0xb9fd));
        // CB 02 032B
        gbc.setState(0x41df, 0x916, 0x3e20, 0x6647, 0x6eb6, 0x6cc2, 0x0, 0x1);
        gbc.writeMem(0x41df, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x916, gbc.sp());
        EXPECT(0x41e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 032C
        gbc.setState(0x61d6, 0x59d5, 0xb4d0, 0xaadb, 0xb7f8, 0x3cb2, 0x0, 0x0);
        gbc.writeMem(0x61d6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x59d5, gbc.sp());
        EXPECT(0x61d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 032D
        gbc.setState(0x2bd, 0x4a5c, 0x2df0, 0x3428, 0x3192, 0x4b59, 0x1, 0x1);
        gbc.writeMem(0x2bd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0x2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 032E
        gbc.setState(0xb29a, 0xa590, 0x1a90, 0x7f16, 0xa304, 0x81b8, 0x1, 0x0);
        gbc.writeMem(0xb29a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa590, gbc.sp());
        EXPECT(0xb29c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb29a));
        EXPECT(0x2, gbc.readMem(0xb29b));
        // CB 02 032F
        gbc.setState(0xc1f8, 0x7e05, 0xe6c0, 0x741a, 0xf8c4, 0x841d, 0x0, 0x1);
        gbc.writeMem(0xc1f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7e05, gbc.sp());
        EXPECT(0xc1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1f8));
        EXPECT(0x2, gbc.readMem(0xc1f9));
        // CB 02 0330
        gbc.setState(0x2272, 0x8556, 0x5770, 0x827f, 0xbb0b, 0x85c6, 0x1, 0x0);
        gbc.writeMem(0x2272, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0x2274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0331
        gbc.setState(0x9207, 0x4d5, 0xdb60, 0x818d, 0x2cdb, 0x7f6f, 0x0, 0x1);
        gbc.writeMem(0x9207, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0x9209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9207));
        EXPECT(0x2, gbc.readMem(0x9208));
        // CB 02 0332
        gbc.setState(0x2fce, 0xa096, 0x4f00, 0xe3e1, 0xc3f7, 0xd557, 0x0, 0x1);
        gbc.writeMem(0x2fce, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa096, gbc.sp());
        EXPECT(0x2fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0333
        gbc.setState(0x9030, 0x6c65, 0x5fe0, 0x218c, 0xe14f, 0xe709, 0x1, 0x1);
        gbc.writeMem(0x9030, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6c65, gbc.sp());
        EXPECT(0x9032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9030));
        EXPECT(0x2, gbc.readMem(0x9031));
        // CB 02 0334
        gbc.setState(0xcb8, 0x764f, 0xdab0, 0xea0, 0x50b9, 0x352f, 0x1, 0x0);
        gbc.writeMem(0xcb8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x764f, gbc.sp());
        EXPECT(0xcba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0335
        gbc.setState(0xb6a0, 0x6c62, 0x3590, 0x762a, 0x5b6a, 0x24bb, 0x0, 0x0);
        gbc.writeMem(0xb6a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6c62, gbc.sp());
        EXPECT(0xb6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a0));
        EXPECT(0x2, gbc.readMem(0xb6a1));
        // CB 02 0336
        gbc.setState(0x11ea, 0xad13, 0x3570, 0x42d8, 0x9a45, 0x422e, 0x0, 0x1);
        gbc.writeMem(0x11ea, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xad13, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0337
        gbc.setState(0x10e0, 0xc3e, 0x72e0, 0xa7be, 0x8d64, 0xa87c, 0x1, 0x1);
        gbc.writeMem(0x10e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc3e, gbc.sp());
        EXPECT(0x10e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0338
        gbc.setState(0x4317, 0xda0b, 0xe5b0, 0x468c, 0xbf70, 0xa375, 0x1, 0x0);
        gbc.writeMem(0x4317, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xda0b, gbc.sp());
        EXPECT(0x4319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0339
        gbc.setState(0xc8f1, 0xe857, 0xc910, 0x155f, 0xe1ed, 0x70a9, 0x0, 0x1);
        gbc.writeMem(0xc8f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe857, gbc.sp());
        EXPECT(0xc8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f1));
        EXPECT(0x2, gbc.readMem(0xc8f2));
        // CB 02 033A
        gbc.setState(0x8bcf, 0x5da1, 0xa590, 0x2cfc, 0x2ac6, 0x3649, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5da1, gbc.sp());
        EXPECT(0x8bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcf));
        EXPECT(0x2, gbc.readMem(0x8bd0));
        // CB 02 033B
        gbc.setState(0x30ff, 0x87f5, 0x500, 0x720, 0x671d, 0x995e, 0x0, 0x1);
        gbc.writeMem(0x30ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x87f5, gbc.sp());
        EXPECT(0x3101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 033C
        gbc.setState(0xed09, 0xd651, 0x9590, 0x97f3, 0x39e4, 0x5021, 0x1, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd651, gbc.sp());
        EXPECT(0xed0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed09));
        EXPECT(0x2, gbc.readMem(0xed0a));
        // CB 02 033D
        gbc.setState(0x9c04, 0x5a08, 0x5fa0, 0xfe58, 0xf08e, 0x94ff, 0x0, 0x0);
        gbc.writeMem(0x9c04, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5a08, gbc.sp());
        EXPECT(0x9c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c04));
        EXPECT(0x2, gbc.readMem(0x9c05));
        // CB 02 033E
        gbc.setState(0xa26b, 0xbb6e, 0x73c0, 0xb94, 0xd265, 0x2071, 0x0, 0x1);
        gbc.writeMem(0xa26b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbb6e, gbc.sp());
        EXPECT(0xa26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26b));
        EXPECT(0x2, gbc.readMem(0xa26c));
        // CB 02 033F
        gbc.setState(0xe0ae, 0x14a9, 0x6e10, 0x5960, 0xd79f, 0x141d, 0x0, 0x0);
        gbc.writeMem(0xe0ae, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x14a9, gbc.sp());
        EXPECT(0xe0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0ae));
        EXPECT(0x2, gbc.readMem(0xe0af));
        // CB 02 0340
        gbc.setState(0xb376, 0x5825, 0xba10, 0x3809, 0xf98e, 0xfe97, 0x0, 0x1);
        gbc.writeMem(0xb376, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5825, gbc.sp());
        EXPECT(0xb378, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb376));
        EXPECT(0x2, gbc.readMem(0xb377));
        // CB 02 0341
        gbc.setState(0x8010, 0x4f6f, 0x3400, 0x7573, 0xa23e, 0x6138, 0x1, 0x1);
        gbc.writeMem(0x8010, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4f6f, gbc.sp());
        EXPECT(0x8012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8010));
        EXPECT(0x2, gbc.readMem(0x8011));
        // CB 02 0342
        gbc.setState(0x3b56, 0xae3c, 0xe790, 0x2f6d, 0xd628, 0xbb22, 0x1, 0x0);
        gbc.writeMem(0x3b56, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xae3c, gbc.sp());
        EXPECT(0x3b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0343
        gbc.setState(0x4233, 0xbb9e, 0x4dc0, 0xd2f2, 0xa75c, 0xa44b, 0x1, 0x1);
        gbc.writeMem(0x4233, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbb9e, gbc.sp());
        EXPECT(0x4235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0344
        gbc.setState(0xa5d, 0xaf83, 0x81d0, 0x435a, 0x79a7, 0xae3a, 0x1, 0x1);
        gbc.writeMem(0xa5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaf83, gbc.sp());
        EXPECT(0xa5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0345
        gbc.setState(0x9af, 0x1042, 0x9820, 0x46f6, 0x90e6, 0x734, 0x0, 0x1);
        gbc.writeMem(0x9af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1042, gbc.sp());
        EXPECT(0x9b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0346
        gbc.setState(0x7778, 0xfba9, 0x5710, 0x1afa, 0x4dc7, 0x8273, 0x0, 0x1);
        gbc.writeMem(0x7778, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfba9, gbc.sp());
        EXPECT(0x777a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0347
        gbc.setState(0x8ad3, 0x838b, 0x2ed0, 0x3c7c, 0x6ff6, 0x707c, 0x0, 0x0);
        gbc.writeMem(0x8ad3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x838b, gbc.sp());
        EXPECT(0x8ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad3));
        EXPECT(0x2, gbc.readMem(0x8ad4));
        // CB 02 0348
        gbc.setState(0xb896, 0x853d, 0x77c0, 0x5855, 0x9eb1, 0x417d, 0x1, 0x1);
        gbc.writeMem(0xb896, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x853d, gbc.sp());
        EXPECT(0xb898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb896));
        EXPECT(0x2, gbc.readMem(0xb897));
        // CB 02 034A
        gbc.setState(0xc5d8, 0x2e15, 0xb0b0, 0x48ff, 0x9166, 0x8f93, 0x0, 0x1);
        gbc.writeMem(0xc5d8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2e15, gbc.sp());
        EXPECT(0xc5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d8));
        EXPECT(0x2, gbc.readMem(0xc5d9));
        // CB 02 034B
        gbc.setState(0x6a4d, 0xa729, 0xd5b0, 0x7ad5, 0x7a64, 0x4075, 0x0, 0x0);
        gbc.writeMem(0x6a4d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa729, gbc.sp());
        EXPECT(0x6a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 034C
        gbc.setState(0xb0f3, 0xf37f, 0xcf00, 0xcf3d, 0x6bc5, 0x3a7c, 0x1, 0x1);
        gbc.writeMem(0xb0f3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0xb0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f3));
        EXPECT(0x2, gbc.readMem(0xb0f4));
        // CB 02 034D
        gbc.setState(0xb620, 0xee9c, 0xe5e0, 0x8fa4, 0xe2c7, 0xe972, 0x1, 0x0);
        gbc.writeMem(0xb620, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xee9c, gbc.sp());
        EXPECT(0xb622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb620));
        EXPECT(0x2, gbc.readMem(0xb621));
        // CB 02 034E
        gbc.setState(0xcd3c, 0x9922, 0x7fb0, 0x5afd, 0x1ae0, 0x3332, 0x0, 0x0);
        gbc.writeMem(0xcd3c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9922, gbc.sp());
        EXPECT(0xcd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3c));
        EXPECT(0x2, gbc.readMem(0xcd3d));
        // CB 02 034F
        gbc.setState(0xe8a9, 0xef62, 0xf270, 0xe53e, 0x80ca, 0x991a, 0x0, 0x0);
        gbc.writeMem(0xe8a9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xef62, gbc.sp());
        EXPECT(0xe8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a9));
        EXPECT(0x2, gbc.readMem(0xe8aa));
        // CB 02 0350
        gbc.setState(0x42c5, 0x1ea1, 0x1670, 0x2490, 0xe1f3, 0xb821, 0x1, 0x0);
        gbc.writeMem(0x42c5, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1ea1, gbc.sp());
        EXPECT(0x42c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0351
        gbc.setState(0x4c23, 0x1d16, 0x7a0, 0x81e5, 0x168b, 0x87b0, 0x1, 0x1);
        gbc.writeMem(0x4c23, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0x4c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0352
        gbc.setState(0xe912, 0x36f9, 0x5f60, 0x6a42, 0x38e4, 0x6f26, 0x0, 0x0);
        gbc.writeMem(0xe912, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0xe914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe912));
        EXPECT(0x2, gbc.readMem(0xe913));
        // CB 02 0353
        gbc.setState(0x9a6a, 0x21d1, 0xbc60, 0x196d, 0x661f, 0x3929, 0x0, 0x1);
        gbc.writeMem(0x9a6a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0x9a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6a));
        EXPECT(0x2, gbc.readMem(0x9a6b));
        // CB 02 0354
        gbc.setState(0x3f11, 0x77e0, 0xcbd0, 0xf27c, 0xb1b1, 0x181, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0355
        gbc.setState(0x5892, 0x646b, 0x5640, 0xfd02, 0x8d4c, 0x98e7, 0x1, 0x0);
        gbc.writeMem(0x5892, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x646b, gbc.sp());
        EXPECT(0x5894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0357
        gbc.setState(0x3982, 0x54f3, 0x3a0, 0xf8e9, 0xe123, 0xa58, 0x0, 0x0);
        gbc.writeMem(0x3982, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x54f3, gbc.sp());
        EXPECT(0x3984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0358
        gbc.setState(0xee63, 0xc551, 0xfec0, 0x2e3f, 0x7e43, 0xd559, 0x0, 0x0);
        gbc.writeMem(0xee63, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc551, gbc.sp());
        EXPECT(0xee65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee63));
        EXPECT(0x2, gbc.readMem(0xee64));
        // CB 02 0359
        gbc.setState(0xc7e0, 0x90a0, 0xcd20, 0x776c, 0x870a, 0x7782, 0x1, 0x0);
        gbc.writeMem(0xc7e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x90a0, gbc.sp());
        EXPECT(0xc7e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7e0));
        EXPECT(0x2, gbc.readMem(0xc7e1));
        // CB 02 035A
        gbc.setState(0x57dc, 0x1c0b, 0x4ed0, 0x3450, 0x8e41, 0x18c0, 0x0, 0x0);
        gbc.writeMem(0x57dc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1c0b, gbc.sp());
        EXPECT(0x57de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 035B
        gbc.setState(0x8b05, 0x54bc, 0x7d90, 0xd291, 0xf937, 0x1e58, 0x0, 0x0);
        gbc.writeMem(0x8b05, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x54bc, gbc.sp());
        EXPECT(0x8b07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b05));
        EXPECT(0x2, gbc.readMem(0x8b06));
        // CB 02 035C
        gbc.setState(0x756, 0xa1f9, 0x82b0, 0x3f5a, 0xd419, 0x1f8a, 0x0, 0x0);
        gbc.writeMem(0x756, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa1f9, gbc.sp());
        EXPECT(0x758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 035D
        gbc.setState(0xec7b, 0x5d6f, 0x9cf0, 0xca34, 0xccb4, 0x42a3, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0xec7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7b));
        EXPECT(0x2, gbc.readMem(0xec7c));
        // CB 02 035E
        gbc.setState(0x6f37, 0x469c, 0xe060, 0xc0f7, 0x8843, 0x69d2, 0x1, 0x1);
        gbc.writeMem(0x6f37, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x6f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 035F
        gbc.setState(0x2e70, 0xec7c, 0x4d40, 0x589, 0xcdd, 0x9acb, 0x1, 0x0);
        gbc.writeMem(0x2e70, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xec7c, gbc.sp());
        EXPECT(0x2e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0360
        gbc.setState(0x5109, 0xf4d1, 0x97f0, 0x633f, 0xcb2b, 0xa9d0, 0x1, 0x0);
        gbc.writeMem(0x5109, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf4d1, gbc.sp());
        EXPECT(0x510b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0361
        gbc.setState(0x8841, 0x3c50, 0xe550, 0x9bd5, 0x1917, 0xdbb, 0x1, 0x1);
        gbc.writeMem(0x8841, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3c50, gbc.sp());
        EXPECT(0x8843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8841));
        EXPECT(0x2, gbc.readMem(0x8842));
        // CB 02 0362
        gbc.setState(0x29e0, 0xbec3, 0xc6d0, 0x8f37, 0x8b0a, 0x23a2, 0x1, 0x0);
        gbc.writeMem(0x29e0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x29e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0363
        gbc.setState(0x2a17, 0xcf60, 0x4d80, 0xf6, 0x9d8b, 0xf407, 0x1, 0x1);
        gbc.writeMem(0x2a17, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xcf60, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0364
        gbc.setState(0x45af, 0xe48e, 0x4140, 0x7cd0, 0xa676, 0x5e44, 0x0, 0x1);
        gbc.writeMem(0x45af, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe48e, gbc.sp());
        EXPECT(0x45b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0365
        gbc.setState(0x71b2, 0x118e, 0x14f0, 0x329b, 0xc584, 0xad82, 0x1, 0x0);
        gbc.writeMem(0x71b2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x118e, gbc.sp());
        EXPECT(0x71b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0366
        gbc.setState(0xab86, 0x23e, 0xd660, 0xd5b3, 0x3c, 0x96fb, 0x0, 0x0);
        gbc.writeMem(0xab86, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x23e, gbc.sp());
        EXPECT(0xab88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab86));
        EXPECT(0x2, gbc.readMem(0xab87));
        // CB 02 0367
        gbc.setState(0xb56a, 0x8547, 0xd100, 0x1e13, 0x9bfe, 0x8d60, 0x0, 0x0);
        gbc.writeMem(0xb56a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0xb56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb56a));
        EXPECT(0x2, gbc.readMem(0xb56b));
        // CB 02 0368
        gbc.setState(0x134c, 0xcd05, 0x16a0, 0xda3, 0x80c2, 0x9510, 0x0, 0x1);
        gbc.writeMem(0x134c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcd05, gbc.sp());
        EXPECT(0x134e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0369
        gbc.setState(0x5d7a, 0x1bf7, 0x6050, 0xddb7, 0x7568, 0x89ca, 0x0, 0x1);
        gbc.writeMem(0x5d7a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1bf7, gbc.sp());
        EXPECT(0x5d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 036A
        gbc.setState(0x3256, 0xe131, 0xbfb0, 0x1d9d, 0x6de2, 0x6313, 0x0, 0x0);
        gbc.writeMem(0x3256, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe131, gbc.sp());
        EXPECT(0x3258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 036B
        gbc.setState(0x822d, 0x2c4a, 0x7ac0, 0xbdc6, 0xf094, 0xf53c, 0x0, 0x1);
        gbc.writeMem(0x822d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2c4a, gbc.sp());
        EXPECT(0x822f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x822d));
        EXPECT(0x2, gbc.readMem(0x822e));
        // CB 02 036C
        gbc.setState(0xbeb7, 0xc38c, 0x7c90, 0xbeed, 0x164d, 0xa35d, 0x0, 0x1);
        gbc.writeMem(0xbeb7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc38c, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeb7));
        EXPECT(0x2, gbc.readMem(0xbeb8));
        // CB 02 036D
        gbc.setState(0xdd, 0x5bfa, 0x3f10, 0x915f, 0xaac0, 0x65b2, 0x1, 0x1);
        gbc.writeMem(0xdd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5bfa, gbc.sp());
        EXPECT(0xdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 036E
        gbc.setState(0x72f1, 0xe114, 0xfab0, 0xb28c, 0xec3f, 0x7aa9, 0x1, 0x0);
        gbc.writeMem(0x72f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe114, gbc.sp());
        EXPECT(0x72f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 036F
        gbc.setState(0x35aa, 0x1641, 0x690, 0xa566, 0xbf79, 0x19e2, 0x0, 0x1);
        gbc.writeMem(0x35aa, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x35ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0370
        gbc.setState(0xc0e8, 0x7c92, 0x6650, 0xdc42, 0x1140, 0xe9e2, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7c92, gbc.sp());
        EXPECT(0xc0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e8));
        EXPECT(0x2, gbc.readMem(0xc0e9));
        // CB 02 0371
        gbc.setState(0x81f8, 0xca38, 0x5b80, 0x82e1, 0x18f2, 0x1b87, 0x1, 0x1);
        gbc.writeMem(0x81f8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xca38, gbc.sp());
        EXPECT(0x81fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f8));
        EXPECT(0x2, gbc.readMem(0x81f9));
        // CB 02 0372
        gbc.setState(0xa526, 0x1fd3, 0xc0, 0x6b23, 0xbad6, 0x7b73, 0x1, 0x1);
        gbc.writeMem(0xa526, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1fd3, gbc.sp());
        EXPECT(0xa528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa526));
        EXPECT(0x2, gbc.readMem(0xa527));
        // CB 02 0373
        gbc.setState(0x3751, 0x918f, 0xba00, 0xd5c5, 0xc8dd, 0x80d4, 0x0, 0x0);
        gbc.writeMem(0x3751, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x918f, gbc.sp());
        EXPECT(0x3753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0374
        gbc.setState(0x99e8, 0xdbd7, 0x6de0, 0x886f, 0x307b, 0xc87a, 0x0, 0x0);
        gbc.writeMem(0x99e8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdbd7, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e8));
        EXPECT(0x2, gbc.readMem(0x99e9));
        // CB 02 0375
        gbc.setState(0x723, 0x435e, 0xf280, 0x9e2e, 0xb1a7, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x723, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x435e, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0376
        gbc.setState(0x6444, 0x493, 0xc180, 0xb59f, 0x821e, 0xa73a, 0x0, 0x0);
        gbc.writeMem(0x6444, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x493, gbc.sp());
        EXPECT(0x6446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0377
        gbc.setState(0xe46b, 0xad8e, 0x1df0, 0x8f8f, 0xea0e, 0xa8da, 0x0, 0x1);
        gbc.writeMem(0xe46b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xad8e, gbc.sp());
        EXPECT(0xe46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46b));
        EXPECT(0x2, gbc.readMem(0xe46c));
        // CB 02 0378
        gbc.setState(0xc73, 0x2bb1, 0x1860, 0xedbc, 0x3d90, 0x3384, 0x0, 0x1);
        gbc.writeMem(0xc73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2bb1, gbc.sp());
        EXPECT(0xc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0379
        gbc.setState(0x8d1b, 0x3a01, 0x4db0, 0xa888, 0x6b25, 0x7391, 0x0, 0x1);
        gbc.writeMem(0x8d1b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3a01, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d1b));
        EXPECT(0x2, gbc.readMem(0x8d1c));
        // CB 02 037A
        gbc.setState(0x4085, 0xcb1, 0x4530, 0xd2ab, 0xcb02, 0x55ae, 0x0, 0x1);
        gbc.writeMem(0x4085, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcb1, gbc.sp());
        EXPECT(0x4087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 037B
        gbc.setState(0xc16a, 0x10d5, 0xc870, 0xeb8, 0xcf09, 0xa45a, 0x0, 0x1);
        gbc.writeMem(0xc16a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x10d5, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc16a));
        EXPECT(0x2, gbc.readMem(0xc16b));
        // CB 02 037C
        gbc.setState(0xbb77, 0x9260, 0x51a0, 0x756e, 0xd50, 0x3e8a, 0x0, 0x1);
        gbc.writeMem(0xbb77, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0xbb79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb77));
        EXPECT(0x2, gbc.readMem(0xbb78));
        // CB 02 037D
        gbc.setState(0x51e9, 0x2042, 0x3c70, 0x6d62, 0xf752, 0x8fc4, 0x1, 0x0);
        gbc.writeMem(0x51e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2042, gbc.sp());
        EXPECT(0x51eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 037E
        gbc.setState(0x560d, 0xc645, 0x8c00, 0xa94c, 0xf7b8, 0x1a69, 0x0, 0x1);
        gbc.writeMem(0x560d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc645, gbc.sp());
        EXPECT(0x560f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 037F
        gbc.setState(0x52e4, 0xbecd, 0xaf50, 0x1676, 0x55d, 0xcdba, 0x1, 0x1);
        gbc.writeMem(0x52e4, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbecd, gbc.sp());
        EXPECT(0x52e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0380
        gbc.setState(0x50b6, 0xe13e, 0xae00, 0x7dd6, 0xb627, 0x3327, 0x1, 0x1);
        gbc.writeMem(0x50b6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x50b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0381
        gbc.setState(0xb34d, 0x8e99, 0xe7d0, 0xca9f, 0xaa0e, 0x4c83, 0x1, 0x0);
        gbc.writeMem(0xb34d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8e99, gbc.sp());
        EXPECT(0xb34f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb34d));
        EXPECT(0x2, gbc.readMem(0xb34e));
        // CB 02 0382
        gbc.setState(0x619d, 0xd0ed, 0xdbe0, 0x6757, 0x9e3e, 0xcb64, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0383
        gbc.setState(0x3403, 0x6ab0, 0xcad0, 0x3904, 0xb927, 0x1b03, 0x1, 0x1);
        gbc.writeMem(0x3403, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6ab0, gbc.sp());
        EXPECT(0x3405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0384
        gbc.setState(0x157a, 0xaf96, 0x290, 0xbaff, 0x61ee, 0xfca4, 0x1, 0x0);
        gbc.writeMem(0x157a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xaf96, gbc.sp());
        EXPECT(0x157c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0386
        gbc.setState(0x82e9, 0xdd51, 0xf7f0, 0x59f5, 0x2100, 0x88e3, 0x1, 0x0);
        gbc.writeMem(0x82e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x82eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e9));
        EXPECT(0x2, gbc.readMem(0x82ea));
        // CB 02 0387
        gbc.setState(0x8f36, 0xb915, 0x2e30, 0x9a56, 0xf88e, 0x7897, 0x1, 0x0);
        gbc.writeMem(0x8f36, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb915, gbc.sp());
        EXPECT(0x8f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f36));
        EXPECT(0x2, gbc.readMem(0x8f37));
        // CB 02 0388
        gbc.setState(0x125d, 0xea0b, 0x47e0, 0xb7db, 0x6f1c, 0x1185, 0x0, 0x1);
        gbc.writeMem(0x125d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0x125f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0389
        gbc.setState(0x8854, 0xeca2, 0x7d10, 0xeaea, 0x9e9, 0xf9b0, 0x0, 0x0);
        gbc.writeMem(0x8854, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xeca2, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8854));
        EXPECT(0x2, gbc.readMem(0x8855));
        // CB 02 038A
        gbc.setState(0xc482, 0x4e2, 0x32c0, 0xb2b0, 0xf985, 0xba3b, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4e2, gbc.sp());
        EXPECT(0xc484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc482));
        EXPECT(0x2, gbc.readMem(0xc483));
        // CB 02 038B
        gbc.setState(0x1319, 0x327, 0xafb0, 0xa6bb, 0xf432, 0x7918, 0x0, 0x0);
        gbc.writeMem(0x1319, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x327, gbc.sp());
        EXPECT(0x131b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 038C
        gbc.setState(0x9dd3, 0x537b, 0x24d0, 0xe78e, 0x21f4, 0xc50d, 0x1, 0x0);
        gbc.writeMem(0x9dd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x537b, gbc.sp());
        EXPECT(0x9dd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd3));
        EXPECT(0x2, gbc.readMem(0x9dd4));
        // CB 02 038D
        gbc.setState(0xd9ff, 0x4a0f, 0xb0e0, 0xd678, 0x74e8, 0x5357, 0x0, 0x1);
        gbc.writeMem(0xd9ff, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4a0f, gbc.sp());
        EXPECT(0xda01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ff));
        EXPECT(0x2, gbc.readMem(0xda00));
        // CB 02 038E
        gbc.setState(0xc8ab, 0x6c9f, 0xeb30, 0x395b, 0x26f2, 0xb012, 0x0, 0x1);
        gbc.writeMem(0xc8ab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6c9f, gbc.sp());
        EXPECT(0xc8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ab));
        EXPECT(0x2, gbc.readMem(0xc8ac));
        // CB 02 038F
        gbc.setState(0x8e38, 0xc36, 0xa540, 0xa2fb, 0xc035, 0xba74, 0x0, 0x0);
        gbc.writeMem(0x8e38, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc36, gbc.sp());
        EXPECT(0x8e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e38));
        EXPECT(0x2, gbc.readMem(0x8e39));
        // CB 02 0390
        gbc.setState(0x2e6c, 0x41b4, 0x410, 0x7afb, 0xa480, 0x348a, 0x0, 0x1);
        gbc.writeMem(0x2e6c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x41b4, gbc.sp());
        EXPECT(0x2e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0391
        gbc.setState(0x16dd, 0x1e40, 0xc3b0, 0xe4ef, 0x8e2e, 0xa7af, 0x0, 0x1);
        gbc.writeMem(0x16dd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0x16df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0392
        gbc.setState(0xe1f9, 0xf523, 0xe790, 0x12ef, 0xa93b, 0xc2b9, 0x1, 0x1);
        gbc.writeMem(0xe1f9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf523, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0x2, gbc.readMem(0xe1fa));
        // CB 02 0393
        gbc.setState(0x3987, 0xe0ef, 0x63c0, 0xed7f, 0xebe1, 0xe7, 0x0, 0x0);
        gbc.writeMem(0x3987, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe0ef, gbc.sp());
        EXPECT(0x3989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0394
        gbc.setState(0x91ec, 0x2084, 0x7230, 0x32e3, 0x648b, 0xcc94, 0x0, 0x1);
        gbc.writeMem(0x91ec, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2084, gbc.sp());
        EXPECT(0x91ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ec));
        EXPECT(0x2, gbc.readMem(0x91ed));
        // CB 02 0395
        gbc.setState(0x778b, 0x59e3, 0x9750, 0xa647, 0x87b0, 0xa402, 0x0, 0x0);
        gbc.writeMem(0x778b, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x59e3, gbc.sp());
        EXPECT(0x778d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 0396
        gbc.setState(0x8129, 0x9542, 0x8650, 0xecbd, 0x8991, 0xc076, 0x1, 0x0);
        gbc.writeMem(0x8129, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0x812b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8129));
        EXPECT(0x2, gbc.readMem(0x812a));
        // CB 02 0397
        gbc.setState(0x88cd, 0x7230, 0x2b80, 0xf999, 0xb2b8, 0x293, 0x0, 0x1);
        gbc.writeMem(0x88cd, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x7230, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cd));
        EXPECT(0x2, gbc.readMem(0x88ce));
        // CB 02 0398
        gbc.setState(0x3051, 0x7d58, 0x8c80, 0x2800, 0x32bb, 0xea8a, 0x1, 0x0);
        gbc.writeMem(0x3051, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7d58, gbc.sp());
        EXPECT(0x3053, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 0399
        gbc.setState(0x7636, 0xf248, 0xf160, 0x3d21, 0xcd34, 0xb3e0, 0x0, 0x1);
        gbc.writeMem(0x7636, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 039B
        gbc.setState(0x47, 0x1f3f, 0x9d0, 0xa9be, 0x6c9, 0x78b6, 0x1, 0x1);
        gbc.writeMem(0x47, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1f3f, gbc.sp());
        EXPECT(0x49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 039C
        gbc.setState(0x7646, 0x8837, 0xd10, 0xfa51, 0x9641, 0x7328, 0x1, 0x1);
        gbc.writeMem(0x7646, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8837, gbc.sp());
        EXPECT(0x7648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 039D
        gbc.setState(0xdbac, 0xa87d, 0x80a0, 0x1ae6, 0xf656, 0x54fb, 0x1, 0x1);
        gbc.writeMem(0xdbac, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa87d, gbc.sp());
        EXPECT(0xdbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbac));
        EXPECT(0x2, gbc.readMem(0xdbad));
        // CB 02 039E
        gbc.setState(0xa6a1, 0xc96b, 0x1b50, 0x5908, 0xd5e1, 0x91aa, 0x1, 0x1);
        gbc.writeMem(0xa6a1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc96b, gbc.sp());
        EXPECT(0xa6a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a1));
        EXPECT(0x2, gbc.readMem(0xa6a2));
        // CB 02 039F
        gbc.setState(0x95d2, 0xcfd0, 0x430, 0x56e7, 0x84bf, 0x54e0, 0x1, 0x1);
        gbc.writeMem(0x95d2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xcfd0, gbc.sp());
        EXPECT(0x95d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d2));
        EXPECT(0x2, gbc.readMem(0x95d3));
        // CB 02 03A0
        gbc.setState(0x3cee, 0xd89d, 0x9b20, 0xe81c, 0x3046, 0xbb16, 0x0, 0x0);
        gbc.writeMem(0x3cee, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd89d, gbc.sp());
        EXPECT(0x3cf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03A2
        gbc.setState(0x9fe3, 0xf8f6, 0xd0d0, 0xbe49, 0x2f8e, 0x430a, 0x1, 0x1);
        gbc.writeMem(0x9fe3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf8f6, gbc.sp());
        EXPECT(0x9fe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fe3));
        EXPECT(0x2, gbc.readMem(0x9fe4));
        // CB 02 03A3
        gbc.setState(0x72a0, 0x403a, 0x2400, 0xc7ed, 0x1883, 0x2d34, 0x0, 0x1);
        gbc.writeMem(0x72a0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0x72a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03A4
        gbc.setState(0x63b2, 0x4d9f, 0xd590, 0x8727, 0xfcee, 0x2b02, 0x0, 0x1);
        gbc.writeMem(0x63b2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0x63b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03A5
        gbc.setState(0x18ab, 0xb7d0, 0x55c0, 0xdc32, 0x3c2, 0x5f24, 0x1, 0x1);
        gbc.writeMem(0x18ab, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0x18ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03A6
        gbc.setState(0x31fb, 0x1f7a, 0x63d0, 0xfda4, 0x9977, 0x223b, 0x1, 0x0);
        gbc.writeMem(0x31fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1f7a, gbc.sp());
        EXPECT(0x31fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03A7
        gbc.setState(0x581d, 0xfd5, 0x36f0, 0x2482, 0xf7a9, 0xadf1, 0x0, 0x1);
        gbc.writeMem(0x581d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfd5, gbc.sp());
        EXPECT(0x581f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03A8
        gbc.setState(0x4bf7, 0x7a3d, 0xf5d0, 0xc258, 0xe620, 0xf36d, 0x0, 0x1);
        gbc.writeMem(0x4bf7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7a3d, gbc.sp());
        EXPECT(0x4bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03A9
        gbc.setState(0x9980, 0xf806, 0x6bc0, 0xd30f, 0x2e04, 0x2a95, 0x0, 0x1);
        gbc.writeMem(0x9980, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf806, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9980));
        EXPECT(0x2, gbc.readMem(0x9981));
        // CB 02 03AA
        gbc.setState(0x4958, 0x8b2c, 0x2ec0, 0x427e, 0xbfe2, 0x7aae, 0x1, 0x1);
        gbc.writeMem(0x4958, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8b2c, gbc.sp());
        EXPECT(0x495a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03AB
        gbc.setState(0xc444, 0x9820, 0x6010, 0x210c, 0x4740, 0xffc4, 0x0, 0x0);
        gbc.writeMem(0xc444, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9820, gbc.sp());
        EXPECT(0xc446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc444));
        EXPECT(0x2, gbc.readMem(0xc445));
        // CB 02 03AC
        gbc.setState(0x4d64, 0x4689, 0x5160, 0x31a4, 0xd60a, 0x7567, 0x1, 0x1);
        gbc.writeMem(0x4d64, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4689, gbc.sp());
        EXPECT(0x4d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03AD
        gbc.setState(0xd1b3, 0xdaf3, 0xfaf0, 0xba5d, 0x8a0e, 0x76e0, 0x1, 0x1);
        gbc.writeMem(0xd1b3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xdaf3, gbc.sp());
        EXPECT(0xd1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b3));
        EXPECT(0x2, gbc.readMem(0xd1b4));
        // CB 02 03AE
        gbc.setState(0x6181, 0xc01d, 0xa4b0, 0x3fe9, 0x83fb, 0x4aaf, 0x0, 0x0);
        gbc.writeMem(0x6181, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc01d, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03AF
        gbc.setState(0x5c22, 0x35be, 0x1d50, 0x25cf, 0xcd71, 0x7c84, 0x1, 0x0);
        gbc.writeMem(0x5c22, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x35be, gbc.sp());
        EXPECT(0x5c24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03B0
        gbc.setState(0x8464, 0xa9e, 0xd970, 0xddb7, 0x8958, 0x29f, 0x1, 0x0);
        gbc.writeMem(0x8464, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa9e, gbc.sp());
        EXPECT(0x8466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8464));
        EXPECT(0x2, gbc.readMem(0x8465));
        // CB 02 03B1
        gbc.setState(0xddf1, 0xfa6c, 0x5880, 0xd1ac, 0xa8de, 0x64d3, 0x1, 0x1);
        gbc.writeMem(0xddf1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfa6c, gbc.sp());
        EXPECT(0xddf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddf1));
        EXPECT(0x2, gbc.readMem(0xddf2));
        // CB 02 03B2
        gbc.setState(0xc81d, 0x1d52, 0xce0, 0x66d9, 0x8d97, 0x3314, 0x1, 0x0);
        gbc.writeMem(0xc81d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1d52, gbc.sp());
        EXPECT(0xc81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc81d));
        EXPECT(0x2, gbc.readMem(0xc81e));
        // CB 02 03B4
        gbc.setState(0xcca1, 0x4a5e, 0x3ed0, 0x4d0, 0x43d, 0xeb72, 0x0, 0x1);
        gbc.writeMem(0xcca1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcca1));
        EXPECT(0x2, gbc.readMem(0xcca2));
        // CB 02 03B5
        gbc.setState(0x3a73, 0x2e57, 0x64c0, 0x1c0f, 0x4684, 0x7558, 0x0, 0x1);
        gbc.writeMem(0x3a73, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2e57, gbc.sp());
        EXPECT(0x3a75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03B6
        gbc.setState(0x6e8f, 0x25c2, 0x3a90, 0x94df, 0x9909, 0xf30a, 0x1, 0x0);
        gbc.writeMem(0x6e8f, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x25c2, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03B7
        gbc.setState(0xd3f1, 0xb02c, 0xabb0, 0x20cb, 0x8eaf, 0xe617, 0x0, 0x1);
        gbc.writeMem(0xd3f1, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb02c, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3f1));
        EXPECT(0x2, gbc.readMem(0xd3f2));
        // CB 02 03B8
        gbc.setState(0xd782, 0xa208, 0xf190, 0x96b3, 0xdb21, 0xc9cb, 0x1, 0x0);
        gbc.writeMem(0xd782, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa208, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd782));
        EXPECT(0x2, gbc.readMem(0xd783));
        // CB 02 03B9
        gbc.setState(0x7f26, 0x684a, 0xb70, 0xb5c7, 0xd7fd, 0xa78, 0x0, 0x0);
        gbc.writeMem(0x7f26, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x684a, gbc.sp());
        EXPECT(0x7f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03BB
        gbc.setState(0x4024, 0x857b, 0xec40, 0xe8a5, 0xc889, 0x72e2, 0x0, 0x0);
        gbc.writeMem(0x4024, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x857b, gbc.sp());
        EXPECT(0x4026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03BC
        gbc.setState(0x9013, 0x19c9, 0x4ff0, 0xc502, 0xcec9, 0x899a, 0x0, 0x1);
        gbc.writeMem(0x9013, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x19c9, gbc.sp());
        EXPECT(0x9015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9013));
        EXPECT(0x2, gbc.readMem(0x9014));
        // CB 02 03BD
        gbc.setState(0x652a, 0x76b4, 0xd610, 0xaffa, 0x45a, 0x3114, 0x1, 0x1);
        gbc.writeMem(0x652a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x76b4, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03BE
        gbc.setState(0x2c48, 0xba68, 0x4570, 0x8c81, 0x914f, 0x43df, 0x1, 0x1);
        gbc.writeMem(0x2c48, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xba68, gbc.sp());
        EXPECT(0x2c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03BF
        gbc.setState(0xbb5d, 0xb81a, 0x1530, 0x52a6, 0xf469, 0xc302, 0x0, 0x0);
        gbc.writeMem(0xbb5d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0xbb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb5d));
        EXPECT(0x2, gbc.readMem(0xbb5e));
        // CB 02 03C0
        gbc.setState(0x5ca3, 0x61ec, 0xf210, 0x4005, 0xb8af, 0x3f22, 0x1, 0x1);
        gbc.writeMem(0x5ca3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x61ec, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03C1
        gbc.setState(0x12f7, 0xe9ee, 0x1de0, 0x34bf, 0x297f, 0x7833, 0x0, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe9ee, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03C2
        gbc.setState(0xe19a, 0x46aa, 0x8ed0, 0x9fc3, 0x7773, 0xc721, 0x0, 0x0);
        gbc.writeMem(0xe19a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x46aa, gbc.sp());
        EXPECT(0xe19c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19a));
        EXPECT(0x2, gbc.readMem(0xe19b));
        // CB 02 03C3
        gbc.setState(0x9284, 0x8c2, 0x8810, 0x5ba9, 0xe474, 0xf979, 0x0, 0x0);
        gbc.writeMem(0x9284, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8c2, gbc.sp());
        EXPECT(0x9286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9284));
        EXPECT(0x2, gbc.readMem(0x9285));
        // CB 02 03C6
        gbc.setState(0xae21, 0xd53d, 0xae70, 0x7f77, 0xbc10, 0xdd23, 0x0, 0x1);
        gbc.writeMem(0xae21, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd53d, gbc.sp());
        EXPECT(0xae23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae21));
        EXPECT(0x2, gbc.readMem(0xae22));
        // CB 02 03C7
        gbc.setState(0xbd98, 0xe51a, 0x6c00, 0x4c11, 0xdf00, 0xb742, 0x0, 0x1);
        gbc.writeMem(0xbd98, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe51a, gbc.sp());
        EXPECT(0xbd9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd98));
        EXPECT(0x2, gbc.readMem(0xbd99));
        // CB 02 03C8
        gbc.setState(0xd24c, 0xfb75, 0x30b0, 0xcccc, 0xb3e8, 0xb414, 0x1, 0x0);
        gbc.writeMem(0xd24c, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0xd24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24c));
        EXPECT(0x2, gbc.readMem(0xd24d));
        // CB 02 03C9
        gbc.setState(0x6a78, 0x3718, 0x2430, 0x7b8c, 0xbda7, 0x8bc7, 0x1, 0x1);
        gbc.writeMem(0x6a78, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3718, gbc.sp());
        EXPECT(0x6a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03CA
        gbc.setState(0xcf52, 0x7cb8, 0xf370, 0x85db, 0xa758, 0xfc19, 0x0, 0x1);
        gbc.writeMem(0xcf52, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0xcf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf52));
        EXPECT(0x2, gbc.readMem(0xcf53));
        // CB 02 03CB
        gbc.setState(0x2c71, 0xe5bc, 0x2f90, 0x4bca, 0x5ecd, 0x6bb7, 0x1, 0x0);
        gbc.writeMem(0x2c71, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe5bc, gbc.sp());
        EXPECT(0x2c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03CC
        gbc.setState(0xcdd3, 0xb024, 0x7510, 0xafa7, 0xd251, 0xeb6b, 0x1, 0x1);
        gbc.writeMem(0xcdd3, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb024, gbc.sp());
        EXPECT(0xcdd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd3));
        EXPECT(0x2, gbc.readMem(0xcdd4));
        // CB 02 03CD
        gbc.setState(0xe480, 0x57f0, 0xb9f0, 0xc15, 0xb5f2, 0xb96d, 0x0, 0x0);
        gbc.writeMem(0xe480, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x57f0, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe480));
        EXPECT(0x2, gbc.readMem(0xe481));
        // CB 02 03CE
        gbc.setState(0x9084, 0xae57, 0x3530, 0x4ad7, 0x1ffe, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xae57, gbc.sp());
        EXPECT(0x9086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9084));
        EXPECT(0x2, gbc.readMem(0x9085));
        // CB 02 03CF
        gbc.setState(0x1516, 0x5ad0, 0xb400, 0x140d, 0x7c3a, 0x489f, 0x1, 0x1);
        gbc.writeMem(0x1516, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5ad0, gbc.sp());
        EXPECT(0x1518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03D0
        gbc.setState(0xe76d, 0x3da3, 0xe700, 0xdb4c, 0xe9ea, 0xb284, 0x0, 0x1);
        gbc.writeMem(0xe76d, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3da3, gbc.sp());
        EXPECT(0xe76f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76d));
        EXPECT(0x2, gbc.readMem(0xe76e));
        // CB 02 03D1
        gbc.setState(0xc3cc, 0x4e80, 0xf2d0, 0x476a, 0x1fae, 0x27bc, 0x0, 0x1);
        gbc.writeMem(0xc3cc, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3cc));
        EXPECT(0x2, gbc.readMem(0xc3cd));
        // CB 02 03D2
        gbc.setState(0x3913, 0x72a0, 0xa90, 0x8753, 0x8e0e, 0x3c1f, 0x0, 0x0);
        gbc.writeMem(0x3913, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x72a0, gbc.sp());
        EXPECT(0x3915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03D3
        gbc.setState(0x674, 0xf62a, 0xd140, 0x5123, 0xb0f9, 0x690e, 0x1, 0x0);
        gbc.writeMem(0x674, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf62a, gbc.sp());
        EXPECT(0x676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03D4
        gbc.setState(0x3710, 0xe3ac, 0x7f70, 0x4f6b, 0x93f8, 0x141b, 0x0, 0x0);
        gbc.writeMem(0x3710, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe3ac, gbc.sp());
        EXPECT(0x3712, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03D5
        gbc.setState(0x81d8, 0x7bed, 0x8b10, 0xa158, 0x210e, 0x6f82, 0x0, 0x0);
        gbc.writeMem(0x81d8, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7bed, gbc.sp());
        EXPECT(0x81da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d8));
        EXPECT(0x2, gbc.readMem(0x81d9));
        // CB 02 03D6
        gbc.setState(0xd48a, 0xf132, 0x6320, 0xda57, 0xc635, 0x15db, 0x1, 0x0);
        gbc.writeMem(0xd48a, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf132, gbc.sp());
        EXPECT(0xd48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd48a));
        EXPECT(0x2, gbc.readMem(0xd48b));
        // CB 02 03D7
        gbc.setState(0x7d74, 0x60a3, 0x6110, 0xe09d, 0x53b3, 0x81c3, 0x0, 0x0);
        gbc.writeMem(0x7d74, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x60a3, gbc.sp());
        EXPECT(0x7d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03D9
        gbc.setState(0x3fc2, 0x4b84, 0x8ea0, 0x4f18, 0x7d69, 0x51cf, 0x1, 0x0);
        gbc.writeMem(0x3fc2, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4b84, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03DA
        gbc.setState(0xdab9, 0x147e, 0x9380, 0xcc2e, 0xf4be, 0xa2e8, 0x0, 0x0);
        gbc.writeMem(0xdab9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x147e, gbc.sp());
        EXPECT(0xdabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab9));
        EXPECT(0x2, gbc.readMem(0xdaba));
        // CB 02 03DB
        gbc.setState(0x4699, 0x6058, 0xc220, 0x8ced, 0xf15c, 0x675c, 0x1, 0x0);
        gbc.writeMem(0x4699, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6058, gbc.sp());
        EXPECT(0x469b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03DC
        gbc.setState(0xd2b0, 0x4d00, 0x40c0, 0x87a8, 0x3535, 0x890e, 0x1, 0x1);
        gbc.writeMem(0xd2b0, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4d00, gbc.sp());
        EXPECT(0xd2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b0));
        EXPECT(0x2, gbc.readMem(0xd2b1));
        // CB 02 03DD
        gbc.setState(0x3703, 0x6f6a, 0xc0e0, 0x562f, 0x2b6e, 0x2505, 0x0, 0x0);
        gbc.writeMem(0x3703, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6f6a, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03DE
        gbc.setState(0x8842, 0x2fdc, 0xa6e0, 0xb1ff, 0xe829, 0x97a9, 0x1, 0x0);
        gbc.writeMem(0x8842, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0x8844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8842));
        EXPECT(0x2, gbc.readMem(0x8843));
        // CB 02 03DF
        gbc.setState(0x3b81, 0xcf68, 0x9640, 0xebb9, 0x5a97, 0xd3c1, 0x1, 0x0);
        gbc.writeMem(0x3b81, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0x3b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03E0
        gbc.setState(0x74fb, 0x23da, 0xbda0, 0xcde5, 0x618f, 0x5959, 0x0, 0x1);
        gbc.writeMem(0x74fb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x23da, gbc.sp());
        EXPECT(0x74fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 02 03E1
        gbc.setState(0x2655, 0x5e83, 0x2800, 0x5e6a, 0xa529, 0xf54e, 0x1, 0x1);
        gbc.writeMem(0x2655, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5e83, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03E2
        gbc.setState(0x2210, 0x2046, 0xc5d0, 0x2f12, 0xd88b, 0xe8ba, 0x0, 0x1);
        gbc.writeMem(0x2210, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2046, gbc.sp());
        EXPECT(0x2212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03E3
        gbc.setState(0xbfeb, 0x64e6, 0x5a20, 0x6783, 0x16ae, 0xbfe0, 0x1, 0x0);
        gbc.writeMem(0xbfeb, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x64e6, gbc.sp());
        EXPECT(0xbfed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfeb));
        EXPECT(0x2, gbc.readMem(0xbfec));
        // CB 02 03E4
        gbc.setState(0x33e9, 0xe863, 0x2410, 0x8c29, 0xcb6f, 0xa249, 0x0, 0x1);
        gbc.writeMem(0x33e9, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe863, gbc.sp());
        EXPECT(0x33eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03E5
        gbc.setState(0xd2c6, 0xc817, 0xc430, 0x51df, 0xf4f0, 0xef5b, 0x1, 0x0);
        gbc.writeMem(0xd2c6, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc817, gbc.sp());
        EXPECT(0xd2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c6));
        EXPECT(0x2, gbc.readMem(0xd2c7));
        // CB 02 03E6
        gbc.setState(0x3650, 0x4087, 0xe6d0, 0x15fb, 0xbc85, 0xefff, 0x1, 0x1);
        gbc.writeMem(0x3650, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4087, gbc.sp());
        EXPECT(0x3652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 02 03E7
        gbc.setState(0x362, 0xca39, 0x4bc0, 0xc07b, 0x84d6, 0x8b36, 0x0, 0x1);
        gbc.writeMem(0x362, { 0xcb, 0x2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xca39, gbc.sp());
        EXPECT(0x364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
