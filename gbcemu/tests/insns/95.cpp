#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_95)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_95) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 95 0000
        gbc.setState(0xa197, 0xf92f, 0x89a0, 0x5fbf, 0xcd54, 0x5a14, 0x1, 0x0);
        gbc.writeMem(0xa197, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf92f);
        EXPECT(gbc.pc(), 0xa198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa197), 0x95);
        // 95 0001
        gbc.setState(0x7dce, 0x4aed, 0x9ce0, 0x91f0, 0xc92b, 0x2314, 0x1, 0x1);
        gbc.writeMem(0x7dce, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4aed);
        EXPECT(gbc.pc(), 0x7dcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0002
        gbc.setState(0x89ba, 0xc418, 0x9dc0, 0x7452, 0x1f88, 0x3698, 0x0, 0x1);
        gbc.writeMem(0x89ba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc418);
        EXPECT(gbc.pc(), 0x89bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89ba), 0x95);
        // 95 0003
        gbc.setState(0xc7bb, 0x4988, 0xfe40, 0x41a8, 0x335b, 0x4f80, 0x0, 0x0);
        gbc.writeMem(0xc7bb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4988);
        EXPECT(gbc.pc(), 0xc7bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7bb), 0x95);
        // 95 0004
        gbc.setState(0xec66, 0xde3e, 0xa730, 0x4f15, 0xdb50, 0x2818, 0x1, 0x1);
        gbc.writeMem(0xec66, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xde3e);
        EXPECT(gbc.pc(), 0xec67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec66), 0x95);
        // 95 0005
        gbc.setState(0xb5dc, 0x7a94, 0x3910, 0xc25e, 0xa870, 0x7973, 0x1, 0x0);
        gbc.writeMem(0xb5dc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x7a94);
        EXPECT(gbc.pc(), 0xb5dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5dc), 0x95);
        // 95 0006
        gbc.setState(0x7d79, 0x3cb0, 0x3ee0, 0xf588, 0x651, 0xb235, 0x0, 0x0);
        gbc.writeMem(0x7d79, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3cb0);
        EXPECT(gbc.pc(), 0x7d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0007
        gbc.setState(0xeb10, 0x2188, 0x2290, 0xc96b, 0x1e62, 0x3bd6, 0x1, 0x1);
        gbc.writeMem(0xeb10, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x2188);
        EXPECT(gbc.pc(), 0xeb11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb10), 0x95);
        // 95 0008
        gbc.setState(0xd876, 0x9c13, 0x7c50, 0x64a1, 0x859d, 0x48a6, 0x0, 0x0);
        gbc.writeMem(0xd876, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x9c13);
        EXPECT(gbc.pc(), 0xd877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd876), 0x95);
        // 95 0009
        gbc.setState(0xc539, 0x20, 0xfac0, 0x6485, 0xdeb5, 0xf6a8, 0x0, 0x0);
        gbc.writeMem(0xc539, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x20);
        EXPECT(gbc.pc(), 0xc53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc539), 0x95);
        // 95 000A
        gbc.setState(0x688f, 0xd6ee, 0x1460, 0x547e, 0x53ce, 0x7d60, 0x1, 0x1);
        gbc.writeMem(0x688f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xd6ee);
        EXPECT(gbc.pc(), 0x6890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 000B
        gbc.setState(0xb358, 0xe0e2, 0x5080, 0x9bd4, 0x286, 0x558e, 0x0, 0x1);
        gbc.writeMem(0xb358, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe0e2);
        EXPECT(gbc.pc(), 0xb359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb358), 0x95);
        // 95 000C
        gbc.setState(0xb489, 0x830f, 0xd90, 0x2735, 0x8b6e, 0xa284, 0x0, 0x0);
        gbc.writeMem(0xb489, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x830f);
        EXPECT(gbc.pc(), 0xb48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb489), 0x95);
        // 95 000D
        gbc.setState(0xd8c1, 0xb119, 0x2eb0, 0x509d, 0x8fc8, 0x9b2b, 0x0, 0x0);
        gbc.writeMem(0xd8c1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb119);
        EXPECT(gbc.pc(), 0xd8c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c1), 0x95);
        // 95 000E
        gbc.setState(0x4e15, 0x6ec8, 0xb0e0, 0xfca1, 0xcfc6, 0xc65c, 0x1, 0x0);
        gbc.writeMem(0x4e15, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6ec8);
        EXPECT(gbc.pc(), 0x4e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 000F
        gbc.setState(0xad8e, 0xb30c, 0xe8a0, 0x8776, 0xbced, 0x9b00, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb30c);
        EXPECT(gbc.pc(), 0xad8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8e), 0x95);
        // 95 0010
        gbc.setState(0xc1d3, 0x7028, 0x1b10, 0x226e, 0xb421, 0x93db, 0x1, 0x1);
        gbc.writeMem(0xc1d3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7028);
        EXPECT(gbc.pc(), 0xc1d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d3), 0x95);
        // 95 0011
        gbc.setState(0x7426, 0xd4e8, 0x7be0, 0xd4a5, 0xf9d7, 0x2342, 0x1, 0x1);
        gbc.writeMem(0x7426, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd4e8);
        EXPECT(gbc.pc(), 0x7427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0013
        gbc.setState(0xd5b9, 0x4057, 0x9c0, 0x9a13, 0xc0ce, 0x2611, 0x1, 0x1);
        gbc.writeMem(0xd5b9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4057);
        EXPECT(gbc.pc(), 0xd5ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b9), 0x95);
        // 95 0014
        gbc.setState(0x565d, 0x34bc, 0xcd20, 0x7ad9, 0x672e, 0xf6af, 0x0, 0x1);
        gbc.writeMem(0x565d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x34bc);
        EXPECT(gbc.pc(), 0x565e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0015
        gbc.setState(0x7428, 0x4810, 0x2430, 0x9e5b, 0x95d6, 0xd206, 0x0, 0x1);
        gbc.writeMem(0x7428, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4810);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0016
        gbc.setState(0xdc45, 0xbb63, 0x9160, 0x23e0, 0x6fb5, 0xdfa0, 0x0, 0x1);
        gbc.writeMem(0xdc45, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbb63);
        EXPECT(gbc.pc(), 0xdc46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc45), 0x95);
        // 95 0017
        gbc.setState(0x522d, 0xde43, 0x7030, 0xe055, 0x6eae, 0xd753, 0x0, 0x0);
        gbc.writeMem(0x522d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xde43);
        EXPECT(gbc.pc(), 0x522e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0018
        gbc.setState(0xece, 0x7ef5, 0x64d0, 0xb0bf, 0x72e2, 0xc029, 0x0, 0x1);
        gbc.writeMem(0xece, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7ef5);
        EXPECT(gbc.pc(), 0xecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0019
        gbc.setState(0xc97a, 0xaf5b, 0xae00, 0x21a7, 0xf9ee, 0x1bb1, 0x1, 0x1);
        gbc.writeMem(0xc97a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaf5b);
        EXPECT(gbc.pc(), 0xc97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97a), 0x95);
        // 95 001A
        gbc.setState(0x72e6, 0x68ad, 0x9b20, 0x9ff0, 0x8656, 0xae0b, 0x0, 0x0);
        gbc.writeMem(0x72e6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x68ad);
        EXPECT(gbc.pc(), 0x72e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 001B
        gbc.setState(0xbc4f, 0xbee7, 0xbac0, 0x355d, 0x6eea, 0xf76b, 0x1, 0x0);
        gbc.writeMem(0xbc4f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0xbc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4f), 0x95);
        // 95 001C
        gbc.setState(0x39a1, 0xa2da, 0xabf0, 0xcd2a, 0xe248, 0x9b0e, 0x0, 0x0);
        gbc.writeMem(0x39a1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa2da);
        EXPECT(gbc.pc(), 0x39a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 001D
        gbc.setState(0x8386, 0xdae3, 0x2d90, 0x3bc0, 0x164c, 0x769c, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xdae3);
        EXPECT(gbc.pc(), 0x8387);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8386), 0x95);
        // 95 0020
        gbc.setState(0x9b76, 0x5e6, 0x61d0, 0x5c93, 0xa1f3, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0x9b76, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5e6);
        EXPECT(gbc.pc(), 0x9b77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b76), 0x95);
        // 95 0021
        gbc.setState(0xc96c, 0x45f1, 0x2e60, 0x3257, 0x9184, 0xfae7, 0x1, 0x1);
        gbc.writeMem(0xc96c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x45f1);
        EXPECT(gbc.pc(), 0xc96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96c), 0x95);
        // 95 0022
        gbc.setState(0xe40c, 0x50cf, 0x1950, 0xdb6, 0xd12, 0x7b2a, 0x1, 0x0);
        gbc.writeMem(0xe40c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x50cf);
        EXPECT(gbc.pc(), 0xe40d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe40c), 0x95);
        // 95 0023
        gbc.setState(0x9a4a, 0x6af3, 0x6dc0, 0x4df9, 0xdcb4, 0xb1b1, 0x0, 0x0);
        gbc.writeMem(0x9a4a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x6af3);
        EXPECT(gbc.pc(), 0x9a4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a4a), 0x95);
        // 95 0024
        gbc.setState(0x68cc, 0x15a4, 0x15f0, 0x7e24, 0x1f8e, 0xcebc, 0x0, 0x0);
        gbc.writeMem(0x68cc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x15a4);
        EXPECT(gbc.pc(), 0x68cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0025
        gbc.setState(0x63c6, 0xe1fb, 0x46d0, 0x8c6, 0xadf3, 0x6d75, 0x1, 0x1);
        gbc.writeMem(0x63c6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe1fb);
        EXPECT(gbc.pc(), 0x63c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0026
        gbc.setState(0x87ae, 0x6d2c, 0xf2d0, 0x65a3, 0x2d7d, 0x4ea0, 0x0, 0x0);
        gbc.writeMem(0x87ae, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6d2c);
        EXPECT(gbc.pc(), 0x87af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87ae), 0x95);
        // 95 0027
        gbc.setState(0xc47f, 0x6586, 0x6ee0, 0x97dc, 0x50cd, 0x37e1, 0x0, 0x1);
        gbc.writeMem(0xc47f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6586);
        EXPECT(gbc.pc(), 0xc480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc47f), 0x95);
        // 95 0028
        gbc.setState(0xedd4, 0x3a60, 0xb30, 0x6132, 0x86b9, 0x5648, 0x1, 0x1);
        gbc.writeMem(0xedd4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x3a60);
        EXPECT(gbc.pc(), 0xedd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd4), 0x95);
        // 95 0029
        gbc.setState(0x7672, 0x60a9, 0x64f0, 0x88d3, 0xcf91, 0x9561, 0x1, 0x1);
        gbc.writeMem(0x7672, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x60a9);
        EXPECT(gbc.pc(), 0x7673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 002A
        gbc.setState(0xc6b7, 0xde4e, 0x4230, 0x60ca, 0xe4c1, 0x87c0, 0x1, 0x1);
        gbc.writeMem(0xc6b7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xde4e);
        EXPECT(gbc.pc(), 0xc6b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6b7), 0x95);
        // 95 002B
        gbc.setState(0x15be, 0xe310, 0x3970, 0xc105, 0x4c51, 0xe9fe, 0x0, 0x1);
        gbc.writeMem(0x15be, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe310);
        EXPECT(gbc.pc(), 0x15bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 002C
        gbc.setState(0x5399, 0x79ef, 0xc980, 0x783, 0x310d, 0xb906, 0x1, 0x0);
        gbc.writeMem(0x5399, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x79ef);
        EXPECT(gbc.pc(), 0x539a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 002D
        gbc.setState(0x13c3, 0xdf95, 0x1960, 0x1c22, 0x75ad, 0x8fc0, 0x1, 0x0);
        gbc.writeMem(0x13c3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdf95);
        EXPECT(gbc.pc(), 0x13c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 002E
        gbc.setState(0x50a6, 0x7f, 0x45e0, 0xdf11, 0xef1c, 0x8c7b, 0x0, 0x0);
        gbc.writeMem(0x50a6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7f);
        EXPECT(gbc.pc(), 0x50a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 002F
        gbc.setState(0xb1b7, 0x2b47, 0xf690, 0x8d9, 0x7224, 0x17d5, 0x1, 0x0);
        gbc.writeMem(0xb1b7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2b47);
        EXPECT(gbc.pc(), 0xb1b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b7), 0x95);
        // 95 0030
        gbc.setState(0xdeed, 0xaf40, 0x3490, 0xded7, 0xb030, 0xed88, 0x0, 0x1);
        gbc.writeMem(0xdeed, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xaf40);
        EXPECT(gbc.pc(), 0xdeee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeed), 0x95);
        // 95 0031
        gbc.setState(0x29b1, 0x764e, 0xb800, 0xb6db, 0x5770, 0x44c9, 0x1, 0x0);
        gbc.writeMem(0x29b1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x764e);
        EXPECT(gbc.pc(), 0x29b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0032
        gbc.setState(0x2890, 0x4cc2, 0xdfc0, 0x7165, 0x557f, 0xcc80, 0x1, 0x0);
        gbc.writeMem(0x2890, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4cc2);
        EXPECT(gbc.pc(), 0x2891);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0033
        gbc.setState(0x6c16, 0xfe2c, 0x7e30, 0xe24a, 0x66cd, 0x7f8a, 0x1, 0x0);
        gbc.writeMem(0x6c16, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfe2c);
        EXPECT(gbc.pc(), 0x6c17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0034
        gbc.setState(0x1320, 0xd762, 0x6320, 0x61af, 0x8647, 0x89d1, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd762);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0035
        gbc.setState(0x4023, 0xeeeb, 0x32a0, 0xc1cf, 0xac7f, 0x8405, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xeeeb);
        EXPECT(gbc.pc(), 0x4024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0036
        gbc.setState(0x9706, 0xf761, 0x1ae0, 0xe937, 0x4a01, 0xa668, 0x1, 0x0);
        gbc.writeMem(0x9706, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf761);
        EXPECT(gbc.pc(), 0x9707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9706), 0x95);
        // 95 0038
        gbc.setState(0x4d40, 0x6faf, 0x6a30, 0x6641, 0x58d9, 0xef7f, 0x0, 0x0);
        gbc.writeMem(0x4d40, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6faf);
        EXPECT(gbc.pc(), 0x4d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0039
        gbc.setState(0xecd7, 0x3b3, 0x3710, 0x7fdf, 0x612e, 0xb651, 0x1, 0x0);
        gbc.writeMem(0xecd7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3b3);
        EXPECT(gbc.pc(), 0xecd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd7), 0x95);
        // 95 003A
        gbc.setState(0x6d84, 0xdd11, 0x1960, 0x4160, 0x6ac4, 0x997e, 0x1, 0x0);
        gbc.writeMem(0x6d84, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xdd11);
        EXPECT(gbc.pc(), 0x6d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 003B
        gbc.setState(0xc54e, 0x5c67, 0xf350, 0xac7f, 0x73b1, 0x5167, 0x1, 0x0);
        gbc.writeMem(0xc54e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x5c67);
        EXPECT(gbc.pc(), 0xc54f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54e), 0x95);
        // 95 003C
        gbc.setState(0x761f, 0x1a2c, 0xaeb0, 0x49e0, 0xf113, 0x836f, 0x1, 0x0);
        gbc.writeMem(0x761f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1a2c);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 003E
        gbc.setState(0x887d, 0xba50, 0x6050, 0x8d68, 0xbdd5, 0x3fe, 0x1, 0x0);
        gbc.writeMem(0x887d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xba50);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x887d), 0x95);
        // 95 003F
        gbc.setState(0x48, 0x533, 0xb0a0, 0x531a, 0xddf8, 0x3940, 0x0, 0x0);
        gbc.writeMem(0x48, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x533);
        EXPECT(gbc.pc(), 0x49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0040
        gbc.setState(0x60ba, 0x6d19, 0xe190, 0x2bdf, 0xd7d1, 0xe630, 0x1, 0x0);
        gbc.writeMem(0x60ba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6d19);
        EXPECT(gbc.pc(), 0x60bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0041
        gbc.setState(0x9980, 0x9bf2, 0xd3b0, 0xfaa2, 0xa6db, 0xeedc, 0x0, 0x0);
        gbc.writeMem(0x9980, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9bf2);
        EXPECT(gbc.pc(), 0x9981);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9980), 0x95);
        // 95 0042
        gbc.setState(0x6dd3, 0xa5fb, 0xb2d0, 0xd2c7, 0x9506, 0xffb3, 0x1, 0x0);
        gbc.writeMem(0x6dd3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa5fb);
        EXPECT(gbc.pc(), 0x6dd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0043
        gbc.setState(0x29a9, 0xfbe3, 0x3ce0, 0xfdc3, 0xf356, 0x9ea3, 0x1, 0x1);
        gbc.writeMem(0x29a9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfbe3);
        EXPECT(gbc.pc(), 0x29aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0044
        gbc.setState(0xc68f, 0x6e5f, 0x22b0, 0xdb58, 0x558e, 0xabf2, 0x0, 0x0);
        gbc.writeMem(0xc68f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6e5f);
        EXPECT(gbc.pc(), 0xc690);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc68f), 0x95);
        // 95 0045
        gbc.setState(0x5d38, 0xf25f, 0x1030, 0xf62a, 0xfe16, 0xc90c, 0x0, 0x1);
        gbc.writeMem(0x5d38, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf25f);
        EXPECT(gbc.pc(), 0x5d39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0046
        gbc.setState(0x5b2, 0x7a6f, 0xbb20, 0x6f68, 0x47d2, 0x7017, 0x1, 0x0);
        gbc.writeMem(0x5b2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a6f);
        EXPECT(gbc.pc(), 0x5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0047
        gbc.setState(0x5208, 0x684e, 0x7ab0, 0x1c0, 0xf68b, 0x225c, 0x1, 0x1);
        gbc.writeMem(0x5208, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x684e);
        EXPECT(gbc.pc(), 0x5209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0048
        gbc.setState(0x5582, 0x3676, 0x24c0, 0xd5a2, 0x2d19, 0x16d0, 0x1, 0x1);
        gbc.writeMem(0x5582, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3676);
        EXPECT(gbc.pc(), 0x5583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0049
        gbc.setState(0xbbb2, 0xcc4, 0xc4f0, 0xb12a, 0x2b1b, 0x6681, 0x1, 0x1);
        gbc.writeMem(0xbbb2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xcc4);
        EXPECT(gbc.pc(), 0xbbb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb2), 0x95);
        // 95 004A
        gbc.setState(0xc0e1, 0x6b7d, 0xe830, 0xbbfd, 0x71df, 0x784, 0x1, 0x1);
        gbc.writeMem(0xc0e1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6b7d);
        EXPECT(gbc.pc(), 0xc0e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e1), 0x95);
        // 95 004B
        gbc.setState(0xc33e, 0xc760, 0x4410, 0x2f54, 0x678c, 0x3f01, 0x0, 0x1);
        gbc.writeMem(0xc33e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc760);
        EXPECT(gbc.pc(), 0xc33f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33e), 0x95);
        // 95 004C
        gbc.setState(0x3e27, 0xbb90, 0xf220, 0xb282, 0x3804, 0x26be, 0x1, 0x1);
        gbc.writeMem(0x3e27, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbb90);
        EXPECT(gbc.pc(), 0x3e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 004D
        gbc.setState(0xaf5c, 0x8bdb, 0x3d10, 0x20a1, 0x54c1, 0xaed9, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x8bdb);
        EXPECT(gbc.pc(), 0xaf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5c), 0x95);
        // 95 004E
        gbc.setState(0xeadd, 0xb756, 0x17b0, 0x2429, 0x829f, 0x9176, 0x1, 0x0);
        gbc.writeMem(0xeadd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xb756);
        EXPECT(gbc.pc(), 0xeade);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeadd), 0x95);
        // 95 004F
        gbc.setState(0x1628, 0x1472, 0x7e80, 0xde06, 0x31b3, 0x391e, 0x1, 0x1);
        gbc.writeMem(0x1628, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x1472);
        EXPECT(gbc.pc(), 0x1629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0050
        gbc.setState(0x3d3e, 0x9aa5, 0x12c0, 0xe30c, 0xaaa5, 0x429a, 0x1, 0x0);
        gbc.writeMem(0x3d3e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9aa5);
        EXPECT(gbc.pc(), 0x3d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0052
        gbc.setState(0x8e9f, 0xba55, 0xefd0, 0x54db, 0x8f03, 0xe793, 0x0, 0x0);
        gbc.writeMem(0x8e9f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xba55);
        EXPECT(gbc.pc(), 0x8ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9f), 0x95);
        // 95 0053
        gbc.setState(0xa19f, 0xbc3c, 0x22b0, 0x65a9, 0x992, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0xa19f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xbc3c);
        EXPECT(gbc.pc(), 0xa1a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa19f), 0x95);
        // 95 0054
        gbc.setState(0x8f98, 0xd394, 0x2ef0, 0x41c7, 0x8ab3, 0x387f, 0x1, 0x0);
        gbc.writeMem(0x8f98, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd394);
        EXPECT(gbc.pc(), 0x8f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f98), 0x95);
        // 95 0055
        gbc.setState(0x8ee4, 0x8ee2, 0xee10, 0x2f4f, 0x72f0, 0x4982, 0x1, 0x0);
        gbc.writeMem(0x8ee4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8ee2);
        EXPECT(gbc.pc(), 0x8ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee4), 0x95);
        // 95 0056
        gbc.setState(0x9810, 0x2632, 0xed70, 0xd1c3, 0x1c65, 0xc8d0, 0x0, 0x1);
        gbc.writeMem(0x9810, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x2632);
        EXPECT(gbc.pc(), 0x9811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9810), 0x95);
        // 95 0057
        gbc.setState(0xd504, 0xcb0d, 0xa570, 0xda23, 0x404c, 0xf409, 0x0, 0x1);
        gbc.writeMem(0xd504, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xcb0d);
        EXPECT(gbc.pc(), 0xd505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd504), 0x95);
        // 95 0058
        gbc.setState(0x6c23, 0xcd3e, 0x5ae0, 0x1bcf, 0x1ef0, 0x3272, 0x0, 0x1);
        gbc.writeMem(0x6c23, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcd3e);
        EXPECT(gbc.pc(), 0x6c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0059
        gbc.setState(0x4d4d, 0x10af, 0xfd10, 0x20ec, 0xbcba, 0xddfc, 0x0, 0x0);
        gbc.writeMem(0x4d4d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x10af);
        EXPECT(gbc.pc(), 0x4d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 005A
        gbc.setState(0xb576, 0x249d, 0xc750, 0xda27, 0xb1d6, 0xb8cb, 0x0, 0x0);
        gbc.writeMem(0xb576, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x249d);
        EXPECT(gbc.pc(), 0xb577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb576), 0x95);
        // 95 005B
        gbc.setState(0x8ee9, 0x2447, 0xb3b0, 0x2562, 0xc285, 0xe890, 0x1, 0x1);
        gbc.writeMem(0x8ee9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2447);
        EXPECT(gbc.pc(), 0x8eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee9), 0x95);
        // 95 005C
        gbc.setState(0x1615, 0xa931, 0x7590, 0x3964, 0xd52d, 0x43bf, 0x1, 0x1);
        gbc.writeMem(0x1615, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa931);
        EXPECT(gbc.pc(), 0x1616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 005E
        gbc.setState(0xa952, 0x4fac, 0xc1f0, 0x77c9, 0x585e, 0x589c, 0x0, 0x1);
        gbc.writeMem(0xa952, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4fac);
        EXPECT(gbc.pc(), 0xa953);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa952), 0x95);
        // 95 005F
        gbc.setState(0x9d8a, 0x5951, 0x3630, 0xf97a, 0x1d9f, 0x7359, 0x0, 0x0);
        gbc.writeMem(0x9d8a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5951);
        EXPECT(gbc.pc(), 0x9d8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d8a), 0x95);
        // 95 0060
        gbc.setState(0xdc74, 0x6371, 0x52e0, 0x6188, 0xc97c, 0x62f5, 0x1, 0x1);
        gbc.writeMem(0xdc74, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6371);
        EXPECT(gbc.pc(), 0xdc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc74), 0x95);
        // 95 0061
        gbc.setState(0x5de7, 0x9fc7, 0x710, 0xaf9, 0xca16, 0x755, 0x1, 0x0);
        gbc.writeMem(0x5de7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9fc7);
        EXPECT(gbc.pc(), 0x5de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0062
        gbc.setState(0x3144, 0x1840, 0x8f80, 0x93c7, 0x429d, 0xee9e, 0x0, 0x0);
        gbc.writeMem(0x3144, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x1840);
        EXPECT(gbc.pc(), 0x3145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0063
        gbc.setState(0x19aa, 0x23ef, 0xa8d0, 0x23f3, 0x79dd, 0x8de9, 0x0, 0x0);
        gbc.writeMem(0x19aa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x23ef);
        EXPECT(gbc.pc(), 0x19ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0064
        gbc.setState(0x380, 0xd8a2, 0xafb0, 0xafe8, 0x911d, 0xa4b1, 0x0, 0x1);
        gbc.writeMem(0x380, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd8a2);
        EXPECT(gbc.pc(), 0x381);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0065
        gbc.setState(0x4933, 0x2e0d, 0x4b70, 0xb42e, 0xa8b5, 0x8a70, 0x1, 0x1);
        gbc.writeMem(0x4933, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2e0d);
        EXPECT(gbc.pc(), 0x4934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0066
        gbc.setState(0x827e, 0xffd0, 0x42a0, 0xd6db, 0xf88e, 0x9b45, 0x1, 0x1);
        gbc.writeMem(0x827e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xffd0);
        EXPECT(gbc.pc(), 0x827f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827e), 0x95);
        // 95 0067
        gbc.setState(0x871, 0x322f, 0xd7e0, 0x775c, 0xd654, 0x20e0, 0x1, 0x0);
        gbc.writeMem(0x871, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x322f);
        EXPECT(gbc.pc(), 0x872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0068
        gbc.setState(0xc4b4, 0xca6f, 0x2560, 0x2d3a, 0xfeed, 0xd6db, 0x1, 0x1);
        gbc.writeMem(0xc4b4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xca6f);
        EXPECT(gbc.pc(), 0xc4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b4), 0x95);
        // 95 006A
        gbc.setState(0x273d, 0xd494, 0xeb40, 0x655a, 0x2b25, 0xdde7, 0x0, 0x0);
        gbc.writeMem(0x273d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd494);
        EXPECT(gbc.pc(), 0x273e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 006B
        gbc.setState(0x937, 0x7c14, 0x4b60, 0xaa32, 0x70cb, 0x592a, 0x0, 0x0);
        gbc.writeMem(0x937, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7c14);
        EXPECT(gbc.pc(), 0x938);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 006C
        gbc.setState(0xc150, 0xeee1, 0x2170, 0x1b92, 0xe289, 0xe2fe, 0x1, 0x1);
        gbc.writeMem(0xc150, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xeee1);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc150), 0x95);
        // 95 006D
        gbc.setState(0xc1e8, 0x4aae, 0xbcb0, 0xf3b9, 0x15a4, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0xc1e8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x4aae);
        EXPECT(gbc.pc(), 0xc1e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e8), 0x95);
        // 95 006E
        gbc.setState(0x8a2e, 0x4795, 0x6610, 0x582e, 0xdab4, 0x6c75, 0x0, 0x0);
        gbc.writeMem(0x8a2e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4795);
        EXPECT(gbc.pc(), 0x8a2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2e), 0x95);
        // 95 006F
        gbc.setState(0x7072, 0x2d9d, 0x8bc0, 0xf577, 0xbb5b, 0xc90d, 0x0, 0x0);
        gbc.writeMem(0x7072, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2d9d);
        EXPECT(gbc.pc(), 0x7073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0070
        gbc.setState(0xc18f, 0xdbde, 0x910, 0x32a8, 0x224a, 0x77a0, 0x0, 0x0);
        gbc.writeMem(0xc18f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xdbde);
        EXPECT(gbc.pc(), 0xc190);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc18f), 0x95);
        // 95 0071
        gbc.setState(0x3a96, 0x8c13, 0xd7a0, 0xa5, 0x8752, 0x821b, 0x1, 0x1);
        gbc.writeMem(0x3a96, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8c13);
        EXPECT(gbc.pc(), 0x3a97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0072
        gbc.setState(0x6fcb, 0x1437, 0xaa20, 0x70ca, 0xae90, 0xec2a, 0x1, 0x0);
        gbc.writeMem(0x6fcb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1437);
        EXPECT(gbc.pc(), 0x6fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0073
        gbc.setState(0x84c2, 0x42a5, 0xe4b0, 0xbd0f, 0x83ff, 0x1749, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x42a5);
        EXPECT(gbc.pc(), 0x84c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84c2), 0x95);
        // 95 0074
        gbc.setState(0x39c3, 0x2086, 0x1870, 0x7ca3, 0x1d62, 0xbcfa, 0x0, 0x1);
        gbc.writeMem(0x39c3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2086);
        EXPECT(gbc.pc(), 0x39c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0075
        gbc.setState(0xc5b0, 0xb076, 0x7170, 0xdefc, 0x3dcd, 0xad6e, 0x1, 0x0);
        gbc.writeMem(0xc5b0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xb076);
        EXPECT(gbc.pc(), 0xc5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b0), 0x95);
        // 95 0076
        gbc.setState(0x3fb8, 0xa43, 0xfba0, 0x2247, 0x8e1f, 0x7af7, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xa43);
        EXPECT(gbc.pc(), 0x3fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0077
        gbc.setState(0xe795, 0xdb47, 0x80e0, 0x3264, 0x56d3, 0x1cd7, 0x1, 0x0);
        gbc.writeMem(0xe795, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0xe796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe795), 0x95);
        // 95 0078
        gbc.setState(0xbf25, 0x731e, 0xe480, 0x38be, 0x2d07, 0x9827, 0x1, 0x0);
        gbc.writeMem(0xbf25, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x731e);
        EXPECT(gbc.pc(), 0xbf26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf25), 0x95);
        // 95 0079
        gbc.setState(0x7ee, 0x9bd8, 0xb010, 0xa10d, 0xdffd, 0xbd54, 0x1, 0x0);
        gbc.writeMem(0x7ee, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9bd8);
        EXPECT(gbc.pc(), 0x7ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 007A
        gbc.setState(0x419b, 0x1f0, 0xd6d0, 0x63d2, 0x7d60, 0xcaa4, 0x1, 0x0);
        gbc.writeMem(0x419b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1f0);
        EXPECT(gbc.pc(), 0x419c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 007B
        gbc.setState(0xd5da, 0x4e8, 0x46f0, 0xb55b, 0x6ab5, 0xe56c, 0x1, 0x0);
        gbc.writeMem(0xd5da, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4e8);
        EXPECT(gbc.pc(), 0xd5db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5da), 0x95);
        // 95 007C
        gbc.setState(0x6f38, 0xd4a9, 0xea90, 0x5578, 0x805d, 0xc3cd, 0x1, 0x0);
        gbc.writeMem(0x6f38, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd4a9);
        EXPECT(gbc.pc(), 0x6f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 007D
        gbc.setState(0xba6a, 0xfda6, 0x4870, 0xd092, 0x92d4, 0x86a, 0x0, 0x0);
        gbc.writeMem(0xba6a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfda6);
        EXPECT(gbc.pc(), 0xba6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba6a), 0x95);
        // 95 007E
        gbc.setState(0x3aaf, 0x5be8, 0x9890, 0x20f0, 0xa040, 0xbea4, 0x0, 0x0);
        gbc.writeMem(0x3aaf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5be8);
        EXPECT(gbc.pc(), 0x3ab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 007F
        gbc.setState(0xbf79, 0x4a4, 0x9dd0, 0x2f11, 0xc834, 0x3a6a, 0x1, 0x1);
        gbc.writeMem(0xbf79, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4a4);
        EXPECT(gbc.pc(), 0xbf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf79), 0x95);
        // 95 0080
        gbc.setState(0x38db, 0xab8c, 0x3340, 0x6ed3, 0xd706, 0x802b, 0x0, 0x1);
        gbc.writeMem(0x38db, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xab8c);
        EXPECT(gbc.pc(), 0x38dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0081
        gbc.setState(0x93a8, 0x4a90, 0xb0d0, 0xd9f9, 0x3f99, 0xc467, 0x0, 0x0);
        gbc.writeMem(0x93a8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x4a90);
        EXPECT(gbc.pc(), 0x93a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a8), 0x95);
        // 95 0082
        gbc.setState(0x3d2b, 0x8bb4, 0xd190, 0x16aa, 0xf38a, 0xb7b1, 0x1, 0x0);
        gbc.writeMem(0x3d2b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8bb4);
        EXPECT(gbc.pc(), 0x3d2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0084
        gbc.setState(0xa0e1, 0xaab2, 0xbbf0, 0x6d33, 0xc258, 0x263, 0x0, 0x0);
        gbc.writeMem(0xa0e1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xaab2);
        EXPECT(gbc.pc(), 0xa0e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e1), 0x95);
        // 95 0085
        gbc.setState(0xc24f, 0x479c, 0xd550, 0x7619, 0x81d9, 0x3516, 0x1, 0x1);
        gbc.writeMem(0xc24f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x479c);
        EXPECT(gbc.pc(), 0xc250);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc24f), 0x95);
        // 95 0086
        gbc.setState(0x891a, 0xeb46, 0xb5a0, 0x1069, 0xec1b, 0xd2ed, 0x1, 0x0);
        gbc.writeMem(0x891a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xeb46);
        EXPECT(gbc.pc(), 0x891b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891a), 0x95);
        // 95 0087
        gbc.setState(0x34d5, 0xbab6, 0x1a40, 0x9eb6, 0x6e62, 0x5d37, 0x0, 0x0);
        gbc.writeMem(0x34d5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xbab6);
        EXPECT(gbc.pc(), 0x34d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0088
        gbc.setState(0x5565, 0xa100, 0x3350, 0xc7f7, 0x9d44, 0xfc3c, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa100);
        EXPECT(gbc.pc(), 0x5566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0089
        gbc.setState(0xbafe, 0xc860, 0x3430, 0x919f, 0x693f, 0x5176, 0x0, 0x1);
        gbc.writeMem(0xbafe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xc860);
        EXPECT(gbc.pc(), 0xbaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafe), 0x95);
        // 95 008A
        gbc.setState(0x9c76, 0x2cc7, 0xca40, 0xc461, 0x8758, 0x1c01, 0x0, 0x1);
        gbc.writeMem(0x9c76, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2cc7);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c76), 0x95);
        // 95 008B
        gbc.setState(0xb23c, 0x1fe7, 0xe210, 0xdc33, 0xf408, 0x3b88, 0x0, 0x1);
        gbc.writeMem(0xb23c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1fe7);
        EXPECT(gbc.pc(), 0xb23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23c), 0x95);
        // 95 008C
        gbc.setState(0x8551, 0xf502, 0xf780, 0x3a13, 0x7af1, 0x3a7a, 0x1, 0x1);
        gbc.writeMem(0x8551, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf502);
        EXPECT(gbc.pc(), 0x8552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8551), 0x95);
        // 95 008D
        gbc.setState(0x8a40, 0x64ab, 0x20f0, 0x35b, 0xa04d, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x8a40, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x64ab);
        EXPECT(gbc.pc(), 0x8a41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a40), 0x95);
        // 95 008E
        gbc.setState(0xb406, 0x9a84, 0x6f50, 0x788d, 0xfc8f, 0x9732, 0x0, 0x1);
        gbc.writeMem(0xb406, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9a84);
        EXPECT(gbc.pc(), 0xb407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb406), 0x95);
        // 95 008F
        gbc.setState(0x7c6a, 0x993f, 0xb360, 0x410d, 0x5264, 0x7155, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x993f);
        EXPECT(gbc.pc(), 0x7c6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0090
        gbc.setState(0xa63b, 0x6668, 0x6ef0, 0x8c9b, 0xf4dd, 0x3188, 0x0, 0x0);
        gbc.writeMem(0xa63b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6668);
        EXPECT(gbc.pc(), 0xa63c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63b), 0x95);
        // 95 0091
        gbc.setState(0xe953, 0xdcd, 0x4710, 0x2497, 0x6478, 0x80a5, 0x1, 0x1);
        gbc.writeMem(0xe953, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdcd);
        EXPECT(gbc.pc(), 0xe954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe953), 0x95);
        // 95 0092
        gbc.setState(0x55da, 0x404, 0x9510, 0xcc28, 0xe104, 0x1b50, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x404);
        EXPECT(gbc.pc(), 0x55db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0093
        gbc.setState(0x5907, 0xa5bd, 0x1790, 0x9b54, 0x8493, 0x18d1, 0x1, 0x1);
        gbc.writeMem(0x5907, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa5bd);
        EXPECT(gbc.pc(), 0x5908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0094
        gbc.setState(0x29a5, 0xb3c7, 0x6050, 0xd8f4, 0x793, 0x1343, 0x1, 0x1);
        gbc.writeMem(0x29a5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb3c7);
        EXPECT(gbc.pc(), 0x29a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0095
        gbc.setState(0x7906, 0xbd3b, 0xbe60, 0xf54f, 0x9e8a, 0xd16, 0x1, 0x1);
        gbc.writeMem(0x7906, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbd3b);
        EXPECT(gbc.pc(), 0x7907);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0097
        gbc.setState(0xce13, 0x364f, 0x10d0, 0x6f32, 0x3a6f, 0x4394, 0x0, 0x1);
        gbc.writeMem(0xce13, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x364f);
        EXPECT(gbc.pc(), 0xce14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce13), 0x95);
        // 95 0098
        gbc.setState(0xbc0d, 0x91db, 0xd250, 0x6453, 0x4316, 0xb7d3, 0x1, 0x0);
        gbc.writeMem(0xbc0d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x91db);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0d), 0x95);
        // 95 009A
        gbc.setState(0x2f23, 0x2a52, 0x6350, 0xb3b9, 0x3c44, 0x8a79, 0x1, 0x1);
        gbc.writeMem(0x2f23, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2a52);
        EXPECT(gbc.pc(), 0x2f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 009B
        gbc.setState(0x15c1, 0x8fa7, 0xbe70, 0x8538, 0x9f55, 0xb2fb, 0x0, 0x0);
        gbc.writeMem(0x15c1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8fa7);
        EXPECT(gbc.pc(), 0x15c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 009C
        gbc.setState(0x5ee6, 0x9881, 0x7b20, 0xfb30, 0x1287, 0x542c, 0x0, 0x0);
        gbc.writeMem(0x5ee6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9881);
        EXPECT(gbc.pc(), 0x5ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 009D
        gbc.setState(0xb105, 0x9f0c, 0xfc10, 0x5510, 0x9f21, 0x14d, 0x1, 0x1);
        gbc.writeMem(0xb105, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9f0c);
        EXPECT(gbc.pc(), 0xb106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb105), 0x95);
        // 95 009E
        gbc.setState(0xc2fc, 0xeeb1, 0x8ad0, 0x14fe, 0x1672, 0x24ea, 0x0, 0x1);
        gbc.writeMem(0xc2fc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xeeb1);
        EXPECT(gbc.pc(), 0xc2fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fc), 0x95);
        // 95 00A0
        gbc.setState(0x20f6, 0x6fca, 0x520, 0x1096, 0x5b0e, 0x8ed5, 0x0, 0x1);
        gbc.writeMem(0x20f6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6fca);
        EXPECT(gbc.pc(), 0x20f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00A1
        gbc.setState(0xd755, 0x21a1, 0x6b80, 0xa916, 0x277c, 0x5569, 0x1, 0x0);
        gbc.writeMem(0xd755, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x21a1);
        EXPECT(gbc.pc(), 0xd756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd755), 0x95);
        // 95 00A2
        gbc.setState(0xd307, 0xc6c3, 0xea80, 0x4a54, 0xd217, 0xb726, 0x0, 0x1);
        gbc.writeMem(0xd307, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc6c3);
        EXPECT(gbc.pc(), 0xd308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd307), 0x95);
        // 95 00A3
        gbc.setState(0x823d, 0xd317, 0x6f40, 0x7026, 0xfee9, 0x722b, 0x0, 0x0);
        gbc.writeMem(0x823d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd317);
        EXPECT(gbc.pc(), 0x823e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823d), 0x95);
        // 95 00A4
        gbc.setState(0x427, 0x2b45, 0x5ad0, 0x49f7, 0x2ece, 0x4127, 0x0, 0x0);
        gbc.writeMem(0x427, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2b45);
        EXPECT(gbc.pc(), 0x428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00A5
        gbc.setState(0x43b2, 0xcc37, 0xb210, 0x8945, 0x1397, 0xfe9, 0x1, 0x1);
        gbc.writeMem(0x43b2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xcc37);
        EXPECT(gbc.pc(), 0x43b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00A6
        gbc.setState(0x3179, 0x54e1, 0xcee0, 0xd8f8, 0x4aa7, 0xe066, 0x1, 0x1);
        gbc.writeMem(0x3179, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x54e1);
        EXPECT(gbc.pc(), 0x317a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00A7
        gbc.setState(0x1397, 0x6108, 0x2220, 0x503, 0xba31, 0x4c98, 0x0, 0x1);
        gbc.writeMem(0x1397, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6108);
        EXPECT(gbc.pc(), 0x1398);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00A8
        gbc.setState(0x1f20, 0x3089, 0x44a0, 0xeeb9, 0xb811, 0x21a2, 0x0, 0x1);
        gbc.writeMem(0x1f20, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x3089);
        EXPECT(gbc.pc(), 0x1f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00A9
        gbc.setState(0x8af4, 0xdff, 0x39e0, 0xc528, 0xc391, 0x534e, 0x1, 0x0);
        gbc.writeMem(0x8af4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xdff);
        EXPECT(gbc.pc(), 0x8af5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af4), 0x95);
        // 95 00AA
        gbc.setState(0xa343, 0x37b9, 0x8970, 0x3f36, 0x52ba, 0xd2ba, 0x1, 0x0);
        gbc.writeMem(0xa343, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x37b9);
        EXPECT(gbc.pc(), 0xa344);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa343), 0x95);
        // 95 00AB
        gbc.setState(0x68d9, 0xfc19, 0x30b0, 0xbab9, 0xd393, 0x2582, 0x1, 0x0);
        gbc.writeMem(0x68d9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfc19);
        EXPECT(gbc.pc(), 0x68da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00AC
        gbc.setState(0xc440, 0xb740, 0x540, 0xb452, 0x2aa4, 0xb923, 0x0, 0x1);
        gbc.writeMem(0xc440, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb740);
        EXPECT(gbc.pc(), 0xc441);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc440), 0x95);
        // 95 00AD
        gbc.setState(0xd59b, 0x7a02, 0x8fe0, 0x7e7a, 0x19b0, 0x195e, 0x0, 0x1);
        gbc.writeMem(0xd59b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7a02);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59b), 0x95);
        // 95 00AE
        gbc.setState(0xdfd, 0x7959, 0x66f0, 0x829f, 0xfde1, 0xbd54, 0x1, 0x1);
        gbc.writeMem(0xdfd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7959);
        EXPECT(gbc.pc(), 0xdfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00AF
        gbc.setState(0x54d6, 0xf726, 0x49d0, 0xbd82, 0x1666, 0x827f, 0x0, 0x1);
        gbc.writeMem(0x54d6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xf726);
        EXPECT(gbc.pc(), 0x54d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00B0
        gbc.setState(0x435c, 0x4e1e, 0xaa10, 0xad11, 0x4e1c, 0x7f48, 0x0, 0x1);
        gbc.writeMem(0x435c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4e1e);
        EXPECT(gbc.pc(), 0x435d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00B1
        gbc.setState(0x6103, 0xcbdb, 0x8c10, 0x2d7d, 0xe63c, 0xd1df, 0x1, 0x1);
        gbc.writeMem(0x6103, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xcbdb);
        EXPECT(gbc.pc(), 0x6104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00B2
        gbc.setState(0x37e7, 0x374d, 0xbdf0, 0xd46d, 0xb6a1, 0x9afa, 0x0, 0x0);
        gbc.writeMem(0x37e7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x374d);
        EXPECT(gbc.pc(), 0x37e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00B3
        gbc.setState(0x1261, 0x672e, 0x7b20, 0x6e8c, 0x6864, 0xf032, 0x0, 0x1);
        gbc.writeMem(0x1261, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x672e);
        EXPECT(gbc.pc(), 0x1262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00B4
        gbc.setState(0xab56, 0xca2a, 0x1ba0, 0xe622, 0x135a, 0x7b24, 0x0, 0x1);
        gbc.writeMem(0xab56, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xca2a);
        EXPECT(gbc.pc(), 0xab57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab56), 0x95);
        // 95 00B6
        gbc.setState(0x7b25, 0x309d, 0xf5d0, 0x4a07, 0x7d7c, 0x2685, 0x1, 0x1);
        gbc.writeMem(0x7b25, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x309d);
        EXPECT(gbc.pc(), 0x7b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00B7
        gbc.setState(0x9daa, 0xda4f, 0x4800, 0x8646, 0xc2e5, 0xb246, 0x0, 0x1);
        gbc.writeMem(0x9daa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xda4f);
        EXPECT(gbc.pc(), 0x9dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9daa), 0x95);
        // 95 00B8
        gbc.setState(0x5888, 0xde93, 0x3160, 0x5b72, 0x4466, 0xa6b1, 0x0, 0x0);
        gbc.writeMem(0x5888, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xde93);
        EXPECT(gbc.pc(), 0x5889);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00B9
        gbc.setState(0x6945, 0xc016, 0x3a80, 0xa07d, 0x272, 0x736d, 0x0, 0x0);
        gbc.writeMem(0x6945, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc016);
        EXPECT(gbc.pc(), 0x6946);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00BA
        gbc.setState(0x8131, 0xe362, 0xde60, 0xd35e, 0xe2c1, 0x6a16, 0x0, 0x0);
        gbc.writeMem(0x8131, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe362);
        EXPECT(gbc.pc(), 0x8132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8131), 0x95);
        // 95 00BB
        gbc.setState(0xe06d, 0xcd5a, 0xa200, 0x9c7c, 0x9574, 0x72e, 0x0, 0x0);
        gbc.writeMem(0xe06d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcd5a);
        EXPECT(gbc.pc(), 0xe06e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe06d), 0x95);
        // 95 00BC
        gbc.setState(0x5199, 0x7bfc, 0xbd90, 0x58e0, 0x3afd, 0x1e8a, 0x1, 0x1);
        gbc.writeMem(0x5199, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7bfc);
        EXPECT(gbc.pc(), 0x519a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00BE
        gbc.setState(0xdc37, 0xfd54, 0x1eb0, 0xe0c7, 0x4d80, 0x1957, 0x1, 0x1);
        gbc.writeMem(0xdc37, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xfd54);
        EXPECT(gbc.pc(), 0xdc38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc37), 0x95);
        // 95 00BF
        gbc.setState(0xc8cf, 0xe2ec, 0x8bd0, 0x33a6, 0xe720, 0x60ef, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe2ec);
        EXPECT(gbc.pc(), 0xc8d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cf), 0x95);
        // 95 00C0
        gbc.setState(0x5ca5, 0x6bb4, 0xe40, 0x1df1, 0xc3b2, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0x5ca5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x6bb4);
        EXPECT(gbc.pc(), 0x5ca6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00C1
        gbc.setState(0xcaf8, 0x88b8, 0xd9c0, 0xa10c, 0x8aed, 0xd73a, 0x0, 0x1);
        gbc.writeMem(0xcaf8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x88b8);
        EXPECT(gbc.pc(), 0xcaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf8), 0x95);
        // 95 00C2
        gbc.setState(0x7359, 0xcba6, 0xe710, 0x679d, 0x577, 0x404d, 0x0, 0x0);
        gbc.writeMem(0x7359, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcba6);
        EXPECT(gbc.pc(), 0x735a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00C3
        gbc.setState(0x7063, 0xee5b, 0xcaf0, 0x79d1, 0xf0a3, 0x4ab, 0x0, 0x1);
        gbc.writeMem(0x7063, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0x7064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00C4
        gbc.setState(0xb492, 0xdcf1, 0xc930, 0xedcf, 0x783, 0xfe9b, 0x1, 0x1);
        gbc.writeMem(0xb492, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdcf1);
        EXPECT(gbc.pc(), 0xb493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb492), 0x95);
        // 95 00C5
        gbc.setState(0x1b16, 0xb520, 0xefd0, 0xb0a0, 0xa9b6, 0x7bb, 0x1, 0x0);
        gbc.writeMem(0x1b16, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb520);
        EXPECT(gbc.pc(), 0x1b17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00C6
        gbc.setState(0xae9f, 0xc10, 0x6820, 0x2e3c, 0x6815, 0x2410, 0x0, 0x1);
        gbc.writeMem(0xae9f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xc10);
        EXPECT(gbc.pc(), 0xaea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae9f), 0x95);
        // 95 00C7
        gbc.setState(0xe215, 0x53bc, 0x4b10, 0x4f0f, 0xf6a5, 0xa988, 0x0, 0x1);
        gbc.writeMem(0xe215, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x53bc);
        EXPECT(gbc.pc(), 0xe216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe215), 0x95);
        // 95 00C8
        gbc.setState(0x9825, 0x71e6, 0x2b40, 0xad3e, 0x7419, 0x6e39, 0x1, 0x1);
        gbc.writeMem(0x9825, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x71e6);
        EXPECT(gbc.pc(), 0x9826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9825), 0x95);
        // 95 00C9
        gbc.setState(0xf2c, 0xee9, 0x8740, 0xbe1f, 0x4e3c, 0x308, 0x0, 0x1);
        gbc.writeMem(0xf2c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xee9);
        EXPECT(gbc.pc(), 0xf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00CA
        gbc.setState(0xa0b7, 0x955d, 0x26c0, 0x1728, 0x8e91, 0xebc1, 0x1, 0x0);
        gbc.writeMem(0xa0b7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x955d);
        EXPECT(gbc.pc(), 0xa0b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0b7), 0x95);
        // 95 00CB
        gbc.setState(0x6824, 0xec1a, 0x29a0, 0xc250, 0xd32d, 0xe69c, 0x0, 0x1);
        gbc.writeMem(0x6824, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xec1a);
        EXPECT(gbc.pc(), 0x6825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00CC
        gbc.setState(0xcdd6, 0x98a3, 0x7490, 0x51ef, 0x668, 0x96f6, 0x1, 0x0);
        gbc.writeMem(0xcdd6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x98a3);
        EXPECT(gbc.pc(), 0xcdd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdd6), 0x95);
        // 95 00CE
        gbc.setState(0x216c, 0xfdd8, 0xd2f0, 0x8d50, 0x4256, 0xf320, 0x0, 0x0);
        gbc.writeMem(0x216c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xfdd8);
        EXPECT(gbc.pc(), 0x216d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00CF
        gbc.setState(0x6ab7, 0x187f, 0x8330, 0x6ea2, 0xc782, 0xc6ec, 0x0, 0x0);
        gbc.writeMem(0x6ab7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x187f);
        EXPECT(gbc.pc(), 0x6ab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00D0
        gbc.setState(0x753f, 0x883d, 0x5980, 0xb27e, 0x89ed, 0x774c, 0x1, 0x1);
        gbc.writeMem(0x753f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x883d);
        EXPECT(gbc.pc(), 0x7540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00D1
        gbc.setState(0x2a42, 0xbb1, 0x6850, 0xc90c, 0x531e, 0x7b79, 0x0, 0x1);
        gbc.writeMem(0x2a42, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0x2a43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00D2
        gbc.setState(0x3643, 0x15f1, 0xcb80, 0x40b1, 0x9612, 0x482a, 0x1, 0x0);
        gbc.writeMem(0x3643, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x15f1);
        EXPECT(gbc.pc(), 0x3644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00D3
        gbc.setState(0x3eb9, 0xbd96, 0x18c0, 0x1b94, 0x4e2f, 0x89e, 0x0, 0x0);
        gbc.writeMem(0x3eb9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xbd96);
        EXPECT(gbc.pc(), 0x3eba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00D4
        gbc.setState(0xaedb, 0xa427, 0xca80, 0xe8cb, 0xd59f, 0x37d1, 0x1, 0x0);
        gbc.writeMem(0xaedb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa427);
        EXPECT(gbc.pc(), 0xaedc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedb), 0x95);
        // 95 00D5
        gbc.setState(0x5e27, 0x6774, 0xdb0, 0xc2a6, 0x5075, 0xe652, 0x0, 0x1);
        gbc.writeMem(0x5e27, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6774);
        EXPECT(gbc.pc(), 0x5e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00D6
        gbc.setState(0x62bd, 0xb43f, 0xd20, 0xae92, 0x5b5c, 0x1c78, 0x1, 0x0);
        gbc.writeMem(0x62bd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb43f);
        EXPECT(gbc.pc(), 0x62be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00D7
        gbc.setState(0x2aaf, 0x50a6, 0xe4a0, 0x1a33, 0x6d98, 0x91a6, 0x1, 0x1);
        gbc.writeMem(0x2aaf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x50a6);
        EXPECT(gbc.pc(), 0x2ab0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00D8
        gbc.setState(0xc4bd, 0x2310, 0x16d0, 0x4ceb, 0x9a18, 0x47d1, 0x1, 0x0);
        gbc.writeMem(0xc4bd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2310);
        EXPECT(gbc.pc(), 0xc4be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4bd), 0x95);
        // 95 00D9
        gbc.setState(0x2024, 0x61fe, 0xb000, 0xe375, 0x4581, 0xa0f5, 0x0, 0x1);
        gbc.writeMem(0x2024, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x61fe);
        EXPECT(gbc.pc(), 0x2025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00DB
        gbc.setState(0x4e, 0xa488, 0x4e60, 0x8e7f, 0xfda2, 0x24a4, 0x0, 0x0);
        gbc.writeMem(0x4e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa488);
        EXPECT(gbc.pc(), 0x4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00DC
        gbc.setState(0xc178, 0xee4e, 0xe2f0, 0xbf1e, 0xab9b, 0xec8f, 0x1, 0x0);
        gbc.writeMem(0xc178, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xee4e);
        EXPECT(gbc.pc(), 0xc179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc178), 0x95);
        // 95 00DD
        gbc.setState(0x500d, 0x9527, 0x2cb0, 0x8bfd, 0x94f, 0x332, 0x0, 0x0);
        gbc.writeMem(0x500d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9527);
        EXPECT(gbc.pc(), 0x500e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00DE
        gbc.setState(0x889a, 0xed29, 0x6b80, 0x9d7b, 0x47d1, 0x5e75, 0x1, 0x0);
        gbc.writeMem(0x889a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xed29);
        EXPECT(gbc.pc(), 0x889b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x889a), 0x95);
        // 95 00DF
        gbc.setState(0x6f74, 0x6f28, 0x2d20, 0x2633, 0x91aa, 0x118f, 0x0, 0x0);
        gbc.writeMem(0x6f74, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6f28);
        EXPECT(gbc.pc(), 0x6f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00E1
        gbc.setState(0xc438, 0xbcf0, 0x6c20, 0x862f, 0xcb6d, 0xa7f4, 0x0, 0x0);
        gbc.writeMem(0xc438, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbcf0);
        EXPECT(gbc.pc(), 0xc439);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc438), 0x95);
        // 95 00E2
        gbc.setState(0x28f4, 0x5eb5, 0xc2d0, 0xe9b8, 0xcf4b, 0x9b28, 0x1, 0x0);
        gbc.writeMem(0x28f4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5eb5);
        EXPECT(gbc.pc(), 0x28f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00E3
        gbc.setState(0x477b, 0xe5d6, 0x5a90, 0xeb41, 0x865e, 0xe959, 0x0, 0x1);
        gbc.writeMem(0x477b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe5d6);
        EXPECT(gbc.pc(), 0x477c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00E4
        gbc.setState(0x5d72, 0x4654, 0x9be0, 0x61dc, 0xe133, 0x454f, 0x0, 0x0);
        gbc.writeMem(0x5d72, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x4654);
        EXPECT(gbc.pc(), 0x5d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00E5
        gbc.setState(0x4e29, 0xc005, 0xe0a0, 0xaae8, 0x2626, 0x54ac, 0x0, 0x1);
        gbc.writeMem(0x4e29, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc005);
        EXPECT(gbc.pc(), 0x4e2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 00E6
        gbc.setState(0xa9e4, 0x9e65, 0x4240, 0x35c, 0x1944, 0x84e0, 0x1, 0x0);
        gbc.writeMem(0xa9e4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9e65);
        EXPECT(gbc.pc(), 0xa9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e4), 0x95);
        // 95 00E7
        gbc.setState(0x883, 0x1ab6, 0x950, 0xae41, 0x77fa, 0xbdec, 0x1, 0x1);
        gbc.writeMem(0x883, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1ab6);
        EXPECT(gbc.pc(), 0x884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00E8
        gbc.setState(0x33da, 0xc099, 0xbcc0, 0x38d4, 0x1709, 0x59f2, 0x0, 0x1);
        gbc.writeMem(0x33da, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc099);
        EXPECT(gbc.pc(), 0x33db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00E9
        gbc.setState(0x9f34, 0x12e9, 0x590, 0xb31, 0x79d3, 0x6fcf, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x12e9);
        EXPECT(gbc.pc(), 0x9f35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f34), 0x95);
        // 95 00EA
        gbc.setState(0x9989, 0x25e0, 0x4130, 0xe8dd, 0x5032, 0x3af6, 0x1, 0x1);
        gbc.writeMem(0x9989, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x25e0);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9989), 0x95);
        // 95 00EB
        gbc.setState(0xbbba, 0x7345, 0xd240, 0xa14b, 0x816d, 0x920b, 0x0, 0x1);
        gbc.writeMem(0xbbba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7345);
        EXPECT(gbc.pc(), 0xbbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbba), 0x95);
        // 95 00EC
        gbc.setState(0xc584, 0x1bd4, 0x5340, 0x8071, 0xdc1d, 0xbbdd, 0x1, 0x0);
        gbc.writeMem(0xc584, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1bd4);
        EXPECT(gbc.pc(), 0xc585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc584), 0x95);
        // 95 00ED
        gbc.setState(0x4c92, 0x9222, 0x24a0, 0x1a92, 0x3286, 0x4b90, 0x1, 0x1);
        gbc.writeMem(0x4c92, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9222);
        EXPECT(gbc.pc(), 0x4c93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00EE
        gbc.setState(0x2b00, 0x6659, 0x8b40, 0x2d40, 0x4123, 0x11f9, 0x0, 0x1);
        gbc.writeMem(0x2b00, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6659);
        EXPECT(gbc.pc(), 0x2b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00EF
        gbc.setState(0x5072, 0x292e, 0x2030, 0xaf7d, 0xcb02, 0x5d26, 0x1, 0x1);
        gbc.writeMem(0x5072, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x292e);
        EXPECT(gbc.pc(), 0x5073);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00F0
        gbc.setState(0x730b, 0x18fb, 0x3360, 0x6fb, 0xdd44, 0x4b22, 0x0, 0x1);
        gbc.writeMem(0x730b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x18fb);
        EXPECT(gbc.pc(), 0x730c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00F1
        gbc.setState(0xcca1, 0x720a, 0x4cd0, 0x3e49, 0xec3c, 0x5395, 0x1, 0x0);
        gbc.writeMem(0xcca1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x720a);
        EXPECT(gbc.pc(), 0xcca2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcca1), 0x95);
        // 95 00F2
        gbc.setState(0xdb1a, 0x9326, 0x740, 0xc2c4, 0x8278, 0x66a8, 0x1, 0x1);
        gbc.writeMem(0xdb1a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9326);
        EXPECT(gbc.pc(), 0xdb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1a), 0x95);
        // 95 00F3
        gbc.setState(0x791f, 0x8b63, 0x1a50, 0x1b0d, 0xb8a9, 0x898d, 0x1, 0x0);
        gbc.writeMem(0x791f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8b63);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00F5
        gbc.setState(0x4880, 0xda19, 0x6430, 0xd232, 0x36dd, 0x869b, 0x1, 0x1);
        gbc.writeMem(0x4880, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xda19);
        EXPECT(gbc.pc(), 0x4881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00F6
        gbc.setState(0xe64, 0x9c23, 0x4a00, 0x80cc, 0xd973, 0xafe6, 0x0, 0x1);
        gbc.writeMem(0xe64, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9c23);
        EXPECT(gbc.pc(), 0xe65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00F7
        gbc.setState(0x7008, 0xc969, 0x4770, 0x1919, 0xc009, 0x6efb, 0x0, 0x0);
        gbc.writeMem(0x7008, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xc969);
        EXPECT(gbc.pc(), 0x7009);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 00F8
        gbc.setState(0xd27e, 0x272f, 0x7050, 0x76ab, 0xd750, 0x1e2c, 0x1, 0x1);
        gbc.writeMem(0xd27e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x272f);
        EXPECT(gbc.pc(), 0xd27f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27e), 0x95);
        // 95 00F9
        gbc.setState(0x9a76, 0x6d30, 0xfba0, 0x5d67, 0x8b7f, 0x8ec5, 0x1, 0x1);
        gbc.writeMem(0x9a76, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6d30);
        EXPECT(gbc.pc(), 0x9a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a76), 0x95);
        // 95 00FA
        gbc.setState(0x160f, 0xae2, 0x7f50, 0xfbd2, 0xf4bf, 0x55b3, 0x1, 0x0);
        gbc.writeMem(0x160f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xae2);
        EXPECT(gbc.pc(), 0x1610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 00FB
        gbc.setState(0xcea3, 0xce48, 0x2b90, 0x75e6, 0xd66f, 0xd756, 0x1, 0x0);
        gbc.writeMem(0xcea3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xce48);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea3), 0x95);
        // 95 00FC
        gbc.setState(0x7af9, 0xd423, 0x3da0, 0x5331, 0x3244, 0xda23, 0x1, 0x1);
        gbc.writeMem(0x7af9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd423);
        EXPECT(gbc.pc(), 0x7afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00FD
        gbc.setState(0xf69, 0x4dde, 0x7160, 0xc9ee, 0x3f79, 0xab20, 0x0, 0x0);
        gbc.writeMem(0xf69, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4dde);
        EXPECT(gbc.pc(), 0xf6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00FE
        gbc.setState(0x6748, 0xf7c8, 0xe7a0, 0x4c26, 0x18eb, 0x7e10, 0x0, 0x1);
        gbc.writeMem(0x6748, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf7c8);
        EXPECT(gbc.pc(), 0x6749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 00FF
        gbc.setState(0x68fa, 0x798f, 0x2930, 0xd223, 0x48cf, 0x5095, 0x1, 0x0);
        gbc.writeMem(0x68fa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x798f);
        EXPECT(gbc.pc(), 0x68fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0100
        gbc.setState(0xa1ef, 0x7402, 0x2c40, 0x87ee, 0x2e63, 0x828, 0x1, 0x0);
        gbc.writeMem(0xa1ef, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x7402);
        EXPECT(gbc.pc(), 0xa1f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ef), 0x95);
        // 95 0101
        gbc.setState(0x79e6, 0xbf91, 0x7ae0, 0x9b08, 0xb0ef, 0xb0c2, 0x0, 0x0);
        gbc.writeMem(0x79e6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbf91);
        EXPECT(gbc.pc(), 0x79e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0102
        gbc.setState(0x94ba, 0xd7bc, 0xb8e0, 0x3fec, 0x3be, 0xb3ca, 0x1, 0x1);
        gbc.writeMem(0x94ba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0x94bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ba), 0x95);
        // 95 0103
        gbc.setState(0xc6b3, 0x496, 0x9e60, 0x92ab, 0xc8d6, 0xae0e, 0x0, 0x1);
        gbc.writeMem(0xc6b3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x496);
        EXPECT(gbc.pc(), 0xc6b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b3), 0x95);
        // 95 0104
        gbc.setState(0x48c0, 0x578a, 0x50, 0xa94c, 0x9337, 0xe7a3, 0x1, 0x1);
        gbc.writeMem(0x48c0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x578a);
        EXPECT(gbc.pc(), 0x48c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0105
        gbc.setState(0xa2f2, 0x8996, 0x53c0, 0x17cd, 0x4810, 0x74e6, 0x0, 0x1);
        gbc.writeMem(0xa2f2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8996);
        EXPECT(gbc.pc(), 0xa2f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f2), 0x95);
        // 95 0106
        gbc.setState(0x519e, 0x1976, 0x1a80, 0xa18d, 0xb831, 0xa8b4, 0x1, 0x1);
        gbc.writeMem(0x519e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1976);
        EXPECT(gbc.pc(), 0x519f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0107
        gbc.setState(0x3831, 0xa49b, 0xc1d0, 0xe549, 0x3b67, 0xf3a9, 0x0, 0x1);
        gbc.writeMem(0x3831, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa49b);
        EXPECT(gbc.pc(), 0x3832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0108
        gbc.setState(0x1ed7, 0xd63, 0x1000, 0xff25, 0xdb84, 0xb6da, 0x0, 0x1);
        gbc.writeMem(0x1ed7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd63);
        EXPECT(gbc.pc(), 0x1ed8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0109
        gbc.setState(0x8ec8, 0x2477, 0xd160, 0x394b, 0xedc9, 0xa392, 0x0, 0x1);
        gbc.writeMem(0x8ec8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2477);
        EXPECT(gbc.pc(), 0x8ec9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec8), 0x95);
        // 95 010A
        gbc.setState(0x3b62, 0xe3e5, 0xecb0, 0x86d8, 0x708f, 0x8ade, 0x0, 0x0);
        gbc.writeMem(0x3b62, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe3e5);
        EXPECT(gbc.pc(), 0x3b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 010B
        gbc.setState(0x4b21, 0xb551, 0xc790, 0xf30, 0x45c3, 0x6f11, 0x1, 0x1);
        gbc.writeMem(0x4b21, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb551);
        EXPECT(gbc.pc(), 0x4b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 010C
        gbc.setState(0xc8fd, 0x258, 0xca70, 0x6dca, 0x548b, 0x9cd8, 0x1, 0x1);
        gbc.writeMem(0xc8fd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x258);
        EXPECT(gbc.pc(), 0xc8fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8fd), 0x95);
        // 95 010D
        gbc.setState(0xd59b, 0x3ff, 0x8fb0, 0x636e, 0x752f, 0x1014, 0x0, 0x0);
        gbc.writeMem(0xd59b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x3ff);
        EXPECT(gbc.pc(), 0xd59c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd59b), 0x95);
        // 95 010E
        gbc.setState(0x37d6, 0x2460, 0x16c0, 0xcc92, 0xf6fe, 0x6e84, 0x1, 0x1);
        gbc.writeMem(0x37d6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2460);
        EXPECT(gbc.pc(), 0x37d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 010F
        gbc.setState(0x91a9, 0xc0, 0x1e00, 0x708e, 0x5b01, 0x2cc6, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc0);
        EXPECT(gbc.pc(), 0x91aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a9), 0x95);
        // 95 0110
        gbc.setState(0xf83, 0x6dc1, 0xb0a0, 0xb6cc, 0x32c9, 0xc3aa, 0x0, 0x0);
        gbc.writeMem(0xf83, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6dc1);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0111
        gbc.setState(0x584f, 0x20a2, 0x6650, 0x83cd, 0xeb27, 0xc728, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x20a2);
        EXPECT(gbc.pc(), 0x5850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0112
        gbc.setState(0x6eac, 0x2cfc, 0xd90, 0xfb1a, 0xcaa3, 0xc366, 0x1, 0x0);
        gbc.writeMem(0x6eac, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2cfc);
        EXPECT(gbc.pc(), 0x6ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0113
        gbc.setState(0x839e, 0x3a82, 0x6530, 0x6545, 0xb91c, 0xe5dd, 0x1, 0x1);
        gbc.writeMem(0x839e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3a82);
        EXPECT(gbc.pc(), 0x839f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x839e), 0x95);
        // 95 0114
        gbc.setState(0x542c, 0x46d7, 0xdb80, 0x2593, 0xafac, 0x2f5d, 0x1, 0x0);
        gbc.writeMem(0x542c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x46d7);
        EXPECT(gbc.pc(), 0x542d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0115
        gbc.setState(0x4262, 0xbf55, 0xb0b0, 0x4bf9, 0xcef3, 0xcc4, 0x0, 0x0);
        gbc.writeMem(0x4262, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xbf55);
        EXPECT(gbc.pc(), 0x4263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0116
        gbc.setState(0x5e39, 0xaabc, 0x6940, 0xa009, 0x8ff4, 0x1251, 0x0, 0x1);
        gbc.writeMem(0x5e39, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xaabc);
        EXPECT(gbc.pc(), 0x5e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0117
        gbc.setState(0xe6c7, 0xaada, 0x7ac0, 0x15bb, 0xdd30, 0x31de, 0x0, 0x1);
        gbc.writeMem(0xe6c7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xaada);
        EXPECT(gbc.pc(), 0xe6c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c7), 0x95);
        // 95 0118
        gbc.setState(0xd9bb, 0x986c, 0x97a0, 0xfe1c, 0x8fe3, 0x7656, 0x1, 0x0);
        gbc.writeMem(0xd9bb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x986c);
        EXPECT(gbc.pc(), 0xd9bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9bb), 0x95);
        // 95 0119
        gbc.setState(0x2c85, 0x41eb, 0xbc00, 0x472d, 0x6a0, 0xa255, 0x1, 0x0);
        gbc.writeMem(0x2c85, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x41eb);
        EXPECT(gbc.pc(), 0x2c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 011A
        gbc.setState(0x27f1, 0xf591, 0x9ae0, 0x2a64, 0xee03, 0x7f8d, 0x0, 0x0);
        gbc.writeMem(0x27f1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0x27f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 011B
        gbc.setState(0x1fea, 0xc578, 0x1230, 0xae8f, 0x5a68, 0x4433, 0x0, 0x0);
        gbc.writeMem(0x1fea, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0x1feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 011C
        gbc.setState(0x8fc8, 0x5c36, 0xaf80, 0x34e3, 0x786b, 0x174e, 0x0, 0x0);
        gbc.writeMem(0x8fc8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x5c36);
        EXPECT(gbc.pc(), 0x8fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fc8), 0x95);
        // 95 011D
        gbc.setState(0x2421, 0x557e, 0x7a70, 0xe7ba, 0xbb29, 0xf4c1, 0x0, 0x1);
        gbc.writeMem(0x2421, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x557e);
        EXPECT(gbc.pc(), 0x2422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 011E
        gbc.setState(0xa136, 0xea69, 0x10, 0x29b1, 0x9097, 0xf9ca, 0x0, 0x1);
        gbc.writeMem(0xa136, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xea69);
        EXPECT(gbc.pc(), 0xa137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa136), 0x95);
        // 95 011F
        gbc.setState(0xb607, 0xb6b5, 0xa230, 0xb32, 0xd033, 0x2680, 0x0, 0x1);
        gbc.writeMem(0xb607, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xb6b5);
        EXPECT(gbc.pc(), 0xb608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb607), 0x95);
        // 95 0120
        gbc.setState(0x19d, 0xe028, 0x21d0, 0x91d6, 0x90db, 0x68aa, 0x0, 0x1);
        gbc.writeMem(0x19d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe028);
        EXPECT(gbc.pc(), 0x19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0121
        gbc.setState(0x540e, 0xb108, 0xbfb0, 0xedf8, 0x758b, 0xdc17, 0x0, 0x1);
        gbc.writeMem(0x540e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb108);
        EXPECT(gbc.pc(), 0x540f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0122
        gbc.setState(0x8e8d, 0x8d18, 0x9020, 0xc6c8, 0xf6b2, 0x2c19, 0x1, 0x0);
        gbc.writeMem(0x8e8d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8d18);
        EXPECT(gbc.pc(), 0x8e8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8d), 0x95);
        // 95 0123
        gbc.setState(0xdcda, 0xe345, 0xe000, 0xa0f7, 0x3ecd, 0xa881, 0x0, 0x1);
        gbc.writeMem(0xdcda, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xe345);
        EXPECT(gbc.pc(), 0xdcdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcda), 0x95);
        // 95 0124
        gbc.setState(0xb90d, 0x3095, 0x3160, 0x48e8, 0xdb24, 0xd3bd, 0x0, 0x0);
        gbc.writeMem(0xb90d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3095);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90d), 0x95);
        // 95 0126
        gbc.setState(0xecf5, 0x5d41, 0x7cb0, 0xbc3, 0x6acf, 0x98b9, 0x1, 0x0);
        gbc.writeMem(0xecf5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5d41);
        EXPECT(gbc.pc(), 0xecf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf5), 0x95);
        // 95 0127
        gbc.setState(0x4695, 0x9c2f, 0x2f30, 0x892f, 0x4f7c, 0x1605, 0x1, 0x1);
        gbc.writeMem(0x4695, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9c2f);
        EXPECT(gbc.pc(), 0x4696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0128
        gbc.setState(0xce41, 0xe933, 0x7ec0, 0x2c02, 0xa352, 0xa253, 0x0, 0x1);
        gbc.writeMem(0xce41, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe933);
        EXPECT(gbc.pc(), 0xce42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce41), 0x95);
        // 95 0129
        gbc.setState(0x9d4, 0x7ee8, 0x4510, 0x9554, 0xbae8, 0xb5f3, 0x0, 0x0);
        gbc.writeMem(0x9d4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7ee8);
        EXPECT(gbc.pc(), 0x9d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 012A
        gbc.setState(0x508e, 0xfa56, 0xd540, 0x7a84, 0x8a3, 0x6784, 0x1, 0x1);
        gbc.writeMem(0x508e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfa56);
        EXPECT(gbc.pc(), 0x508f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 012B
        gbc.setState(0xcf89, 0x194f, 0xa150, 0x8c02, 0x15f8, 0x5746, 0x1, 0x1);
        gbc.writeMem(0xcf89, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x194f);
        EXPECT(gbc.pc(), 0xcf8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf89), 0x95);
        // 95 012C
        gbc.setState(0x9eaa, 0x5757, 0xac80, 0xf36, 0x72bb, 0x1291, 0x0, 0x0);
        gbc.writeMem(0x9eaa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x5757);
        EXPECT(gbc.pc(), 0x9eab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eaa), 0x95);
        // 95 012D
        gbc.setState(0x4588, 0x26c3, 0x4f0, 0xc77f, 0xfe6f, 0x17ab, 0x0, 0x1);
        gbc.writeMem(0x4588, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x26c3);
        EXPECT(gbc.pc(), 0x4589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 012E
        gbc.setState(0xc723, 0xf2d9, 0x37e0, 0xc583, 0x7293, 0x4f11, 0x0, 0x0);
        gbc.writeMem(0xc723, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf2d9);
        EXPECT(gbc.pc(), 0xc724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc723), 0x95);
        // 95 012F
        gbc.setState(0xbadb, 0xae84, 0x2360, 0x74ef, 0x7899, 0x610b, 0x1, 0x1);
        gbc.writeMem(0xbadb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xae84);
        EXPECT(gbc.pc(), 0xbadc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbadb), 0x95);
        // 95 0130
        gbc.setState(0xa291, 0xe94c, 0x6dc0, 0x1e9f, 0xf57, 0x2db3, 0x0, 0x1);
        gbc.writeMem(0xa291, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe94c);
        EXPECT(gbc.pc(), 0xa292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa291), 0x95);
        // 95 0131
        gbc.setState(0x8a40, 0x565c, 0xaeb0, 0x4c25, 0x82fc, 0xb74c, 0x1, 0x0);
        gbc.writeMem(0x8a40, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x565c);
        EXPECT(gbc.pc(), 0x8a41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a40), 0x95);
        // 95 0132
        gbc.setState(0xcbd8, 0xa63c, 0xb290, 0xaaf, 0xf56c, 0xf047, 0x0, 0x1);
        gbc.writeMem(0xcbd8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa63c);
        EXPECT(gbc.pc(), 0xcbd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd8), 0x95);
        // 95 0133
        gbc.setState(0x633a, 0x78cd, 0xd090, 0x3724, 0x122c, 0xdb56, 0x1, 0x1);
        gbc.writeMem(0x633a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x78cd);
        EXPECT(gbc.pc(), 0x633b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0134
        gbc.setState(0x6e1b, 0x780b, 0xf70, 0x314e, 0x5746, 0x7fa, 0x0, 0x0);
        gbc.writeMem(0x6e1b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x780b);
        EXPECT(gbc.pc(), 0x6e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0135
        gbc.setState(0x2fc8, 0xc657, 0x3ef0, 0x237d, 0x771c, 0x4efe, 0x0, 0x1);
        gbc.writeMem(0x2fc8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc657);
        EXPECT(gbc.pc(), 0x2fc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0136
        gbc.setState(0xda5, 0xa81, 0xb730, 0x5902, 0xadc3, 0xe8a7, 0x1, 0x1);
        gbc.writeMem(0xda5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa81);
        EXPECT(gbc.pc(), 0xda6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0137
        gbc.setState(0x2ae1, 0x617b, 0x5c20, 0x36b8, 0x1834, 0x1119, 0x0, 0x0);
        gbc.writeMem(0x2ae1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0x2ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0138
        gbc.setState(0xcd83, 0x1aee, 0xef50, 0xcd21, 0x962e, 0xf640, 0x1, 0x0);
        gbc.writeMem(0xcd83, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1aee);
        EXPECT(gbc.pc(), 0xcd84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd83), 0x95);
        // 95 0139
        gbc.setState(0x227a, 0xcaa1, 0x170, 0x355c, 0x61c3, 0xd6be, 0x0, 0x1);
        gbc.writeMem(0x227a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xcaa1);
        EXPECT(gbc.pc(), 0x227b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 013A
        gbc.setState(0xdcbe, 0xb46f, 0x5ed0, 0xa0b, 0xe24d, 0xff8, 0x0, 0x0);
        gbc.writeMem(0xdcbe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb46f);
        EXPECT(gbc.pc(), 0xdcbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcbe), 0x95);
        // 95 013B
        gbc.setState(0x874c, 0xc8aa, 0x41c0, 0xcd43, 0x9a7f, 0xee1c, 0x1, 0x1);
        gbc.writeMem(0x874c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xc8aa);
        EXPECT(gbc.pc(), 0x874d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874c), 0x95);
        // 95 013C
        gbc.setState(0x10ad, 0xd6b9, 0xdef0, 0x3fc0, 0x36a7, 0x75af, 0x1, 0x0);
        gbc.writeMem(0x10ad, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd6b9);
        EXPECT(gbc.pc(), 0x10ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 013D
        gbc.setState(0xc936, 0x50f8, 0xe9d0, 0x972a, 0x275f, 0xc8c4, 0x0, 0x0);
        gbc.writeMem(0xc936, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x50f8);
        EXPECT(gbc.pc(), 0xc937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc936), 0x95);
        // 95 013E
        gbc.setState(0xbe42, 0xa5fd, 0x2810, 0xea10, 0xe5e2, 0xe7be, 0x1, 0x1);
        gbc.writeMem(0xbe42, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xa5fd);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe42), 0x95);
        // 95 013F
        gbc.setState(0xd9bc, 0x863, 0x7b10, 0x5330, 0xa75d, 0x79d5, 0x1, 0x0);
        gbc.writeMem(0xd9bc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x863);
        EXPECT(gbc.pc(), 0xd9bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9bc), 0x95);
        // 95 0140
        gbc.setState(0xbc71, 0x28da, 0x3600, 0x624d, 0x66c4, 0xdf6f, 0x1, 0x0);
        gbc.writeMem(0xbc71, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x28da);
        EXPECT(gbc.pc(), 0xbc72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc71), 0x95);
        // 95 0141
        gbc.setState(0x5ce5, 0xb10c, 0x2030, 0x9d13, 0xb58b, 0x51dc, 0x1, 0x1);
        gbc.writeMem(0x5ce5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb10c);
        EXPECT(gbc.pc(), 0x5ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0142
        gbc.setState(0x8473, 0x2f99, 0xc0f0, 0x351, 0x8fb8, 0x253d, 0x0, 0x0);
        gbc.writeMem(0x8473, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2f99);
        EXPECT(gbc.pc(), 0x8474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8473), 0x95);
        // 95 0143
        gbc.setState(0xc531, 0x6fd9, 0xc510, 0x76a, 0x6b4c, 0xd9e4, 0x1, 0x0);
        gbc.writeMem(0xc531, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6fd9);
        EXPECT(gbc.pc(), 0xc532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc531), 0x95);
        // 95 0144
        gbc.setState(0x2ce4, 0x9c96, 0x7f30, 0xfed1, 0xecfb, 0xc775, 0x0, 0x0);
        gbc.writeMem(0x2ce4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9c96);
        EXPECT(gbc.pc(), 0x2ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0145
        gbc.setState(0x9628, 0xf0f, 0xbd90, 0xac5, 0xd41e, 0xf171, 0x1, 0x0);
        gbc.writeMem(0x9628, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf0f);
        EXPECT(gbc.pc(), 0x9629);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9628), 0x95);
        // 95 0146
        gbc.setState(0xe57c, 0xd792, 0x5750, 0x1f8d, 0x7ad7, 0x772a, 0x0, 0x1);
        gbc.writeMem(0xe57c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd792);
        EXPECT(gbc.pc(), 0xe57d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe57c), 0x95);
        // 95 0147
        gbc.setState(0x7984, 0x8d95, 0x4a50, 0xd39a, 0x5f72, 0x3959, 0x1, 0x0);
        gbc.writeMem(0x7984, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8d95);
        EXPECT(gbc.pc(), 0x7985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0148
        gbc.setState(0x8d44, 0xb13a, 0xdb50, 0x5c5b, 0x4f54, 0x878, 0x0, 0x1);
        gbc.writeMem(0x8d44, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xb13a);
        EXPECT(gbc.pc(), 0x8d45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d44), 0x95);
        // 95 0149
        gbc.setState(0x3858, 0x25a3, 0xfae0, 0x2437, 0x159b, 0x319d, 0x0, 0x0);
        gbc.writeMem(0x3858, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x25a3);
        EXPECT(gbc.pc(), 0x3859);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 014A
        gbc.setState(0x2548, 0xb209, 0x7240, 0xb360, 0x51d, 0x15aa, 0x0, 0x1);
        gbc.writeMem(0x2548, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb209);
        EXPECT(gbc.pc(), 0x2549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 014B
        gbc.setState(0xd42a, 0x1d99, 0x90f0, 0xae3c, 0xcb69, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0xd42a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1d99);
        EXPECT(gbc.pc(), 0xd42b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42a), 0x95);
        // 95 014C
        gbc.setState(0xd86f, 0x62e9, 0x82d0, 0xbe1e, 0xf502, 0x65ff, 0x1, 0x1);
        gbc.writeMem(0xd86f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x62e9);
        EXPECT(gbc.pc(), 0xd870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86f), 0x95);
        // 95 014D
        gbc.setState(0x6954, 0x47a7, 0xc9a0, 0xb10c, 0x5c16, 0x3084, 0x0, 0x1);
        gbc.writeMem(0x6954, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x47a7);
        EXPECT(gbc.pc(), 0x6955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 014E
        gbc.setState(0x806d, 0xed58, 0xc6b0, 0xa40c, 0xb710, 0x3da5, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xed58);
        EXPECT(gbc.pc(), 0x806e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x806d), 0x95);
        // 95 014F
        gbc.setState(0xae2f, 0x6071, 0x55f0, 0x99d8, 0xfe09, 0xe7a4, 0x1, 0x0);
        gbc.writeMem(0xae2f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6071);
        EXPECT(gbc.pc(), 0xae30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2f), 0x95);
        // 95 0150
        gbc.setState(0xcd9a, 0x7bcb, 0x24b0, 0x665f, 0x307c, 0xfc56, 0x0, 0x1);
        gbc.writeMem(0xcd9a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7bcb);
        EXPECT(gbc.pc(), 0xcd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd9a), 0x95);
        // 95 0151
        gbc.setState(0x3c68, 0x516a, 0x6a70, 0x584, 0xf5c6, 0xc8ac, 0x1, 0x1);
        gbc.writeMem(0x3c68, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x516a);
        EXPECT(gbc.pc(), 0x3c69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0152
        gbc.setState(0xa546, 0x46ba, 0x9740, 0x7953, 0x63a8, 0xf6d9, 0x1, 0x1);
        gbc.writeMem(0xa546, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x46ba);
        EXPECT(gbc.pc(), 0xa547);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa546), 0x95);
        // 95 0153
        gbc.setState(0x1d81, 0x203, 0x7eb0, 0x2b7b, 0x11ba, 0x8c75, 0x1, 0x0);
        gbc.writeMem(0x1d81, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x203);
        EXPECT(gbc.pc(), 0x1d82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0154
        gbc.setState(0x28fe, 0x8e88, 0x67e0, 0xc34c, 0x3421, 0x832f, 0x0, 0x0);
        gbc.writeMem(0x28fe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8e88);
        EXPECT(gbc.pc(), 0x28ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0155
        gbc.setState(0xd80c, 0xf21e, 0x6390, 0x1070, 0x901e, 0x79d3, 0x1, 0x0);
        gbc.writeMem(0xd80c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf21e);
        EXPECT(gbc.pc(), 0xd80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80c), 0x95);
        // 95 0156
        gbc.setState(0x4944, 0xd18, 0xf20, 0x996d, 0xd513, 0x3990, 0x1, 0x0);
        gbc.writeMem(0x4944, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xd18);
        EXPECT(gbc.pc(), 0x4945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0157
        gbc.setState(0x929c, 0x357f, 0xd860, 0x4c38, 0x4928, 0x88f8, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x357f);
        EXPECT(gbc.pc(), 0x929d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929c), 0x95);
        // 95 0159
        gbc.setState(0x5a45, 0x9ee8, 0x8fd0, 0x77eb, 0x6196, 0x5f88, 0x0, 0x1);
        gbc.writeMem(0x5a45, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9ee8);
        EXPECT(gbc.pc(), 0x5a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 015A
        gbc.setState(0xde6f, 0x1805, 0x6b70, 0x55e0, 0xe892, 0xf480, 0x1, 0x0);
        gbc.writeMem(0xde6f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1805);
        EXPECT(gbc.pc(), 0xde70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde6f), 0x95);
        // 95 015B
        gbc.setState(0x75b8, 0x741e, 0x6e10, 0xa0c4, 0xce6e, 0x8389, 0x1, 0x1);
        gbc.writeMem(0x75b8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x741e);
        EXPECT(gbc.pc(), 0x75b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 015C
        gbc.setState(0xd585, 0xda5e, 0xae80, 0x76f1, 0xee20, 0x3907, 0x0, 0x0);
        gbc.writeMem(0xd585, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xda5e);
        EXPECT(gbc.pc(), 0xd586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd585), 0x95);
        // 95 015D
        gbc.setState(0x2109, 0x1dc9, 0xbc0, 0x157c, 0xe21c, 0x71b7, 0x0, 0x1);
        gbc.writeMem(0x2109, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1dc9);
        EXPECT(gbc.pc(), 0x210a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 015E
        gbc.setState(0xe14, 0xa710, 0x3d80, 0xdbaa, 0xa3, 0xe4fe, 0x0, 0x0);
        gbc.writeMem(0xe14, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xa710);
        EXPECT(gbc.pc(), 0xe15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 015F
        gbc.setState(0xa61f, 0xf820, 0x5db0, 0xe0d4, 0x9e61, 0xdcfe, 0x0, 0x1);
        gbc.writeMem(0xa61f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf820);
        EXPECT(gbc.pc(), 0xa620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61f), 0x95);
        // 95 0160
        gbc.setState(0x220b, 0xe740, 0x2500, 0xdc97, 0x5846, 0x5707, 0x0, 0x0);
        gbc.writeMem(0x220b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe740);
        EXPECT(gbc.pc(), 0x220c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0161
        gbc.setState(0x95ce, 0xffaf, 0x7fe0, 0xec4d, 0xe918, 0x85d3, 0x0, 0x0);
        gbc.writeMem(0x95ce, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xffaf);
        EXPECT(gbc.pc(), 0x95cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ce), 0x95);
        // 95 0162
        gbc.setState(0xef40, 0xc28a, 0x3260, 0x2e7, 0xf8e7, 0x68f0, 0x1, 0x0);
        gbc.writeMem(0xef40, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc28a);
        EXPECT(gbc.pc(), 0xef41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef40), 0x95);
        // 95 0163
        gbc.setState(0xc86, 0xee48, 0xef10, 0x12ef, 0x431d, 0x8de4, 0x0, 0x1);
        gbc.writeMem(0xc86, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xee48);
        EXPECT(gbc.pc(), 0xc87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0165
        gbc.setState(0x75b9, 0xded9, 0xa710, 0x6fe4, 0x6843, 0x3890, 0x1, 0x0);
        gbc.writeMem(0x75b9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xded9);
        EXPECT(gbc.pc(), 0x75ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0166
        gbc.setState(0x20f1, 0xcd26, 0xc550, 0xc5a1, 0x646, 0xd1a8, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xcd26);
        EXPECT(gbc.pc(), 0x20f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0167
        gbc.setState(0x8033, 0x71c1, 0xfdb0, 0x87d7, 0xaf83, 0x4893, 0x1, 0x1);
        gbc.writeMem(0x8033, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x71c1);
        EXPECT(gbc.pc(), 0x8034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8033), 0x95);
        // 95 0168
        gbc.setState(0x43a, 0x954d, 0x5970, 0x94b, 0x85d7, 0xeebc, 0x1, 0x0);
        gbc.writeMem(0x43a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x954d);
        EXPECT(gbc.pc(), 0x43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0169
        gbc.setState(0x65d9, 0x7c11, 0xe170, 0x31f6, 0xaab0, 0x8318, 0x1, 0x1);
        gbc.writeMem(0x65d9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7c11);
        EXPECT(gbc.pc(), 0x65da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 016A
        gbc.setState(0xb5e8, 0x3fc2, 0x42b0, 0x6100, 0xa1d6, 0xa29d, 0x1, 0x1);
        gbc.writeMem(0xb5e8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3fc2);
        EXPECT(gbc.pc(), 0xb5e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5e8), 0x95);
        // 95 016B
        gbc.setState(0xcbbf, 0xa311, 0x7ed0, 0x3301, 0x72ad, 0x87b2, 0x1, 0x0);
        gbc.writeMem(0xcbbf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xa311);
        EXPECT(gbc.pc(), 0xcbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbbf), 0x95);
        // 95 016C
        gbc.setState(0x5cfe, 0xb745, 0x5360, 0x875f, 0x16be, 0x84be, 0x1, 0x1);
        gbc.writeMem(0x5cfe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb745);
        EXPECT(gbc.pc(), 0x5cff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 016D
        gbc.setState(0x68e3, 0x5c98, 0x66b0, 0x49fa, 0xf1fe, 0xce72, 0x0, 0x1);
        gbc.writeMem(0x68e3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5c98);
        EXPECT(gbc.pc(), 0x68e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 016E
        gbc.setState(0x4bb7, 0xad9a, 0x3700, 0xf614, 0x38e7, 0xdeee, 0x1, 0x1);
        gbc.writeMem(0x4bb7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xad9a);
        EXPECT(gbc.pc(), 0x4bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 016F
        gbc.setState(0x516d, 0xd788, 0xa1f0, 0x9306, 0x386, 0x9bcd, 0x0, 0x0);
        gbc.writeMem(0x516d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xd788);
        EXPECT(gbc.pc(), 0x516e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0170
        gbc.setState(0x842, 0x186, 0x1be0, 0x1b07, 0x8996, 0xf0ad, 0x0, 0x1);
        gbc.writeMem(0x842, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x186);
        EXPECT(gbc.pc(), 0x843);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0171
        gbc.setState(0xc997, 0x6799, 0x40, 0x2bbe, 0xea91, 0x35ea, 0x1, 0x1);
        gbc.writeMem(0xc997, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6799);
        EXPECT(gbc.pc(), 0xc998);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc997), 0x95);
        // 95 0172
        gbc.setState(0x98ff, 0xb9ee, 0xbc50, 0x1cc2, 0xa2fe, 0x9fcf, 0x0, 0x0);
        gbc.writeMem(0x98ff, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb9ee);
        EXPECT(gbc.pc(), 0x9900);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ff), 0x95);
        // 95 0173
        gbc.setState(0x5800, 0xf248, 0xe6f0, 0x6935, 0x78c8, 0xd623, 0x0, 0x0);
        gbc.writeMem(0x5800, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf248);
        EXPECT(gbc.pc(), 0x5801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0174
        gbc.setState(0x892a, 0xdead, 0x2410, 0x2be8, 0x23e1, 0x8121, 0x1, 0x1);
        gbc.writeMem(0x892a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xdead);
        EXPECT(gbc.pc(), 0x892b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892a), 0x95);
        // 95 0175
        gbc.setState(0x4fec, 0x7e24, 0x1c0, 0xbf6d, 0xb4c1, 0xa8ec, 0x0, 0x0);
        gbc.writeMem(0x4fec, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7e24);
        EXPECT(gbc.pc(), 0x4fed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0176
        gbc.setState(0x7754, 0x77c6, 0x6660, 0xdb61, 0x6add, 0xe2d1, 0x1, 0x1);
        gbc.writeMem(0x7754, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x77c6);
        EXPECT(gbc.pc(), 0x7755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0177
        gbc.setState(0xac5, 0x7b49, 0x55a0, 0x4b0a, 0xc689, 0xbbef, 0x1, 0x1);
        gbc.writeMem(0xac5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7b49);
        EXPECT(gbc.pc(), 0xac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0178
        gbc.setState(0x76d6, 0xe949, 0xbef0, 0xc188, 0xd10e, 0x2548, 0x1, 0x1);
        gbc.writeMem(0x76d6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe949);
        EXPECT(gbc.pc(), 0x76d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0179
        gbc.setState(0x8002, 0xbc2c, 0xd2c0, 0x145a, 0x45ec, 0x493b, 0x0, 0x0);
        gbc.writeMem(0x8002, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbc2c);
        EXPECT(gbc.pc(), 0x8003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8002), 0x95);
        // 95 017A
        gbc.setState(0x44eb, 0x5b8, 0xa4c0, 0x628a, 0x4713, 0xecb9, 0x0, 0x0);
        gbc.writeMem(0x44eb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5b8);
        EXPECT(gbc.pc(), 0x44ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 017B
        gbc.setState(0x59d5, 0xcc22, 0xb8a0, 0xb2fc, 0x7232, 0x6cf5, 0x1, 0x0);
        gbc.writeMem(0x59d5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xcc22);
        EXPECT(gbc.pc(), 0x59d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 017C
        gbc.setState(0x9baf, 0xa891, 0x5d90, 0xcff3, 0x7e34, 0xf9cd, 0x0, 0x1);
        gbc.writeMem(0x9baf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa891);
        EXPECT(gbc.pc(), 0x9bb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9baf), 0x95);
        // 95 017D
        gbc.setState(0xeb1c, 0x78f1, 0xcc00, 0x3886, 0xd9fb, 0xcd33, 0x0, 0x0);
        gbc.writeMem(0xeb1c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x78f1);
        EXPECT(gbc.pc(), 0xeb1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1c), 0x95);
        // 95 017E
        gbc.setState(0xadcd, 0x6136, 0xc7d0, 0xda8, 0xe4c3, 0xce7d, 0x0, 0x1);
        gbc.writeMem(0xadcd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x6136);
        EXPECT(gbc.pc(), 0xadce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadcd), 0x95);
        // 95 017F
        gbc.setState(0x7496, 0x2560, 0x1b30, 0x665, 0xe052, 0xd939, 0x0, 0x1);
        gbc.writeMem(0x7496, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2560);
        EXPECT(gbc.pc(), 0x7497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0180
        gbc.setState(0xed6, 0xc277, 0xf500, 0xa665, 0xd6a3, 0xfe34, 0x0, 0x0);
        gbc.writeMem(0xed6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc277);
        EXPECT(gbc.pc(), 0xed7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0181
        gbc.setState(0x2fe4, 0x339, 0x670, 0x3a54, 0x9819, 0x13c5, 0x0, 0x1);
        gbc.writeMem(0x2fe4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x339);
        EXPECT(gbc.pc(), 0x2fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0182
        gbc.setState(0x4fba, 0x793f, 0x8da0, 0x9f72, 0x47f4, 0xf88b, 0x0, 0x0);
        gbc.writeMem(0x4fba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x793f);
        EXPECT(gbc.pc(), 0x4fbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0183
        gbc.setState(0x80e7, 0x87f0, 0x2400, 0x6d96, 0xf433, 0x67af, 0x0, 0x0);
        gbc.writeMem(0x80e7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x87f0);
        EXPECT(gbc.pc(), 0x80e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80e7), 0x95);
        // 95 0184
        gbc.setState(0xb614, 0x2eba, 0xc760, 0x342f, 0x4ab6, 0xe63e, 0x1, 0x1);
        gbc.writeMem(0xb614, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2eba);
        EXPECT(gbc.pc(), 0xb615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb614), 0x95);
        // 95 0185
        gbc.setState(0x4fb5, 0xb2c2, 0x6980, 0x88d3, 0x604f, 0x6020, 0x0, 0x1);
        gbc.writeMem(0x4fb5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb2c2);
        EXPECT(gbc.pc(), 0x4fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0186
        gbc.setState(0x346f, 0x8a02, 0x3d30, 0x42dd, 0x8389, 0x6472, 0x0, 0x1);
        gbc.writeMem(0x346f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8a02);
        EXPECT(gbc.pc(), 0x3470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0187
        gbc.setState(0x2641, 0x9b5f, 0x7620, 0x71b2, 0x8df7, 0x4160, 0x0, 0x1);
        gbc.writeMem(0x2641, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9b5f);
        EXPECT(gbc.pc(), 0x2642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0188
        gbc.setState(0x59db, 0xeab1, 0xe540, 0xfc6c, 0x7020, 0x588e, 0x1, 0x1);
        gbc.writeMem(0x59db, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xeab1);
        EXPECT(gbc.pc(), 0x59dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0189
        gbc.setState(0x270e, 0xe298, 0xef30, 0x8419, 0xc7de, 0x7f3e, 0x1, 0x1);
        gbc.writeMem(0x270e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe298);
        EXPECT(gbc.pc(), 0x270f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 018A
        gbc.setState(0x92c3, 0x5784, 0x8890, 0x16ec, 0x3e13, 0xf65d, 0x0, 0x1);
        gbc.writeMem(0x92c3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5784);
        EXPECT(gbc.pc(), 0x92c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92c3), 0x95);
        // 95 018B
        gbc.setState(0x4802, 0x70e5, 0x1240, 0x7d48, 0xa983, 0x130c, 0x1, 0x0);
        gbc.writeMem(0x4802, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x70e5);
        EXPECT(gbc.pc(), 0x4803);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 018C
        gbc.setState(0xd551, 0xc5ae, 0x32c0, 0xa940, 0x3d0e, 0x9313, 0x1, 0x1);
        gbc.writeMem(0xd551, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc5ae);
        EXPECT(gbc.pc(), 0xd552);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd551), 0x95);
        // 95 018D
        gbc.setState(0xb77d, 0xda20, 0x43b0, 0x30be, 0x5ca5, 0x8fbc, 0x0, 0x0);
        gbc.writeMem(0xb77d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xda20);
        EXPECT(gbc.pc(), 0xb77e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb77d), 0x95);
        // 95 018E
        gbc.setState(0x790d, 0xc66, 0x8c40, 0xf703, 0x1246, 0x9b3e, 0x1, 0x0);
        gbc.writeMem(0x790d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc66);
        EXPECT(gbc.pc(), 0x790e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 018F
        gbc.setState(0x2157, 0x1fe1, 0x5310, 0xf2b, 0x1a8, 0x9a2b, 0x0, 0x1);
        gbc.writeMem(0x2157, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1fe1);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0190
        gbc.setState(0x3874, 0xacd3, 0x8cf0, 0x44be, 0xb7ce, 0xe020, 0x1, 0x1);
        gbc.writeMem(0x3874, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xacd3);
        EXPECT(gbc.pc(), 0x3875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0191
        gbc.setState(0xed36, 0xbf02, 0xe290, 0x4baf, 0x896c, 0x5d5b, 0x0, 0x0);
        gbc.writeMem(0xed36, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbf02);
        EXPECT(gbc.pc(), 0xed37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed36), 0x95);
        // 95 0192
        gbc.setState(0x4015, 0x69e0, 0x9600, 0x55c4, 0x305b, 0x7662, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x69e0);
        EXPECT(gbc.pc(), 0x4016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0193
        gbc.setState(0x4d29, 0x6c85, 0x78f0, 0xa433, 0x7fc9, 0x2cab, 0x0, 0x1);
        gbc.writeMem(0x4d29, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6c85);
        EXPECT(gbc.pc(), 0x4d2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0194
        gbc.setState(0x39b8, 0x82ac, 0xeef0, 0x6151, 0x8d1d, 0x2e4e, 0x1, 0x0);
        gbc.writeMem(0x39b8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x82ac);
        EXPECT(gbc.pc(), 0x39b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0195
        gbc.setState(0x424c, 0xabf5, 0xa0, 0x4aa0, 0x61c9, 0xce2, 0x0, 0x0);
        gbc.writeMem(0x424c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xabf5);
        EXPECT(gbc.pc(), 0x424d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0196
        gbc.setState(0x1112, 0x6fde, 0xcc00, 0x22c0, 0x8188, 0x7153, 0x1, 0x0);
        gbc.writeMem(0x1112, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6fde);
        EXPECT(gbc.pc(), 0x1113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0197
        gbc.setState(0xa239, 0x6afe, 0xed40, 0x5033, 0xe39e, 0x977, 0x0, 0x0);
        gbc.writeMem(0xa239, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6afe);
        EXPECT(gbc.pc(), 0xa23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa239), 0x95);
        // 95 0198
        gbc.setState(0x2e7b, 0xfdaf, 0x7e0, 0x35e1, 0xa157, 0xaafc, 0x0, 0x1);
        gbc.writeMem(0x2e7b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfdaf);
        EXPECT(gbc.pc(), 0x2e7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0199
        gbc.setState(0x1d6f, 0x14b3, 0xd010, 0x654d, 0x22d5, 0xfd18, 0x1, 0x1);
        gbc.writeMem(0x1d6f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x14b3);
        EXPECT(gbc.pc(), 0x1d70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 019A
        gbc.setState(0xad6d, 0x727e, 0x7930, 0x2bd, 0xe1cc, 0x97b6, 0x0, 0x1);
        gbc.writeMem(0xad6d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x727e);
        EXPECT(gbc.pc(), 0xad6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad6d), 0x95);
        // 95 019B
        gbc.setState(0x2cd7, 0x34ac, 0xa6e0, 0xdf1d, 0x10ff, 0x219d, 0x1, 0x1);
        gbc.writeMem(0x2cd7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x34ac);
        EXPECT(gbc.pc(), 0x2cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 019C
        gbc.setState(0x6eb1, 0x8eb2, 0x5b10, 0xe68b, 0x9a24, 0xf088, 0x1, 0x1);
        gbc.writeMem(0x6eb1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8eb2);
        EXPECT(gbc.pc(), 0x6eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 019D
        gbc.setState(0x8436, 0x2dda, 0x1370, 0x95a, 0x8f46, 0xc018, 0x0, 0x1);
        gbc.writeMem(0x8436, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2dda);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8436), 0x95);
        // 95 019E
        gbc.setState(0xca1f, 0x7687, 0x8ec0, 0x4c1f, 0x3c18, 0xa148, 0x0, 0x0);
        gbc.writeMem(0xca1f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7687);
        EXPECT(gbc.pc(), 0xca20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1f), 0x95);
        // 95 019F
        gbc.setState(0xe547, 0x9549, 0xdb00, 0x6180, 0x2d96, 0x89d8, 0x1, 0x1);
        gbc.writeMem(0xe547, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9549);
        EXPECT(gbc.pc(), 0xe548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe547), 0x95);
        // 95 01A0
        gbc.setState(0x421d, 0x50d3, 0x8900, 0x5ec7, 0x531d, 0xa6a0, 0x1, 0x1);
        gbc.writeMem(0x421d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x50d3);
        EXPECT(gbc.pc(), 0x421e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01A1
        gbc.setState(0x6009, 0xa7ea, 0x73f0, 0x670f, 0x8d45, 0x62aa, 0x1, 0x0);
        gbc.writeMem(0x6009, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa7ea);
        EXPECT(gbc.pc(), 0x600a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01A2
        gbc.setState(0x6d3a, 0xa2dd, 0xf4a0, 0x9e80, 0xd9f9, 0x7b58, 0x0, 0x0);
        gbc.writeMem(0x6d3a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa2dd);
        EXPECT(gbc.pc(), 0x6d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01A3
        gbc.setState(0xa5f, 0x7cdc, 0xb100, 0x8ed6, 0xa59c, 0xdd2, 0x1, 0x1);
        gbc.writeMem(0xa5f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7cdc);
        EXPECT(gbc.pc(), 0xa60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01A4
        gbc.setState(0x3189, 0xf40c, 0xb8e0, 0xf454, 0x790d, 0x7de7, 0x0, 0x1);
        gbc.writeMem(0x3189, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf40c);
        EXPECT(gbc.pc(), 0x318a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01A5
        gbc.setState(0x12f9, 0x9422, 0xb3e0, 0x8c22, 0x4492, 0xe59a, 0x1, 0x1);
        gbc.writeMem(0x12f9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9422);
        EXPECT(gbc.pc(), 0x12fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01A6
        gbc.setState(0x5c0b, 0x3d57, 0x5970, 0x178f, 0x687c, 0x8eb6, 0x0, 0x1);
        gbc.writeMem(0x5c0b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3d57);
        EXPECT(gbc.pc(), 0x5c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01A7
        gbc.setState(0xa77c, 0xaf28, 0xd230, 0x6b42, 0x3c51, 0x964, 0x0, 0x1);
        gbc.writeMem(0xa77c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xaf28);
        EXPECT(gbc.pc(), 0xa77d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa77c), 0x95);
        // 95 01A8
        gbc.setState(0xdfe, 0xbaba, 0xf7e0, 0x835e, 0x8149, 0x75c9, 0x0, 0x1);
        gbc.writeMem(0xdfe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbaba);
        EXPECT(gbc.pc(), 0xdff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01A9
        gbc.setState(0x4eb, 0x7fc, 0xfdf0, 0x8ccf, 0x327, 0x2e32, 0x0, 0x1);
        gbc.writeMem(0x4eb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7fc);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01AA
        gbc.setState(0xda9, 0x2207, 0x1910, 0xeaaf, 0x14e2, 0x9cbd, 0x1, 0x0);
        gbc.writeMem(0xda9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2207);
        EXPECT(gbc.pc(), 0xdaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01AB
        gbc.setState(0x5f4b, 0x584c, 0x8580, 0x3c22, 0xf915, 0x5862, 0x0, 0x1);
        gbc.writeMem(0x5f4b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x584c);
        EXPECT(gbc.pc(), 0x5f4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01AC
        gbc.setState(0x5db, 0xa669, 0x2a40, 0x142d, 0x7ffa, 0x3cc6, 0x0, 0x1);
        gbc.writeMem(0x5db, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa669);
        EXPECT(gbc.pc(), 0x5dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01AD
        gbc.setState(0x40e3, 0xbaa7, 0x8c80, 0x43d2, 0x864b, 0x1347, 0x0, 0x1);
        gbc.writeMem(0x40e3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xbaa7);
        EXPECT(gbc.pc(), 0x40e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01AE
        gbc.setState(0x91f6, 0x1ab2, 0xc930, 0xb2bc, 0xbb58, 0x47b1, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x1ab2);
        EXPECT(gbc.pc(), 0x91f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91f6), 0x95);
        // 95 01AF
        gbc.setState(0x626d, 0xee7b, 0x8430, 0x6bdf, 0x160f, 0xf767, 0x0, 0x1);
        gbc.writeMem(0x626d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xee7b);
        EXPECT(gbc.pc(), 0x626e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01B0
        gbc.setState(0xe1f8, 0xfa8, 0x5770, 0xbe25, 0x831, 0xa55, 0x0, 0x0);
        gbc.writeMem(0xe1f8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfa8);
        EXPECT(gbc.pc(), 0xe1f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f8), 0x95);
        // 95 01B1
        gbc.setState(0x93ce, 0x1f43, 0xb730, 0xa903, 0xccb6, 0x3a59, 0x1, 0x0);
        gbc.writeMem(0x93ce, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1f43);
        EXPECT(gbc.pc(), 0x93cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93ce), 0x95);
        // 95 01B2
        gbc.setState(0x9af5, 0xa7bf, 0x4ea0, 0xc8f1, 0xb3a5, 0x91a7, 0x1, 0x0);
        gbc.writeMem(0x9af5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa7bf);
        EXPECT(gbc.pc(), 0x9af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af5), 0x95);
        // 95 01B3
        gbc.setState(0xad82, 0x3fe0, 0x680, 0x960f, 0xa68c, 0xc881, 0x0, 0x0);
        gbc.writeMem(0xad82, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3fe0);
        EXPECT(gbc.pc(), 0xad83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad82), 0x95);
        // 95 01B4
        gbc.setState(0xc8dd, 0xe616, 0xc3b0, 0xcd65, 0x984d, 0xf31e, 0x1, 0x0);
        gbc.writeMem(0xc8dd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xe616);
        EXPECT(gbc.pc(), 0xc8de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8dd), 0x95);
        // 95 01B5
        gbc.setState(0x5239, 0x2105, 0x8220, 0xc82b, 0x5052, 0x9481, 0x1, 0x1);
        gbc.writeMem(0x5239, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2105);
        EXPECT(gbc.pc(), 0x523a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01B6
        gbc.setState(0xebc3, 0x2f58, 0xf280, 0xb108, 0x96f5, 0xb4b2, 0x0, 0x1);
        gbc.writeMem(0xebc3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x2f58);
        EXPECT(gbc.pc(), 0xebc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebc3), 0x95);
        // 95 01B7
        gbc.setState(0xbd1f, 0x4652, 0x8930, 0x72f, 0x8e31, 0xf98b, 0x0, 0x0);
        gbc.writeMem(0xbd1f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4652);
        EXPECT(gbc.pc(), 0xbd20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd1f), 0x95);
        // 95 01B8
        gbc.setState(0x61c6, 0x8e46, 0xd060, 0x1abd, 0x174d, 0xf6d5, 0x1, 0x0);
        gbc.writeMem(0x61c6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8e46);
        EXPECT(gbc.pc(), 0x61c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01B9
        gbc.setState(0x75f2, 0x17b3, 0xc0a0, 0x19d, 0x67a0, 0x82c7, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x17b3);
        EXPECT(gbc.pc(), 0x75f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01BA
        gbc.setState(0xc4a9, 0x59f5, 0x6210, 0x966c, 0x4a15, 0x585a, 0x1, 0x1);
        gbc.writeMem(0xc4a9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x59f5);
        EXPECT(gbc.pc(), 0xc4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a9), 0x95);
        // 95 01BB
        gbc.setState(0x4dab, 0x13d8, 0xb600, 0x3f15, 0x2201, 0xcd92, 0x1, 0x1);
        gbc.writeMem(0x4dab, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x13d8);
        EXPECT(gbc.pc(), 0x4dac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01BC
        gbc.setState(0x8b56, 0xfc85, 0x3fe0, 0xd863, 0xf9f4, 0x25f2, 0x1, 0x1);
        gbc.writeMem(0x8b56, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfc85);
        EXPECT(gbc.pc(), 0x8b57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b56), 0x95);
        // 95 01BD
        gbc.setState(0x8b4e, 0x7566, 0xd350, 0x94cc, 0xfc48, 0x8350, 0x1, 0x0);
        gbc.writeMem(0x8b4e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7566);
        EXPECT(gbc.pc(), 0x8b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4e), 0x95);
        // 95 01BE
        gbc.setState(0x19aa, 0xb4ed, 0x5360, 0x68e2, 0x4b82, 0xcc0a, 0x1, 0x1);
        gbc.writeMem(0x19aa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb4ed);
        EXPECT(gbc.pc(), 0x19ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01BF
        gbc.setState(0x3983, 0x3f0b, 0xa720, 0xdd2a, 0xee87, 0xd5b8, 0x0, 0x0);
        gbc.writeMem(0x3983, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3f0b);
        EXPECT(gbc.pc(), 0x3984);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01C0
        gbc.setState(0x5762, 0xefc3, 0x9d00, 0x5fe2, 0xe441, 0xe65c, 0x0, 0x1);
        gbc.writeMem(0x5762, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xefc3);
        EXPECT(gbc.pc(), 0x5763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01C2
        gbc.setState(0x708d, 0xb9fe, 0x99f0, 0x97ce, 0xc709, 0x2f94, 0x0, 0x1);
        gbc.writeMem(0x708d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb9fe);
        EXPECT(gbc.pc(), 0x708e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01C3
        gbc.setState(0xa44c, 0xec20, 0xbcd0, 0x4e8e, 0x588b, 0xd250, 0x0, 0x1);
        gbc.writeMem(0xa44c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xec20);
        EXPECT(gbc.pc(), 0xa44d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa44c), 0x95);
        // 95 01C4
        gbc.setState(0x669d, 0x7582, 0x8900, 0xc24c, 0x3edb, 0x128b, 0x0, 0x1);
        gbc.writeMem(0x669d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x7582);
        EXPECT(gbc.pc(), 0x669e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01C5
        gbc.setState(0x16c4, 0x6df9, 0x1510, 0xb4b7, 0x8da2, 0xbef1, 0x0, 0x0);
        gbc.writeMem(0x16c4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6df9);
        EXPECT(gbc.pc(), 0x16c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01C6
        gbc.setState(0x197b, 0xd6a9, 0xac70, 0x176f, 0x238a, 0xd764, 0x0, 0x1);
        gbc.writeMem(0x197b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xd6a9);
        EXPECT(gbc.pc(), 0x197c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01C7
        gbc.setState(0xe6f2, 0xe919, 0xd770, 0x12a8, 0x8953, 0x8c20, 0x1, 0x0);
        gbc.writeMem(0xe6f2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe919);
        EXPECT(gbc.pc(), 0xe6f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f2), 0x95);
        // 95 01C8
        gbc.setState(0x3e77, 0xf2d4, 0x1d0, 0xb233, 0xa145, 0xf4e3, 0x1, 0x0);
        gbc.writeMem(0x3e77, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf2d4);
        EXPECT(gbc.pc(), 0x3e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01C9
        gbc.setState(0x4e0f, 0x9999, 0x9cf0, 0x35d8, 0x7820, 0xa3ed, 0x0, 0x1);
        gbc.writeMem(0x4e0f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9999);
        EXPECT(gbc.pc(), 0x4e10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01CA
        gbc.setState(0x7039, 0x191a, 0x7790, 0xca64, 0x84b9, 0x7a5f, 0x0, 0x0);
        gbc.writeMem(0x7039, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x191a);
        EXPECT(gbc.pc(), 0x703a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01CB
        gbc.setState(0x52b7, 0x2596, 0x1cb0, 0x20c2, 0xcb14, 0xa9e2, 0x0, 0x0);
        gbc.writeMem(0x52b7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2596);
        EXPECT(gbc.pc(), 0x52b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01CC
        gbc.setState(0xe737, 0x7d83, 0x3110, 0x1cb, 0xe5f1, 0x695b, 0x1, 0x0);
        gbc.writeMem(0xe737, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x7d83);
        EXPECT(gbc.pc(), 0xe738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe737), 0x95);
        // 95 01CD
        gbc.setState(0x6107, 0x3e53, 0x7aa0, 0x4045, 0x60c8, 0xf82c, 0x0, 0x1);
        gbc.writeMem(0x6107, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x3e53);
        EXPECT(gbc.pc(), 0x6108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01CE
        gbc.setState(0x70ad, 0xb984, 0x91a0, 0x8f90, 0x7014, 0xad4a, 0x0, 0x0);
        gbc.writeMem(0x70ad, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xb984);
        EXPECT(gbc.pc(), 0x70ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01CF
        gbc.setState(0x47d7, 0x834d, 0xda00, 0x2c5b, 0x6a65, 0xd34, 0x1, 0x0);
        gbc.writeMem(0x47d7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x834d);
        EXPECT(gbc.pc(), 0x47d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01D0
        gbc.setState(0xc0d0, 0x26ad, 0x8bc0, 0x8dcc, 0x2eca, 0x480a, 0x0, 0x1);
        gbc.writeMem(0xc0d0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x26ad);
        EXPECT(gbc.pc(), 0xc0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d0), 0x95);
        // 95 01D1
        gbc.setState(0x2e2b, 0xede2, 0x5de0, 0xc5e6, 0x4033, 0xda75, 0x0, 0x0);
        gbc.writeMem(0x2e2b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xede2);
        EXPECT(gbc.pc(), 0x2e2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01D2
        gbc.setState(0x9f05, 0xd134, 0xf380, 0x24d3, 0xbac5, 0x125f, 0x0, 0x0);
        gbc.writeMem(0x9f05, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd134);
        EXPECT(gbc.pc(), 0x9f06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f05), 0x95);
        // 95 01D3
        gbc.setState(0x4ebb, 0x7f68, 0x8ba0, 0x77ae, 0x2c5c, 0xebaa, 0x1, 0x1);
        gbc.writeMem(0x4ebb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7f68);
        EXPECT(gbc.pc(), 0x4ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01D4
        gbc.setState(0xd13f, 0x989d, 0x44b0, 0x9536, 0x7fa6, 0xcd2e, 0x0, 0x0);
        gbc.writeMem(0xd13f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x989d);
        EXPECT(gbc.pc(), 0xd140);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd13f), 0x95);
        // 95 01D5
        gbc.setState(0x4016, 0x82ca, 0x2950, 0xa33, 0xd29d, 0xc54a, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0x4017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01D6
        gbc.setState(0x66cf, 0x9976, 0x1b10, 0x5b12, 0x9c2f, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x66cf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9976);
        EXPECT(gbc.pc(), 0x66d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01D7
        gbc.setState(0xab23, 0xe7e0, 0x890, 0xe7ad, 0x6baa, 0x8476, 0x1, 0x1);
        gbc.writeMem(0xab23, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe7e0);
        EXPECT(gbc.pc(), 0xab24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab23), 0x95);
        // 95 01D8
        gbc.setState(0x6168, 0xce1a, 0x44e0, 0x18af, 0xf364, 0x9228, 0x1, 0x0);
        gbc.writeMem(0x6168, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xce1a);
        EXPECT(gbc.pc(), 0x6169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01D9
        gbc.setState(0xa0d3, 0xe87e, 0x4e00, 0x9e18, 0xd44d, 0x3bc9, 0x1, 0x0);
        gbc.writeMem(0xa0d3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0xa0d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d3), 0x95);
        // 95 01DA
        gbc.setState(0xa227, 0x902b, 0x1bc0, 0x5c06, 0x1c00, 0x154e, 0x0, 0x0);
        gbc.writeMem(0xa227, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x902b);
        EXPECT(gbc.pc(), 0xa228);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa227), 0x95);
        // 95 01DB
        gbc.setState(0x5beb, 0xb179, 0x6fe0, 0xb456, 0x5c57, 0x4df6, 0x1, 0x1);
        gbc.writeMem(0x5beb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb179);
        EXPECT(gbc.pc(), 0x5bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01DC
        gbc.setState(0x431f, 0x6a31, 0x6c30, 0x46c2, 0x7609, 0x3c92, 0x1, 0x1);
        gbc.writeMem(0x431f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6a31);
        EXPECT(gbc.pc(), 0x4320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01DD
        gbc.setState(0xd6b6, 0x6455, 0x77f0, 0xbbd6, 0xfe97, 0x6259, 0x1, 0x0);
        gbc.writeMem(0xd6b6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6455);
        EXPECT(gbc.pc(), 0xd6b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b6), 0x95);
        // 95 01DE
        gbc.setState(0xd7dd, 0x98e2, 0x4930, 0xab33, 0x4a48, 0xbd19, 0x1, 0x0);
        gbc.writeMem(0xd7dd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x98e2);
        EXPECT(gbc.pc(), 0xd7de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7dd), 0x95);
        // 95 01DF
        gbc.setState(0x91f6, 0x436a, 0x3900, 0x5c3c, 0x8f90, 0x9b90, 0x0, 0x1);
        gbc.writeMem(0x91f6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x436a);
        EXPECT(gbc.pc(), 0x91f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f6), 0x95);
        // 95 01E0
        gbc.setState(0xb719, 0x35b7, 0xc520, 0xf9a7, 0x8c9f, 0x1fbe, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x35b7);
        EXPECT(gbc.pc(), 0xb71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb719), 0x95);
        // 95 01E1
        gbc.setState(0x1091, 0x7dbb, 0x3cc0, 0x542d, 0x536e, 0x2bb0, 0x0, 0x0);
        gbc.writeMem(0x1091, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7dbb);
        EXPECT(gbc.pc(), 0x1092);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01E2
        gbc.setState(0x8f64, 0x6799, 0xa50, 0x7291, 0x3dd0, 0x8dbb, 0x1, 0x1);
        gbc.writeMem(0x8f64, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6799);
        EXPECT(gbc.pc(), 0x8f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f64), 0x95);
        // 95 01E3
        gbc.setState(0x45c2, 0x7020, 0x89d0, 0x2847, 0xe148, 0x856c, 0x1, 0x0);
        gbc.writeMem(0x45c2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7020);
        EXPECT(gbc.pc(), 0x45c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 01E4
        gbc.setState(0xdc15, 0xe470, 0x9330, 0x688a, 0xfbd5, 0x5d5a, 0x0, 0x0);
        gbc.writeMem(0xdc15, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe470);
        EXPECT(gbc.pc(), 0xdc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc15), 0x95);
        // 95 01E5
        gbc.setState(0xea73, 0xf7f1, 0x3a60, 0xfbdc, 0xd42e, 0x3533, 0x0, 0x1);
        gbc.writeMem(0xea73, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xf7f1);
        EXPECT(gbc.pc(), 0xea74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea73), 0x95);
        // 95 01E6
        gbc.setState(0xde62, 0x3090, 0x45d0, 0x972f, 0x5b85, 0x44f2, 0x0, 0x0);
        gbc.writeMem(0xde62, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3090);
        EXPECT(gbc.pc(), 0xde63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde62), 0x95);
        // 95 01E8
        gbc.setState(0x4ba2, 0x729f, 0x5350, 0x677, 0xd065, 0xfacb, 0x0, 0x0);
        gbc.writeMem(0x4ba2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x729f);
        EXPECT(gbc.pc(), 0x4ba3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01E9
        gbc.setState(0x9a3f, 0x4462, 0xbc10, 0x764e, 0xcc0, 0xe599, 0x0, 0x0);
        gbc.writeMem(0x9a3f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4462);
        EXPECT(gbc.pc(), 0x9a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3f), 0x95);
        // 95 01EA
        gbc.setState(0xeda3, 0x2830, 0xa180, 0xf6e3, 0x12e7, 0x341d, 0x0, 0x0);
        gbc.writeMem(0xeda3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2830);
        EXPECT(gbc.pc(), 0xeda4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda3), 0x95);
        // 95 01EB
        gbc.setState(0xae09, 0x5a9e, 0x36b0, 0xef5f, 0x287c, 0x5834, 0x0, 0x1);
        gbc.writeMem(0xae09, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5a9e);
        EXPECT(gbc.pc(), 0xae0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae09), 0x95);
        // 95 01EC
        gbc.setState(0x917d, 0x8d92, 0xee30, 0x74e, 0x45c9, 0x95bc, 0x0, 0x0);
        gbc.writeMem(0x917d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0x917e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917d), 0x95);
        // 95 01ED
        gbc.setState(0x5666, 0xbf8b, 0xfc30, 0xe1f6, 0x17ac, 0xb60a, 0x0, 0x1);
        gbc.writeMem(0x5666, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbf8b);
        EXPECT(gbc.pc(), 0x5667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01EE
        gbc.setState(0xa806, 0xd412, 0x8c10, 0x43e2, 0x8514, 0x610d, 0x0, 0x0);
        gbc.writeMem(0xa806, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd412);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa806), 0x95);
        // 95 01EF
        gbc.setState(0x2065, 0xa743, 0xc6f0, 0x1ac, 0xde17, 0xa02, 0x0, 0x1);
        gbc.writeMem(0x2065, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xa743);
        EXPECT(gbc.pc(), 0x2066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 01F1
        gbc.setState(0x41f3, 0xfe1c, 0x6d10, 0x8e39, 0xc6e1, 0x7d76, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfe1c);
        EXPECT(gbc.pc(), 0x41f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01F2
        gbc.setState(0x487b, 0x5e2a, 0xc650, 0xbe1f, 0xe348, 0x41d9, 0x0, 0x1);
        gbc.writeMem(0x487b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5e2a);
        EXPECT(gbc.pc(), 0x487c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01F3
        gbc.setState(0xd5e8, 0xfbe9, 0xc220, 0x2eab, 0x416c, 0x6b38, 0x0, 0x0);
        gbc.writeMem(0xd5e8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0xd5e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5e8), 0x95);
        // 95 01F4
        gbc.setState(0x8194, 0x50f8, 0x1bb0, 0x7090, 0xfe96, 0x1dee, 0x1, 0x1);
        gbc.writeMem(0x8194, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x50f8);
        EXPECT(gbc.pc(), 0x8195);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8194), 0x95);
        // 95 01F5
        gbc.setState(0x56de, 0x99f7, 0x88c0, 0xc413, 0x46f, 0x8f94, 0x0, 0x1);
        gbc.writeMem(0x56de, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x99f7);
        EXPECT(gbc.pc(), 0x56df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01F6
        gbc.setState(0x2b49, 0x1bfc, 0x6c0, 0x1626, 0xa090, 0x5929, 0x0, 0x0);
        gbc.writeMem(0x2b49, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1bfc);
        EXPECT(gbc.pc(), 0x2b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01F7
        gbc.setState(0xac57, 0xab9e, 0xd7c0, 0x171a, 0xed1c, 0xb577, 0x1, 0x0);
        gbc.writeMem(0xac57, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xab9e);
        EXPECT(gbc.pc(), 0xac58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac57), 0x95);
        // 95 01F8
        gbc.setState(0xcc47, 0xf519, 0xc4b0, 0xe6eb, 0x5875, 0x331e, 0x0, 0x1);
        gbc.writeMem(0xcc47, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf519);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc47), 0x95);
        // 95 01F9
        gbc.setState(0x6a23, 0x58ae, 0xc120, 0x2083, 0x43ef, 0x76c8, 0x0, 0x1);
        gbc.writeMem(0x6a23, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x58ae);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01FA
        gbc.setState(0x2f26, 0xf88f, 0x2a90, 0x19b5, 0x18bc, 0xd366, 0x0, 0x0);
        gbc.writeMem(0x2f26, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf88f);
        EXPECT(gbc.pc(), 0x2f27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 01FB
        gbc.setState(0xb8dd, 0x1503, 0x4150, 0x9698, 0x1ad9, 0xc4ac, 0x0, 0x1);
        gbc.writeMem(0xb8dd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1503);
        EXPECT(gbc.pc(), 0xb8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8dd), 0x95);
        // 95 01FC
        gbc.setState(0xa411, 0x3655, 0x3280, 0x7bbc, 0x83e, 0xf074, 0x1, 0x0);
        gbc.writeMem(0xa411, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3655);
        EXPECT(gbc.pc(), 0xa412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa411), 0x95);
        // 95 01FD
        gbc.setState(0x6876, 0xdf8f, 0x3c90, 0xe107, 0x3c4e, 0xc89d, 0x1, 0x0);
        gbc.writeMem(0x6876, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xdf8f);
        EXPECT(gbc.pc(), 0x6877);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01FE
        gbc.setState(0x369c, 0x76e1, 0x18e0, 0x8ee4, 0x92f4, 0xd9f, 0x0, 0x1);
        gbc.writeMem(0x369c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x76e1);
        EXPECT(gbc.pc(), 0x369d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 01FF
        gbc.setState(0x375f, 0x9d6c, 0x5a10, 0x1da7, 0xb68a, 0x725d, 0x1, 0x1);
        gbc.writeMem(0x375f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9d6c);
        EXPECT(gbc.pc(), 0x3760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0200
        gbc.setState(0x78fd, 0xf9, 0xe9c0, 0x4c73, 0x79b6, 0x6254, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf9);
        EXPECT(gbc.pc(), 0x78fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0201
        gbc.setState(0xdf10, 0x39b5, 0x5420, 0x4e53, 0x3165, 0xc43b, 0x0, 0x0);
        gbc.writeMem(0xdf10, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x39b5);
        EXPECT(gbc.pc(), 0xdf11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf10), 0x95);
        // 95 0202
        gbc.setState(0xee9a, 0x4f9d, 0xd810, 0xf8aa, 0xdfd1, 0x2739, 0x1, 0x0);
        gbc.writeMem(0xee9a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4f9d);
        EXPECT(gbc.pc(), 0xee9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9a), 0x95);
        // 95 0203
        gbc.setState(0x6066, 0xc563, 0xe800, 0x4cdb, 0x2ade, 0xfa8c, 0x1, 0x0);
        gbc.writeMem(0x6066, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xc563);
        EXPECT(gbc.pc(), 0x6067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0204
        gbc.setState(0x4b59, 0x448b, 0x2740, 0xa3eb, 0xf5bd, 0xb3e7, 0x1, 0x1);
        gbc.writeMem(0x4b59, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x448b);
        EXPECT(gbc.pc(), 0x4b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0205
        gbc.setState(0x3675, 0xf614, 0x56e0, 0xd919, 0x7869, 0x53d8, 0x1, 0x0);
        gbc.writeMem(0x3675, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf614);
        EXPECT(gbc.pc(), 0x3676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0206
        gbc.setState(0xc45a, 0xd3d7, 0x5770, 0x4dcc, 0xbe25, 0x93d7, 0x1, 0x1);
        gbc.writeMem(0xc45a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd3d7);
        EXPECT(gbc.pc(), 0xc45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45a), 0x95);
        // 95 0207
        gbc.setState(0xe66b, 0x6a80, 0x1840, 0x8df8, 0x9e2f, 0x18e8, 0x1, 0x1);
        gbc.writeMem(0xe66b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6a80);
        EXPECT(gbc.pc(), 0xe66c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66b), 0x95);
        // 95 0208
        gbc.setState(0x596a, 0xdd56, 0x21e0, 0xc464, 0x8ca, 0x560e, 0x0, 0x0);
        gbc.writeMem(0x596a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xdd56);
        EXPECT(gbc.pc(), 0x596b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0209
        gbc.setState(0x2915, 0x1e3c, 0x8d90, 0x2f8d, 0xc976, 0x4cb5, 0x0, 0x0);
        gbc.writeMem(0x2915, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1e3c);
        EXPECT(gbc.pc(), 0x2916);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 020A
        gbc.setState(0xce66, 0x3e1d, 0x5c40, 0x17ee, 0xe970, 0x21f0, 0x1, 0x1);
        gbc.writeMem(0xce66, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3e1d);
        EXPECT(gbc.pc(), 0xce67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce66), 0x95);
        // 95 020B
        gbc.setState(0xeb6a, 0xcb0e, 0xe630, 0xc880, 0x58dd, 0x1d90, 0x1, 0x1);
        gbc.writeMem(0xeb6a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xcb0e);
        EXPECT(gbc.pc(), 0xeb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb6a), 0x95);
        // 95 020C
        gbc.setState(0xc1b9, 0x51d5, 0xa770, 0xa4fa, 0xa4f, 0x685d, 0x1, 0x1);
        gbc.writeMem(0xc1b9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x51d5);
        EXPECT(gbc.pc(), 0xc1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b9), 0x95);
        // 95 020D
        gbc.setState(0xcf6f, 0x9311, 0xd60, 0x7ac5, 0xb290, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0xcf6f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9311);
        EXPECT(gbc.pc(), 0xcf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6f), 0x95);
        // 95 020E
        gbc.setState(0x6335, 0x5487, 0xc120, 0xd9ef, 0xccb7, 0x83ad, 0x1, 0x1);
        gbc.writeMem(0x6335, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x5487);
        EXPECT(gbc.pc(), 0x6336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0210
        gbc.setState(0x948e, 0x4a6b, 0xc70, 0xcb9, 0x678a, 0xbb01, 0x0, 0x1);
        gbc.writeMem(0x948e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4a6b);
        EXPECT(gbc.pc(), 0x948f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948e), 0x95);
        // 95 0211
        gbc.setState(0xecc1, 0x96a6, 0xc980, 0x448f, 0xcda8, 0xa9a9, 0x0, 0x0);
        gbc.writeMem(0xecc1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x96a6);
        EXPECT(gbc.pc(), 0xecc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc1), 0x95);
        // 95 0212
        gbc.setState(0x942c, 0xe358, 0x3f20, 0x2d51, 0xecd8, 0xace3, 0x1, 0x1);
        gbc.writeMem(0x942c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0x942d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942c), 0x95);
        // 95 0213
        gbc.setState(0xd4c, 0x6417, 0xc2d0, 0x29a, 0xb876, 0x3960, 0x0, 0x0);
        gbc.writeMem(0xd4c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6417);
        EXPECT(gbc.pc(), 0xd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0214
        gbc.setState(0x3af9, 0x6971, 0x3730, 0x9a21, 0xc72c, 0xc578, 0x0, 0x0);
        gbc.writeMem(0x3af9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x6971);
        EXPECT(gbc.pc(), 0x3afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0215
        gbc.setState(0x4620, 0x43e9, 0x6b60, 0x32ec, 0x72aa, 0x2b51, 0x1, 0x0);
        gbc.writeMem(0x4620, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x4621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0216
        gbc.setState(0xdb14, 0x4545, 0x7530, 0x4e18, 0xfbc5, 0x806c, 0x0, 0x1);
        gbc.writeMem(0xdb14, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4545);
        EXPECT(gbc.pc(), 0xdb15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb14), 0x95);
        // 95 0219
        gbc.setState(0x874a, 0xd54d, 0x3410, 0x11d1, 0xa163, 0xe81, 0x0, 0x0);
        gbc.writeMem(0x874a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd54d);
        EXPECT(gbc.pc(), 0x874b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x874a), 0x95);
        // 95 021A
        gbc.setState(0x6ad, 0xebb8, 0x94b0, 0x1067, 0xd53f, 0x6460, 0x0, 0x1);
        gbc.writeMem(0x6ad, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xebb8);
        EXPECT(gbc.pc(), 0x6ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 021B
        gbc.setState(0x348e, 0x3387, 0x51f0, 0x708c, 0x795a, 0x1019, 0x1, 0x0);
        gbc.writeMem(0x348e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3387);
        EXPECT(gbc.pc(), 0x348f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 021C
        gbc.setState(0x62c2, 0x9a2d, 0x2e80, 0xd0b9, 0xd9ee, 0xefe5, 0x0, 0x1);
        gbc.writeMem(0x62c2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9a2d);
        EXPECT(gbc.pc(), 0x62c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 021D
        gbc.setState(0x4d4e, 0x74f6, 0x6da0, 0xcbc5, 0xbe6a, 0x7ad, 0x0, 0x0);
        gbc.writeMem(0x4d4e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x74f6);
        EXPECT(gbc.pc(), 0x4d4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 021E
        gbc.setState(0x56c2, 0xf80, 0x1e30, 0x8d57, 0x23e4, 0x4fe2, 0x1, 0x0);
        gbc.writeMem(0x56c2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf80);
        EXPECT(gbc.pc(), 0x56c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 021F
        gbc.setState(0xb0b5, 0xd974, 0x6ce0, 0x138c, 0x99a2, 0x65bf, 0x1, 0x0);
        gbc.writeMem(0xb0b5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd974);
        EXPECT(gbc.pc(), 0xb0b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0b5), 0x95);
        // 95 0220
        gbc.setState(0xdb59, 0xf53d, 0xb350, 0x8f11, 0x5d22, 0x6c0c, 0x1, 0x1);
        gbc.writeMem(0xdb59, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xf53d);
        EXPECT(gbc.pc(), 0xdb5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb59), 0x95);
        // 95 0221
        gbc.setState(0x2f80, 0xb56e, 0x3a0, 0xec6f, 0x5b4a, 0xa9ef, 0x1, 0x0);
        gbc.writeMem(0x2f80, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xb56e);
        EXPECT(gbc.pc(), 0x2f81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0222
        gbc.setState(0xe373, 0x5db8, 0x5c0, 0x3ae7, 0xce19, 0xd986, 0x1, 0x1);
        gbc.writeMem(0xe373, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5db8);
        EXPECT(gbc.pc(), 0xe374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe373), 0x95);
        // 95 0223
        gbc.setState(0xe0ac, 0xdb6f, 0x5000, 0x2933, 0xc8a6, 0x1588, 0x1, 0x0);
        gbc.writeMem(0xe0ac, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdb6f);
        EXPECT(gbc.pc(), 0xe0ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ac), 0x95);
        // 95 0224
        gbc.setState(0xc1f1, 0x46e8, 0x1780, 0xb003, 0x77a5, 0xc119, 0x0, 0x0);
        gbc.writeMem(0xc1f1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x46e8);
        EXPECT(gbc.pc(), 0xc1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f1), 0x95);
        // 95 0225
        gbc.setState(0xbc3c, 0x5cc1, 0x4230, 0x8eca, 0x9d37, 0xb2de, 0x0, 0x0);
        gbc.writeMem(0xbc3c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5cc1);
        EXPECT(gbc.pc(), 0xbc3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3c), 0x95);
        // 95 0227
        gbc.setState(0x9e71, 0xde0, 0xd880, 0x550e, 0xe69, 0x49b3, 0x0, 0x0);
        gbc.writeMem(0x9e71, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xde0);
        EXPECT(gbc.pc(), 0x9e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e71), 0x95);
        // 95 0228
        gbc.setState(0x5e7c, 0x6c27, 0xb980, 0x1961, 0xb7d4, 0x100e, 0x0, 0x0);
        gbc.writeMem(0x5e7c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6c27);
        EXPECT(gbc.pc(), 0x5e7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0229
        gbc.setState(0x7fbf, 0xd8d9, 0xbf90, 0xbe8a, 0xe5a1, 0x864a, 0x1, 0x1);
        gbc.writeMem(0x7fbf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd8d9);
        EXPECT(gbc.pc(), 0x7fc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 022A
        gbc.setState(0x7022, 0xab50, 0x56d0, 0xdfeb, 0xd0ce, 0xf111, 0x1, 0x1);
        gbc.writeMem(0x7022, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xab50);
        EXPECT(gbc.pc(), 0x7023);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 022B
        gbc.setState(0x8205, 0xb87f, 0xd880, 0xb2b, 0xa7df, 0x9fc9, 0x1, 0x1);
        gbc.writeMem(0x8205, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb87f);
        EXPECT(gbc.pc(), 0x8206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8205), 0x95);
        // 95 022C
        gbc.setState(0x92f0, 0x493c, 0x8620, 0xc4d, 0x145a, 0x7978, 0x1, 0x1);
        gbc.writeMem(0x92f0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x493c);
        EXPECT(gbc.pc(), 0x92f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92f0), 0x95);
        // 95 022D
        gbc.setState(0x6ab, 0x59ac, 0xa790, 0x6170, 0xfd90, 0x35f8, 0x0, 0x1);
        gbc.writeMem(0x6ab, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x59ac);
        EXPECT(gbc.pc(), 0x6ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 022E
        gbc.setState(0x3ba0, 0xa741, 0x830, 0x2c80, 0xe687, 0x838a, 0x0, 0x0);
        gbc.writeMem(0x3ba0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa741);
        EXPECT(gbc.pc(), 0x3ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 022F
        gbc.setState(0xedea, 0x9c85, 0x5a40, 0xbbf6, 0xaa80, 0x5ae5, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0xedeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedea), 0x95);
        // 95 0230
        gbc.setState(0xd227, 0x3742, 0xe240, 0xd312, 0x82a6, 0x625c, 0x1, 0x0);
        gbc.writeMem(0xd227, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3742);
        EXPECT(gbc.pc(), 0xd228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd227), 0x95);
        // 95 0232
        gbc.setState(0x5ee2, 0xc97c, 0x99c0, 0xe87c, 0xa006, 0x6328, 0x1, 0x0);
        gbc.writeMem(0x5ee2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc97c);
        EXPECT(gbc.pc(), 0x5ee3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0234
        gbc.setState(0x642f, 0x3b04, 0x5990, 0xb5b2, 0xd49a, 0xc267, 0x1, 0x0);
        gbc.writeMem(0x642f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0x6430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0235
        gbc.setState(0x843, 0x840c, 0x3600, 0xa4e9, 0xf55e, 0x6f46, 0x1, 0x0);
        gbc.writeMem(0x843, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x840c);
        EXPECT(gbc.pc(), 0x844);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0236
        gbc.setState(0x6e11, 0xc461, 0x8550, 0x91c, 0xb55c, 0xc3ec, 0x0, 0x1);
        gbc.writeMem(0x6e11, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc461);
        EXPECT(gbc.pc(), 0x6e12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0237
        gbc.setState(0x5154, 0x6f1a, 0xc8d0, 0xa73, 0xbb7f, 0xcac2, 0x0, 0x1);
        gbc.writeMem(0x5154, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6f1a);
        EXPECT(gbc.pc(), 0x5155);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0238
        gbc.setState(0x8b2, 0xb4a6, 0xde80, 0xd2cc, 0x3f71, 0xbde6, 0x1, 0x0);
        gbc.writeMem(0x8b2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb4a6);
        EXPECT(gbc.pc(), 0x8b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0239
        gbc.setState(0xc83f, 0x28e9, 0x65b0, 0x204c, 0x152e, 0x1507, 0x1, 0x1);
        gbc.writeMem(0xc83f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x28e9);
        EXPECT(gbc.pc(), 0xc840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83f), 0x95);
        // 95 023A
        gbc.setState(0x54de, 0xffa8, 0x5eb0, 0xea5, 0x9624, 0xa0bf, 0x0, 0x1);
        gbc.writeMem(0x54de, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xffa8);
        EXPECT(gbc.pc(), 0x54df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 023B
        gbc.setState(0x77eb, 0xcf0f, 0xf150, 0x1639, 0xb53f, 0x7063, 0x0, 0x0);
        gbc.writeMem(0x77eb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xcf0f);
        EXPECT(gbc.pc(), 0x77ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 023C
        gbc.setState(0xadf0, 0x9271, 0xf80, 0x8e2f, 0x41cc, 0x5caa, 0x1, 0x0);
        gbc.writeMem(0xadf0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x9271);
        EXPECT(gbc.pc(), 0xadf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf0), 0x95);
        // 95 023D
        gbc.setState(0xb30d, 0xc0e2, 0x3790, 0xa1a0, 0xcae5, 0x807b, 0x0, 0x1);
        gbc.writeMem(0xb30d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc0e2);
        EXPECT(gbc.pc(), 0xb30e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30d), 0x95);
        // 95 023E
        gbc.setState(0x3e89, 0xa466, 0xb010, 0x415c, 0xf60a, 0x36c, 0x1, 0x1);
        gbc.writeMem(0x3e89, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa466);
        EXPECT(gbc.pc(), 0x3e8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 023F
        gbc.setState(0x71c3, 0x14ea, 0x9ea0, 0x9ba1, 0x3c6f, 0xb65a, 0x0, 0x0);
        gbc.writeMem(0x71c3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x14ea);
        EXPECT(gbc.pc(), 0x71c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0240
        gbc.setState(0x8fe9, 0x77b5, 0x4d40, 0x7085, 0x2fd0, 0x2c4b, 0x0, 0x1);
        gbc.writeMem(0x8fe9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x77b5);
        EXPECT(gbc.pc(), 0x8fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe9), 0x95);
        // 95 0242
        gbc.setState(0xeb74, 0x5e1e, 0x2b0, 0xd3b8, 0x9bed, 0x70b4, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5e1e);
        EXPECT(gbc.pc(), 0xeb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb74), 0x95);
        // 95 0243
        gbc.setState(0xb549, 0x6782, 0x84b0, 0xafde, 0xb277, 0x8a8a, 0x1, 0x1);
        gbc.writeMem(0xb549, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6782);
        EXPECT(gbc.pc(), 0xb54a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb549), 0x95);
        // 95 0244
        gbc.setState(0x59eb, 0x128f, 0xfd90, 0xa377, 0xfcc9, 0xaded, 0x1, 0x0);
        gbc.writeMem(0x59eb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x128f);
        EXPECT(gbc.pc(), 0x59ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0245
        gbc.setState(0x83a6, 0xd075, 0xb9d0, 0x263b, 0x74b2, 0x314e, 0x0, 0x0);
        gbc.writeMem(0x83a6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd075);
        EXPECT(gbc.pc(), 0x83a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a6), 0x95);
        // 95 0246
        gbc.setState(0x3a50, 0x7356, 0xd3a0, 0x6b95, 0x80b3, 0x2b7d, 0x0, 0x0);
        gbc.writeMem(0x3a50, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7356);
        EXPECT(gbc.pc(), 0x3a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0247
        gbc.setState(0xd9e, 0xedfb, 0x2310, 0x1618, 0xfce0, 0x20fa, 0x0, 0x1);
        gbc.writeMem(0xd9e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xedfb);
        EXPECT(gbc.pc(), 0xd9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0248
        gbc.setState(0xce99, 0xf305, 0xc6b0, 0x3b69, 0x6b32, 0x8b0d, 0x0, 0x1);
        gbc.writeMem(0xce99, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xf305);
        EXPECT(gbc.pc(), 0xce9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce99), 0x95);
        // 95 0249
        gbc.setState(0x3d53, 0xacb2, 0xe9c0, 0xe359, 0x689e, 0x5c5c, 0x0, 0x0);
        gbc.writeMem(0x3d53, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xacb2);
        EXPECT(gbc.pc(), 0x3d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 024A
        gbc.setState(0xe2, 0x516c, 0x2e10, 0x22ad, 0x9e50, 0xef62, 0x1, 0x1);
        gbc.writeMem(0xe2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x516c);
        EXPECT(gbc.pc(), 0xe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 024B
        gbc.setState(0x7bc6, 0xd4b7, 0x4c60, 0xae76, 0x64bd, 0xee51, 0x1, 0x1);
        gbc.writeMem(0x7bc6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd4b7);
        EXPECT(gbc.pc(), 0x7bc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 024C
        gbc.setState(0x942, 0x690a, 0x5a20, 0xba33, 0x63e9, 0x4e62, 0x0, 0x0);
        gbc.writeMem(0x942, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x690a);
        EXPECT(gbc.pc(), 0x943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 024D
        gbc.setState(0xe5fe, 0xe5c5, 0x710, 0x2ccb, 0x4489, 0xfae7, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe5c5);
        EXPECT(gbc.pc(), 0xe5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fe), 0x95);
        // 95 024E
        gbc.setState(0x451a, 0x954a, 0x75a0, 0xcb10, 0x47cf, 0x3ff, 0x1, 0x1);
        gbc.writeMem(0x451a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x954a);
        EXPECT(gbc.pc(), 0x451b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 024F
        gbc.setState(0xdd38, 0x6b0f, 0xf560, 0xcb1b, 0x416c, 0xa3f3, 0x0, 0x1);
        gbc.writeMem(0xdd38, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6b0f);
        EXPECT(gbc.pc(), 0xdd39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd38), 0x95);
        // 95 0251
        gbc.setState(0x85cb, 0x17e, 0x9600, 0x310e, 0xf57b, 0xd36b, 0x0, 0x0);
        gbc.writeMem(0x85cb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x17e);
        EXPECT(gbc.pc(), 0x85cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cb), 0x95);
        // 95 0252
        gbc.setState(0x17d4, 0xcdcf, 0xcf50, 0x96e2, 0x5cd1, 0x83e1, 0x1, 0x1);
        gbc.writeMem(0x17d4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcdcf);
        EXPECT(gbc.pc(), 0x17d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0253
        gbc.setState(0x4744, 0x87b0, 0xf6b0, 0x1882, 0xa3c0, 0x14e7, 0x0, 0x0);
        gbc.writeMem(0x4744, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x87b0);
        EXPECT(gbc.pc(), 0x4745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0254
        gbc.setState(0x30b0, 0xbef8, 0xe070, 0x50fb, 0xbf20, 0x1815, 0x0, 0x1);
        gbc.writeMem(0x30b0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbef8);
        EXPECT(gbc.pc(), 0x30b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0255
        gbc.setState(0xe276, 0x9c9, 0x9640, 0x638, 0x28b0, 0x44f3, 0x1, 0x1);
        gbc.writeMem(0xe276, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9c9);
        EXPECT(gbc.pc(), 0xe277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe276), 0x95);
        // 95 0256
        gbc.setState(0xa921, 0x5c97, 0x9bb0, 0x8d3d, 0x6301, 0xbd42, 0x0, 0x0);
        gbc.writeMem(0xa921, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5c97);
        EXPECT(gbc.pc(), 0xa922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa921), 0x95);
        // 95 0257
        gbc.setState(0x244b, 0xe848, 0xb570, 0x7688, 0xa3c3, 0xe1a0, 0x0, 0x0);
        gbc.writeMem(0x244b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe848);
        EXPECT(gbc.pc(), 0x244c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0258
        gbc.setState(0x1320, 0x5cfe, 0xcec0, 0x77f4, 0x1367, 0x57e5, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5cfe);
        EXPECT(gbc.pc(), 0x1321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0259
        gbc.setState(0xbbe1, 0x23e1, 0xb390, 0x1327, 0xb61c, 0xd882, 0x1, 0x1);
        gbc.writeMem(0xbbe1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x23e1);
        EXPECT(gbc.pc(), 0xbbe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbe1), 0x95);
        // 95 025A
        gbc.setState(0x69dd, 0x587, 0x9860, 0x8bbf, 0x11a3, 0xf51b, 0x1, 0x0);
        gbc.writeMem(0x69dd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x587);
        EXPECT(gbc.pc(), 0x69de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 025B
        gbc.setState(0xe298, 0x69b0, 0xb4d0, 0x5213, 0xd324, 0xcdf8, 0x1, 0x0);
        gbc.writeMem(0xe298, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x69b0);
        EXPECT(gbc.pc(), 0xe299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe298), 0x95);
        // 95 025C
        gbc.setState(0x6e78, 0xb71, 0x2550, 0x771b, 0x2b78, 0xaa7b, 0x0, 0x1);
        gbc.writeMem(0x6e78, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb71);
        EXPECT(gbc.pc(), 0x6e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 025D
        gbc.setState(0x605e, 0x9a06, 0x58e0, 0x152b, 0x669b, 0x460f, 0x0, 0x1);
        gbc.writeMem(0x605e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9a06);
        EXPECT(gbc.pc(), 0x605f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 025E
        gbc.setState(0xe139, 0xe7ff, 0x3200, 0xa3a4, 0x1888, 0x2215, 0x0, 0x1);
        gbc.writeMem(0xe139, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xe7ff);
        EXPECT(gbc.pc(), 0xe13a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe139), 0x95);
        // 95 025F
        gbc.setState(0xd7d3, 0xecca, 0xd9a0, 0xa57a, 0xa99, 0xbab4, 0x1, 0x1);
        gbc.writeMem(0xd7d3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xecca);
        EXPECT(gbc.pc(), 0xd7d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7d3), 0x95);
        // 95 0260
        gbc.setState(0xedd8, 0xba7f, 0x7210, 0xf4ab, 0xf6e5, 0x64aa, 0x1, 0x0);
        gbc.writeMem(0xedd8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xba7f);
        EXPECT(gbc.pc(), 0xedd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd8), 0x95);
        // 95 0262
        gbc.setState(0xcc67, 0x7120, 0x6c80, 0x104f, 0xf84d, 0x299f, 0x1, 0x1);
        gbc.writeMem(0xcc67, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7120);
        EXPECT(gbc.pc(), 0xcc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc67), 0x95);
        // 95 0263
        gbc.setState(0xdce0, 0xb568, 0x2490, 0x87ce, 0x2492, 0x837a, 0x0, 0x1);
        gbc.writeMem(0xdce0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb568);
        EXPECT(gbc.pc(), 0xdce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce0), 0x95);
        // 95 0264
        gbc.setState(0x14ac, 0xaa65, 0xaa90, 0xa07e, 0xaad1, 0x54e0, 0x0, 0x1);
        gbc.writeMem(0x14ac, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaa65);
        EXPECT(gbc.pc(), 0x14ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0265
        gbc.setState(0x362, 0xa6f5, 0x5e40, 0xd82e, 0x700, 0xfcbc, 0x0, 0x1);
        gbc.writeMem(0x362, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa6f5);
        EXPECT(gbc.pc(), 0x363);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0266
        gbc.setState(0x2afb, 0xee23, 0x8c40, 0x6474, 0x87de, 0x72e7, 0x0, 0x1);
        gbc.writeMem(0x2afb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xee23);
        EXPECT(gbc.pc(), 0x2afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0267
        gbc.setState(0x2f08, 0x9f2, 0xb740, 0xe8ad, 0xc83f, 0x885b, 0x0, 0x0);
        gbc.writeMem(0x2f08, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9f2);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0268
        gbc.setState(0xe99, 0xedd7, 0xaf30, 0x2c28, 0xf859, 0x537c, 0x0, 0x0);
        gbc.writeMem(0xe99, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xedd7);
        EXPECT(gbc.pc(), 0xe9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0269
        gbc.setState(0x7a41, 0x1ccc, 0x95b0, 0xcb72, 0xfd5c, 0x8d52, 0x1, 0x1);
        gbc.writeMem(0x7a41, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1ccc);
        EXPECT(gbc.pc(), 0x7a42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 026A
        gbc.setState(0x94dc, 0xd5d9, 0x6d10, 0x3aa9, 0xeb11, 0x560f, 0x0, 0x0);
        gbc.writeMem(0x94dc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd5d9);
        EXPECT(gbc.pc(), 0x94dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94dc), 0x95);
        // 95 026B
        gbc.setState(0x8e78, 0x41fd, 0xeff0, 0xfeb9, 0x5c6a, 0x2033, 0x1, 0x0);
        gbc.writeMem(0x8e78, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x41fd);
        EXPECT(gbc.pc(), 0x8e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e78), 0x95);
        // 95 026C
        gbc.setState(0x74ca, 0x100, 0x2a50, 0x7f79, 0x7cce, 0x5f8c, 0x1, 0x0);
        gbc.writeMem(0x74ca, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x100);
        EXPECT(gbc.pc(), 0x74cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 026E
        gbc.setState(0xe804, 0x389c, 0x520, 0x2727, 0xb439, 0xc585, 0x0, 0x1);
        gbc.writeMem(0xe804, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x389c);
        EXPECT(gbc.pc(), 0xe805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe804), 0x95);
        // 95 026F
        gbc.setState(0x2365, 0x2ca8, 0x1e30, 0xf841, 0xa497, 0xcf17, 0x0, 0x1);
        gbc.writeMem(0x2365, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2ca8);
        EXPECT(gbc.pc(), 0x2366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0270
        gbc.setState(0x8c9c, 0xff80, 0xf4c0, 0xaae2, 0xa650, 0xc667, 0x0, 0x0);
        gbc.writeMem(0x8c9c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xff80);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c9c), 0x95);
        // 95 0271
        gbc.setState(0x9760, 0xb74, 0xf0c0, 0xde7f, 0x4be0, 0xa1b3, 0x1, 0x1);
        gbc.writeMem(0x9760, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb74);
        EXPECT(gbc.pc(), 0x9761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9760), 0x95);
        // 95 0272
        gbc.setState(0xb636, 0x18d9, 0xea0, 0x5b37, 0xb2fd, 0xd389, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x18d9);
        EXPECT(gbc.pc(), 0xb637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb636), 0x95);
        // 95 0273
        gbc.setState(0xe410, 0x53ee, 0xb350, 0x63d5, 0x8ca7, 0xca82, 0x1, 0x1);
        gbc.writeMem(0xe410, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x53ee);
        EXPECT(gbc.pc(), 0xe411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe410), 0x95);
        // 95 0274
        gbc.setState(0x1511, 0xd660, 0x3090, 0x97ce, 0xc731, 0xf092, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd660);
        EXPECT(gbc.pc(), 0x1512);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0275
        gbc.setState(0xbc3f, 0xb3e7, 0x1040, 0xf23b, 0xad51, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb3e7);
        EXPECT(gbc.pc(), 0xbc40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc3f), 0x95);
        // 95 0276
        gbc.setState(0x1fdf, 0x47bd, 0xfdc0, 0xc51, 0x2da, 0x11e3, 0x1, 0x0);
        gbc.writeMem(0x1fdf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x47bd);
        EXPECT(gbc.pc(), 0x1fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0277
        gbc.setState(0x2e3a, 0x5ddf, 0x6f00, 0x9387, 0x77b3, 0x1114, 0x1, 0x1);
        gbc.writeMem(0x2e3a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5ddf);
        EXPECT(gbc.pc(), 0x2e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0278
        gbc.setState(0x57c1, 0x5ba7, 0x5530, 0x55aa, 0x5043, 0x67dd, 0x1, 0x1);
        gbc.writeMem(0x57c1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5ba7);
        EXPECT(gbc.pc(), 0x57c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 027A
        gbc.setState(0xa065, 0x42ba, 0xe330, 0x5c1b, 0x250e, 0x66cb, 0x0, 0x0);
        gbc.writeMem(0xa065, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x42ba);
        EXPECT(gbc.pc(), 0xa066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa065), 0x95);
        // 95 027B
        gbc.setState(0x1ee3, 0xca8c, 0xc910, 0x6339, 0x58c5, 0x37d1, 0x0, 0x0);
        gbc.writeMem(0x1ee3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0x1ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 027C
        gbc.setState(0xaf6f, 0x2446, 0xd060, 0xe767, 0x737d, 0x1021, 0x0, 0x0);
        gbc.writeMem(0xaf6f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2446);
        EXPECT(gbc.pc(), 0xaf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6f), 0x95);
        // 95 027D
        gbc.setState(0x8e0, 0xa45, 0x43e0, 0x964a, 0x3520, 0x6e1, 0x0, 0x1);
        gbc.writeMem(0x8e0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa45);
        EXPECT(gbc.pc(), 0x8e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 027E
        gbc.setState(0x59b3, 0x9559, 0xb5f0, 0x700d, 0xb5ce, 0x9913, 0x0, 0x1);
        gbc.writeMem(0x59b3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9559);
        EXPECT(gbc.pc(), 0x59b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 027F
        gbc.setState(0xdc5b, 0xa5aa, 0x3260, 0x915b, 0xf0e, 0x1f53, 0x0, 0x0);
        gbc.writeMem(0xdc5b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa5aa);
        EXPECT(gbc.pc(), 0xdc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5b), 0x95);
        // 95 0280
        gbc.setState(0x424, 0x1503, 0x2850, 0x278a, 0xa728, 0x1d08, 0x1, 0x1);
        gbc.writeMem(0x424, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x1503);
        EXPECT(gbc.pc(), 0x425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0281
        gbc.setState(0x2284, 0x3b88, 0xbe90, 0xab88, 0x19a1, 0xb727, 0x0, 0x0);
        gbc.writeMem(0x2284, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x3b88);
        EXPECT(gbc.pc(), 0x2285);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0282
        gbc.setState(0xa0a1, 0x7140, 0x4800, 0x9e4, 0x408f, 0x7c4d, 0x1, 0x1);
        gbc.writeMem(0xa0a1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7140);
        EXPECT(gbc.pc(), 0xa0a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0a1), 0x95);
        // 95 0283
        gbc.setState(0x554f, 0x2c6d, 0x6d30, 0xe1e3, 0x3516, 0x57df, 0x0, 0x1);
        gbc.writeMem(0x554f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x5550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0285
        gbc.setState(0x846f, 0x9fe3, 0xc3b0, 0x2801, 0xe221, 0xcbe8, 0x0, 0x0);
        gbc.writeMem(0x846f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x9fe3);
        EXPECT(gbc.pc(), 0x8470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x846f), 0x95);
        // 95 0286
        gbc.setState(0x7290, 0xab1, 0x8830, 0x5b1d, 0xc02, 0xa987, 0x1, 0x1);
        gbc.writeMem(0x7290, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xab1);
        EXPECT(gbc.pc(), 0x7291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0288
        gbc.setState(0xe2a8, 0x4beb, 0x7780, 0x4a85, 0xe2a0, 0x5b33, 0x0, 0x0);
        gbc.writeMem(0xe2a8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4beb);
        EXPECT(gbc.pc(), 0xe2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a8), 0x95);
        // 95 0289
        gbc.setState(0x91d4, 0xf831, 0x2560, 0x1cee, 0x9ce5, 0x5300, 0x1, 0x0);
        gbc.writeMem(0x91d4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf831);
        EXPECT(gbc.pc(), 0x91d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91d4), 0x95);
        // 95 028A
        gbc.setState(0x8af0, 0x28e8, 0xe980, 0xffab, 0x1e94, 0x91ec, 0x0, 0x0);
        gbc.writeMem(0x8af0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x28e8);
        EXPECT(gbc.pc(), 0x8af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8af0), 0x95);
        // 95 028B
        gbc.setState(0xec3f, 0x483a, 0x1de0, 0x188b, 0xb24a, 0x973, 0x1, 0x0);
        gbc.writeMem(0xec3f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x483a);
        EXPECT(gbc.pc(), 0xec40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec3f), 0x95);
        // 95 028C
        gbc.setState(0xdf7, 0xedad, 0xca90, 0x5bf9, 0xbb88, 0x600d, 0x0, 0x1);
        gbc.writeMem(0xdf7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xedad);
        EXPECT(gbc.pc(), 0xdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 028D
        gbc.setState(0xe43d, 0x671a, 0xa380, 0x7e32, 0x7cc3, 0xd95a, 0x1, 0x0);
        gbc.writeMem(0xe43d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x671a);
        EXPECT(gbc.pc(), 0xe43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe43d), 0x95);
        // 95 028E
        gbc.setState(0xa86a, 0xabfa, 0x7c20, 0x7e5b, 0xe9be, 0xba22, 0x0, 0x1);
        gbc.writeMem(0xa86a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xabfa);
        EXPECT(gbc.pc(), 0xa86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa86a), 0x95);
        // 95 028F
        gbc.setState(0x9ce8, 0xab6d, 0xc7f0, 0x8a84, 0xcfd8, 0x7887, 0x0, 0x1);
        gbc.writeMem(0x9ce8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xab6d);
        EXPECT(gbc.pc(), 0x9ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ce8), 0x95);
        // 95 0290
        gbc.setState(0xa768, 0x6cd7, 0xeeb0, 0x5637, 0xc847, 0x9166, 0x1, 0x0);
        gbc.writeMem(0xa768, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6cd7);
        EXPECT(gbc.pc(), 0xa769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa768), 0x95);
        // 95 0291
        gbc.setState(0xeedc, 0x7b22, 0x64f0, 0x8555, 0x7f83, 0x4362, 0x1, 0x0);
        gbc.writeMem(0xeedc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7b22);
        EXPECT(gbc.pc(), 0xeedd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeedc), 0x95);
        // 95 0292
        gbc.setState(0x6ba6, 0x556c, 0x6a60, 0x45e, 0xea2a, 0x1c1e, 0x1, 0x0);
        gbc.writeMem(0x6ba6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x556c);
        EXPECT(gbc.pc(), 0x6ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0293
        gbc.setState(0x28e3, 0xcc39, 0x490, 0x5fc5, 0x1dba, 0x6107, 0x0, 0x0);
        gbc.writeMem(0x28e3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcc39);
        EXPECT(gbc.pc(), 0x28e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0295
        gbc.setState(0x750f, 0x59e1, 0x7eb0, 0x8d34, 0xb4fc, 0x9e49, 0x1, 0x1);
        gbc.writeMem(0x750f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x59e1);
        EXPECT(gbc.pc(), 0x7510);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0296
        gbc.setState(0x643e, 0x926f, 0xeea0, 0x5859, 0x8cf4, 0xb010, 0x1, 0x1);
        gbc.writeMem(0x643e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x926f);
        EXPECT(gbc.pc(), 0x643f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0297
        gbc.setState(0xc52, 0xbfa1, 0x34f0, 0xde5c, 0x7ae9, 0x7883, 0x0, 0x0);
        gbc.writeMem(0xc52, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbfa1);
        EXPECT(gbc.pc(), 0xc53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0298
        gbc.setState(0xd094, 0x83e6, 0xb350, 0x6570, 0x1b0b, 0x9617, 0x1, 0x0);
        gbc.writeMem(0xd094, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0xd095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd094), 0x95);
        // 95 0299
        gbc.setState(0x4d52, 0x89d6, 0x9040, 0x7d68, 0xb322, 0x3bdb, 0x1, 0x0);
        gbc.writeMem(0x4d52, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x89d6);
        EXPECT(gbc.pc(), 0x4d53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 029A
        gbc.setState(0xad22, 0x2f4c, 0xdc60, 0x6103, 0x116c, 0xd47, 0x1, 0x0);
        gbc.writeMem(0xad22, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2f4c);
        EXPECT(gbc.pc(), 0xad23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad22), 0x95);
        // 95 029B
        gbc.setState(0xaf71, 0x2e3, 0x6140, 0xf5ef, 0x52b9, 0xbb78, 0x1, 0x0);
        gbc.writeMem(0xaf71, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x2e3);
        EXPECT(gbc.pc(), 0xaf72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf71), 0x95);
        // 95 029D
        gbc.setState(0xe9f1, 0xa087, 0xda10, 0xb581, 0x79c0, 0xda55, 0x1, 0x1);
        gbc.writeMem(0xe9f1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa087);
        EXPECT(gbc.pc(), 0xe9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9f1), 0x95);
        // 95 029E
        gbc.setState(0x962f, 0xc0f2, 0x73e0, 0x2dc3, 0x5a60, 0xa82c, 0x0, 0x0);
        gbc.writeMem(0x962f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc0f2);
        EXPECT(gbc.pc(), 0x9630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x962f), 0x95);
        // 95 029F
        gbc.setState(0x79aa, 0xc00c, 0xdad0, 0x6549, 0xe3b6, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x79aa, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc00c);
        EXPECT(gbc.pc(), 0x79ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02A0
        gbc.setState(0x5efb, 0x6b74, 0x4020, 0xae10, 0xed97, 0xe303, 0x0, 0x1);
        gbc.writeMem(0x5efb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6b74);
        EXPECT(gbc.pc(), 0x5efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02A1
        gbc.setState(0x94b8, 0x366b, 0x7040, 0x824e, 0xb96d, 0xa8f7, 0x0, 0x0);
        gbc.writeMem(0x94b8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x366b);
        EXPECT(gbc.pc(), 0x94b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94b8), 0x95);
        // 95 02A2
        gbc.setState(0x16c7, 0xc822, 0x72f0, 0xac4b, 0x237b, 0xbfea, 0x1, 0x0);
        gbc.writeMem(0x16c7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc822);
        EXPECT(gbc.pc(), 0x16c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02A3
        gbc.setState(0x5e56, 0xa2a4, 0x6050, 0xf223, 0x681c, 0xb7f4, 0x1, 0x0);
        gbc.writeMem(0x5e56, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa2a4);
        EXPECT(gbc.pc(), 0x5e57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02A4
        gbc.setState(0x26f8, 0x7e25, 0x9af0, 0xc3d1, 0xf36c, 0x92df, 0x0, 0x0);
        gbc.writeMem(0x26f8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0x26f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02A5
        gbc.setState(0x78d2, 0xbde3, 0xc940, 0x80a7, 0x4f8f, 0x96b6, 0x0, 0x1);
        gbc.writeMem(0x78d2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbde3);
        EXPECT(gbc.pc(), 0x78d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02A6
        gbc.setState(0x3825, 0x3e60, 0x7920, 0xfe77, 0xcf78, 0x33a4, 0x1, 0x0);
        gbc.writeMem(0x3825, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x3e60);
        EXPECT(gbc.pc(), 0x3826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02A7
        gbc.setState(0x1927, 0x3d56, 0xe4b0, 0x7196, 0xef46, 0xe329, 0x1, 0x0);
        gbc.writeMem(0x1927, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3d56);
        EXPECT(gbc.pc(), 0x1928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02A8
        gbc.setState(0xc37, 0xa6c2, 0x4860, 0x981e, 0x3cc6, 0x1e3f, 0x0, 0x0);
        gbc.writeMem(0xc37, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa6c2);
        EXPECT(gbc.pc(), 0xc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02A9
        gbc.setState(0x416, 0xde1, 0x81f0, 0xf509, 0x25f4, 0xfe76, 0x1, 0x1);
        gbc.writeMem(0x416, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xde1);
        EXPECT(gbc.pc(), 0x417);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02AA
        gbc.setState(0x95b2, 0x2978, 0x6050, 0xe75b, 0x7fcc, 0x4c33, 0x1, 0x0);
        gbc.writeMem(0x95b2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2978);
        EXPECT(gbc.pc(), 0x95b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b2), 0x95);
        // 95 02AB
        gbc.setState(0x2175, 0x908a, 0xf150, 0xa2a4, 0xa888, 0x3211, 0x0, 0x1);
        gbc.writeMem(0x2175, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x908a);
        EXPECT(gbc.pc(), 0x2176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02AC
        gbc.setState(0x9dc5, 0x3df4, 0xd400, 0xc333, 0x53f6, 0xbee2, 0x1, 0x0);
        gbc.writeMem(0x9dc5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x3df4);
        EXPECT(gbc.pc(), 0x9dc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dc5), 0x95);
        // 95 02AE
        gbc.setState(0x624b, 0xb42c, 0xbc80, 0x4c43, 0xa727, 0xfd1f, 0x0, 0x1);
        gbc.writeMem(0x624b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb42c);
        EXPECT(gbc.pc(), 0x624c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02AF
        gbc.setState(0x4e78, 0x2341, 0xe060, 0xdb1, 0x564c, 0xf90e, 0x1, 0x1);
        gbc.writeMem(0x4e78, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x2341);
        EXPECT(gbc.pc(), 0x4e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02B0
        gbc.setState(0x9e3a, 0xb519, 0xb210, 0xa42c, 0x85e1, 0x4790, 0x1, 0x1);
        gbc.writeMem(0x9e3a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xb519);
        EXPECT(gbc.pc(), 0x9e3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e3a), 0x95);
        // 95 02B1
        gbc.setState(0x8d12, 0xa27, 0x56b0, 0x7849, 0xaa13, 0x1cb0, 0x0, 0x1);
        gbc.writeMem(0x8d12, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa27);
        EXPECT(gbc.pc(), 0x8d13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d12), 0x95);
        // 95 02B2
        gbc.setState(0xb2b, 0x71c0, 0x4c0, 0xef86, 0xfd7a, 0xbb84, 0x0, 0x1);
        gbc.writeMem(0xb2b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0xb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02B3
        gbc.setState(0x45a, 0x9332, 0x5970, 0xdd7, 0x16e0, 0xb7c7, 0x1, 0x1);
        gbc.writeMem(0x45a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9332);
        EXPECT(gbc.pc(), 0x45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02B4
        gbc.setState(0xebfe, 0x65a, 0x2440, 0xadfb, 0x2daa, 0x4a9d, 0x0, 0x1);
        gbc.writeMem(0xebfe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x65a);
        EXPECT(gbc.pc(), 0xebff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebfe), 0x95);
        // 95 02B5
        gbc.setState(0x6574, 0x3f48, 0xcb10, 0x12e7, 0x8f43, 0x462e, 0x0, 0x0);
        gbc.writeMem(0x6574, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3f48);
        EXPECT(gbc.pc(), 0x6575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02B6
        gbc.setState(0xbb8, 0x5dc5, 0x5e60, 0x1f33, 0xa701, 0x2f5f, 0x1, 0x0);
        gbc.writeMem(0xbb8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5dc5);
        EXPECT(gbc.pc(), 0xbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02B7
        gbc.setState(0x4b94, 0x85, 0xbfd0, 0x3b1d, 0xa914, 0xcec3, 0x1, 0x1);
        gbc.writeMem(0x4b94, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x85);
        EXPECT(gbc.pc(), 0x4b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02B8
        gbc.setState(0x269a, 0x4a40, 0x43e0, 0x74d7, 0x6f54, 0xb788, 0x0, 0x0);
        gbc.writeMem(0x269a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x4a40);
        EXPECT(gbc.pc(), 0x269b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02BA
        gbc.setState(0xe38, 0xffec, 0x270, 0x9f02, 0x7053, 0xb7a, 0x0, 0x0);
        gbc.writeMem(0xe38, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xffec);
        EXPECT(gbc.pc(), 0xe39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02BC
        gbc.setState(0x4256, 0x9ec9, 0xe440, 0x3d2e, 0xc054, 0x3894, 0x0, 0x0);
        gbc.writeMem(0x4256, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9ec9);
        EXPECT(gbc.pc(), 0x4257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02BD
        gbc.setState(0xdfcd, 0xad2, 0xfb0, 0x79d1, 0x5bb7, 0xcc1d, 0x1, 0x1);
        gbc.writeMem(0xdfcd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xad2);
        EXPECT(gbc.pc(), 0xdfce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcd), 0x95);
        // 95 02BE
        gbc.setState(0x24a8, 0x34c9, 0x3050, 0x1be6, 0x8ebe, 0x57b4, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x34c9);
        EXPECT(gbc.pc(), 0x24a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02BF
        gbc.setState(0xbd65, 0xe53e, 0x9540, 0x3bd, 0xcf8d, 0x8159, 0x0, 0x1);
        gbc.writeMem(0xbd65, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe53e);
        EXPECT(gbc.pc(), 0xbd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd65), 0x95);
        // 95 02C0
        gbc.setState(0x5af6, 0xe1ca, 0xa9c0, 0x8ceb, 0x6373, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0x5af6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe1ca);
        EXPECT(gbc.pc(), 0x5af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02C1
        gbc.setState(0xc0, 0x85aa, 0xf0d0, 0xa2ab, 0xb4d7, 0xb135, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x85aa);
        EXPECT(gbc.pc(), 0xc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02C2
        gbc.setState(0xb6e7, 0x29cc, 0xb300, 0x6d9d, 0xe5e3, 0xe1c1, 0x1, 0x0);
        gbc.writeMem(0xb6e7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x29cc);
        EXPECT(gbc.pc(), 0xb6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e7), 0x95);
        // 95 02C4
        gbc.setState(0x6d42, 0x8883, 0x9610, 0xf51, 0xc03e, 0x5e07, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8883);
        EXPECT(gbc.pc(), 0x6d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02C5
        gbc.setState(0x2757, 0x93d9, 0xfd00, 0xc2f8, 0x35d0, 0x91dc, 0x0, 0x0);
        gbc.writeMem(0x2757, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x93d9);
        EXPECT(gbc.pc(), 0x2758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02C6
        gbc.setState(0x4e79, 0x8cba, 0x9c50, 0x4667, 0x20e8, 0xa1bd, 0x1, 0x1);
        gbc.writeMem(0x4e79, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8cba);
        EXPECT(gbc.pc(), 0x4e7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02C7
        gbc.setState(0xe8af, 0xa42f, 0x8180, 0x81ef, 0x9a3f, 0x2aed, 0x1, 0x1);
        gbc.writeMem(0xe8af, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xa42f);
        EXPECT(gbc.pc(), 0xe8b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8af), 0x95);
        // 95 02C8
        gbc.setState(0x91cc, 0x9e37, 0x8f90, 0x6cbb, 0x5c87, 0xd7a4, 0x0, 0x1);
        gbc.writeMem(0x91cc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9e37);
        EXPECT(gbc.pc(), 0x91cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cc), 0x95);
        // 95 02C9
        gbc.setState(0x79b6, 0xf151, 0xa30, 0xa377, 0xf71e, 0xe7c4, 0x0, 0x0);
        gbc.writeMem(0x79b6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf151);
        EXPECT(gbc.pc(), 0x79b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02CA
        gbc.setState(0xb9b1, 0xffa1, 0xd5c0, 0x9762, 0x5e2e, 0x2dbb, 0x0, 0x0);
        gbc.writeMem(0xb9b1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xffa1);
        EXPECT(gbc.pc(), 0xb9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b1), 0x95);
        // 95 02CB
        gbc.setState(0x9d32, 0xd2e1, 0x1a10, 0xba6f, 0xd2a8, 0x4de3, 0x0, 0x0);
        gbc.writeMem(0x9d32, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd2e1);
        EXPECT(gbc.pc(), 0x9d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d32), 0x95);
        // 95 02CC
        gbc.setState(0x10e4, 0x8487, 0x7630, 0x24b0, 0x9d47, 0x1f91, 0x0, 0x0);
        gbc.writeMem(0x10e4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8487);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02CD
        gbc.setState(0xee8a, 0x4d04, 0x96c0, 0xc400, 0xe2a4, 0x7880, 0x1, 0x0);
        gbc.writeMem(0xee8a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4d04);
        EXPECT(gbc.pc(), 0xee8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8a), 0x95);
        // 95 02CE
        gbc.setState(0x840, 0xa79a, 0x41f0, 0xc4d9, 0x3868, 0xd489, 0x1, 0x1);
        gbc.writeMem(0x840, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa79a);
        EXPECT(gbc.pc(), 0x841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02CF
        gbc.setState(0x23ce, 0x2da8, 0xd0f0, 0x9889, 0x90d9, 0xcb29, 0x0, 0x1);
        gbc.writeMem(0x23ce, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2da8);
        EXPECT(gbc.pc(), 0x23cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02D0
        gbc.setState(0x6910, 0xdb0e, 0x86d0, 0xd136, 0xf76c, 0xc9a9, 0x0, 0x0);
        gbc.writeMem(0x6910, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdb0e);
        EXPECT(gbc.pc(), 0x6911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02D1
        gbc.setState(0xda5d, 0xfb0a, 0x860, 0x31c5, 0x8ed4, 0x731a, 0x0, 0x1);
        gbc.writeMem(0xda5d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xfb0a);
        EXPECT(gbc.pc(), 0xda5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda5d), 0x95);
        // 95 02D2
        gbc.setState(0x82cc, 0x49aa, 0x10f0, 0xc3fa, 0x64a9, 0xa35, 0x1, 0x0);
        gbc.writeMem(0x82cc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x49aa);
        EXPECT(gbc.pc(), 0x82cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cc), 0x95);
        // 95 02D3
        gbc.setState(0xdbf0, 0x7d25, 0x2360, 0xcab9, 0x5fcd, 0xe932, 0x1, 0x0);
        gbc.writeMem(0xdbf0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7d25);
        EXPECT(gbc.pc(), 0xdbf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf0), 0x95);
        // 95 02D4
        gbc.setState(0x3f70, 0x8163, 0x1de0, 0xdcdb, 0x352f, 0xc4ae, 0x0, 0x0);
        gbc.writeMem(0x3f70, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8163);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02D5
        gbc.setState(0x9ef, 0x6b05, 0x6fd0, 0x4f98, 0x8d47, 0x2593, 0x1, 0x1);
        gbc.writeMem(0x9ef, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6b05);
        EXPECT(gbc.pc(), 0x9f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02D6
        gbc.setState(0x3b7b, 0x706a, 0xd510, 0xa9ae, 0x24da, 0xdce3, 0x0, 0x1);
        gbc.writeMem(0x3b7b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x706a);
        EXPECT(gbc.pc(), 0x3b7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02D7
        gbc.setState(0x68f4, 0x91ec, 0x7d90, 0xf0d3, 0x6bc5, 0xb84d, 0x0, 0x1);
        gbc.writeMem(0x68f4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x91ec);
        EXPECT(gbc.pc(), 0x68f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02D8
        gbc.setState(0x2e63, 0x891e, 0xeb0, 0xe049, 0xd2c6, 0xc41b, 0x1, 0x1);
        gbc.writeMem(0x2e63, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x891e);
        EXPECT(gbc.pc(), 0x2e64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02D9
        gbc.setState(0x4178, 0x9aa7, 0x9ef0, 0x227b, 0xb2d7, 0x1cdd, 0x0, 0x1);
        gbc.writeMem(0x4178, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9aa7);
        EXPECT(gbc.pc(), 0x4179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02DA
        gbc.setState(0x4e27, 0xbdcd, 0xb040, 0xd196, 0x1d46, 0x942e, 0x0, 0x0);
        gbc.writeMem(0x4e27, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xbdcd);
        EXPECT(gbc.pc(), 0x4e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02DB
        gbc.setState(0xabd2, 0x3d32, 0x7880, 0x1144, 0xfb7a, 0x410a, 0x0, 0x0);
        gbc.writeMem(0xabd2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x3d32);
        EXPECT(gbc.pc(), 0xabd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd2), 0x95);
        // 95 02DC
        gbc.setState(0x3e93, 0x9216, 0xf2f0, 0x6cea, 0x8ef, 0x99f7, 0x1, 0x0);
        gbc.writeMem(0x3e93, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9216);
        EXPECT(gbc.pc(), 0x3e94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02DD
        gbc.setState(0x959c, 0x5a5e, 0x33a0, 0xe6a9, 0x5c3, 0xac6d, 0x1, 0x0);
        gbc.writeMem(0x959c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5a5e);
        EXPECT(gbc.pc(), 0x959d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959c), 0x95);
        // 95 02DE
        gbc.setState(0x336c, 0x6d27, 0x450, 0x5b34, 0xbecc, 0x34ae, 0x1, 0x0);
        gbc.writeMem(0x336c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6d27);
        EXPECT(gbc.pc(), 0x336d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02DF
        gbc.setState(0xd8e6, 0x6bf9, 0x2390, 0xd4d3, 0x2467, 0x111d, 0x0, 0x0);
        gbc.writeMem(0xd8e6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6bf9);
        EXPECT(gbc.pc(), 0xd8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e6), 0x95);
        // 95 02E0
        gbc.setState(0xcde6, 0xccb7, 0x6ed0, 0x60f2, 0xac21, 0x249c, 0x0, 0x1);
        gbc.writeMem(0xcde6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0xcde7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde6), 0x95);
        // 95 02E1
        gbc.setState(0xbb78, 0x5116, 0x4560, 0x3ee2, 0x333, 0xbd1d, 0x0, 0x1);
        gbc.writeMem(0xbb78, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5116);
        EXPECT(gbc.pc(), 0xbb79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb78), 0x95);
        // 95 02E2
        gbc.setState(0xae5f, 0x2ff5, 0x64c0, 0x66a3, 0x3370, 0x5952, 0x1, 0x1);
        gbc.writeMem(0xae5f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2ff5);
        EXPECT(gbc.pc(), 0xae60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae5f), 0x95);
        // 95 02E3
        gbc.setState(0xd4af, 0x413e, 0x6060, 0x5dd4, 0x878e, 0xcf1f, 0x0, 0x0);
        gbc.writeMem(0xd4af, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x413e);
        EXPECT(gbc.pc(), 0xd4b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4af), 0x95);
        // 95 02E4
        gbc.setState(0x68a, 0x49cd, 0x9850, 0xcfc3, 0xedc, 0xb6f, 0x0, 0x1);
        gbc.writeMem(0x68a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x49cd);
        EXPECT(gbc.pc(), 0x68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 02E5
        gbc.setState(0x8ba6, 0x48a2, 0xee50, 0x5b29, 0xcc70, 0x48f8, 0x1, 0x0);
        gbc.writeMem(0x8ba6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x48a2);
        EXPECT(gbc.pc(), 0x8ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba6), 0x95);
        // 95 02E6
        gbc.setState(0x291b, 0x563, 0x31c0, 0xe82a, 0x5cb3, 0x727f, 0x0, 0x1);
        gbc.writeMem(0x291b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x563);
        EXPECT(gbc.pc(), 0x291c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02E7
        gbc.setState(0xabb1, 0xdd49, 0xa9b0, 0xbf6, 0x88e, 0xc4b4, 0x1, 0x0);
        gbc.writeMem(0xabb1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdd49);
        EXPECT(gbc.pc(), 0xabb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb1), 0x95);
        // 95 02E8
        gbc.setState(0xcbda, 0x13fd, 0x98e0, 0xa613, 0xbccd, 0x784b, 0x1, 0x0);
        gbc.writeMem(0xcbda, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x13fd);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbda), 0x95);
        // 95 02E9
        gbc.setState(0x512b, 0x85f3, 0x5d0, 0xe137, 0x58f7, 0x5fd8, 0x1, 0x0);
        gbc.writeMem(0x512b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x85f3);
        EXPECT(gbc.pc(), 0x512c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02EA
        gbc.setState(0x5017, 0xb441, 0x9210, 0x7a76, 0x7325, 0x6ae0, 0x0, 0x1);
        gbc.writeMem(0x5017, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb441);
        EXPECT(gbc.pc(), 0x5018);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02EB
        gbc.setState(0x9e85, 0xf8a6, 0x33b0, 0x9f0a, 0x1d04, 0xaff8, 0x0, 0x1);
        gbc.writeMem(0x9e85, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf8a6);
        EXPECT(gbc.pc(), 0x9e86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e85), 0x95);
        // 95 02EC
        gbc.setState(0x71c, 0x67e9, 0x10f0, 0xf8a4, 0x4bbb, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x71c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x67e9);
        EXPECT(gbc.pc(), 0x71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02EE
        gbc.setState(0x1c14, 0x2255, 0x6b60, 0xcc93, 0x4d0b, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0x1c14, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2255);
        EXPECT(gbc.pc(), 0x1c15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02EF
        gbc.setState(0x9627, 0xa66, 0xad20, 0x64a5, 0x761f, 0x9c08, 0x0, 0x0);
        gbc.writeMem(0x9627, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xa66);
        EXPECT(gbc.pc(), 0x9628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9627), 0x95);
        // 95 02F0
        gbc.setState(0x7102, 0x4753, 0xfbf0, 0x591d, 0xf5a4, 0x3f3b, 0x0, 0x0);
        gbc.writeMem(0x7102, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x4753);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02F2
        gbc.setState(0xae74, 0xfaac, 0xc010, 0x1f1, 0x2a3d, 0x4cf6, 0x1, 0x0);
        gbc.writeMem(0xae74, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfaac);
        EXPECT(gbc.pc(), 0xae75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae74), 0x95);
        // 95 02F3
        gbc.setState(0x435a, 0xe727, 0x12e0, 0x531, 0xb552, 0xfb25, 0x1, 0x0);
        gbc.writeMem(0x435a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe727);
        EXPECT(gbc.pc(), 0x435b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02F4
        gbc.setState(0xc0dd, 0x9894, 0x8ec0, 0xea00, 0x4df1, 0x70ff, 0x0, 0x0);
        gbc.writeMem(0xc0dd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9894);
        EXPECT(gbc.pc(), 0xc0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0dd), 0x95);
        // 95 02F5
        gbc.setState(0x51b4, 0x87b0, 0xb1a0, 0xe936, 0xf1ca, 0xc611, 0x1, 0x0);
        gbc.writeMem(0x51b4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x87b0);
        EXPECT(gbc.pc(), 0x51b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02F6
        gbc.setState(0x16c8, 0x4889, 0x4500, 0x493b, 0x678f, 0xdd01, 0x0, 0x1);
        gbc.writeMem(0x16c8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4889);
        EXPECT(gbc.pc(), 0x16c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 02F9
        gbc.setState(0xa01, 0x59e6, 0xc6f0, 0x7ba3, 0x6a7e, 0xcbfb, 0x1, 0x1);
        gbc.writeMem(0xa01, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x59e6);
        EXPECT(gbc.pc(), 0xa02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 02FA
        gbc.setState(0xd9a5, 0xd59d, 0x3ab0, 0xbbae, 0x3c1d, 0x53f0, 0x1, 0x1);
        gbc.writeMem(0xd9a5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd59d);
        EXPECT(gbc.pc(), 0xd9a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9a5), 0x95);
        // 95 02FC
        gbc.setState(0xce6b, 0x6517, 0x7270, 0xdf9a, 0xd074, 0x1a73, 0x1, 0x0);
        gbc.writeMem(0xce6b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6517);
        EXPECT(gbc.pc(), 0xce6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce6b), 0x95);
        // 95 02FD
        gbc.setState(0x8a0d, 0x813, 0xf960, 0xef3d, 0x7693, 0x8ad9, 0x1, 0x0);
        gbc.writeMem(0x8a0d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x813);
        EXPECT(gbc.pc(), 0x8a0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a0d), 0x95);
        // 95 02FE
        gbc.setState(0x1ab7, 0x63a7, 0x7e00, 0xe0d8, 0x360b, 0x178b, 0x1, 0x0);
        gbc.writeMem(0x1ab7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x63a7);
        EXPECT(gbc.pc(), 0x1ab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 02FF
        gbc.setState(0x761f, 0xf642, 0x8190, 0x7487, 0xdedd, 0x99e5, 0x1, 0x0);
        gbc.writeMem(0x761f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf642);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0300
        gbc.setState(0x9391, 0x846e, 0x2d40, 0x8d44, 0xedd3, 0xeaa5, 0x0, 0x0);
        gbc.writeMem(0x9391, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x846e);
        EXPECT(gbc.pc(), 0x9392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9391), 0x95);
        // 95 0301
        gbc.setState(0xc145, 0x406, 0xe90, 0xf565, 0x6cbb, 0x73a8, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x406);
        EXPECT(gbc.pc(), 0xc146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc145), 0x95);
        // 95 0302
        gbc.setState(0x5f9, 0x701a, 0xd860, 0x5aae, 0xde74, 0x65e1, 0x0, 0x0);
        gbc.writeMem(0x5f9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x701a);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0303
        gbc.setState(0x52bb, 0x81f9, 0x9290, 0x343e, 0x6d60, 0xb50d, 0x0, 0x1);
        gbc.writeMem(0x52bb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x81f9);
        EXPECT(gbc.pc(), 0x52bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0304
        gbc.setState(0x4c88, 0xd191, 0xae30, 0xafdc, 0x7a33, 0x9702, 0x0, 0x0);
        gbc.writeMem(0x4c88, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd191);
        EXPECT(gbc.pc(), 0x4c89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0305
        gbc.setState(0xb87f, 0x625c, 0x6960, 0xbfe7, 0xaf83, 0xea0b, 0x1, 0x0);
        gbc.writeMem(0xb87f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x625c);
        EXPECT(gbc.pc(), 0xb880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87f), 0x95);
        // 95 0306
        gbc.setState(0xda89, 0x3f4f, 0xc8d0, 0x12e7, 0xab90, 0xfcc, 0x1, 0x1);
        gbc.writeMem(0xda89, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3f4f);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda89), 0x95);
        // 95 0307
        gbc.setState(0xa051, 0x1cab, 0x6140, 0x38bd, 0x391c, 0xb14, 0x0, 0x1);
        gbc.writeMem(0xa051, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1cab);
        EXPECT(gbc.pc(), 0xa052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa051), 0x95);
        // 95 0308
        gbc.setState(0x2336, 0x3c3d, 0x8d10, 0xe6a, 0xb982, 0x712e, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3c3d);
        EXPECT(gbc.pc(), 0x2337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0309
        gbc.setState(0x6ea7, 0xd41f, 0x8eb0, 0x2be, 0x87c0, 0x2b9a, 0x1, 0x0);
        gbc.writeMem(0x6ea7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd41f);
        EXPECT(gbc.pc(), 0x6ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 030A
        gbc.setState(0xb69b, 0x5b4c, 0x3e80, 0xeb02, 0x5a3d, 0x51ba, 0x0, 0x1);
        gbc.writeMem(0xb69b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5b4c);
        EXPECT(gbc.pc(), 0xb69c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb69b), 0x95);
        // 95 030B
        gbc.setState(0x2564, 0x3368, 0x6d00, 0x78d4, 0x9a8f, 0xb3c1, 0x0, 0x0);
        gbc.writeMem(0x2564, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3368);
        EXPECT(gbc.pc(), 0x2565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 030C
        gbc.setState(0x6025, 0x9143, 0xc350, 0x7663, 0xfd80, 0xb2da, 0x1, 0x0);
        gbc.writeMem(0x6025, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9143);
        EXPECT(gbc.pc(), 0x6026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 030D
        gbc.setState(0x3cb, 0x7937, 0x7ed0, 0xc6b6, 0x9852, 0x8198, 0x1, 0x0);
        gbc.writeMem(0x3cb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0x3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 030E
        gbc.setState(0x5c50, 0x7c62, 0xa040, 0x468, 0x8932, 0x8bcf, 0x0, 0x1);
        gbc.writeMem(0x5c50, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7c62);
        EXPECT(gbc.pc(), 0x5c51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 030F
        gbc.setState(0x2ec7, 0x767f, 0x27d0, 0x3dd, 0x81e4, 0xb5de, 0x1, 0x0);
        gbc.writeMem(0x2ec7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x767f);
        EXPECT(gbc.pc(), 0x2ec8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0310
        gbc.setState(0xc681, 0xf44d, 0x7820, 0xce06, 0xc805, 0x3b27, 0x0, 0x0);
        gbc.writeMem(0xc681, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf44d);
        EXPECT(gbc.pc(), 0xc682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc681), 0x95);
        // 95 0311
        gbc.setState(0x24f0, 0x6320, 0x4cf0, 0x3db6, 0x90a9, 0x904d, 0x1, 0x0);
        gbc.writeMem(0x24f0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x6320);
        EXPECT(gbc.pc(), 0x24f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0312
        gbc.setState(0xa12, 0x2748, 0x56e0, 0x2e92, 0x3c41, 0x6c82, 0x0, 0x1);
        gbc.writeMem(0xa12, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2748);
        EXPECT(gbc.pc(), 0xa13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0313
        gbc.setState(0x92a7, 0x874b, 0x9070, 0xc24e, 0x59b9, 0xb5b5, 0x0, 0x0);
        gbc.writeMem(0x92a7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x874b);
        EXPECT(gbc.pc(), 0x92a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a7), 0x95);
        // 95 0314
        gbc.setState(0xa100, 0xa68a, 0xa9c0, 0xc0bb, 0xf9e, 0xddb8, 0x1, 0x1);
        gbc.writeMem(0xa100, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa68a);
        EXPECT(gbc.pc(), 0xa101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa100), 0x95);
        // 95 0315
        gbc.setState(0x2b7f, 0xa338, 0x8630, 0xf891, 0x9330, 0x5a11, 0x0, 0x1);
        gbc.writeMem(0x2b7f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa338);
        EXPECT(gbc.pc(), 0x2b80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0316
        gbc.setState(0xbaea, 0xd327, 0xfe90, 0xed, 0xc6c1, 0xf2b2, 0x1, 0x1);
        gbc.writeMem(0xbaea, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd327);
        EXPECT(gbc.pc(), 0xbaeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaea), 0x95);
        // 95 0317
        gbc.setState(0x5cd7, 0x29ca, 0xe730, 0x94da, 0x4232, 0x5973, 0x0, 0x1);
        gbc.writeMem(0x5cd7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x29ca);
        EXPECT(gbc.pc(), 0x5cd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0318
        gbc.setState(0xe9b1, 0xd50b, 0xbf70, 0xd4d0, 0x7208, 0xa5db, 0x1, 0x0);
        gbc.writeMem(0xe9b1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd50b);
        EXPECT(gbc.pc(), 0xe9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b1), 0x95);
        // 95 0319
        gbc.setState(0x32a9, 0x3da4, 0x5d20, 0x49da, 0xe2aa, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x32a9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3da4);
        EXPECT(gbc.pc(), 0x32aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 031A
        gbc.setState(0x4b95, 0x85f, 0x9080, 0x967b, 0x9701, 0x201e, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x85f);
        EXPECT(gbc.pc(), 0x4b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 031B
        gbc.setState(0xc6c9, 0xd58e, 0x35a0, 0x723a, 0x265c, 0x372f, 0x0, 0x1);
        gbc.writeMem(0xc6c9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd58e);
        EXPECT(gbc.pc(), 0xc6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c9), 0x95);
        // 95 031C
        gbc.setState(0x3e0e, 0xf5d1, 0xd8b0, 0xf71f, 0x15fa, 0xf2aa, 0x1, 0x0);
        gbc.writeMem(0x3e0e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf5d1);
        EXPECT(gbc.pc(), 0x3e0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 031D
        gbc.setState(0x7ef9, 0xf0d9, 0xaeb0, 0x396d, 0x17f1, 0xc942, 0x0, 0x0);
        gbc.writeMem(0x7ef9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf0d9);
        EXPECT(gbc.pc(), 0x7efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 031F
        gbc.setState(0xe853, 0x9175, 0xe3e0, 0x2645, 0xa16e, 0x975, 0x0, 0x1);
        gbc.writeMem(0xe853, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9175);
        EXPECT(gbc.pc(), 0xe854);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe853), 0x95);
        // 95 0320
        gbc.setState(0xdd24, 0xd53d, 0x95b0, 0x32a2, 0x1da, 0x36e0, 0x0, 0x0);
        gbc.writeMem(0xdd24, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd53d);
        EXPECT(gbc.pc(), 0xdd25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd24), 0x95);
        // 95 0321
        gbc.setState(0xe80b, 0xd4d6, 0xaab0, 0x9793, 0x40a8, 0x150b, 0x0, 0x1);
        gbc.writeMem(0xe80b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd4d6);
        EXPECT(gbc.pc(), 0xe80c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe80b), 0x95);
        // 95 0322
        gbc.setState(0xc1d2, 0x5e9b, 0xafe0, 0xcd7e, 0x68e0, 0xc48a, 0x1, 0x0);
        gbc.writeMem(0xc1d2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5e9b);
        EXPECT(gbc.pc(), 0xc1d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1d2), 0x95);
        // 95 0323
        gbc.setState(0xda0c, 0x7605, 0xde60, 0x6a3a, 0x5e2e, 0xe164, 0x1, 0x1);
        gbc.writeMem(0xda0c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x7605);
        EXPECT(gbc.pc(), 0xda0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda0c), 0x95);
        // 95 0324
        gbc.setState(0x61f0, 0xcdd0, 0x5d70, 0x24c1, 0x75a2, 0x2f0, 0x0, 0x1);
        gbc.writeMem(0x61f0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcdd0);
        EXPECT(gbc.pc(), 0x61f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0325
        gbc.setState(0xab63, 0xccd9, 0x42f0, 0xa429, 0xc929, 0x2170, 0x1, 0x0);
        gbc.writeMem(0xab63, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xccd9);
        EXPECT(gbc.pc(), 0xab64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab63), 0x95);
        // 95 0327
        gbc.setState(0x597c, 0xcb34, 0x5880, 0x4ca6, 0x36f7, 0x9d96, 0x0, 0x1);
        gbc.writeMem(0x597c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xcb34);
        EXPECT(gbc.pc(), 0x597d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0328
        gbc.setState(0x223c, 0xb0cc, 0x110, 0x67a5, 0x7b4a, 0xda77, 0x0, 0x1);
        gbc.writeMem(0x223c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb0cc);
        EXPECT(gbc.pc(), 0x223d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0329
        gbc.setState(0x9af6, 0xd185, 0x700, 0xc2d3, 0x11a9, 0x80d9, 0x0, 0x0);
        gbc.writeMem(0x9af6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd185);
        EXPECT(gbc.pc(), 0x9af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9af6), 0x95);
        // 95 032B
        gbc.setState(0x6f00, 0x3d4e, 0x5210, 0x4d12, 0x6e5f, 0xb91, 0x0, 0x1);
        gbc.writeMem(0x6f00, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3d4e);
        EXPECT(gbc.pc(), 0x6f01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 032C
        gbc.setState(0x89a1, 0x1cf6, 0x3690, 0xf72a, 0x97e7, 0xfe0d, 0x1, 0x0);
        gbc.writeMem(0x89a1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1cf6);
        EXPECT(gbc.pc(), 0x89a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a1), 0x95);
        // 95 032D
        gbc.setState(0x1a76, 0xaf84, 0xbeb0, 0x69cd, 0xdd2b, 0x423a, 0x0, 0x1);
        gbc.writeMem(0x1a76, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaf84);
        EXPECT(gbc.pc(), 0x1a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 032E
        gbc.setState(0x3433, 0xe9ea, 0x9c80, 0x3211, 0x1174, 0x6f4d, 0x0, 0x0);
        gbc.writeMem(0x3433, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe9ea);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 032F
        gbc.setState(0x2909, 0x1866, 0xc440, 0xfeea, 0x29a2, 0xd0c5, 0x0, 0x1);
        gbc.writeMem(0x2909, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1866);
        EXPECT(gbc.pc(), 0x290a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0330
        gbc.setState(0x2034, 0x812, 0x7790, 0xce4b, 0xc9ff, 0xd548, 0x1, 0x0);
        gbc.writeMem(0x2034, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x812);
        EXPECT(gbc.pc(), 0x2035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0331
        gbc.setState(0xa0b, 0xfbf, 0x6e0, 0xc0df, 0x5535, 0x60e4, 0x0, 0x1);
        gbc.writeMem(0xa0b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xfbf);
        EXPECT(gbc.pc(), 0xa0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0332
        gbc.setState(0x56ba, 0xbc76, 0x58c0, 0xa27f, 0x6595, 0x6fc, 0x1, 0x1);
        gbc.writeMem(0x56ba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbc76);
        EXPECT(gbc.pc(), 0x56bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0333
        gbc.setState(0x8727, 0xa0cc, 0x8a80, 0x49a2, 0x5f10, 0xb969, 0x1, 0x1);
        gbc.writeMem(0x8727, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa0cc);
        EXPECT(gbc.pc(), 0x8728);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0x95);
        // 95 0334
        gbc.setState(0x283d, 0xff47, 0xa280, 0xf222, 0x2fd, 0xacfa, 0x1, 0x0);
        gbc.writeMem(0x283d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xff47);
        EXPECT(gbc.pc(), 0x283e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0335
        gbc.setState(0x1629, 0x51b0, 0x5710, 0xdad0, 0xa1c1, 0x91ff, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x51b0);
        EXPECT(gbc.pc(), 0x162a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0336
        gbc.setState(0x6256, 0x3d2d, 0xd840, 0x8a7c, 0x616f, 0x7583, 0x1, 0x0);
        gbc.writeMem(0x6256, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3d2d);
        EXPECT(gbc.pc(), 0x6257);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0337
        gbc.setState(0xbcd, 0xb8a1, 0x9730, 0xfdbc, 0xb59b, 0x5b0, 0x0, 0x1);
        gbc.writeMem(0xbcd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb8a1);
        EXPECT(gbc.pc(), 0xbce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0339
        gbc.setState(0x3d, 0xa9b3, 0x43c0, 0x64ee, 0x40ee, 0x2632, 0x1, 0x0);
        gbc.writeMem(0x3d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa9b3);
        EXPECT(gbc.pc(), 0x3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 033A
        gbc.setState(0xba2e, 0xae0d, 0xfea0, 0x514, 0x7b34, 0x3d45, 0x0, 0x0);
        gbc.writeMem(0xba2e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xae0d);
        EXPECT(gbc.pc(), 0xba2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba2e), 0x95);
        // 95 033B
        gbc.setState(0x7f38, 0x57de, 0x9a00, 0x5d73, 0xff94, 0x4bb2, 0x0, 0x0);
        gbc.writeMem(0x7f38, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x57de);
        EXPECT(gbc.pc(), 0x7f39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 033C
        gbc.setState(0x613c, 0x6151, 0x4080, 0xcf82, 0xba58, 0x243c, 0x1, 0x1);
        gbc.writeMem(0x613c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6151);
        EXPECT(gbc.pc(), 0x613d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 033D
        gbc.setState(0x6fc5, 0x484f, 0x5090, 0xde03, 0x3626, 0xbcf3, 0x0, 0x1);
        gbc.writeMem(0x6fc5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x484f);
        EXPECT(gbc.pc(), 0x6fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 033E
        gbc.setState(0xb552, 0x2248, 0x760, 0xa219, 0x7592, 0x1262, 0x0, 0x0);
        gbc.writeMem(0xb552, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2248);
        EXPECT(gbc.pc(), 0xb553);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb552), 0x95);
        // 95 033F
        gbc.setState(0x6d56, 0x94dc, 0xdfe0, 0x9514, 0xb906, 0x2f57, 0x0, 0x0);
        gbc.writeMem(0x6d56, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x94dc);
        EXPECT(gbc.pc(), 0x6d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0340
        gbc.setState(0x4ebe, 0x534d, 0x3de0, 0x9215, 0x7d26, 0x8635, 0x1, 0x1);
        gbc.writeMem(0x4ebe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x534d);
        EXPECT(gbc.pc(), 0x4ebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0341
        gbc.setState(0x5f3d, 0x5070, 0x31c0, 0x207d, 0x7ba3, 0x2640, 0x1, 0x1);
        gbc.writeMem(0x5f3d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x5070);
        EXPECT(gbc.pc(), 0x5f3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0342
        gbc.setState(0xad1, 0xf0b, 0xd2d0, 0x21af, 0x60a, 0x9c63, 0x1, 0x0);
        gbc.writeMem(0xad1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf0b);
        EXPECT(gbc.pc(), 0xad2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0343
        gbc.setState(0x4175, 0x4ae6, 0x5550, 0x544b, 0x8acf, 0x638f, 0x0, 0x1);
        gbc.writeMem(0x4175, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4ae6);
        EXPECT(gbc.pc(), 0x4176);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0344
        gbc.setState(0xc75d, 0xcc55, 0x9630, 0x74b3, 0xf19, 0x5aa, 0x0, 0x1);
        gbc.writeMem(0xc75d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcc55);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75d), 0x95);
        // 95 0345
        gbc.setState(0xcdb5, 0x319d, 0xad90, 0xb6a8, 0x2dd8, 0xd3b2, 0x1, 0x0);
        gbc.writeMem(0xcdb5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x319d);
        EXPECT(gbc.pc(), 0xcdb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb5), 0x95);
        // 95 0346
        gbc.setState(0x10b8, 0xee91, 0xb020, 0x949b, 0x8d7, 0x6339, 0x1, 0x0);
        gbc.writeMem(0x10b8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xee91);
        EXPECT(gbc.pc(), 0x10b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0347
        gbc.setState(0x413b, 0x8c24, 0xd1f0, 0x105f, 0x8137, 0x2747, 0x1, 0x0);
        gbc.writeMem(0x413b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8c24);
        EXPECT(gbc.pc(), 0x413c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0348
        gbc.setState(0xaa21, 0xadbe, 0xfde0, 0xb7b7, 0x8e36, 0x101, 0x0, 0x0);
        gbc.writeMem(0xaa21, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xadbe);
        EXPECT(gbc.pc(), 0xaa22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa21), 0x95);
        // 95 0349
        gbc.setState(0x463f, 0x6631, 0x5d70, 0xcd51, 0x4ed1, 0x28e7, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6631);
        EXPECT(gbc.pc(), 0x4640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 034A
        gbc.setState(0x3dc8, 0xb126, 0xed20, 0xe81f, 0x8ee4, 0x6af1, 0x0, 0x0);
        gbc.writeMem(0x3dc8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb126);
        EXPECT(gbc.pc(), 0x3dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 034B
        gbc.setState(0x9367, 0x6e11, 0xa240, 0xb37, 0xd8f6, 0xcd34, 0x1, 0x0);
        gbc.writeMem(0x9367, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6e11);
        EXPECT(gbc.pc(), 0x9368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9367), 0x95);
        // 95 034C
        gbc.setState(0x7736, 0xf673, 0x6700, 0xfdc2, 0xbb51, 0x1aa8, 0x0, 0x1);
        gbc.writeMem(0x7736, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xf673);
        EXPECT(gbc.pc(), 0x7737);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 034D
        gbc.setState(0x3d62, 0xd102, 0x6660, 0xf609, 0x239, 0x7ba7, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd102);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0350
        gbc.setState(0x8f77, 0xf2f8, 0x3e40, 0x57d6, 0x9328, 0x8fa, 0x0, 0x1);
        gbc.writeMem(0x8f77, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xf2f8);
        EXPECT(gbc.pc(), 0x8f78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f77), 0x95);
        // 95 0351
        gbc.setState(0x25b8, 0xf8e9, 0x7bd0, 0xfbf5, 0x9818, 0xb455, 0x0, 0x0);
        gbc.writeMem(0x25b8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xf8e9);
        EXPECT(gbc.pc(), 0x25b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0352
        gbc.setState(0x311a, 0xb17a, 0x5180, 0xf1f3, 0xf383, 0x7734, 0x0, 0x1);
        gbc.writeMem(0x311a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb17a);
        EXPECT(gbc.pc(), 0x311b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0353
        gbc.setState(0x4aa7, 0x4a0d, 0xb040, 0x7f74, 0x90a0, 0x7f90, 0x1, 0x1);
        gbc.writeMem(0x4aa7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4a0d);
        EXPECT(gbc.pc(), 0x4aa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0354
        gbc.setState(0x5500, 0x5f33, 0xe1f0, 0x552c, 0x6ab6, 0xe54b, 0x1, 0x0);
        gbc.writeMem(0x5500, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5f33);
        EXPECT(gbc.pc(), 0x5501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0355
        gbc.setState(0x74bd, 0x7ca4, 0x1400, 0x268b, 0x4e04, 0x8162, 0x0, 0x0);
        gbc.writeMem(0x74bd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7ca4);
        EXPECT(gbc.pc(), 0x74be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0356
        gbc.setState(0xbebb, 0xc222, 0xc0d0, 0x1cd4, 0xf0f8, 0xfb65, 0x0, 0x1);
        gbc.writeMem(0xbebb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc222);
        EXPECT(gbc.pc(), 0xbebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbebb), 0x95);
        // 95 0357
        gbc.setState(0x2e20, 0xd4da, 0xde40, 0x44b9, 0x3206, 0x8873, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd4da);
        EXPECT(gbc.pc(), 0x2e21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0358
        gbc.setState(0xbf6, 0x1fc2, 0xb90, 0x7157, 0xfcfc, 0x7962, 0x0, 0x1);
        gbc.writeMem(0xbf6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1fc2);
        EXPECT(gbc.pc(), 0xbf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0359
        gbc.setState(0x9abc, 0x8043, 0xce50, 0x4e1f, 0x821, 0xaa4, 0x0, 0x1);
        gbc.writeMem(0x9abc, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8043);
        EXPECT(gbc.pc(), 0x9abd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9abc), 0x95);
        // 95 035B
        gbc.setState(0x9a53, 0xc801, 0xee00, 0x304a, 0x1beb, 0x7ee7, 0x1, 0x0);
        gbc.writeMem(0x9a53, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc801);
        EXPECT(gbc.pc(), 0x9a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a53), 0x95);
        // 95 035C
        gbc.setState(0xc94d, 0xf97a, 0x9ab0, 0x8393, 0xccda, 0x8767, 0x0, 0x0);
        gbc.writeMem(0xc94d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf97a);
        EXPECT(gbc.pc(), 0xc94e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94d), 0x95);
        // 95 035D
        gbc.setState(0x997a, 0x38f7, 0x3c60, 0x63fb, 0x695a, 0xc9c6, 0x0, 0x1);
        gbc.writeMem(0x997a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x38f7);
        EXPECT(gbc.pc(), 0x997b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x997a), 0x95);
        // 95 035E
        gbc.setState(0x4b32, 0x8a00, 0x2520, 0x295e, 0xe765, 0x15d5, 0x0, 0x1);
        gbc.writeMem(0x4b32, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x8a00);
        EXPECT(gbc.pc(), 0x4b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 035F
        gbc.setState(0x8a5d, 0xf61e, 0xd020, 0x485, 0xbd66, 0xe73a, 0x1, 0x0);
        gbc.writeMem(0x8a5d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf61e);
        EXPECT(gbc.pc(), 0x8a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5d), 0x95);
        // 95 0360
        gbc.setState(0xeaa1, 0xfee3, 0xbf00, 0x6f1a, 0x8910, 0xd41, 0x0, 0x0);
        gbc.writeMem(0xeaa1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xfee3);
        EXPECT(gbc.pc(), 0xeaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa1), 0x95);
        // 95 0361
        gbc.setState(0x9157, 0xdc7c, 0xe450, 0xb604, 0x687d, 0x3c44, 0x1, 0x1);
        gbc.writeMem(0x9157, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xdc7c);
        EXPECT(gbc.pc(), 0x9158);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9157), 0x95);
        // 95 0362
        gbc.setState(0x2501, 0xf669, 0x7e60, 0xaf29, 0x4ab8, 0x4e6c, 0x0, 0x1);
        gbc.writeMem(0x2501, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf669);
        EXPECT(gbc.pc(), 0x2502);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0363
        gbc.setState(0x42a6, 0xe63d, 0xb080, 0x7fce, 0x64cd, 0x11fc, 0x0, 0x0);
        gbc.writeMem(0x42a6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe63d);
        EXPECT(gbc.pc(), 0x42a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0364
        gbc.setState(0x7a77, 0xfbe9, 0xe6f0, 0x7970, 0x3fbd, 0xc925, 0x0, 0x0);
        gbc.writeMem(0x7a77, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xfbe9);
        EXPECT(gbc.pc(), 0x7a78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0365
        gbc.setState(0x5627, 0xdd42, 0xa0d0, 0xfcc8, 0x55bb, 0x3fd4, 0x1, 0x0);
        gbc.writeMem(0x5627, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdd42);
        EXPECT(gbc.pc(), 0x5628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0366
        gbc.setState(0x6dee, 0xc955, 0x8060, 0x6e12, 0x613e, 0xd321, 0x0, 0x1);
        gbc.writeMem(0x6dee, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc955);
        EXPECT(gbc.pc(), 0x6def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0367
        gbc.setState(0x6393, 0x552c, 0x9c30, 0xa1d7, 0xd472, 0xf823, 0x1, 0x0);
        gbc.writeMem(0x6393, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x552c);
        EXPECT(gbc.pc(), 0x6394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0368
        gbc.setState(0x5095, 0xc723, 0x1a50, 0xc51d, 0x4106, 0x7871, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc723);
        EXPECT(gbc.pc(), 0x5096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0369
        gbc.setState(0xcc06, 0x462d, 0x2390, 0x2913, 0x43d5, 0x9738, 0x1, 0x0);
        gbc.writeMem(0xcc06, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x462d);
        EXPECT(gbc.pc(), 0xcc07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc06), 0x95);
        // 95 036A
        gbc.setState(0x6379, 0xb707, 0x4e70, 0x728d, 0x98b2, 0xc5e4, 0x0, 0x0);
        gbc.writeMem(0x6379, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xb707);
        EXPECT(gbc.pc(), 0x637a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 036B
        gbc.setState(0x53e2, 0xeb, 0x2b20, 0xd20, 0x6ee9, 0xebf7, 0x0, 0x1);
        gbc.writeMem(0x53e2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xeb);
        EXPECT(gbc.pc(), 0x53e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 036C
        gbc.setState(0x5a03, 0x8e03, 0xb480, 0xe4eb, 0xe91d, 0xdf7a, 0x1, 0x0);
        gbc.writeMem(0x5a03, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8e03);
        EXPECT(gbc.pc(), 0x5a04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 036D
        gbc.setState(0x6b5e, 0x8a74, 0x97f0, 0x76c6, 0xb2, 0x9690, 0x1, 0x0);
        gbc.writeMem(0x6b5e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8a74);
        EXPECT(gbc.pc(), 0x6b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 036E
        gbc.setState(0xb0fd, 0xaa33, 0xf5a0, 0x781b, 0xd746, 0xc216, 0x1, 0x1);
        gbc.writeMem(0xb0fd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xaa33);
        EXPECT(gbc.pc(), 0xb0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fd), 0x95);
        // 95 036F
        gbc.setState(0xe6f5, 0x56dd, 0x8fc0, 0x80ba, 0x2131, 0x5943, 0x1, 0x1);
        gbc.writeMem(0xe6f5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x56dd);
        EXPECT(gbc.pc(), 0xe6f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f5), 0x95);
        // 95 0370
        gbc.setState(0x894d, 0xea28, 0x34b0, 0x285a, 0x5da, 0x7463, 0x1, 0x0);
        gbc.writeMem(0x894d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xea28);
        EXPECT(gbc.pc(), 0x894e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894d), 0x95);
        // 95 0371
        gbc.setState(0x706c, 0xbecc, 0xd1d0, 0x94b7, 0xe834, 0x7339, 0x1, 0x0);
        gbc.writeMem(0x706c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbecc);
        EXPECT(gbc.pc(), 0x706d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0372
        gbc.setState(0x4538, 0x58a, 0x11e0, 0xaa42, 0x856d, 0x9449, 0x1, 0x1);
        gbc.writeMem(0x4538, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x58a);
        EXPECT(gbc.pc(), 0x4539);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0373
        gbc.setState(0x5cc4, 0x242c, 0xd790, 0x579c, 0xcdd, 0xaf1, 0x1, 0x0);
        gbc.writeMem(0x5cc4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x242c);
        EXPECT(gbc.pc(), 0x5cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0374
        gbc.setState(0x9ea1, 0x85ad, 0x2ab0, 0xb26, 0x41fe, 0xbfcb, 0x0, 0x0);
        gbc.writeMem(0x9ea1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x85ad);
        EXPECT(gbc.pc(), 0x9ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ea1), 0x95);
        // 95 0375
        gbc.setState(0x4c8f, 0x7212, 0x4ba0, 0xe321, 0x32d8, 0x9c30, 0x0, 0x0);
        gbc.writeMem(0x4c8f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x7212);
        EXPECT(gbc.pc(), 0x4c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 0376
        gbc.setState(0x1bb8, 0x2adb, 0x1520, 0xfff4, 0xe196, 0xa6a1, 0x0, 0x0);
        gbc.writeMem(0x1bb8, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2adb);
        EXPECT(gbc.pc(), 0x1bb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0377
        gbc.setState(0x515f, 0xc2cd, 0x3670, 0x2bdd, 0x789a, 0x26e9, 0x0, 0x1);
        gbc.writeMem(0x515f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc2cd);
        EXPECT(gbc.pc(), 0x5160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0378
        gbc.setState(0xc474, 0xb997, 0x9600, 0xe113, 0x8a28, 0xd5c7, 0x0, 0x0);
        gbc.writeMem(0xc474, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb997);
        EXPECT(gbc.pc(), 0xc475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc474), 0x95);
        // 95 0379
        gbc.setState(0xc1e3, 0x59d6, 0x9530, 0xd9b3, 0x1e5d, 0xa432, 0x0, 0x1);
        gbc.writeMem(0xc1e3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x59d6);
        EXPECT(gbc.pc(), 0xc1e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1e3), 0x95);
        // 95 037A
        gbc.setState(0xdbb9, 0x2305, 0xc400, 0x6d93, 0x1cae, 0x341a, 0x0, 0x1);
        gbc.writeMem(0xdbb9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2305);
        EXPECT(gbc.pc(), 0xdbba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbb9), 0x95);
        // 95 037B
        gbc.setState(0x75cf, 0xe3e7, 0x50a0, 0x7752, 0x48c5, 0x7cdc, 0x1, 0x0);
        gbc.writeMem(0x75cf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe3e7);
        EXPECT(gbc.pc(), 0x75d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 037D
        gbc.setState(0x4fca, 0x4d1d, 0x8010, 0x529e, 0xb7e6, 0x6ab5, 0x0, 0x1);
        gbc.writeMem(0x4fca, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4d1d);
        EXPECT(gbc.pc(), 0x4fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 037E
        gbc.setState(0x4fac, 0xba9f, 0x9df0, 0xb078, 0xb43, 0xd092, 0x1, 0x1);
        gbc.writeMem(0x4fac, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xba9f);
        EXPECT(gbc.pc(), 0x4fad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 037F
        gbc.setState(0x96a, 0x439f, 0xe670, 0xbb95, 0x25ae, 0x364f, 0x1, 0x0);
        gbc.writeMem(0x96a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x439f);
        EXPECT(gbc.pc(), 0x96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0380
        gbc.setState(0x70d, 0x6786, 0xb8a0, 0x3c74, 0x87d, 0xe22a, 0x1, 0x0);
        gbc.writeMem(0x70d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6786);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0381
        gbc.setState(0x9c96, 0x3c17, 0x7d50, 0xb97a, 0xd83d, 0xfa80, 0x0, 0x0);
        gbc.writeMem(0x9c96, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x3c17);
        EXPECT(gbc.pc(), 0x9c97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c96), 0x95);
        // 95 0382
        gbc.setState(0x9217, 0x70c2, 0x6410, 0x9094, 0x21cc, 0x929e, 0x1, 0x0);
        gbc.writeMem(0x9217, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x70c2);
        EXPECT(gbc.pc(), 0x9218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9217), 0x95);
        // 95 0383
        gbc.setState(0xbe31, 0x3c3c, 0xcfc0, 0x544b, 0xb3a9, 0x2951, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3c3c);
        EXPECT(gbc.pc(), 0xbe32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe31), 0x95);
        // 95 0384
        gbc.setState(0xed61, 0x406d, 0x75a0, 0x3ea0, 0xc28c, 0x8365, 0x1, 0x0);
        gbc.writeMem(0xed61, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x406d);
        EXPECT(gbc.pc(), 0xed62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed61), 0x95);
        // 95 0386
        gbc.setState(0xca3e, 0x567c, 0xf640, 0x7778, 0x8188, 0xd570, 0x1, 0x1);
        gbc.writeMem(0xca3e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x567c);
        EXPECT(gbc.pc(), 0xca3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca3e), 0x95);
        // 95 0387
        gbc.setState(0x49d2, 0x95f, 0xc9c0, 0x4b5a, 0xf35e, 0xf5bd, 0x1, 0x1);
        gbc.writeMem(0x49d2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x95f);
        EXPECT(gbc.pc(), 0x49d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0388
        gbc.setState(0x5cbf, 0xed65, 0x62a0, 0x84fc, 0x1c47, 0xe90, 0x0, 0x0);
        gbc.writeMem(0x5cbf, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed65);
        EXPECT(gbc.pc(), 0x5cc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 0389
        gbc.setState(0xb4cb, 0x7091, 0x7b70, 0x44ba, 0x23f2, 0x183, 0x0, 0x0);
        gbc.writeMem(0xb4cb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7091);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4cb), 0x95);
        // 95 038A
        gbc.setState(0xa8f, 0xabad, 0x2960, 0xbd90, 0xbd74, 0x7b45, 0x0, 0x1);
        gbc.writeMem(0xa8f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xabad);
        EXPECT(gbc.pc(), 0xa90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 038B
        gbc.setState(0x48fb, 0xfec3, 0xa7e0, 0x6654, 0xa263, 0xe405, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xfec3);
        EXPECT(gbc.pc(), 0x48fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 038C
        gbc.setState(0x527e, 0x4747, 0x20a0, 0x9d3c, 0x5380, 0xe153, 0x0, 0x1);
        gbc.writeMem(0x527e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4747);
        EXPECT(gbc.pc(), 0x527f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 038D
        gbc.setState(0xc403, 0xf87d, 0x4340, 0xc348, 0x98c2, 0x1726, 0x1, 0x0);
        gbc.writeMem(0xc403, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf87d);
        EXPECT(gbc.pc(), 0xc404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc403), 0x95);
        // 95 038E
        gbc.setState(0x6804, 0x63fa, 0x7940, 0x7abe, 0xaaae, 0x5c95, 0x1, 0x1);
        gbc.writeMem(0x6804, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x63fa);
        EXPECT(gbc.pc(), 0x6805);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 038F
        gbc.setState(0x9a3b, 0x130e, 0x6a30, 0xe806, 0xe761, 0x3f01, 0x1, 0x1);
        gbc.writeMem(0x9a3b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x130e);
        EXPECT(gbc.pc(), 0x9a3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a3b), 0x95);
        // 95 0390
        gbc.setState(0x5af9, 0x9e2c, 0x21a0, 0x303d, 0x5f2e, 0x28ae, 0x0, 0x1);
        gbc.writeMem(0x5af9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9e2c);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0392
        gbc.setState(0xae66, 0x7e71, 0x3140, 0xfaa7, 0x5731, 0x65b6, 0x0, 0x0);
        gbc.writeMem(0xae66, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7e71);
        EXPECT(gbc.pc(), 0xae67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae66), 0x95);
        // 95 0393
        gbc.setState(0x1b00, 0x6d42, 0x9200, 0x1720, 0xa376, 0xf5fb, 0x0, 0x1);
        gbc.writeMem(0x1b00, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x6d42);
        EXPECT(gbc.pc(), 0x1b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0394
        gbc.setState(0xc2b0, 0x23e9, 0x3dc0, 0x7a75, 0x2343, 0x2ea7, 0x0, 0x1);
        gbc.writeMem(0xc2b0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x23e9);
        EXPECT(gbc.pc(), 0xc2b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b0), 0x95);
        // 95 0395
        gbc.setState(0x748b, 0x3b6c, 0x43a0, 0xe305, 0xf0cd, 0x9ebd, 0x0, 0x0);
        gbc.writeMem(0x748b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3b6c);
        EXPECT(gbc.pc(), 0x748c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 0396
        gbc.setState(0xa365, 0x7f8, 0x12d0, 0x91f1, 0x3777, 0xb3be, 0x1, 0x1);
        gbc.writeMem(0xa365, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7f8);
        EXPECT(gbc.pc(), 0xa366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa365), 0x95);
        // 95 0397
        gbc.setState(0x7409, 0x59b4, 0x90b0, 0xf7bf, 0xe50c, 0x4d1f, 0x0, 0x1);
        gbc.writeMem(0x7409, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x59b4);
        EXPECT(gbc.pc(), 0x740a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 0398
        gbc.setState(0xcd4a, 0x2ac8, 0xb9a0, 0xef7b, 0xa9e6, 0x522f, 0x0, 0x0);
        gbc.writeMem(0xcd4a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2ac8);
        EXPECT(gbc.pc(), 0xcd4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4a), 0x95);
        // 95 0399
        gbc.setState(0x7280, 0x3583, 0xa7a0, 0xd59a, 0x1f43, 0x1f82, 0x0, 0x0);
        gbc.writeMem(0x7280, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3583);
        EXPECT(gbc.pc(), 0x7281);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 039A
        gbc.setState(0x21e, 0x8f85, 0x9360, 0xf6ec, 0xf309, 0x8424, 0x1, 0x0);
        gbc.writeMem(0x21e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8f85);
        EXPECT(gbc.pc(), 0x21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 039B
        gbc.setState(0x8001, 0x521e, 0x67f0, 0xa1e4, 0x67e2, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0x8001, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x521e);
        EXPECT(gbc.pc(), 0x8002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8001), 0x95);
        // 95 039C
        gbc.setState(0x6b9d, 0x575a, 0x7710, 0x4533, 0xefac, 0x7353, 0x0, 0x0);
        gbc.writeMem(0x6b9d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x575a);
        EXPECT(gbc.pc(), 0x6b9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 039D
        gbc.setState(0xab5c, 0xc200, 0xe90, 0x3e54, 0x5e53, 0x76f3, 0x1, 0x1);
        gbc.writeMem(0xab5c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc200);
        EXPECT(gbc.pc(), 0xab5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab5c), 0x95);
        // 95 039E
        gbc.setState(0x20a9, 0xc0bc, 0x89b0, 0x3c75, 0xd203, 0x8598, 0x0, 0x1);
        gbc.writeMem(0x20a9, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc0bc);
        EXPECT(gbc.pc(), 0x20aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 039F
        gbc.setState(0x78e1, 0x5163, 0x1290, 0xcd98, 0x732b, 0x4046, 0x0, 0x0);
        gbc.writeMem(0x78e1, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5163);
        EXPECT(gbc.pc(), 0x78e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03A0
        gbc.setState(0xaf20, 0xfa0c, 0xbd20, 0x67f, 0x47b3, 0xee6c, 0x0, 0x1);
        gbc.writeMem(0xaf20, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfa0c);
        EXPECT(gbc.pc(), 0xaf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf20), 0x95);
        // 95 03A1
        gbc.setState(0xebe, 0xb72b, 0x89c0, 0x319a, 0xd044, 0xda38, 0x1, 0x0);
        gbc.writeMem(0xebe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb72b);
        EXPECT(gbc.pc(), 0xebf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03A2
        gbc.setState(0xdb72, 0x2927, 0xaea0, 0x31fd, 0xf893, 0x35db, 0x0, 0x1);
        gbc.writeMem(0xdb72, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2927);
        EXPECT(gbc.pc(), 0xdb73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb72), 0x95);
        // 95 03A3
        gbc.setState(0x1127, 0x74f, 0xcb0, 0xa88c, 0x266c, 0x808c, 0x0, 0x1);
        gbc.writeMem(0x1127, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x74f);
        EXPECT(gbc.pc(), 0x1128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03A4
        gbc.setState(0xbfdd, 0xac44, 0x4f70, 0x403e, 0xefda, 0x746, 0x0, 0x1);
        gbc.writeMem(0xbfdd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xac44);
        EXPECT(gbc.pc(), 0xbfde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfdd), 0x95);
        // 95 03A5
        gbc.setState(0xbb47, 0xa36, 0xc910, 0xd59b, 0x4ba7, 0x73ec, 0x0, 0x1);
        gbc.writeMem(0xbb47, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa36);
        EXPECT(gbc.pc(), 0xbb48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb47), 0x95);
        // 95 03A6
        gbc.setState(0xbad3, 0x9683, 0x43f0, 0xc709, 0x5599, 0xb7d0, 0x1, 0x1);
        gbc.writeMem(0xbad3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9683);
        EXPECT(gbc.pc(), 0xbad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad3), 0x95);
        // 95 03A7
        gbc.setState(0x2ebe, 0xb26b, 0xa5d0, 0xd61, 0x2932, 0xde2e, 0x0, 0x1);
        gbc.writeMem(0x2ebe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb26b);
        EXPECT(gbc.pc(), 0x2ebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03A8
        gbc.setState(0xd068, 0xa807, 0xafa0, 0xbe49, 0x19cd, 0x2e4a, 0x0, 0x0);
        gbc.writeMem(0xd068, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa807);
        EXPECT(gbc.pc(), 0xd069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd068), 0x95);
        // 95 03A9
        gbc.setState(0x6b40, 0x4d00, 0x57e0, 0xad60, 0x92dc, 0xfc0e, 0x0, 0x1);
        gbc.writeMem(0x6b40, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4d00);
        EXPECT(gbc.pc(), 0x6b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03AA
        gbc.setState(0xa0, 0x232c, 0x8d70, 0xf183, 0xb753, 0x1721, 0x1, 0x1);
        gbc.writeMem(0xa0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x232c);
        EXPECT(gbc.pc(), 0xa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03AB
        gbc.setState(0x56ec, 0xe524, 0xee40, 0xe068, 0xe9ac, 0x9490, 0x1, 0x1);
        gbc.writeMem(0x56ec, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xe524);
        EXPECT(gbc.pc(), 0x56ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03AC
        gbc.setState(0x6c6c, 0xcb3c, 0x7d30, 0xaab3, 0x28c5, 0xb875, 0x1, 0x1);
        gbc.writeMem(0x6c6c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcb3c);
        EXPECT(gbc.pc(), 0x6c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03AD
        gbc.setState(0x72e6, 0x61b9, 0x1680, 0x7ec8, 0x587d, 0xc82a, 0x1, 0x0);
        gbc.writeMem(0x72e6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x61b9);
        EXPECT(gbc.pc(), 0x72e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03AE
        gbc.setState(0x4799, 0x7cc, 0x90f0, 0x36a3, 0xb7db, 0xd14, 0x0, 0x1);
        gbc.writeMem(0x4799, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7cc);
        EXPECT(gbc.pc(), 0x479a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03AF
        gbc.setState(0x96a4, 0x1358, 0x8c50, 0x5c11, 0x172e, 0x3dd8, 0x0, 0x1);
        gbc.writeMem(0x96a4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1358);
        EXPECT(gbc.pc(), 0x96a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a4), 0x95);
        // 95 03B0
        gbc.setState(0x6627, 0xe8ce, 0x2d00, 0x9474, 0x7f6e, 0x7059, 0x0, 0x0);
        gbc.writeMem(0x6627, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe8ce);
        EXPECT(gbc.pc(), 0x6628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03B1
        gbc.setState(0xb095, 0x518c, 0xe6b0, 0x7353, 0x6f9d, 0xedee, 0x1, 0x0);
        gbc.writeMem(0xb095, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x518c);
        EXPECT(gbc.pc(), 0xb096);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb095), 0x95);
        // 95 03B3
        gbc.setState(0xdd78, 0x2a04, 0x2b30, 0xdc01, 0x8020, 0x4788, 0x1, 0x1);
        gbc.writeMem(0xdd78, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2a04);
        EXPECT(gbc.pc(), 0xdd79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd78), 0x95);
        // 95 03B4
        gbc.setState(0x13d4, 0x5468, 0x4bf0, 0x86c7, 0xcc49, 0x5cf, 0x0, 0x1);
        gbc.writeMem(0x13d4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5468);
        EXPECT(gbc.pc(), 0x13d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03B5
        gbc.setState(0xa9b, 0x232a, 0xfb0, 0x1673, 0xdcdd, 0xe3ac, 0x1, 0x0);
        gbc.writeMem(0xa9b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x232a);
        EXPECT(gbc.pc(), 0xa9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03B6
        gbc.setState(0x6873, 0x609, 0xedf0, 0xaa24, 0x4b2, 0x402a, 0x0, 0x0);
        gbc.writeMem(0x6873, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x609);
        EXPECT(gbc.pc(), 0x6874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03B7
        gbc.setState(0xd763, 0x26a6, 0xafd0, 0x6fec, 0x743b, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0xd763, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x26a6);
        EXPECT(gbc.pc(), 0xd764);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd763), 0x95);
        // 95 03B8
        gbc.setState(0x929f, 0xea25, 0xce20, 0xd530, 0x53a9, 0x11db, 0x0, 0x0);
        gbc.writeMem(0x929f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xea25);
        EXPECT(gbc.pc(), 0x92a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929f), 0x95);
        // 95 03B9
        gbc.setState(0xab7d, 0xcc98, 0x8e20, 0x2697, 0x6c4b, 0x5c5e, 0x1, 0x1);
        gbc.writeMem(0xab7d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xcc98);
        EXPECT(gbc.pc(), 0xab7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab7d), 0x95);
        // 95 03BA
        gbc.setState(0x20cb, 0x2bcf, 0x20, 0x6fac, 0xfc47, 0xb9d2, 0x0, 0x1);
        gbc.writeMem(0x20cb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2bcf);
        EXPECT(gbc.pc(), 0x20cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03BB
        gbc.setState(0x6850, 0x6a8, 0x7f30, 0x1e01, 0xefc1, 0xcf0a, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6a8);
        EXPECT(gbc.pc(), 0x6851);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03BC
        gbc.setState(0x3c5e, 0xc968, 0x6e70, 0x3089, 0x7ab4, 0xe9e0, 0x0, 0x0);
        gbc.writeMem(0x3c5e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x3c5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03BD
        gbc.setState(0x450b, 0xbf0c, 0x4f60, 0x46c, 0x2010, 0xde2, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xbf0c);
        EXPECT(gbc.pc(), 0x450c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03BE
        gbc.setState(0x5afd, 0xccf1, 0x6bb0, 0xba4b, 0x5819, 0x47ed, 0x0, 0x1);
        gbc.writeMem(0x5afd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xccf1);
        EXPECT(gbc.pc(), 0x5afe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03BF
        gbc.setState(0x86bd, 0xca75, 0x4110, 0x7b32, 0xa023, 0x38be, 0x1, 0x0);
        gbc.writeMem(0x86bd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xca75);
        EXPECT(gbc.pc(), 0x86be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86bd), 0x95);
        // 95 03C0
        gbc.setState(0xefba, 0xea9e, 0xc000, 0xcaf, 0x6a64, 0xf47, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xea9e);
        EXPECT(gbc.pc(), 0xefbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefba), 0x95);
        // 95 03C1
        gbc.setState(0x43c7, 0x2064, 0x68b0, 0x33d1, 0x262, 0x355f, 0x0, 0x1);
        gbc.writeMem(0x43c7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2064);
        EXPECT(gbc.pc(), 0x43c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03C2
        gbc.setState(0xdc64, 0x6a53, 0x6bc0, 0x669a, 0xfeea, 0x37ff, 0x1, 0x0);
        gbc.writeMem(0xdc64, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0xdc65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc64), 0x95);
        // 95 03C3
        gbc.setState(0x9ae7, 0xacb9, 0xc820, 0xfd12, 0xa49f, 0xf64e, 0x0, 0x1);
        gbc.writeMem(0x9ae7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xacb9);
        EXPECT(gbc.pc(), 0x9ae8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ae7), 0x95);
        // 95 03C4
        gbc.setState(0xcf5a, 0x2159, 0x3f60, 0x8014, 0x9121, 0x888, 0x0, 0x0);
        gbc.writeMem(0xcf5a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2159);
        EXPECT(gbc.pc(), 0xcf5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf5a), 0x95);
        // 95 03C5
        gbc.setState(0x17cb, 0x3e82, 0x610, 0x237e, 0x4365, 0x3961, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3e82);
        EXPECT(gbc.pc(), 0x17cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03C7
        gbc.setState(0xda7c, 0x99ec, 0x1130, 0xd737, 0xa951, 0x8f73, 0x0, 0x1);
        gbc.writeMem(0xda7c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x99ec);
        EXPECT(gbc.pc(), 0xda7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda7c), 0x95);
        // 95 03C8
        gbc.setState(0xee41, 0xb773, 0x8d30, 0x6fa4, 0x7c96, 0xa445, 0x0, 0x1);
        gbc.writeMem(0xee41, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb773);
        EXPECT(gbc.pc(), 0xee42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee41), 0x95);
        // 95 03C9
        gbc.setState(0xca8e, 0x7e11, 0x1660, 0x5c0d, 0x4afe, 0x79a4, 0x1, 0x1);
        gbc.writeMem(0xca8e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7e11);
        EXPECT(gbc.pc(), 0xca8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8e), 0x95);
        // 95 03CA
        gbc.setState(0x2d0, 0xd49, 0x4370, 0xba26, 0xf43c, 0x36d6, 0x1, 0x1);
        gbc.writeMem(0x2d0, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd49);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03CB
        gbc.setState(0x9ea7, 0x970c, 0x5380, 0x9740, 0x5a20, 0x960c, 0x0, 0x1);
        gbc.writeMem(0x9ea7, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x970c);
        EXPECT(gbc.pc(), 0x9ea8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea7), 0x95);
        // 95 03CC
        gbc.setState(0xce05, 0xc6cd, 0x47e0, 0xce8a, 0xc4e1, 0xd7cd, 0x1, 0x1);
        gbc.writeMem(0xce05, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc6cd);
        EXPECT(gbc.pc(), 0xce06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce05), 0x95);
        // 95 03CD
        gbc.setState(0x9a8d, 0x6cac, 0x9cf0, 0x3fc0, 0x5aa9, 0x62b0, 0x1, 0x0);
        gbc.writeMem(0x9a8d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x6cac);
        EXPECT(gbc.pc(), 0x9a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a8d), 0x95);
        // 95 03CE
        gbc.setState(0x837, 0xa271, 0x1d00, 0xa7ee, 0xa5a9, 0x1226, 0x1, 0x1);
        gbc.writeMem(0x837, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa271);
        EXPECT(gbc.pc(), 0x838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03CF
        gbc.setState(0x3f57, 0x28af, 0xc450, 0x9e5d, 0x38d2, 0xff78, 0x1, 0x0);
        gbc.writeMem(0x3f57, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x28af);
        EXPECT(gbc.pc(), 0x3f58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03D0
        gbc.setState(0x8c89, 0x233c, 0x9c0, 0x9b8e, 0x518a, 0x9d9b, 0x0, 0x1);
        gbc.writeMem(0x8c89, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x233c);
        EXPECT(gbc.pc(), 0x8c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c89), 0x95);
        // 95 03D1
        gbc.setState(0x547d, 0x9906, 0x3230, 0x3f14, 0x9f63, 0xa331, 0x1, 0x0);
        gbc.writeMem(0x547d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9906);
        EXPECT(gbc.pc(), 0x547e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03D2
        gbc.setState(0xdf9e, 0xcccc, 0x3710, 0x8c4a, 0x8739, 0x1a4e, 0x1, 0x1);
        gbc.writeMem(0xdf9e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xcccc);
        EXPECT(gbc.pc(), 0xdf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf9e), 0x95);
        // 95 03D3
        gbc.setState(0x5d36, 0xe4eb, 0xf60, 0x7715, 0x7524, 0xbc2a, 0x1, 0x1);
        gbc.writeMem(0x5d36, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe4eb);
        EXPECT(gbc.pc(), 0x5d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03D4
        gbc.setState(0x21c, 0x8d24, 0x6cc0, 0x8e07, 0x6f05, 0x4406, 0x1, 0x0);
        gbc.writeMem(0x21c, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8d24);
        EXPECT(gbc.pc(), 0x21d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03D6
        gbc.setState(0xa87a, 0xc1b8, 0xd0d0, 0xba9d, 0xbfcd, 0xb68f, 0x1, 0x1);
        gbc.writeMem(0xa87a, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc1b8);
        EXPECT(gbc.pc(), 0xa87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa87a), 0x95);
        // 95 03D7
        gbc.setState(0x2acd, 0xcef0, 0xa3f0, 0x2c08, 0xd38, 0x22a4, 0x0, 0x1);
        gbc.writeMem(0x2acd, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xcef0);
        EXPECT(gbc.pc(), 0x2ace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03D8
        gbc.setState(0x2f5, 0x2bd1, 0xfb60, 0xf966, 0x685e, 0x57e9, 0x0, 0x0);
        gbc.writeMem(0x2f5, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2bd1);
        EXPECT(gbc.pc(), 0x2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03D9
        gbc.setState(0x288e, 0x9099, 0x1430, 0xba13, 0xc1ad, 0xe3a3, 0x1, 0x0);
        gbc.writeMem(0x288e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9099);
        EXPECT(gbc.pc(), 0x288f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03DA
        gbc.setState(0x667e, 0x1f39, 0x94e0, 0xf233, 0xa226, 0x3f70, 0x0, 0x1);
        gbc.writeMem(0x667e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1f39);
        EXPECT(gbc.pc(), 0x667f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03DB
        gbc.setState(0xc4a3, 0x5ec3, 0x1090, 0x515f, 0x3664, 0x788e, 0x1, 0x0);
        gbc.writeMem(0xc4a3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5ec3);
        EXPECT(gbc.pc(), 0xc4a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a3), 0x95);
        // 95 03DC
        gbc.setState(0xd35, 0x63e5, 0x3630, 0x21c0, 0xf821, 0xca5e, 0x0, 0x0);
        gbc.writeMem(0xd35, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x63e5);
        EXPECT(gbc.pc(), 0xd36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03DD
        gbc.setState(0x9a5d, 0xc30a, 0xd7f0, 0x878d, 0xb2c1, 0xae48, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc30a);
        EXPECT(gbc.pc(), 0x9a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5d), 0x95);
        // 95 03DE
        gbc.setState(0x7740, 0x7382, 0xb480, 0x7e87, 0xf341, 0x3c63, 0x0, 0x1);
        gbc.writeMem(0x7740, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x7382);
        EXPECT(gbc.pc(), 0x7741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03DF
        gbc.setState(0x49f4, 0x2950, 0xe8f0, 0x11f9, 0xddae, 0xcf36, 0x0, 0x1);
        gbc.writeMem(0x49f4, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2950);
        EXPECT(gbc.pc(), 0x49f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 95 03E0
        gbc.setState(0xdc2d, 0xd36a, 0x4490, 0xdb2d, 0xbe3d, 0x6092, 0x0, 0x0);
        gbc.writeMem(0xdc2d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xd36a);
        EXPECT(gbc.pc(), 0xdc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc2d), 0x95);
        // 95 03E1
        gbc.setState(0x34e2, 0xba0d, 0xb0a0, 0x441d, 0xf2f4, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x34e2, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xba0d);
        EXPECT(gbc.pc(), 0x34e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03E2
        gbc.setState(0x365e, 0x571b, 0xe580, 0x6127, 0x7156, 0xff5e, 0x0, 0x0);
        gbc.writeMem(0x365e, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x571b);
        EXPECT(gbc.pc(), 0x365f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 95 03E3
        gbc.setState(0xaa9d, 0xf85a, 0xeff0, 0xaaf6, 0x1554, 0x4018, 0x0, 0x0);
        gbc.writeMem(0xaa9d, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf85a);
        EXPECT(gbc.pc(), 0xaa9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9d), 0x95);
        // 95 03E4
        gbc.setState(0x59e3, 0x5fea, 0x2030, 0xc592, 0x35c0, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0x59e3, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5fea);
        EXPECT(gbc.pc(), 0x59e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 95 03E5
        gbc.setState(0xdf30, 0xb1e5, 0x6590, 0xeffa, 0x30b0, 0x48ca, 0x1, 0x1);
        gbc.writeMem(0xdf30, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf30), 0x95);
        // 95 03E6
        gbc.setState(0x25f6, 0x6949, 0x7970, 0x4c, 0xf126, 0x9ee7, 0x0, 0x0);
        gbc.writeMem(0x25f6, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6949);
        EXPECT(gbc.pc(), 0x25f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 95 03E7
        gbc.setState(0xe3fe, 0x3596, 0x4010, 0xe23c, 0xc3b3, 0xd2f8, 0x0, 0x0);
        gbc.writeMem(0xe3fe, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x3596);
        EXPECT(gbc.pc(), 0xe3ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3fe), 0x95);
    }
}
#endif
