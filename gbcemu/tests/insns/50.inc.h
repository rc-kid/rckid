    TEST(gbcemu, opcode_50) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 50 0000
        gbc.setState(0x1864, 0x2950, 0xcb10, 0x8291, 0x5ff1, 0x4743, 0x0, 0x1);
        gbc.writeMem(0x1864, { 0x50 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2950, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0001
        gbc.setState(0x2a90, 0x86a6, 0x43c0, 0x2c0e, 0xf591, 0x9e20, 0x1, 0x1);
        gbc.writeMem(0x2a90, { 0x50 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x86a6, gbc.sp());
        EXPECT(0x2a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0002
        gbc.setState(0x6639, 0xc1ce, 0x92b0, 0x6408, 0x2a94, 0xed82, 0x1, 0x0);
        gbc.writeMem(0x6639, { 0x50 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc1ce, gbc.sp());
        EXPECT(0x663a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0003
        gbc.setState(0xcf9e, 0x9613, 0x4f50, 0xbacb, 0x4a9, 0xb973, 0x1, 0x1);
        gbc.writeMem(0xcf9e, { 0x50 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9613, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcf9e));
        // 50 0004
        gbc.setState(0x8ba5, 0xa9d, 0xdab0, 0xd70e, 0xdf32, 0xa6ae, 0x1, 0x1);
        gbc.writeMem(0x8ba5, { 0x50 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa9d, gbc.sp());
        EXPECT(0x8ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8ba5));
        // 50 0005
        gbc.setState(0x246, 0x3c0, 0x2230, 0xc737, 0x3dad, 0x9ff6, 0x1, 0x1);
        gbc.writeMem(0x246, { 0x50 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3c0, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0006
        gbc.setState(0xa8c5, 0x2090, 0xd550, 0xbe81, 0x3ab1, 0x79e9, 0x0, 0x0);
        gbc.writeMem(0xa8c5, { 0x50 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2090, gbc.sp());
        EXPECT(0xa8c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa8c5));
        // 50 0007
        gbc.setState(0x2293, 0x6e21, 0x49f0, 0xc29c, 0xfd28, 0x4238, 0x1, 0x1);
        gbc.writeMem(0x2293, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6e21, gbc.sp());
        EXPECT(0x2294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0008
        gbc.setState(0xd640, 0xec84, 0x89f0, 0x9edc, 0x6dc0, 0x2f37, 0x1, 0x0);
        gbc.writeMem(0xd640, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xec84, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd640));
        // 50 000A
        gbc.setState(0x9788, 0x44f0, 0x1860, 0x3759, 0x6324, 0x7caa, 0x1, 0x1);
        gbc.writeMem(0x9788, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x44f0, gbc.sp());
        EXPECT(0x9789, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9788));
        // 50 000B
        gbc.setState(0x8e0a, 0x288d, 0x6360, 0x4b15, 0x4478, 0x330, 0x1, 0x1);
        gbc.writeMem(0x8e0a, { 0x50 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x288d, gbc.sp());
        EXPECT(0x8e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8e0a));
        // 50 000C
        gbc.setState(0xea90, 0x9a3a, 0x91e0, 0x237d, 0x1cdf, 0x76fe, 0x1, 0x0);
        gbc.writeMem(0xea90, { 0x50 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9a3a, gbc.sp());
        EXPECT(0xea91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xea90));
        // 50 000D
        gbc.setState(0xb865, 0xa63c, 0x2970, 0xe1e, 0xa7aa, 0x4561, 0x0, 0x0);
        gbc.writeMem(0xb865, { 0x50 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa63c, gbc.sp());
        EXPECT(0xb866, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb865));
        // 50 000E
        gbc.setState(0xb8ed, 0xec8, 0x50a0, 0x2fc7, 0x5040, 0xdd4f, 0x1, 0x1);
        gbc.writeMem(0xb8ed, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0xb8ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb8ed));
        // 50 000F
        gbc.setState(0xbca7, 0x841c, 0xb100, 0x27ca, 0xc0fa, 0x4a9d, 0x0, 0x0);
        gbc.writeMem(0xbca7, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x841c, gbc.sp());
        EXPECT(0xbca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbca7));
        // 50 0010
        gbc.setState(0xd05c, 0xeb96, 0x67a0, 0x82a2, 0xa1cf, 0x6c03, 0x1, 0x0);
        gbc.writeMem(0xd05c, { 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeb96, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd05c));
        // 50 0011
        gbc.setState(0xe1b6, 0x7f60, 0xcda0, 0x8514, 0x167e, 0x265b, 0x0, 0x0);
        gbc.writeMem(0xe1b6, { 0x50 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0xe1b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe1b6));
        // 50 0012
        gbc.setState(0x7a46, 0x9751, 0xbbd0, 0x1ff1, 0xb72c, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x7a46, { 0x50 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9751, gbc.sp());
        EXPECT(0x7a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0013
        gbc.setState(0xb626, 0xe9e5, 0xec50, 0x4a9f, 0x9242, 0xa06a, 0x0, 0x1);
        gbc.writeMem(0xb626, { 0x50 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe9e5, gbc.sp());
        EXPECT(0xb627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb626));
        // 50 0014
        gbc.setState(0xd0f6, 0x53ef, 0x8b50, 0x203c, 0x9cb, 0xdf1c, 0x0, 0x0);
        gbc.writeMem(0xd0f6, { 0x50 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x53ef, gbc.sp());
        EXPECT(0xd0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd0f6));
        // 50 0015
        gbc.setState(0xbc7f, 0x1b78, 0x580, 0x5d51, 0x6861, 0x996f, 0x0, 0x1);
        gbc.writeMem(0xbc7f, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x1b78, gbc.sp());
        EXPECT(0xbc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbc7f));
        // 50 0016
        gbc.setState(0xee26, 0x39b5, 0x61b0, 0x8d7b, 0x6bd3, 0x89e0, 0x0, 0x0);
        gbc.writeMem(0xee26, { 0x50 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x39b5, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xee26));
        // 50 0017
        gbc.setState(0x7791, 0xf340, 0x5670, 0x5f7b, 0x6cde, 0x154e, 0x0, 0x0);
        gbc.writeMem(0x7791, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf340, gbc.sp());
        EXPECT(0x7792, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0018
        gbc.setState(0xdc9d, 0x7103, 0xfdb0, 0xfb7e, 0x9d93, 0x5488, 0x0, 0x1);
        gbc.writeMem(0xdc9d, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7103, gbc.sp());
        EXPECT(0xdc9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdc9d));
        // 50 0019
        gbc.setState(0x4090, 0x4277, 0xb040, 0xabd9, 0x696d, 0x47e1, 0x0, 0x0);
        gbc.writeMem(0x4090, { 0x50 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4277, gbc.sp());
        EXPECT(0x4091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 001A
        gbc.setState(0x47b1, 0x6b27, 0x2d60, 0x5c65, 0x1b94, 0xa1e8, 0x0, 0x0);
        gbc.writeMem(0x47b1, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6b27, gbc.sp());
        EXPECT(0x47b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 001B
        gbc.setState(0x517d, 0x427b, 0x2830, 0x7215, 0x7ddd, 0xfbd6, 0x0, 0x0);
        gbc.writeMem(0x517d, { 0x50 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x427b, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 001C
        gbc.setState(0x313b, 0x135b, 0x7020, 0x7823, 0x9456, 0x2748, 0x0, 0x0);
        gbc.writeMem(0x313b, { 0x50 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0x313c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 001D
        gbc.setState(0x6d66, 0x9102, 0x6ee0, 0x508f, 0x64e4, 0xeadd, 0x0, 0x0);
        gbc.writeMem(0x6d66, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x9102, gbc.sp());
        EXPECT(0x6d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 001E
        gbc.setState(0x46a7, 0x67af, 0x56f0, 0xdb4c, 0x1476, 0xf32, 0x0, 0x1);
        gbc.writeMem(0x46a7, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x67af, gbc.sp());
        EXPECT(0x46a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 001F
        gbc.setState(0xd5fe, 0x5507, 0x2350, 0xe922, 0x5d71, 0xdae3, 0x0, 0x0);
        gbc.writeMem(0xd5fe, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5507, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd5fe));
        // 50 0020
        gbc.setState(0x79ae, 0x51be, 0xeb70, 0x3fd9, 0xe155, 0x5b02, 0x1, 0x0);
        gbc.writeMem(0x79ae, { 0x50 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0x79af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0021
        gbc.setState(0x2a45, 0xb55c, 0xefd0, 0x42d9, 0x7322, 0x706a, 0x1, 0x0);
        gbc.writeMem(0x2a45, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb55c, gbc.sp());
        EXPECT(0x2a46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0022
        gbc.setState(0xdbec, 0x2663, 0x89f0, 0xceab, 0x75d6, 0x7b75, 0x1, 0x1);
        gbc.writeMem(0xdbec, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2663, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdbec));
        // 50 0023
        gbc.setState(0xd3ec, 0x5d6f, 0x9b40, 0x16e, 0x2e95, 0xe314, 0x1, 0x1);
        gbc.writeMem(0xd3ec, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5d6f, gbc.sp());
        EXPECT(0xd3ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd3ec));
        // 50 0025
        gbc.setState(0x6385, 0x5efa, 0xf2c0, 0xf76d, 0x6712, 0xaefa, 0x0, 0x1);
        gbc.writeMem(0x6385, { 0x50 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5efa, gbc.sp());
        EXPECT(0x6386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0026
        gbc.setState(0x5f4a, 0xcc39, 0xbad0, 0x8cc8, 0xdc7e, 0xf83a, 0x1, 0x1);
        gbc.writeMem(0x5f4a, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcc39, gbc.sp());
        EXPECT(0x5f4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0027
        gbc.setState(0xa841, 0x36a4, 0x6cf0, 0xfe3f, 0xf438, 0xe0f6, 0x1, 0x0);
        gbc.writeMem(0xa841, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x36a4, gbc.sp());
        EXPECT(0xa842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa841));
        // 50 0028
        gbc.setState(0xe9bc, 0xfc28, 0xad10, 0x7b18, 0xcdc3, 0xe459, 0x0, 0x0);
        gbc.writeMem(0xe9bc, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfc28, gbc.sp());
        EXPECT(0xe9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe9bc));
        // 50 0029
        gbc.setState(0xc84b, 0x4d63, 0x2c40, 0x55a9, 0x136, 0x9e43, 0x1, 0x0);
        gbc.writeMem(0xc84b, { 0x50 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4d63, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc84b));
        // 50 002A
        gbc.setState(0x1397, 0x21c8, 0x10d0, 0xe0b4, 0xbd38, 0x737e, 0x1, 0x1);
        gbc.writeMem(0x1397, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x1398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 002C
        gbc.setState(0x1994, 0x9c23, 0xa5f0, 0xb735, 0xc5ed, 0xd6b0, 0x0, 0x1);
        gbc.writeMem(0x1994, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c23, gbc.sp());
        EXPECT(0x1995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 002D
        gbc.setState(0xedeb, 0x1917, 0x9490, 0x63c7, 0xfd3, 0xe3c0, 0x0, 0x0);
        gbc.writeMem(0xedeb, { 0x50 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1917, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xedeb));
        // 50 002F
        gbc.setState(0xdf7e, 0x273a, 0xa110, 0xb4bc, 0xfa09, 0xb170, 0x0, 0x1);
        gbc.writeMem(0xdf7e, { 0x50 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x273a, gbc.sp());
        EXPECT(0xdf7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdf7e));
        // 50 0030
        gbc.setState(0xf75, 0x4937, 0x4b90, 0xb163, 0x7b35, 0x1139, 0x0, 0x1);
        gbc.writeMem(0xf75, { 0x50 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0xf76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0031
        gbc.setState(0x685, 0xac60, 0x33f0, 0x2685, 0xbf28, 0x6a23, 0x1, 0x1);
        gbc.writeMem(0x685, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0x686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0032
        gbc.setState(0x5dbb, 0x100b, 0x53b0, 0x6622, 0x9e38, 0xe154, 0x0, 0x1);
        gbc.writeMem(0x5dbb, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x100b, gbc.sp());
        EXPECT(0x5dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0034
        gbc.setState(0x2d8d, 0x6223, 0x81d0, 0xede5, 0xd1fd, 0xf46d, 0x1, 0x1);
        gbc.writeMem(0x2d8d, { 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6223, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0035
        gbc.setState(0x749e, 0x81d3, 0x8100, 0xdb0a, 0x7f04, 0x8fc6, 0x0, 0x0);
        gbc.writeMem(0x749e, { 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x81d3, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0036
        gbc.setState(0xe37c, 0x94ae, 0xec00, 0x6942, 0xa143, 0x1881, 0x0, 0x1);
        gbc.writeMem(0xe37c, { 0x50 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x94ae, gbc.sp());
        EXPECT(0xe37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe37c));
        // 50 0037
        gbc.setState(0x1244, 0xa1e2, 0xd850, 0xb137, 0xaa02, 0x9a06, 0x0, 0x1);
        gbc.writeMem(0x1244, { 0x50 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa1e2, gbc.sp());
        EXPECT(0x1245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0038
        gbc.setState(0xed57, 0xd271, 0xf350, 0x1b48, 0x693b, 0x1723, 0x0, 0x1);
        gbc.writeMem(0xed57, { 0x50 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd271, gbc.sp());
        EXPECT(0xed58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xed57));
        // 50 0039
        gbc.setState(0x848, 0x3d9c, 0x7b20, 0x8590, 0x7399, 0x503, 0x1, 0x1);
        gbc.writeMem(0x848, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3d9c, gbc.sp());
        EXPECT(0x849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 003A
        gbc.setState(0x594e, 0x9101, 0xc0e0, 0x2129, 0x5c8a, 0xaa2c, 0x0, 0x0);
        gbc.writeMem(0x594e, { 0x50 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9101, gbc.sp());
        EXPECT(0x594f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 003C
        gbc.setState(0xd9c4, 0xe80, 0x48a0, 0xbe50, 0xc75c, 0x8fb, 0x0, 0x1);
        gbc.writeMem(0xd9c4, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe80, gbc.sp());
        EXPECT(0xd9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd9c4));
        // 50 003D
        gbc.setState(0x40b5, 0x2a13, 0xb390, 0xf39f, 0xdb63, 0xa045, 0x0, 0x0);
        gbc.writeMem(0x40b5, { 0x50 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2a13, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 003F
        gbc.setState(0xb74, 0x1f78, 0x7d40, 0xc15c, 0x3671, 0x8c09, 0x1, 0x1);
        gbc.writeMem(0xb74, { 0x50 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1f78, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0040
        gbc.setState(0xb8d, 0x773c, 0xed90, 0x3a8f, 0xd1ff, 0xe0c6, 0x1, 0x1);
        gbc.writeMem(0xb8d, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x773c, gbc.sp());
        EXPECT(0xb8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0041
        gbc.setState(0x7e61, 0x76e1, 0x3a40, 0x2911, 0xde6c, 0x174e, 0x1, 0x1);
        gbc.writeMem(0x7e61, { 0x50 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x76e1, gbc.sp());
        EXPECT(0x7e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0042
        gbc.setState(0xe806, 0xc852, 0xf1c0, 0xf36a, 0xafbf, 0x52a9, 0x1, 0x0);
        gbc.writeMem(0xe806, { 0x50 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc852, gbc.sp());
        EXPECT(0xe807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe806));
        // 50 0044
        gbc.setState(0x1f82, 0xdfe5, 0x3bc0, 0xa921, 0x6a, 0x52ae, 0x1, 0x1);
        gbc.writeMem(0x1f82, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdfe5, gbc.sp());
        EXPECT(0x1f83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0045
        gbc.setState(0x8cb3, 0x5344, 0x1d30, 0x7339, 0x6c7f, 0x8ea0, 0x0, 0x0);
        gbc.writeMem(0x8cb3, { 0x50 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5344, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8cb3));
        // 50 0046
        gbc.setState(0x2858, 0xf0cd, 0xfd00, 0xf9b9, 0x6b44, 0xb35e, 0x1, 0x1);
        gbc.writeMem(0x2858, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf0cd, gbc.sp());
        EXPECT(0x2859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0047
        gbc.setState(0x87f, 0x62da, 0xb1f0, 0x291d, 0x9b5c, 0x6156, 0x0, 0x0);
        gbc.writeMem(0x87f, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x62da, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0048
        gbc.setState(0x5b, 0x5c2d, 0x1af0, 0x2083, 0xa631, 0x5325, 0x0, 0x0);
        gbc.writeMem(0x5b, { 0x50 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5c2d, gbc.sp());
        EXPECT(0x5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0049
        gbc.setState(0x1150, 0xc60e, 0x3e10, 0xb719, 0x6dd3, 0x1e14, 0x1, 0x1);
        gbc.writeMem(0x1150, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc60e, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 004A
        gbc.setState(0x3fce, 0x1a86, 0x4440, 0x7b3a, 0x9672, 0xd45f, 0x1, 0x0);
        gbc.writeMem(0x3fce, { 0x50 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1a86, gbc.sp());
        EXPECT(0x3fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 004B
        gbc.setState(0x28ae, 0xb817, 0xf620, 0xcdfc, 0xc352, 0x5f3b, 0x0, 0x1);
        gbc.writeMem(0x28ae, { 0x50 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 004C
        gbc.setState(0xaac3, 0x6315, 0xd680, 0x9712, 0xedb1, 0x7ee4, 0x1, 0x0);
        gbc.writeMem(0xaac3, { 0x50 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6315, gbc.sp());
        EXPECT(0xaac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaac3));
        // 50 004D
        gbc.setState(0x7636, 0x47c8, 0x3eb0, 0x170e, 0x884b, 0xeb6a, 0x1, 0x1);
        gbc.writeMem(0x7636, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x47c8, gbc.sp());
        EXPECT(0x7637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 004E
        gbc.setState(0x85fc, 0xfa65, 0xe470, 0x554a, 0x9d5f, 0x7ffa, 0x0, 0x0);
        gbc.writeMem(0x85fc, { 0x50 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xfa65, gbc.sp());
        EXPECT(0x85fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x85fc));
        // 50 004F
        gbc.setState(0xb98b, 0x6bc4, 0x49f0, 0x7740, 0xc0c3, 0x74da, 0x1, 0x0);
        gbc.writeMem(0xb98b, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6bc4, gbc.sp());
        EXPECT(0xb98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb98b));
        // 50 0050
        gbc.setState(0xefd8, 0xae22, 0x9360, 0x1ad8, 0x9502, 0xb6bb, 0x0, 0x0);
        gbc.writeMem(0xefd8, { 0x50 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xae22, gbc.sp());
        EXPECT(0xefd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xefd8));
        // 50 0051
        gbc.setState(0x522, 0xd4b1, 0x4e50, 0xe93e, 0xd040, 0x18fb, 0x1, 0x0);
        gbc.writeMem(0x522, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd4b1, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0052
        gbc.setState(0x97a1, 0x8d5b, 0x44b0, 0xd443, 0x9124, 0xf7d0, 0x0, 0x0);
        gbc.writeMem(0x97a1, { 0x50 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0x97a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x97a1));
        // 50 0053
        gbc.setState(0x542a, 0x505c, 0x6320, 0xd012, 0x3aa9, 0x8848, 0x0, 0x1);
        gbc.writeMem(0x542a, { 0x50 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x505c, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0055
        gbc.setState(0x816a, 0x7c08, 0x210, 0xbe5f, 0xe234, 0x20b1, 0x1, 0x1);
        gbc.writeMem(0x816a, { 0x50 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7c08, gbc.sp());
        EXPECT(0x816b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x816a));
        // 50 0056
        gbc.setState(0x1a4f, 0x4112, 0x9720, 0xb03b, 0xa708, 0xfbba, 0x0, 0x1);
        gbc.writeMem(0x1a4f, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4112, gbc.sp());
        EXPECT(0x1a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0057
        gbc.setState(0x6262, 0x8e78, 0x1b30, 0x48ef, 0xc553, 0x86ce, 0x0, 0x1);
        gbc.writeMem(0x6262, { 0x50 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e78, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0058
        gbc.setState(0xa6bb, 0x3426, 0x2f40, 0x78b9, 0x3de5, 0x792f, 0x0, 0x1);
        gbc.writeMem(0xa6bb, { 0x50 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3426, gbc.sp());
        EXPECT(0xa6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa6bb));
        // 50 0059
        gbc.setState(0x3cf6, 0xe07d, 0x71b0, 0x6a22, 0xc03, 0x383b, 0x1, 0x1);
        gbc.writeMem(0x3cf6, { 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe07d, gbc.sp());
        EXPECT(0x3cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 005A
        gbc.setState(0xc5ad, 0x7982, 0xa130, 0xe843, 0x576b, 0xb601, 0x0, 0x1);
        gbc.writeMem(0xc5ad, { 0x50 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x7982, gbc.sp());
        EXPECT(0xc5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc5ad));
        // 50 005B
        gbc.setState(0x3f99, 0x410d, 0x5e80, 0xebe1, 0x68ad, 0xf4a1, 0x1, 0x0);
        gbc.writeMem(0x3f99, { 0x50 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x410d, gbc.sp());
        EXPECT(0x3f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 005C
        gbc.setState(0xc226, 0x4088, 0xef50, 0x5b68, 0x8505, 0x5d42, 0x0, 0x1);
        gbc.writeMem(0xc226, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0xc227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc226));
        // 50 005E
        gbc.setState(0x80ce, 0x4ebf, 0x3360, 0xd724, 0xe2d6, 0x7e70, 0x1, 0x0);
        gbc.writeMem(0x80ce, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4ebf, gbc.sp());
        EXPECT(0x80cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x80ce));
        // 50 005F
        gbc.setState(0xa208, 0x1417, 0x1860, 0x7669, 0x4f3a, 0x8a08, 0x0, 0x0);
        gbc.writeMem(0xa208, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1417, gbc.sp());
        EXPECT(0xa209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa208));
        // 50 0060
        gbc.setState(0x54b8, 0xead0, 0x41a0, 0xaf6c, 0xc7c0, 0x3258, 0x0, 0x1);
        gbc.writeMem(0x54b8, { 0x50 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xead0, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0061
        gbc.setState(0x5d88, 0x8a4c, 0x44d0, 0x10bc, 0x76c2, 0xa4f1, 0x0, 0x1);
        gbc.writeMem(0x5d88, { 0x50 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8a4c, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0062
        gbc.setState(0x4f63, 0x43b1, 0x6f20, 0x83f7, 0xfc94, 0xb132, 0x0, 0x1);
        gbc.writeMem(0x4f63, { 0x50 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0x4f64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0063
        gbc.setState(0x73db, 0x17d, 0x8440, 0x476d, 0xa7da, 0xf477, 0x1, 0x0);
        gbc.writeMem(0x73db, { 0x50 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x17d, gbc.sp());
        EXPECT(0x73dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0064
        gbc.setState(0xad1f, 0xc166, 0x9790, 0x1dd3, 0x6422, 0xa4b3, 0x1, 0x1);
        gbc.writeMem(0xad1f, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0xad20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xad1f));
        // 50 0065
        gbc.setState(0xc7aa, 0x45d6, 0x8d60, 0xf25a, 0xc428, 0xe35c, 0x1, 0x0);
        gbc.writeMem(0xc7aa, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x45d6, gbc.sp());
        EXPECT(0xc7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc7aa));
        // 50 0066
        gbc.setState(0xc21d, 0x9ddd, 0x9bc0, 0x88c, 0x5113, 0x801e, 0x1, 0x0);
        gbc.writeMem(0xc21d, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0xc21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc21d));
        // 50 0067
        gbc.setState(0x1fdc, 0x2071, 0x29a0, 0x4748, 0xa7e0, 0xaee6, 0x0, 0x1);
        gbc.writeMem(0x1fdc, { 0x50 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2071, gbc.sp());
        EXPECT(0x1fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0068
        gbc.setState(0xa4ae, 0x1bb8, 0x4e50, 0xeb35, 0x561c, 0x5ca5, 0x1, 0x1);
        gbc.writeMem(0xa4ae, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1bb8, gbc.sp());
        EXPECT(0xa4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa4ae));
        // 50 0069
        gbc.setState(0x599d, 0x7fc0, 0x65c0, 0x8a6d, 0x951b, 0x1524, 0x1, 0x1);
        gbc.writeMem(0x599d, { 0x50 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7fc0, gbc.sp());
        EXPECT(0x599e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 006A
        gbc.setState(0x1306, 0x9900, 0xef80, 0xc841, 0xf5c6, 0xd380, 0x1, 0x0);
        gbc.writeMem(0x1306, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9900, gbc.sp());
        EXPECT(0x1307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 006B
        gbc.setState(0x79e5, 0x8717, 0xd080, 0x98ce, 0x9583, 0xe1c5, 0x1, 0x1);
        gbc.writeMem(0x79e5, { 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8717, gbc.sp());
        EXPECT(0x79e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 006C
        gbc.setState(0x2c86, 0xb0e3, 0x23f0, 0x2f9e, 0x897e, 0xa5ae, 0x0, 0x1);
        gbc.writeMem(0x2c86, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb0e3, gbc.sp());
        EXPECT(0x2c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 006D
        gbc.setState(0x7b44, 0x5a28, 0x19d0, 0xcedb, 0xd78e, 0xe4ac, 0x1, 0x0);
        gbc.writeMem(0x7b44, { 0x50 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5a28, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 006E
        gbc.setState(0x8d56, 0x87c2, 0x8070, 0xa65f, 0xb51d, 0xd734, 0x1, 0x1);
        gbc.writeMem(0x8d56, { 0x50 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x87c2, gbc.sp());
        EXPECT(0x8d57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8d56));
        // 50 006F
        gbc.setState(0xd304, 0x1751, 0xa0, 0xeb04, 0x8412, 0xa24b, 0x1, 0x0);
        gbc.writeMem(0xd304, { 0x50 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0xd305, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd304));
        // 50 0070
        gbc.setState(0xc293, 0xe53c, 0x2810, 0x5012, 0x6262, 0x42b1, 0x1, 0x1);
        gbc.writeMem(0xc293, { 0x50 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe53c, gbc.sp());
        EXPECT(0xc294, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc293));
        // 50 0071
        gbc.setState(0x6ece, 0xb794, 0x2bf0, 0x3c8e, 0xf552, 0x77c7, 0x1, 0x1);
        gbc.writeMem(0x6ece, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb794, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0072
        gbc.setState(0x102, 0x1d15, 0x4e90, 0x1997, 0x64a4, 0xd049, 0x0, 0x0);
        gbc.writeMem(0x102, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1d15, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0073
        gbc.setState(0xa8e1, 0xb86b, 0xb550, 0x405d, 0x804, 0xafa3, 0x1, 0x1);
        gbc.writeMem(0xa8e1, { 0x50 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb86b, gbc.sp());
        EXPECT(0xa8e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa8e1));
        // 50 0074
        gbc.setState(0xdfcf, 0x1bea, 0x96c0, 0xcdde, 0x5f27, 0x66d3, 0x0, 0x1);
        gbc.writeMem(0xdfcf, { 0x50 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1bea, gbc.sp());
        EXPECT(0xdfd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdfcf));
        // 50 0075
        gbc.setState(0xa0d2, 0xe178, 0x2590, 0xade4, 0xf8e6, 0xec6, 0x1, 0x1);
        gbc.writeMem(0xa0d2, { 0x50 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0xa0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0d2));
        // 50 0076
        gbc.setState(0x9554, 0x81d, 0xe080, 0x681f, 0x8dca, 0x86f7, 0x0, 0x0);
        gbc.writeMem(0x9554, { 0x50 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0x9555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9554));
        // 50 0077
        gbc.setState(0xc0b9, 0xd93d, 0x8650, 0x175e, 0xc54a, 0x546a, 0x1, 0x1);
        gbc.writeMem(0xc0b9, { 0x50 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd93d, gbc.sp());
        EXPECT(0xc0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc0b9));
        // 50 0078
        gbc.setState(0xba32, 0xe06b, 0x9770, 0xe9f8, 0x7059, 0x1457, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe06b, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xba32));
        // 50 0079
        gbc.setState(0xe157, 0x27a1, 0x9b40, 0x1266, 0xd03e, 0x742c, 0x1, 0x0);
        gbc.writeMem(0xe157, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x27a1, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe157));
        // 50 007A
        gbc.setState(0x54d8, 0x7ab7, 0x22b0, 0x18d9, 0x397f, 0x42d7, 0x0, 0x0);
        gbc.writeMem(0x54d8, { 0x50 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7ab7, gbc.sp());
        EXPECT(0x54d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 007B
        gbc.setState(0x7c64, 0x6c20, 0x97b0, 0xb972, 0x92c2, 0x1051, 0x1, 0x1);
        gbc.writeMem(0x7c64, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6c20, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 007C
        gbc.setState(0xe085, 0x95c9, 0xff00, 0xeb21, 0x555c, 0xc3fe, 0x0, 0x1);
        gbc.writeMem(0xe085, { 0x50 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x95c9, gbc.sp());
        EXPECT(0xe086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe085));
        // 50 007D
        gbc.setState(0x24c2, 0x2d2f, 0x48b0, 0x133e, 0x5890, 0x57c7, 0x1, 0x1);
        gbc.writeMem(0x24c2, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0x24c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 007E
        gbc.setState(0x69a5, 0xa04c, 0x73f0, 0x2469, 0xb7d9, 0x402, 0x0, 0x0);
        gbc.writeMem(0x69a5, { 0x50 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x69a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 007F
        gbc.setState(0xe8ef, 0x60b6, 0xb980, 0xe5dd, 0x984c, 0x4e31, 0x0, 0x1);
        gbc.writeMem(0xe8ef, { 0x50 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x60b6, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe8ef));
        // 50 0080
        gbc.setState(0x70e1, 0x9261, 0xa190, 0xbce9, 0xe61c, 0x49b9, 0x1, 0x0);
        gbc.writeMem(0x70e1, { 0x50 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x9261, gbc.sp());
        EXPECT(0x70e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0082
        gbc.setState(0x7b19, 0x485b, 0xed00, 0x55d, 0xb5d, 0xe969, 0x1, 0x0);
        gbc.writeMem(0x7b19, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x485b, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0083
        gbc.setState(0x358e, 0x2f92, 0x2e10, 0x3426, 0x6eff, 0x1873, 0x0, 0x0);
        gbc.writeMem(0x358e, { 0x50 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2f92, gbc.sp());
        EXPECT(0x358f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0084
        gbc.setState(0x9145, 0x65a2, 0xa790, 0x6ab9, 0x2f6c, 0x72ea, 0x1, 0x1);
        gbc.writeMem(0x9145, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x65a2, gbc.sp());
        EXPECT(0x9146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9145));
        // 50 0085
        gbc.setState(0x45ad, 0xd387, 0x7a60, 0x3b18, 0x22b, 0x1792, 0x0, 0x0);
        gbc.writeMem(0x45ad, { 0x50 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd387, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0086
        gbc.setState(0x1254, 0xe7a5, 0x6db0, 0x27b7, 0x79d9, 0x80c9, 0x1, 0x0);
        gbc.writeMem(0x1254, { 0x50 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe7a5, gbc.sp());
        EXPECT(0x1255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0087
        gbc.setState(0xda89, 0xaaa, 0x86b0, 0x8ba6, 0x5a83, 0xccc, 0x1, 0x1);
        gbc.writeMem(0xda89, { 0x50 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xaaa, gbc.sp());
        EXPECT(0xda8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xda89));
        // 50 0088
        gbc.setState(0xd152, 0xfb42, 0x3dd0, 0x8930, 0x9aa3, 0xea0a, 0x0, 0x1);
        gbc.writeMem(0xd152, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfb42, gbc.sp());
        EXPECT(0xd153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd152));
        // 50 0089
        gbc.setState(0x358f, 0xcba, 0x4f0, 0x1532, 0xb639, 0xfcab, 0x0, 0x0);
        gbc.writeMem(0x358f, { 0x50 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x3590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 008A
        gbc.setState(0xbd74, 0x44ab, 0xcdd0, 0x8f54, 0xf89a, 0x83eb, 0x0, 0x1);
        gbc.writeMem(0xbd74, { 0x50 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x44ab, gbc.sp());
        EXPECT(0xbd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbd74));
        // 50 008B
        gbc.setState(0x1265, 0xdc14, 0x2c00, 0x649f, 0x3c01, 0x34c4, 0x1, 0x0);
        gbc.writeMem(0x1265, { 0x50 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdc14, gbc.sp());
        EXPECT(0x1266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 008C
        gbc.setState(0x7af2, 0xc70, 0x5210, 0x7c2, 0x3c21, 0x8447, 0x1, 0x1);
        gbc.writeMem(0x7af2, { 0x50 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc70, gbc.sp());
        EXPECT(0x7af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 008D
        gbc.setState(0xd501, 0x20c9, 0x49c0, 0x4dd7, 0x2d17, 0xace5, 0x0, 0x0);
        gbc.writeMem(0xd501, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x20c9, gbc.sp());
        EXPECT(0xd502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd501));
        // 50 008E
        gbc.setState(0x4bfc, 0xb4e1, 0x1760, 0xbc0d, 0x8658, 0xda9c, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0x4bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 008F
        gbc.setState(0x6648, 0x31ff, 0xff00, 0x7246, 0x335e, 0x55a0, 0x1, 0x1);
        gbc.writeMem(0x6648, { 0x50 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x31ff, gbc.sp());
        EXPECT(0x6649, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0091
        gbc.setState(0xa9d8, 0xcb35, 0x2830, 0x4340, 0x998d, 0x48fb, 0x0, 0x1);
        gbc.writeMem(0xa9d8, { 0x50 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcb35, gbc.sp());
        EXPECT(0xa9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa9d8));
        // 50 0092
        gbc.setState(0x346a, 0x9ba5, 0x7ee0, 0x1ac9, 0xebb8, 0x4ff0, 0x0, 0x1);
        gbc.writeMem(0x346a, { 0x50 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9ba5, gbc.sp());
        EXPECT(0x346b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0093
        gbc.setState(0x777c, 0x7ec7, 0x58d0, 0x2423, 0x656b, 0x1e9e, 0x0, 0x0);
        gbc.writeMem(0x777c, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7ec7, gbc.sp());
        EXPECT(0x777d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0094
        gbc.setState(0x600b, 0x9d8e, 0x6b50, 0x494f, 0x3216, 0xf079, 0x1, 0x1);
        gbc.writeMem(0x600b, { 0x50 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9d8e, gbc.sp());
        EXPECT(0x600c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0095
        gbc.setState(0x7585, 0x90e2, 0x3d30, 0x5e02, 0x9bdc, 0x1647, 0x1, 0x1);
        gbc.writeMem(0x7585, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x90e2, gbc.sp());
        EXPECT(0x7586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0096
        gbc.setState(0x446c, 0x2b8e, 0x1720, 0xad93, 0x3142, 0xbb0, 0x0, 0x1);
        gbc.writeMem(0x446c, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2b8e, gbc.sp());
        EXPECT(0x446d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0097
        gbc.setState(0x4eb5, 0x83a7, 0xb1c0, 0x93b1, 0x667c, 0xa39f, 0x1, 0x1);
        gbc.writeMem(0x4eb5, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x83a7, gbc.sp());
        EXPECT(0x4eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0098
        gbc.setState(0xe492, 0xeffb, 0x5620, 0xffe6, 0x55c5, 0xb9a0, 0x1, 0x1);
        gbc.writeMem(0xe492, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeffb, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe492));
        // 50 0099
        gbc.setState(0xea77, 0x356e, 0x3720, 0x489, 0xfe16, 0x255a, 0x0, 0x1);
        gbc.writeMem(0xea77, { 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x356e, gbc.sp());
        EXPECT(0xea78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xea77));
        // 50 009A
        gbc.setState(0xe14b, 0x367d, 0xfaf0, 0x9fbc, 0xbabc, 0x1521, 0x0, 0x1);
        gbc.writeMem(0xe14b, { 0x50 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x367d, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe14b));
        // 50 009B
        gbc.setState(0x71c0, 0x4a2d, 0xd2c0, 0x4a8c, 0xfe7d, 0x3bc1, 0x0, 0x0);
        gbc.writeMem(0x71c0, { 0x50 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a2d, gbc.sp());
        EXPECT(0x71c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 009C
        gbc.setState(0xec7, 0x3188, 0xd080, 0xc28c, 0x5fcc, 0xd8c6, 0x1, 0x0);
        gbc.writeMem(0xec7, { 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3188, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 009D
        gbc.setState(0xd653, 0x8da2, 0xadd0, 0x1227, 0xf91b, 0xc146, 0x0, 0x0);
        gbc.writeMem(0xd653, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8da2, gbc.sp());
        EXPECT(0xd654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd653));
        // 50 009E
        gbc.setState(0x519f, 0xdbfa, 0xdb00, 0xaa96, 0x8fd8, 0x35ce, 0x0, 0x1);
        gbc.writeMem(0x519f, { 0x50 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdbfa, gbc.sp());
        EXPECT(0x51a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 009F
        gbc.setState(0x9f25, 0x218d, 0x4c00, 0x341d, 0x8407, 0x85d2, 0x1, 0x1);
        gbc.writeMem(0x9f25, { 0x50 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x218d, gbc.sp());
        EXPECT(0x9f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9f25));
        // 50 00A1
        gbc.setState(0x23af, 0xa201, 0xeaa0, 0x7030, 0xbcb8, 0xd894, 0x0, 0x0);
        gbc.writeMem(0x23af, { 0x50 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xa201, gbc.sp());
        EXPECT(0x23b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00A2
        gbc.setState(0x2965, 0x1924, 0x73c0, 0xe42, 0x723a, 0x14e3, 0x1, 0x0);
        gbc.writeMem(0x2965, { 0x50 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1924, gbc.sp());
        EXPECT(0x2966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00A3
        gbc.setState(0x95a6, 0x2ec0, 0xa1a0, 0xcda0, 0xff65, 0x79be, 0x0, 0x0);
        gbc.writeMem(0x95a6, { 0x50 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2ec0, gbc.sp());
        EXPECT(0x95a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x95a6));
        // 50 00A5
        gbc.setState(0xc866, 0x9191, 0x8d10, 0xb163, 0xfa8c, 0x7cb7, 0x0, 0x0);
        gbc.writeMem(0xc866, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc866));
        // 50 00A6
        gbc.setState(0xcd34, 0xf5a6, 0xec30, 0x28ab, 0xbe21, 0x6b0e, 0x1, 0x1);
        gbc.writeMem(0xcd34, { 0x50 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf5a6, gbc.sp());
        EXPECT(0xcd35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcd34));
        // 50 00A7
        gbc.setState(0xef77, 0x5ef, 0x4df0, 0x4e49, 0x4bae, 0x7f6b, 0x0, 0x1);
        gbc.writeMem(0xef77, { 0x50 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5ef, gbc.sp());
        EXPECT(0xef78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xef77));
        // 50 00A8
        gbc.setState(0x17aa, 0x59b7, 0x3bd0, 0xecf1, 0x1f6f, 0xe785, 0x0, 0x1);
        gbc.writeMem(0x17aa, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00A9
        gbc.setState(0xed12, 0xd210, 0x8be0, 0x5137, 0x3149, 0xa81b, 0x0, 0x1);
        gbc.writeMem(0xed12, { 0x50 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0xed13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xed12));
        // 50 00AA
        gbc.setState(0x84b7, 0xfef2, 0xcd50, 0x9ebd, 0xb352, 0xe3c8, 0x0, 0x0);
        gbc.writeMem(0x84b7, { 0x50 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfef2, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x84b7));
        // 50 00AB
        gbc.setState(0x4ad4, 0x7c9e, 0xa6a0, 0x714, 0x8152, 0xdd40, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x50 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7c9e, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00AC
        gbc.setState(0x9e75, 0x3b7, 0xdc10, 0x5ba, 0x2e81, 0x1dbe, 0x0, 0x0);
        gbc.writeMem(0x9e75, { 0x50 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3b7, gbc.sp());
        EXPECT(0x9e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9e75));
        // 50 00AE
        gbc.setState(0xb873, 0xf74d, 0x2d10, 0x428c, 0xc402, 0xf843, 0x0, 0x0);
        gbc.writeMem(0xb873, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf74d, gbc.sp());
        EXPECT(0xb874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb873));
        // 50 00AF
        gbc.setState(0xaf56, 0x9586, 0xbdf0, 0x4bc6, 0x6a94, 0xe7c5, 0x0, 0x1);
        gbc.writeMem(0xaf56, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0xaf57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaf56));
        // 50 00B0
        gbc.setState(0x9450, 0x6d43, 0xea30, 0x92ec, 0x7411, 0xf3f9, 0x1, 0x0);
        gbc.writeMem(0x9450, { 0x50 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6d43, gbc.sp());
        EXPECT(0x9451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9450));
        // 50 00B1
        gbc.setState(0x8db6, 0x74cc, 0x5fe0, 0x1372, 0xb2f4, 0x1c3b, 0x1, 0x1);
        gbc.writeMem(0x8db6, { 0x50 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x74cc, gbc.sp());
        EXPECT(0x8db7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8db6));
        // 50 00B2
        gbc.setState(0x61c9, 0xfc04, 0x27d0, 0x4326, 0x53ac, 0x2e06, 0x0, 0x0);
        gbc.writeMem(0x61c9, { 0x50 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc04, gbc.sp());
        EXPECT(0x61ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00B3
        gbc.setState(0x9013, 0x5ad2, 0xb6d0, 0x8229, 0x4aad, 0x1058, 0x1, 0x0);
        gbc.writeMem(0x9013, { 0x50 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5ad2, gbc.sp());
        EXPECT(0x9014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9013));
        // 50 00B4
        gbc.setState(0x99b6, 0x2a0e, 0x57f0, 0xf577, 0x5c3, 0xb5ea, 0x0, 0x1);
        gbc.writeMem(0x99b6, { 0x50 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2a0e, gbc.sp());
        EXPECT(0x99b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x99b6));
        // 50 00B5
        gbc.setState(0x98e8, 0x67d1, 0xbd70, 0xd602, 0xccf, 0x52ae, 0x0, 0x1);
        gbc.writeMem(0x98e8, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0x98e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x98e8));
        // 50 00B6
        gbc.setState(0x3066, 0xd7f1, 0xdfc0, 0xe370, 0x869d, 0x1a89, 0x0, 0x0);
        gbc.writeMem(0x3066, { 0x50 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd7f1, gbc.sp());
        EXPECT(0x3067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00B7
        gbc.setState(0x2a43, 0xdc45, 0xdf90, 0xa8c9, 0x41bb, 0x8ee2, 0x0, 0x0);
        gbc.writeMem(0x2a43, { 0x50 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdc45, gbc.sp());
        EXPECT(0x2a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00B8
        gbc.setState(0x206e, 0xc4cb, 0xe9c0, 0x8ef6, 0x5309, 0x132b, 0x1, 0x1);
        gbc.writeMem(0x206e, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc4cb, gbc.sp());
        EXPECT(0x206f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00B9
        gbc.setState(0x9968, 0xa047, 0x5000, 0x12c1, 0x5c48, 0x301c, 0x1, 0x1);
        gbc.writeMem(0x9968, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0x9969, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9968));
        // 50 00BA
        gbc.setState(0xc519, 0x78ab, 0xdb80, 0xf8a4, 0xf890, 0xf23e, 0x1, 0x0);
        gbc.writeMem(0xc519, { 0x50 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x78ab, gbc.sp());
        EXPECT(0xc51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc519));
        // 50 00BB
        gbc.setState(0xe2b, 0xad27, 0x3360, 0x26ea, 0x5210, 0x4435, 0x0, 0x1);
        gbc.writeMem(0xe2b, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xad27, gbc.sp());
        EXPECT(0xe2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00BC
        gbc.setState(0xdebd, 0x4fa8, 0xbda0, 0xa11b, 0xf1b9, 0xfe72, 0x1, 0x0);
        gbc.writeMem(0xdebd, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x4fa8, gbc.sp());
        EXPECT(0xdebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdebd));
        // 50 00BD
        gbc.setState(0xa8f3, 0xdc93, 0xa7c0, 0x914c, 0xb45d, 0x9855, 0x1, 0x0);
        gbc.writeMem(0xa8f3, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdc93, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa8f3));
        // 50 00BE
        gbc.setState(0x96c, 0xa555, 0x9720, 0x7047, 0xe701, 0xe2ad, 0x1, 0x1);
        gbc.writeMem(0x96c, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0x96d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00BF
        gbc.setState(0xb9dd, 0xe784, 0xec90, 0x15d7, 0x8d94, 0x62bc, 0x0, 0x0);
        gbc.writeMem(0xb9dd, { 0x50 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe784, gbc.sp());
        EXPECT(0xb9de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb9dd));
        // 50 00C0
        gbc.setState(0xaff3, 0x66be, 0xd870, 0x9e52, 0x3b24, 0xf4fc, 0x1, 0x0);
        gbc.writeMem(0xaff3, { 0x50 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0xaff4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaff3));
        // 50 00C1
        gbc.setState(0x51e7, 0x861f, 0x1e90, 0x1075, 0x47dc, 0x1b44, 0x0, 0x1);
        gbc.writeMem(0x51e7, { 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x861f, gbc.sp());
        EXPECT(0x51e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00C2
        gbc.setState(0x9fa5, 0x3dce, 0xe5e0, 0xc270, 0x6742, 0x9def, 0x1, 0x1);
        gbc.writeMem(0x9fa5, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3dce, gbc.sp());
        EXPECT(0x9fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9fa5));
        // 50 00C3
        gbc.setState(0x664a, 0x7c33, 0x9c80, 0xfa5, 0xfa20, 0x1c50, 0x0, 0x1);
        gbc.writeMem(0x664a, { 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x7c33, gbc.sp());
        EXPECT(0x664b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00C4
        gbc.setState(0x9233, 0x4bda, 0x3b10, 0xde3f, 0x5aa0, 0xf7bd, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0x9234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9233));
        // 50 00C5
        gbc.setState(0x2eaf, 0x4283, 0xc130, 0xc1ac, 0x71ec, 0xb91e, 0x1, 0x1);
        gbc.writeMem(0x2eaf, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4283, gbc.sp());
        EXPECT(0x2eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00C6
        gbc.setState(0x24c6, 0xfdbc, 0x4c50, 0x1513, 0x733d, 0x12ec, 0x1, 0x1);
        gbc.writeMem(0x24c6, { 0x50 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfdbc, gbc.sp());
        EXPECT(0x24c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00C7
        gbc.setState(0xa0df, 0xe6d0, 0x1550, 0x3781, 0x961f, 0xa595, 0x0, 0x1);
        gbc.writeMem(0xa0df, { 0x50 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe6d0, gbc.sp());
        EXPECT(0xa0e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0df));
        // 50 00C8
        gbc.setState(0xeee, 0xbafb, 0x2bf0, 0x576b, 0xed70, 0x2939, 0x1, 0x1);
        gbc.writeMem(0xeee, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbafb, gbc.sp());
        EXPECT(0xeef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00C9
        gbc.setState(0x59ab, 0x805, 0xce00, 0x67bb, 0x9a04, 0xd2d8, 0x1, 0x0);
        gbc.writeMem(0x59ab, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x805, gbc.sp());
        EXPECT(0x59ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00CA
        gbc.setState(0x8cb3, 0xb290, 0x5360, 0xcf4e, 0xbe66, 0xb147, 0x0, 0x0);
        gbc.writeMem(0x8cb3, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb290, gbc.sp());
        EXPECT(0x8cb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8cb3));
        // 50 00CB
        gbc.setState(0x5276, 0x5d40, 0x8f80, 0xb588, 0x9937, 0x7ef5, 0x1, 0x0);
        gbc.writeMem(0x5276, { 0x50 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5d40, gbc.sp());
        EXPECT(0x5277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00CC
        gbc.setState(0x1a96, 0x72b4, 0x1c60, 0x9c8a, 0xc5a8, 0xcbd5, 0x0, 0x0);
        gbc.writeMem(0x1a96, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x72b4, gbc.sp());
        EXPECT(0x1a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00CD
        gbc.setState(0xe46c, 0xdf8c, 0x48e0, 0x616a, 0xd3d, 0x6a04, 0x1, 0x0);
        gbc.writeMem(0xe46c, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdf8c, gbc.sp());
        EXPECT(0xe46d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe46c));
        // 50 00CE
        gbc.setState(0xa22c, 0x8ad2, 0x1ca0, 0x13d9, 0x7f3c, 0x19a3, 0x0, 0x0);
        gbc.writeMem(0xa22c, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8ad2, gbc.sp());
        EXPECT(0xa22d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa22c));
        // 50 00CF
        gbc.setState(0xb715, 0x9b27, 0x4e80, 0xdb49, 0x5f5c, 0x75d2, 0x1, 0x1);
        gbc.writeMem(0xb715, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb715));
        // 50 00D0
        gbc.setState(0x5025, 0xa186, 0x76e0, 0x733e, 0x75b7, 0x22a, 0x0, 0x1);
        gbc.writeMem(0x5025, { 0x50 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa186, gbc.sp());
        EXPECT(0x5026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00D1
        gbc.setState(0x743c, 0x7817, 0x29e0, 0xed, 0x550d, 0xcff1, 0x1, 0x1);
        gbc.writeMem(0x743c, { 0x50 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7817, gbc.sp());
        EXPECT(0x743d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00D2
        gbc.setState(0x9504, 0x3b38, 0xb3f0, 0x87f2, 0x5831, 0x2d13, 0x0, 0x0);
        gbc.writeMem(0x9504, { 0x50 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0x9505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9504));
        // 50 00D3
        gbc.setState(0x14d7, 0xfcb0, 0x2e90, 0x60e3, 0x67ee, 0xd13b, 0x1, 0x1);
        gbc.writeMem(0x14d7, { 0x50 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfcb0, gbc.sp());
        EXPECT(0x14d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00D4
        gbc.setState(0x66e7, 0xb5e, 0x1ab0, 0xfe7, 0x79ea, 0x3a82, 0x1, 0x0);
        gbc.writeMem(0x66e7, { 0x50 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb5e, gbc.sp());
        EXPECT(0x66e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00D5
        gbc.setState(0x5cf3, 0x4cf2, 0x5860, 0xb17f, 0x5a1, 0x7556, 0x1, 0x1);
        gbc.writeMem(0x5cf3, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4cf2, gbc.sp());
        EXPECT(0x5cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00D6
        gbc.setState(0xb7a1, 0x12, 0xd620, 0x357a, 0x1f38, 0x2563, 0x1, 0x0);
        gbc.writeMem(0xb7a1, { 0x50 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x12, gbc.sp());
        EXPECT(0xb7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb7a1));
        // 50 00D7
        gbc.setState(0x7657, 0x373f, 0xf7b0, 0xad72, 0xa383, 0x28f, 0x1, 0x0);
        gbc.writeMem(0x7657, { 0x50 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x373f, gbc.sp());
        EXPECT(0x7658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00D8
        gbc.setState(0x5c39, 0x783a, 0x570, 0xa8f9, 0x10a, 0x3acb, 0x1, 0x1);
        gbc.writeMem(0x5c39, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x783a, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00D9
        gbc.setState(0x4698, 0xa8bd, 0x56c0, 0xa350, 0x6840, 0x66b8, 0x0, 0x1);
        gbc.writeMem(0x4698, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa8bd, gbc.sp());
        EXPECT(0x4699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00DA
        gbc.setState(0x506b, 0x7f80, 0x77b0, 0xf6d7, 0xcc68, 0x5ad2, 0x0, 0x0);
        gbc.writeMem(0x506b, { 0x50 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7f80, gbc.sp());
        EXPECT(0x506c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00DB
        gbc.setState(0x5599, 0xb368, 0x28b0, 0x61a5, 0xe43f, 0xda4c, 0x0, 0x0);
        gbc.writeMem(0x5599, { 0x50 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb368, gbc.sp());
        EXPECT(0x559a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00DC
        gbc.setState(0x619b, 0x8e09, 0x72c0, 0xbdf9, 0x1026, 0x4ea1, 0x0, 0x1);
        gbc.writeMem(0x619b, { 0x50 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8e09, gbc.sp());
        EXPECT(0x619c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00DD
        gbc.setState(0xbe69, 0x1404, 0xde90, 0x5f6c, 0xa4e7, 0x5f3f, 0x0, 0x0);
        gbc.writeMem(0xbe69, { 0x50 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1404, gbc.sp());
        EXPECT(0xbe6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbe69));
        // 50 00DE
        gbc.setState(0x8a0b, 0x953d, 0x49c0, 0xf2e9, 0xe289, 0x5d54, 0x0, 0x0);
        gbc.writeMem(0x8a0b, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x953d, gbc.sp());
        EXPECT(0x8a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8a0b));
        // 50 00DF
        gbc.setState(0x2d35, 0x51db, 0x7170, 0x6077, 0x807, 0xb63d, 0x1, 0x0);
        gbc.writeMem(0x2d35, { 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x2d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00E0
        gbc.setState(0x554e, 0x1dc3, 0x5200, 0x67e2, 0x1630, 0xefc9, 0x1, 0x0);
        gbc.writeMem(0x554e, { 0x50 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1dc3, gbc.sp());
        EXPECT(0x554f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00E1
        gbc.setState(0xd156, 0x7dd2, 0x8520, 0xcaa3, 0xeecf, 0x9ceb, 0x0, 0x0);
        gbc.writeMem(0xd156, { 0x50 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7dd2, gbc.sp());
        EXPECT(0xd157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd156));
        // 50 00E2
        gbc.setState(0x6d9d, 0xa66c, 0x980, 0xdc80, 0x7f24, 0xfe79, 0x1, 0x1);
        gbc.writeMem(0x6d9d, { 0x50 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa66c, gbc.sp());
        EXPECT(0x6d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00E3
        gbc.setState(0xdb1c, 0x2819, 0xd150, 0x5c55, 0x41c2, 0x23ab, 0x0, 0x1);
        gbc.writeMem(0xdb1c, { 0x50 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x2819, gbc.sp());
        EXPECT(0xdb1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdb1c));
        // 50 00E4
        gbc.setState(0x8edf, 0x5e90, 0x8b30, 0xe245, 0xd414, 0xa26c, 0x0, 0x0);
        gbc.writeMem(0x8edf, { 0x50 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e90, gbc.sp());
        EXPECT(0x8ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8edf));
        // 50 00E5
        gbc.setState(0x8b9f, 0x69e1, 0xf910, 0x9a85, 0xe12a, 0x65d2, 0x1, 0x1);
        gbc.writeMem(0x8b9f, { 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x69e1, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8b9f));
        // 50 00E7
        gbc.setState(0x5dd5, 0x1ea7, 0x530, 0x454d, 0x1842, 0x7be8, 0x1, 0x0);
        gbc.writeMem(0x5dd5, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1ea7, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00E8
        gbc.setState(0xdb84, 0x3dd2, 0x9bd0, 0xde4, 0xc408, 0x4d1f, 0x0, 0x0);
        gbc.writeMem(0xdb84, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3dd2, gbc.sp());
        EXPECT(0xdb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdb84));
        // 50 00E9
        gbc.setState(0xa91a, 0xab4e, 0x9600, 0x5d4f, 0x1e3f, 0x9c7b, 0x1, 0x1);
        gbc.writeMem(0xa91a, { 0x50 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xab4e, gbc.sp());
        EXPECT(0xa91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa91a));
        // 50 00EA
        gbc.setState(0xeb2a, 0x7a40, 0x7fa0, 0x116f, 0x85f8, 0x3ea7, 0x0, 0x1);
        gbc.writeMem(0xeb2a, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x7a40, gbc.sp());
        EXPECT(0xeb2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeb2a));
        // 50 00EB
        gbc.setState(0xb2eb, 0xc0e8, 0xe920, 0xfdcc, 0x3ffa, 0x9eab, 0x0, 0x0);
        gbc.writeMem(0xb2eb, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc0e8, gbc.sp());
        EXPECT(0xb2ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb2eb));
        // 50 00EC
        gbc.setState(0x5a0d, 0xedbd, 0xb120, 0x109f, 0x670e, 0xc28d, 0x0, 0x0);
        gbc.writeMem(0x5a0d, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xedbd, gbc.sp());
        EXPECT(0x5a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00ED
        gbc.setState(0x26f1, 0x5a06, 0x66a0, 0x3ab8, 0xa11d, 0x516f, 0x1, 0x1);
        gbc.writeMem(0x26f1, { 0x50 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0x26f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00EE
        gbc.setState(0x9735, 0x44d1, 0x7f90, 0x304f, 0x9283, 0xb2ed, 0x1, 0x1);
        gbc.writeMem(0x9735, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x44d1, gbc.sp());
        EXPECT(0x9736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9735));
        // 50 00F0
        gbc.setState(0xbd19, 0xec32, 0xd5c0, 0x7580, 0x1c08, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0xbd19, { 0x50 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xec32, gbc.sp());
        EXPECT(0xbd1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbd19));
        // 50 00F1
        gbc.setState(0x836b, 0xaeb5, 0x60d0, 0x75fb, 0x2753, 0x8fdc, 0x1, 0x1);
        gbc.writeMem(0x836b, { 0x50 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaeb5, gbc.sp());
        EXPECT(0x836c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x836b));
        // 50 00F2
        gbc.setState(0x22f4, 0x7b90, 0x5b10, 0x38a6, 0xa768, 0xab26, 0x0, 0x1);
        gbc.writeMem(0x22f4, { 0x50 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7b90, gbc.sp());
        EXPECT(0x22f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00F3
        gbc.setState(0x818d, 0x47ba, 0x67f0, 0x3db7, 0x5940, 0xaa03, 0x0, 0x0);
        gbc.writeMem(0x818d, { 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x47ba, gbc.sp());
        EXPECT(0x818e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x818d));
        // 50 00F4
        gbc.setState(0xeb67, 0x112d, 0xa3d0, 0xde81, 0x3f66, 0x1390, 0x0, 0x1);
        gbc.writeMem(0xeb67, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x112d, gbc.sp());
        EXPECT(0xeb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeb67));
        // 50 00F5
        gbc.setState(0x6f35, 0x8e15, 0xbd00, 0x4734, 0xf155, 0xcc1, 0x0, 0x1);
        gbc.writeMem(0x6f35, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8e15, gbc.sp());
        EXPECT(0x6f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00F6
        gbc.setState(0xd704, 0xbf15, 0x9220, 0x6d27, 0x610b, 0xbba8, 0x1, 0x1);
        gbc.writeMem(0xd704, { 0x50 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0xd705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd704));
        // 50 00F7
        gbc.setState(0x9412, 0x313a, 0x8970, 0xc895, 0xcb4, 0x2d28, 0x0, 0x0);
        gbc.writeMem(0x9412, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x313a, gbc.sp());
        EXPECT(0x9413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9412));
        // 50 00F8
        gbc.setState(0x2794, 0x8c90, 0xb290, 0x8c00, 0x479c, 0xaf39, 0x1, 0x0);
        gbc.writeMem(0x2794, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8c90, gbc.sp());
        EXPECT(0x2795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 00F9
        gbc.setState(0xbb18, 0x271c, 0x62a0, 0xa73b, 0x4134, 0xfe39, 0x1, 0x1);
        gbc.writeMem(0xbb18, { 0x50 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x271c, gbc.sp());
        EXPECT(0xbb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbb18));
        // 50 00FA
        gbc.setState(0x1211, 0xefc7, 0x7f60, 0x964d, 0x950d, 0x2828, 0x1, 0x0);
        gbc.writeMem(0x1211, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xefc7, gbc.sp());
        EXPECT(0x1212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 00FB
        gbc.setState(0xda5e, 0x6998, 0x5580, 0x99f7, 0x65c0, 0xc5b, 0x0, 0x0);
        gbc.writeMem(0xda5e, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6998, gbc.sp());
        EXPECT(0xda5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xda5e));
        // 50 00FC
        gbc.setState(0xc21e, 0x5900, 0xec0, 0x9cf2, 0x9538, 0x919f, 0x1, 0x0);
        gbc.writeMem(0xc21e, { 0x50 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5900, gbc.sp());
        EXPECT(0xc21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc21e));
        // 50 00FD
        gbc.setState(0xda34, 0x5674, 0x67d0, 0xf719, 0x5dba, 0xf9f8, 0x1, 0x1);
        gbc.writeMem(0xda34, { 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5674, gbc.sp());
        EXPECT(0xda35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xda34));
        // 50 00FE
        gbc.setState(0xdb1e, 0x4450, 0x41e0, 0x6a22, 0x30e3, 0xc419, 0x1, 0x0);
        gbc.writeMem(0xdb1e, { 0x50 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0xdb1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdb1e));
        // 50 00FF
        gbc.setState(0x24c3, 0xfc1, 0x6f60, 0xcfa4, 0xf2aa, 0x3a78, 0x0, 0x1);
        gbc.writeMem(0x24c3, { 0x50 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfc1, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0100
        gbc.setState(0x3bde, 0xcdae, 0x4e70, 0x375f, 0x5cdc, 0xc6c3, 0x1, 0x0);
        gbc.writeMem(0x3bde, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcdae, gbc.sp());
        EXPECT(0x3bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0101
        gbc.setState(0x3be6, 0xc9a2, 0x7910, 0xd604, 0xdf44, 0x6130, 0x1, 0x1);
        gbc.writeMem(0x3be6, { 0x50 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc9a2, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0102
        gbc.setState(0x2168, 0x48f, 0xa270, 0x87f3, 0x6dde, 0xb855, 0x0, 0x1);
        gbc.writeMem(0x2168, { 0x50 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x48f, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0103
        gbc.setState(0xe616, 0xea25, 0x9450, 0xeaf7, 0xf71d, 0x38b9, 0x0, 0x0);
        gbc.writeMem(0xe616, { 0x50 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xea25, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe616));
        // 50 0104
        gbc.setState(0xe8f3, 0x6f46, 0xd1a0, 0x4b11, 0xf472, 0xb2e0, 0x0, 0x0);
        gbc.writeMem(0xe8f3, { 0x50 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6f46, gbc.sp());
        EXPECT(0xe8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe8f3));
        // 50 0105
        gbc.setState(0xab84, 0x6a8f, 0x37e0, 0x15e1, 0x2105, 0x3192, 0x0, 0x0);
        gbc.writeMem(0xab84, { 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6a8f, gbc.sp());
        EXPECT(0xab85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xab84));
        // 50 0106
        gbc.setState(0xc667, 0x5e82, 0xb5d0, 0xaeaa, 0xebd0, 0xa3fd, 0x1, 0x0);
        gbc.writeMem(0xc667, { 0x50 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5e82, gbc.sp());
        EXPECT(0xc668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc667));
        // 50 0107
        gbc.setState(0xc5dc, 0x1e5, 0xec80, 0x8890, 0x487, 0x489d, 0x0, 0x0);
        gbc.writeMem(0xc5dc, { 0x50 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1e5, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc5dc));
        // 50 0108
        gbc.setState(0xe46d, 0x7316, 0xfa30, 0x3b52, 0xaca7, 0x56d, 0x0, 0x0);
        gbc.writeMem(0xe46d, { 0x50 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7316, gbc.sp());
        EXPECT(0xe46e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe46d));
        // 50 0109
        gbc.setState(0xc4e, 0xcd0, 0x90, 0x3f85, 0x7990, 0xe527, 0x0, 0x1);
        gbc.writeMem(0xc4e, { 0x50 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcd0, gbc.sp());
        EXPECT(0xc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 010A
        gbc.setState(0x5dfb, 0xd4ee, 0x4b40, 0xdeee, 0x2e27, 0xc0a0, 0x1, 0x0);
        gbc.writeMem(0x5dfb, { 0x50 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd4ee, gbc.sp());
        EXPECT(0x5dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 010B
        gbc.setState(0x1401, 0x1e12, 0x4f70, 0x9278, 0xd59b, 0x93d8, 0x0, 0x1);
        gbc.writeMem(0x1401, { 0x50 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1e12, gbc.sp());
        EXPECT(0x1402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 010C
        gbc.setState(0xbb8e, 0x6cf, 0xe370, 0xce50, 0xb19e, 0x2c39, 0x0, 0x1);
        gbc.writeMem(0xbb8e, { 0x50 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6cf, gbc.sp());
        EXPECT(0xbb8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbb8e));
        // 50 010D
        gbc.setState(0xa1d8, 0x613b, 0xfd80, 0xf492, 0xd736, 0x79bf, 0x0, 0x0);
        gbc.writeMem(0xa1d8, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x613b, gbc.sp());
        EXPECT(0xa1d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa1d8));
        // 50 010E
        gbc.setState(0x4092, 0x7637, 0xbf50, 0x9c1, 0xf648, 0x25fe, 0x0, 0x1);
        gbc.writeMem(0x4092, { 0x50 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7637, gbc.sp());
        EXPECT(0x4093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 010F
        gbc.setState(0xdd41, 0x779f, 0x3040, 0xd1ce, 0xda10, 0xf2b7, 0x1, 0x0);
        gbc.writeMem(0xdd41, { 0x50 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0xdd42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdd41));
        // 50 0110
        gbc.setState(0x3964, 0x3cb6, 0xad00, 0xef8c, 0x33f3, 0xc154, 0x1, 0x0);
        gbc.writeMem(0x3964, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3cb6, gbc.sp());
        EXPECT(0x3965, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0111
        gbc.setState(0x5b64, 0x7a33, 0xed80, 0x8ed, 0xf57e, 0xa7c4, 0x0, 0x1);
        gbc.writeMem(0x5b64, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7a33, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0112
        gbc.setState(0x514d, 0x551f, 0xe40, 0x4265, 0xef2d, 0xfe71, 0x0, 0x0);
        gbc.writeMem(0x514d, { 0x50 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x551f, gbc.sp());
        EXPECT(0x514e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0113
        gbc.setState(0x33b6, 0x9e7b, 0x3910, 0x9bdb, 0x9f88, 0xa8fb, 0x1, 0x1);
        gbc.writeMem(0x33b6, { 0x50 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9e7b, gbc.sp());
        EXPECT(0x33b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0114
        gbc.setState(0x5c89, 0xa630, 0x8820, 0xb4d8, 0x2fa3, 0xefa9, 0x1, 0x0);
        gbc.writeMem(0x5c89, { 0x50 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x5c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0115
        gbc.setState(0x8903, 0x2400, 0x1490, 0xd835, 0xe5c5, 0x184d, 0x0, 0x0);
        gbc.writeMem(0x8903, { 0x50 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2400, gbc.sp());
        EXPECT(0x8904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8903));
        // 50 0116
        gbc.setState(0xdb4e, 0x9b0, 0x37e0, 0xe1a, 0x79f4, 0x3cb, 0x0, 0x0);
        gbc.writeMem(0xdb4e, { 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9b0, gbc.sp());
        EXPECT(0xdb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdb4e));
        // 50 0117
        gbc.setState(0x94f1, 0xc91e, 0x78d0, 0x7b93, 0xc622, 0xa183, 0x0, 0x0);
        gbc.writeMem(0x94f1, { 0x50 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc91e, gbc.sp());
        EXPECT(0x94f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x94f1));
        // 50 0118
        gbc.setState(0xb6e2, 0xe64d, 0x9fb0, 0x4df2, 0xd91, 0xbedc, 0x1, 0x1);
        gbc.writeMem(0xb6e2, { 0x50 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe64d, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb6e2));
        // 50 0119
        gbc.setState(0x6d57, 0xa82e, 0x53f0, 0xd09d, 0xb8b4, 0x3ec7, 0x0, 0x1);
        gbc.writeMem(0x6d57, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa82e, gbc.sp());
        EXPECT(0x6d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 011A
        gbc.setState(0x7d5e, 0x3c75, 0x9b10, 0x783f, 0xb21e, 0xfe37, 0x0, 0x1);
        gbc.writeMem(0x7d5e, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3c75, gbc.sp());
        EXPECT(0x7d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 011B
        gbc.setState(0xd719, 0xe749, 0xa3d0, 0x594b, 0xbd22, 0x994c, 0x0, 0x0);
        gbc.writeMem(0xd719, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe749, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd719));
        // 50 011C
        gbc.setState(0xbde, 0x3735, 0x7ff0, 0xf322, 0x2ea2, 0xc218, 0x1, 0x0);
        gbc.writeMem(0xbde, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3735, gbc.sp());
        EXPECT(0xbdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 011D
        gbc.setState(0xcab3, 0x52b0, 0x8fa0, 0xf99c, 0x33af, 0xc4ca, 0x0, 0x1);
        gbc.writeMem(0xcab3, { 0x50 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x52b0, gbc.sp());
        EXPECT(0xcab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcab3));
        // 50 011F
        gbc.setState(0x1861, 0x5710, 0x8e70, 0xdff8, 0xd368, 0x6f6b, 0x0, 0x0);
        gbc.writeMem(0x1861, { 0x50 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5710, gbc.sp());
        EXPECT(0x1862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0120
        gbc.setState(0x14be, 0x97f8, 0xb2d0, 0xe7c3, 0x8e9, 0xd3d2, 0x0, 0x0);
        gbc.writeMem(0x14be, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x14bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0121
        gbc.setState(0xce06, 0xed3a, 0x90f0, 0x93a3, 0x80c7, 0x3dd1, 0x0, 0x1);
        gbc.writeMem(0xce06, { 0x50 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0xce07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xce06));
        // 50 0122
        gbc.setState(0xe644, 0x4131, 0xad10, 0x9a75, 0x1dc, 0x41b, 0x0, 0x0);
        gbc.writeMem(0xe644, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4131, gbc.sp());
        EXPECT(0xe645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe644));
        // 50 0124
        gbc.setState(0x5596, 0x3a21, 0x270, 0xbcc, 0xaad2, 0x881, 0x1, 0x0);
        gbc.writeMem(0x5596, { 0x50 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3a21, gbc.sp());
        EXPECT(0x5597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0125
        gbc.setState(0x9bdc, 0x9e59, 0xddf0, 0x3810, 0x153, 0x5339, 0x1, 0x1);
        gbc.writeMem(0x9bdc, { 0x50 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9e59, gbc.sp());
        EXPECT(0x9bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9bdc));
        // 50 0126
        gbc.setState(0x13e4, 0xd4c, 0x310, 0x64ad, 0x7463, 0xc733, 0x0, 0x0);
        gbc.writeMem(0x13e4, { 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd4c, gbc.sp());
        EXPECT(0x13e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0127
        gbc.setState(0xd304, 0x7c12, 0xa3e0, 0x28f5, 0x1c0a, 0x4806, 0x0, 0x1);
        gbc.writeMem(0xd304, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7c12, gbc.sp());
        EXPECT(0xd305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd304));
        // 50 0129
        gbc.setState(0x55e9, 0xf2bf, 0x7420, 0x469b, 0x7226, 0xbf8a, 0x0, 0x0);
        gbc.writeMem(0x55e9, { 0x50 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf2bf, gbc.sp());
        EXPECT(0x55ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 012A
        gbc.setState(0x2d85, 0x93c4, 0x3d30, 0xc14f, 0xd917, 0x72df, 0x0, 0x1);
        gbc.writeMem(0x2d85, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x93c4, gbc.sp());
        EXPECT(0x2d86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 012B
        gbc.setState(0x4bd7, 0xd69d, 0x4930, 0xc840, 0x22, 0x8d90, 0x0, 0x1);
        gbc.writeMem(0x4bd7, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd69d, gbc.sp());
        EXPECT(0x4bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 012C
        gbc.setState(0x3086, 0xd81a, 0x9770, 0xa6a5, 0xeed9, 0xbee3, 0x0, 0x1);
        gbc.writeMem(0x3086, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 012D
        gbc.setState(0x825e, 0x1502, 0x1740, 0x480a, 0x31e6, 0xa3d7, 0x1, 0x0);
        gbc.writeMem(0x825e, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1502, gbc.sp());
        EXPECT(0x825f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x825e));
        // 50 012E
        gbc.setState(0xa878, 0x6743, 0x1080, 0x90ce, 0x896b, 0x1ca2, 0x1, 0x1);
        gbc.writeMem(0xa878, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa878));
        // 50 012F
        gbc.setState(0x54dc, 0xd15c, 0xe940, 0x210f, 0xa6f1, 0x37d6, 0x0, 0x0);
        gbc.writeMem(0x54dc, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd15c, gbc.sp());
        EXPECT(0x54dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0130
        gbc.setState(0x7e6d, 0xc7e8, 0x5b0, 0x9114, 0xa632, 0xead5, 0x1, 0x1);
        gbc.writeMem(0x7e6d, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc7e8, gbc.sp());
        EXPECT(0x7e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0131
        gbc.setState(0xff4, 0x78e7, 0x8320, 0xb7e2, 0x9832, 0xf01e, 0x1, 0x0);
        gbc.writeMem(0xff4, { 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x78e7, gbc.sp());
        EXPECT(0xff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0132
        gbc.setState(0x3a7b, 0x9b8, 0x5b40, 0x7890, 0xceff, 0x99ff, 0x1, 0x0);
        gbc.writeMem(0x3a7b, { 0x50 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0x3a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0133
        gbc.setState(0xae3f, 0xabc1, 0xa40, 0x5f17, 0x1ef4, 0xaa84, 0x1, 0x0);
        gbc.writeMem(0xae3f, { 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xabc1, gbc.sp());
        EXPECT(0xae40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xae3f));
        // 50 0134
        gbc.setState(0x7688, 0xd751, 0xd7e0, 0x8601, 0x11ac, 0x1563, 0x1, 0x0);
        gbc.writeMem(0x7688, { 0x50 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd751, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0135
        gbc.setState(0x7ab6, 0xe783, 0xe910, 0xb9f3, 0x7fae, 0x51c0, 0x1, 0x1);
        gbc.writeMem(0x7ab6, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe783, gbc.sp());
        EXPECT(0x7ab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0136
        gbc.setState(0xc01c, 0xca7a, 0x9700, 0x391a, 0x32e3, 0x9a21, 0x0, 0x1);
        gbc.writeMem(0xc01c, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xca7a, gbc.sp());
        EXPECT(0xc01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc01c));
        // 50 0137
        gbc.setState(0xd71b, 0x7d44, 0x5510, 0x52cf, 0x599a, 0x895d, 0x1, 0x1);
        gbc.writeMem(0xd71b, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7d44, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd71b));
        // 50 0138
        gbc.setState(0x3242, 0xc17, 0x7710, 0x1058, 0xd75, 0xc451, 0x1, 0x0);
        gbc.writeMem(0x3242, { 0x50 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc17, gbc.sp());
        EXPECT(0x3243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0139
        gbc.setState(0x982e, 0x5ea6, 0xea20, 0xbc3e, 0x9cb0, 0x2c4b, 0x0, 0x0);
        gbc.writeMem(0x982e, { 0x50 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5ea6, gbc.sp());
        EXPECT(0x982f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x982e));
        // 50 013A
        gbc.setState(0x7101, 0x23c1, 0xfe40, 0xeeba, 0xb9b9, 0x7bcc, 0x0, 0x1);
        gbc.writeMem(0x7101, { 0x50 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x23c1, gbc.sp());
        EXPECT(0x7102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 013B
        gbc.setState(0xbc18, 0xb11e, 0xa320, 0x3d4e, 0xfb92, 0x12c4, 0x0, 0x1);
        gbc.writeMem(0xbc18, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xb11e, gbc.sp());
        EXPECT(0xbc19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbc18));
        // 50 013C
        gbc.setState(0x81ab, 0x342e, 0x5f70, 0x86b0, 0x5177, 0x28ca, 0x0, 0x1);
        gbc.writeMem(0x81ab, { 0x50 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x342e, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x81ab));
        // 50 013D
        gbc.setState(0xa81e, 0xc306, 0xef60, 0x5d35, 0x109, 0x6630, 0x0, 0x1);
        gbc.writeMem(0xa81e, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc306, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa81e));
        // 50 013E
        gbc.setState(0x66fb, 0x8707, 0x7b60, 0xc5e7, 0xa3f3, 0x9795, 0x0, 0x1);
        gbc.writeMem(0x66fb, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8707, gbc.sp());
        EXPECT(0x66fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 013F
        gbc.setState(0xb82d, 0xab88, 0xa3a0, 0x1e77, 0x89f6, 0x8f30, 0x0, 0x0);
        gbc.writeMem(0xb82d, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xab88, gbc.sp());
        EXPECT(0xb82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb82d));
        // 50 0140
        gbc.setState(0xe0d6, 0x7679, 0xe570, 0xb0a5, 0xe90c, 0x1fcc, 0x0, 0x1);
        gbc.writeMem(0xe0d6, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7679, gbc.sp());
        EXPECT(0xe0d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe0d6));
        // 50 0141
        gbc.setState(0x3420, 0x2f14, 0x6630, 0x19c7, 0x4a1d, 0xe47a, 0x0, 0x1);
        gbc.writeMem(0x3420, { 0x50 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2f14, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0142
        gbc.setState(0x6543, 0x4f1b, 0x6ad0, 0xbe06, 0x4e6d, 0x5a0d, 0x0, 0x1);
        gbc.writeMem(0x6543, { 0x50 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4f1b, gbc.sp());
        EXPECT(0x6544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0143
        gbc.setState(0xcaa6, 0x5fda, 0x7a90, 0xf84c, 0x3459, 0x7736, 0x0, 0x1);
        gbc.writeMem(0xcaa6, { 0x50 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x5fda, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcaa6));
        // 50 0144
        gbc.setState(0xee97, 0xe747, 0xda40, 0x7943, 0x73ba, 0x142f, 0x0, 0x1);
        gbc.writeMem(0xee97, { 0x50 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe747, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xee97));
        // 50 0145
        gbc.setState(0xb2b4, 0x5cfd, 0x55b0, 0xfa8f, 0x48ec, 0xc429, 0x1, 0x0);
        gbc.writeMem(0xb2b4, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0xb2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb2b4));
        // 50 0146
        gbc.setState(0x2b7e, 0xd967, 0x9950, 0xb567, 0x259f, 0xd14d, 0x0, 0x0);
        gbc.writeMem(0x2b7e, { 0x50 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0x2b7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0147
        gbc.setState(0x5004, 0x1eb2, 0x2c0, 0x8615, 0xda9e, 0xa633, 0x1, 0x0);
        gbc.writeMem(0x5004, { 0x50 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1eb2, gbc.sp());
        EXPECT(0x5005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0148
        gbc.setState(0xa6d3, 0xaab3, 0xf2c0, 0x73a0, 0xda20, 0x7bde, 0x0, 0x1);
        gbc.writeMem(0xa6d3, { 0x50 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0xa6d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa6d3));
        // 50 0149
        gbc.setState(0x9632, 0x3d8, 0xcb80, 0x42af, 0x1022, 0xf738, 0x1, 0x1);
        gbc.writeMem(0x9632, { 0x50 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3d8, gbc.sp());
        EXPECT(0x9633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9632));
        // 50 014A
        gbc.setState(0x2fc3, 0x94f5, 0x5800, 0x37c0, 0x97ea, 0x5c09, 0x1, 0x0);
        gbc.writeMem(0x2fc3, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0x2fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 014B
        gbc.setState(0x23be, 0x4a93, 0xe940, 0x29f9, 0xe690, 0xd17a, 0x1, 0x1);
        gbc.writeMem(0x23be, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4a93, gbc.sp());
        EXPECT(0x23bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 014C
        gbc.setState(0x22b, 0xdb6a, 0x6710, 0xef03, 0x843, 0x6fec, 0x0, 0x1);
        gbc.writeMem(0x22b, { 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdb6a, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 014D
        gbc.setState(0x360, 0x2aa5, 0xf060, 0x8ea5, 0x2e3f, 0x9733, 0x0, 0x0);
        gbc.writeMem(0x360, { 0x50 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2aa5, gbc.sp());
        EXPECT(0x361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 014F
        gbc.setState(0x6488, 0x6b98, 0x9090, 0xa587, 0x4ab8, 0xb3e4, 0x1, 0x1);
        gbc.writeMem(0x6488, { 0x50 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x6489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0150
        gbc.setState(0x182b, 0x1f39, 0x11b0, 0x2d7f, 0x386a, 0xd84, 0x0, 0x1);
        gbc.writeMem(0x182b, { 0x50 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0151
        gbc.setState(0x1d25, 0xaf05, 0xe00, 0x8935, 0x80d2, 0x5bf2, 0x0, 0x1);
        gbc.writeMem(0x1d25, { 0x50 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x1d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0152
        gbc.setState(0x1fd, 0x4526, 0x9460, 0x6d4b, 0xdc0e, 0x99ee, 0x0, 0x1);
        gbc.writeMem(0x1fd, { 0x50 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4526, gbc.sp());
        EXPECT(0x1fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0153
        gbc.setState(0xc331, 0xe113, 0x80a0, 0xf39c, 0xc4cc, 0x8e7e, 0x1, 0x1);
        gbc.writeMem(0xc331, { 0x50 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe113, gbc.sp());
        EXPECT(0xc332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc331));
        // 50 0154
        gbc.setState(0x2d92, 0xecf2, 0xe1b0, 0xcdb3, 0x6c84, 0x7553, 0x1, 0x0);
        gbc.writeMem(0x2d92, { 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x2d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0155
        gbc.setState(0x7763, 0x4362, 0xdf00, 0x8b01, 0x7881, 0xcf1f, 0x1, 0x0);
        gbc.writeMem(0x7763, { 0x50 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4362, gbc.sp());
        EXPECT(0x7764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0156
        gbc.setState(0x466, 0x3598, 0xc900, 0xc491, 0x902f, 0xf58d, 0x1, 0x1);
        gbc.writeMem(0x466, { 0x50 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0x467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0157
        gbc.setState(0xb6b0, 0x3c7a, 0xae30, 0x293e, 0xf159, 0xe8a1, 0x1, 0x1);
        gbc.writeMem(0xb6b0, { 0x50 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3c7a, gbc.sp());
        EXPECT(0xb6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb6b0));
        // 50 0158
        gbc.setState(0x37cf, 0x724, 0x1810, 0x11eb, 0x4370, 0xaf44, 0x1, 0x0);
        gbc.writeMem(0x37cf, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0159
        gbc.setState(0x8e8d, 0x4dca, 0x8980, 0x5a7a, 0x27fa, 0xce2f, 0x1, 0x1);
        gbc.writeMem(0x8e8d, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4dca, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8e8d));
        // 50 015A
        gbc.setState(0x47bf, 0x7b8a, 0xd1a0, 0xcc71, 0x37e2, 0x6c65, 0x0, 0x0);
        gbc.writeMem(0x47bf, { 0x50 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7b8a, gbc.sp());
        EXPECT(0x47c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 015B
        gbc.setState(0x2464, 0x6919, 0x35f0, 0x5923, 0x1b45, 0x2a01, 0x1, 0x1);
        gbc.writeMem(0x2464, { 0x50 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6919, gbc.sp());
        EXPECT(0x2465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 015C
        gbc.setState(0x70f2, 0x546, 0x1c90, 0x271, 0x400e, 0xc372, 0x0, 0x1);
        gbc.writeMem(0x70f2, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x546, gbc.sp());
        EXPECT(0x70f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 015D
        gbc.setState(0xc6e0, 0x8449, 0x11a0, 0x2813, 0xb719, 0xb48, 0x1, 0x1);
        gbc.writeMem(0xc6e0, { 0x50 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8449, gbc.sp());
        EXPECT(0xc6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc6e0));
        // 50 015E
        gbc.setState(0x743e, 0x887b, 0xd960, 0x5b7b, 0xcacc, 0x18c2, 0x0, 0x1);
        gbc.writeMem(0x743e, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x887b, gbc.sp());
        EXPECT(0x743f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 015F
        gbc.setState(0x12df, 0x45f7, 0xd50, 0xdae9, 0xa362, 0x8d27, 0x1, 0x0);
        gbc.writeMem(0x12df, { 0x50 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0x12e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0160
        gbc.setState(0x99d2, 0xb93f, 0x2000, 0x54d5, 0x8235, 0x3aa, 0x1, 0x0);
        gbc.writeMem(0x99d2, { 0x50 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0x99d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x99d2));
        // 50 0161
        gbc.setState(0x7634, 0xcd94, 0xe590, 0x9601, 0x22d5, 0xa0db, 0x0, 0x1);
        gbc.writeMem(0x7634, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcd94, gbc.sp());
        EXPECT(0x7635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0162
        gbc.setState(0x234a, 0x89f4, 0x3dc0, 0xa60e, 0x3d21, 0xe577, 0x0, 0x1);
        gbc.writeMem(0x234a, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x89f4, gbc.sp());
        EXPECT(0x234b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0163
        gbc.setState(0xc382, 0xed80, 0xc50, 0x90dc, 0xcf92, 0x3566, 0x0, 0x0);
        gbc.writeMem(0xc382, { 0x50 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xed80, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc382));
        // 50 0164
        gbc.setState(0xbd52, 0xda36, 0x73c0, 0xbaf6, 0xb9be, 0x5d19, 0x0, 0x1);
        gbc.writeMem(0xbd52, { 0x50 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda36, gbc.sp());
        EXPECT(0xbd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbd52));
        // 50 0165
        gbc.setState(0xd95a, 0xa025, 0x74a0, 0x8960, 0x82c7, 0x107f, 0x0, 0x1);
        gbc.writeMem(0xd95a, { 0x50 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa025, gbc.sp());
        EXPECT(0xd95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd95a));
        // 50 0166
        gbc.setState(0xe231, 0x9eb1, 0x8c70, 0x28d1, 0x11b3, 0x40a, 0x1, 0x0);
        gbc.writeMem(0xe231, { 0x50 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9eb1, gbc.sp());
        EXPECT(0xe232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe231));
        // 50 0167
        gbc.setState(0xc5ee, 0x70ba, 0x3490, 0x7e, 0x1ef3, 0x3197, 0x1, 0x1);
        gbc.writeMem(0xc5ee, { 0x50 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x70ba, gbc.sp());
        EXPECT(0xc5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc5ee));
        // 50 0168
        gbc.setState(0xb1fa, 0xd121, 0xc600, 0x7a2, 0xe7a3, 0x1e58, 0x1, 0x0);
        gbc.writeMem(0xb1fa, { 0x50 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd121, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb1fa));
        // 50 016A
        gbc.setState(0xd8eb, 0x7f6c, 0xf6e0, 0xa2fc, 0x8d2, 0x3200, 0x1, 0x0);
        gbc.writeMem(0xd8eb, { 0x50 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7f6c, gbc.sp());
        EXPECT(0xd8ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd8eb));
        // 50 016B
        gbc.setState(0x5fee, 0xe7dc, 0x2170, 0x6d3b, 0xecdc, 0x37bf, 0x0, 0x1);
        gbc.writeMem(0x5fee, { 0x50 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe7dc, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 016C
        gbc.setState(0x1b71, 0xae5d, 0x640, 0x481f, 0x107d, 0x3085, 0x1, 0x1);
        gbc.writeMem(0x1b71, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xae5d, gbc.sp());
        EXPECT(0x1b72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 016D
        gbc.setState(0xb765, 0x986a, 0x4d40, 0x2253, 0xbfcc, 0x6482, 0x0, 0x1);
        gbc.writeMem(0xb765, { 0x50 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x986a, gbc.sp());
        EXPECT(0xb766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb765));
        // 50 016E
        gbc.setState(0xc2d6, 0xcee6, 0x150, 0x9bed, 0x8ace, 0x3d2b, 0x0, 0x1);
        gbc.writeMem(0xc2d6, { 0x50 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc2d6));
        // 50 016F
        gbc.setState(0xb63b, 0x36db, 0xd200, 0x5fac, 0x2ab, 0xcae0, 0x1, 0x1);
        gbc.writeMem(0xb63b, { 0x50 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x36db, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb63b));
        // 50 0170
        gbc.setState(0xb58e, 0xb567, 0x6420, 0x3354, 0xa4e4, 0xcb1e, 0x0, 0x0);
        gbc.writeMem(0xb58e, { 0x50 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb567, gbc.sp());
        EXPECT(0xb58f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb58e));
        // 50 0171
        gbc.setState(0x29f, 0xe264, 0xd9c0, 0x3ede, 0x1871, 0x5f18, 0x1, 0x0);
        gbc.writeMem(0x29f, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe264, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0172
        gbc.setState(0xb3e, 0xb137, 0x3650, 0xfefe, 0x6200, 0x2450, 0x0, 0x0);
        gbc.writeMem(0xb3e, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb137, gbc.sp());
        EXPECT(0xb3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0173
        gbc.setState(0x2a5b, 0x434d, 0x8f80, 0x49da, 0xd67c, 0x6613, 0x1, 0x1);
        gbc.writeMem(0x2a5b, { 0x50 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x2a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0174
        gbc.setState(0xacd0, 0x3688, 0xd040, 0xaa26, 0xde4, 0x29d8, 0x0, 0x1);
        gbc.writeMem(0xacd0, { 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3688, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xacd0));
        // 50 0175
        gbc.setState(0xc617, 0x6165, 0xf9b0, 0x7e5a, 0x7ceb, 0x5528, 0x1, 0x0);
        gbc.writeMem(0xc617, { 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6165, gbc.sp());
        EXPECT(0xc618, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc617));
        // 50 0176
        gbc.setState(0x5b9d, 0x671d, 0x3870, 0x6d65, 0xe602, 0x335e, 0x1, 0x0);
        gbc.writeMem(0x5b9d, { 0x50 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0x5b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0177
        gbc.setState(0xac86, 0x90f3, 0x1ae0, 0xd771, 0x87f0, 0x1abe, 0x1, 0x1);
        gbc.writeMem(0xac86, { 0x50 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x90f3, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xac86));
        // 50 0178
        gbc.setState(0xedbf, 0xbf91, 0x19e0, 0xf043, 0x622c, 0x1e05, 0x0, 0x1);
        gbc.writeMem(0xedbf, { 0x50 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbf91, gbc.sp());
        EXPECT(0xedc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xedbf));
        // 50 0179
        gbc.setState(0xb330, 0x5a66, 0x7e60, 0xede0, 0xea56, 0xc433, 0x1, 0x0);
        gbc.writeMem(0xb330, { 0x50 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5a66, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb330));
        // 50 017A
        gbc.setState(0x88e0, 0x8ee7, 0x3660, 0x8ea1, 0x89a8, 0x665f, 0x1, 0x1);
        gbc.writeMem(0x88e0, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8ee7, gbc.sp());
        EXPECT(0x88e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x88e0));
        // 50 017B
        gbc.setState(0xb2c0, 0x9f3a, 0x9ca0, 0x7d9d, 0x6243, 0x7bb2, 0x0, 0x0);
        gbc.writeMem(0xb2c0, { 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9f3a, gbc.sp());
        EXPECT(0xb2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb2c0));
        // 50 017C
        gbc.setState(0xa511, 0x41f3, 0xe190, 0xbb12, 0x1da9, 0x8c6, 0x0, 0x1);
        gbc.writeMem(0xa511, { 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x41f3, gbc.sp());
        EXPECT(0xa512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa511));
        // 50 017D
        gbc.setState(0x3b15, 0xd2a3, 0xfe20, 0x571b, 0x91da, 0xfa28, 0x1, 0x1);
        gbc.writeMem(0x3b15, { 0x50 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd2a3, gbc.sp());
        EXPECT(0x3b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 017E
        gbc.setState(0x7a47, 0xf50c, 0x8e30, 0xa81e, 0x23a2, 0xb02d, 0x0, 0x0);
        gbc.writeMem(0x7a47, { 0x50 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xf50c, gbc.sp());
        EXPECT(0x7a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 017F
        gbc.setState(0x4145, 0x35d6, 0x61c0, 0x4974, 0x5d5f, 0x29fa, 0x1, 0x0);
        gbc.writeMem(0x4145, { 0x50 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x35d6, gbc.sp());
        EXPECT(0x4146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0180
        gbc.setState(0xe468, 0xc0cc, 0x9760, 0xd76c, 0x3c3f, 0x511, 0x0, 0x1);
        gbc.writeMem(0xe468, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc0cc, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe468));
        // 50 0181
        gbc.setState(0xb77c, 0x56ae, 0x7060, 0x5bfe, 0xb161, 0xaaee, 0x0, 0x0);
        gbc.writeMem(0xb77c, { 0x50 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x56ae, gbc.sp());
        EXPECT(0xb77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb77c));
        // 50 0182
        gbc.setState(0xc34b, 0x7557, 0x21d0, 0xd94c, 0xcfc8, 0x614c, 0x0, 0x1);
        gbc.writeMem(0xc34b, { 0x50 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0xc34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc34b));
        // 50 0183
        gbc.setState(0x8042, 0x7b66, 0xd950, 0x349d, 0xfe6c, 0x4a42, 0x1, 0x1);
        gbc.writeMem(0x8042, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7b66, gbc.sp());
        EXPECT(0x8043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8042));
        // 50 0184
        gbc.setState(0x1658, 0x8786, 0x2570, 0x928d, 0xe47f, 0xf5a4, 0x1, 0x0);
        gbc.writeMem(0x1658, { 0x50 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8786, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0186
        gbc.setState(0xaf0a, 0x8f57, 0x6060, 0xffe3, 0xa6b7, 0xba15, 0x1, 0x1);
        gbc.writeMem(0xaf0a, { 0x50 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8f57, gbc.sp());
        EXPECT(0xaf0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaf0a));
        // 50 0187
        gbc.setState(0x9707, 0x774d, 0xc690, 0x2d91, 0x4b6f, 0x1969, 0x1, 0x0);
        gbc.writeMem(0x9707, { 0x50 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x9708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9707));
        // 50 0188
        gbc.setState(0xb010, 0x72ec, 0x28f0, 0x63e8, 0x74d7, 0xfad6, 0x1, 0x0);
        gbc.writeMem(0xb010, { 0x50 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x72ec, gbc.sp());
        EXPECT(0xb011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb010));
        // 50 0189
        gbc.setState(0x35fb, 0x4138, 0x10b0, 0xed28, 0xc96, 0xe996, 0x0, 0x0);
        gbc.writeMem(0x35fb, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4138, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 018A
        gbc.setState(0x306d, 0x1226, 0xa40, 0x85c7, 0x8efe, 0x82e0, 0x1, 0x1);
        gbc.writeMem(0x306d, { 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x1226, gbc.sp());
        EXPECT(0x306e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 018B
        gbc.setState(0x78c3, 0x4878, 0xf050, 0x7c0a, 0xdd18, 0x7cdc, 0x0, 0x0);
        gbc.writeMem(0x78c3, { 0x50 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4878, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 018C
        gbc.setState(0x1954, 0xc2ab, 0xfd20, 0xb87, 0x131f, 0xb1a5, 0x0, 0x1);
        gbc.writeMem(0x1954, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc2ab, gbc.sp());
        EXPECT(0x1955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 018D
        gbc.setState(0x7e7f, 0xd3cf, 0x6b60, 0x681a, 0x9adb, 0x81ed, 0x1, 0x0);
        gbc.writeMem(0x7e7f, { 0x50 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd3cf, gbc.sp());
        EXPECT(0x7e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 018E
        gbc.setState(0xd4d5, 0xd9b3, 0x7280, 0x1f3c, 0xae99, 0x28a2, 0x1, 0x1);
        gbc.writeMem(0xd4d5, { 0x50 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd9b3, gbc.sp());
        EXPECT(0xd4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd4d5));
        // 50 018F
        gbc.setState(0xe717, 0x5baa, 0xacb0, 0x9107, 0xa06b, 0x9449, 0x1, 0x0);
        gbc.writeMem(0xe717, { 0x50 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5baa, gbc.sp());
        EXPECT(0xe718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe717));
        // 50 0190
        gbc.setState(0x2d0f, 0xf2e4, 0xba80, 0x4e73, 0x5abc, 0x361d, 0x0, 0x0);
        gbc.writeMem(0x2d0f, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf2e4, gbc.sp());
        EXPECT(0x2d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0191
        gbc.setState(0x96c6, 0x6e08, 0x1da0, 0x5eef, 0x1d8b, 0x2bff, 0x1, 0x0);
        gbc.writeMem(0x96c6, { 0x50 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6e08, gbc.sp());
        EXPECT(0x96c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x96c6));
        // 50 0192
        gbc.setState(0x86a6, 0xc13, 0xd730, 0xd7fb, 0x28dd, 0xf8f, 0x0, 0x0);
        gbc.writeMem(0x86a6, { 0x50 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc13, gbc.sp());
        EXPECT(0x86a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x86a6));
        // 50 0193
        gbc.setState(0x8d5e, 0x1396, 0x2730, 0x39f, 0x4d51, 0x3a8e, 0x1, 0x1);
        gbc.writeMem(0x8d5e, { 0x50 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1396, gbc.sp());
        EXPECT(0x8d5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8d5e));
        // 50 0195
        gbc.setState(0x1490, 0xd103, 0x6b0, 0xa2be, 0x40e1, 0x88a3, 0x1, 0x1);
        gbc.writeMem(0x1490, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xd103, gbc.sp());
        EXPECT(0x1491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0196
        gbc.setState(0xa5c9, 0x34b6, 0xce80, 0xc110, 0x3e8c, 0xd2ca, 0x1, 0x0);
        gbc.writeMem(0xa5c9, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x34b6, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa5c9));
        // 50 0197
        gbc.setState(0x2d0f, 0xfda0, 0x7fe0, 0x93ce, 0x9147, 0x9c8a, 0x0, 0x0);
        gbc.writeMem(0x2d0f, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xfda0, gbc.sp());
        EXPECT(0x2d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0198
        gbc.setState(0x3b3a, 0x2019, 0x3f40, 0x3904, 0xdcc6, 0x50bb, 0x0, 0x1);
        gbc.writeMem(0x3b3a, { 0x50 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2019, gbc.sp());
        EXPECT(0x3b3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0199
        gbc.setState(0xca55, 0x75b5, 0xd440, 0xb933, 0x3017, 0xa0dc, 0x0, 0x0);
        gbc.writeMem(0xca55, { 0x50 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x75b5, gbc.sp());
        EXPECT(0xca56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xca55));
        // 50 019A
        gbc.setState(0x5958, 0x37e4, 0xd940, 0xd562, 0x7668, 0x4e0a, 0x0, 0x0);
        gbc.writeMem(0x5958, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x37e4, gbc.sp());
        EXPECT(0x5959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 019B
        gbc.setState(0x63c3, 0xd2f7, 0xe370, 0x7767, 0x8327, 0xe87c, 0x1, 0x1);
        gbc.writeMem(0x63c3, { 0x50 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0x63c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 019C
        gbc.setState(0x2436, 0x65df, 0x60d0, 0x38ab, 0x6804, 0xf424, 0x0, 0x1);
        gbc.writeMem(0x2436, { 0x50 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x65df, gbc.sp());
        EXPECT(0x2437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 019D
        gbc.setState(0xa797, 0x4e7, 0x49a0, 0x56d3, 0xfa4f, 0x8e3d, 0x0, 0x1);
        gbc.writeMem(0xa797, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4e7, gbc.sp());
        EXPECT(0xa798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa797));
        // 50 019E
        gbc.setState(0xbb35, 0xeb60, 0x5670, 0xc45a, 0x6515, 0x41c1, 0x0, 0x1);
        gbc.writeMem(0xbb35, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xeb60, gbc.sp());
        EXPECT(0xbb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbb35));
        // 50 019F
        gbc.setState(0xa0fe, 0xd293, 0x3da0, 0x511f, 0xe9ee, 0x1f36, 0x0, 0x0);
        gbc.writeMem(0xa0fe, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd293, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0fe));
        // 50 01A0
        gbc.setState(0x7471, 0xeb4b, 0x7bd0, 0xd26a, 0x574a, 0x274, 0x1, 0x1);
        gbc.writeMem(0x7471, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01A1
        gbc.setState(0x4cc6, 0x384d, 0x1a50, 0xf217, 0x1f91, 0x8fda, 0x0, 0x0);
        gbc.writeMem(0x4cc6, { 0x50 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x384d, gbc.sp());
        EXPECT(0x4cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01A2
        gbc.setState(0xb748, 0x4db8, 0xa4e0, 0xd674, 0x35c5, 0xd7ad, 0x1, 0x1);
        gbc.writeMem(0xb748, { 0x50 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x4db8, gbc.sp());
        EXPECT(0xb749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb748));
        // 50 01A3
        gbc.setState(0x522d, 0xa68e, 0x34c0, 0xc500, 0xe4f3, 0x709a, 0x1, 0x1);
        gbc.writeMem(0x522d, { 0x50 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0x522e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01A4
        gbc.setState(0x2d2d, 0x51e9, 0xd80, 0x57e6, 0xe928, 0x3844, 0x1, 0x1);
        gbc.writeMem(0x2d2d, { 0x50 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x51e9, gbc.sp());
        EXPECT(0x2d2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01A5
        gbc.setState(0x90c0, 0xaf2f, 0x9040, 0x427c, 0xdb03, 0x2149, 0x0, 0x0);
        gbc.writeMem(0x90c0, { 0x50 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xaf2f, gbc.sp());
        EXPECT(0x90c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x90c0));
        // 50 01A6
        gbc.setState(0x3c3c, 0x7bf9, 0xddf0, 0x8ee5, 0xfe48, 0x741a, 0x1, 0x1);
        gbc.writeMem(0x3c3c, { 0x50 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7bf9, gbc.sp());
        EXPECT(0x3c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01A7
        gbc.setState(0xd351, 0xd91d, 0xc370, 0x5314, 0x1ff2, 0xba6e, 0x0, 0x1);
        gbc.writeMem(0xd351, { 0x50 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd91d, gbc.sp());
        EXPECT(0xd352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd351));
        // 50 01A8
        gbc.setState(0x8d41, 0xa242, 0x8520, 0x55f3, 0x6d69, 0xd56d, 0x1, 0x0);
        gbc.writeMem(0x8d41, { 0x50 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa242, gbc.sp());
        EXPECT(0x8d42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8d41));
        // 50 01A9
        gbc.setState(0xd897, 0xd816, 0x1110, 0xc203, 0xb702, 0x3021, 0x1, 0x0);
        gbc.writeMem(0xd897, { 0x50 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd816, gbc.sp());
        EXPECT(0xd898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd897));
        // 50 01AA
        gbc.setState(0x7d26, 0x5bf1, 0xe360, 0xbe27, 0x6114, 0x3815, 0x0, 0x0);
        gbc.writeMem(0x7d26, { 0x50 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5bf1, gbc.sp());
        EXPECT(0x7d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01AB
        gbc.setState(0x4e4f, 0xf3f4, 0x1570, 0xd05a, 0x67a4, 0x46b5, 0x1, 0x0);
        gbc.writeMem(0x4e4f, { 0x50 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf3f4, gbc.sp());
        EXPECT(0x4e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01AC
        gbc.setState(0xd7b9, 0xa41d, 0x9740, 0xbcc9, 0x5046, 0xc211, 0x0, 0x1);
        gbc.writeMem(0xd7b9, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa41d, gbc.sp());
        EXPECT(0xd7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd7b9));
        // 50 01AD
        gbc.setState(0x17a1, 0x9c56, 0x3600, 0x2e4d, 0xc088, 0x8704, 0x0, 0x0);
        gbc.writeMem(0x17a1, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9c56, gbc.sp());
        EXPECT(0x17a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01AE
        gbc.setState(0x4684, 0x7a28, 0x5780, 0xf248, 0xa667, 0x52f9, 0x1, 0x1);
        gbc.writeMem(0x4684, { 0x50 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7a28, gbc.sp());
        EXPECT(0x4685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01AF
        gbc.setState(0xe464, 0x12ef, 0x3340, 0x192d, 0x4c97, 0xbb1e, 0x1, 0x0);
        gbc.writeMem(0xe464, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x12ef, gbc.sp());
        EXPECT(0xe465, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe464));
        // 50 01B0
        gbc.setState(0xdf93, 0x51d3, 0x9e20, 0x9ac1, 0xcceb, 0x5961, 0x1, 0x0);
        gbc.writeMem(0xdf93, { 0x50 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x51d3, gbc.sp());
        EXPECT(0xdf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdf93));
        // 50 01B1
        gbc.setState(0x95f, 0xf981, 0x5180, 0x5160, 0x4dd8, 0xd84f, 0x1, 0x0);
        gbc.writeMem(0x95f, { 0x50 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf981, gbc.sp());
        EXPECT(0x960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01B2
        gbc.setState(0xe953, 0x751e, 0x5ce0, 0x5178, 0xe502, 0xa77a, 0x1, 0x1);
        gbc.writeMem(0xe953, { 0x50 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0xe954, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe953));
        // 50 01B3
        gbc.setState(0xe704, 0xb241, 0x36f0, 0x4db7, 0x2286, 0x6fa4, 0x0, 0x1);
        gbc.writeMem(0xe704, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb241, gbc.sp());
        EXPECT(0xe705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe704));
        // 50 01B4
        gbc.setState(0xb302, 0xd8df, 0x9ce0, 0xb031, 0x7632, 0x52a7, 0x1, 0x1);
        gbc.writeMem(0xb302, { 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0xb303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb302));
        // 50 01B5
        gbc.setState(0x3d9, 0x944b, 0xcb50, 0xa847, 0xfe51, 0x6c29, 0x0, 0x0);
        gbc.writeMem(0x3d9, { 0x50 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x944b, gbc.sp());
        EXPECT(0x3da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01B6
        gbc.setState(0x12da, 0xb6fc, 0xea00, 0xb40e, 0xcc28, 0x746e, 0x1, 0x0);
        gbc.writeMem(0x12da, { 0x50 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xb6fc, gbc.sp());
        EXPECT(0x12db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01B7
        gbc.setState(0x19b6, 0x6ac3, 0x9800, 0x289, 0x71d8, 0x1ca8, 0x0, 0x0);
        gbc.writeMem(0x19b6, { 0x50 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6ac3, gbc.sp());
        EXPECT(0x19b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01B8
        gbc.setState(0xdf29, 0x85bc, 0xd050, 0x91d7, 0x833a, 0xaf42, 0x1, 0x0);
        gbc.writeMem(0xdf29, { 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x85bc, gbc.sp());
        EXPECT(0xdf2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdf29));
        // 50 01B9
        gbc.setState(0x801e, 0x89d5, 0xc8a0, 0xae4e, 0x797b, 0xd91b, 0x0, 0x1);
        gbc.writeMem(0x801e, { 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x89d5, gbc.sp());
        EXPECT(0x801f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x801e));
        // 50 01BA
        gbc.setState(0xbda5, 0x4d68, 0x4290, 0x90f8, 0x1da9, 0xfd6f, 0x0, 0x0);
        gbc.writeMem(0xbda5, { 0x50 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4d68, gbc.sp());
        EXPECT(0xbda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbda5));
        // 50 01BB
        gbc.setState(0x4ab7, 0xad45, 0xbc00, 0xebc, 0xe622, 0x72fe, 0x0, 0x0);
        gbc.writeMem(0x4ab7, { 0x50 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xad45, gbc.sp());
        EXPECT(0x4ab8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01BC
        gbc.setState(0x2a9e, 0x56ca, 0xcea0, 0x9ee6, 0xbb45, 0x4c46, 0x1, 0x0);
        gbc.writeMem(0x2a9e, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x56ca, gbc.sp());
        EXPECT(0x2a9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01BD
        gbc.setState(0x521b, 0x5036, 0x2610, 0x58a9, 0xfad6, 0x9e79, 0x1, 0x1);
        gbc.writeMem(0x521b, { 0x50 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x521c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01BE
        gbc.setState(0x3909, 0x7875, 0x5e10, 0x8ad8, 0x12de, 0xe5ea, 0x1, 0x1);
        gbc.writeMem(0x3909, { 0x50 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0x390a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01BF
        gbc.setState(0xdfe1, 0xe9dc, 0x1c30, 0xdab2, 0xe56, 0x99c7, 0x1, 0x1);
        gbc.writeMem(0xdfe1, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0xdfe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdfe1));
        // 50 01C0
        gbc.setState(0xe94d, 0xfc5f, 0xfc80, 0x6181, 0xb075, 0xc3e7, 0x1, 0x1);
        gbc.writeMem(0xe94d, { 0x50 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfc5f, gbc.sp());
        EXPECT(0xe94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe94d));
        // 50 01C1
        gbc.setState(0x29a3, 0x35df, 0xe5e0, 0xb53c, 0x79e0, 0x2b00, 0x0, 0x0);
        gbc.writeMem(0x29a3, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x35df, gbc.sp());
        EXPECT(0x29a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01C2
        gbc.setState(0x3ed4, 0x7f1d, 0x7860, 0xeff8, 0xbff8, 0x4ab, 0x0, 0x0);
        gbc.writeMem(0x3ed4, { 0x50 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7f1d, gbc.sp());
        EXPECT(0x3ed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01C4
        gbc.setState(0x9973, 0x763d, 0x1380, 0xcfd1, 0x1cf0, 0x2d0b, 0x1, 0x1);
        gbc.writeMem(0x9973, { 0x50 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x763d, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9973));
        // 50 01C5
        gbc.setState(0x92c0, 0xb4e5, 0x1550, 0xbc0a, 0xe401, 0x8539, 0x1, 0x1);
        gbc.writeMem(0x92c0, { 0x50 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb4e5, gbc.sp());
        EXPECT(0x92c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x92c0));
        // 50 01C6
        gbc.setState(0x2fbc, 0x935e, 0x7ce0, 0xd7f5, 0x1495, 0x943c, 0x1, 0x1);
        gbc.writeMem(0x2fbc, { 0x50 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x935e, gbc.sp());
        EXPECT(0x2fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01C7
        gbc.setState(0x284, 0xfea0, 0x3310, 0xbb3a, 0x571d, 0x6763, 0x1, 0x0);
        gbc.writeMem(0x284, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfea0, gbc.sp());
        EXPECT(0x285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01C8
        gbc.setState(0x173a, 0xe0f6, 0xd9e0, 0xb324, 0x56ac, 0xf3da, 0x1, 0x1);
        gbc.writeMem(0x173a, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0x173b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01C9
        gbc.setState(0x34d7, 0x170e, 0x3de0, 0x8df1, 0x1046, 0xde6c, 0x0, 0x1);
        gbc.writeMem(0x34d7, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x170e, gbc.sp());
        EXPECT(0x34d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01CA
        gbc.setState(0x79b9, 0xc924, 0xb0, 0xfb7e, 0x14b5, 0x2a6a, 0x1, 0x1);
        gbc.writeMem(0x79b9, { 0x50 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc924, gbc.sp());
        EXPECT(0x79ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01CB
        gbc.setState(0x373e, 0xd835, 0xcfa0, 0x9d8f, 0x42f2, 0xe72d, 0x0, 0x0);
        gbc.writeMem(0x373e, { 0x50 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x373f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01CC
        gbc.setState(0x130b, 0xb0e9, 0x1760, 0xc2d4, 0xa017, 0xbead, 0x1, 0x0);
        gbc.writeMem(0x130b, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0x130c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01CD
        gbc.setState(0x6c8a, 0xa9bc, 0x18e0, 0xc6ff, 0xb53b, 0x8dba, 0x0, 0x1);
        gbc.writeMem(0x6c8a, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa9bc, gbc.sp());
        EXPECT(0x6c8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01CE
        gbc.setState(0xb61d, 0xff8d, 0xb180, 0x6e4d, 0x75c9, 0x735, 0x1, 0x1);
        gbc.writeMem(0xb61d, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xff8d, gbc.sp());
        EXPECT(0xb61e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb61d));
        // 50 01CF
        gbc.setState(0x487e, 0x43e, 0x7b60, 0xe8e9, 0x56a0, 0xb12, 0x1, 0x0);
        gbc.writeMem(0x487e, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x43e, gbc.sp());
        EXPECT(0x487f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01D0
        gbc.setState(0x73d7, 0x550c, 0xc8b0, 0xe4b, 0x96c, 0xc9fc, 0x0, 0x0);
        gbc.writeMem(0x73d7, { 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x550c, gbc.sp());
        EXPECT(0x73d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01D1
        gbc.setState(0x1ec6, 0x1297, 0x3a30, 0xb6c5, 0xd232, 0xcce5, 0x1, 0x1);
        gbc.writeMem(0x1ec6, { 0x50 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1297, gbc.sp());
        EXPECT(0x1ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01D2
        gbc.setState(0xa70, 0x486a, 0xcf40, 0x3fb1, 0x4b0a, 0xf44a, 0x0, 0x1);
        gbc.writeMem(0xa70, { 0x50 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x486a, gbc.sp());
        EXPECT(0xa71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01D3
        gbc.setState(0xa35e, 0xcf94, 0x9ad0, 0xc979, 0xc7f4, 0x4a1c, 0x0, 0x1);
        gbc.writeMem(0xa35e, { 0x50 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcf94, gbc.sp());
        EXPECT(0xa35f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa35e));
        // 50 01D4
        gbc.setState(0xd7e8, 0xd9bb, 0x22d0, 0x1193, 0xa741, 0xc0b1, 0x1, 0x1);
        gbc.writeMem(0xd7e8, { 0x50 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd9bb, gbc.sp());
        EXPECT(0xd7e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd7e8));
        // 50 01D5
        gbc.setState(0xae8c, 0x5e04, 0x50e0, 0x1fe0, 0x2d7a, 0xf3d3, 0x1, 0x1);
        gbc.writeMem(0xae8c, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5e04, gbc.sp());
        EXPECT(0xae8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xae8c));
        // 50 01D6
        gbc.setState(0xe3ff, 0xfb73, 0x73f0, 0x61ca, 0x650a, 0xd605, 0x0, 0x0);
        gbc.writeMem(0xe3ff, { 0x50 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfb73, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe3ff));
        // 50 01D7
        gbc.setState(0x1150, 0x65d1, 0xba30, 0xb453, 0x4a42, 0x6a05, 0x0, 0x0);
        gbc.writeMem(0x1150, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x65d1, gbc.sp());
        EXPECT(0x1151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01D8
        gbc.setState(0x6957, 0x3ee8, 0x3200, 0xfe37, 0x29d, 0xddae, 0x0, 0x1);
        gbc.writeMem(0x6957, { 0x50 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x3ee8, gbc.sp());
        EXPECT(0x6958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01D9
        gbc.setState(0x577c, 0xf9aa, 0x55e0, 0xcf24, 0xc6e3, 0x5ee2, 0x1, 0x0);
        gbc.writeMem(0x577c, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf9aa, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01DA
        gbc.setState(0x851a, 0x1784, 0x4e0, 0x6397, 0x3839, 0x9197, 0x0, 0x0);
        gbc.writeMem(0x851a, { 0x50 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1784, gbc.sp());
        EXPECT(0x851b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x851a));
        // 50 01DB
        gbc.setState(0x27fd, 0x828f, 0x5290, 0x882c, 0xc5b3, 0xb16f, 0x0, 0x1);
        gbc.writeMem(0x27fd, { 0x50 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x828f, gbc.sp());
        EXPECT(0x27fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01DC
        gbc.setState(0x72ed, 0x52dd, 0xfb10, 0xd5ed, 0x1058, 0x8043, 0x0, 0x1);
        gbc.writeMem(0x72ed, { 0x50 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x52dd, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01DD
        gbc.setState(0x5df5, 0x8621, 0xf7c0, 0x88d9, 0x3ebb, 0x5f3a, 0x1, 0x0);
        gbc.writeMem(0x5df5, { 0x50 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8621, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01DE
        gbc.setState(0x4106, 0x69b8, 0xbdd0, 0x9f81, 0x3328, 0x811a, 0x1, 0x1);
        gbc.writeMem(0x4106, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0x4107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01DF
        gbc.setState(0x6d67, 0x1818, 0x4330, 0x6a7c, 0xdcb7, 0xe371, 0x0, 0x1);
        gbc.writeMem(0x6d67, { 0x50 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1818, gbc.sp());
        EXPECT(0x6d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01E0
        gbc.setState(0x46cc, 0xb50f, 0xc870, 0x2565, 0x94f8, 0x7b16, 0x1, 0x0);
        gbc.writeMem(0x46cc, { 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb50f, gbc.sp());
        EXPECT(0x46cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01E1
        gbc.setState(0xb0e2, 0xaa32, 0xbc60, 0xbde3, 0x987, 0xd6aa, 0x0, 0x1);
        gbc.writeMem(0xb0e2, { 0x50 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaa32, gbc.sp());
        EXPECT(0xb0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb0e2));
        // 50 01E2
        gbc.setState(0xec1, 0xc5ea, 0x4bc0, 0xd1cd, 0x748a, 0x89b5, 0x1, 0x0);
        gbc.writeMem(0xec1, { 0x50 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc5ea, gbc.sp());
        EXPECT(0xec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01E3
        gbc.setState(0x2fd1, 0x1f0, 0x4ec0, 0x312f, 0xf70c, 0x46a3, 0x1, 0x1);
        gbc.writeMem(0x2fd1, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1f0, gbc.sp());
        EXPECT(0x2fd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01E4
        gbc.setState(0xd43c, 0xb7ce, 0xd240, 0x117c, 0x5f79, 0x202c, 0x0, 0x0);
        gbc.writeMem(0xd43c, { 0x50 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xb7ce, gbc.sp());
        EXPECT(0xd43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd43c));
        // 50 01E5
        gbc.setState(0x5f99, 0xe8c8, 0x4470, 0xb6b2, 0x664, 0x697f, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0x50 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe8c8, gbc.sp());
        EXPECT(0x5f9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01E6
        gbc.setState(0x99ef, 0xca7c, 0x19f0, 0x99bc, 0xb065, 0x3354, 0x1, 0x0);
        gbc.writeMem(0x99ef, { 0x50 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xca7c, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x99ef));
        // 50 01E7
        gbc.setState(0xcca4, 0x15f1, 0x7e00, 0xe3a9, 0xa150, 0x289a, 0x0, 0x0);
        gbc.writeMem(0xcca4, { 0x50 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x15f1, gbc.sp());
        EXPECT(0xcca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcca4));
        // 50 01E8
        gbc.setState(0x5930, 0x92dc, 0x9830, 0x4f0, 0xb235, 0xa4f5, 0x1, 0x0);
        gbc.writeMem(0x5930, { 0x50 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x92dc, gbc.sp());
        EXPECT(0x5931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01E9
        gbc.setState(0x8dda, 0x17f9, 0x29b0, 0xdb7d, 0xc17, 0x4fc7, 0x1, 0x0);
        gbc.writeMem(0x8dda, { 0x50 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x17f9, gbc.sp());
        EXPECT(0x8ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8dda));
        // 50 01EA
        gbc.setState(0xab0f, 0xf8cc, 0x7990, 0x87f7, 0x6d63, 0xe757, 0x0, 0x1);
        gbc.writeMem(0xab0f, { 0x50 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf8cc, gbc.sp());
        EXPECT(0xab10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xab0f));
        // 50 01EC
        gbc.setState(0xbb61, 0x7942, 0x2160, 0x2d8e, 0xc09c, 0xc395, 0x1, 0x1);
        gbc.writeMem(0xbb61, { 0x50 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7942, gbc.sp());
        EXPECT(0xbb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbb61));
        // 50 01ED
        gbc.setState(0xe174, 0xe0d, 0xa70, 0x787a, 0xba3d, 0x65bc, 0x1, 0x1);
        gbc.writeMem(0xe174, { 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe0d, gbc.sp());
        EXPECT(0xe175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe174));
        // 50 01EE
        gbc.setState(0x7a41, 0xf878, 0xb400, 0x30a4, 0x4a36, 0x5c19, 0x0, 0x1);
        gbc.writeMem(0x7a41, { 0x50 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf878, gbc.sp());
        EXPECT(0x7a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01EF
        gbc.setState(0x6830, 0x6f02, 0xe590, 0xa619, 0x2e3e, 0x868a, 0x0, 0x1);
        gbc.writeMem(0x6830, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6f02, gbc.sp());
        EXPECT(0x6831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01F0
        gbc.setState(0x89fa, 0x3217, 0x4c50, 0x7b35, 0x6efb, 0xfc16, 0x1, 0x0);
        gbc.writeMem(0x89fa, { 0x50 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x3217, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x89fa));
        // 50 01F1
        gbc.setState(0x693f, 0x4965, 0x71a0, 0x8193, 0x7fb2, 0x147a, 0x0, 0x0);
        gbc.writeMem(0x693f, { 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4965, gbc.sp());
        EXPECT(0x6940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01F2
        gbc.setState(0x2a69, 0x3c09, 0x6e50, 0x7052, 0x114f, 0xc60b, 0x1, 0x0);
        gbc.writeMem(0x2a69, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3c09, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01F4
        gbc.setState(0xc359, 0xc9af, 0x3250, 0x6c0c, 0x555d, 0x6426, 0x1, 0x1);
        gbc.writeMem(0xc359, { 0x50 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc9af, gbc.sp());
        EXPECT(0xc35a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc359));
        // 50 01F5
        gbc.setState(0xed72, 0x9648, 0xd310, 0xe55c, 0x48b1, 0x85a0, 0x1, 0x0);
        gbc.writeMem(0xed72, { 0x50 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9648, gbc.sp());
        EXPECT(0xed73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xed72));
        // 50 01F6
        gbc.setState(0x214d, 0xc287, 0x2360, 0xa44d, 0x5914, 0xc881, 0x1, 0x1);
        gbc.writeMem(0x214d, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc287, gbc.sp());
        EXPECT(0x214e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 01F7
        gbc.setState(0x749, 0xd76e, 0xba90, 0xbd24, 0xd77d, 0x31ea, 0x1, 0x0);
        gbc.writeMem(0x749, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd76e, gbc.sp());
        EXPECT(0x74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01F8
        gbc.setState(0x221, 0x7f8a, 0x23f0, 0xe793, 0x6ca3, 0xb751, 0x1, 0x1);
        gbc.writeMem(0x221, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0x222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01F9
        gbc.setState(0x346e, 0x6661, 0x8910, 0x3acb, 0xa783, 0xbaba, 0x1, 0x1);
        gbc.writeMem(0x346e, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6661, gbc.sp());
        EXPECT(0x346f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01FA
        gbc.setState(0x8597, 0x895b, 0xa000, 0xb43b, 0x661, 0x180e, 0x1, 0x1);
        gbc.writeMem(0x8597, { 0x50 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x895b, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8597));
        // 50 01FB
        gbc.setState(0x680c, 0xe6be, 0x6290, 0x4c33, 0x86df, 0x289e, 0x0, 0x0);
        gbc.writeMem(0x680c, { 0x50 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe6be, gbc.sp());
        EXPECT(0x680d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01FC
        gbc.setState(0xe7e9, 0x95e0, 0xa440, 0xe3e0, 0xc33b, 0x3ed8, 0x0, 0x1);
        gbc.writeMem(0xe7e9, { 0x50 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x95e0, gbc.sp());
        EXPECT(0xe7ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe7e9));
        // 50 01FD
        gbc.setState(0x1599, 0x2e8d, 0x1ff0, 0x2601, 0xbda3, 0xa0b9, 0x0, 0x0);
        gbc.writeMem(0x1599, { 0x50 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2e8d, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01FE
        gbc.setState(0x28b6, 0x8f67, 0x9570, 0x7a85, 0x4adf, 0x1186, 0x0, 0x1);
        gbc.writeMem(0x28b6, { 0x50 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0x28b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 01FF
        gbc.setState(0x143a, 0xd512, 0x59e0, 0xf11b, 0x57e4, 0x908e, 0x1, 0x0);
        gbc.writeMem(0x143a, { 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd512, gbc.sp());
        EXPECT(0x143b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0200
        gbc.setState(0x6cce, 0x86b, 0x18f0, 0x116e, 0x8633, 0x6d8d, 0x0, 0x0);
        gbc.writeMem(0x6cce, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x86b, gbc.sp());
        EXPECT(0x6ccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0201
        gbc.setState(0x4d98, 0x1a76, 0x1e70, 0xdb89, 0xf279, 0x435b, 0x0, 0x1);
        gbc.writeMem(0x4d98, { 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1a76, gbc.sp());
        EXPECT(0x4d99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0202
        gbc.setState(0x45b3, 0x350e, 0x5c60, 0x8277, 0x8e78, 0xb47a, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0x50 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x350e, gbc.sp());
        EXPECT(0x45b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0204
        gbc.setState(0xd5e6, 0x693a, 0xd980, 0xfa1, 0xb328, 0x277, 0x0, 0x1);
        gbc.writeMem(0xd5e6, { 0x50 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x693a, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd5e6));
        // 50 0205
        gbc.setState(0x62bf, 0x11e3, 0x34a0, 0x7e58, 0xd80d, 0x9226, 0x1, 0x0);
        gbc.writeMem(0x62bf, { 0x50 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x11e3, gbc.sp());
        EXPECT(0x62c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0206
        gbc.setState(0x704a, 0x877a, 0x5a80, 0xfd8, 0x2c5a, 0xe024, 0x1, 0x1);
        gbc.writeMem(0x704a, { 0x50 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x877a, gbc.sp());
        EXPECT(0x704b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0207
        gbc.setState(0x5099, 0x2840, 0x2bc0, 0xc30b, 0x3a06, 0xe65, 0x1, 0x1);
        gbc.writeMem(0x5099, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2840, gbc.sp());
        EXPECT(0x509a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0208
        gbc.setState(0xc00, 0xe1b5, 0x66a0, 0x9c10, 0x18d7, 0x87ce, 0x0, 0x1);
        gbc.writeMem(0xc00, { 0x50 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xe1b5, gbc.sp());
        EXPECT(0xc01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0209
        gbc.setState(0xd4d6, 0x2d7, 0xe020, 0x6081, 0xbb8c, 0x56e4, 0x1, 0x1);
        gbc.writeMem(0xd4d6, { 0x50 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0xd4d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd4d6));
        // 50 020A
        gbc.setState(0x547f, 0xfae7, 0x6fb0, 0x54b, 0x43b6, 0xe6d6, 0x1, 0x0);
        gbc.writeMem(0x547f, { 0x50 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xfae7, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 020B
        gbc.setState(0x3e60, 0xd13d, 0x3e10, 0x9392, 0x50cb, 0xc079, 0x0, 0x1);
        gbc.writeMem(0x3e60, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd13d, gbc.sp());
        EXPECT(0x3e61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 020C
        gbc.setState(0x2393, 0x1f49, 0x92c0, 0xd02a, 0x2563, 0xf31a, 0x0, 0x1);
        gbc.writeMem(0x2393, { 0x50 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1f49, gbc.sp());
        EXPECT(0x2394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 020D
        gbc.setState(0xcb46, 0x1b8f, 0xb610, 0x4431, 0x5904, 0xef4f, 0x1, 0x0);
        gbc.writeMem(0xcb46, { 0x50 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b8f, gbc.sp());
        EXPECT(0xcb47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcb46));
        // 50 020E
        gbc.setState(0x76bc, 0xe82c, 0x23f0, 0x42e5, 0x9dcc, 0xd970, 0x0, 0x0);
        gbc.writeMem(0x76bc, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe82c, gbc.sp());
        EXPECT(0x76bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0210
        gbc.setState(0x36a2, 0x7748, 0x3e80, 0x284c, 0x93ca, 0xde2d, 0x1, 0x1);
        gbc.writeMem(0x36a2, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7748, gbc.sp());
        EXPECT(0x36a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0211
        gbc.setState(0x3e5c, 0x5390, 0x9500, 0x6401, 0xe23e, 0xa68b, 0x1, 0x1);
        gbc.writeMem(0x3e5c, { 0x50 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5390, gbc.sp());
        EXPECT(0x3e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0212
        gbc.setState(0x3234, 0xdd17, 0x17e0, 0x845c, 0x1509, 0x91b2, 0x0, 0x0);
        gbc.writeMem(0x3234, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd17, gbc.sp());
        EXPECT(0x3235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0213
        gbc.setState(0xa46e, 0xd117, 0x48f0, 0x9ce2, 0xe23, 0x55e7, 0x1, 0x1);
        gbc.writeMem(0xa46e, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa46e));
        // 50 0214
        gbc.setState(0x9703, 0x678, 0x6fb0, 0xc5f1, 0x481e, 0x4768, 0x1, 0x0);
        gbc.writeMem(0x9703, { 0x50 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x678, gbc.sp());
        EXPECT(0x9704, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9703));
        // 50 0215
        gbc.setState(0x845b, 0xad16, 0x8cf0, 0xb3f2, 0xc486, 0x669d, 0x1, 0x0);
        gbc.writeMem(0x845b, { 0x50 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xad16, gbc.sp());
        EXPECT(0x845c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x845b));
        // 50 0216
        gbc.setState(0xb63e, 0xab49, 0x3c50, 0xcdab, 0x88f7, 0x21f9, 0x0, 0x1);
        gbc.writeMem(0xb63e, { 0x50 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xab49, gbc.sp());
        EXPECT(0xb63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb63e));
        // 50 0217
        gbc.setState(0x6d32, 0x6d81, 0x2900, 0xc87d, 0xfe48, 0xe716, 0x1, 0x0);
        gbc.writeMem(0x6d32, { 0x50 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6d81, gbc.sp());
        EXPECT(0x6d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0218
        gbc.setState(0xebb6, 0xc8f4, 0x8600, 0x223, 0xd427, 0xc773, 0x1, 0x0);
        gbc.writeMem(0xebb6, { 0x50 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc8f4, gbc.sp());
        EXPECT(0xebb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xebb6));
        // 50 0219
        gbc.setState(0x1fca, 0xb593, 0x4cb0, 0x88f1, 0x8743, 0x86d8, 0x1, 0x1);
        gbc.writeMem(0x1fca, { 0x50 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb593, gbc.sp());
        EXPECT(0x1fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 021A
        gbc.setState(0x8e61, 0xa1ab, 0xb930, 0x88c8, 0xbb19, 0x9805, 0x1, 0x1);
        gbc.writeMem(0x8e61, { 0x50 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xa1ab, gbc.sp());
        EXPECT(0x8e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8e61));
        // 50 021B
        gbc.setState(0xc3a, 0x4a83, 0xc9a0, 0x135c, 0xf11b, 0x229e, 0x1, 0x1);
        gbc.writeMem(0xc3a, { 0x50 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4a83, gbc.sp());
        EXPECT(0xc3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 021C
        gbc.setState(0xefe7, 0xe609, 0x6850, 0x59bc, 0xf725, 0xb69a, 0x0, 0x1);
        gbc.writeMem(0xefe7, { 0x50 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xefe7));
        // 50 021D
        gbc.setState(0x4bad, 0x3cb, 0x6e40, 0x98dd, 0x922b, 0xf2cd, 0x1, 0x0);
        gbc.writeMem(0x4bad, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3cb, gbc.sp());
        EXPECT(0x4bae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 021E
        gbc.setState(0x4a5e, 0x7030, 0xce70, 0x96c2, 0x617f, 0x5ff9, 0x0, 0x1);
        gbc.writeMem(0x4a5e, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 021F
        gbc.setState(0xb8d6, 0x41d5, 0xadb0, 0xeb6e, 0x1aee, 0x5e9b, 0x0, 0x0);
        gbc.writeMem(0xb8d6, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x41d5, gbc.sp());
        EXPECT(0xb8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb8d6));
        // 50 0220
        gbc.setState(0x28b2, 0xcec0, 0x75c0, 0x2b5e, 0x2707, 0x5cd2, 0x1, 0x0);
        gbc.writeMem(0x28b2, { 0x50 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0x28b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0221
        gbc.setState(0xc374, 0x1f8a, 0x6cb0, 0x9bcc, 0x3456, 0x36fb, 0x1, 0x0);
        gbc.writeMem(0xc374, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1f8a, gbc.sp());
        EXPECT(0xc375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc374));
        // 50 0222
        gbc.setState(0xd17d, 0x20e8, 0x9f10, 0x9d27, 0x7c4, 0xf181, 0x0, 0x0);
        gbc.writeMem(0xd17d, { 0x50 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x20e8, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd17d));
        // 50 0223
        gbc.setState(0x6672, 0x73d0, 0x8c90, 0x6cc8, 0x914f, 0x5b0e, 0x0, 0x1);
        gbc.writeMem(0x6672, { 0x50 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x73d0, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0224
        gbc.setState(0x9416, 0xe26e, 0xf310, 0x5877, 0xa756, 0x78ea, 0x0, 0x1);
        gbc.writeMem(0x9416, { 0x50 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe26e, gbc.sp());
        EXPECT(0x9417, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9416));
        // 50 0225
        gbc.setState(0x1de6, 0xc205, 0x5b80, 0x4425, 0xab63, 0xd287, 0x0, 0x0);
        gbc.writeMem(0x1de6, { 0x50 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xc205, gbc.sp());
        EXPECT(0x1de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0226
        gbc.setState(0x62c2, 0xbc30, 0x55f0, 0xbee1, 0x9754, 0x1276, 0x1, 0x0);
        gbc.writeMem(0x62c2, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0x62c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0227
        gbc.setState(0x575b, 0x4273, 0xb1d0, 0xc42e, 0x6cb, 0x5a93, 0x0, 0x1);
        gbc.writeMem(0x575b, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4273, gbc.sp());
        EXPECT(0x575c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0228
        gbc.setState(0x165d, 0x9084, 0x81e0, 0xd7ba, 0x7660, 0xc1f4, 0x1, 0x1);
        gbc.writeMem(0x165d, { 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9084, gbc.sp());
        EXPECT(0x165e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0229
        gbc.setState(0x59d3, 0xb691, 0x13b0, 0xac1b, 0x1240, 0x1b65, 0x1, 0x1);
        gbc.writeMem(0x59d3, { 0x50 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb691, gbc.sp());
        EXPECT(0x59d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 022A
        gbc.setState(0x4c90, 0x1ad8, 0x9310, 0x4a3a, 0x10e4, 0xd3fb, 0x1, 0x0);
        gbc.writeMem(0x4c90, { 0x50 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x1ad8, gbc.sp());
        EXPECT(0x4c91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 022B
        gbc.setState(0xc3a7, 0x3ab0, 0x12b0, 0xdb24, 0xdc04, 0x4dc6, 0x0, 0x1);
        gbc.writeMem(0xc3a7, { 0x50 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3ab0, gbc.sp());
        EXPECT(0xc3a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc3a7));
        // 50 022C
        gbc.setState(0xdc41, 0x9c8e, 0xc0b0, 0x1114, 0x17a8, 0xba70, 0x0, 0x1);
        gbc.writeMem(0xdc41, { 0x50 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9c8e, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdc41));
        // 50 022D
        gbc.setState(0xaa56, 0x2909, 0xdc00, 0x3fc7, 0xb47f, 0x594a, 0x0, 0x1);
        gbc.writeMem(0xaa56, { 0x50 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2909, gbc.sp());
        EXPECT(0xaa57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaa56));
        // 50 022E
        gbc.setState(0x658a, 0x7ea4, 0x9350, 0x39c8, 0xde35, 0x46ee, 0x0, 0x1);
        gbc.writeMem(0x658a, { 0x50 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ea4, gbc.sp());
        EXPECT(0x658b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 022F
        gbc.setState(0x82a0, 0xe92, 0x7500, 0xf277, 0xa45, 0x8882, 0x0, 0x1);
        gbc.writeMem(0x82a0, { 0x50 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe92, gbc.sp());
        EXPECT(0x82a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x82a0));
        // 50 0230
        gbc.setState(0xb103, 0x6369, 0xba90, 0x5d24, 0x7bb8, 0x6496, 0x1, 0x0);
        gbc.writeMem(0xb103, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6369, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb103));
        // 50 0231
        gbc.setState(0x501e, 0x25a2, 0xfc70, 0xf1a0, 0x1dd3, 0x2937, 0x0, 0x0);
        gbc.writeMem(0x501e, { 0x50 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x25a2, gbc.sp());
        EXPECT(0x501f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0232
        gbc.setState(0x62ca, 0xa3ba, 0xe7c0, 0x9fa8, 0x768b, 0x220e, 0x0, 0x1);
        gbc.writeMem(0x62ca, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa3ba, gbc.sp());
        EXPECT(0x62cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0233
        gbc.setState(0xec3, 0x412d, 0xa560, 0x9a8d, 0xc043, 0x27e4, 0x1, 0x0);
        gbc.writeMem(0xec3, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x412d, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0234
        gbc.setState(0xd629, 0x62b4, 0x95d0, 0xa272, 0x55db, 0x1565, 0x1, 0x0);
        gbc.writeMem(0xd629, { 0x50 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x62b4, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd629));
        // 50 0235
        gbc.setState(0x35a6, 0xbeef, 0xf140, 0x7716, 0xfc46, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0x35a6, { 0x50 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbeef, gbc.sp());
        EXPECT(0x35a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0236
        gbc.setState(0x55d2, 0xa19b, 0xaf90, 0xe352, 0x58a4, 0xbbf, 0x1, 0x0);
        gbc.writeMem(0x55d2, { 0x50 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa19b, gbc.sp());
        EXPECT(0x55d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0237
        gbc.setState(0xbf38, 0x6577, 0x36b0, 0x2436, 0x2f33, 0xda0f, 0x0, 0x0);
        gbc.writeMem(0xbf38, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6577, gbc.sp());
        EXPECT(0xbf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbf38));
        // 50 0238
        gbc.setState(0xe881, 0x1c20, 0x3710, 0x8f6f, 0x68df, 0x2d7e, 0x1, 0x0);
        gbc.writeMem(0xe881, { 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1c20, gbc.sp());
        EXPECT(0xe882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe881));
        // 50 0239
        gbc.setState(0x5984, 0x34e7, 0xe730, 0x55a4, 0xc5a5, 0x794, 0x0, 0x0);
        gbc.writeMem(0x5984, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x34e7, gbc.sp());
        EXPECT(0x5985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 023A
        gbc.setState(0x2381, 0x4265, 0xc8c0, 0xfe00, 0x23b8, 0xbaa5, 0x1, 0x1);
        gbc.writeMem(0x2381, { 0x50 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4265, gbc.sp());
        EXPECT(0x2382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 023B
        gbc.setState(0xcae6, 0x973d, 0xe780, 0x5ddb, 0xc7b, 0x502c, 0x0, 0x0);
        gbc.writeMem(0xcae6, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x973d, gbc.sp());
        EXPECT(0xcae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcae6));
        // 50 023C
        gbc.setState(0xd21, 0xca17, 0xefb0, 0x3c17, 0x23c, 0xc427, 0x0, 0x1);
        gbc.writeMem(0xd21, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xca17, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 023D
        gbc.setState(0xeabc, 0xce19, 0x1030, 0x9770, 0x63d0, 0x1538, 0x1, 0x1);
        gbc.writeMem(0xeabc, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xce19, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeabc));
        // 50 023E
        gbc.setState(0x7eb, 0xc7f9, 0x1dd0, 0x1557, 0xad2d, 0x6315, 0x1, 0x1);
        gbc.writeMem(0x7eb, { 0x50 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc7f9, gbc.sp());
        EXPECT(0x7ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0240
        gbc.setState(0x32cc, 0xaab6, 0xa5d0, 0x46c6, 0xa064, 0x2c79, 0x0, 0x1);
        gbc.writeMem(0x32cc, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xaab6, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0241
        gbc.setState(0xed96, 0x28bf, 0x4090, 0x90d, 0x46ac, 0x1e4d, 0x1, 0x0);
        gbc.writeMem(0xed96, { 0x50 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x28bf, gbc.sp());
        EXPECT(0xed97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xed96));
        // 50 0242
        gbc.setState(0x35c3, 0x3832, 0x6c70, 0x417, 0xddd1, 0x5ac0, 0x1, 0x1);
        gbc.writeMem(0x35c3, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3832, gbc.sp());
        EXPECT(0x35c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0244
        gbc.setState(0x74db, 0x6eb7, 0xcd30, 0xa403, 0x14a9, 0x17b, 0x0, 0x0);
        gbc.writeMem(0x74db, { 0x50 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6eb7, gbc.sp());
        EXPECT(0x74dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0245
        gbc.setState(0xad58, 0x494d, 0xa620, 0x6a26, 0xbdb3, 0x5c85, 0x1, 0x0);
        gbc.writeMem(0xad58, { 0x50 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x494d, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xad58));
        // 50 0246
        gbc.setState(0x2e84, 0x1208, 0x5e40, 0x7f99, 0x98fc, 0x7f59, 0x1, 0x1);
        gbc.writeMem(0x2e84, { 0x50 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0x2e85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0248
        gbc.setState(0xd936, 0xef22, 0xd5c0, 0x565e, 0x5e60, 0x5a, 0x0, 0x1);
        gbc.writeMem(0xd936, { 0x50 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xef22, gbc.sp());
        EXPECT(0xd937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd936));
        // 50 0249
        gbc.setState(0x2dbc, 0xa49d, 0xa730, 0x1c91, 0xb73, 0xb8a6, 0x1, 0x1);
        gbc.writeMem(0x2dbc, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa49d, gbc.sp());
        EXPECT(0x2dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 024A
        gbc.setState(0x52c3, 0xa4f7, 0xfda0, 0xb464, 0xa40, 0xed97, 0x0, 0x1);
        gbc.writeMem(0x52c3, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa4f7, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 024B
        gbc.setState(0xdcc8, 0xc257, 0x4ed0, 0xa45b, 0xca88, 0xffc1, 0x0, 0x1);
        gbc.writeMem(0xdcc8, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc257, gbc.sp());
        EXPECT(0xdcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdcc8));
        // 50 024C
        gbc.setState(0x58e1, 0x96e0, 0x7bb0, 0xdc6c, 0xcf51, 0xd619, 0x0, 0x1);
        gbc.writeMem(0x58e1, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x96e0, gbc.sp());
        EXPECT(0x58e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 024D
        gbc.setState(0x1bbe, 0x8692, 0xc3e0, 0xa32f, 0x9b2, 0x2706, 0x1, 0x1);
        gbc.writeMem(0x1bbe, { 0x50 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8692, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 024E
        gbc.setState(0xd940, 0x58d2, 0x6c20, 0x7eba, 0x3251, 0x34ce, 0x1, 0x0);
        gbc.writeMem(0xd940, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0xd941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd940));
        // 50 024F
        gbc.setState(0x4910, 0x52e8, 0x4b20, 0x7315, 0x4059, 0xbaab, 0x1, 0x0);
        gbc.writeMem(0x4910, { 0x50 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0250
        gbc.setState(0x3d18, 0xc092, 0x5c00, 0xb925, 0x1fec, 0xa03f, 0x1, 0x0);
        gbc.writeMem(0x3d18, { 0x50 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc092, gbc.sp());
        EXPECT(0x3d19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0251
        gbc.setState(0xee1e, 0x8c44, 0x3ba0, 0x1da7, 0x8e57, 0x802c, 0x0, 0x1);
        gbc.writeMem(0xee1e, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8c44, gbc.sp());
        EXPECT(0xee1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xee1e));
        // 50 0252
        gbc.setState(0x8804, 0x54b8, 0x62d0, 0xe2cf, 0x97eb, 0xbe83, 0x0, 0x1);
        gbc.writeMem(0x8804, { 0x50 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x54b8, gbc.sp());
        EXPECT(0x8805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8804));
        // 50 0253
        gbc.setState(0x460d, 0x2730, 0x3db0, 0xc994, 0xc174, 0x71c6, 0x1, 0x0);
        gbc.writeMem(0x460d, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2730, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0254
        gbc.setState(0xb9c7, 0x8762, 0x8790, 0x66aa, 0xd0e, 0x9ee0, 0x0, 0x0);
        gbc.writeMem(0xb9c7, { 0x50 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8762, gbc.sp());
        EXPECT(0xb9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb9c7));
        // 50 0255
        gbc.setState(0x9c0f, 0xbc9e, 0x8380, 0x1dc1, 0x942d, 0x89f5, 0x1, 0x1);
        gbc.writeMem(0x9c0f, { 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0x9c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9c0f));
        // 50 0257
        gbc.setState(0x597e, 0xda4a, 0xca70, 0x6cef, 0x5d65, 0xf7dd, 0x1, 0x0);
        gbc.writeMem(0x597e, { 0x50 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0x597f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0258
        gbc.setState(0x44dd, 0x4c6a, 0xde40, 0x90ec, 0x67dd, 0xf6d0, 0x1, 0x1);
        gbc.writeMem(0x44dd, { 0x50 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x44de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0259
        gbc.setState(0x75d, 0x7eb4, 0xdb00, 0x5592, 0xf972, 0xa10a, 0x0, 0x0);
        gbc.writeMem(0x75d, { 0x50 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 025A
        gbc.setState(0xe608, 0x17f4, 0xb270, 0x2ad1, 0xa13b, 0x199d, 0x0, 0x1);
        gbc.writeMem(0xe608, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x17f4, gbc.sp());
        EXPECT(0xe609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe608));
        // 50 025B
        gbc.setState(0x2c3b, 0x6737, 0x6640, 0xcc4b, 0x50e6, 0x7d42, 0x0, 0x0);
        gbc.writeMem(0x2c3b, { 0x50 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x6737, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 025C
        gbc.setState(0xcce0, 0x22bd, 0xff10, 0xd1b0, 0x9273, 0x5d68, 0x1, 0x0);
        gbc.writeMem(0xcce0, { 0x50 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x22bd, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcce0));
        // 50 025D
        gbc.setState(0x3e80, 0x6ca7, 0xba40, 0xc0c4, 0x74e6, 0x3720, 0x1, 0x1);
        gbc.writeMem(0x3e80, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6ca7, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 025F
        gbc.setState(0x7aa9, 0xacc4, 0x7a10, 0xefff, 0x7b45, 0xb9f, 0x0, 0x1);
        gbc.writeMem(0x7aa9, { 0x50 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xacc4, gbc.sp());
        EXPECT(0x7aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0260
        gbc.setState(0xeb96, 0xddf0, 0x5b0, 0x935d, 0x406c, 0xb6ec, 0x0, 0x1);
        gbc.writeMem(0xeb96, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xddf0, gbc.sp());
        EXPECT(0xeb97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeb96));
        // 50 0261
        gbc.setState(0x7415, 0x6c97, 0xdd50, 0xa31c, 0x46ad, 0xe865, 0x1, 0x1);
        gbc.writeMem(0x7415, { 0x50 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6c97, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0262
        gbc.setState(0x92df, 0x8b6b, 0x7df0, 0x63cd, 0x9e3d, 0x7c40, 0x0, 0x1);
        gbc.writeMem(0x92df, { 0x50 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0x92e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x92df));
        // 50 0263
        gbc.setState(0xa0c0, 0xf27, 0x1ec0, 0x8185, 0x1356, 0xc03b, 0x0, 0x1);
        gbc.writeMem(0xa0c0, { 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf27, gbc.sp());
        EXPECT(0xa0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0c0));
        // 50 0265
        gbc.setState(0x2e1b, 0xd9c4, 0xb4e0, 0xdf72, 0x31ba, 0x9350, 0x0, 0x1);
        gbc.writeMem(0x2e1b, { 0x50 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd9c4, gbc.sp());
        EXPECT(0x2e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0266
        gbc.setState(0x51b9, 0x62e8, 0xe0b0, 0xda13, 0x5e13, 0x9448, 0x1, 0x1);
        gbc.writeMem(0x51b9, { 0x50 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x62e8, gbc.sp());
        EXPECT(0x51ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0267
        gbc.setState(0xa822, 0x3282, 0xcda0, 0x9f2c, 0x3dc9, 0xfc56, 0x1, 0x0);
        gbc.writeMem(0xa822, { 0x50 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3282, gbc.sp());
        EXPECT(0xa823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa822));
        // 50 0268
        gbc.setState(0xab7b, 0x6770, 0x6c90, 0x2787, 0x28cf, 0x1556, 0x0, 0x1);
        gbc.writeMem(0xab7b, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6770, gbc.sp());
        EXPECT(0xab7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xab7b));
        // 50 0269
        gbc.setState(0xb32, 0x475d, 0x2ba0, 0x14bd, 0xf8a, 0xa1d, 0x1, 0x0);
        gbc.writeMem(0xb32, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x475d, gbc.sp());
        EXPECT(0xb33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 026A
        gbc.setState(0x1747, 0x5609, 0x3070, 0x1c87, 0x5e27, 0x7032, 0x0, 0x0);
        gbc.writeMem(0x1747, { 0x50 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x5609, gbc.sp());
        EXPECT(0x1748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 026B
        gbc.setState(0xd8a4, 0xd0f, 0x41b0, 0x6b2d, 0x2330, 0x604d, 0x0, 0x0);
        gbc.writeMem(0xd8a4, { 0x50 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd0f, gbc.sp());
        EXPECT(0xd8a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd8a4));
        // 50 026C
        gbc.setState(0x160d, 0x2772, 0x1b60, 0xe39, 0x4c86, 0x25ac, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0x50 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2772, gbc.sp());
        EXPECT(0x160e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 026D
        gbc.setState(0x3c4e, 0x70d0, 0x4f30, 0x9ef1, 0xb5bf, 0x3889, 0x1, 0x0);
        gbc.writeMem(0x3c4e, { 0x50 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x70d0, gbc.sp());
        EXPECT(0x3c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 026E
        gbc.setState(0x2ea9, 0x77af, 0xa240, 0x65fb, 0xf8e, 0x6c26, 0x0, 0x1);
        gbc.writeMem(0x2ea9, { 0x50 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x77af, gbc.sp());
        EXPECT(0x2eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 026F
        gbc.setState(0x1e7f, 0xecf9, 0x8380, 0xd77e, 0x766, 0xcd0c, 0x0, 0x1);
        gbc.writeMem(0x1e7f, { 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xecf9, gbc.sp());
        EXPECT(0x1e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0270
        gbc.setState(0xaa4c, 0x2405, 0xa750, 0x3e1e, 0xfe3e, 0xd9c, 0x1, 0x0);
        gbc.writeMem(0xaa4c, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2405, gbc.sp());
        EXPECT(0xaa4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaa4c));
        // 50 0271
        gbc.setState(0x51c6, 0x7f6b, 0x3bd0, 0xf96f, 0x2230, 0x401a, 0x1, 0x0);
        gbc.writeMem(0x51c6, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7f6b, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0272
        gbc.setState(0x962f, 0x76e7, 0xeed0, 0xc08c, 0xec09, 0xf9a8, 0x0, 0x1);
        gbc.writeMem(0x962f, { 0x50 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x76e7, gbc.sp());
        EXPECT(0x9630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x962f));
        // 50 0273
        gbc.setState(0x300e, 0x373d, 0xf810, 0xed2c, 0xa9c3, 0x2a2d, 0x1, 0x0);
        gbc.writeMem(0x300e, { 0x50 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x373d, gbc.sp());
        EXPECT(0x300f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0274
        gbc.setState(0x8fd6, 0xfdc6, 0x7500, 0x8d43, 0x290f, 0x8cd2, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0x50 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfdc6, gbc.sp());
        EXPECT(0x8fd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8fd6));
        // 50 0275
        gbc.setState(0xbacd, 0x30e9, 0x1f0, 0x5c86, 0x22c1, 0xba66, 0x0, 0x0);
        gbc.writeMem(0xbacd, { 0x50 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x30e9, gbc.sp());
        EXPECT(0xbace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbacd));
        // 50 0276
        gbc.setState(0x1ed4, 0x84c0, 0x5360, 0x9320, 0x9224, 0x3e0d, 0x1, 0x1);
        gbc.writeMem(0x1ed4, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x84c0, gbc.sp());
        EXPECT(0x1ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0277
        gbc.setState(0x23ff, 0xe1f1, 0x1cd0, 0xf29c, 0x6503, 0xacd3, 0x1, 0x1);
        gbc.writeMem(0x23ff, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe1f1, gbc.sp());
        EXPECT(0x2400, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0278
        gbc.setState(0xea5c, 0xbd2a, 0x15d0, 0xfa06, 0x50b4, 0xa187, 0x1, 0x1);
        gbc.writeMem(0xea5c, { 0x50 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xbd2a, gbc.sp());
        EXPECT(0xea5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xea5c));
        // 50 0279
        gbc.setState(0x8d38, 0x5788, 0x34e0, 0x254, 0x224, 0xe325, 0x1, 0x0);
        gbc.writeMem(0x8d38, { 0x50 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5788, gbc.sp());
        EXPECT(0x8d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8d38));
        // 50 027A
        gbc.setState(0x5b06, 0xe26a, 0xfec0, 0xb75f, 0x869d, 0xabd9, 0x1, 0x1);
        gbc.writeMem(0x5b06, { 0x50 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe26a, gbc.sp());
        EXPECT(0x5b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 027C
        gbc.setState(0x1e8, 0xa730, 0x7f00, 0xdcf4, 0x9f8d, 0x8e42, 0x1, 0x0);
        gbc.writeMem(0x1e8, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa730, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 027D
        gbc.setState(0xbb22, 0x8ec9, 0x68d0, 0xbf1f, 0x4cef, 0x5dfa, 0x1, 0x1);
        gbc.writeMem(0xbb22, { 0x50 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8ec9, gbc.sp());
        EXPECT(0xbb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbb22));
        // 50 027E
        gbc.setState(0x7bc4, 0x73e, 0xba20, 0xb8e7, 0xcfe2, 0xbbe3, 0x0, 0x1);
        gbc.writeMem(0x7bc4, { 0x50 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x73e, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 027F
        gbc.setState(0xf63, 0xfae8, 0x6d20, 0x641e, 0x8667, 0x2053, 0x1, 0x1);
        gbc.writeMem(0xf63, { 0x50 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfae8, gbc.sp());
        EXPECT(0xf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0280
        gbc.setState(0x9fd7, 0x9fd7, 0x59e0, 0x128a, 0xff77, 0x7c2a, 0x1, 0x0);
        gbc.writeMem(0x9fd7, { 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9fd7, gbc.sp());
        EXPECT(0x9fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9fd7));
        // 50 0281
        gbc.setState(0x6376, 0x1167, 0x8480, 0xb344, 0x63e3, 0xddda, 0x1, 0x0);
        gbc.writeMem(0x6376, { 0x50 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1167, gbc.sp());
        EXPECT(0x6377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0282
        gbc.setState(0x28f8, 0x877, 0x4150, 0x39db, 0x37eb, 0xd5d1, 0x0, 0x1);
        gbc.writeMem(0x28f8, { 0x50 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x877, gbc.sp());
        EXPECT(0x28f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0283
        gbc.setState(0xa439, 0x99e1, 0x58a0, 0x3a6b, 0x5e83, 0x9480, 0x0, 0x1);
        gbc.writeMem(0xa439, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x99e1, gbc.sp());
        EXPECT(0xa43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa439));
        // 50 0284
        gbc.setState(0x3c3b, 0x6ecb, 0x6b30, 0xc094, 0x3ae6, 0x797, 0x1, 0x1);
        gbc.writeMem(0x3c3b, { 0x50 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6ecb, gbc.sp());
        EXPECT(0x3c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0285
        gbc.setState(0x9f54, 0xeff7, 0x55f0, 0x36ae, 0x916d, 0x155f, 0x1, 0x0);
        gbc.writeMem(0x9f54, { 0x50 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeff7, gbc.sp());
        EXPECT(0x9f55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9f54));
        // 50 0286
        gbc.setState(0x2502, 0xadf3, 0xe8c0, 0xca4e, 0x9892, 0x59b9, 0x0, 0x0);
        gbc.writeMem(0x2502, { 0x50 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x2503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0287
        gbc.setState(0xc0ec, 0x6dc8, 0xadb0, 0xd832, 0x6a3e, 0x1b61, 0x1, 0x1);
        gbc.writeMem(0xc0ec, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6dc8, gbc.sp());
        EXPECT(0xc0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc0ec));
        // 50 0288
        gbc.setState(0x7e30, 0x1458, 0x2420, 0x90c6, 0xaf00, 0xeecf, 0x0, 0x0);
        gbc.writeMem(0x7e30, { 0x50 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1458, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0289
        gbc.setState(0x545, 0x7992, 0x70, 0x38ca, 0x7ae7, 0xa284, 0x0, 0x1);
        gbc.writeMem(0x545, { 0x50 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7992, gbc.sp());
        EXPECT(0x546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 028A
        gbc.setState(0x519, 0x5492, 0x8980, 0xf6f9, 0xf289, 0x2bae, 0x1, 0x1);
        gbc.writeMem(0x519, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5492, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 028B
        gbc.setState(0x6e00, 0x3115, 0xa7d0, 0x8fe7, 0xf653, 0xf8dc, 0x0, 0x0);
        gbc.writeMem(0x6e00, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3115, gbc.sp());
        EXPECT(0x6e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 028C
        gbc.setState(0x2f75, 0x3a8e, 0x2ae0, 0xd162, 0x5fe2, 0x47f5, 0x1, 0x0);
        gbc.writeMem(0x2f75, { 0x50 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3a8e, gbc.sp());
        EXPECT(0x2f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 028D
        gbc.setState(0x316e, 0x38d7, 0x4ba0, 0x663a, 0x77a2, 0x658f, 0x1, 0x0);
        gbc.writeMem(0x316e, { 0x50 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x38d7, gbc.sp());
        EXPECT(0x316f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 028E
        gbc.setState(0x8523, 0x4bb, 0xe130, 0x1666, 0x89ba, 0x5e10, 0x1, 0x0);
        gbc.writeMem(0x8523, { 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8523));
        // 50 028F
        gbc.setState(0x4536, 0xaaf1, 0xa70, 0x24a1, 0xdfda, 0x6daf, 0x0, 0x0);
        gbc.writeMem(0x4536, { 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xaaf1, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0290
        gbc.setState(0x170b, 0x971c, 0x9dc0, 0xd55d, 0x4d20, 0xf1e9, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0x170c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0291
        gbc.setState(0xf0c, 0x59b4, 0xa590, 0x3741, 0xbf0d, 0x973d, 0x1, 0x0);
        gbc.writeMem(0xf0c, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x59b4, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0292
        gbc.setState(0x1a5d, 0x413e, 0xd8c0, 0xb83c, 0xc3cd, 0xdf6, 0x1, 0x1);
        gbc.writeMem(0x1a5d, { 0x50 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0x1a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0293
        gbc.setState(0xa448, 0x9d00, 0x58a0, 0xc44f, 0xc02f, 0x945b, 0x1, 0x1);
        gbc.writeMem(0xa448, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9d00, gbc.sp());
        EXPECT(0xa449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa448));
        // 50 0294
        gbc.setState(0x65ae, 0xff01, 0x5340, 0x2fea, 0xd219, 0xa537, 0x1, 0x0);
        gbc.writeMem(0x65ae, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xff01, gbc.sp());
        EXPECT(0x65af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0295
        gbc.setState(0xa673, 0xcc48, 0x4e60, 0x452f, 0xd819, 0xb4ad, 0x1, 0x0);
        gbc.writeMem(0xa673, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xcc48, gbc.sp());
        EXPECT(0xa674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa673));
        // 50 0296
        gbc.setState(0x5c05, 0xf16, 0x9340, 0x61ed, 0x2a77, 0x88c0, 0x0, 0x1);
        gbc.writeMem(0x5c05, { 0x50 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf16, gbc.sp());
        EXPECT(0x5c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0297
        gbc.setState(0x6b96, 0x3bda, 0x5840, 0x7f57, 0x45, 0x99e2, 0x1, 0x0);
        gbc.writeMem(0x6b96, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3bda, gbc.sp());
        EXPECT(0x6b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0298
        gbc.setState(0x717, 0x1c38, 0x7ed0, 0x4cc4, 0xa2dd, 0x5964, 0x1, 0x0);
        gbc.writeMem(0x717, { 0x50 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1c38, gbc.sp());
        EXPECT(0x718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0299
        gbc.setState(0x5bc7, 0xeaa3, 0x2dc0, 0x541f, 0xd70f, 0xe2fc, 0x0, 0x0);
        gbc.writeMem(0x5bc7, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0x5bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 029A
        gbc.setState(0xbe8d, 0x1f87, 0xf040, 0x5099, 0xe9f8, 0x16c4, 0x1, 0x1);
        gbc.writeMem(0xbe8d, { 0x50 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0xbe8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbe8d));
        // 50 029B
        gbc.setState(0x81ab, 0x6bca, 0x830, 0x1b2d, 0xca17, 0x9b4c, 0x0, 0x0);
        gbc.writeMem(0x81ab, { 0x50 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0x81ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x81ab));
        // 50 029C
        gbc.setState(0x3e07, 0xe9de, 0x8070, 0xba47, 0xfdea, 0xde07, 0x0, 0x0);
        gbc.writeMem(0x3e07, { 0x50 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe9de, gbc.sp());
        EXPECT(0x3e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 029D
        gbc.setState(0x9b07, 0x44e9, 0x9590, 0x785b, 0xa0e7, 0xf09e, 0x0, 0x0);
        gbc.writeMem(0x9b07, { 0x50 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x44e9, gbc.sp());
        EXPECT(0x9b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9b07));
        // 50 029E
        gbc.setState(0xbc62, 0x4c1e, 0xc170, 0x3d8e, 0xd83, 0x5aa8, 0x0, 0x1);
        gbc.writeMem(0xbc62, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0xbc63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbc62));
        // 50 029F
        gbc.setState(0x599a, 0x4e94, 0x6f0, 0xdfa6, 0x4b59, 0x5244, 0x0, 0x1);
        gbc.writeMem(0x599a, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4e94, gbc.sp());
        EXPECT(0x599b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02A0
        gbc.setState(0xe556, 0x9e6, 0x23a0, 0x3b41, 0x47f0, 0x2c5, 0x0, 0x0);
        gbc.writeMem(0xe556, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0xe557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe556));
        // 50 02A1
        gbc.setState(0xac08, 0x4751, 0x58d0, 0x154, 0x8a72, 0xe7d0, 0x0, 0x1);
        gbc.writeMem(0xac08, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4751, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xac08));
        // 50 02A3
        gbc.setState(0xd1d0, 0x2484, 0xcf30, 0x4ff, 0x589e, 0xf949, 0x1, 0x1);
        gbc.writeMem(0xd1d0, { 0x50 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2484, gbc.sp());
        EXPECT(0xd1d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd1d0));
        // 50 02A4
        gbc.setState(0x7e0, 0x716f, 0x6700, 0xa37d, 0xe7c9, 0x9d34, 0x1, 0x0);
        gbc.writeMem(0x7e0, { 0x50 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x716f, gbc.sp());
        EXPECT(0x7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02A5
        gbc.setState(0x7688, 0x30db, 0xa750, 0xb14c, 0x539a, 0x7813, 0x1, 0x0);
        gbc.writeMem(0x7688, { 0x50 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x30db, gbc.sp());
        EXPECT(0x7689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02A6
        gbc.setState(0x2eea, 0xc370, 0xc440, 0x26db, 0x5ab9, 0xf933, 0x0, 0x0);
        gbc.writeMem(0x2eea, { 0x50 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02A7
        gbc.setState(0xd7df, 0xad00, 0x13e0, 0xa341, 0xe093, 0x5e2d, 0x0, 0x1);
        gbc.writeMem(0xd7df, { 0x50 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xad00, gbc.sp());
        EXPECT(0xd7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd7df));
        // 50 02A8
        gbc.setState(0x3da5, 0x53d4, 0x1560, 0x6cf9, 0x8d17, 0xc9d9, 0x0, 0x0);
        gbc.writeMem(0x3da5, { 0x50 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x53d4, gbc.sp());
        EXPECT(0x3da6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02A9
        gbc.setState(0xcc93, 0x776c, 0xb640, 0xe63a, 0x75ef, 0x27f5, 0x1, 0x1);
        gbc.writeMem(0xcc93, { 0x50 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x776c, gbc.sp());
        EXPECT(0xcc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcc93));
        // 50 02AA
        gbc.setState(0x64b, 0x1809, 0x9800, 0xa9c, 0x70c7, 0x15b4, 0x1, 0x0);
        gbc.writeMem(0x64b, { 0x50 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02AB
        gbc.setState(0x8ee2, 0x8fbd, 0xa8c0, 0x4eac, 0x814b, 0x995b, 0x1, 0x1);
        gbc.writeMem(0x8ee2, { 0x50 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8fbd, gbc.sp());
        EXPECT(0x8ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8ee2));
        // 50 02AC
        gbc.setState(0xb770, 0x2d1b, 0x420, 0x9add, 0x30, 0x4af7, 0x0, 0x1);
        gbc.writeMem(0xb770, { 0x50 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2d1b, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb770));
        // 50 02AD
        gbc.setState(0xa3c4, 0x97ab, 0x2a20, 0xce55, 0x7aa6, 0xef2e, 0x1, 0x0);
        gbc.writeMem(0xa3c4, { 0x50 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x97ab, gbc.sp());
        EXPECT(0xa3c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa3c4));
        // 50 02AE
        gbc.setState(0xccb, 0x972c, 0x2f90, 0x27aa, 0xa90d, 0xa7f4, 0x0, 0x1);
        gbc.writeMem(0xccb, { 0x50 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02AF
        gbc.setState(0x9900, 0x9f8d, 0xfd60, 0xf0c0, 0x608, 0xbec4, 0x1, 0x1);
        gbc.writeMem(0x9900, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9f8d, gbc.sp());
        EXPECT(0x9901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9900));
        // 50 02B0
        gbc.setState(0x5c43, 0x7e0c, 0x8360, 0x64d, 0x7b43, 0xe4b, 0x1, 0x0);
        gbc.writeMem(0x5c43, { 0x50 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e0c, gbc.sp());
        EXPECT(0x5c44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02B1
        gbc.setState(0xa0a0, 0x6e69, 0xa2f0, 0xe5ae, 0x58fc, 0x98a3, 0x1, 0x0);
        gbc.writeMem(0xa0a0, { 0x50 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6e69, gbc.sp());
        EXPECT(0xa0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0a0));
        // 50 02B2
        gbc.setState(0x34a4, 0x1852, 0x690, 0xed8a, 0x3fe4, 0xf802, 0x0, 0x1);
        gbc.writeMem(0x34a4, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1852, gbc.sp());
        EXPECT(0x34a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02B4
        gbc.setState(0xc0aa, 0xb683, 0x3fd0, 0x2e8a, 0x15f9, 0x513c, 0x0, 0x0);
        gbc.writeMem(0xc0aa, { 0x50 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb683, gbc.sp());
        EXPECT(0xc0ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc0aa));
        // 50 02B7
        gbc.setState(0x40cd, 0x4d93, 0xfa80, 0x7fac, 0xd3f1, 0x96fb, 0x0, 0x0);
        gbc.writeMem(0x40cd, { 0x50 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0x40ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02B8
        gbc.setState(0xb12c, 0xbe64, 0xcfa0, 0x27a2, 0x50e3, 0xa904, 0x0, 0x0);
        gbc.writeMem(0xb12c, { 0x50 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbe64, gbc.sp());
        EXPECT(0xb12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb12c));
        // 50 02B9
        gbc.setState(0x106, 0xb7cf, 0x1830, 0x98d2, 0xccad, 0x7c80, 0x0, 0x0);
        gbc.writeMem(0x106, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb7cf, gbc.sp());
        EXPECT(0x107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02BA
        gbc.setState(0xd3cd, 0x6dfd, 0xc0c0, 0x3a35, 0xcdae, 0x2ed9, 0x1, 0x0);
        gbc.writeMem(0xd3cd, { 0x50 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6dfd, gbc.sp());
        EXPECT(0xd3ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd3cd));
        // 50 02BB
        gbc.setState(0xc0cb, 0x41dd, 0xc6b0, 0xa82, 0x6300, 0x9f8e, 0x0, 0x0);
        gbc.writeMem(0xc0cb, { 0x50 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x41dd, gbc.sp());
        EXPECT(0xc0cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc0cb));
        // 50 02BC
        gbc.setState(0xac82, 0x9680, 0xc580, 0x2cad, 0x2368, 0xae7, 0x0, 0x0);
        gbc.writeMem(0xac82, { 0x50 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0xac83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xac82));
        // 50 02BD
        gbc.setState(0xeec9, 0x831f, 0xe110, 0xaf7e, 0x2938, 0x2ae, 0x1, 0x1);
        gbc.writeMem(0xeec9, { 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x831f, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeec9));
        // 50 02BE
        gbc.setState(0x68eb, 0x51d3, 0xb9c0, 0x3ce2, 0xa3ac, 0x9ceb, 0x1, 0x1);
        gbc.writeMem(0x68eb, { 0x50 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x51d3, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02BF
        gbc.setState(0x6deb, 0x754, 0xe410, 0x16d0, 0x4dfa, 0x5e45, 0x0, 0x1);
        gbc.writeMem(0x6deb, { 0x50 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x754, gbc.sp());
        EXPECT(0x6dec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02C0
        gbc.setState(0x1bbf, 0xdcca, 0x5380, 0x1269, 0xbd72, 0x5c1f, 0x0, 0x0);
        gbc.writeMem(0x1bbf, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdcca, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02C1
        gbc.setState(0x91e2, 0x550b, 0xc350, 0x9dca, 0x1018, 0x556f, 0x0, 0x0);
        gbc.writeMem(0x91e2, { 0x50 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x550b, gbc.sp());
        EXPECT(0x91e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x91e2));
        // 50 02C2
        gbc.setState(0xc940, 0x63ef, 0x870, 0x8f63, 0x3c23, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0xc940, { 0x50 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x63ef, gbc.sp());
        EXPECT(0xc941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc940));
        // 50 02C3
        gbc.setState(0xcadf, 0xe1dd, 0xb80, 0x1fda, 0x776a, 0x81cf, 0x1, 0x0);
        gbc.writeMem(0xcadf, { 0x50 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe1dd, gbc.sp());
        EXPECT(0xcae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcadf));
        // 50 02C4
        gbc.setState(0x86fe, 0x927e, 0x1480, 0x97a8, 0xda37, 0xa6e1, 0x1, 0x1);
        gbc.writeMem(0x86fe, { 0x50 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0x86ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x86fe));
        // 50 02C5
        gbc.setState(0x336c, 0x2e27, 0x5ba0, 0x70d8, 0x745b, 0xf10, 0x1, 0x0);
        gbc.writeMem(0x336c, { 0x50 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2e27, gbc.sp());
        EXPECT(0x336d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02C6
        gbc.setState(0xe2a3, 0xeddd, 0x4af0, 0xb38f, 0xf9af, 0xd2e7, 0x0, 0x1);
        gbc.writeMem(0xe2a3, { 0x50 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xeddd, gbc.sp());
        EXPECT(0xe2a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe2a3));
        // 50 02C7
        gbc.setState(0x154f, 0x97e8, 0xe620, 0x1110, 0x4fc, 0x80ce, 0x0, 0x0);
        gbc.writeMem(0x154f, { 0x50 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x97e8, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02C8
        gbc.setState(0xdbce, 0x9638, 0xe8b0, 0xe15b, 0x1abf, 0x84ab, 0x1, 0x0);
        gbc.writeMem(0xdbce, { 0x50 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9638, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdbce));
        // 50 02C9
        gbc.setState(0x8a90, 0xc5cd, 0x54c0, 0x7fb3, 0xc0af, 0xb66c, 0x1, 0x1);
        gbc.writeMem(0x8a90, { 0x50 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc5cd, gbc.sp());
        EXPECT(0x8a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8a90));
        // 50 02CA
        gbc.setState(0xd2e6, 0xc750, 0x9d80, 0x63e7, 0x83fb, 0x1706, 0x0, 0x0);
        gbc.writeMem(0xd2e6, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0xd2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd2e6));
        // 50 02CB
        gbc.setState(0x7552, 0xed5b, 0x9ec0, 0x1a55, 0xeb17, 0x2014, 0x0, 0x0);
        gbc.writeMem(0x7552, { 0x50 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xed5b, gbc.sp());
        EXPECT(0x7553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02CC
        gbc.setState(0xd0c8, 0xbd53, 0xd240, 0x763e, 0x90a7, 0x66c8, 0x1, 0x1);
        gbc.writeMem(0xd0c8, { 0x50 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbd53, gbc.sp());
        EXPECT(0xd0c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd0c8));
        // 50 02CD
        gbc.setState(0x8e7c, 0xd629, 0xd190, 0xaa05, 0x1e0, 0xc95e, 0x0, 0x0);
        gbc.writeMem(0x8e7c, { 0x50 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd629, gbc.sp());
        EXPECT(0x8e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8e7c));
        // 50 02CE
        gbc.setState(0x2481, 0x2169, 0xa590, 0x6eef, 0xaf36, 0x14df, 0x1, 0x0);
        gbc.writeMem(0x2481, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2169, gbc.sp());
        EXPECT(0x2482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02CF
        gbc.setState(0xc0, 0x7cdb, 0x66e0, 0x92c0, 0x4c0f, 0xa487, 0x1, 0x0);
        gbc.writeMem(0xc0, { 0x50 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7cdb, gbc.sp());
        EXPECT(0xc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02D0
        gbc.setState(0xe884, 0xc6a, 0xc390, 0x2555, 0x4e47, 0xfc1b, 0x1, 0x1);
        gbc.writeMem(0xe884, { 0x50 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc6a, gbc.sp());
        EXPECT(0xe885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe884));
        // 50 02D1
        gbc.setState(0x48d9, 0xbf8, 0x17a0, 0xc77f, 0x48ba, 0x550f, 0x0, 0x0);
        gbc.writeMem(0x48d9, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02D2
        gbc.setState(0xaf0e, 0xbc1b, 0x1e30, 0x8714, 0x9dd5, 0x2d61, 0x1, 0x1);
        gbc.writeMem(0xaf0e, { 0x50 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbc1b, gbc.sp());
        EXPECT(0xaf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaf0e));
        // 50 02D3
        gbc.setState(0xd45f, 0x8f9, 0x4080, 0xc9ec, 0x6300, 0x9b98, 0x1, 0x1);
        gbc.writeMem(0xd45f, { 0x50 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8f9, gbc.sp());
        EXPECT(0xd460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd45f));
        // 50 02D4
        gbc.setState(0xf4d, 0x6a50, 0x1ff0, 0x5d4c, 0x239e, 0xa1a0, 0x0, 0x0);
        gbc.writeMem(0xf4d, { 0x50 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a50, gbc.sp());
        EXPECT(0xf4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02D5
        gbc.setState(0x4259, 0x34a3, 0xa650, 0xe586, 0x19dd, 0xbe58, 0x1, 0x0);
        gbc.writeMem(0x4259, { 0x50 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x34a3, gbc.sp());
        EXPECT(0x425a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02D6
        gbc.setState(0x992d, 0x5d8a, 0xd3c0, 0x3fe, 0x6cef, 0x3d72, 0x1, 0x1);
        gbc.writeMem(0x992d, { 0x50 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5d8a, gbc.sp());
        EXPECT(0x992e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x992d));
        // 50 02D8
        gbc.setState(0x649e, 0xdeb6, 0xab0, 0xd77d, 0xa688, 0x77, 0x0, 0x1);
        gbc.writeMem(0x649e, { 0x50 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0x649f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02D9
        gbc.setState(0xc005, 0x32b9, 0x93a0, 0xd08, 0x48c3, 0xfc50, 0x0, 0x0);
        gbc.writeMem(0xc005, { 0x50 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x32b9, gbc.sp());
        EXPECT(0xc006, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc005));
        // 50 02DA
        gbc.setState(0x2307, 0xddb7, 0xd720, 0x518d, 0xe760, 0xbd92, 0x0, 0x0);
        gbc.writeMem(0x2307, { 0x50 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xddb7, gbc.sp());
        EXPECT(0x2308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02DB
        gbc.setState(0xd6b7, 0x370a, 0x5690, 0x2d12, 0x41e1, 0xed29, 0x0, 0x0);
        gbc.writeMem(0xd6b7, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x370a, gbc.sp());
        EXPECT(0xd6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd6b7));
        // 50 02DC
        gbc.setState(0x6930, 0x497c, 0xc2d0, 0x74cf, 0xa89a, 0xf210, 0x1, 0x0);
        gbc.writeMem(0x6930, { 0x50 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x497c, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02DD
        gbc.setState(0x7e92, 0xa34d, 0x1440, 0xc522, 0x3125, 0xa23d, 0x1, 0x0);
        gbc.writeMem(0x7e92, { 0x50 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa34d, gbc.sp());
        EXPECT(0x7e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02DE
        gbc.setState(0xb876, 0x5ab7, 0x2e40, 0x7009, 0x6e98, 0x7353, 0x0, 0x0);
        gbc.writeMem(0xb876, { 0x50 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5ab7, gbc.sp());
        EXPECT(0xb877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb876));
        // 50 02DF
        gbc.setState(0xd931, 0x2351, 0xb2e0, 0x6ceb, 0x24a4, 0x3bb0, 0x1, 0x0);
        gbc.writeMem(0xd931, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0xd932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd931));
        // 50 02E0
        gbc.setState(0x229e, 0x63da, 0x1c50, 0xd1c7, 0x9fcd, 0x733e, 0x0, 0x1);
        gbc.writeMem(0x229e, { 0x50 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x63da, gbc.sp());
        EXPECT(0x229f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02E1
        gbc.setState(0xedce, 0xfa4d, 0x7cf0, 0x6520, 0xa27e, 0x63a5, 0x0, 0x0);
        gbc.writeMem(0xedce, { 0x50 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xfa4d, gbc.sp());
        EXPECT(0xedcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xedce));
        // 50 02E2
        gbc.setState(0xcb55, 0xec6a, 0xfe90, 0x6c38, 0xe162, 0xeb6c, 0x1, 0x0);
        gbc.writeMem(0xcb55, { 0x50 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0xcb56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcb55));
        // 50 02E3
        gbc.setState(0x8b09, 0xc1cc, 0xef30, 0x8d9e, 0x25d4, 0xce29, 0x0, 0x0);
        gbc.writeMem(0x8b09, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc1cc, gbc.sp());
        EXPECT(0x8b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8b09));
        // 50 02E4
        gbc.setState(0xca00, 0x7d9e, 0x6050, 0xda6a, 0x9f37, 0xf760, 0x1, 0x1);
        gbc.writeMem(0xca00, { 0x50 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7d9e, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xca00));
        // 50 02E5
        gbc.setState(0x8dd, 0x4e28, 0x5470, 0xfeb7, 0xc97c, 0xfa2f, 0x0, 0x1);
        gbc.writeMem(0x8dd, { 0x50 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4e28, gbc.sp());
        EXPECT(0x8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02E6
        gbc.setState(0x87a6, 0xbfc9, 0x9410, 0x911a, 0x157c, 0xbb69, 0x0, 0x1);
        gbc.writeMem(0x87a6, { 0x50 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbfc9, gbc.sp());
        EXPECT(0x87a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x87a6));
        // 50 02E7
        gbc.setState(0x25ed, 0xa54a, 0xb1a0, 0x3596, 0x7b28, 0x5d63, 0x0, 0x1);
        gbc.writeMem(0x25ed, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa54a, gbc.sp());
        EXPECT(0x25ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02E8
        gbc.setState(0xd619, 0x70b7, 0xbee0, 0x3514, 0x6131, 0xb33c, 0x1, 0x0);
        gbc.writeMem(0xd619, { 0x50 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x70b7, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd619));
        // 50 02E9
        gbc.setState(0x7df2, 0xcba7, 0xd8e0, 0x2dc1, 0x1ebe, 0x7cd2, 0x0, 0x1);
        gbc.writeMem(0x7df2, { 0x50 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcba7, gbc.sp());
        EXPECT(0x7df3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02EA
        gbc.setState(0x65cd, 0x1624, 0x6a90, 0xcd4e, 0xcb79, 0x78df, 0x1, 0x0);
        gbc.writeMem(0x65cd, { 0x50 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1624, gbc.sp());
        EXPECT(0x65ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02EB
        gbc.setState(0x6511, 0x9aed, 0xc110, 0x241, 0xaa29, 0xb295, 0x0, 0x1);
        gbc.writeMem(0x6511, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9aed, gbc.sp());
        EXPECT(0x6512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02EC
        gbc.setState(0x4e06, 0x8867, 0x8510, 0x31c, 0xce70, 0x6701, 0x1, 0x1);
        gbc.writeMem(0x4e06, { 0x50 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8867, gbc.sp());
        EXPECT(0x4e07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02ED
        gbc.setState(0x4218, 0x29c2, 0xa900, 0x9e7d, 0x9096, 0x79a0, 0x0, 0x1);
        gbc.writeMem(0x4218, { 0x50 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x29c2, gbc.sp());
        EXPECT(0x4219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02EE
        gbc.setState(0x3b12, 0xdb58, 0x8480, 0x37ba, 0x1c19, 0x8631, 0x1, 0x0);
        gbc.writeMem(0x3b12, { 0x50 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xdb58, gbc.sp());
        EXPECT(0x3b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02EF
        gbc.setState(0x5364, 0x7022, 0x4a40, 0x4e89, 0xd60d, 0x1def, 0x0, 0x1);
        gbc.writeMem(0x5364, { 0x50 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x7022, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02F0
        gbc.setState(0x7f0c, 0xaa51, 0xd7b0, 0xa24c, 0xd044, 0xcefe, 0x0, 0x0);
        gbc.writeMem(0x7f0c, { 0x50 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0x7f0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02F1
        gbc.setState(0xcdb7, 0x2329, 0x8e70, 0xf78f, 0x8efb, 0xf59c, 0x1, 0x0);
        gbc.writeMem(0xcdb7, { 0x50 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2329, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcdb7));
        // 50 02F2
        gbc.setState(0x9cf7, 0xd731, 0x46b0, 0x301d, 0x4369, 0xedff, 0x1, 0x1);
        gbc.writeMem(0x9cf7, { 0x50 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd731, gbc.sp());
        EXPECT(0x9cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9cf7));
        // 50 02F3
        gbc.setState(0xe851, 0xbfa5, 0x7e0, 0x792e, 0x437e, 0xac9a, 0x0, 0x1);
        gbc.writeMem(0xe851, { 0x50 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe851));
        // 50 02F4
        gbc.setState(0xc1b3, 0x1fc5, 0xb240, 0x985b, 0x573, 0x2634, 0x0, 0x0);
        gbc.writeMem(0xc1b3, { 0x50 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc1b3));
        // 50 02F5
        gbc.setState(0x29ec, 0xde3a, 0xed0, 0xf43a, 0xcce4, 0xd8b7, 0x1, 0x1);
        gbc.writeMem(0x29ec, { 0x50 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xde3a, gbc.sp());
        EXPECT(0x29ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02F6
        gbc.setState(0x7bdc, 0xc201, 0xbc00, 0x45c6, 0x78cc, 0xe7dd, 0x1, 0x1);
        gbc.writeMem(0x7bdc, { 0x50 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc201, gbc.sp());
        EXPECT(0x7bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02F7
        gbc.setState(0xce9a, 0xd56e, 0x4800, 0xf212, 0xba0f, 0xf442, 0x1, 0x1);
        gbc.writeMem(0xce9a, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd56e, gbc.sp());
        EXPECT(0xce9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xce9a));
        // 50 02F8
        gbc.setState(0xe93d, 0x1f7d, 0xc560, 0x190e, 0x34e4, 0xafff, 0x1, 0x0);
        gbc.writeMem(0xe93d, { 0x50 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1f7d, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe93d));
        // 50 02F9
        gbc.setState(0xdbb3, 0x6ce4, 0x6df0, 0x697d, 0x19a5, 0xf7d5, 0x1, 0x0);
        gbc.writeMem(0xdbb3, { 0x50 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6ce4, gbc.sp());
        EXPECT(0xdbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdbb3));
        // 50 02FA
        gbc.setState(0xec22, 0x4eb, 0x5620, 0xf40, 0x1831, 0x521a, 0x0, 0x1);
        gbc.writeMem(0xec22, { 0x50 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4eb, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xec22));
        // 50 02FB
        gbc.setState(0xc6e, 0x7141, 0x4740, 0x1951, 0x43ee, 0xdbde, 0x1, 0x1);
        gbc.writeMem(0xc6e, { 0x50 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0xc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02FC
        gbc.setState(0x4ff, 0x6f62, 0x7040, 0xf5b9, 0xf2f5, 0x7a03, 0x1, 0x1);
        gbc.writeMem(0x4ff, { 0x50 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6f62, gbc.sp());
        EXPECT(0x500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 02FD
        gbc.setState(0xd561, 0x2c73, 0xe2e0, 0xb57a, 0x78ee, 0xd9a7, 0x1, 0x1);
        gbc.writeMem(0xd561, { 0x50 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2c73, gbc.sp());
        EXPECT(0xd562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd561));
        // 50 02FE
        gbc.setState(0x4382, 0x57ec, 0x550, 0xabfd, 0xf071, 0x419e, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57ec, gbc.sp());
        EXPECT(0x4383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 02FF
        gbc.setState(0x515e, 0xb005, 0x59e0, 0x4196, 0x7a86, 0x4ca9, 0x0, 0x0);
        gbc.writeMem(0x515e, { 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb005, gbc.sp());
        EXPECT(0x515f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0301
        gbc.setState(0x817a, 0xed36, 0x3bf0, 0x6e11, 0xe9c1, 0x438e, 0x0, 0x1);
        gbc.writeMem(0x817a, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xed36, gbc.sp());
        EXPECT(0x817b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x817a));
        // 50 0302
        gbc.setState(0xd3a6, 0xd008, 0x1020, 0x6bd1, 0xe260, 0xba24, 0x1, 0x0);
        gbc.writeMem(0xd3a6, { 0x50 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd008, gbc.sp());
        EXPECT(0xd3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd3a6));
        // 50 0303
        gbc.setState(0x55f3, 0x5ec, 0x7560, 0x254d, 0xf961, 0x69fb, 0x0, 0x1);
        gbc.writeMem(0x55f3, { 0x50 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0x55f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0304
        gbc.setState(0xd17d, 0x30f2, 0x64f0, 0xa372, 0xe918, 0x6a61, 0x1, 0x1);
        gbc.writeMem(0xd17d, { 0x50 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x30f2, gbc.sp());
        EXPECT(0xd17e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd17d));
        // 50 0305
        gbc.setState(0xa49d, 0xec6c, 0x3ba0, 0x6cfa, 0x1d8f, 0xa670, 0x1, 0x1);
        gbc.writeMem(0xa49d, { 0x50 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xec6c, gbc.sp());
        EXPECT(0xa49e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa49d));
        // 50 0306
        gbc.setState(0x2c5b, 0x5c74, 0xfdd0, 0x1577, 0x7d4b, 0x8260, 0x1, 0x1);
        gbc.writeMem(0x2c5b, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5c74, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0307
        gbc.setState(0xa0de, 0x5449, 0xb510, 0x90d8, 0x5c28, 0x3aa8, 0x1, 0x1);
        gbc.writeMem(0xa0de, { 0x50 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5449, gbc.sp());
        EXPECT(0xa0df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa0de));
        // 50 0308
        gbc.setState(0x1958, 0x47b7, 0xa4b0, 0xec82, 0xa2bf, 0x5601, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0x50 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x47b7, gbc.sp());
        EXPECT(0x1959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0309
        gbc.setState(0x1dc7, 0x86eb, 0xf850, 0x8e68, 0xede4, 0xfb2f, 0x1, 0x1);
        gbc.writeMem(0x1dc7, { 0x50 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x86eb, gbc.sp());
        EXPECT(0x1dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 030A
        gbc.setState(0xb730, 0xc41c, 0x6e60, 0xdfa7, 0x8fb5, 0x80ed, 0x0, 0x0);
        gbc.writeMem(0xb730, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc41c, gbc.sp());
        EXPECT(0xb731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb730));
        // 50 030B
        gbc.setState(0x4737, 0x1c6d, 0x5440, 0x3cbf, 0x4d64, 0xc9e1, 0x1, 0x1);
        gbc.writeMem(0x4737, { 0x50 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1c6d, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 030C
        gbc.setState(0xa715, 0x4610, 0x2330, 0xd458, 0xc360, 0x6d0f, 0x0, 0x0);
        gbc.writeMem(0xa715, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4610, gbc.sp());
        EXPECT(0xa716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa715));
        // 50 030D
        gbc.setState(0xd266, 0x7141, 0x8bc0, 0x1660, 0x9b83, 0xfe61, 0x1, 0x0);
        gbc.writeMem(0xd266, { 0x50 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0xd267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd266));
        // 50 030E
        gbc.setState(0xc573, 0x2c6f, 0x2b30, 0x1545, 0xdbee, 0xf2bd, 0x1, 0x1);
        gbc.writeMem(0xc573, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0xc574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc573));
        // 50 0310
        gbc.setState(0x5f1c, 0x42e6, 0x540, 0xb277, 0xed46, 0xbc6f, 0x0, 0x0);
        gbc.writeMem(0x5f1c, { 0x50 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x42e6, gbc.sp());
        EXPECT(0x5f1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0311
        gbc.setState(0x42dd, 0x609, 0x18b0, 0xbfa5, 0x10e1, 0x16dc, 0x1, 0x1);
        gbc.writeMem(0x42dd, { 0x50 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0x42de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0312
        gbc.setState(0xa1f1, 0xd0da, 0x8980, 0x1226, 0x1443, 0xac74, 0x1, 0x0);
        gbc.writeMem(0xa1f1, { 0x50 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd0da, gbc.sp());
        EXPECT(0xa1f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa1f1));
        // 50 0313
        gbc.setState(0x70a7, 0x1683, 0x4d20, 0xc96c, 0x782, 0x66c5, 0x1, 0x1);
        gbc.writeMem(0x70a7, { 0x50 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1683, gbc.sp());
        EXPECT(0x70a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0315
        gbc.setState(0x4c66, 0x90f, 0x9d00, 0x57b1, 0xf03c, 0x9703, 0x0, 0x1);
        gbc.writeMem(0x4c66, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x90f, gbc.sp());
        EXPECT(0x4c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0316
        gbc.setState(0x1b7a, 0xeacf, 0xa320, 0x7555, 0x7d7b, 0x89c3, 0x0, 0x0);
        gbc.writeMem(0x1b7a, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0317
        gbc.setState(0x4884, 0x3616, 0x9dd0, 0xc691, 0x2960, 0x2ce3, 0x0, 0x1);
        gbc.writeMem(0x4884, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3616, gbc.sp());
        EXPECT(0x4885, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0318
        gbc.setState(0x8e08, 0xbd60, 0xe8a0, 0xa505, 0xb11d, 0xcb99, 0x0, 0x1);
        gbc.writeMem(0x8e08, { 0x50 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbd60, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8e08));
        // 50 0319
        gbc.setState(0x4421, 0x563, 0xf940, 0xd4b7, 0x72e, 0xdeb0, 0x1, 0x1);
        gbc.writeMem(0x4421, { 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x4422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 031A
        gbc.setState(0xe21d, 0xa32e, 0x140, 0xa567, 0x956, 0x9e27, 0x1, 0x0);
        gbc.writeMem(0xe21d, { 0x50 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa32e, gbc.sp());
        EXPECT(0xe21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe21d));
        // 50 031B
        gbc.setState(0xb547, 0x69d6, 0xed00, 0xc22c, 0x2416, 0xf67a, 0x0, 0x0);
        gbc.writeMem(0xb547, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x69d6, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb547));
        // 50 031C
        gbc.setState(0xe3a0, 0xbd07, 0xeb10, 0x34e0, 0xd233, 0xfbf5, 0x0, 0x0);
        gbc.writeMem(0xe3a0, { 0x50 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd07, gbc.sp());
        EXPECT(0xe3a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe3a0));
        // 50 031D
        gbc.setState(0x4bf4, 0xf36d, 0x7f10, 0x3ec8, 0x2afc, 0x805b, 0x0, 0x1);
        gbc.writeMem(0x4bf4, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf36d, gbc.sp());
        EXPECT(0x4bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 031E
        gbc.setState(0xcf9e, 0x6b63, 0x1f80, 0x173b, 0xc02, 0xae2a, 0x0, 0x1);
        gbc.writeMem(0xcf9e, { 0x50 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6b63, gbc.sp());
        EXPECT(0xcf9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcf9e));
        // 50 031F
        gbc.setState(0xb99c, 0xf6d7, 0xb320, 0x403e, 0xd4e8, 0xce6f, 0x0, 0x0);
        gbc.writeMem(0xb99c, { 0x50 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf6d7, gbc.sp());
        EXPECT(0xb99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb99c));
        // 50 0320
        gbc.setState(0xc725, 0x8541, 0xa920, 0x24d0, 0xcd58, 0x32b5, 0x1, 0x0);
        gbc.writeMem(0xc725, { 0x50 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8541, gbc.sp());
        EXPECT(0xc726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc725));
        // 50 0321
        gbc.setState(0x7b08, 0xce6b, 0x65a0, 0x77aa, 0xe9b3, 0xb5d0, 0x0, 0x0);
        gbc.writeMem(0x7b08, { 0x50 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xce6b, gbc.sp());
        EXPECT(0x7b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0322
        gbc.setState(0x27f5, 0x12e0, 0xc940, 0xf850, 0x545e, 0x44f2, 0x0, 0x1);
        gbc.writeMem(0x27f5, { 0x50 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x12e0, gbc.sp());
        EXPECT(0x27f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0323
        gbc.setState(0x406, 0xae19, 0xe7d0, 0x1257, 0xeabd, 0xa06b, 0x1, 0x0);
        gbc.writeMem(0x406, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xae19, gbc.sp());
        EXPECT(0x407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0324
        gbc.setState(0x6e3e, 0x33b9, 0x4210, 0x104a, 0x1f04, 0x61d4, 0x1, 0x0);
        gbc.writeMem(0x6e3e, { 0x50 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x33b9, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0325
        gbc.setState(0x32cc, 0xb198, 0x2380, 0xdeb9, 0x58c7, 0xe273, 0x1, 0x0);
        gbc.writeMem(0x32cc, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb198, gbc.sp());
        EXPECT(0x32cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0327
        gbc.setState(0xaae9, 0x9d69, 0x5070, 0x1a90, 0x3dab, 0x97a6, 0x0, 0x1);
        gbc.writeMem(0xaae9, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9d69, gbc.sp());
        EXPECT(0xaaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xaae9));
        // 50 0328
        gbc.setState(0x4edb, 0x7a1f, 0x1260, 0x3f92, 0xf9e, 0x78d3, 0x0, 0x0);
        gbc.writeMem(0x4edb, { 0x50 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7a1f, gbc.sp());
        EXPECT(0x4edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0329
        gbc.setState(0x989a, 0x81b9, 0x2a10, 0x9a4a, 0x1f57, 0x130a, 0x0, 0x0);
        gbc.writeMem(0x989a, { 0x50 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x81b9, gbc.sp());
        EXPECT(0x989b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x989a));
        // 50 032A
        gbc.setState(0x8231, 0xfe48, 0x94e0, 0xa26c, 0xedec, 0x6fb7, 0x1, 0x0);
        gbc.writeMem(0x8231, { 0x50 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfe48, gbc.sp());
        EXPECT(0x8232, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8231));
        // 50 032B
        gbc.setState(0xcc85, 0x5b3f, 0x39f0, 0xc2a, 0x7693, 0x58ee, 0x0, 0x0);
        gbc.writeMem(0xcc85, { 0x50 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0xcc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcc85));
        // 50 032C
        gbc.setState(0x69b, 0x6b9f, 0xc230, 0xb408, 0xe765, 0xdbeb, 0x0, 0x1);
        gbc.writeMem(0x69b, { 0x50 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 032D
        gbc.setState(0xbdc0, 0x6c60, 0x3ce0, 0xf7dc, 0x7d82, 0xf44b, 0x0, 0x0);
        gbc.writeMem(0xbdc0, { 0x50 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0xbdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbdc0));
        // 50 032E
        gbc.setState(0xe77, 0xed39, 0xb0c0, 0x2ae6, 0xaf75, 0xcaac, 0x0, 0x0);
        gbc.writeMem(0xe77, { 0x50 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xed39, gbc.sp());
        EXPECT(0xe78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 032F
        gbc.setState(0xef4e, 0x4844, 0xaa00, 0x9773, 0x5b59, 0x10d6, 0x0, 0x0);
        gbc.writeMem(0xef4e, { 0x50 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4844, gbc.sp());
        EXPECT(0xef4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xef4e));
        // 50 0330
        gbc.setState(0x3f57, 0xeaf3, 0x7130, 0x7d3f, 0x6d62, 0x765d, 0x1, 0x1);
        gbc.writeMem(0x3f57, { 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeaf3, gbc.sp());
        EXPECT(0x3f58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0331
        gbc.setState(0x24a7, 0xd60d, 0xb3e0, 0x2ab6, 0xfbeb, 0xb82c, 0x1, 0x0);
        gbc.writeMem(0x24a7, { 0x50 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd60d, gbc.sp());
        EXPECT(0x24a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0332
        gbc.setState(0xcd56, 0x818c, 0x9b20, 0x8388, 0xc241, 0x2bf7, 0x1, 0x0);
        gbc.writeMem(0xcd56, { 0x50 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x818c, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcd56));
        // 50 0333
        gbc.setState(0xd9f5, 0x37a5, 0xa9e0, 0xa9eb, 0xafa9, 0x9dc, 0x0, 0x0);
        gbc.writeMem(0xd9f5, { 0x50 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x37a5, gbc.sp());
        EXPECT(0xd9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd9f5));
        // 50 0334
        gbc.setState(0x6a53, 0xd250, 0x7940, 0x2b48, 0x9a6, 0x4398, 0x1, 0x0);
        gbc.writeMem(0x6a53, { 0x50 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0x6a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0335
        gbc.setState(0xcccb, 0xd5b2, 0xf2b0, 0xf59a, 0x8e49, 0x7173, 0x0, 0x1);
        gbc.writeMem(0xcccb, { 0x50 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd5b2, gbc.sp());
        EXPECT(0xcccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcccb));
        // 50 0336
        gbc.setState(0x66b4, 0xc8c5, 0xc4b0, 0x8fc6, 0xa60c, 0xd22a, 0x1, 0x0);
        gbc.writeMem(0x66b4, { 0x50 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc8c5, gbc.sp());
        EXPECT(0x66b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0337
        gbc.setState(0x55a3, 0xc004, 0x7b80, 0x13c9, 0x97a9, 0xd142, 0x0, 0x0);
        gbc.writeMem(0x55a3, { 0x50 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xc004, gbc.sp());
        EXPECT(0x55a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0338
        gbc.setState(0xdbbb, 0xccd4, 0x910, 0x2322, 0xb99e, 0xc7b4, 0x1, 0x0);
        gbc.writeMem(0xdbbb, { 0x50 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xccd4, gbc.sp());
        EXPECT(0xdbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdbbb));
        // 50 0339
        gbc.setState(0x5547, 0x94fe, 0x3630, 0x9fb3, 0xab82, 0x6614, 0x0, 0x0);
        gbc.writeMem(0x5547, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x5548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 033A
        gbc.setState(0x7704, 0xde24, 0x58c0, 0x55bd, 0x2cf1, 0x29b2, 0x1, 0x1);
        gbc.writeMem(0x7704, { 0x50 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xde24, gbc.sp());
        EXPECT(0x7705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 033B
        gbc.setState(0xd41f, 0xbbc5, 0x35b0, 0xaad3, 0x9fc1, 0x45e1, 0x1, 0x1);
        gbc.writeMem(0xd41f, { 0x50 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xbbc5, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd41f));
        // 50 033C
        gbc.setState(0x2aa4, 0xd8d0, 0xd130, 0x3a83, 0x1ea7, 0x82b, 0x0, 0x1);
        gbc.writeMem(0x2aa4, { 0x50 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd8d0, gbc.sp());
        EXPECT(0x2aa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 033D
        gbc.setState(0x1bab, 0x8c7e, 0xe7e0, 0x9290, 0x3ee1, 0xe312, 0x0, 0x1);
        gbc.writeMem(0x1bab, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8c7e, gbc.sp());
        EXPECT(0x1bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 033E
        gbc.setState(0xd0c0, 0x8dde, 0x7190, 0x3a63, 0xcff4, 0x8ec4, 0x0, 0x1);
        gbc.writeMem(0xd0c0, { 0x50 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8dde, gbc.sp());
        EXPECT(0xd0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd0c0));
        // 50 033F
        gbc.setState(0x6050, 0xd36a, 0xf530, 0x10f9, 0xafe7, 0xde71, 0x0, 0x1);
        gbc.writeMem(0x6050, { 0x50 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd36a, gbc.sp());
        EXPECT(0x6051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0340
        gbc.setState(0x4de6, 0xcf98, 0x8530, 0x5e18, 0xf4dc, 0x1d86, 0x0, 0x1);
        gbc.writeMem(0x4de6, { 0x50 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf98, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0341
        gbc.setState(0x7543, 0xe5e9, 0xfdf0, 0xee8a, 0x7670, 0x73ab, 0x1, 0x0);
        gbc.writeMem(0x7543, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe5e9, gbc.sp());
        EXPECT(0x7544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0342
        gbc.setState(0x3527, 0xb4b0, 0x3260, 0xe84f, 0xefa5, 0x9e22, 0x0, 0x1);
        gbc.writeMem(0x3527, { 0x50 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0x3528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0343
        gbc.setState(0xe66e, 0xfb71, 0x9720, 0x8265, 0x1b66, 0xc5f6, 0x0, 0x1);
        gbc.writeMem(0xe66e, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0xe66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe66e));
        // 50 0344
        gbc.setState(0x10af, 0x21ee, 0xa0a0, 0x23c6, 0x69c1, 0x3030, 0x1, 0x0);
        gbc.writeMem(0x10af, { 0x50 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x21ee, gbc.sp());
        EXPECT(0x10b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0346
        gbc.setState(0x453f, 0x684b, 0x7a30, 0xbe6a, 0xb8db, 0x87d6, 0x1, 0x1);
        gbc.writeMem(0x453f, { 0x50 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x684b, gbc.sp());
        EXPECT(0x4540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0347
        gbc.setState(0xc101, 0x8066, 0x9aa0, 0x7945, 0xea85, 0x6b88, 0x1, 0x0);
        gbc.writeMem(0xc101, { 0x50 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8066, gbc.sp());
        EXPECT(0xc102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc101));
        // 50 0348
        gbc.setState(0x40f6, 0xb46c, 0xbcb0, 0x4da4, 0x9f14, 0xa41f, 0x0, 0x0);
        gbc.writeMem(0x40f6, { 0x50 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb46c, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0349
        gbc.setState(0xa139, 0xa157, 0xc740, 0x4916, 0x56fd, 0xbe83, 0x0, 0x1);
        gbc.writeMem(0xa139, { 0x50 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa157, gbc.sp());
        EXPECT(0xa13a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa139));
        // 50 034A
        gbc.setState(0x2038, 0xf686, 0x9260, 0x1637, 0xeed7, 0x1582, 0x1, 0x1);
        gbc.writeMem(0x2038, { 0x50 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf686, gbc.sp());
        EXPECT(0x2039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 034B
        gbc.setState(0x5d19, 0xc3ba, 0xe670, 0x1534, 0x3b32, 0x2176, 0x0, 0x0);
        gbc.writeMem(0x5d19, { 0x50 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 034C
        gbc.setState(0x65f6, 0x43b1, 0x9170, 0xc084, 0x7c7b, 0x8eb5, 0x1, 0x0);
        gbc.writeMem(0x65f6, { 0x50 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x43b1, gbc.sp());
        EXPECT(0x65f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 034D
        gbc.setState(0x202d, 0x620e, 0xcac0, 0xda5f, 0xbf02, 0x4277, 0x0, 0x1);
        gbc.writeMem(0x202d, { 0x50 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x620e, gbc.sp());
        EXPECT(0x202e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 034E
        gbc.setState(0x3142, 0x2e0f, 0x3f00, 0x7afc, 0x2dc5, 0x7931, 0x0, 0x1);
        gbc.writeMem(0x3142, { 0x50 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2e0f, gbc.sp());
        EXPECT(0x3143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0350
        gbc.setState(0x1d65, 0xd82b, 0xa390, 0x28a7, 0xb3fa, 0x4dbb, 0x0, 0x1);
        gbc.writeMem(0x1d65, { 0x50 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd82b, gbc.sp());
        EXPECT(0x1d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0351
        gbc.setState(0x24e1, 0xc56c, 0xd7f0, 0x3f79, 0x32d2, 0xbae3, 0x1, 0x1);
        gbc.writeMem(0x24e1, { 0x50 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc56c, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0352
        gbc.setState(0x5f50, 0xb44f, 0x3da0, 0x62d, 0x9e0f, 0xe7a4, 0x0, 0x0);
        gbc.writeMem(0x5f50, { 0x50 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb44f, gbc.sp());
        EXPECT(0x5f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0353
        gbc.setState(0xe95e, 0xa039, 0x8810, 0xdc7c, 0xc511, 0xc90, 0x0, 0x0);
        gbc.writeMem(0xe95e, { 0x50 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa039, gbc.sp());
        EXPECT(0xe95f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe95e));
        // 50 0354
        gbc.setState(0x9ab, 0xbf9d, 0x59d0, 0x5933, 0xe111, 0x9157, 0x1, 0x1);
        gbc.writeMem(0x9ab, { 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xbf9d, gbc.sp());
        EXPECT(0x9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0355
        gbc.setState(0x2d39, 0xce9b, 0x68f0, 0x407a, 0xad64, 0x4a79, 0x1, 0x1);
        gbc.writeMem(0x2d39, { 0x50 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xce9b, gbc.sp());
        EXPECT(0x2d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0356
        gbc.setState(0x5e04, 0x80bc, 0x4c80, 0xfc28, 0x93ce, 0x7bf7, 0x0, 0x0);
        gbc.writeMem(0x5e04, { 0x50 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0x5e05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0357
        gbc.setState(0x10a8, 0x4238, 0xfa30, 0xd1c9, 0xdc35, 0xfe71, 0x0, 0x0);
        gbc.writeMem(0x10a8, { 0x50 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4238, gbc.sp());
        EXPECT(0x10a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0358
        gbc.setState(0x7596, 0xc10, 0xe530, 0x6245, 0xed81, 0x8658, 0x1, 0x0);
        gbc.writeMem(0x7596, { 0x50 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc10, gbc.sp());
        EXPECT(0x7597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0359
        gbc.setState(0xe5c4, 0x5a89, 0x6e50, 0x9073, 0x228a, 0x580, 0x1, 0x1);
        gbc.writeMem(0xe5c4, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5a89, gbc.sp());
        EXPECT(0xe5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe5c4));
        // 50 035A
        gbc.setState(0xda08, 0x8530, 0x8a20, 0x47a9, 0xf32d, 0x73a0, 0x0, 0x1);
        gbc.writeMem(0xda08, { 0x50 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8530, gbc.sp());
        EXPECT(0xda09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xda08));
        // 50 035B
        gbc.setState(0xb4dd, 0x4c7b, 0x8700, 0xbb4a, 0xc721, 0x3bcf, 0x1, 0x1);
        gbc.writeMem(0xb4dd, { 0x50 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4c7b, gbc.sp());
        EXPECT(0xb4de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb4dd));
        // 50 035C
        gbc.setState(0x9a88, 0xead1, 0x6d10, 0x6ca0, 0x572f, 0x8ccf, 0x0, 0x0);
        gbc.writeMem(0x9a88, { 0x50 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xead1, gbc.sp());
        EXPECT(0x9a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9a88));
        // 50 035D
        gbc.setState(0x866c, 0xbbf3, 0xc260, 0xfc01, 0x443d, 0xbf4a, 0x0, 0x0);
        gbc.writeMem(0x866c, { 0x50 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbbf3, gbc.sp());
        EXPECT(0x866d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x866c));
        // 50 035E
        gbc.setState(0xb83a, 0xf5dc, 0x4720, 0x3b85, 0xf10d, 0xb303, 0x0, 0x1);
        gbc.writeMem(0xb83a, { 0x50 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf5dc, gbc.sp());
        EXPECT(0xb83b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb83a));
        // 50 035F
        gbc.setState(0x21f1, 0x75fb, 0x37c0, 0xa50c, 0x17c4, 0x332e, 0x1, 0x0);
        gbc.writeMem(0x21f1, { 0x50 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x75fb, gbc.sp());
        EXPECT(0x21f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0360
        gbc.setState(0x4ea1, 0x292e, 0x160, 0x486, 0x2c0a, 0x977e, 0x0, 0x1);
        gbc.writeMem(0x4ea1, { 0x50 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0x4ea2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0361
        gbc.setState(0x54ca, 0x1b7d, 0xee20, 0xf78a, 0x8ed7, 0xcb8, 0x1, 0x1);
        gbc.writeMem(0x54ca, { 0x50 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x1b7d, gbc.sp());
        EXPECT(0x54cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0362
        gbc.setState(0x48c, 0x814d, 0xe9a0, 0x73e2, 0xd277, 0x17ae, 0x1, 0x1);
        gbc.writeMem(0x48c, { 0x50 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x814d, gbc.sp());
        EXPECT(0x48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0363
        gbc.setState(0xd7ff, 0xf57e, 0xf160, 0xe441, 0x8e3f, 0xe740, 0x1, 0x1);
        gbc.writeMem(0xd7ff, { 0x50 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf57e, gbc.sp());
        EXPECT(0xd800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd7ff));
        // 50 0364
        gbc.setState(0x8c3f, 0x7966, 0xc1a0, 0x9fcb, 0x71d3, 0x183d, 0x1, 0x1);
        gbc.writeMem(0x8c3f, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7966, gbc.sp());
        EXPECT(0x8c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8c3f));
        // 50 0365
        gbc.setState(0x9f18, 0x2fba, 0x2550, 0xd999, 0x165b, 0xf0b7, 0x1, 0x1);
        gbc.writeMem(0x9f18, { 0x50 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2fba, gbc.sp());
        EXPECT(0x9f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9f18));
        // 50 0366
        gbc.setState(0x4b7, 0xdf77, 0xd250, 0xf4c8, 0x2fc6, 0x99ed, 0x0, 0x0);
        gbc.writeMem(0x4b7, { 0x50 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0x4b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0367
        gbc.setState(0xaa1, 0x93bf, 0x2da0, 0x1f8, 0x2683, 0x34ed, 0x0, 0x0);
        gbc.writeMem(0xaa1, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x93bf, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0368
        gbc.setState(0x6258, 0xd9c1, 0x5970, 0xddec, 0x7436, 0xd779, 0x0, 0x1);
        gbc.writeMem(0x6258, { 0x50 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd9c1, gbc.sp());
        EXPECT(0x6259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0369
        gbc.setState(0x333, 0xd03b, 0xadd0, 0xa84, 0x2fb4, 0x47bf, 0x0, 0x1);
        gbc.writeMem(0x333, { 0x50 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd03b, gbc.sp());
        EXPECT(0x334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 036A
        gbc.setState(0x3923, 0xe60b, 0xb330, 0xfd5a, 0xdc2, 0x70d5, 0x0, 0x0);
        gbc.writeMem(0x3923, { 0x50 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe60b, gbc.sp());
        EXPECT(0x3924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 036B
        gbc.setState(0x1604, 0xfd4a, 0x43b0, 0x5d66, 0x4507, 0x20e4, 0x1, 0x0);
        gbc.writeMem(0x1604, { 0x50 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfd4a, gbc.sp());
        EXPECT(0x1605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 036C
        gbc.setState(0x5bfc, 0x20a4, 0xb640, 0x684e, 0x9e44, 0xd9c8, 0x0, 0x0);
        gbc.writeMem(0x5bfc, { 0x50 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x20a4, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 036D
        gbc.setState(0x42a2, 0x2eab, 0xae50, 0x8a8a, 0x7269, 0x50bb, 0x0, 0x0);
        gbc.writeMem(0x42a2, { 0x50 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2eab, gbc.sp());
        EXPECT(0x42a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 036E
        gbc.setState(0x7582, 0xb84a, 0x2dc0, 0xfd20, 0x5ce4, 0xfbd9, 0x0, 0x1);
        gbc.writeMem(0x7582, { 0x50 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb84a, gbc.sp());
        EXPECT(0x7583, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 036F
        gbc.setState(0xcc9d, 0x3507, 0x5300, 0xb4b6, 0xdebe, 0xb38c, 0x1, 0x0);
        gbc.writeMem(0xcc9d, { 0x50 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3507, gbc.sp());
        EXPECT(0xcc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcc9d));
        // 50 0370
        gbc.setState(0x3eac, 0xf045, 0x5210, 0xd141, 0xc3cd, 0x4acb, 0x1, 0x0);
        gbc.writeMem(0x3eac, { 0x50 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x3ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0371
        gbc.setState(0x936a, 0x98fd, 0xbda0, 0xbac7, 0x431f, 0x463c, 0x1, 0x0);
        gbc.writeMem(0x936a, { 0x50 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x98fd, gbc.sp());
        EXPECT(0x936b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x936a));
        // 50 0372
        gbc.setState(0x6483, 0xa2b3, 0xc1d0, 0x6c2c, 0x4e62, 0xdd2b, 0x1, 0x1);
        gbc.writeMem(0x6483, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa2b3, gbc.sp());
        EXPECT(0x6484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0373
        gbc.setState(0x98a6, 0x581a, 0x3ca0, 0x65f1, 0x4ea0, 0x6290, 0x0, 0x1);
        gbc.writeMem(0x98a6, { 0x50 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0x98a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x98a6));
        // 50 0374
        gbc.setState(0x4179, 0x1128, 0x41c0, 0x79ea, 0x689a, 0x706d, 0x0, 0x1);
        gbc.writeMem(0x4179, { 0x50 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x417a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0375
        gbc.setState(0xee54, 0x9daf, 0xe3b0, 0x185c, 0xdd39, 0x1163, 0x1, 0x0);
        gbc.writeMem(0xee54, { 0x50 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9daf, gbc.sp());
        EXPECT(0xee55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xee54));
        // 50 0376
        gbc.setState(0x323f, 0x4088, 0xa580, 0x664b, 0x74aa, 0xa8eb, 0x1, 0x1);
        gbc.writeMem(0x323f, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x4088, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0377
        gbc.setState(0xc62b, 0x988e, 0xeda0, 0xca41, 0xd158, 0xacaa, 0x1, 0x0);
        gbc.writeMem(0xc62b, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x988e, gbc.sp());
        EXPECT(0xc62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc62b));
        // 50 0378
        gbc.setState(0xd199, 0x5d34, 0x3010, 0xd636, 0xa666, 0xc138, 0x1, 0x1);
        gbc.writeMem(0xd199, { 0x50 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5d34, gbc.sp());
        EXPECT(0xd19a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd199));
        // 50 0379
        gbc.setState(0x6be1, 0x852, 0x4570, 0xd514, 0xdd39, 0x4fa, 0x1, 0x0);
        gbc.writeMem(0x6be1, { 0x50 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x852, gbc.sp());
        EXPECT(0x6be2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 037A
        gbc.setState(0x6e5c, 0xb828, 0x9db0, 0x42cf, 0xfee3, 0x4d56, 0x1, 0x0);
        gbc.writeMem(0x6e5c, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0x6e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 037B
        gbc.setState(0x96be, 0x513b, 0xd400, 0xf741, 0x3fd9, 0x68f0, 0x0, 0x1);
        gbc.writeMem(0x96be, { 0x50 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x513b, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x96be));
        // 50 037C
        gbc.setState(0x3903, 0x6e69, 0x34d0, 0xa9d4, 0x6feb, 0xf343, 0x0, 0x1);
        gbc.writeMem(0x3903, { 0x50 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6e69, gbc.sp());
        EXPECT(0x3904, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 037D
        gbc.setState(0xc598, 0x7e1a, 0xed80, 0xb816, 0xd752, 0x9136, 0x0, 0x1);
        gbc.writeMem(0xc598, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x7e1a, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc598));
        // 50 0380
        gbc.setState(0x4255, 0xbb28, 0x6df0, 0x6d65, 0xa905, 0x1517, 0x0, 0x0);
        gbc.writeMem(0x4255, { 0x50 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0x4256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0381
        gbc.setState(0xe0e2, 0xa25e, 0x2c50, 0x79f0, 0x99f3, 0x9fd, 0x0, 0x1);
        gbc.writeMem(0xe0e2, { 0x50 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa25e, gbc.sp());
        EXPECT(0xe0e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe0e2));
        // 50 0382
        gbc.setState(0xc0f3, 0xbb06, 0xc920, 0xeef6, 0x697d, 0x3b97, 0x0, 0x1);
        gbc.writeMem(0xc0f3, { 0x50 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbb06, gbc.sp());
        EXPECT(0xc0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc0f3));
        // 50 0383
        gbc.setState(0x93ee, 0xa02c, 0x7e10, 0x8764, 0x4efe, 0x3dcc, 0x0, 0x1);
        gbc.writeMem(0x93ee, { 0x50 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa02c, gbc.sp());
        EXPECT(0x93ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x93ee));
        // 50 0384
        gbc.setState(0xa622, 0x8c28, 0x8dd0, 0x5049, 0x9e25, 0xb966, 0x1, 0x0);
        gbc.writeMem(0xa622, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8c28, gbc.sp());
        EXPECT(0xa623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa622));
        // 50 0385
        gbc.setState(0x32b4, 0x6f6c, 0x76b0, 0x5bf4, 0x9b6f, 0x8de6, 0x1, 0x0);
        gbc.writeMem(0x32b4, { 0x50 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0x32b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0386
        gbc.setState(0x62c, 0xbb70, 0xdfd0, 0x69dc, 0x9368, 0xd9d9, 0x1, 0x1);
        gbc.writeMem(0x62c, { 0x50 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xbb70, gbc.sp());
        EXPECT(0x62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0387
        gbc.setState(0x6810, 0x522a, 0x9d80, 0x3602, 0xc5c0, 0xa11c, 0x0, 0x1);
        gbc.writeMem(0x6810, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x522a, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0388
        gbc.setState(0xcade, 0x1f7f, 0xc6c0, 0xcbf, 0xc927, 0xd4d, 0x0, 0x0);
        gbc.writeMem(0xcade, { 0x50 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1f7f, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcade));
        // 50 0389
        gbc.setState(0x880, 0x2eaa, 0x81d0, 0xfb61, 0xbb37, 0xcecf, 0x1, 0x1);
        gbc.writeMem(0x880, { 0x50 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2eaa, gbc.sp());
        EXPECT(0x881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 038A
        gbc.setState(0x4771, 0xaa58, 0xb5f0, 0xe6ca, 0x97a9, 0xfc91, 0x0, 0x0);
        gbc.writeMem(0x4771, { 0x50 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xaa58, gbc.sp());
        EXPECT(0x4772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 038B
        gbc.setState(0x93e2, 0x3614, 0x3100, 0xd5c8, 0xc5dc, 0xd621, 0x0, 0x0);
        gbc.writeMem(0x93e2, { 0x50 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3614, gbc.sp());
        EXPECT(0x93e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x93e2));
        // 50 038C
        gbc.setState(0xefb1, 0x5720, 0x49f0, 0x8502, 0x27bf, 0x34dd, 0x0, 0x1);
        gbc.writeMem(0xefb1, { 0x50 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0xefb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xefb1));
        // 50 038D
        gbc.setState(0xd13f, 0xeda2, 0xaf20, 0xe85b, 0x3ca9, 0x5f84, 0x0, 0x1);
        gbc.writeMem(0xd13f, { 0x50 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xeda2, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd13f));
        // 50 038E
        gbc.setState(0xb754, 0x7919, 0x32a0, 0x6cee, 0xf7e9, 0x9726, 0x0, 0x1);
        gbc.writeMem(0xb754, { 0x50 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7919, gbc.sp());
        EXPECT(0xb755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb754));
        // 50 038F
        gbc.setState(0x3cfd, 0xd42a, 0xefb0, 0x44c8, 0x4657, 0x9cb, 0x1, 0x0);
        gbc.writeMem(0x3cfd, { 0x50 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd42a, gbc.sp());
        EXPECT(0x3cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0390
        gbc.setState(0xb5c, 0x3386, 0xf1f0, 0x7467, 0x1b87, 0x88bb, 0x1, 0x0);
        gbc.writeMem(0xb5c, { 0x50 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3386, gbc.sp());
        EXPECT(0xb5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0391
        gbc.setState(0x5b1e, 0xe031, 0x31d0, 0xf699, 0x9aa9, 0x83d, 0x1, 0x1);
        gbc.writeMem(0x5b1e, { 0x50 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xe031, gbc.sp());
        EXPECT(0x5b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0392
        gbc.setState(0x2463, 0x2e2, 0x1d0, 0x9dbd, 0x3e2f, 0x2519, 0x0, 0x1);
        gbc.writeMem(0x2463, { 0x50 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2e2, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 0393
        gbc.setState(0x625c, 0x76fc, 0xe1c0, 0x3ec6, 0xdf7a, 0x1298, 0x0, 0x1);
        gbc.writeMem(0x625c, { 0x50 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x76fc, gbc.sp());
        EXPECT(0x625d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0394
        gbc.setState(0x8932, 0xbb1f, 0xf7e0, 0xb98, 0xc195, 0x73b8, 0x0, 0x1);
        gbc.writeMem(0x8932, { 0x50 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0x8933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8932));
        // 50 0395
        gbc.setState(0x7fa8, 0x9b98, 0x1700, 0x7058, 0x27a8, 0x463f, 0x0, 0x0);
        gbc.writeMem(0x7fa8, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9b98, gbc.sp());
        EXPECT(0x7fa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 0396
        gbc.setState(0x93ea, 0xb7cf, 0x48d0, 0x156c, 0x51fd, 0x2dac, 0x0, 0x1);
        gbc.writeMem(0x93ea, { 0x50 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb7cf, gbc.sp());
        EXPECT(0x93eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x93ea));
        // 50 0397
        gbc.setState(0x9a15, 0x1631, 0x36b0, 0xd1f2, 0xc2cd, 0x5f32, 0x1, 0x1);
        gbc.writeMem(0x9a15, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0x9a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9a15));
        // 50 0398
        gbc.setState(0x8249, 0xfa72, 0x8240, 0x28d9, 0xdbaa, 0x4c17, 0x1, 0x1);
        gbc.writeMem(0x8249, { 0x50 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfa72, gbc.sp());
        EXPECT(0x824a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8249));
        // 50 0399
        gbc.setState(0x24a0, 0x6216, 0x9740, 0x1814, 0x6c7c, 0x6104, 0x1, 0x1);
        gbc.writeMem(0x24a0, { 0x50 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6216, gbc.sp());
        EXPECT(0x24a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 039A
        gbc.setState(0xacc3, 0xb931, 0x6c70, 0xe6ac, 0xb806, 0x389c, 0x1, 0x0);
        gbc.writeMem(0xacc3, { 0x50 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xb931, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xacc3));
        // 50 039B
        gbc.setState(0xb932, 0x1fb3, 0x22a0, 0x9cfe, 0x2d58, 0x3f92, 0x0, 0x0);
        gbc.writeMem(0xb932, { 0x50 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1fb3, gbc.sp());
        EXPECT(0xb933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb932));
        // 50 039C
        gbc.setState(0x1730, 0x987f, 0x3f20, 0xdd42, 0x675, 0x9d89, 0x0, 0x0);
        gbc.writeMem(0x1730, { 0x50 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0x1731, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 039D
        gbc.setState(0x3f32, 0xafde, 0x75c0, 0x8a46, 0x304a, 0x4091, 0x0, 0x0);
        gbc.writeMem(0x3f32, { 0x50 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xafde, gbc.sp());
        EXPECT(0x3f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 039E
        gbc.setState(0x60fe, 0x35e9, 0xa540, 0x634d, 0x36f1, 0x84fd, 0x1, 0x1);
        gbc.writeMem(0x60fe, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x35e9, gbc.sp());
        EXPECT(0x60ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 039F
        gbc.setState(0x8cd6, 0xe53d, 0xeda0, 0xda68, 0x2837, 0x3ff9, 0x1, 0x0);
        gbc.writeMem(0x8cd6, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe53d, gbc.sp());
        EXPECT(0x8cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8cd6));
        // 50 03A0
        gbc.setState(0x3d04, 0x8730, 0x30c0, 0x4ffe, 0xa20e, 0x6cf7, 0x0, 0x1);
        gbc.writeMem(0x3d04, { 0x50 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8730, gbc.sp());
        EXPECT(0x3d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03A1
        gbc.setState(0x1d4a, 0x43e1, 0xf7f0, 0xeb06, 0x501, 0xbf34, 0x1, 0x1);
        gbc.writeMem(0x1d4a, { 0x50 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x43e1, gbc.sp());
        EXPECT(0x1d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03A2
        gbc.setState(0x2784, 0xe05, 0xcb60, 0x8b6b, 0x8c3e, 0x6e6c, 0x0, 0x0);
        gbc.writeMem(0x2784, { 0x50 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe05, gbc.sp());
        EXPECT(0x2785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03A3
        gbc.setState(0xde3d, 0xffc8, 0xb7b0, 0x2f78, 0x25b7, 0x6aa2, 0x1, 0x1);
        gbc.writeMem(0xde3d, { 0x50 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0xde3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xde3d));
        // 50 03A4
        gbc.setState(0xe6cf, 0xf1fc, 0x2300, 0x9828, 0xe924, 0xbb26, 0x1, 0x0);
        gbc.writeMem(0xe6cf, { 0x50 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf1fc, gbc.sp());
        EXPECT(0xe6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe6cf));
        // 50 03A6
        gbc.setState(0x653c, 0xc20c, 0x6040, 0x8d9b, 0xdd72, 0x885a, 0x1, 0x1);
        gbc.writeMem(0x653c, { 0x50 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc20c, gbc.sp());
        EXPECT(0x653d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03A7
        gbc.setState(0xbf5a, 0xac2c, 0xb650, 0x56b6, 0xc89d, 0x206b, 0x0, 0x0);
        gbc.writeMem(0xbf5a, { 0x50 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xac2c, gbc.sp());
        EXPECT(0xbf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbf5a));
        // 50 03A8
        gbc.setState(0xc5c6, 0xf3c7, 0xc660, 0x30fc, 0x1bc3, 0x36a, 0x1, 0x0);
        gbc.writeMem(0xc5c6, { 0x50 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf3c7, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc5c6));
        // 50 03A9
        gbc.setState(0x7d32, 0x7263, 0xdf30, 0x12fc, 0x11c4, 0x6028, 0x0, 0x0);
        gbc.writeMem(0x7d32, { 0x50 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7263, gbc.sp());
        EXPECT(0x7d33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03AA
        gbc.setState(0x8afe, 0x4d74, 0x7f80, 0x39d1, 0x16dd, 0x937f, 0x1, 0x1);
        gbc.writeMem(0x8afe, { 0x50 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4d74, gbc.sp());
        EXPECT(0x8aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8afe));
        // 50 03AB
        gbc.setState(0xcdd0, 0xbcb2, 0xe640, 0x1961, 0x9302, 0x119d, 0x0, 0x0);
        gbc.writeMem(0xcdd0, { 0x50 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbcb2, gbc.sp());
        EXPECT(0xcdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcdd0));
        // 50 03AC
        gbc.setState(0x9485, 0x29e1, 0xbf90, 0x224f, 0x1135, 0xbcec, 0x1, 0x1);
        gbc.writeMem(0x9485, { 0x50 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x29e1, gbc.sp());
        EXPECT(0x9486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9485));
        // 50 03AD
        gbc.setState(0x6e95, 0x75d, 0xd510, 0xf5cc, 0xc075, 0x9bde, 0x0, 0x1);
        gbc.writeMem(0x6e95, { 0x50 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x75d, gbc.sp());
        EXPECT(0x6e96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03AE
        gbc.setState(0xa351, 0xd86, 0xf9c0, 0xd0ab, 0x1199, 0x5a9, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd86, gbc.sp());
        EXPECT(0xa352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa351));
        // 50 03AF
        gbc.setState(0x33a8, 0xe54f, 0xd890, 0xab94, 0x98ed, 0xe8e3, 0x0, 0x1);
        gbc.writeMem(0x33a8, { 0x50 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x33a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03B0
        gbc.setState(0x9192, 0x27e0, 0x3660, 0x92e5, 0x981d, 0x8684, 0x0, 0x0);
        gbc.writeMem(0x9192, { 0x50 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x27e0, gbc.sp());
        EXPECT(0x9193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9192));
        // 50 03B1
        gbc.setState(0x70d4, 0x392a, 0x5a90, 0x99e7, 0x363e, 0x772b, 0x0, 0x0);
        gbc.writeMem(0x70d4, { 0x50 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x392a, gbc.sp());
        EXPECT(0x70d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03B2
        gbc.setState(0x156a, 0xc77d, 0x5b20, 0xd5de, 0x14b9, 0xefff, 0x0, 0x1);
        gbc.writeMem(0x156a, { 0x50 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc77d, gbc.sp());
        EXPECT(0x156b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03B3
        gbc.setState(0x5371, 0xad19, 0xa460, 0x6d1f, 0xfde7, 0xa895, 0x0, 0x0);
        gbc.writeMem(0x5371, { 0x50 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x5372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03B4
        gbc.setState(0x2220, 0x90cb, 0xe470, 0x8501, 0x1f22, 0x9e0c, 0x1, 0x1);
        gbc.writeMem(0x2220, { 0x50 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x90cb, gbc.sp());
        EXPECT(0x2221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03B5
        gbc.setState(0xd226, 0x24b4, 0x9df0, 0x184b, 0x91b8, 0xf929, 0x1, 0x1);
        gbc.writeMem(0xd226, { 0x50 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x24b4, gbc.sp());
        EXPECT(0xd227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd226));
        // 50 03B6
        gbc.setState(0xae50, 0xaaf8, 0x8d10, 0x64a6, 0x5245, 0x565a, 0x0, 0x0);
        gbc.writeMem(0xae50, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xaaf8, gbc.sp());
        EXPECT(0xae51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xae50));
        // 50 03B7
        gbc.setState(0x3b6a, 0x51fd, 0xa550, 0xfed2, 0x7a65, 0xd283, 0x0, 0x1);
        gbc.writeMem(0x3b6a, { 0x50 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x51fd, gbc.sp());
        EXPECT(0x3b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03B8
        gbc.setState(0x9490, 0xb293, 0x7c20, 0x1504, 0xf6f, 0x3d3f, 0x0, 0x1);
        gbc.writeMem(0x9490, { 0x50 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0x9491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9490));
        // 50 03B9
        gbc.setState(0x2769, 0xdfb, 0x4510, 0xb37e, 0x4a56, 0x7298, 0x1, 0x1);
        gbc.writeMem(0x2769, { 0x50 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdfb, gbc.sp());
        EXPECT(0x276a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03BA
        gbc.setState(0x149, 0xfd9d, 0x7780, 0xd09c, 0x550, 0x8f2a, 0x1, 0x0);
        gbc.writeMem(0x149, { 0x50 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfd9d, gbc.sp());
        EXPECT(0x14a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03BB
        gbc.setState(0x393a, 0xee4b, 0x8800, 0x91f7, 0xa505, 0xd08f, 0x0, 0x0);
        gbc.writeMem(0x393a, { 0x50 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xee4b, gbc.sp());
        EXPECT(0x393b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03BC
        gbc.setState(0x829a, 0xf8c2, 0x76a0, 0x5900, 0x9468, 0x1a0f, 0x1, 0x1);
        gbc.writeMem(0x829a, { 0x50 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf8c2, gbc.sp());
        EXPECT(0x829b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x829a));
        // 50 03BD
        gbc.setState(0x13d4, 0x8d42, 0x4a30, 0xeb38, 0xcd31, 0x1823, 0x0, 0x0);
        gbc.writeMem(0x13d4, { 0x50 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8d42, gbc.sp());
        EXPECT(0x13d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03BE
        gbc.setState(0xe7a8, 0x81e7, 0x3b0, 0xc8b5, 0xc82d, 0xc4cb, 0x0, 0x1);
        gbc.writeMem(0xe7a8, { 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x81e7, gbc.sp());
        EXPECT(0xe7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe7a8));
        // 50 03BF
        gbc.setState(0x4317, 0x5f42, 0xf820, 0x2040, 0x54e9, 0x27b3, 0x0, 0x1);
        gbc.writeMem(0x4317, { 0x50 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5f42, gbc.sp());
        EXPECT(0x4318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03C0
        gbc.setState(0xcf4a, 0xb987, 0x380, 0x9000, 0x58ba, 0x182, 0x1, 0x0);
        gbc.writeMem(0xcf4a, { 0x50 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb987, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcf4a));
        // 50 03C1
        gbc.setState(0x4caf, 0x779f, 0x3e90, 0xd4bc, 0xf2ac, 0x452a, 0x0, 0x0);
        gbc.writeMem(0x4caf, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x779f, gbc.sp());
        EXPECT(0x4cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03C2
        gbc.setState(0xb436, 0x5bb7, 0x9160, 0xe098, 0x73a0, 0x196b, 0x1, 0x1);
        gbc.writeMem(0xb436, { 0x50 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5bb7, gbc.sp());
        EXPECT(0xb437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xb436));
        // 50 03C3
        gbc.setState(0x527b, 0xebc4, 0x1b40, 0xcb0c, 0x2eff, 0x3b0f, 0x0, 0x1);
        gbc.writeMem(0x527b, { 0x50 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xebc4, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03C4
        gbc.setState(0xa42c, 0x4353, 0x1de0, 0x6756, 0x8c2e, 0x5520, 0x1, 0x1);
        gbc.writeMem(0xa42c, { 0x50 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x4353, gbc.sp());
        EXPECT(0xa42d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa42c));
        // 50 03C5
        gbc.setState(0xa672, 0x9ca5, 0xf910, 0x9139, 0x1514, 0x36e7, 0x0, 0x1);
        gbc.writeMem(0xa672, { 0x50 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9ca5, gbc.sp());
        EXPECT(0xa673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa672));
        // 50 03C6
        gbc.setState(0xbaa4, 0x7b56, 0x8df0, 0x4d0b, 0x6128, 0x2f77, 0x0, 0x1);
        gbc.writeMem(0xbaa4, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7b56, gbc.sp());
        EXPECT(0xbaa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xbaa4));
        // 50 03C7
        gbc.setState(0xde8a, 0x6555, 0xfa80, 0x8adf, 0x51ba, 0x8e8e, 0x0, 0x0);
        gbc.writeMem(0xde8a, { 0x50 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x6555, gbc.sp());
        EXPECT(0xde8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xde8a));
        // 50 03C8
        gbc.setState(0x7322, 0x1f12, 0x3fc0, 0x406c, 0xc7e2, 0xc0b, 0x1, 0x1);
        gbc.writeMem(0x7322, { 0x50 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0x7323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03C9
        gbc.setState(0x55c2, 0xad45, 0x5230, 0xd339, 0x53ab, 0x818, 0x1, 0x0);
        gbc.writeMem(0x55c2, { 0x50 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xad45, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03CA
        gbc.setState(0x96d8, 0x4646, 0xe8e0, 0xe8d7, 0x7ae6, 0x6d87, 0x1, 0x1);
        gbc.writeMem(0x96d8, { 0x50 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4646, gbc.sp());
        EXPECT(0x96d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x96d8));
        // 50 03CB
        gbc.setState(0x9231, 0xbabd, 0x4620, 0x9a04, 0x6aba, 0x7889, 0x0, 0x0);
        gbc.writeMem(0x9231, { 0x50 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbabd, gbc.sp());
        EXPECT(0x9232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9231));
        // 50 03CC
        gbc.setState(0x73d6, 0x4a47, 0x650, 0xb2bb, 0x57e3, 0x83fd, 0x1, 0x1);
        gbc.writeMem(0x73d6, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4a47, gbc.sp());
        EXPECT(0x73d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03CD
        gbc.setState(0xc57b, 0x6f18, 0x2b80, 0x2bb2, 0x7c7f, 0x298c, 0x0, 0x0);
        gbc.writeMem(0xc57b, { 0x50 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6f18, gbc.sp());
        EXPECT(0xc57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc57b));
        // 50 03CE
        gbc.setState(0x23e2, 0x1e13, 0x6ed0, 0xb6bd, 0x2caa, 0x1aef, 0x0, 0x1);
        gbc.writeMem(0x23e2, { 0x50 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1e13, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03CF
        gbc.setState(0x32b3, 0xb6e5, 0xfd20, 0xa86b, 0xc355, 0x758c, 0x0, 0x1);
        gbc.writeMem(0x32b3, { 0x50 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb6e5, gbc.sp());
        EXPECT(0x32b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03D0
        gbc.setState(0xce60, 0x2872, 0x3e10, 0xcded, 0xe07, 0xe40, 0x0, 0x1);
        gbc.writeMem(0xce60, { 0x50 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0xce61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xce60));
        // 50 03D1
        gbc.setState(0xec66, 0x3c27, 0xb100, 0xe0eb, 0x7b84, 0x15a9, 0x0, 0x1);
        gbc.writeMem(0xec66, { 0x50 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0xec67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xec66));
        // 50 03D2
        gbc.setState(0x5fc9, 0x7e7b, 0x5490, 0x79c2, 0x95eb, 0x7b6, 0x1, 0x1);
        gbc.writeMem(0x5fc9, { 0x50 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7e7b, gbc.sp());
        EXPECT(0x5fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03D3
        gbc.setState(0xefa6, 0x3c32, 0x4e00, 0xa559, 0xbeb3, 0xf9b5, 0x0, 0x1);
        gbc.writeMem(0xefa6, { 0x50 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3c32, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xefa6));
        // 50 03D4
        gbc.setState(0xe9f1, 0xb97, 0x54e0, 0x2dd4, 0x78a3, 0xb20b, 0x1, 0x1);
        gbc.writeMem(0xe9f1, { 0x50 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb97, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xe9f1));
        // 50 03D5
        gbc.setState(0x911a, 0xf16e, 0xd010, 0x96c2, 0xb381, 0x2121, 0x0, 0x0);
        gbc.writeMem(0x911a, { 0x50 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf16e, gbc.sp());
        EXPECT(0x911b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x911a));
        // 50 03D6
        gbc.setState(0xdf5e, 0x27e9, 0x6320, 0x48cc, 0xde8c, 0x24c2, 0x0, 0x1);
        gbc.writeMem(0xdf5e, { 0x50 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x27e9, gbc.sp());
        EXPECT(0xdf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xdf5e));
        // 50 03D7
        gbc.setState(0x42cc, 0xaa72, 0x8d30, 0xef0b, 0x530, 0xe194, 0x1, 0x1);
        gbc.writeMem(0x42cc, { 0x50 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaa72, gbc.sp());
        EXPECT(0x42cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03D8
        gbc.setState(0x1784, 0x7cf1, 0xe8e0, 0xa368, 0x705b, 0x7d86, 0x0, 0x1);
        gbc.writeMem(0x1784, { 0x50 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7cf1, gbc.sp());
        EXPECT(0x1785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03D9
        gbc.setState(0x38ee, 0x82f6, 0xafe0, 0xcc6c, 0x6579, 0x6ac, 0x1, 0x1);
        gbc.writeMem(0x38ee, { 0x50 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x82f6, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03DA
        gbc.setState(0xddbf, 0xa07c, 0x5ae0, 0x9873, 0x7d75, 0xd578, 0x0, 0x0);
        gbc.writeMem(0xddbf, { 0x50 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0xddc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xddbf));
        // 50 03DB
        gbc.setState(0x2ed5, 0xad94, 0x8670, 0x809c, 0x8260, 0xc9b6, 0x1, 0x0);
        gbc.writeMem(0x2ed5, { 0x50 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xad94, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03DC
        gbc.setState(0x3358, 0xf939, 0xcea0, 0xdf29, 0x9383, 0x3dd3, 0x0, 0x1);
        gbc.writeMem(0x3358, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03DD
        gbc.setState(0xd981, 0xaf5c, 0x3340, 0x225d, 0xd5f3, 0xcc47, 0x1, 0x1);
        gbc.writeMem(0xd981, { 0x50 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaf5c, gbc.sp());
        EXPECT(0xd982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xd981));
        // 50 03DE
        gbc.setState(0x6eb2, 0x5e97, 0xcee0, 0x54ba, 0x8ce3, 0x6d20, 0x1, 0x0);
        gbc.writeMem(0x6eb2, { 0x50 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5e97, gbc.sp());
        EXPECT(0x6eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03DF
        gbc.setState(0xa51c, 0x2d3a, 0xe700, 0x83c9, 0x5e98, 0xbf65, 0x1, 0x1);
        gbc.writeMem(0xa51c, { 0x50 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2d3a, gbc.sp());
        EXPECT(0xa51d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xa51c));
        // 50 03E0
        gbc.setState(0xeab8, 0xfd00, 0xeda0, 0xa9e8, 0x5a23, 0x447d, 0x1, 0x0);
        gbc.writeMem(0xeab8, { 0x50 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfd00, gbc.sp());
        EXPECT(0xeab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xeab8));
        // 50 03E1
        gbc.setState(0x3d9c, 0xf22d, 0x6b50, 0x9df8, 0xfe51, 0x97fa, 0x1, 0x1);
        gbc.writeMem(0x3d9c, { 0x50 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf22d, gbc.sp());
        EXPECT(0x3d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 50 03E2
        gbc.setState(0xcb9f, 0xb3c9, 0xb710, 0xe24e, 0xf89d, 0x4025, 0x0, 0x0);
        gbc.writeMem(0xcb9f, { 0x50 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb3c9, gbc.sp());
        EXPECT(0xcba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xcb9f));
        // 50 03E3
        gbc.setState(0xc465, 0x690f, 0x1730, 0x9649, 0xb642, 0xf9f2, 0x1, 0x1);
        gbc.writeMem(0xc465, { 0x50 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x690f, gbc.sp());
        EXPECT(0xc466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0xc465));
        // 50 03E4
        gbc.setState(0x9261, 0xd7d8, 0x9c20, 0xe518, 0xbd9e, 0x3494, 0x0, 0x0);
        gbc.writeMem(0x9261, { 0x50 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0x9262, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x9261));
        // 50 03E5
        gbc.setState(0xb0f, 0x3782, 0xd6e0, 0x7989, 0x7332, 0x665d, 0x1, 0x1);
        gbc.writeMem(0xb0f, { 0x50 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3782, gbc.sp());
        EXPECT(0xb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03E6
        gbc.setState(0x6748, 0x7e5b, 0xc140, 0x134e, 0x56e, 0xaedc, 0x0, 0x0);
        gbc.writeMem(0x6748, { 0x50 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7e5b, gbc.sp());
        EXPECT(0x6749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 50 03E7
        gbc.setState(0x4adc, 0xa838, 0x6a0, 0xf7f5, 0x4289, 0x4075, 0x0, 0x1);
        gbc.writeMem(0x4adc, { 0x50 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa838, gbc.sp());
        EXPECT(0x4add, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
