    TEST(gbcemu, opcode_cb_f2) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB F2 0000
        gbc.setState(0x9fd, 0x9bd5, 0x4df0, 0xe9c9, 0xf2a, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0x9fd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9bd5, gbc.sp());
        EXPECT(0x9ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0001
        gbc.setState(0xbd4d, 0x7c4f, 0x6ac0, 0xfb85, 0x3ebc, 0x762f, 0x1, 0x1);
        gbc.writeMem(0xbd4d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c4f, gbc.sp());
        EXPECT(0xbd4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd4d));
        EXPECT(0xf2, gbc.readMem(0xbd4e));
        // CB F2 0002
        gbc.setState(0x7052, 0x987e, 0x860, 0x3586, 0x2391, 0x8d07, 0x1, 0x1);
        gbc.writeMem(0x7052, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0x7054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0003
        gbc.setState(0x8e82, 0xb969, 0xcb10, 0xc4ca, 0x6164, 0xd8b5, 0x1, 0x0);
        gbc.writeMem(0x8e82, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb969, gbc.sp());
        EXPECT(0x8e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e82));
        EXPECT(0xf2, gbc.readMem(0x8e83));
        // CB F2 0004
        gbc.setState(0xbc5c, 0xfc50, 0x8a60, 0xc105, 0xd944, 0x8336, 0x0, 0x0);
        gbc.writeMem(0xbc5c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfc50, gbc.sp());
        EXPECT(0xbc5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5c));
        EXPECT(0xf2, gbc.readMem(0xbc5d));
        // CB F2 0005
        gbc.setState(0x160e, 0x5875, 0x3bb0, 0xa44, 0xee1b, 0x683c, 0x1, 0x0);
        gbc.writeMem(0x160e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5875, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0006
        gbc.setState(0xa32e, 0x1e76, 0xb7b0, 0xc9b5, 0xd4f2, 0x48be, 0x1, 0x0);
        gbc.writeMem(0xa32e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x1e76, gbc.sp());
        EXPECT(0xa330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32e));
        EXPECT(0xf2, gbc.readMem(0xa32f));
        // CB F2 0007
        gbc.setState(0x9fd3, 0x8dcc, 0x58b0, 0x3b80, 0x23fd, 0xe668, 0x0, 0x0);
        gbc.writeMem(0x9fd3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8dcc, gbc.sp());
        EXPECT(0x9fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fd3));
        EXPECT(0xf2, gbc.readMem(0x9fd4));
        // CB F2 0008
        gbc.setState(0xb448, 0xdb53, 0x1f0, 0x3227, 0x222b, 0x8e3d, 0x0, 0x1);
        gbc.writeMem(0xb448, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdb53, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb448));
        EXPECT(0xf2, gbc.readMem(0xb449));
        // CB F2 0009
        gbc.setState(0xc677, 0x3100, 0xe9f0, 0x5a21, 0x981e, 0x7480, 0x1, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3100, gbc.sp());
        EXPECT(0xc679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc677));
        EXPECT(0xf2, gbc.readMem(0xc678));
        // CB F2 000A
        gbc.setState(0xb9e5, 0x1ec5, 0x370, 0x89e0, 0xb138, 0x5ab5, 0x0, 0x0);
        gbc.writeMem(0xb9e5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1ec5, gbc.sp());
        EXPECT(0xb9e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e5));
        EXPECT(0xf2, gbc.readMem(0xb9e6));
        // CB F2 000B
        gbc.setState(0x2b92, 0x8cda, 0x5580, 0x8672, 0xb5d5, 0xdd14, 0x1, 0x1);
        gbc.writeMem(0x2b92, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8cda, gbc.sp());
        EXPECT(0x2b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 000C
        gbc.setState(0xe9a1, 0xa029, 0xfa0, 0x7a36, 0x515a, 0x7936, 0x1, 0x0);
        gbc.writeMem(0xe9a1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa029, gbc.sp());
        EXPECT(0xe9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a1));
        EXPECT(0xf2, gbc.readMem(0xe9a2));
        // CB F2 000D
        gbc.setState(0xa2cf, 0xfba7, 0x8210, 0xc4f9, 0x4ebc, 0xc87b, 0x1, 0x0);
        gbc.writeMem(0xa2cf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfba7, gbc.sp());
        EXPECT(0xa2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2cf));
        EXPECT(0xf2, gbc.readMem(0xa2d0));
        // CB F2 000E
        gbc.setState(0xb0f2, 0x6f3b, 0x6d0, 0x764e, 0x9ad1, 0xd61, 0x1, 0x0);
        gbc.writeMem(0xb0f2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6f3b, gbc.sp());
        EXPECT(0xb0f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f2));
        EXPECT(0xf2, gbc.readMem(0xb0f3));
        // CB F2 000F
        gbc.setState(0xead7, 0xfb61, 0xbde0, 0x38e4, 0x5cfe, 0x811a, 0x1, 0x1);
        gbc.writeMem(0xead7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfb61, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead7));
        EXPECT(0xf2, gbc.readMem(0xead8));
        // CB F2 0010
        gbc.setState(0xb17, 0xca73, 0x6a80, 0x7838, 0x9c73, 0x23cc, 0x0, 0x0);
        gbc.writeMem(0xb17, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xca73, gbc.sp());
        EXPECT(0xb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0011
        gbc.setState(0x92e5, 0x4aa8, 0x8510, 0xa683, 0x66a1, 0xc5ac, 0x1, 0x0);
        gbc.writeMem(0x92e5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0x92e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92e5));
        EXPECT(0xf2, gbc.readMem(0x92e6));
        // CB F2 0012
        gbc.setState(0x1003, 0xf21, 0xb670, 0x9064, 0xf43d, 0x224a, 0x1, 0x0);
        gbc.writeMem(0x1003, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf21, gbc.sp());
        EXPECT(0x1005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0014
        gbc.setState(0x96bb, 0xe587, 0xe970, 0x2fe9, 0x2ef9, 0x6536, 0x1, 0x1);
        gbc.writeMem(0x96bb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe587, gbc.sp());
        EXPECT(0x96bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96bb));
        EXPECT(0xf2, gbc.readMem(0x96bc));
        // CB F2 0015
        gbc.setState(0xcb08, 0x4288, 0x3240, 0x913b, 0xf001, 0x823c, 0x0, 0x0);
        gbc.writeMem(0xcb08, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4288, gbc.sp());
        EXPECT(0xcb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb08));
        EXPECT(0xf2, gbc.readMem(0xcb09));
        // CB F2 0016
        gbc.setState(0xc7b6, 0xd156, 0xb6c0, 0x99e4, 0x4699, 0x598f, 0x1, 0x0);
        gbc.writeMem(0xc7b6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd156, gbc.sp());
        EXPECT(0xc7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b6));
        EXPECT(0xf2, gbc.readMem(0xc7b7));
        // CB F2 0017
        gbc.setState(0xb2cc, 0x86ba, 0xb7c0, 0x75f2, 0x26f3, 0x8399, 0x1, 0x0);
        gbc.writeMem(0xb2cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x86ba, gbc.sp());
        EXPECT(0xb2ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cc));
        EXPECT(0xf2, gbc.readMem(0xb2cd));
        // CB F2 0018
        gbc.setState(0xe9cb, 0x796a, 0x9440, 0x8747, 0x6015, 0xf90, 0x0, 0x0);
        gbc.writeMem(0xe9cb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x796a, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cb));
        EXPECT(0xf2, gbc.readMem(0xe9cc));
        // CB F2 0019
        gbc.setState(0x791d, 0x231e, 0xb020, 0xee8f, 0xcdf7, 0x1ac9, 0x1, 0x1);
        gbc.writeMem(0x791d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x231e, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 001B
        gbc.setState(0xc884, 0x28d9, 0x1910, 0x70a7, 0xd4a4, 0x6612, 0x0, 0x1);
        gbc.writeMem(0xc884, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x28d9, gbc.sp());
        EXPECT(0xc886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc884));
        EXPECT(0xf2, gbc.readMem(0xc885));
        // CB F2 001C
        gbc.setState(0x5eb8, 0x7858, 0x3470, 0xbd83, 0xab65, 0x5690, 0x1, 0x0);
        gbc.writeMem(0x5eb8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7858, gbc.sp());
        EXPECT(0x5eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 001D
        gbc.setState(0xedc2, 0xa2e7, 0x4150, 0xe596, 0x9663, 0xefd5, 0x0, 0x1);
        gbc.writeMem(0xedc2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa2e7, gbc.sp());
        EXPECT(0xedc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc2));
        EXPECT(0xf2, gbc.readMem(0xedc3));
        // CB F2 001E
        gbc.setState(0x8a4b, 0xc804, 0x4ee0, 0xd92f, 0x5ec0, 0xbf45, 0x1, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc804, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0xf2, gbc.readMem(0x8a4c));
        // CB F2 001F
        gbc.setState(0xb569, 0x9515, 0xec20, 0x2db0, 0x214d, 0xc5d0, 0x1, 0x1);
        gbc.writeMem(0xb569, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9515, gbc.sp());
        EXPECT(0xb56b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb569));
        EXPECT(0xf2, gbc.readMem(0xb56a));
        // CB F2 0020
        gbc.setState(0xab3c, 0xead2, 0xe1f0, 0xb97b, 0xb5e7, 0x7f6c, 0x1, 0x0);
        gbc.writeMem(0xab3c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xead2, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3c));
        EXPECT(0xf2, gbc.readMem(0xab3d));
        // CB F2 0021
        gbc.setState(0x3486, 0x38e9, 0xe100, 0x4de0, 0x7c9a, 0x2a4, 0x0, 0x1);
        gbc.writeMem(0x3486, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x38e9, gbc.sp());
        EXPECT(0x3488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0022
        gbc.setState(0x5d90, 0xc906, 0xf510, 0x5de5, 0x8b8, 0xb817, 0x1, 0x1);
        gbc.writeMem(0x5d90, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc906, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0023
        gbc.setState(0x3064, 0x46e9, 0x8640, 0x604b, 0x99dd, 0x7263, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x46e9, gbc.sp());
        EXPECT(0x3066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0024
        gbc.setState(0x9a6d, 0xb748, 0x7fb0, 0x84c5, 0xb8c3, 0xbd2, 0x0, 0x0);
        gbc.writeMem(0x9a6d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb748, gbc.sp());
        EXPECT(0x9a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6d));
        EXPECT(0xf2, gbc.readMem(0x9a6e));
        // CB F2 0025
        gbc.setState(0x9bd4, 0xf565, 0x82c0, 0xdfcd, 0xa04b, 0x11ab, 0x0, 0x1);
        gbc.writeMem(0x9bd4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0x9bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd4));
        EXPECT(0xf2, gbc.readMem(0x9bd5));
        // CB F2 0026
        gbc.setState(0x33c3, 0x832b, 0xea00, 0xff3d, 0x7b27, 0x1da6, 0x1, 0x0);
        gbc.writeMem(0x33c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x832b, gbc.sp());
        EXPECT(0x33c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0027
        gbc.setState(0x4844, 0x6215, 0xbff0, 0xff0c, 0x66a9, 0x998b, 0x1, 0x1);
        gbc.writeMem(0x4844, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6215, gbc.sp());
        EXPECT(0x4846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0028
        gbc.setState(0x8119, 0xb73e, 0x1840, 0x2cd4, 0xf830, 0xb34b, 0x0, 0x0);
        gbc.writeMem(0x8119, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb73e, gbc.sp());
        EXPECT(0x811b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8119));
        EXPECT(0xf2, gbc.readMem(0x811a));
        // CB F2 0029
        gbc.setState(0x799a, 0x4c11, 0xa620, 0x5126, 0xefc8, 0xf04d, 0x1, 0x0);
        gbc.writeMem(0x799a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4c11, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 002A
        gbc.setState(0x195a, 0xe457, 0x69b0, 0x21fe, 0xb8bb, 0x2dac, 0x1, 0x0);
        gbc.writeMem(0x195a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0x195c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 002B
        gbc.setState(0x4d63, 0xa43d, 0x9040, 0x81b5, 0x3fa0, 0xb5b, 0x1, 0x0);
        gbc.writeMem(0x4d63, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa43d, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 002C
        gbc.setState(0xb9b, 0xdd11, 0xae60, 0x68b3, 0x4886, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xb9b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdd11, gbc.sp());
        EXPECT(0xb9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 002D
        gbc.setState(0x2351, 0xd74c, 0x8610, 0xd32a, 0x3d31, 0x9b25, 0x1, 0x0);
        gbc.writeMem(0x2351, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd74c, gbc.sp());
        EXPECT(0x2353, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 002E
        gbc.setState(0x709c, 0xd0d9, 0x3e80, 0x5096, 0x5eef, 0xbaca, 0x0, 0x0);
        gbc.writeMem(0x709c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd0d9, gbc.sp());
        EXPECT(0x709e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 002F
        gbc.setState(0xdba0, 0x6c75, 0xaf30, 0x216, 0x335, 0x6e0, 0x1, 0x0);
        gbc.writeMem(0xdba0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6c75, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba0));
        EXPECT(0xf2, gbc.readMem(0xdba1));
        // CB F2 0030
        gbc.setState(0xc3be, 0xb879, 0x5060, 0x12d5, 0x83e0, 0x5c9d, 0x1, 0x1);
        gbc.writeMem(0xc3be, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb879, gbc.sp());
        EXPECT(0xc3c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3be));
        EXPECT(0xf2, gbc.readMem(0xc3bf));
        // CB F2 0032
        gbc.setState(0x8f55, 0xb0ff, 0x160, 0x86fc, 0xa698, 0xba99, 0x1, 0x1);
        gbc.writeMem(0x8f55, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb0ff, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f55));
        EXPECT(0xf2, gbc.readMem(0x8f56));
        // CB F2 0033
        gbc.setState(0xd16d, 0xfd36, 0x8c40, 0x649e, 0x5344, 0x8c0a, 0x1, 0x1);
        gbc.writeMem(0xd16d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfd36, gbc.sp());
        EXPECT(0xd16f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd16d));
        EXPECT(0xf2, gbc.readMem(0xd16e));
        // CB F2 0034
        gbc.setState(0x79f4, 0xc128, 0x56c0, 0xa1d7, 0xe818, 0x389f, 0x1, 0x1);
        gbc.writeMem(0x79f4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x79f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0035
        gbc.setState(0x28e0, 0xc427, 0x1d80, 0x967b, 0xb460, 0x6b6c, 0x0, 0x0);
        gbc.writeMem(0x28e0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc427, gbc.sp());
        EXPECT(0x28e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0036
        gbc.setState(0x123a, 0x39eb, 0x6d80, 0x271b, 0xce59, 0xf3a6, 0x1, 0x1);
        gbc.writeMem(0x123a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x39eb, gbc.sp());
        EXPECT(0x123c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0037
        gbc.setState(0x20ca, 0x4e0a, 0x7820, 0xe014, 0xb483, 0xaaa2, 0x0, 0x0);
        gbc.writeMem(0x20ca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4e0a, gbc.sp());
        EXPECT(0x20cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0038
        gbc.setState(0x457f, 0x97ee, 0x5470, 0xcbcf, 0xc1ae, 0x92ee, 0x1, 0x0);
        gbc.writeMem(0x457f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x97ee, gbc.sp());
        EXPECT(0x4581, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0039
        gbc.setState(0xb55b, 0xb036, 0x3320, 0xc5d2, 0x9e04, 0xc2dc, 0x1, 0x0);
        gbc.writeMem(0xb55b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb036, gbc.sp());
        EXPECT(0xb55d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55b));
        EXPECT(0xf2, gbc.readMem(0xb55c));
        // CB F2 003A
        gbc.setState(0xe865, 0x29a4, 0x9a40, 0xe398, 0x8353, 0x226b, 0x0, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x29a4, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe865));
        EXPECT(0xf2, gbc.readMem(0xe866));
        // CB F2 003B
        gbc.setState(0xd7c3, 0x7ae3, 0x50c0, 0x2aa, 0xbfdc, 0x796f, 0x0, 0x1);
        gbc.writeMem(0xd7c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7ae3, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c3));
        EXPECT(0xf2, gbc.readMem(0xd7c4));
        // CB F2 003C
        gbc.setState(0x29b8, 0x21dc, 0x16a0, 0x598, 0x5280, 0xe878, 0x1, 0x0);
        gbc.writeMem(0x29b8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x21dc, gbc.sp());
        EXPECT(0x29ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 003D
        gbc.setState(0x86eb, 0xe4d4, 0x8c90, 0x2248, 0xb172, 0xeb6f, 0x0, 0x0);
        gbc.writeMem(0x86eb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe4d4, gbc.sp());
        EXPECT(0x86ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86eb));
        EXPECT(0xf2, gbc.readMem(0x86ec));
        // CB F2 003E
        gbc.setState(0x4964, 0x3eec, 0x8bb0, 0xd422, 0xb162, 0xe25, 0x0, 0x1);
        gbc.writeMem(0x4964, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3eec, gbc.sp());
        EXPECT(0x4966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 003F
        gbc.setState(0x5daf, 0x859a, 0x84b0, 0x9f7f, 0x2bd0, 0xf305, 0x0, 0x0);
        gbc.writeMem(0x5daf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x859a, gbc.sp());
        EXPECT(0x5db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0040
        gbc.setState(0x9593, 0x8edd, 0x4e80, 0x2e18, 0x81b1, 0x1b58, 0x0, 0x1);
        gbc.writeMem(0x9593, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x8edd, gbc.sp());
        EXPECT(0x9595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9593));
        EXPECT(0xf2, gbc.readMem(0x9594));
        // CB F2 0041
        gbc.setState(0x845e, 0xe51e, 0x5600, 0x7774, 0xcd6e, 0xd55b, 0x0, 0x0);
        gbc.writeMem(0x845e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x8460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845e));
        EXPECT(0xf2, gbc.readMem(0x845f));
        // CB F2 0043
        gbc.setState(0x5ee3, 0xdf7c, 0x8a20, 0xe1d2, 0xdfb7, 0xfe48, 0x0, 0x1);
        gbc.writeMem(0x5ee3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0x5ee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0045
        gbc.setState(0xa956, 0x5611, 0x4f20, 0xbad5, 0xd7ed, 0x4c63, 0x1, 0x0);
        gbc.writeMem(0xa956, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5611, gbc.sp());
        EXPECT(0xa958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa956));
        EXPECT(0xf2, gbc.readMem(0xa957));
        // CB F2 0046
        gbc.setState(0x7fca, 0x3220, 0x7800, 0xa4d8, 0x36ab, 0xea7f, 0x1, 0x1);
        gbc.writeMem(0x7fca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3220, gbc.sp());
        EXPECT(0x7fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0047
        gbc.setState(0xb432, 0x480e, 0xe4f0, 0xd6a6, 0xed8, 0x4320, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x480e, gbc.sp());
        EXPECT(0xb434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb432));
        EXPECT(0xf2, gbc.readMem(0xb433));
        // CB F2 0048
        gbc.setState(0xaf2a, 0xeb2e, 0xb6c0, 0x907d, 0x6e3b, 0xa252, 0x0, 0x1);
        gbc.writeMem(0xaf2a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xeb2e, gbc.sp());
        EXPECT(0xaf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2a));
        EXPECT(0xf2, gbc.readMem(0xaf2b));
        // CB F2 0049
        gbc.setState(0x5110, 0x42c0, 0x1210, 0x67c3, 0xabd4, 0x8653, 0x0, 0x0);
        gbc.writeMem(0x5110, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x42c0, gbc.sp());
        EXPECT(0x5112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 004A
        gbc.setState(0xce71, 0x5ed7, 0xa490, 0x477e, 0x8666, 0xa121, 0x0, 0x1);
        gbc.writeMem(0xce71, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5ed7, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce71));
        EXPECT(0xf2, gbc.readMem(0xce72));
        // CB F2 004B
        gbc.setState(0x9ecb, 0x3a1b, 0xff20, 0x41ab, 0xefe9, 0x6eb9, 0x1, 0x1);
        gbc.writeMem(0x9ecb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3a1b, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ecb));
        EXPECT(0xf2, gbc.readMem(0x9ecc));
        // CB F2 004C
        gbc.setState(0xb279, 0xe993, 0xb550, 0xa6ce, 0xe7a8, 0x8ec1, 0x1, 0x1);
        gbc.writeMem(0xb279, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe993, gbc.sp());
        EXPECT(0xb27b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb279));
        EXPECT(0xf2, gbc.readMem(0xb27a));
        // CB F2 004D
        gbc.setState(0xb68f, 0x5614, 0x2340, 0x2054, 0x40c4, 0x70b3, 0x1, 0x1);
        gbc.writeMem(0xb68f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5614, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb68f));
        EXPECT(0xf2, gbc.readMem(0xb690));
        // CB F2 004E
        gbc.setState(0xe86, 0x202, 0x4ea0, 0x1e5f, 0x9cab, 0x4eed, 0x0, 0x0);
        gbc.writeMem(0xe86, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x202, gbc.sp());
        EXPECT(0xe88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 004F
        gbc.setState(0xcddc, 0xc262, 0x1770, 0xb79e, 0x43c4, 0x3577, 0x1, 0x0);
        gbc.writeMem(0xcddc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc262, gbc.sp());
        EXPECT(0xcdde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcddc));
        EXPECT(0xf2, gbc.readMem(0xcddd));
        // CB F2 0050
        gbc.setState(0xda5b, 0x6b4c, 0x5f40, 0xd158, 0x5c31, 0x2136, 0x1, 0x0);
        gbc.writeMem(0xda5b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6b4c, gbc.sp());
        EXPECT(0xda5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda5b));
        EXPECT(0xf2, gbc.readMem(0xda5c));
        // CB F2 0051
        gbc.setState(0x133c, 0x3602, 0xf910, 0xd16e, 0x40df, 0x6778, 0x1, 0x1);
        gbc.writeMem(0x133c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3602, gbc.sp());
        EXPECT(0x133e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0052
        gbc.setState(0xea03, 0xe7e0, 0xb320, 0x1e5c, 0xba8f, 0xb3af, 0x1, 0x0);
        gbc.writeMem(0xea03, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe7e0, gbc.sp());
        EXPECT(0xea05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea03));
        EXPECT(0xf2, gbc.readMem(0xea04));
        // CB F2 0053
        gbc.setState(0x78c4, 0x1afc, 0xc360, 0x5a48, 0xcbda, 0x35b9, 0x1, 0x0);
        gbc.writeMem(0x78c4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1afc, gbc.sp());
        EXPECT(0x78c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0054
        gbc.setState(0x6102, 0x4a99, 0x9110, 0x286, 0x8c5a, 0xba4b, 0x0, 0x1);
        gbc.writeMem(0x6102, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4a99, gbc.sp());
        EXPECT(0x6104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0055
        gbc.setState(0x6198, 0x5856, 0xf570, 0x7b97, 0x3c5c, 0xc1ad, 0x0, 0x0);
        gbc.writeMem(0x6198, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0x619a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0056
        gbc.setState(0xafda, 0x4622, 0xa780, 0x6f33, 0x18fc, 0xb551, 0x1, 0x0);
        gbc.writeMem(0xafda, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4622, gbc.sp());
        EXPECT(0xafdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafda));
        EXPECT(0xf2, gbc.readMem(0xafdb));
        // CB F2 0057
        gbc.setState(0x710f, 0x169c, 0x86b0, 0x57eb, 0xb7c3, 0xde09, 0x1, 0x1);
        gbc.writeMem(0x710f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x169c, gbc.sp());
        EXPECT(0x7111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0058
        gbc.setState(0x51a, 0xd5f7, 0x640, 0x41c3, 0xc037, 0x36b4, 0x1, 0x1);
        gbc.writeMem(0x51a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd5f7, gbc.sp());
        EXPECT(0x51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0059
        gbc.setState(0xe5d6, 0xa59e, 0xa420, 0xff92, 0x4778, 0x6ab2, 0x1, 0x1);
        gbc.writeMem(0xe5d6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa59e, gbc.sp());
        EXPECT(0xe5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d6));
        EXPECT(0xf2, gbc.readMem(0xe5d7));
        // CB F2 005A
        gbc.setState(0x7796, 0x5d9c, 0x7ac0, 0xd389, 0x1d26, 0xb1b9, 0x0, 0x1);
        gbc.writeMem(0x7796, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x5d9c, gbc.sp());
        EXPECT(0x7798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 005B
        gbc.setState(0xef11, 0x18c1, 0xdf00, 0x47b0, 0x9e6a, 0xc103, 0x0, 0x1);
        gbc.writeMem(0xef11, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x18c1, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef11));
        EXPECT(0xf2, gbc.readMem(0xef12));
        // CB F2 005D
        gbc.setState(0xa976, 0x2c20, 0x9f80, 0x4d68, 0xd2d, 0xdd67, 0x1, 0x1);
        gbc.writeMem(0xa976, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2c20, gbc.sp());
        EXPECT(0xa978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa976));
        EXPECT(0xf2, gbc.readMem(0xa977));
        // CB F2 005E
        gbc.setState(0xa8f1, 0xedab, 0x50e0, 0xbd28, 0x9804, 0xc773, 0x0, 0x0);
        gbc.writeMem(0xa8f1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xedab, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xf2, gbc.readMem(0xa8f2));
        // CB F2 005F
        gbc.setState(0x758b, 0x5497, 0xd980, 0x48f4, 0x2d5b, 0x97b8, 0x1, 0x1);
        gbc.writeMem(0x758b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5497, gbc.sp());
        EXPECT(0x758d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0060
        gbc.setState(0xed61, 0xd977, 0x81e0, 0x6566, 0xef18, 0x9ebb, 0x0, 0x0);
        gbc.writeMem(0xed61, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0xed63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed61));
        EXPECT(0xf2, gbc.readMem(0xed62));
        // CB F2 0061
        gbc.setState(0x5353, 0xe2b3, 0x6900, 0x883f, 0x3258, 0xa0e, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe2b3, gbc.sp());
        EXPECT(0x5355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0062
        gbc.setState(0x2eea, 0x2244, 0xa280, 0x5227, 0x4172, 0x50eb, 0x1, 0x1);
        gbc.writeMem(0x2eea, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0063
        gbc.setState(0xef99, 0x6c91, 0xeb80, 0x1940, 0x9d76, 0xe86c, 0x1, 0x1);
        gbc.writeMem(0xef99, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6c91, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef99));
        EXPECT(0xf2, gbc.readMem(0xef9a));
        // CB F2 0064
        gbc.setState(0xac97, 0xb008, 0xf9c0, 0xd80c, 0x363e, 0x74d9, 0x1, 0x1);
        gbc.writeMem(0xac97, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb008, gbc.sp());
        EXPECT(0xac99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac97));
        EXPECT(0xf2, gbc.readMem(0xac98));
        // CB F2 0065
        gbc.setState(0xb5de, 0x6840, 0x5980, 0xded0, 0xaf, 0xdb3f, 0x0, 0x0);
        gbc.writeMem(0xb5de, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6840, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5de));
        EXPECT(0xf2, gbc.readMem(0xb5df));
        // CB F2 0066
        gbc.setState(0x8541, 0xa67c, 0x85d0, 0x20f5, 0x216c, 0x615e, 0x0, 0x0);
        gbc.writeMem(0x8541, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa67c, gbc.sp());
        EXPECT(0x8543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8541));
        EXPECT(0xf2, gbc.readMem(0x8542));
        // CB F2 0067
        gbc.setState(0x2e07, 0x6006, 0x1f80, 0xb220, 0x671, 0x9ea1, 0x1, 0x1);
        gbc.writeMem(0x2e07, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6006, gbc.sp());
        EXPECT(0x2e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0068
        gbc.setState(0x91f3, 0xf59c, 0xde10, 0xe0c8, 0x7817, 0xb00d, 0x0, 0x1);
        gbc.writeMem(0x91f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0x91f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f3));
        EXPECT(0xf2, gbc.readMem(0x91f4));
        // CB F2 0069
        gbc.setState(0x7e8, 0x7b3b, 0x52e0, 0x9a38, 0x6b16, 0xe8d8, 0x1, 0x1);
        gbc.writeMem(0x7e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b3b, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 006A
        gbc.setState(0x4aa4, 0x84b6, 0x2570, 0xf781, 0xe5c4, 0x7fd2, 0x1, 0x1);
        gbc.writeMem(0x4aa4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x84b6, gbc.sp());
        EXPECT(0x4aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 006B
        gbc.setState(0x8f10, 0x6b74, 0xe290, 0x41b, 0xb5c9, 0xc8c1, 0x0, 0x0);
        gbc.writeMem(0x8f10, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6b74, gbc.sp());
        EXPECT(0x8f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f10));
        EXPECT(0xf2, gbc.readMem(0x8f11));
        // CB F2 006C
        gbc.setState(0x4cd8, 0x3cd9, 0x9350, 0xba18, 0xe6d1, 0xdaa1, 0x1, 0x0);
        gbc.writeMem(0x4cd8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3cd9, gbc.sp());
        EXPECT(0x4cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 006D
        gbc.setState(0xbd49, 0xf2e3, 0xd900, 0xc450, 0xb683, 0x5cae, 0x0, 0x1);
        gbc.writeMem(0xbd49, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf2e3, gbc.sp());
        EXPECT(0xbd4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd49));
        EXPECT(0xf2, gbc.readMem(0xbd4a));
        // CB F2 006E
        gbc.setState(0x1dcf, 0x5b50, 0x3760, 0xfdd1, 0x6bd7, 0x4c2e, 0x0, 0x0);
        gbc.writeMem(0x1dcf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0x1dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 006F
        gbc.setState(0x1e00, 0xf2ef, 0x8600, 0x279b, 0xac70, 0x5608, 0x0, 0x0);
        gbc.writeMem(0x1e00, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf2ef, gbc.sp());
        EXPECT(0x1e02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0070
        gbc.setState(0xea9e, 0x2b39, 0xe170, 0x664b, 0x21e8, 0x238e, 0x0, 0x0);
        gbc.writeMem(0xea9e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2b39, gbc.sp());
        EXPECT(0xeaa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea9e));
        EXPECT(0xf2, gbc.readMem(0xea9f));
        // CB F2 0071
        gbc.setState(0x9337, 0x3b1f, 0x2be0, 0x674a, 0x9c17, 0x7d9e, 0x0, 0x1);
        gbc.writeMem(0x9337, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b1f, gbc.sp());
        EXPECT(0x9339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9337));
        EXPECT(0xf2, gbc.readMem(0x9338));
        // CB F2 0072
        gbc.setState(0x295b, 0x4eb2, 0xe7b0, 0x5942, 0x74af, 0xf3a0, 0x0, 0x0);
        gbc.writeMem(0x295b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4eb2, gbc.sp());
        EXPECT(0x295d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0073
        gbc.setState(0x7141, 0xbc4f, 0xdcc0, 0xe3de, 0x9fdf, 0xbc8e, 0x1, 0x1);
        gbc.writeMem(0x7141, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0x7143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0074
        gbc.setState(0x9442, 0xbe28, 0xdb40, 0xe72a, 0xf6b4, 0x7e41, 0x0, 0x1);
        gbc.writeMem(0x9442, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xbe28, gbc.sp());
        EXPECT(0x9444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9442));
        EXPECT(0xf2, gbc.readMem(0x9443));
        // CB F2 0075
        gbc.setState(0xbde4, 0x998f, 0x4870, 0xd901, 0xe46d, 0x8627, 0x0, 0x1);
        gbc.writeMem(0xbde4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x998f, gbc.sp());
        EXPECT(0xbde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde4));
        EXPECT(0xf2, gbc.readMem(0xbde5));
        // CB F2 0076
        gbc.setState(0xb4c1, 0x5aa9, 0x7e20, 0x17e1, 0xd373, 0x412f, 0x1, 0x1);
        gbc.writeMem(0xb4c1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x5aa9, gbc.sp());
        EXPECT(0xb4c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c1));
        EXPECT(0xf2, gbc.readMem(0xb4c2));
        // CB F2 0077
        gbc.setState(0xdf95, 0x9b00, 0xda00, 0xd585, 0x149, 0x18b4, 0x1, 0x1);
        gbc.writeMem(0xdf95, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0xdf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf95));
        EXPECT(0xf2, gbc.readMem(0xdf96));
        // CB F2 0078
        gbc.setState(0x1111, 0x4242, 0xc2d0, 0x643a, 0x5c5e, 0x3af, 0x0, 0x1);
        gbc.writeMem(0x1111, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4242, gbc.sp());
        EXPECT(0x1113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0079
        gbc.setState(0xdc55, 0xe7, 0xba50, 0x5936, 0xaea2, 0xe306, 0x0, 0x1);
        gbc.writeMem(0xdc55, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe7, gbc.sp());
        EXPECT(0xdc57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc55));
        EXPECT(0xf2, gbc.readMem(0xdc56));
        // CB F2 007A
        gbc.setState(0x96e, 0x88dd, 0xbc10, 0xa3bc, 0xdab3, 0xcdea, 0x0, 0x0);
        gbc.writeMem(0x96e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 007B
        gbc.setState(0xa02c, 0x312f, 0x2e0, 0x3c74, 0x946e, 0x9224, 0x1, 0x0);
        gbc.writeMem(0xa02c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x312f, gbc.sp());
        EXPECT(0xa02e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa02c));
        EXPECT(0xf2, gbc.readMem(0xa02d));
        // CB F2 007C
        gbc.setState(0x7b78, 0x4147, 0xd0c0, 0x4f40, 0xda87, 0x64e9, 0x0, 0x1);
        gbc.writeMem(0x7b78, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4147, gbc.sp());
        EXPECT(0x7b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 007D
        gbc.setState(0x22c, 0x3354, 0xd360, 0xa4b4, 0xa45a, 0x5104, 0x0, 0x1);
        gbc.writeMem(0x22c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 007E
        gbc.setState(0xc161, 0xe27c, 0x75f0, 0xa295, 0x63b4, 0x7220, 0x0, 0x1);
        gbc.writeMem(0xc161, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe27c, gbc.sp());
        EXPECT(0xc163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc161));
        EXPECT(0xf2, gbc.readMem(0xc162));
        // CB F2 007F
        gbc.setState(0x7a8b, 0x3445, 0xd3e0, 0x2961, 0xbaa9, 0xf808, 0x1, 0x1);
        gbc.writeMem(0x7a8b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3445, gbc.sp());
        EXPECT(0x7a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0080
        gbc.setState(0x6284, 0x7562, 0xfd40, 0xef58, 0xa1de, 0x1924, 0x0, 0x1);
        gbc.writeMem(0x6284, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7562, gbc.sp());
        EXPECT(0x6286, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0081
        gbc.setState(0x3dfa, 0x5bd6, 0x22d0, 0x19f8, 0x7145, 0xd815, 0x0, 0x1);
        gbc.writeMem(0x3dfa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5bd6, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0082
        gbc.setState(0x8952, 0xc289, 0xa490, 0xdad1, 0xb7d3, 0x65f6, 0x0, 0x0);
        gbc.writeMem(0x8952, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0x8954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8952));
        EXPECT(0xf2, gbc.readMem(0x8953));
        // CB F2 0083
        gbc.setState(0xdef7, 0x1b99, 0x410, 0xba92, 0xfbcf, 0xd955, 0x0, 0x1);
        gbc.writeMem(0xdef7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1b99, gbc.sp());
        EXPECT(0xdef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdef7));
        EXPECT(0xf2, gbc.readMem(0xdef8));
        // CB F2 0084
        gbc.setState(0x2f08, 0xb898, 0x8b70, 0x160b, 0x8133, 0xae5b, 0x1, 0x0);
        gbc.writeMem(0x2f08, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb898, gbc.sp());
        EXPECT(0x2f0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0085
        gbc.setState(0xab5b, 0xf450, 0x39f0, 0x730e, 0xd84b, 0x8a46, 0x0, 0x0);
        gbc.writeMem(0xab5b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf450, gbc.sp());
        EXPECT(0xab5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5b));
        EXPECT(0xf2, gbc.readMem(0xab5c));
        // CB F2 0086
        gbc.setState(0x3467, 0xdd24, 0x9c50, 0x7cfb, 0xa3fc, 0xcdc4, 0x1, 0x0);
        gbc.writeMem(0x3467, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xdd24, gbc.sp());
        EXPECT(0x3469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0087
        gbc.setState(0xed0f, 0xe63f, 0x2e00, 0xfea2, 0xd629, 0xa2c1, 0x1, 0x1);
        gbc.writeMem(0xed0f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe63f, gbc.sp());
        EXPECT(0xed11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed0f));
        EXPECT(0xf2, gbc.readMem(0xed10));
        // CB F2 0088
        gbc.setState(0x3809, 0xe38c, 0x11d0, 0x3f84, 0x9d93, 0xb8d1, 0x1, 0x1);
        gbc.writeMem(0x3809, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe38c, gbc.sp());
        EXPECT(0x380b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0089
        gbc.setState(0x33ca, 0xee70, 0x22d0, 0xfea9, 0x7663, 0x7bda, 0x0, 0x1);
        gbc.writeMem(0x33ca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xee70, gbc.sp());
        EXPECT(0x33cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 008A
        gbc.setState(0x9c3a, 0xeae3, 0x5ec0, 0x4bad, 0x4e67, 0xacc3, 0x1, 0x0);
        gbc.writeMem(0x9c3a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xeae3, gbc.sp());
        EXPECT(0x9c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3a));
        EXPECT(0xf2, gbc.readMem(0x9c3b));
        // CB F2 008B
        gbc.setState(0xe32e, 0x5a02, 0x770, 0x679c, 0xbcc1, 0x3ec0, 0x0, 0x0);
        gbc.writeMem(0xe32e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x5a02, gbc.sp());
        EXPECT(0xe330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32e));
        EXPECT(0xf2, gbc.readMem(0xe32f));
        // CB F2 008C
        gbc.setState(0xe96f, 0x7616, 0xe460, 0x23ff, 0xef77, 0xa1b5, 0x0, 0x0);
        gbc.writeMem(0xe96f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7616, gbc.sp());
        EXPECT(0xe971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe96f));
        EXPECT(0xf2, gbc.readMem(0xe970));
        // CB F2 008D
        gbc.setState(0x58d5, 0x1463, 0xea80, 0xe73a, 0x717, 0xd894, 0x1, 0x1);
        gbc.writeMem(0x58d5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1463, gbc.sp());
        EXPECT(0x58d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 008E
        gbc.setState(0x82c3, 0x57e7, 0xcc70, 0x83e9, 0xebe4, 0xc5df, 0x1, 0x1);
        gbc.writeMem(0x82c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x57e7, gbc.sp());
        EXPECT(0x82c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c3));
        EXPECT(0xf2, gbc.readMem(0x82c4));
        // CB F2 008F
        gbc.setState(0x5fe2, 0x34b3, 0x670, 0x2d24, 0x1033, 0xb59d, 0x0, 0x0);
        gbc.writeMem(0x5fe2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x34b3, gbc.sp());
        EXPECT(0x5fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0090
        gbc.setState(0x7c34, 0x6270, 0x7620, 0x77d4, 0xe2c6, 0xea9d, 0x1, 0x1);
        gbc.writeMem(0x7c34, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6270, gbc.sp());
        EXPECT(0x7c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0091
        gbc.setState(0xc7f2, 0x8b94, 0x2a0, 0xb3dc, 0x58b9, 0xb4bb, 0x1, 0x1);
        gbc.writeMem(0xc7f2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8b94, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f2));
        EXPECT(0xf2, gbc.readMem(0xc7f3));
        // CB F2 0092
        gbc.setState(0x92cd, 0xc2e4, 0x9cc0, 0x227a, 0xa619, 0xe5c6, 0x1, 0x1);
        gbc.writeMem(0x92cd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc2e4, gbc.sp());
        EXPECT(0x92cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92cd));
        EXPECT(0xf2, gbc.readMem(0x92ce));
        // CB F2 0093
        gbc.setState(0x4ad6, 0x3dd6, 0x33d0, 0x8f38, 0x3959, 0xe7d7, 0x1, 0x1);
        gbc.writeMem(0x4ad6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3dd6, gbc.sp());
        EXPECT(0x4ad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0095
        gbc.setState(0x5b4c, 0x61f3, 0xa790, 0x9961, 0x5d41, 0x6e4b, 0x0, 0x0);
        gbc.writeMem(0x5b4c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0096
        gbc.setState(0x65f9, 0x7a10, 0xea20, 0xb826, 0xf318, 0x5b02, 0x0, 0x1);
        gbc.writeMem(0x65f9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7a10, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0098
        gbc.setState(0xc4c1, 0x55cf, 0xf4b0, 0x911, 0x1f17, 0x1b09, 0x0, 0x1);
        gbc.writeMem(0xc4c1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x55cf, gbc.sp());
        EXPECT(0xc4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c1));
        EXPECT(0xf2, gbc.readMem(0xc4c2));
        // CB F2 0099
        gbc.setState(0x471, 0x70b3, 0xd8b0, 0x5732, 0x2f58, 0x193e, 0x1, 0x0);
        gbc.writeMem(0x471, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x70b3, gbc.sp());
        EXPECT(0x473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 009A
        gbc.setState(0x2ab3, 0x1d60, 0x50, 0x568, 0xb6ec, 0x4ecb, 0x1, 0x1);
        gbc.writeMem(0x2ab3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1d60, gbc.sp());
        EXPECT(0x2ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 009B
        gbc.setState(0xc12b, 0x1411, 0xd940, 0x1a1b, 0x2c08, 0x5e8e, 0x0, 0x0);
        gbc.writeMem(0xc12b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1411, gbc.sp());
        EXPECT(0xc12d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12b));
        EXPECT(0xf2, gbc.readMem(0xc12c));
        // CB F2 009C
        gbc.setState(0xd6e1, 0x466f, 0x35c0, 0x1c96, 0xcb43, 0x672d, 0x1, 0x1);
        gbc.writeMem(0xd6e1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0xd6e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e1));
        EXPECT(0xf2, gbc.readMem(0xd6e2));
        // CB F2 009D
        gbc.setState(0x4ab, 0x6fbb, 0x7960, 0x4257, 0x21f6, 0x61ed, 0x1, 0x0);
        gbc.writeMem(0x4ab, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6fbb, gbc.sp());
        EXPECT(0x4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 009E
        gbc.setState(0xa4c6, 0xb798, 0x79b0, 0x34d4, 0x4ba0, 0x6676, 0x0, 0x0);
        gbc.writeMem(0xa4c6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c6));
        EXPECT(0xf2, gbc.readMem(0xa4c7));
        // CB F2 009F
        gbc.setState(0xb806, 0x62c0, 0xba60, 0x8b55, 0xfd8e, 0xffa1, 0x0, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x62c0, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb806));
        EXPECT(0xf2, gbc.readMem(0xb807));
        // CB F2 00A0
        gbc.setState(0xa737, 0x826d, 0x310, 0x5b82, 0xae2d, 0x57b0, 0x1, 0x1);
        gbc.writeMem(0xa737, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x826d, gbc.sp());
        EXPECT(0xa739, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa737));
        EXPECT(0xf2, gbc.readMem(0xa738));
        // CB F2 00A1
        gbc.setState(0x1697, 0xa6f7, 0x2450, 0xe385, 0x3efe, 0x93b5, 0x1, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa6f7, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00A2
        gbc.setState(0xce71, 0xbbd7, 0x9910, 0x8747, 0x6b65, 0xd745, 0x0, 0x0);
        gbc.writeMem(0xce71, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbbd7, gbc.sp());
        EXPECT(0xce73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce71));
        EXPECT(0xf2, gbc.readMem(0xce72));
        // CB F2 00A3
        gbc.setState(0x521c, 0x5fc7, 0xbf40, 0xae40, 0x5057, 0xfc7a, 0x1, 0x0);
        gbc.writeMem(0x521c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5fc7, gbc.sp());
        EXPECT(0x521e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00A4
        gbc.setState(0xc937, 0xac8d, 0x8820, 0x8c25, 0xe01c, 0xba29, 0x0, 0x1);
        gbc.writeMem(0xc937, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xac8d, gbc.sp());
        EXPECT(0xc939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc937));
        EXPECT(0xf2, gbc.readMem(0xc938));
        // CB F2 00A5
        gbc.setState(0x2a9c, 0xc430, 0xd500, 0x6dc0, 0xd00, 0x90eb, 0x0, 0x1);
        gbc.writeMem(0x2a9c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc430, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00A6
        gbc.setState(0xbd93, 0x36d0, 0x3e0, 0x3bc1, 0xa874, 0x88c7, 0x0, 0x1);
        gbc.writeMem(0xbd93, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x36d0, gbc.sp());
        EXPECT(0xbd95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd93));
        EXPECT(0xf2, gbc.readMem(0xbd94));
        // CB F2 00A7
        gbc.setState(0x2f7, 0xcff8, 0x49f0, 0xdadc, 0x45ee, 0xb4c, 0x0, 0x0);
        gbc.writeMem(0x2f7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcff8, gbc.sp());
        EXPECT(0x2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00A8
        gbc.setState(0xe7b3, 0xb0bc, 0x4a90, 0xbfdc, 0xbd79, 0xf10a, 0x0, 0x0);
        gbc.writeMem(0xe7b3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb0bc, gbc.sp());
        EXPECT(0xe7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b3));
        EXPECT(0xf2, gbc.readMem(0xe7b4));
        // CB F2 00A9
        gbc.setState(0x748, 0xf5f, 0xf20, 0x3bd5, 0xfd85, 0x7163, 0x1, 0x1);
        gbc.writeMem(0x748, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf5f, gbc.sp());
        EXPECT(0x74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00AA
        gbc.setState(0xa6cc, 0xf9b, 0x6e30, 0xa170, 0x2ae3, 0xa3c9, 0x0, 0x0);
        gbc.writeMem(0xa6cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf9b, gbc.sp());
        EXPECT(0xa6ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6cc));
        EXPECT(0xf2, gbc.readMem(0xa6cd));
        // CB F2 00AB
        gbc.setState(0x439c, 0x42ec, 0xceb0, 0x702f, 0x86ea, 0x4646, 0x1, 0x1);
        gbc.writeMem(0x439c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x42ec, gbc.sp());
        EXPECT(0x439e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00AC
        gbc.setState(0x9a66, 0xb4a3, 0x8bf0, 0x12b4, 0xe5a7, 0x1fa1, 0x1, 0x1);
        gbc.writeMem(0x9a66, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb4a3, gbc.sp());
        EXPECT(0x9a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a66));
        EXPECT(0xf2, gbc.readMem(0x9a67));
        // CB F2 00AD
        gbc.setState(0xbc39, 0x8b66, 0xe5b0, 0xf80, 0x6baf, 0x7d0e, 0x0, 0x1);
        gbc.writeMem(0xbc39, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8b66, gbc.sp());
        EXPECT(0xbc3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc39));
        EXPECT(0xf2, gbc.readMem(0xbc3a));
        // CB F2 00AE
        gbc.setState(0xf29, 0xca5, 0x13a0, 0xc3c3, 0x1ff2, 0x77a6, 0x0, 0x0);
        gbc.writeMem(0xf29, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xca5, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00B1
        gbc.setState(0xb83, 0x95c3, 0x6cb0, 0xb686, 0xbddd, 0x8b2e, 0x1, 0x1);
        gbc.writeMem(0xb83, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x95c3, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00B2
        gbc.setState(0x4edc, 0x11a4, 0xc4d0, 0xed82, 0x7a93, 0x8671, 0x0, 0x1);
        gbc.writeMem(0x4edc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x11a4, gbc.sp());
        EXPECT(0x4ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00B3
        gbc.setState(0x4f33, 0x6459, 0x89f0, 0x1702, 0xe5f9, 0xfe8f, 0x0, 0x0);
        gbc.writeMem(0x4f33, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x4f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00B4
        gbc.setState(0x9e5c, 0xddc9, 0xc840, 0x6431, 0xba5, 0xfa4, 0x0, 0x0);
        gbc.writeMem(0x9e5c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xddc9, gbc.sp());
        EXPECT(0x9e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5c));
        EXPECT(0xf2, gbc.readMem(0x9e5d));
        // CB F2 00B5
        gbc.setState(0x8de2, 0x487, 0x5ad0, 0x57f7, 0x7d3d, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0x8de2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x487, gbc.sp());
        EXPECT(0x8de4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8de2));
        EXPECT(0xf2, gbc.readMem(0x8de3));
        // CB F2 00B6
        gbc.setState(0x6c3, 0xda8c, 0xd930, 0x7ea9, 0x32ca, 0x7e81, 0x0, 0x1);
        gbc.writeMem(0x6c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xda8c, gbc.sp());
        EXPECT(0x6c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00B7
        gbc.setState(0xdb9, 0x9140, 0x6540, 0x9349, 0x6389, 0xa760, 0x1, 0x0);
        gbc.writeMem(0xdb9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9140, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00B8
        gbc.setState(0xcf1e, 0xf14e, 0x2280, 0x84db, 0x2a7f, 0x29e3, 0x1, 0x0);
        gbc.writeMem(0xcf1e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf14e, gbc.sp());
        EXPECT(0xcf20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf1e));
        EXPECT(0xf2, gbc.readMem(0xcf1f));
        // CB F2 00B9
        gbc.setState(0xb39b, 0x33e9, 0xada0, 0x5914, 0xdbca, 0x86af, 0x1, 0x1);
        gbc.writeMem(0xb39b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x33e9, gbc.sp());
        EXPECT(0xb39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39b));
        EXPECT(0xf2, gbc.readMem(0xb39c));
        // CB F2 00BA
        gbc.setState(0x2005, 0xc8d9, 0x89f0, 0x5f9b, 0x48da, 0x1686, 0x1, 0x1);
        gbc.writeMem(0x2005, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xc8d9, gbc.sp());
        EXPECT(0x2007, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00BB
        gbc.setState(0xcbbc, 0x5a5c, 0x66a0, 0xb580, 0xe5a, 0xbd77, 0x1, 0x0);
        gbc.writeMem(0xcbbc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5a5c, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbc));
        EXPECT(0xf2, gbc.readMem(0xcbbd));
        // CB F2 00BC
        gbc.setState(0x340e, 0x9ca3, 0x330, 0xc95f, 0x286d, 0xe93c, 0x0, 0x0);
        gbc.writeMem(0x340e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9ca3, gbc.sp());
        EXPECT(0x3410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00BD
        gbc.setState(0x623e, 0x7018, 0x1e00, 0xda7d, 0x937e, 0xabeb, 0x0, 0x1);
        gbc.writeMem(0x623e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7018, gbc.sp());
        EXPECT(0x6240, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00BE
        gbc.setState(0xc505, 0xad49, 0x8740, 0xa42, 0x10e1, 0x65ee, 0x0, 0x0);
        gbc.writeMem(0xc505, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xad49, gbc.sp());
        EXPECT(0xc507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc505));
        EXPECT(0xf2, gbc.readMem(0xc506));
        // CB F2 00BF
        gbc.setState(0x5a83, 0xbbb7, 0xb200, 0x545d, 0xd9b9, 0x54a5, 0x1, 0x1);
        gbc.writeMem(0x5a83, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbbb7, gbc.sp());
        EXPECT(0x5a85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00C0
        gbc.setState(0x34ea, 0xa436, 0xa370, 0x6b8c, 0x230e, 0x3cf1, 0x0, 0x1);
        gbc.writeMem(0x34ea, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xa436, gbc.sp());
        EXPECT(0x34ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00C1
        gbc.setState(0x6918, 0x3724, 0xfb0, 0x46c0, 0xcc41, 0x8a30, 0x1, 0x1);
        gbc.writeMem(0x6918, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0x691a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00C2
        gbc.setState(0x51e8, 0x462f, 0xfb40, 0x960d, 0xddd6, 0xf015, 0x1, 0x0);
        gbc.writeMem(0x51e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x462f, gbc.sp());
        EXPECT(0x51ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00C3
        gbc.setState(0xefc3, 0x628a, 0x7700, 0x54aa, 0xc299, 0x1c46, 0x0, 0x0);
        gbc.writeMem(0xefc3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x628a, gbc.sp());
        EXPECT(0xefc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc3));
        EXPECT(0xf2, gbc.readMem(0xefc4));
        // CB F2 00C4
        gbc.setState(0x7d9d, 0x2522, 0x8040, 0xe81c, 0xbe50, 0xc54a, 0x1, 0x1);
        gbc.writeMem(0x7d9d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2522, gbc.sp());
        EXPECT(0x7d9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00C5
        gbc.setState(0xcbbe, 0xbb2, 0xcf40, 0x3006, 0xca4f, 0x710f, 0x1, 0x0);
        gbc.writeMem(0xcbbe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xbb2, gbc.sp());
        EXPECT(0xcbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbe));
        EXPECT(0xf2, gbc.readMem(0xcbbf));
        // CB F2 00C6
        gbc.setState(0x9788, 0xad10, 0x1ae0, 0x6229, 0xd0af, 0x2f50, 0x0, 0x0);
        gbc.writeMem(0x9788, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xad10, gbc.sp());
        EXPECT(0x978a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9788));
        EXPECT(0xf2, gbc.readMem(0x9789));
        // CB F2 00C7
        gbc.setState(0x8d88, 0x7973, 0xa320, 0x4c67, 0xaedc, 0x2be1, 0x0, 0x0);
        gbc.writeMem(0x8d88, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7973, gbc.sp());
        EXPECT(0x8d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d88));
        EXPECT(0xf2, gbc.readMem(0x8d89));
        // CB F2 00C8
        gbc.setState(0x6bf3, 0xabc7, 0x47e0, 0x43f7, 0x6c7, 0x2382, 0x1, 0x1);
        gbc.writeMem(0x6bf3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xabc7, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00C9
        gbc.setState(0x1ac8, 0xa405, 0x3650, 0x548d, 0x30e, 0xb9d7, 0x1, 0x1);
        gbc.writeMem(0x1ac8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa405, gbc.sp());
        EXPECT(0x1aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00CA
        gbc.setState(0xebc1, 0xf47e, 0x68b0, 0xce0d, 0xe200, 0x51d0, 0x0, 0x0);
        gbc.writeMem(0xebc1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf47e, gbc.sp());
        EXPECT(0xebc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc1));
        EXPECT(0xf2, gbc.readMem(0xebc2));
        // CB F2 00CB
        gbc.setState(0x52e9, 0xdc79, 0x63f0, 0xf01d, 0x8e59, 0xbfa4, 0x1, 0x0);
        gbc.writeMem(0x52e9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xdc79, gbc.sp());
        EXPECT(0x52eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00CC
        gbc.setState(0xe3b7, 0xcd78, 0xc560, 0xd29d, 0x8cb9, 0x45b8, 0x0, 0x0);
        gbc.writeMem(0xe3b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xcd78, gbc.sp());
        EXPECT(0xe3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b7));
        EXPECT(0xf2, gbc.readMem(0xe3b8));
        // CB F2 00CD
        gbc.setState(0x4fc7, 0xe8f8, 0xda00, 0x8e15, 0xb566, 0xa22, 0x0, 0x0);
        gbc.writeMem(0x4fc7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe8f8, gbc.sp());
        EXPECT(0x4fc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00CE
        gbc.setState(0xe8b5, 0xe2a1, 0x2940, 0xc1b6, 0xe207, 0x8b, 0x1, 0x0);
        gbc.writeMem(0xe8b5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xe2a1, gbc.sp());
        EXPECT(0xe8b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b5));
        EXPECT(0xf2, gbc.readMem(0xe8b6));
        // CB F2 00CF
        gbc.setState(0x377, 0xa8be, 0xf3c0, 0xe7d2, 0xa234, 0x19b3, 0x1, 0x0);
        gbc.writeMem(0x377, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0x379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00D0
        gbc.setState(0xd841, 0x7df2, 0xc680, 0xe45a, 0x5b54, 0x4256, 0x1, 0x1);
        gbc.writeMem(0xd841, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0xd843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd841));
        EXPECT(0xf2, gbc.readMem(0xd842));
        // CB F2 00D1
        gbc.setState(0x69c8, 0x891c, 0x5a50, 0xd6ac, 0xe794, 0x59b6, 0x1, 0x0);
        gbc.writeMem(0x69c8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x891c, gbc.sp());
        EXPECT(0x69ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00D2
        gbc.setState(0x7ab2, 0x36cc, 0xf150, 0xb0b7, 0x8097, 0xb508, 0x0, 0x1);
        gbc.writeMem(0x7ab2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x36cc, gbc.sp());
        EXPECT(0x7ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00D3
        gbc.setState(0x53e7, 0x2468, 0x6c50, 0xcf5b, 0x68a2, 0xc3d9, 0x1, 0x0);
        gbc.writeMem(0x53e7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2468, gbc.sp());
        EXPECT(0x53e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00D4
        gbc.setState(0xd940, 0x475c, 0xa160, 0x61ef, 0x5ddf, 0xa9fc, 0x1, 0x1);
        gbc.writeMem(0xd940, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x475c, gbc.sp());
        EXPECT(0xd942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd940));
        EXPECT(0xf2, gbc.readMem(0xd941));
        // CB F2 00D5
        gbc.setState(0x2460, 0x3d37, 0x5ac0, 0x7d73, 0x1dd2, 0x4d96, 0x1, 0x0);
        gbc.writeMem(0x2460, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3d37, gbc.sp());
        EXPECT(0x2462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00D6
        gbc.setState(0xb264, 0x794a, 0x4be0, 0xe3b9, 0xd36b, 0x389d, 0x1, 0x1);
        gbc.writeMem(0xb264, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x794a, gbc.sp());
        EXPECT(0xb266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb264));
        EXPECT(0xf2, gbc.readMem(0xb265));
        // CB F2 00D7
        gbc.setState(0x803a, 0x3169, 0x7ca0, 0x4b6, 0xdf48, 0x30c6, 0x0, 0x1);
        gbc.writeMem(0x803a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3169, gbc.sp());
        EXPECT(0x803c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803a));
        EXPECT(0xf2, gbc.readMem(0x803b));
        // CB F2 00D8
        gbc.setState(0xd12e, 0xac88, 0x93c0, 0x813d, 0x14b3, 0x5720, 0x0, 0x0);
        gbc.writeMem(0xd12e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac88, gbc.sp());
        EXPECT(0xd130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12e));
        EXPECT(0xf2, gbc.readMem(0xd12f));
        // CB F2 00D9
        gbc.setState(0xd4c7, 0x49d, 0x11a0, 0x562b, 0x53c6, 0xf520, 0x1, 0x1);
        gbc.writeMem(0xd4c7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0xd4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c7));
        EXPECT(0xf2, gbc.readMem(0xd4c8));
        // CB F2 00DA
        gbc.setState(0x3f1c, 0x627a, 0x44e0, 0x8cb, 0xc50e, 0xb864, 0x0, 0x1);
        gbc.writeMem(0x3f1c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x627a, gbc.sp());
        EXPECT(0x3f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00DB
        gbc.setState(0x1101, 0x608, 0x5520, 0x4038, 0xe06, 0x294f, 0x1, 0x0);
        gbc.writeMem(0x1101, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x608, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00DC
        gbc.setState(0x59b2, 0x163a, 0xbf20, 0x7983, 0x18f8, 0xc0d5, 0x0, 0x0);
        gbc.writeMem(0x59b2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x163a, gbc.sp());
        EXPECT(0x59b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00DD
        gbc.setState(0x81d4, 0xb91e, 0xc1a0, 0x448a, 0xc431, 0xa10, 0x1, 0x1);
        gbc.writeMem(0x81d4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb91e, gbc.sp());
        EXPECT(0x81d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81d4));
        EXPECT(0xf2, gbc.readMem(0x81d5));
        // CB F2 00DE
        gbc.setState(0xdbbe, 0x6d45, 0x45b0, 0xb8d2, 0xfed1, 0xbd90, 0x0, 0x0);
        gbc.writeMem(0xdbbe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6d45, gbc.sp());
        EXPECT(0xdbc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbbe));
        EXPECT(0xf2, gbc.readMem(0xdbbf));
        // CB F2 00DF
        gbc.setState(0xe528, 0x90e0, 0x5080, 0xfec4, 0x17d5, 0xe49a, 0x0, 0x0);
        gbc.writeMem(0xe528, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0xe52a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe528));
        EXPECT(0xf2, gbc.readMem(0xe529));
        // CB F2 00E0
        gbc.setState(0xb1cc, 0xb0d7, 0x7ea0, 0xa1f, 0x4ea8, 0xd210, 0x1, 0x1);
        gbc.writeMem(0xb1cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb0d7, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cc));
        EXPECT(0xf2, gbc.readMem(0xb1cd));
        // CB F2 00E1
        gbc.setState(0x97e5, 0x6924, 0xe620, 0xde0a, 0x66f0, 0x42b5, 0x0, 0x1);
        gbc.writeMem(0x97e5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6924, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97e5));
        EXPECT(0xf2, gbc.readMem(0x97e6));
        // CB F2 00E2
        gbc.setState(0x789c, 0xc6ff, 0x3b60, 0xad74, 0xa8c5, 0x6ba0, 0x1, 0x0);
        gbc.writeMem(0x789c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc6ff, gbc.sp());
        EXPECT(0x789e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00E3
        gbc.setState(0xcab8, 0x504c, 0xa520, 0x5aef, 0xf3a2, 0x3040, 0x0, 0x0);
        gbc.writeMem(0xcab8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0xcaba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab8));
        EXPECT(0xf2, gbc.readMem(0xcab9));
        // CB F2 00E4
        gbc.setState(0xc37c, 0x91c9, 0x7a30, 0x17d5, 0xf507, 0xa29, 0x0, 0x0);
        gbc.writeMem(0xc37c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x91c9, gbc.sp());
        EXPECT(0xc37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc37c));
        EXPECT(0xf2, gbc.readMem(0xc37d));
        // CB F2 00E5
        gbc.setState(0x32ac, 0xd915, 0xbaf0, 0x3d5, 0xc554, 0xe929, 0x0, 0x0);
        gbc.writeMem(0x32ac, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd915, gbc.sp());
        EXPECT(0x32ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00E6
        gbc.setState(0x3cdf, 0x5b5, 0xaf90, 0xefeb, 0x1b53, 0x6f9a, 0x0, 0x0);
        gbc.writeMem(0x3cdf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5b5, gbc.sp());
        EXPECT(0x3ce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00E7
        gbc.setState(0x9df4, 0x74a8, 0xe10, 0x72e3, 0x1122, 0x2df6, 0x1, 0x0);
        gbc.writeMem(0x9df4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0x9df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df4));
        EXPECT(0xf2, gbc.readMem(0x9df5));
        // CB F2 00E8
        gbc.setState(0x9f79, 0x6ed2, 0x6ee0, 0x3e32, 0x1f50, 0xaf9e, 0x1, 0x0);
        gbc.writeMem(0x9f79, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6ed2, gbc.sp());
        EXPECT(0x9f7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f79));
        EXPECT(0xf2, gbc.readMem(0x9f7a));
        // CB F2 00E9
        gbc.setState(0x769b, 0x103, 0xebf0, 0x5cbb, 0x598, 0x53e7, 0x0, 0x0);
        gbc.writeMem(0x769b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x103, gbc.sp());
        EXPECT(0x769d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00EA
        gbc.setState(0x73e2, 0x68af, 0xb50, 0x3cd8, 0xa4b1, 0xb358, 0x1, 0x0);
        gbc.writeMem(0x73e2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x68af, gbc.sp());
        EXPECT(0x73e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00EB
        gbc.setState(0x70fa, 0xeca1, 0x61c0, 0x61b9, 0x4087, 0x45d4, 0x1, 0x0);
        gbc.writeMem(0x70fa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xeca1, gbc.sp());
        EXPECT(0x70fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00EC
        gbc.setState(0x212a, 0xe19f, 0x82b0, 0xf74d, 0xc8fe, 0x344d, 0x1, 0x0);
        gbc.writeMem(0x212a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe19f, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00ED
        gbc.setState(0x427a, 0x9d80, 0xfbd0, 0xa23b, 0x29f4, 0x344a, 0x1, 0x1);
        gbc.writeMem(0x427a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9d80, gbc.sp());
        EXPECT(0x427c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00EE
        gbc.setState(0x45c8, 0x1ab0, 0xf30, 0x6c3b, 0x8a15, 0xeac1, 0x1, 0x0);
        gbc.writeMem(0x45c8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1ab0, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00EF
        gbc.setState(0xdf10, 0x71b1, 0xebe0, 0xff88, 0x7e67, 0xa1f0, 0x0, 0x1);
        gbc.writeMem(0xdf10, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x71b1, gbc.sp());
        EXPECT(0xdf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf10));
        EXPECT(0xf2, gbc.readMem(0xdf11));
        // CB F2 00F0
        gbc.setState(0x42b3, 0xd729, 0x26d0, 0x8871, 0x65e0, 0xfca7, 0x0, 0x1);
        gbc.writeMem(0x42b3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd729, gbc.sp());
        EXPECT(0x42b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00F1
        gbc.setState(0xdf11, 0x892c, 0x5cd0, 0xdbaf, 0x23ca, 0x2637, 0x1, 0x0);
        gbc.writeMem(0xdf11, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x892c, gbc.sp());
        EXPECT(0xdf13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf11));
        EXPECT(0xf2, gbc.readMem(0xdf12));
        // CB F2 00F2
        gbc.setState(0x1116, 0x22d7, 0x3d00, 0xd9d, 0x8104, 0x6230, 0x1, 0x0);
        gbc.writeMem(0x1116, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x22d7, gbc.sp());
        EXPECT(0x1118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00F3
        gbc.setState(0x9d45, 0x9443, 0x3c50, 0x7456, 0xf49c, 0xd737, 0x1, 0x1);
        gbc.writeMem(0x9d45, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9443, gbc.sp());
        EXPECT(0x9d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d45));
        EXPECT(0xf2, gbc.readMem(0x9d46));
        // CB F2 00F4
        gbc.setState(0xedf, 0xdf66, 0x34b0, 0x8ed3, 0x71fd, 0x4aec, 0x0, 0x0);
        gbc.writeMem(0xedf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdf66, gbc.sp());
        EXPECT(0xee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00F5
        gbc.setState(0x9140, 0xe897, 0xa170, 0xdc7e, 0x747e, 0xa1f, 0x1, 0x0);
        gbc.writeMem(0x9140, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe897, gbc.sp());
        EXPECT(0x9142, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9140));
        EXPECT(0xf2, gbc.readMem(0x9141));
        // CB F2 00F6
        gbc.setState(0xc60f, 0x3eb3, 0x15d0, 0xe504, 0x6b06, 0x9ab5, 0x0, 0x1);
        gbc.writeMem(0xc60f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3eb3, gbc.sp());
        EXPECT(0xc611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60f));
        EXPECT(0xf2, gbc.readMem(0xc610));
        // CB F2 00F7
        gbc.setState(0x3070, 0xf8b5, 0xe1e0, 0xbd58, 0xe2bc, 0x2767, 0x1, 0x1);
        gbc.writeMem(0x3070, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf8b5, gbc.sp());
        EXPECT(0x3072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00F8
        gbc.setState(0xafe4, 0x1e74, 0xb210, 0x756a, 0x8f43, 0x604e, 0x0, 0x1);
        gbc.writeMem(0xafe4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0xafe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe4));
        EXPECT(0xf2, gbc.readMem(0xafe5));
        // CB F2 00F9
        gbc.setState(0x751b, 0x1a5e, 0xf0d0, 0xec65, 0x1071, 0x1e24, 0x1, 0x1);
        gbc.writeMem(0x751b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1a5e, gbc.sp());
        EXPECT(0x751d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00FB
        gbc.setState(0xc3a8, 0xb2b7, 0xe9c0, 0x55e5, 0x7447, 0xc074, 0x0, 0x1);
        gbc.writeMem(0xc3a8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb2b7, gbc.sp());
        EXPECT(0xc3aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a8));
        EXPECT(0xf2, gbc.readMem(0xc3a9));
        // CB F2 00FC
        gbc.setState(0x92fb, 0x497f, 0xb530, 0x9db1, 0xb594, 0x6102, 0x1, 0x1);
        gbc.writeMem(0x92fb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x497f, gbc.sp());
        EXPECT(0x92fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fb));
        EXPECT(0xf2, gbc.readMem(0x92fc));
        // CB F2 00FD
        gbc.setState(0x391f, 0xdcd3, 0x4180, 0x6f38, 0x7085, 0xf3c3, 0x0, 0x0);
        gbc.writeMem(0x391f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdcd3, gbc.sp());
        EXPECT(0x3921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 00FE
        gbc.setState(0x16d0, 0x19b, 0x87d0, 0xbc01, 0x7356, 0xd825, 0x1, 0x1);
        gbc.writeMem(0x16d0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x19b, gbc.sp());
        EXPECT(0x16d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 00FF
        gbc.setState(0x2691, 0xfe59, 0xb450, 0xd127, 0x1cbd, 0xf03, 0x1, 0x0);
        gbc.writeMem(0x2691, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfe59, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0100
        gbc.setState(0x6a50, 0x704c, 0x250, 0x8ec9, 0x1083, 0x7ac8, 0x1, 0x1);
        gbc.writeMem(0x6a50, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x6a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0101
        gbc.setState(0x6d2e, 0xde64, 0x450, 0xbd85, 0x3c2a, 0x5ea1, 0x0, 0x0);
        gbc.writeMem(0x6d2e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xde64, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0102
        gbc.setState(0xed9a, 0xfddd, 0xa090, 0xa059, 0x140c, 0xf70a, 0x1, 0x1);
        gbc.writeMem(0xed9a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xfddd, gbc.sp());
        EXPECT(0xed9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9a));
        EXPECT(0xf2, gbc.readMem(0xed9b));
        // CB F2 0103
        gbc.setState(0x18f9, 0x5406, 0x79f0, 0x3aa4, 0x95ca, 0xc98d, 0x1, 0x1);
        gbc.writeMem(0x18f9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5406, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0104
        gbc.setState(0xe299, 0x5b47, 0x5d60, 0x8beb, 0x499e, 0x876d, 0x0, 0x1);
        gbc.writeMem(0xe299, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5b47, gbc.sp());
        EXPECT(0xe29b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe299));
        EXPECT(0xf2, gbc.readMem(0xe29a));
        // CB F2 0105
        gbc.setState(0x9a2e, 0x1b5b, 0x2470, 0x756f, 0x9ff8, 0xda97, 0x0, 0x0);
        gbc.writeMem(0x9a2e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1b5b, gbc.sp());
        EXPECT(0x9a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2e));
        EXPECT(0xf2, gbc.readMem(0x9a2f));
        // CB F2 0106
        gbc.setState(0x6715, 0x32c, 0xc960, 0x1bfc, 0x37c9, 0x822f, 0x0, 0x0);
        gbc.writeMem(0x6715, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x32c, gbc.sp());
        EXPECT(0x6717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0107
        gbc.setState(0x4dd0, 0x4895, 0x2ce0, 0x13aa, 0x9e3c, 0xd423, 0x0, 0x1);
        gbc.writeMem(0x4dd0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4895, gbc.sp());
        EXPECT(0x4dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0108
        gbc.setState(0x5f59, 0xe1f8, 0x3580, 0x6e4b, 0xcd33, 0x33f6, 0x1, 0x1);
        gbc.writeMem(0x5f59, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe1f8, gbc.sp());
        EXPECT(0x5f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0109
        gbc.setState(0xac67, 0x1967, 0xb310, 0xf239, 0x1329, 0x900a, 0x0, 0x0);
        gbc.writeMem(0xac67, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1967, gbc.sp());
        EXPECT(0xac69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac67));
        EXPECT(0xf2, gbc.readMem(0xac68));
        // CB F2 010A
        gbc.setState(0xaafa, 0x613f, 0xa950, 0x5a06, 0xd471, 0x609e, 0x1, 0x1);
        gbc.writeMem(0xaafa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x613f, gbc.sp());
        EXPECT(0xaafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaafa));
        EXPECT(0xf2, gbc.readMem(0xaafb));
        // CB F2 010B
        gbc.setState(0xc809, 0x234b, 0xcad0, 0x1586, 0x740c, 0x6ad1, 0x0, 0x1);
        gbc.writeMem(0xc809, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x234b, gbc.sp());
        EXPECT(0xc80b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc809));
        EXPECT(0xf2, gbc.readMem(0xc80a));
        // CB F2 010C
        gbc.setState(0x7961, 0xba7, 0x6a00, 0x748a, 0x52, 0xa01f, 0x0, 0x0);
        gbc.writeMem(0x7961, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xba7, gbc.sp());
        EXPECT(0x7963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 010D
        gbc.setState(0x727d, 0xc1d4, 0xb850, 0x95b4, 0xd39d, 0x74d6, 0x1, 0x0);
        gbc.writeMem(0x727d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc1d4, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 010E
        gbc.setState(0xd20f, 0x4bd8, 0xa70, 0x8c47, 0xfbcd, 0x661e, 0x1, 0x0);
        gbc.writeMem(0xd20f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4bd8, gbc.sp());
        EXPECT(0xd211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd20f));
        EXPECT(0xf2, gbc.readMem(0xd210));
        // CB F2 010F
        gbc.setState(0x6717, 0xbb5e, 0xa280, 0x50c5, 0x614f, 0x2dfe, 0x1, 0x1);
        gbc.writeMem(0x6717, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xbb5e, gbc.sp());
        EXPECT(0x6719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0110
        gbc.setState(0x1c2d, 0x792f, 0xc370, 0xc112, 0x4c0a, 0xc491, 0x1, 0x0);
        gbc.writeMem(0x1c2d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x792f, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0111
        gbc.setState(0x1b9a, 0x52fe, 0xc980, 0x933c, 0x5235, 0x405a, 0x0, 0x1);
        gbc.writeMem(0x1b9a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0x1b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0112
        gbc.setState(0x6439, 0x8416, 0xd430, 0xc50e, 0x824e, 0x3854, 0x0, 0x0);
        gbc.writeMem(0x6439, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8416, gbc.sp());
        EXPECT(0x643b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0113
        gbc.setState(0xb5f0, 0xceaf, 0xe120, 0x2079, 0x8414, 0x5d8b, 0x1, 0x0);
        gbc.writeMem(0xb5f0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xceaf, gbc.sp());
        EXPECT(0xb5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5f0));
        EXPECT(0xf2, gbc.readMem(0xb5f1));
        // CB F2 0115
        gbc.setState(0x4c2b, 0x2dd8, 0xb780, 0x3157, 0xf9fd, 0x894d, 0x1, 0x1);
        gbc.writeMem(0x4c2b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2dd8, gbc.sp());
        EXPECT(0x4c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0116
        gbc.setState(0x6df6, 0x1746, 0x5620, 0xd7b6, 0xd69a, 0xfa00, 0x1, 0x1);
        gbc.writeMem(0x6df6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1746, gbc.sp());
        EXPECT(0x6df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0117
        gbc.setState(0xbbfa, 0xf4c7, 0x28e0, 0x6a0b, 0x86fa, 0xf24, 0x1, 0x1);
        gbc.writeMem(0xbbfa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf4c7, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfa));
        EXPECT(0xf2, gbc.readMem(0xbbfb));
        // CB F2 0118
        gbc.setState(0xa2e4, 0xf709, 0x5c10, 0xf52e, 0x2e55, 0xe824, 0x0, 0x1);
        gbc.writeMem(0xa2e4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf709, gbc.sp());
        EXPECT(0xa2e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e4));
        EXPECT(0xf2, gbc.readMem(0xa2e5));
        // CB F2 0119
        gbc.setState(0xa86b, 0xc42, 0x7b50, 0xdd80, 0x3d3, 0x3c34, 0x1, 0x1);
        gbc.writeMem(0xa86b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc42, gbc.sp());
        EXPECT(0xa86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa86b));
        EXPECT(0xf2, gbc.readMem(0xa86c));
        // CB F2 011A
        gbc.setState(0x7477, 0x9c36, 0xa970, 0x1f14, 0x8298, 0xeeaa, 0x1, 0x0);
        gbc.writeMem(0x7477, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9c36, gbc.sp());
        EXPECT(0x7479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 011B
        gbc.setState(0x4fb3, 0xea9b, 0xd4e0, 0x293f, 0x3d98, 0xd0b1, 0x0, 0x0);
        gbc.writeMem(0x4fb3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea9b, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 011C
        gbc.setState(0x4047, 0xe408, 0x20f0, 0x889d, 0xc75e, 0x20ec, 0x0, 0x1);
        gbc.writeMem(0x4047, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe408, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 011D
        gbc.setState(0xacb9, 0x396a, 0x3360, 0xec35, 0xc266, 0x551d, 0x1, 0x1);
        gbc.writeMem(0xacb9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0xacbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb9));
        EXPECT(0xf2, gbc.readMem(0xacba));
        // CB F2 011E
        gbc.setState(0x1c73, 0x67f1, 0x5870, 0x7272, 0x8906, 0xe6f, 0x0, 0x0);
        gbc.writeMem(0x1c73, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x67f1, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 011F
        gbc.setState(0x93dc, 0x3f85, 0xfc00, 0x9336, 0xbd2a, 0x59a8, 0x1, 0x1);
        gbc.writeMem(0x93dc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3f85, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93dc));
        EXPECT(0xf2, gbc.readMem(0x93dd));
        // CB F2 0120
        gbc.setState(0xa4b8, 0x4e60, 0xdd50, 0xc0e8, 0xf706, 0x4c27, 0x1, 0x0);
        gbc.writeMem(0xa4b8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4e60, gbc.sp());
        EXPECT(0xa4ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b8));
        EXPECT(0xf2, gbc.readMem(0xa4b9));
        // CB F2 0121
        gbc.setState(0x888d, 0x10d7, 0x1340, 0xfd17, 0x70f7, 0xfe6, 0x1, 0x0);
        gbc.writeMem(0x888d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x10d7, gbc.sp());
        EXPECT(0x888f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x888d));
        EXPECT(0xf2, gbc.readMem(0x888e));
        // CB F2 0122
        gbc.setState(0x7e23, 0x50fd, 0xa3f0, 0x4353, 0xd072, 0x65a, 0x0, 0x0);
        gbc.writeMem(0x7e23, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x50fd, gbc.sp());
        EXPECT(0x7e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0123
        gbc.setState(0x8ad9, 0x70b5, 0x4df0, 0xc54a, 0xe0fe, 0xd4a6, 0x0, 0x1);
        gbc.writeMem(0x8ad9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x70b5, gbc.sp());
        EXPECT(0x8adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad9));
        EXPECT(0xf2, gbc.readMem(0x8ada));
        // CB F2 0124
        gbc.setState(0x71e6, 0xcc64, 0xd090, 0x7c06, 0x84b9, 0x1d45, 0x1, 0x0);
        gbc.writeMem(0x71e6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcc64, gbc.sp());
        EXPECT(0x71e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0125
        gbc.setState(0x5811, 0x9e07, 0x6ae0, 0xa3e, 0x4148, 0x63c6, 0x0, 0x1);
        gbc.writeMem(0x5811, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9e07, gbc.sp());
        EXPECT(0x5813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0126
        gbc.setState(0x1287, 0x49df, 0xa4a0, 0x9d3c, 0x3f43, 0xab07, 0x1, 0x1);
        gbc.writeMem(0x1287, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x49df, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0127
        gbc.setState(0x9cbc, 0x50ae, 0x7350, 0x1e85, 0xb71f, 0xcb94, 0x1, 0x1);
        gbc.writeMem(0x9cbc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x50ae, gbc.sp());
        EXPECT(0x9cbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cbc));
        EXPECT(0xf2, gbc.readMem(0x9cbd));
        // CB F2 0128
        gbc.setState(0x1529, 0x1a0c, 0xc9a0, 0x76d8, 0x2647, 0x78a0, 0x1, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1a0c, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0129
        gbc.setState(0x7966, 0xe681, 0x9010, 0x54e0, 0x1f, 0x7443, 0x0, 0x0);
        gbc.writeMem(0x7966, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe681, gbc.sp());
        EXPECT(0x7968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 012A
        gbc.setState(0x9499, 0x84fc, 0x9e0, 0x4565, 0x7576, 0x760e, 0x1, 0x0);
        gbc.writeMem(0x9499, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x84fc, gbc.sp());
        EXPECT(0x949b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9499));
        EXPECT(0xf2, gbc.readMem(0x949a));
        // CB F2 012C
        gbc.setState(0xb806, 0xac3, 0x85b0, 0xf4d5, 0x26a7, 0xb94e, 0x1, 0x1);
        gbc.writeMem(0xb806, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xac3, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb806));
        EXPECT(0xf2, gbc.readMem(0xb807));
        // CB F2 012D
        gbc.setState(0x88c6, 0xe552, 0xc3d0, 0x7e16, 0xbb60, 0xb1a1, 0x1, 0x1);
        gbc.writeMem(0x88c6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe552, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c6));
        EXPECT(0xf2, gbc.readMem(0x88c7));
        // CB F2 012E
        gbc.setState(0xcdd6, 0x928, 0xaef0, 0x6b32, 0xa831, 0xa27b, 0x1, 0x1);
        gbc.writeMem(0xcdd6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x928, gbc.sp());
        EXPECT(0xcdd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdd6));
        EXPECT(0xf2, gbc.readMem(0xcdd7));
        // CB F2 012F
        gbc.setState(0xa40, 0xf089, 0xc080, 0xe697, 0xe16b, 0x6ce, 0x0, 0x0);
        gbc.writeMem(0xa40, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf089, gbc.sp());
        EXPECT(0xa42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0130
        gbc.setState(0x4c38, 0x7cb1, 0xb590, 0x7661, 0xdeb4, 0xd9e6, 0x0, 0x1);
        gbc.writeMem(0x4c38, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7cb1, gbc.sp());
        EXPECT(0x4c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0131
        gbc.setState(0xeb2f, 0x10b2, 0x73d0, 0x42ba, 0x586c, 0xbe1e, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x10b2, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0xf2, gbc.readMem(0xeb30));
        // CB F2 0132
        gbc.setState(0x6aad, 0x43f3, 0xdbb0, 0xcaf2, 0xa154, 0x5bf7, 0x0, 0x0);
        gbc.writeMem(0x6aad, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x43f3, gbc.sp());
        EXPECT(0x6aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0133
        gbc.setState(0x1b7b, 0x9e3e, 0x1ab0, 0xf172, 0xe5a7, 0xe85, 0x1, 0x0);
        gbc.writeMem(0x1b7b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9e3e, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0134
        gbc.setState(0x56e5, 0x875a, 0xfc20, 0xd525, 0x3974, 0x45af, 0x1, 0x1);
        gbc.writeMem(0x56e5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x875a, gbc.sp());
        EXPECT(0x56e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0135
        gbc.setState(0x5ca5, 0xfc68, 0x1120, 0xf995, 0xf6ef, 0x2963, 0x0, 0x0);
        gbc.writeMem(0x5ca5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfc68, gbc.sp());
        EXPECT(0x5ca7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0136
        gbc.setState(0x83ce, 0x4ef8, 0x7810, 0xd0c0, 0xe8c5, 0x6059, 0x0, 0x0);
        gbc.writeMem(0x83ce, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0x83d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ce));
        EXPECT(0xf2, gbc.readMem(0x83cf));
        // CB F2 0137
        gbc.setState(0x2378, 0x220, 0x32f0, 0x8168, 0xdc2f, 0xd0f3, 0x0, 0x1);
        gbc.writeMem(0x2378, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x220, gbc.sp());
        EXPECT(0x237a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0138
        gbc.setState(0x3bd1, 0xd6db, 0x4800, 0xf853, 0xc16, 0xcfed, 0x1, 0x1);
        gbc.writeMem(0x3bd1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd6db, gbc.sp());
        EXPECT(0x3bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0139
        gbc.setState(0x7396, 0x40a7, 0x22a0, 0x9ea6, 0xb060, 0x36ef, 0x1, 0x1);
        gbc.writeMem(0x7396, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x40a7, gbc.sp());
        EXPECT(0x7398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 013A
        gbc.setState(0x4669, 0xea0d, 0x6a90, 0x4bb1, 0x765b, 0x19f0, 0x0, 0x0);
        gbc.writeMem(0x4669, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xea0d, gbc.sp());
        EXPECT(0x466b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 013B
        gbc.setState(0x8dcc, 0x85cb, 0xb110, 0x999b, 0xe081, 0xed9b, 0x0, 0x1);
        gbc.writeMem(0x8dcc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x85cb, gbc.sp());
        EXPECT(0x8dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dcc));
        EXPECT(0xf2, gbc.readMem(0x8dcd));
        // CB F2 013C
        gbc.setState(0xa54b, 0xce6d, 0x1730, 0x4abd, 0xfdba, 0xdfac, 0x0, 0x1);
        gbc.writeMem(0xa54b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xce6d, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54b));
        EXPECT(0xf2, gbc.readMem(0xa54c));
        // CB F2 013D
        gbc.setState(0xe983, 0xc43d, 0x2fd0, 0xfbfe, 0x231, 0x6d34, 0x1, 0x0);
        gbc.writeMem(0xe983, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc43d, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe983));
        EXPECT(0xf2, gbc.readMem(0xe984));
        // CB F2 013E
        gbc.setState(0x52e0, 0x788c, 0x4be0, 0xe55b, 0x264f, 0x541d, 0x0, 0x0);
        gbc.writeMem(0x52e0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x788c, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 013F
        gbc.setState(0xcaf2, 0x6c0d, 0x9b50, 0x239a, 0xc241, 0x9670, 0x1, 0x1);
        gbc.writeMem(0xcaf2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c0d, gbc.sp());
        EXPECT(0xcaf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf2));
        EXPECT(0xf2, gbc.readMem(0xcaf3));
        // CB F2 0140
        gbc.setState(0x83a1, 0x916a, 0x9860, 0xd872, 0xd8, 0xb376, 0x1, 0x0);
        gbc.writeMem(0x83a1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x916a, gbc.sp());
        EXPECT(0x83a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a1));
        EXPECT(0xf2, gbc.readMem(0x83a2));
        // CB F2 0141
        gbc.setState(0x3f61, 0x3f0f, 0x75d0, 0xe00a, 0x94e3, 0xc687, 0x1, 0x1);
        gbc.writeMem(0x3f61, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3f0f, gbc.sp());
        EXPECT(0x3f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0142
        gbc.setState(0x3a99, 0x401a, 0xebe0, 0x2ad4, 0xa980, 0xaf63, 0x1, 0x1);
        gbc.writeMem(0x3a99, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x401a, gbc.sp());
        EXPECT(0x3a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0144
        gbc.setState(0x2da6, 0x366, 0xc130, 0x78a8, 0x68bf, 0x7c6, 0x1, 0x1);
        gbc.writeMem(0x2da6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x366, gbc.sp());
        EXPECT(0x2da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0145
        gbc.setState(0x93f9, 0x9a01, 0xd450, 0x8115, 0x81a5, 0x7710, 0x1, 0x0);
        gbc.writeMem(0x93f9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x9a01, gbc.sp());
        EXPECT(0x93fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f9));
        EXPECT(0xf2, gbc.readMem(0x93fa));
        // CB F2 0146
        gbc.setState(0xccdf, 0xafa7, 0xacc0, 0x7ac2, 0x54c4, 0xee0d, 0x0, 0x1);
        gbc.writeMem(0xccdf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xafa7, gbc.sp());
        EXPECT(0xcce1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccdf));
        EXPECT(0xf2, gbc.readMem(0xcce0));
        // CB F2 0147
        gbc.setState(0x2147, 0xf631, 0xb1f0, 0xb724, 0x1327, 0x5cfa, 0x1, 0x0);
        gbc.writeMem(0x2147, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf631, gbc.sp());
        EXPECT(0x2149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0148
        gbc.setState(0x32c3, 0xe2ba, 0x3e30, 0xa0c5, 0x92f4, 0x3a7e, 0x0, 0x1);
        gbc.writeMem(0x32c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe2ba, gbc.sp());
        EXPECT(0x32c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0149
        gbc.setState(0x3bc0, 0xf810, 0xbd80, 0x14ec, 0x358b, 0xdfc3, 0x0, 0x0);
        gbc.writeMem(0x3bc0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf810, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 014A
        gbc.setState(0x442c, 0x4fc3, 0x0, 0xfe59, 0x5f35, 0xab7, 0x0, 0x1);
        gbc.writeMem(0x442c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0x442e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 014B
        gbc.setState(0x3fc4, 0x3bf6, 0x7b70, 0xe2f3, 0xc49c, 0xd686, 0x1, 0x0);
        gbc.writeMem(0x3fc4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3bf6, gbc.sp());
        EXPECT(0x3fc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 014C
        gbc.setState(0xb018, 0x4ba8, 0x4930, 0xae9e, 0x8d6a, 0xab62, 0x1, 0x1);
        gbc.writeMem(0xb018, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4ba8, gbc.sp());
        EXPECT(0xb01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb018));
        EXPECT(0xf2, gbc.readMem(0xb019));
        // CB F2 014D
        gbc.setState(0x43f2, 0x3034, 0x6900, 0x2022, 0xa803, 0x7da9, 0x0, 0x0);
        gbc.writeMem(0x43f2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3034, gbc.sp());
        EXPECT(0x43f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 014E
        gbc.setState(0xce50, 0x8215, 0xdcf0, 0x1ff, 0x6ba8, 0x6cf8, 0x0, 0x0);
        gbc.writeMem(0xce50, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8215, gbc.sp());
        EXPECT(0xce52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce50));
        EXPECT(0xf2, gbc.readMem(0xce51));
        // CB F2 014F
        gbc.setState(0x9438, 0xa193, 0xd250, 0x4a77, 0x4909, 0x5c31, 0x1, 0x1);
        gbc.writeMem(0x9438, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa193, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9438));
        EXPECT(0xf2, gbc.readMem(0x9439));
        // CB F2 0150
        gbc.setState(0x8c4b, 0x6976, 0xd4c0, 0x757, 0x2818, 0xedc3, 0x1, 0x1);
        gbc.writeMem(0x8c4b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6976, gbc.sp());
        EXPECT(0x8c4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4b));
        EXPECT(0xf2, gbc.readMem(0x8c4c));
        // CB F2 0151
        gbc.setState(0x190, 0xce56, 0x5a60, 0x244, 0x5547, 0xad36, 0x1, 0x1);
        gbc.writeMem(0x190, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xce56, gbc.sp());
        EXPECT(0x192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0152
        gbc.setState(0x80f3, 0x6a28, 0x1860, 0x6e5a, 0xf625, 0x10b2, 0x1, 0x0);
        gbc.writeMem(0x80f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6a28, gbc.sp());
        EXPECT(0x80f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80f3));
        EXPECT(0xf2, gbc.readMem(0x80f4));
        // CB F2 0153
        gbc.setState(0x7eca, 0xaf7b, 0xee20, 0x9734, 0x23e5, 0x3227, 0x0, 0x0);
        gbc.writeMem(0x7eca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x7ecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0154
        gbc.setState(0xcc4c, 0x5d26, 0x9ad0, 0x56b1, 0xb91e, 0x386c, 0x0, 0x0);
        gbc.writeMem(0xcc4c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d26, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4c));
        EXPECT(0xf2, gbc.readMem(0xcc4d));
        // CB F2 0155
        gbc.setState(0x61df, 0x2383, 0x6e70, 0x7481, 0x6c7f, 0x4b1f, 0x1, 0x1);
        gbc.writeMem(0x61df, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0x61e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0156
        gbc.setState(0x95e, 0x2674, 0x9350, 0x42b3, 0x386d, 0xa805, 0x0, 0x1);
        gbc.writeMem(0x95e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2674, gbc.sp());
        EXPECT(0x960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0157
        gbc.setState(0x7ca0, 0x3a1c, 0xd350, 0x800e, 0x3096, 0x1f94, 0x1, 0x0);
        gbc.writeMem(0x7ca0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3a1c, gbc.sp());
        EXPECT(0x7ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0158
        gbc.setState(0xa69, 0xec98, 0x7170, 0x8e74, 0xba15, 0x4a46, 0x1, 0x0);
        gbc.writeMem(0xa69, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xec98, gbc.sp());
        EXPECT(0xa6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0159
        gbc.setState(0x2ea3, 0x365f, 0xd480, 0x8621, 0x26fb, 0x6d59, 0x0, 0x1);
        gbc.writeMem(0x2ea3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x365f, gbc.sp());
        EXPECT(0x2ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 015A
        gbc.setState(0x37f8, 0xdff7, 0x8110, 0x2a24, 0x502c, 0x135a, 0x1, 0x0);
        gbc.writeMem(0x37f8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdff7, gbc.sp());
        EXPECT(0x37fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 015B
        gbc.setState(0x796d, 0xb81d, 0x3940, 0xddde, 0x315f, 0x30f4, 0x1, 0x1);
        gbc.writeMem(0x796d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb81d, gbc.sp());
        EXPECT(0x796f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 015C
        gbc.setState(0xfd2, 0x7b1c, 0xee80, 0x7643, 0xafdf, 0x1c8d, 0x1, 0x0);
        gbc.writeMem(0xfd2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7b1c, gbc.sp());
        EXPECT(0xfd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 015D
        gbc.setState(0xb1dd, 0xafac, 0x2ba0, 0x7367, 0x8161, 0x934c, 0x0, 0x0);
        gbc.writeMem(0xb1dd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xafac, gbc.sp());
        EXPECT(0xb1df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1dd));
        EXPECT(0xf2, gbc.readMem(0xb1de));
        // CB F2 015E
        gbc.setState(0xd002, 0x8c3b, 0x1510, 0xf188, 0x1dd7, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0xd002, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8c3b, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd002));
        EXPECT(0xf2, gbc.readMem(0xd003));
        // CB F2 015F
        gbc.setState(0xeec2, 0xb239, 0x69e0, 0xa8c0, 0xd399, 0xcea, 0x0, 0x1);
        gbc.writeMem(0xeec2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb239, gbc.sp());
        EXPECT(0xeec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec2));
        EXPECT(0xf2, gbc.readMem(0xeec3));
        // CB F2 0160
        gbc.setState(0xd5e2, 0xec5e, 0x7de0, 0x488a, 0x700f, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0xd5e2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xec5e, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e2));
        EXPECT(0xf2, gbc.readMem(0xd5e3));
        // CB F2 0161
        gbc.setState(0x2caf, 0x324, 0xd150, 0x4ff5, 0x4984, 0x38b2, 0x0, 0x1);
        gbc.writeMem(0x2caf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x2cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0162
        gbc.setState(0x9252, 0xa057, 0xfb10, 0x28e9, 0xcb44, 0x25f7, 0x0, 0x0);
        gbc.writeMem(0x9252, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa057, gbc.sp());
        EXPECT(0x9254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9252));
        EXPECT(0xf2, gbc.readMem(0x9253));
        // CB F2 0163
        gbc.setState(0x184b, 0xa173, 0xe610, 0xa933, 0x2e96, 0x9c92, 0x1, 0x0);
        gbc.writeMem(0x184b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa173, gbc.sp());
        EXPECT(0x184d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0164
        gbc.setState(0x3763, 0x4ef8, 0x1a80, 0xa46b, 0xe14f, 0x27ea, 0x1, 0x1);
        gbc.writeMem(0x3763, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4ef8, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0165
        gbc.setState(0x36c4, 0xc6f6, 0x25c0, 0x12a6, 0xfa0d, 0xd2e9, 0x0, 0x1);
        gbc.writeMem(0x36c4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0x36c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0166
        gbc.setState(0x16e0, 0xb557, 0x3660, 0x95f, 0xf91d, 0xbcbd, 0x1, 0x1);
        gbc.writeMem(0x16e0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb557, gbc.sp());
        EXPECT(0x16e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0167
        gbc.setState(0x21dd, 0xe084, 0x9c40, 0xdec1, 0xe2ae, 0x9b42, 0x1, 0x0);
        gbc.writeMem(0x21dd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0x21df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0168
        gbc.setState(0xbbc6, 0x8d38, 0x99b0, 0x8c51, 0x8af6, 0xb7df, 0x0, 0x0);
        gbc.writeMem(0xbbc6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8d38, gbc.sp());
        EXPECT(0xbbc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc6));
        EXPECT(0xf2, gbc.readMem(0xbbc7));
        // CB F2 0169
        gbc.setState(0x35fc, 0x9a0d, 0x2fd0, 0x5afe, 0x9cb, 0x2e80, 0x0, 0x0);
        gbc.writeMem(0x35fc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9a0d, gbc.sp());
        EXPECT(0x35fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 016A
        gbc.setState(0x92a5, 0xb54d, 0x1700, 0x797d, 0xb65b, 0xd2c1, 0x0, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb54d, gbc.sp());
        EXPECT(0x92a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a5));
        EXPECT(0xf2, gbc.readMem(0x92a6));
        // CB F2 016B
        gbc.setState(0x4e4, 0x1fca, 0x7c70, 0x62f, 0x6e70, 0xfb9e, 0x0, 0x0);
        gbc.writeMem(0x4e4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0x4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 016C
        gbc.setState(0xce, 0x86bd, 0x4fb0, 0xc9a3, 0xdbd1, 0x72d9, 0x1, 0x1);
        gbc.writeMem(0xce, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x86bd, gbc.sp());
        EXPECT(0xd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 016D
        gbc.setState(0x3430, 0xae41, 0xb180, 0x51f0, 0x5517, 0xb3de, 0x0, 0x1);
        gbc.writeMem(0x3430, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xae41, gbc.sp());
        EXPECT(0x3432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 016E
        gbc.setState(0x7470, 0x128c, 0xc0f0, 0x3dbb, 0x87ef, 0xee55, 0x1, 0x0);
        gbc.writeMem(0x7470, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x128c, gbc.sp());
        EXPECT(0x7472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 016F
        gbc.setState(0x7ab, 0xf756, 0x9a80, 0x42a4, 0xc6b3, 0x1b98, 0x1, 0x0);
        gbc.writeMem(0x7ab, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xf756, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0170
        gbc.setState(0xa3e2, 0xb28f, 0xc0f0, 0x52c0, 0x773a, 0x7d1f, 0x0, 0x1);
        gbc.writeMem(0xa3e2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb28f, gbc.sp());
        EXPECT(0xa3e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e2));
        EXPECT(0xf2, gbc.readMem(0xa3e3));
        // CB F2 0171
        gbc.setState(0x71e7, 0x57d2, 0xb40, 0xfca9, 0x2b37, 0x2ff5, 0x0, 0x0);
        gbc.writeMem(0x71e7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x57d2, gbc.sp());
        EXPECT(0x71e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0172
        gbc.setState(0x4f2f, 0xc0e3, 0x7b80, 0xec8f, 0xaf70, 0x993, 0x1, 0x1);
        gbc.writeMem(0x4f2f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc0e3, gbc.sp());
        EXPECT(0x4f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0173
        gbc.setState(0xe51a, 0x25d5, 0xb200, 0xe89c, 0x41d2, 0x5e, 0x1, 0x1);
        gbc.writeMem(0xe51a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x25d5, gbc.sp());
        EXPECT(0xe51c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe51a));
        EXPECT(0xf2, gbc.readMem(0xe51b));
        // CB F2 0174
        gbc.setState(0xb600, 0x4eda, 0xfa50, 0xdb99, 0xe21f, 0xf123, 0x0, 0x1);
        gbc.writeMem(0xb600, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4eda, gbc.sp());
        EXPECT(0xb602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb600));
        EXPECT(0xf2, gbc.readMem(0xb601));
        // CB F2 0175
        gbc.setState(0x9022, 0x9e1c, 0x7a50, 0x9713, 0x52da, 0x3f84, 0x0, 0x1);
        gbc.writeMem(0x9022, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0x9024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9022));
        EXPECT(0xf2, gbc.readMem(0x9023));
        // CB F2 0176
        gbc.setState(0xb790, 0xf25d, 0xf5f0, 0x6914, 0x9936, 0x597b, 0x1, 0x1);
        gbc.writeMem(0xb790, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf25d, gbc.sp());
        EXPECT(0xb792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb790));
        EXPECT(0xf2, gbc.readMem(0xb791));
        // CB F2 0177
        gbc.setState(0x89d3, 0xc8d6, 0xbbf0, 0xbf48, 0x8161, 0xfda0, 0x1, 0x1);
        gbc.writeMem(0x89d3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0x89d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d3));
        EXPECT(0xf2, gbc.readMem(0x89d4));
        // CB F2 0179
        gbc.setState(0x9e21, 0xe1cd, 0xc150, 0xa8ea, 0xbdb2, 0x15d4, 0x0, 0x1);
        gbc.writeMem(0x9e21, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe1cd, gbc.sp());
        EXPECT(0x9e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e21));
        EXPECT(0xf2, gbc.readMem(0x9e22));
        // CB F2 017A
        gbc.setState(0xab48, 0x22f3, 0x9560, 0x84f2, 0x7361, 0x83f7, 0x0, 0x0);
        gbc.writeMem(0xab48, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x22f3, gbc.sp());
        EXPECT(0xab4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab48));
        EXPECT(0xf2, gbc.readMem(0xab49));
        // CB F2 017B
        gbc.setState(0xb8de, 0x5e21, 0xe090, 0xb7ac, 0xc723, 0x33e6, 0x1, 0x0);
        gbc.writeMem(0xb8de, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5e21, gbc.sp());
        EXPECT(0xb8e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8de));
        EXPECT(0xf2, gbc.readMem(0xb8df));
        // CB F2 017C
        gbc.setState(0xdcc5, 0x11a2, 0xc620, 0xa986, 0xe3d5, 0x8227, 0x0, 0x0);
        gbc.writeMem(0xdcc5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x11a2, gbc.sp());
        EXPECT(0xdcc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc5));
        EXPECT(0xf2, gbc.readMem(0xdcc6));
        // CB F2 017D
        gbc.setState(0x4408, 0xfec2, 0x9800, 0xb5ee, 0x9d51, 0xc505, 0x1, 0x0);
        gbc.writeMem(0x4408, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfec2, gbc.sp());
        EXPECT(0x440a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 017E
        gbc.setState(0x893e, 0xab9f, 0x81c0, 0xc50d, 0xdc4b, 0x9003, 0x1, 0x0);
        gbc.writeMem(0x893e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xab9f, gbc.sp());
        EXPECT(0x8940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893e));
        EXPECT(0xf2, gbc.readMem(0x893f));
        // CB F2 017F
        gbc.setState(0xe15, 0x768, 0x6c90, 0xaacc, 0x94fb, 0x7f6b, 0x1, 0x1);
        gbc.writeMem(0xe15, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0180
        gbc.setState(0x19f3, 0x9f76, 0x210, 0x5a23, 0xed7, 0x2d86, 0x1, 0x0);
        gbc.writeMem(0x19f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9f76, gbc.sp());
        EXPECT(0x19f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0181
        gbc.setState(0x4803, 0xeece, 0x32f0, 0x54ca, 0x34f8, 0xe9b, 0x0, 0x0);
        gbc.writeMem(0x4803, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xeece, gbc.sp());
        EXPECT(0x4805, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0182
        gbc.setState(0x9884, 0x7ff, 0x9d50, 0x8f10, 0x2e33, 0x7827, 0x0, 0x0);
        gbc.writeMem(0x9884, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7ff, gbc.sp());
        EXPECT(0x9886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9884));
        EXPECT(0xf2, gbc.readMem(0x9885));
        // CB F2 0183
        gbc.setState(0xbf9e, 0x97da, 0xfcf0, 0xf42a, 0x8777, 0xd9b3, 0x0, 0x0);
        gbc.writeMem(0xbf9e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x97da, gbc.sp());
        EXPECT(0xbfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf9e));
        EXPECT(0xf2, gbc.readMem(0xbf9f));
        // CB F2 0184
        gbc.setState(0x60c, 0x3449, 0x3020, 0x9e5a, 0xbb35, 0x97ce, 0x1, 0x1);
        gbc.writeMem(0x60c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3449, gbc.sp());
        EXPECT(0x60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0185
        gbc.setState(0x69fe, 0x43c8, 0xed70, 0xe6a6, 0x14ff, 0x517f, 0x0, 0x0);
        gbc.writeMem(0x69fe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x43c8, gbc.sp());
        EXPECT(0x6a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0186
        gbc.setState(0x6969, 0xc021, 0x6150, 0x4942, 0x1c72, 0x926b, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0187
        gbc.setState(0x63cb, 0x2e9a, 0xb700, 0x26b7, 0xc05a, 0x644c, 0x1, 0x0);
        gbc.writeMem(0x63cb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2e9a, gbc.sp());
        EXPECT(0x63cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0188
        gbc.setState(0x87e3, 0x7624, 0x39c0, 0x55e3, 0xac21, 0x8b57, 0x1, 0x1);
        gbc.writeMem(0x87e3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7624, gbc.sp());
        EXPECT(0x87e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87e3));
        EXPECT(0xf2, gbc.readMem(0x87e4));
        // CB F2 0189
        gbc.setState(0x78b6, 0xb14, 0x82c0, 0x3638, 0xdc5a, 0xb029, 0x0, 0x0);
        gbc.writeMem(0x78b6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb14, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 018A
        gbc.setState(0x4cc9, 0x39d2, 0x2e00, 0xbecc, 0xdc36, 0x81c2, 0x1, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x39d2, gbc.sp());
        EXPECT(0x4ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 018B
        gbc.setState(0xa65f, 0x4d70, 0x8f60, 0xcc49, 0xe387, 0xa153, 0x1, 0x1);
        gbc.writeMem(0xa65f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4d70, gbc.sp());
        EXPECT(0xa661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa65f));
        EXPECT(0xf2, gbc.readMem(0xa660));
        // CB F2 018D
        gbc.setState(0xa222, 0x5cd7, 0x8da0, 0x1a17, 0x3385, 0xc5de, 0x0, 0x0);
        gbc.writeMem(0xa222, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5cd7, gbc.sp());
        EXPECT(0xa224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa222));
        EXPECT(0xf2, gbc.readMem(0xa223));
        // CB F2 018E
        gbc.setState(0x1271, 0xa342, 0x2650, 0x6cb4, 0xf426, 0x3f87, 0x1, 0x1);
        gbc.writeMem(0x1271, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa342, gbc.sp());
        EXPECT(0x1273, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 018F
        gbc.setState(0x4862, 0xf2e6, 0xfaf0, 0x48f3, 0x6bf3, 0x5c7f, 0x1, 0x1);
        gbc.writeMem(0x4862, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf2e6, gbc.sp());
        EXPECT(0x4864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0190
        gbc.setState(0xbd05, 0xa419, 0x20d0, 0xf68f, 0x1f6b, 0xb90c, 0x0, 0x0);
        gbc.writeMem(0xbd05, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xa419, gbc.sp());
        EXPECT(0xbd07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd05));
        EXPECT(0xf2, gbc.readMem(0xbd06));
        // CB F2 0191
        gbc.setState(0x4284, 0x4a9a, 0xfc80, 0x3f8d, 0xcbd0, 0x95bb, 0x1, 0x1);
        gbc.writeMem(0x4284, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x4a9a, gbc.sp());
        EXPECT(0x4286, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0192
        gbc.setState(0xca5a, 0xa4eb, 0xc4e0, 0x434e, 0x68fa, 0xda4a, 0x1, 0x0);
        gbc.writeMem(0xca5a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa4eb, gbc.sp());
        EXPECT(0xca5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca5a));
        EXPECT(0xf2, gbc.readMem(0xca5b));
        // CB F2 0193
        gbc.setState(0x5b46, 0x33bb, 0x1150, 0x1a62, 0x321, 0xe30f, 0x0, 0x1);
        gbc.writeMem(0x5b46, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x33bb, gbc.sp());
        EXPECT(0x5b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0194
        gbc.setState(0x3773, 0x20b4, 0x9d80, 0x1c11, 0xb0b2, 0xfd7b, 0x0, 0x0);
        gbc.writeMem(0x3773, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x20b4, gbc.sp());
        EXPECT(0x3775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0195
        gbc.setState(0xab4e, 0x1b0d, 0x2a90, 0xb0b4, 0x320b, 0x7541, 0x0, 0x1);
        gbc.writeMem(0xab4e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1b0d, gbc.sp());
        EXPECT(0xab50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4e));
        EXPECT(0xf2, gbc.readMem(0xab4f));
        // CB F2 0196
        gbc.setState(0xc1c7, 0xcb51, 0xc2b0, 0x4075, 0x7e8e, 0x2f85, 0x0, 0x1);
        gbc.writeMem(0xc1c7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcb51, gbc.sp());
        EXPECT(0xc1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c7));
        EXPECT(0xf2, gbc.readMem(0xc1c8));
        // CB F2 0197
        gbc.setState(0x284a, 0x999a, 0x3e80, 0x8c, 0xfaed, 0x7260, 0x1, 0x0);
        gbc.writeMem(0x284a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x284c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0198
        gbc.setState(0xb9e8, 0x355, 0x4340, 0x7635, 0xfda1, 0xb8ea, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x355, gbc.sp());
        EXPECT(0xb9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e8));
        EXPECT(0xf2, gbc.readMem(0xb9e9));
        // CB F2 0199
        gbc.setState(0x6f7f, 0x3a15, 0x6330, 0xcfe5, 0x7d2f, 0x4b6b, 0x1, 0x1);
        gbc.writeMem(0x6f7f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3a15, gbc.sp());
        EXPECT(0x6f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 019A
        gbc.setState(0xd730, 0x89fd, 0xb8b0, 0x3581, 0x2c42, 0x4159, 0x1, 0x1);
        gbc.writeMem(0xd730, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0xd732, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd730));
        EXPECT(0xf2, gbc.readMem(0xd731));
        // CB F2 019B
        gbc.setState(0xb860, 0xcb0a, 0x5bb0, 0xb63c, 0x2c59, 0x9543, 0x0, 0x1);
        gbc.writeMem(0xb860, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcb0a, gbc.sp());
        EXPECT(0xb862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb860));
        EXPECT(0xf2, gbc.readMem(0xb861));
        // CB F2 019C
        gbc.setState(0x178f, 0x2cbf, 0x4b90, 0x5c56, 0x69f5, 0xc3e9, 0x1, 0x0);
        gbc.writeMem(0x178f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2cbf, gbc.sp());
        EXPECT(0x1791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 019D
        gbc.setState(0x7dc2, 0x8b59, 0x1060, 0x756b, 0x3a04, 0xc53b, 0x1, 0x0);
        gbc.writeMem(0x7dc2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8b59, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 019E
        gbc.setState(0x59da, 0x9061, 0xa190, 0x7fc6, 0xf02f, 0x5dc0, 0x0, 0x0);
        gbc.writeMem(0x59da, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9061, gbc.sp());
        EXPECT(0x59dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 019F
        gbc.setState(0xb8ba, 0x524c, 0xbab0, 0xf643, 0xa52f, 0x9892, 0x1, 0x0);
        gbc.writeMem(0xb8ba, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x524c, gbc.sp());
        EXPECT(0xb8bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8ba));
        EXPECT(0xf2, gbc.readMem(0xb8bb));
        // CB F2 01A0
        gbc.setState(0x2388, 0xd2f6, 0x9380, 0x5ad3, 0x2e65, 0xcd09, 0x0, 0x0);
        gbc.writeMem(0x2388, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xd2f6, gbc.sp());
        EXPECT(0x238a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01A1
        gbc.setState(0x9559, 0xaa4a, 0xdc20, 0x1af1, 0x9d0f, 0x957a, 0x1, 0x1);
        gbc.writeMem(0x9559, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xaa4a, gbc.sp());
        EXPECT(0x955b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9559));
        EXPECT(0xf2, gbc.readMem(0x955a));
        // CB F2 01A2
        gbc.setState(0x6b23, 0x10ce, 0x5410, 0xfd7c, 0xf0fc, 0x6e72, 0x1, 0x0);
        gbc.writeMem(0x6b23, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x10ce, gbc.sp());
        EXPECT(0x6b25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01A4
        gbc.setState(0x8d74, 0x46a7, 0x700, 0x31ac, 0x619, 0xe7d5, 0x0, 0x0);
        gbc.writeMem(0x8d74, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x46a7, gbc.sp());
        EXPECT(0x8d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d74));
        EXPECT(0xf2, gbc.readMem(0x8d75));
        // CB F2 01A5
        gbc.setState(0x644, 0x248d, 0x8d60, 0xd11c, 0xca70, 0xa65a, 0x1, 0x0);
        gbc.writeMem(0x644, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x248d, gbc.sp());
        EXPECT(0x646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01A6
        gbc.setState(0x3ed2, 0x8d48, 0x2660, 0xfcef, 0x56f0, 0x1f72, 0x1, 0x1);
        gbc.writeMem(0x3ed2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8d48, gbc.sp());
        EXPECT(0x3ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01A7
        gbc.setState(0xaa0f, 0xfb1b, 0x1b80, 0xc8e1, 0xaa81, 0x6f6b, 0x0, 0x1);
        gbc.writeMem(0xaa0f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0xf2, gbc.readMem(0xaa10));
        // CB F2 01A8
        gbc.setState(0x38bc, 0x93a1, 0x73f0, 0xed18, 0xe03a, 0xa08a, 0x1, 0x1);
        gbc.writeMem(0x38bc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0x38be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01A9
        gbc.setState(0x23bd, 0xb5c8, 0x31d0, 0x1ccd, 0xa6ec, 0xb3be, 0x1, 0x0);
        gbc.writeMem(0x23bd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb5c8, gbc.sp());
        EXPECT(0x23bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01AA
        gbc.setState(0xb57f, 0xb649, 0x9ea0, 0x7d84, 0xf3c4, 0xdffa, 0x0, 0x0);
        gbc.writeMem(0xb57f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xb649, gbc.sp());
        EXPECT(0xb581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57f));
        EXPECT(0xf2, gbc.readMem(0xb580));
        // CB F2 01AB
        gbc.setState(0xd8c4, 0x4379, 0x9120, 0x8235, 0x551b, 0xe93d, 0x1, 0x1);
        gbc.writeMem(0xd8c4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4379, gbc.sp());
        EXPECT(0xd8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8c4));
        EXPECT(0xf2, gbc.readMem(0xd8c5));
        // CB F2 01AC
        gbc.setState(0xdbd7, 0x24cf, 0xf600, 0xabf5, 0xca88, 0xad24, 0x1, 0x0);
        gbc.writeMem(0xdbd7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x24cf, gbc.sp());
        EXPECT(0xdbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd7));
        EXPECT(0xf2, gbc.readMem(0xdbd8));
        // CB F2 01AD
        gbc.setState(0x1604, 0xb08d, 0x4b50, 0x842d, 0x19f7, 0x1f90, 0x1, 0x0);
        gbc.writeMem(0x1604, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x1606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01AE
        gbc.setState(0xe03, 0x205f, 0x8950, 0xd29, 0x899a, 0x18e5, 0x1, 0x0);
        gbc.writeMem(0xe03, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x205f, gbc.sp());
        EXPECT(0xe05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01AF
        gbc.setState(0xc55b, 0xd687, 0x7960, 0xd042, 0x5440, 0x3fbc, 0x0, 0x1);
        gbc.writeMem(0xc55b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd687, gbc.sp());
        EXPECT(0xc55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc55b));
        EXPECT(0xf2, gbc.readMem(0xc55c));
        // CB F2 01B0
        gbc.setState(0x99e8, 0x12c, 0x1100, 0x9c2, 0x6b3a, 0x53bf, 0x1, 0x1);
        gbc.writeMem(0x99e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x12c, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e8));
        EXPECT(0xf2, gbc.readMem(0x99e9));
        // CB F2 01B1
        gbc.setState(0x2236, 0xc696, 0x8330, 0xa5e3, 0x650f, 0x636, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc696, gbc.sp());
        EXPECT(0x2238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01B2
        gbc.setState(0x59cd, 0xf084, 0x9cc0, 0x6a61, 0xba38, 0x10c9, 0x0, 0x0);
        gbc.writeMem(0x59cd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf084, gbc.sp());
        EXPECT(0x59cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01B3
        gbc.setState(0x6e16, 0x75a6, 0x9b40, 0xa42f, 0x94f, 0x8f14, 0x1, 0x0);
        gbc.writeMem(0x6e16, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x75a6, gbc.sp());
        EXPECT(0x6e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01B4
        gbc.setState(0x8509, 0x9caf, 0x6400, 0xda03, 0x898c, 0x643c, 0x0, 0x1);
        gbc.writeMem(0x8509, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9caf, gbc.sp());
        EXPECT(0x850b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8509));
        EXPECT(0xf2, gbc.readMem(0x850a));
        // CB F2 01B5
        gbc.setState(0xe5d, 0x909f, 0x6c70, 0xe8d0, 0x372a, 0x2689, 0x0, 0x0);
        gbc.writeMem(0xe5d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0xe5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01B6
        gbc.setState(0x3a2e, 0x3ace, 0xdca0, 0xbc93, 0x77f0, 0xc06e, 0x0, 0x0);
        gbc.writeMem(0x3a2e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x3ace, gbc.sp());
        EXPECT(0x3a30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01B7
        gbc.setState(0x92d9, 0x8d4a, 0xcc50, 0x42f0, 0xdfd4, 0x93ce, 0x0, 0x1);
        gbc.writeMem(0x92d9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8d4a, gbc.sp());
        EXPECT(0x92db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d9));
        EXPECT(0xf2, gbc.readMem(0x92da));
        // CB F2 01B8
        gbc.setState(0xcf42, 0x7ea5, 0x4c80, 0xcfdc, 0x8c06, 0x7185, 0x1, 0x1);
        gbc.writeMem(0xcf42, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0xcf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf42));
        EXPECT(0xf2, gbc.readMem(0xcf43));
        // CB F2 01B9
        gbc.setState(0xc116, 0xa8cc, 0xddb0, 0x2550, 0xc709, 0xb097, 0x1, 0x1);
        gbc.writeMem(0xc116, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa8cc, gbc.sp());
        EXPECT(0xc118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc116));
        EXPECT(0xf2, gbc.readMem(0xc117));
        // CB F2 01BA
        gbc.setState(0xcbd6, 0x7631, 0x54b0, 0x1df8, 0x7161, 0x6565, 0x0, 0x0);
        gbc.writeMem(0xcbd6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7631, gbc.sp());
        EXPECT(0xcbd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd6));
        EXPECT(0xf2, gbc.readMem(0xcbd7));
        // CB F2 01BB
        gbc.setState(0xbb4e, 0x68e7, 0xd170, 0x40e8, 0x4c38, 0x909e, 0x0, 0x1);
        gbc.writeMem(0xbb4e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x68e7, gbc.sp());
        EXPECT(0xbb50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb4e));
        EXPECT(0xf2, gbc.readMem(0xbb4f));
        // CB F2 01BD
        gbc.setState(0x8662, 0xc9d8, 0xea40, 0x7b6b, 0xe6ff, 0xa0f8, 0x0, 0x1);
        gbc.writeMem(0x8662, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x8664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8662));
        EXPECT(0xf2, gbc.readMem(0x8663));
        // CB F2 01BE
        gbc.setState(0x92df, 0x2b25, 0x9be0, 0xfc8c, 0xcfa4, 0xcd1e, 0x0, 0x0);
        gbc.writeMem(0x92df, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2b25, gbc.sp());
        EXPECT(0x92e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92df));
        EXPECT(0xf2, gbc.readMem(0x92e0));
        // CB F2 01BF
        gbc.setState(0x44e, 0xdad2, 0x8f60, 0x54eb, 0x6740, 0x2ef8, 0x1, 0x0);
        gbc.writeMem(0x44e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdad2, gbc.sp());
        EXPECT(0x450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01C0
        gbc.setState(0xd0eb, 0x1607, 0x230, 0x1757, 0xffab, 0x299b, 0x1, 0x1);
        gbc.writeMem(0xd0eb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1607, gbc.sp());
        EXPECT(0xd0ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0eb));
        EXPECT(0xf2, gbc.readMem(0xd0ec));
        // CB F2 01C3
        gbc.setState(0x474b, 0x3b20, 0xa700, 0xa7e9, 0x75a, 0x76e4, 0x1, 0x1);
        gbc.writeMem(0x474b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3b20, gbc.sp());
        EXPECT(0x474d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01C4
        gbc.setState(0x9935, 0x2ae8, 0xf0b0, 0x4513, 0x841f, 0x7a6a, 0x0, 0x1);
        gbc.writeMem(0x9935, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2ae8, gbc.sp());
        EXPECT(0x9937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9935));
        EXPECT(0xf2, gbc.readMem(0x9936));
        // CB F2 01C5
        gbc.setState(0xe6c5, 0xd322, 0x44d0, 0x5f33, 0xdc2c, 0x70cd, 0x0, 0x0);
        gbc.writeMem(0xe6c5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd322, gbc.sp());
        EXPECT(0xe6c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c5));
        EXPECT(0xf2, gbc.readMem(0xe6c6));
        // CB F2 01C7
        gbc.setState(0xd013, 0x35cc, 0xcbf0, 0x1bcc, 0x565f, 0x6e0a, 0x0, 0x1);
        gbc.writeMem(0xd013, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x35cc, gbc.sp());
        EXPECT(0xd015, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd013));
        EXPECT(0xf2, gbc.readMem(0xd014));
        // CB F2 01C8
        gbc.setState(0x96b9, 0x7814, 0x8750, 0x823f, 0x58f8, 0x1681, 0x0, 0x1);
        gbc.writeMem(0x96b9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0xf2, gbc.readMem(0x96ba));
        // CB F2 01C9
        gbc.setState(0x3041, 0x9ba1, 0xdfa0, 0x89f, 0xbaf0, 0x3825, 0x1, 0x0);
        gbc.writeMem(0x3041, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0x3043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01CA
        gbc.setState(0xbd1c, 0x7f26, 0x32b0, 0x54a1, 0xcb63, 0xcdaa, 0x0, 0x0);
        gbc.writeMem(0xbd1c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7f26, gbc.sp());
        EXPECT(0xbd1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd1c));
        EXPECT(0xf2, gbc.readMem(0xbd1d));
        // CB F2 01CB
        gbc.setState(0xfd8, 0xc288, 0xd510, 0xed03, 0x77f4, 0xc24a, 0x1, 0x0);
        gbc.writeMem(0xfd8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc288, gbc.sp());
        EXPECT(0xfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01CC
        gbc.setState(0xd7f1, 0x82b, 0xc290, 0x9608, 0x14b5, 0xecf2, 0x1, 0x0);
        gbc.writeMem(0xd7f1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x82b, gbc.sp());
        EXPECT(0xd7f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7f1));
        EXPECT(0xf2, gbc.readMem(0xd7f2));
        // CB F2 01CE
        gbc.setState(0xd5d8, 0x70b9, 0x9760, 0x9245, 0x62ba, 0x2ad4, 0x1, 0x0);
        gbc.writeMem(0xd5d8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xd5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5d8));
        EXPECT(0xf2, gbc.readMem(0xd5d9));
        // CB F2 01CF
        gbc.setState(0xcec, 0xea77, 0xa4b0, 0x7456, 0x21d4, 0xb3c7, 0x1, 0x0);
        gbc.writeMem(0xcec, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xea77, gbc.sp());
        EXPECT(0xcee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01D0
        gbc.setState(0x2958, 0x3a4a, 0x4d0, 0xbaa4, 0xfae7, 0xb8e3, 0x1, 0x0);
        gbc.writeMem(0x2958, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3a4a, gbc.sp());
        EXPECT(0x295a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01D1
        gbc.setState(0xd88c, 0x66a6, 0x4920, 0x303e, 0x30f0, 0x695, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x66a6, gbc.sp());
        EXPECT(0xd88e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88c));
        EXPECT(0xf2, gbc.readMem(0xd88d));
        // CB F2 01D2
        gbc.setState(0xc00d, 0x92a9, 0x9600, 0x1fbf, 0x1adc, 0x9417, 0x0, 0x1);
        gbc.writeMem(0xc00d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x92a9, gbc.sp());
        EXPECT(0xc00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc00d));
        EXPECT(0xf2, gbc.readMem(0xc00e));
        // CB F2 01D3
        gbc.setState(0xd58a, 0x86ee, 0x71a0, 0x2499, 0xbfeb, 0x9bd7, 0x0, 0x1);
        gbc.writeMem(0xd58a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x86ee, gbc.sp());
        EXPECT(0xd58c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd58a));
        EXPECT(0xf2, gbc.readMem(0xd58b));
        // CB F2 01D4
        gbc.setState(0x1600, 0x8d04, 0xd340, 0x25d5, 0x25cf, 0xc83d, 0x0, 0x0);
        gbc.writeMem(0x1600, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8d04, gbc.sp());
        EXPECT(0x1602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01D5
        gbc.setState(0x7343, 0x8f98, 0x7440, 0x9959, 0x5163, 0x96d2, 0x0, 0x1);
        gbc.writeMem(0x7343, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8f98, gbc.sp());
        EXPECT(0x7345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01D7
        gbc.setState(0x9a1e, 0x491a, 0xf830, 0x493, 0x9dd7, 0x96f, 0x1, 0x0);
        gbc.writeMem(0x9a1e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x491a, gbc.sp());
        EXPECT(0x9a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a1e));
        EXPECT(0xf2, gbc.readMem(0x9a1f));
        // CB F2 01D8
        gbc.setState(0x9dda, 0x38d5, 0x6110, 0xc8c5, 0xe3e3, 0x4773, 0x0, 0x1);
        gbc.writeMem(0x9dda, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x38d5, gbc.sp());
        EXPECT(0x9ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dda));
        EXPECT(0xf2, gbc.readMem(0x9ddb));
        // CB F2 01D9
        gbc.setState(0xccfb, 0x7d5d, 0x55c0, 0x65c5, 0x4063, 0x8705, 0x0, 0x0);
        gbc.writeMem(0xccfb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfb));
        EXPECT(0xf2, gbc.readMem(0xccfc));
        // CB F2 01DA
        gbc.setState(0x784, 0xc880, 0x1420, 0x4cd3, 0x39ab, 0x8836, 0x0, 0x0);
        gbc.writeMem(0x784, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01DB
        gbc.setState(0x38f4, 0xf8f4, 0x5ba0, 0x1a56, 0x810b, 0xd949, 0x0, 0x0);
        gbc.writeMem(0x38f4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf8f4, gbc.sp());
        EXPECT(0x38f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01DC
        gbc.setState(0x9379, 0x2ef0, 0xb690, 0xb6d2, 0x3b95, 0xa1d6, 0x1, 0x1);
        gbc.writeMem(0x9379, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x937b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9379));
        EXPECT(0xf2, gbc.readMem(0x937a));
        // CB F2 01DD
        gbc.setState(0x1c32, 0x32db, 0x9700, 0x8297, 0x42e6, 0xa718, 0x1, 0x0);
        gbc.writeMem(0x1c32, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x32db, gbc.sp());
        EXPECT(0x1c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01DE
        gbc.setState(0x5fb9, 0xeecc, 0x47c0, 0x94, 0xe439, 0x90c5, 0x1, 0x1);
        gbc.writeMem(0x5fb9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xeecc, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01DF
        gbc.setState(0x8470, 0x7ef5, 0x3b70, 0xbfd0, 0x53f7, 0x9734, 0x0, 0x0);
        gbc.writeMem(0x8470, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ef5, gbc.sp());
        EXPECT(0x8472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8470));
        EXPECT(0xf2, gbc.readMem(0x8471));
        // CB F2 01E0
        gbc.setState(0xbe77, 0x6654, 0xc000, 0x6a05, 0x9946, 0xb063, 0x1, 0x1);
        gbc.writeMem(0xbe77, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6654, gbc.sp());
        EXPECT(0xbe79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe77));
        EXPECT(0xf2, gbc.readMem(0xbe78));
        // CB F2 01E1
        gbc.setState(0x1cf1, 0xc6f4, 0x1cf0, 0x4e6f, 0xbf13, 0xf084, 0x0, 0x1);
        gbc.writeMem(0x1cf1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc6f4, gbc.sp());
        EXPECT(0x1cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01E2
        gbc.setState(0x868b, 0xb17a, 0x8090, 0x56a3, 0x3867, 0x4bca, 0x1, 0x1);
        gbc.writeMem(0x868b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xb17a, gbc.sp());
        EXPECT(0x868d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868b));
        EXPECT(0xf2, gbc.readMem(0x868c));
        // CB F2 01E3
        gbc.setState(0xa912, 0xa6f3, 0xdc60, 0x3570, 0x6e85, 0x8d56, 0x1, 0x1);
        gbc.writeMem(0xa912, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa6f3, gbc.sp());
        EXPECT(0xa914, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa912));
        EXPECT(0xf2, gbc.readMem(0xa913));
        // CB F2 01E4
        gbc.setState(0x2b01, 0x8b1c, 0x5f30, 0xf7e5, 0xe6e4, 0xdc11, 0x0, 0x1);
        gbc.writeMem(0x2b01, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8b1c, gbc.sp());
        EXPECT(0x2b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01E5
        gbc.setState(0xbf42, 0x44a3, 0x8400, 0x66b7, 0x6fe6, 0xc6c9, 0x0, 0x1);
        gbc.writeMem(0xbf42, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x44a3, gbc.sp());
        EXPECT(0xbf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf42));
        EXPECT(0xf2, gbc.readMem(0xbf43));
        // CB F2 01E6
        gbc.setState(0xdba2, 0xcb96, 0x1060, 0x16c4, 0xed4b, 0xbaae, 0x1, 0x0);
        gbc.writeMem(0xdba2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcb96, gbc.sp());
        EXPECT(0xdba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba2));
        EXPECT(0xf2, gbc.readMem(0xdba3));
        // CB F2 01E7
        gbc.setState(0x87fa, 0x4410, 0xe010, 0x1926, 0x6cb3, 0x9071, 0x1, 0x0);
        gbc.writeMem(0x87fa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x4410, gbc.sp());
        EXPECT(0x87fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87fa));
        EXPECT(0xf2, gbc.readMem(0x87fb));
        // CB F2 01E8
        gbc.setState(0x4947, 0x653c, 0x6150, 0x1d56, 0x192a, 0x5525, 0x0, 0x1);
        gbc.writeMem(0x4947, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01E9
        gbc.setState(0x1b9c, 0x2abc, 0x5c60, 0x6e75, 0x4230, 0x35e0, 0x0, 0x1);
        gbc.writeMem(0x1b9c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2abc, gbc.sp());
        EXPECT(0x1b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01EA
        gbc.setState(0xbe6b, 0xb3df, 0xaa60, 0xeb52, 0xcab6, 0xff9e, 0x1, 0x0);
        gbc.writeMem(0xbe6b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb3df, gbc.sp());
        EXPECT(0xbe6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe6b));
        EXPECT(0xf2, gbc.readMem(0xbe6c));
        // CB F2 01ED
        gbc.setState(0x3a4c, 0x8eec, 0x5500, 0x6c76, 0xa215, 0x7f47, 0x0, 0x0);
        gbc.writeMem(0x3a4c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8eec, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01EE
        gbc.setState(0xecbb, 0x815, 0xd0f0, 0x74d3, 0xce9a, 0xb244, 0x1, 0x1);
        gbc.writeMem(0xecbb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x815, gbc.sp());
        EXPECT(0xecbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbb));
        EXPECT(0xf2, gbc.readMem(0xecbc));
        // CB F2 01EF
        gbc.setState(0xd092, 0x26c3, 0xed90, 0xfe27, 0xd97e, 0x66ef, 0x0, 0x1);
        gbc.writeMem(0xd092, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x26c3, gbc.sp());
        EXPECT(0xd094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd092));
        EXPECT(0xf2, gbc.readMem(0xd093));
        // CB F2 01F0
        gbc.setState(0x2585, 0x43a2, 0x9de0, 0x66db, 0xf0d5, 0xfe17, 0x1, 0x1);
        gbc.writeMem(0x2585, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x43a2, gbc.sp());
        EXPECT(0x2587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01F1
        gbc.setState(0x6462, 0x5dba, 0x7770, 0x52fd, 0x176, 0xaec2, 0x0, 0x1);
        gbc.writeMem(0x6462, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5dba, gbc.sp());
        EXPECT(0x6464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01F2
        gbc.setState(0xd22d, 0xb026, 0xed10, 0x8d07, 0x798b, 0x4e88, 0x0, 0x0);
        gbc.writeMem(0xd22d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd22d));
        EXPECT(0xf2, gbc.readMem(0xd22e));
        // CB F2 01F3
        gbc.setState(0x7c3e, 0xc860, 0xf630, 0x7e89, 0x1e28, 0x2b8b, 0x1, 0x1);
        gbc.writeMem(0x7c3e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc860, gbc.sp());
        EXPECT(0x7c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01F4
        gbc.setState(0x12b0, 0x74f2, 0xd320, 0x37d8, 0x686, 0x5914, 0x1, 0x0);
        gbc.writeMem(0x12b0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x74f2, gbc.sp());
        EXPECT(0x12b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01F5
        gbc.setState(0xe1ec, 0x5494, 0xe420, 0xb05f, 0x3813, 0xbd14, 0x0, 0x1);
        gbc.writeMem(0xe1ec, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5494, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ec));
        EXPECT(0xf2, gbc.readMem(0xe1ed));
        // CB F2 01F6
        gbc.setState(0x9185, 0x2d47, 0xb2b0, 0xa866, 0xf101, 0x9bd8, 0x0, 0x0);
        gbc.writeMem(0x9185, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x9187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9185));
        EXPECT(0xf2, gbc.readMem(0x9186));
        // CB F2 01F7
        gbc.setState(0x79e2, 0x58ee, 0x9ff0, 0xa243, 0x3e10, 0x2b65, 0x0, 0x1);
        gbc.writeMem(0x79e2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x58ee, gbc.sp());
        EXPECT(0x79e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01F8
        gbc.setState(0x28ad, 0x8fbc, 0x9d10, 0x29d1, 0x22ac, 0x196a, 0x0, 0x0);
        gbc.writeMem(0x28ad, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0x28af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01F9
        gbc.setState(0xa4c6, 0x949b, 0x65b0, 0x79bc, 0x21b2, 0x18e5, 0x1, 0x0);
        gbc.writeMem(0xa4c6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x949b, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c6));
        EXPECT(0xf2, gbc.readMem(0xa4c7));
        // CB F2 01FA
        gbc.setState(0x8a93, 0x7cfc, 0xe550, 0x8272, 0xff29, 0x2431, 0x0, 0x0);
        gbc.writeMem(0x8a93, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7cfc, gbc.sp());
        EXPECT(0x8a95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a93));
        EXPECT(0xf2, gbc.readMem(0x8a94));
        // CB F2 01FB
        gbc.setState(0x83f, 0xd133, 0x3330, 0x1588, 0x943, 0x3756, 0x1, 0x1);
        gbc.writeMem(0x83f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd133, gbc.sp());
        EXPECT(0x841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01FC
        gbc.setState(0x1511, 0x3a79, 0x2cd0, 0xdb3e, 0x7733, 0xab27, 0x1, 0x0);
        gbc.writeMem(0x1511, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3a79, gbc.sp());
        EXPECT(0x1513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01FD
        gbc.setState(0x767b, 0x6a06, 0x2130, 0xac92, 0x8b08, 0xf6ee, 0x1, 0x1);
        gbc.writeMem(0x767b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6a06, gbc.sp());
        EXPECT(0x767d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 01FE
        gbc.setState(0x36eb, 0x3618, 0x5aa0, 0xf449, 0x6224, 0x804f, 0x1, 0x1);
        gbc.writeMem(0x36eb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3618, gbc.sp());
        EXPECT(0x36ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 01FF
        gbc.setState(0x7805, 0x142c, 0xbc00, 0xcb1e, 0x2a73, 0xa12e, 0x1, 0x0);
        gbc.writeMem(0x7805, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x142c, gbc.sp());
        EXPECT(0x7807, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0200
        gbc.setState(0x5753, 0x5f08, 0xb830, 0x9c23, 0x4823, 0xa3d3, 0x1, 0x0);
        gbc.writeMem(0x5753, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x5755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0201
        gbc.setState(0xb596, 0x5766, 0xe8b0, 0xa282, 0xda37, 0xbb7, 0x1, 0x0);
        gbc.writeMem(0xb596, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5766, gbc.sp());
        EXPECT(0xb598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb596));
        EXPECT(0xf2, gbc.readMem(0xb597));
        // CB F2 0202
        gbc.setState(0x18f9, 0xa3eb, 0x9ca0, 0x6346, 0x6142, 0x1808, 0x0, 0x0);
        gbc.writeMem(0x18f9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa3eb, gbc.sp());
        EXPECT(0x18fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0203
        gbc.setState(0x776c, 0x2080, 0x88f0, 0xda66, 0x2060, 0xe333, 0x0, 0x0);
        gbc.writeMem(0x776c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2080, gbc.sp());
        EXPECT(0x776e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0204
        gbc.setState(0x577b, 0xfe9c, 0xd4a0, 0x1fcf, 0x10e3, 0x3f9b, 0x0, 0x0);
        gbc.writeMem(0x577b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x577d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0205
        gbc.setState(0xc75e, 0xe1a2, 0x4480, 0xc907, 0xf57d, 0x59b7, 0x0, 0x0);
        gbc.writeMem(0xc75e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe1a2, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75e));
        EXPECT(0xf2, gbc.readMem(0xc75f));
        // CB F2 0206
        gbc.setState(0x9ee5, 0x759c, 0x68a0, 0xa39a, 0xac18, 0x37a2, 0x1, 0x1);
        gbc.writeMem(0x9ee5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x759c, gbc.sp());
        EXPECT(0x9ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee5));
        EXPECT(0xf2, gbc.readMem(0x9ee6));
        // CB F2 0207
        gbc.setState(0xc2d5, 0xa168, 0x8a30, 0x243, 0xe4a1, 0xc7c3, 0x1, 0x1);
        gbc.writeMem(0xc2d5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa168, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d5));
        EXPECT(0xf2, gbc.readMem(0xc2d6));
        // CB F2 0208
        gbc.setState(0x867a, 0x5478, 0x90f0, 0x55ce, 0x57ee, 0xe88e, 0x0, 0x0);
        gbc.writeMem(0x867a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5478, gbc.sp());
        EXPECT(0x867c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867a));
        EXPECT(0xf2, gbc.readMem(0x867b));
        // CB F2 0209
        gbc.setState(0x1741, 0x858c, 0x2190, 0x1dc2, 0xc08a, 0x837c, 0x1, 0x1);
        gbc.writeMem(0x1741, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x858c, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 020A
        gbc.setState(0x7eb4, 0x3114, 0x2da0, 0x7a65, 0xd3d4, 0x322d, 0x0, 0x1);
        gbc.writeMem(0x7eb4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3114, gbc.sp());
        EXPECT(0x7eb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 020B
        gbc.setState(0xa30, 0x9d33, 0x90d0, 0xc893, 0xa329, 0x9be6, 0x0, 0x1);
        gbc.writeMem(0xa30, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9d33, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 020C
        gbc.setState(0x568e, 0x8d49, 0x7590, 0xcb81, 0x535a, 0xf7b8, 0x0, 0x0);
        gbc.writeMem(0x568e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8d49, gbc.sp());
        EXPECT(0x5690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 020D
        gbc.setState(0xa8cc, 0x7d79, 0x7e70, 0x9b79, 0xba30, 0xcdb, 0x0, 0x0);
        gbc.writeMem(0xa8cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7d79, gbc.sp());
        EXPECT(0xa8ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8cc));
        EXPECT(0xf2, gbc.readMem(0xa8cd));
        // CB F2 020E
        gbc.setState(0xb46c, 0x80e0, 0x7090, 0x33bb, 0x312d, 0x4217, 0x1, 0x1);
        gbc.writeMem(0xb46c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x80e0, gbc.sp());
        EXPECT(0xb46e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46c));
        EXPECT(0xf2, gbc.readMem(0xb46d));
        // CB F2 020F
        gbc.setState(0xa77c, 0xe432, 0x47f0, 0xc457, 0x281e, 0x2e83, 0x0, 0x0);
        gbc.writeMem(0xa77c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe432, gbc.sp());
        EXPECT(0xa77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa77c));
        EXPECT(0xf2, gbc.readMem(0xa77d));
        // CB F2 0210
        gbc.setState(0x156f, 0xf87e, 0x2050, 0x593a, 0x7ea, 0x77a6, 0x1, 0x1);
        gbc.writeMem(0x156f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf87e, gbc.sp());
        EXPECT(0x1571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0211
        gbc.setState(0xd4e3, 0x6851, 0x9530, 0xdd05, 0xf8d2, 0x6c0f, 0x1, 0x0);
        gbc.writeMem(0xd4e3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6851, gbc.sp());
        EXPECT(0xd4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e3));
        EXPECT(0xf2, gbc.readMem(0xd4e4));
        // CB F2 0212
        gbc.setState(0xb054, 0xd9bc, 0x6590, 0x80fb, 0x46f, 0x1cf3, 0x1, 0x0);
        gbc.writeMem(0xb054, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd9bc, gbc.sp());
        EXPECT(0xb056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb054));
        EXPECT(0xf2, gbc.readMem(0xb055));
        // CB F2 0213
        gbc.setState(0xd14d, 0xccab, 0xa600, 0x2717, 0x88b4, 0x493, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xccab, gbc.sp());
        EXPECT(0xd14f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14d));
        EXPECT(0xf2, gbc.readMem(0xd14e));
        // CB F2 0214
        gbc.setState(0x8c6a, 0xdedf, 0xce70, 0xdfc9, 0x80d8, 0x3b49, 0x0, 0x1);
        gbc.writeMem(0x8c6a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6a));
        EXPECT(0xf2, gbc.readMem(0x8c6b));
        // CB F2 0215
        gbc.setState(0xc703, 0xac25, 0xf380, 0xa900, 0xd031, 0x8ed5, 0x1, 0x0);
        gbc.writeMem(0xc703, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xac25, gbc.sp());
        EXPECT(0xc705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc703));
        EXPECT(0xf2, gbc.readMem(0xc704));
        // CB F2 0216
        gbc.setState(0xae0c, 0x44a3, 0x94d0, 0x67a8, 0x4079, 0xce4a, 0x0, 0x1);
        gbc.writeMem(0xae0c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x44a3, gbc.sp());
        EXPECT(0xae0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae0c));
        EXPECT(0xf2, gbc.readMem(0xae0d));
        // CB F2 0217
        gbc.setState(0xd570, 0xe191, 0x4e50, 0x1e2b, 0x63cf, 0x18ba, 0x0, 0x0);
        gbc.writeMem(0xd570, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe191, gbc.sp());
        EXPECT(0xd572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd570));
        EXPECT(0xf2, gbc.readMem(0xd571));
        // CB F2 0218
        gbc.setState(0x38b5, 0x641, 0x8c20, 0x896a, 0xcf87, 0x623b, 0x1, 0x1);
        gbc.writeMem(0x38b5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x641, gbc.sp());
        EXPECT(0x38b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 021A
        gbc.setState(0x9f17, 0xcefc, 0xa830, 0xea9, 0x3dc, 0xb5f7, 0x0, 0x0);
        gbc.writeMem(0x9f17, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xcefc, gbc.sp());
        EXPECT(0x9f19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f17));
        EXPECT(0xf2, gbc.readMem(0x9f18));
        // CB F2 021B
        gbc.setState(0x527a, 0x2fa9, 0x480, 0xa9af, 0x6d30, 0x721b, 0x1, 0x0);
        gbc.writeMem(0x527a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0x527c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 021D
        gbc.setState(0xba1, 0x3eec, 0x8620, 0x8257, 0xab43, 0x5f5b, 0x1, 0x0);
        gbc.writeMem(0xba1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3eec, gbc.sp());
        EXPECT(0xba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 021E
        gbc.setState(0xdcff, 0xc404, 0xad30, 0xfe, 0x25b7, 0x96d1, 0x1, 0x0);
        gbc.writeMem(0xdcff, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xc404, gbc.sp());
        EXPECT(0xdd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcff));
        EXPECT(0xf2, gbc.readMem(0xdd00));
        // CB F2 021F
        gbc.setState(0x508f, 0x2a50, 0x6650, 0xfd99, 0x70fd, 0x946e, 0x1, 0x1);
        gbc.writeMem(0x508f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2a50, gbc.sp());
        EXPECT(0x5091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0220
        gbc.setState(0x9ee7, 0x5a8a, 0x8bd0, 0xf978, 0xd422, 0xc5aa, 0x0, 0x0);
        gbc.writeMem(0x9ee7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5a8a, gbc.sp());
        EXPECT(0x9ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ee7));
        EXPECT(0xf2, gbc.readMem(0x9ee8));
        // CB F2 0221
        gbc.setState(0xd28, 0xa52f, 0x4300, 0x38c, 0x496d, 0xe05c, 0x1, 0x0);
        gbc.writeMem(0xd28, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa52f, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0222
        gbc.setState(0x241c, 0xa4c8, 0x6fe0, 0x17a4, 0x9c8f, 0xdb88, 0x0, 0x1);
        gbc.writeMem(0x241c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa4c8, gbc.sp());
        EXPECT(0x241e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0223
        gbc.setState(0x17ae, 0x132a, 0xd700, 0x6fd3, 0xd3fe, 0x842d, 0x1, 0x0);
        gbc.writeMem(0x17ae, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x132a, gbc.sp());
        EXPECT(0x17b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0224
        gbc.setState(0xa69c, 0xc1c0, 0x3170, 0x260, 0xdb71, 0x94d8, 0x1, 0x0);
        gbc.writeMem(0xa69c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc1c0, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69c));
        EXPECT(0xf2, gbc.readMem(0xa69d));
        // CB F2 0225
        gbc.setState(0x6bb, 0x17df, 0x6a30, 0x5313, 0x1ae0, 0x5027, 0x1, 0x0);
        gbc.writeMem(0x6bb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x6bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0226
        gbc.setState(0xa31f, 0x7278, 0x320, 0x749, 0xf4e2, 0xbf6e, 0x0, 0x0);
        gbc.writeMem(0xa31f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7278, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31f));
        EXPECT(0xf2, gbc.readMem(0xa320));
        // CB F2 0227
        gbc.setState(0xe301, 0x484c, 0x9630, 0xa905, 0x5c42, 0x586c, 0x1, 0x1);
        gbc.writeMem(0xe301, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x484c, gbc.sp());
        EXPECT(0xe303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe301));
        EXPECT(0xf2, gbc.readMem(0xe302));
        // CB F2 0228
        gbc.setState(0x5e92, 0x1001, 0xd690, 0x758f, 0xef27, 0xd430, 0x0, 0x0);
        gbc.writeMem(0x5e92, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1001, gbc.sp());
        EXPECT(0x5e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0229
        gbc.setState(0x5350, 0xc55c, 0x1950, 0xb65c, 0x6cc7, 0xfb64, 0x0, 0x1);
        gbc.writeMem(0x5350, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc55c, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 022A
        gbc.setState(0x16d0, 0xcbe7, 0xb780, 0x88d1, 0x3cd9, 0xc469, 0x1, 0x1);
        gbc.writeMem(0x16d0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcbe7, gbc.sp());
        EXPECT(0x16d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 022B
        gbc.setState(0x8d38, 0xdbc7, 0x7710, 0x12be, 0x244b, 0xbb09, 0x0, 0x0);
        gbc.writeMem(0x8d38, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdbc7, gbc.sp());
        EXPECT(0x8d3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d38));
        EXPECT(0xf2, gbc.readMem(0x8d39));
        // CB F2 022C
        gbc.setState(0xd8ac, 0x631, 0xa490, 0x9796, 0x9dc1, 0x8c1e, 0x0, 0x1);
        gbc.writeMem(0xd8ac, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x631, gbc.sp());
        EXPECT(0xd8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8ac));
        EXPECT(0xf2, gbc.readMem(0xd8ad));
        // CB F2 022D
        gbc.setState(0x48b7, 0xd7fc, 0xac30, 0x23dd, 0xd65a, 0x9d08, 0x0, 0x1);
        gbc.writeMem(0x48b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd7fc, gbc.sp());
        EXPECT(0x48b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 022E
        gbc.setState(0xb15f, 0x8e60, 0xfbb0, 0xc767, 0xa3e2, 0x37f9, 0x1, 0x0);
        gbc.writeMem(0xb15f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8e60, gbc.sp());
        EXPECT(0xb161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15f));
        EXPECT(0xf2, gbc.readMem(0xb160));
        // CB F2 022F
        gbc.setState(0x14b1, 0x579e, 0xd530, 0x8835, 0x5d56, 0x3878, 0x0, 0x1);
        gbc.writeMem(0x14b1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x579e, gbc.sp());
        EXPECT(0x14b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0230
        gbc.setState(0x949b, 0x95bf, 0xa520, 0x97bd, 0xb856, 0x68b6, 0x0, 0x0);
        gbc.writeMem(0x949b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x95bf, gbc.sp());
        EXPECT(0x949d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x949b));
        EXPECT(0xf2, gbc.readMem(0x949c));
        // CB F2 0231
        gbc.setState(0x5b80, 0x60a6, 0xa410, 0x43d3, 0x7119, 0x1114, 0x1, 0x0);
        gbc.writeMem(0x5b80, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x60a6, gbc.sp());
        EXPECT(0x5b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0232
        gbc.setState(0xc4e6, 0xb904, 0xb190, 0xed54, 0xe689, 0x3b3e, 0x1, 0x0);
        gbc.writeMem(0xc4e6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0xc4e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4e6));
        EXPECT(0xf2, gbc.readMem(0xc4e7));
        // CB F2 0233
        gbc.setState(0x2b32, 0xd7bb, 0xfa70, 0x55ff, 0x38c1, 0x7571, 0x0, 0x1);
        gbc.writeMem(0x2b32, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x2b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0234
        gbc.setState(0xe014, 0xfb7, 0xa5b0, 0xd5ae, 0x1a3f, 0xc728, 0x1, 0x1);
        gbc.writeMem(0xe014, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0xe016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe014));
        EXPECT(0xf2, gbc.readMem(0xe015));
        // CB F2 0235
        gbc.setState(0x96ef, 0xfb35, 0xfea0, 0x38f8, 0xe09c, 0xfb63, 0x0, 0x0);
        gbc.writeMem(0x96ef, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfb35, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ef));
        EXPECT(0xf2, gbc.readMem(0x96f0));
        // CB F2 0236
        gbc.setState(0x564a, 0x6bde, 0x5060, 0x91e2, 0x8956, 0x9a7e, 0x1, 0x1);
        gbc.writeMem(0x564a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6bde, gbc.sp());
        EXPECT(0x564c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0237
        gbc.setState(0x2950, 0xebd3, 0x1180, 0xfcb4, 0xae5d, 0x67c2, 0x1, 0x1);
        gbc.writeMem(0x2950, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xebd3, gbc.sp());
        EXPECT(0x2952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0238
        gbc.setState(0x1cd1, 0x336c, 0x9560, 0xb613, 0x78d3, 0x2b05, 0x1, 0x0);
        gbc.writeMem(0x1cd1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x336c, gbc.sp());
        EXPECT(0x1cd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 023A
        gbc.setState(0x9ba5, 0xea0e, 0xdc20, 0x4232, 0x42a7, 0x9e9e, 0x1, 0x1);
        gbc.writeMem(0x9ba5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea0e, gbc.sp());
        EXPECT(0x9ba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba5));
        EXPECT(0xf2, gbc.readMem(0x9ba6));
        // CB F2 023B
        gbc.setState(0xb610, 0xd8af, 0xb120, 0x76ca, 0x4d83, 0xc2df, 0x1, 0x0);
        gbc.writeMem(0xb610, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd8af, gbc.sp());
        EXPECT(0xb612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb610));
        EXPECT(0xf2, gbc.readMem(0xb611));
        // CB F2 023C
        gbc.setState(0x1a0b, 0x3a1, 0xda20, 0xf08d, 0xa614, 0x2820, 0x1, 0x0);
        gbc.writeMem(0x1a0b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 023D
        gbc.setState(0x4b3f, 0x7617, 0x15a0, 0x7c52, 0xa34c, 0x8acf, 0x0, 0x0);
        gbc.writeMem(0x4b3f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7617, gbc.sp());
        EXPECT(0x4b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 023E
        gbc.setState(0x6440, 0xc64d, 0x93f0, 0x1b95, 0x8e6, 0xb7b9, 0x1, 0x1);
        gbc.writeMem(0x6440, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc64d, gbc.sp());
        EXPECT(0x6442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 023F
        gbc.setState(0x961c, 0x47b0, 0x5880, 0xc8ee, 0x894d, 0x9bc0, 0x1, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x47b0, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961c));
        EXPECT(0xf2, gbc.readMem(0x961d));
        // CB F2 0240
        gbc.setState(0x362a, 0x4927, 0xf5d0, 0x5a74, 0x474e, 0x3530, 0x1, 0x0);
        gbc.writeMem(0x362a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4927, gbc.sp());
        EXPECT(0x362c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0241
        gbc.setState(0x3820, 0x3652, 0x99d0, 0x36a1, 0x25c8, 0xe377, 0x1, 0x0);
        gbc.writeMem(0x3820, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3652, gbc.sp());
        EXPECT(0x3822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0242
        gbc.setState(0x7962, 0x4768, 0xa1d0, 0xc8f5, 0x84a0, 0x1d6b, 0x0, 0x1);
        gbc.writeMem(0x7962, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0x7964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0243
        gbc.setState(0x2a2c, 0x39b2, 0xf490, 0xdbd, 0xce86, 0xaf4b, 0x1, 0x0);
        gbc.writeMem(0x2a2c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x39b2, gbc.sp());
        EXPECT(0x2a2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0244
        gbc.setState(0xde0b, 0x29fb, 0xf6c0, 0xdc43, 0x6201, 0xf410, 0x1, 0x1);
        gbc.writeMem(0xde0b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x29fb, gbc.sp());
        EXPECT(0xde0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde0b));
        EXPECT(0xf2, gbc.readMem(0xde0c));
        // CB F2 0245
        gbc.setState(0x2a6, 0x3755, 0xc6a0, 0xa185, 0x11fb, 0xa566, 0x0, 0x1);
        gbc.writeMem(0x2a6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3755, gbc.sp());
        EXPECT(0x2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0246
        gbc.setState(0x9a9f, 0xa321, 0x25a0, 0x4981, 0xe953, 0x2d4a, 0x0, 0x0);
        gbc.writeMem(0x9a9f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa321, gbc.sp());
        EXPECT(0x9aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a9f));
        EXPECT(0xf2, gbc.readMem(0x9aa0));
        // CB F2 0247
        gbc.setState(0x65be, 0x569a, 0x9080, 0xb9ff, 0xa4fa, 0x400b, 0x0, 0x1);
        gbc.writeMem(0x65be, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x569a, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0248
        gbc.setState(0x2c07, 0xf46b, 0x3fb0, 0x7423, 0x27ea, 0xc547, 0x0, 0x1);
        gbc.writeMem(0x2c07, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x2c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0249
        gbc.setState(0x4f01, 0x7cdd, 0xca10, 0x9200, 0x942e, 0x3ee9, 0x1, 0x0);
        gbc.writeMem(0x4f01, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x7cdd, gbc.sp());
        EXPECT(0x4f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 024A
        gbc.setState(0x3d8a, 0xbcf1, 0xa2f0, 0x3060, 0x30a6, 0x8e51, 0x1, 0x1);
        gbc.writeMem(0x3d8a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbcf1, gbc.sp());
        EXPECT(0x3d8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 024B
        gbc.setState(0x6b53, 0xc98a, 0xad50, 0xbdd5, 0xad8b, 0xebc9, 0x0, 0x1);
        gbc.writeMem(0x6b53, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc98a, gbc.sp());
        EXPECT(0x6b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 024C
        gbc.setState(0x3c00, 0x1395, 0x7d00, 0x72d3, 0xe13, 0xeb57, 0x0, 0x0);
        gbc.writeMem(0x3c00, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1395, gbc.sp());
        EXPECT(0x3c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 024D
        gbc.setState(0x3899, 0x8928, 0x9a90, 0x4dd9, 0x958c, 0xdf65, 0x1, 0x0);
        gbc.writeMem(0x3899, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8928, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 024E
        gbc.setState(0x35cf, 0x5d27, 0xa0b0, 0xb3e1, 0xd36f, 0xc910, 0x1, 0x0);
        gbc.writeMem(0x35cf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5d27, gbc.sp());
        EXPECT(0x35d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 024F
        gbc.setState(0x8609, 0xce0e, 0x9390, 0x6924, 0xb2c4, 0x5f0, 0x0, 0x1);
        gbc.writeMem(0x8609, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xce0e, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8609));
        EXPECT(0xf2, gbc.readMem(0x860a));
        // CB F2 0250
        gbc.setState(0xd57b, 0xfaf7, 0x280, 0x8b88, 0x4bf5, 0xed1f, 0x1, 0x0);
        gbc.writeMem(0xd57b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfaf7, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57b));
        EXPECT(0xf2, gbc.readMem(0xd57c));
        // CB F2 0251
        gbc.setState(0xdc00, 0x7f0e, 0xffc0, 0x3d7f, 0x6a60, 0xc628, 0x1, 0x1);
        gbc.writeMem(0xdc00, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7f0e, gbc.sp());
        EXPECT(0xdc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc00));
        EXPECT(0xf2, gbc.readMem(0xdc01));
        // CB F2 0252
        gbc.setState(0x735b, 0xdaf, 0xa100, 0x710c, 0x3c3f, 0xe681, 0x1, 0x1);
        gbc.writeMem(0x735b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xdaf, gbc.sp());
        EXPECT(0x735d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0253
        gbc.setState(0xbdd8, 0xd2cf, 0xdca0, 0x38a4, 0xed60, 0x3fa6, 0x1, 0x1);
        gbc.writeMem(0xbdd8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd2cf, gbc.sp());
        EXPECT(0xbdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd8));
        EXPECT(0xf2, gbc.readMem(0xbdd9));
        // CB F2 0255
        gbc.setState(0x730e, 0xd2b7, 0x8ad0, 0x7eee, 0x885c, 0x62d5, 0x1, 0x1);
        gbc.writeMem(0x730e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd2b7, gbc.sp());
        EXPECT(0x7310, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0256
        gbc.setState(0x8467, 0xdd4, 0x6400, 0x6e8c, 0xb4e9, 0x7451, 0x1, 0x0);
        gbc.writeMem(0x8467, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xdd4, gbc.sp());
        EXPECT(0x8469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8467));
        EXPECT(0xf2, gbc.readMem(0x8468));
        // CB F2 0257
        gbc.setState(0x7a75, 0x5c07, 0xfe40, 0x9f6, 0x24fc, 0x3057, 0x0, 0x1);
        gbc.writeMem(0x7a75, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x5c07, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0258
        gbc.setState(0x8a4b, 0xd094, 0x7420, 0xef7, 0x2c95, 0x915e, 0x0, 0x0);
        gbc.writeMem(0x8a4b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd094, gbc.sp());
        EXPECT(0x8a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4b));
        EXPECT(0xf2, gbc.readMem(0x8a4c));
        // CB F2 0259
        gbc.setState(0x63a4, 0xe222, 0x8820, 0x3314, 0xabf9, 0x8d70, 0x1, 0x1);
        gbc.writeMem(0x63a4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe222, gbc.sp());
        EXPECT(0x63a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 025A
        gbc.setState(0xdaee, 0xe5e0, 0x8e00, 0xca88, 0x3499, 0x47de, 0x1, 0x0);
        gbc.writeMem(0xdaee, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe5e0, gbc.sp());
        EXPECT(0xdaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaee));
        EXPECT(0xf2, gbc.readMem(0xdaef));
        // CB F2 025B
        gbc.setState(0xaa2e, 0xdf0e, 0x3520, 0xcc01, 0x9fad, 0x62b0, 0x0, 0x0);
        gbc.writeMem(0xaa2e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdf0e, gbc.sp());
        EXPECT(0xaa30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2e));
        EXPECT(0xf2, gbc.readMem(0xaa2f));
        // CB F2 025C
        gbc.setState(0x6070, 0x37cb, 0xe3c0, 0x95ee, 0xae4d, 0x23f1, 0x1, 0x1);
        gbc.writeMem(0x6070, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x37cb, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 025D
        gbc.setState(0x99a0, 0xaad2, 0xc2a0, 0x3319, 0xec31, 0xa2ee, 0x1, 0x0);
        gbc.writeMem(0x99a0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x99a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99a0));
        EXPECT(0xf2, gbc.readMem(0x99a1));
        // CB F2 025E
        gbc.setState(0x8df3, 0x291a, 0xcfc0, 0xf093, 0xc6ff, 0xda5e, 0x1, 0x1);
        gbc.writeMem(0x8df3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x8df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8df3));
        EXPECT(0xf2, gbc.readMem(0x8df4));
        // CB F2 025F
        gbc.setState(0x1815, 0x8016, 0xb540, 0xab3, 0x638c, 0x8320, 0x0, 0x1);
        gbc.writeMem(0x1815, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8016, gbc.sp());
        EXPECT(0x1817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0260
        gbc.setState(0x8511, 0xa8ae, 0xb00, 0x81f3, 0xbc88, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0x8511, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa8ae, gbc.sp());
        EXPECT(0x8513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8511));
        EXPECT(0xf2, gbc.readMem(0x8512));
        // CB F2 0261
        gbc.setState(0xa68e, 0x77e0, 0x51c0, 0x6be8, 0xf2ef, 0x9a53, 0x0, 0x1);
        gbc.writeMem(0xa68e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0xa690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68e));
        EXPECT(0xf2, gbc.readMem(0xa68f));
        // CB F2 0262
        gbc.setState(0x97d9, 0xe1cd, 0x7c60, 0x40a0, 0x1d87, 0xb343, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe1cd, gbc.sp());
        EXPECT(0x97db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d9));
        EXPECT(0xf2, gbc.readMem(0x97da));
        // CB F2 0264
        gbc.setState(0x749d, 0x37b4, 0x62d0, 0xb1b6, 0xe46c, 0x3190, 0x1, 0x0);
        gbc.writeMem(0x749d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x37b4, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0265
        gbc.setState(0x2266, 0xf8b, 0xba90, 0x2552, 0x4f27, 0x8945, 0x1, 0x0);
        gbc.writeMem(0x2266, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf8b, gbc.sp());
        EXPECT(0x2268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0266
        gbc.setState(0xb0e8, 0x210f, 0x3b70, 0xdf86, 0x83a9, 0x2b5, 0x1, 0x0);
        gbc.writeMem(0xb0e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x210f, gbc.sp());
        EXPECT(0xb0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e8));
        EXPECT(0xf2, gbc.readMem(0xb0e9));
        // CB F2 0267
        gbc.setState(0xe15, 0xb2a6, 0x63b0, 0x5435, 0xe4c3, 0x4d41, 0x0, 0x1);
        gbc.writeMem(0xe15, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb2a6, gbc.sp());
        EXPECT(0xe17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0268
        gbc.setState(0x1b27, 0x7e5, 0x4d40, 0xcb02, 0x2029, 0x80e2, 0x1, 0x1);
        gbc.writeMem(0x1b27, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7e5, gbc.sp());
        EXPECT(0x1b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0269
        gbc.setState(0x54f4, 0x3aa8, 0xe6d0, 0x40d8, 0x22b1, 0x3014, 0x0, 0x1);
        gbc.writeMem(0x54f4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3aa8, gbc.sp());
        EXPECT(0x54f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 026A
        gbc.setState(0x58c9, 0xa6c9, 0xe400, 0x6e10, 0x6c11, 0x77b8, 0x0, 0x0);
        gbc.writeMem(0x58c9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa6c9, gbc.sp());
        EXPECT(0x58cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 026B
        gbc.setState(0x1d7f, 0xa2a9, 0x9030, 0xa09d, 0x7ca0, 0xf2bd, 0x1, 0x1);
        gbc.writeMem(0x1d7f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 026C
        gbc.setState(0x7f95, 0x1941, 0x5a60, 0x49be, 0x63ab, 0x843, 0x0, 0x0);
        gbc.writeMem(0x7f95, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1941, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 026D
        gbc.setState(0x7666, 0x55b6, 0xc5a0, 0x59d1, 0x858e, 0xa9fe, 0x1, 0x1);
        gbc.writeMem(0x7666, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x55b6, gbc.sp());
        EXPECT(0x7668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 026F
        gbc.setState(0x4a0e, 0x75b4, 0x990, 0x74d7, 0xdb3e, 0xffd1, 0x1, 0x1);
        gbc.writeMem(0x4a0e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x75b4, gbc.sp());
        EXPECT(0x4a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0270
        gbc.setState(0x628e, 0xabfa, 0xabf0, 0xb870, 0x9a43, 0xf54d, 0x0, 0x0);
        gbc.writeMem(0x628e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xabfa, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0271
        gbc.setState(0x8b75, 0x9dd0, 0x2620, 0x758f, 0x73f2, 0x70e6, 0x0, 0x0);
        gbc.writeMem(0x8b75, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9dd0, gbc.sp());
        EXPECT(0x8b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b75));
        EXPECT(0xf2, gbc.readMem(0x8b76));
        // CB F2 0272
        gbc.setState(0x906f, 0x1add, 0x6b30, 0xf204, 0xddd9, 0x8ad7, 0x0, 0x0);
        gbc.writeMem(0x906f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1add, gbc.sp());
        EXPECT(0x9071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x906f));
        EXPECT(0xf2, gbc.readMem(0x9070));
        // CB F2 0273
        gbc.setState(0x5841, 0x4afd, 0x7aa0, 0xa6f, 0xaea, 0x3fd2, 0x0, 0x1);
        gbc.writeMem(0x5841, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0x5843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0274
        gbc.setState(0x7b65, 0x9260, 0x810, 0x3918, 0x5bef, 0xce57, 0x1, 0x1);
        gbc.writeMem(0x7b65, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9260, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0275
        gbc.setState(0xe67b, 0xb8f5, 0xc1f0, 0x3648, 0xceba, 0xd485, 0x1, 0x0);
        gbc.writeMem(0xe67b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb8f5, gbc.sp());
        EXPECT(0xe67d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe67b));
        EXPECT(0xf2, gbc.readMem(0xe67c));
        // CB F2 0276
        gbc.setState(0x7362, 0x131a, 0x6e90, 0x9300, 0xcf90, 0xa372, 0x0, 0x1);
        gbc.writeMem(0x7362, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0x7364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0277
        gbc.setState(0xd5a9, 0x5d26, 0x4790, 0x12c, 0xf472, 0xf039, 0x0, 0x1);
        gbc.writeMem(0xd5a9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d26, gbc.sp());
        EXPECT(0xd5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a9));
        EXPECT(0xf2, gbc.readMem(0xd5aa));
        // CB F2 0279
        gbc.setState(0x78b6, 0x76e6, 0x3ce0, 0xf94, 0x3694, 0x338a, 0x0, 0x1);
        gbc.writeMem(0x78b6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 027A
        gbc.setState(0x7eaf, 0x9ccc, 0xeca0, 0x1235, 0xb6d, 0x3d5d, 0x0, 0x1);
        gbc.writeMem(0x7eaf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9ccc, gbc.sp());
        EXPECT(0x7eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 027B
        gbc.setState(0x7b69, 0xa85a, 0xe1e0, 0x90e4, 0x8d18, 0xee3d, 0x0, 0x1);
        gbc.writeMem(0x7b69, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa85a, gbc.sp());
        EXPECT(0x7b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 027C
        gbc.setState(0x75b9, 0x85db, 0xe880, 0x2c2, 0xb926, 0x8af0, 0x0, 0x1);
        gbc.writeMem(0x75b9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x85db, gbc.sp());
        EXPECT(0x75bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 027D
        gbc.setState(0x56c, 0x4367, 0xc0b0, 0x27e5, 0xb75a, 0x8a2b, 0x0, 0x0);
        gbc.writeMem(0x56c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4367, gbc.sp());
        EXPECT(0x56e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 027E
        gbc.setState(0x40f5, 0x1c3, 0x51e0, 0x9b5, 0xf116, 0x82e5, 0x1, 0x1);
        gbc.writeMem(0x40f5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1c3, gbc.sp());
        EXPECT(0x40f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0280
        gbc.setState(0x68f8, 0x2431, 0x52b0, 0xc6aa, 0x68bc, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x68f8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x68fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0281
        gbc.setState(0xea86, 0x6494, 0x3990, 0x95f2, 0xda30, 0xd0e9, 0x1, 0x1);
        gbc.writeMem(0xea86, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6494, gbc.sp());
        EXPECT(0xea88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea86));
        EXPECT(0xf2, gbc.readMem(0xea87));
        // CB F2 0282
        gbc.setState(0x2654, 0xf932, 0x7d50, 0x8429, 0x879d, 0xbee8, 0x1, 0x1);
        gbc.writeMem(0x2654, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf932, gbc.sp());
        EXPECT(0x2656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0283
        gbc.setState(0x5f88, 0x9765, 0x65f0, 0x73fa, 0xc0cd, 0x41eb, 0x1, 0x1);
        gbc.writeMem(0x5f88, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9765, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0284
        gbc.setState(0xe95a, 0x2c9c, 0x78b0, 0x5989, 0x4ac1, 0x11c9, 0x1, 0x1);
        gbc.writeMem(0xe95a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2c9c, gbc.sp());
        EXPECT(0xe95c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95a));
        EXPECT(0xf2, gbc.readMem(0xe95b));
        // CB F2 0285
        gbc.setState(0x4e1f, 0x6a3b, 0x3760, 0xa06, 0x9112, 0xae2c, 0x0, 0x0);
        gbc.writeMem(0x4e1f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x6a3b, gbc.sp());
        EXPECT(0x4e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0286
        gbc.setState(0xf88, 0xe508, 0x9560, 0x31ac, 0x7dbb, 0x6403, 0x0, 0x0);
        gbc.writeMem(0xf88, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe508, gbc.sp());
        EXPECT(0xf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0287
        gbc.setState(0x8d71, 0xd8f0, 0xb980, 0x9f44, 0x4f7e, 0x648c, 0x0, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd8f0, gbc.sp());
        EXPECT(0x8d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d71));
        EXPECT(0xf2, gbc.readMem(0x8d72));
        // CB F2 0288
        gbc.setState(0xa026, 0xca69, 0x4bc0, 0x83c, 0xf2b, 0xb163, 0x1, 0x0);
        gbc.writeMem(0xa026, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0xa028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa026));
        EXPECT(0xf2, gbc.readMem(0xa027));
        // CB F2 0289
        gbc.setState(0x7109, 0x1331, 0x3620, 0xeb3d, 0x435a, 0x3e2c, 0x0, 0x0);
        gbc.writeMem(0x7109, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1331, gbc.sp());
        EXPECT(0x710b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 028A
        gbc.setState(0x3bc0, 0x318d, 0xd8e0, 0x5f68, 0x4ba3, 0x4334, 0x0, 0x0);
        gbc.writeMem(0x3bc0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x318d, gbc.sp());
        EXPECT(0x3bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 028B
        gbc.setState(0xe82, 0xc251, 0x91e0, 0x86bd, 0xc16c, 0x74d0, 0x0, 0x0);
        gbc.writeMem(0xe82, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc251, gbc.sp());
        EXPECT(0xe84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 028C
        gbc.setState(0x6929, 0x2541, 0x8d10, 0xac67, 0x1d97, 0x352, 0x0, 0x0);
        gbc.writeMem(0x6929, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2541, gbc.sp());
        EXPECT(0x692b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 028D
        gbc.setState(0x8b35, 0x52cb, 0xa250, 0x7a0b, 0x2d4d, 0xe07, 0x1, 0x0);
        gbc.writeMem(0x8b35, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x8b37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b35));
        EXPECT(0xf2, gbc.readMem(0x8b36));
        // CB F2 028E
        gbc.setState(0xeca7, 0x1317, 0x74e0, 0xf951, 0x3a12, 0x3f3d, 0x0, 0x0);
        gbc.writeMem(0xeca7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1317, gbc.sp());
        EXPECT(0xeca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca7));
        EXPECT(0xf2, gbc.readMem(0xeca8));
        // CB F2 028F
        gbc.setState(0xc954, 0x7296, 0xff30, 0x1cb4, 0x5066, 0x440, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x7296, gbc.sp());
        EXPECT(0xc956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc954));
        EXPECT(0xf2, gbc.readMem(0xc955));
        // CB F2 0290
        gbc.setState(0x4758, 0x36fc, 0x3490, 0xc7e7, 0x45bc, 0x73ec, 0x1, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x36fc, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0291
        gbc.setState(0x8900, 0x6ea8, 0x7680, 0x4aea, 0xef06, 0xda39, 0x1, 0x0);
        gbc.writeMem(0x8900, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6ea8, gbc.sp());
        EXPECT(0x8902, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8900));
        EXPECT(0xf2, gbc.readMem(0x8901));
        // CB F2 0292
        gbc.setState(0xdd2, 0xc8c9, 0x5650, 0xad8a, 0x4162, 0xac99, 0x0, 0x0);
        gbc.writeMem(0xdd2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc8c9, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0293
        gbc.setState(0x72e3, 0xc244, 0xc270, 0x5f70, 0x33eb, 0x7fe, 0x0, 0x1);
        gbc.writeMem(0x72e3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc244, gbc.sp());
        EXPECT(0x72e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0294
        gbc.setState(0x1300, 0x44a7, 0xda80, 0x78ed, 0x6c0a, 0x32f5, 0x0, 0x1);
        gbc.writeMem(0x1300, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0295
        gbc.setState(0xc0c3, 0x1eb9, 0xe040, 0x2852, 0xccfe, 0x2d34, 0x1, 0x0);
        gbc.writeMem(0xc0c3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1eb9, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c3));
        EXPECT(0xf2, gbc.readMem(0xc0c4));
        // CB F2 0296
        gbc.setState(0x5510, 0x11b2, 0xf100, 0xec4e, 0x4eee, 0xb835, 0x1, 0x1);
        gbc.writeMem(0x5510, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x11b2, gbc.sp());
        EXPECT(0x5512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0297
        gbc.setState(0xb505, 0x1759, 0xe8f0, 0x130, 0xa2b, 0xfa1d, 0x1, 0x1);
        gbc.writeMem(0xb505, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0xb507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb505));
        EXPECT(0xf2, gbc.readMem(0xb506));
        // CB F2 0298
        gbc.setState(0x9ade, 0x457c, 0x50a0, 0x339a, 0x1883, 0x7320, 0x1, 0x0);
        gbc.writeMem(0x9ade, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x457c, gbc.sp());
        EXPECT(0x9ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ade));
        EXPECT(0xf2, gbc.readMem(0x9adf));
        // CB F2 0299
        gbc.setState(0x73a7, 0x8299, 0xadf0, 0x6939, 0xacd8, 0x7402, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x73a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 029A
        gbc.setState(0x4148, 0x6cda, 0x7e80, 0x84c4, 0xd647, 0x4254, 0x0, 0x0);
        gbc.writeMem(0x4148, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x414a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 029B
        gbc.setState(0x8a28, 0xf6f3, 0x5200, 0xc6e5, 0x9889, 0x5d73, 0x0, 0x0);
        gbc.writeMem(0x8a28, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf6f3, gbc.sp());
        EXPECT(0x8a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a28));
        EXPECT(0xf2, gbc.readMem(0x8a29));
        // CB F2 029C
        gbc.setState(0x7ea8, 0x844c, 0xc8d0, 0xe68f, 0x9ff7, 0xe81f, 0x0, 0x1);
        gbc.writeMem(0x7ea8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x844c, gbc.sp());
        EXPECT(0x7eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 029D
        gbc.setState(0x70b9, 0x72cd, 0xb1a0, 0x185f, 0xcbbc, 0x1ab6, 0x0, 0x0);
        gbc.writeMem(0x70b9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x72cd, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 029E
        gbc.setState(0xd913, 0xcb80, 0xdf10, 0xbdf1, 0x7555, 0x8845, 0x0, 0x1);
        gbc.writeMem(0xd913, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0xd915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd913));
        EXPECT(0xf2, gbc.readMem(0xd914));
        // CB F2 029F
        gbc.setState(0x8d89, 0xde1d, 0x9ee0, 0x4962, 0xdefa, 0xb3da, 0x1, 0x0);
        gbc.writeMem(0x8d89, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xde1d, gbc.sp());
        EXPECT(0x8d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d89));
        EXPECT(0xf2, gbc.readMem(0x8d8a));
        // CB F2 02A0
        gbc.setState(0x86c8, 0x9040, 0xc170, 0x3e2f, 0xeb76, 0x3e79, 0x0, 0x0);
        gbc.writeMem(0x86c8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9040, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c8));
        EXPECT(0xf2, gbc.readMem(0x86c9));
        // CB F2 02A1
        gbc.setState(0x8919, 0x432a, 0x1140, 0x3b9a, 0xc56a, 0xad1b, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x432a, gbc.sp());
        EXPECT(0x891b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8919));
        EXPECT(0xf2, gbc.readMem(0x891a));
        // CB F2 02A2
        gbc.setState(0x9dfa, 0xff6f, 0x42d0, 0x3c39, 0x890e, 0xcc1c, 0x0, 0x0);
        gbc.writeMem(0x9dfa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xff6f, gbc.sp());
        EXPECT(0x9dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dfa));
        EXPECT(0xf2, gbc.readMem(0x9dfb));
        // CB F2 02A3
        gbc.setState(0x7013, 0x2c38, 0x7fa0, 0xad66, 0xd2ca, 0xee2d, 0x1, 0x0);
        gbc.writeMem(0x7013, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x7015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02A4
        gbc.setState(0xef31, 0x9c46, 0xedb0, 0xcf0, 0x6e31, 0xb77d, 0x1, 0x1);
        gbc.writeMem(0xef31, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9c46, gbc.sp());
        EXPECT(0xef33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef31));
        EXPECT(0xf2, gbc.readMem(0xef32));
        // CB F2 02A5
        gbc.setState(0x182a, 0x5dfa, 0xb0a0, 0x4ca3, 0x914, 0x68f6, 0x0, 0x0);
        gbc.writeMem(0x182a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5dfa, gbc.sp());
        EXPECT(0x182c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02A6
        gbc.setState(0xe4e9, 0x69, 0x26a0, 0x6388, 0x9996, 0xc223, 0x1, 0x0);
        gbc.writeMem(0xe4e9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x69, gbc.sp());
        EXPECT(0xe4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e9));
        EXPECT(0xf2, gbc.readMem(0xe4ea));
        // CB F2 02A7
        gbc.setState(0x5f95, 0x4578, 0x6eb0, 0x87dc, 0x47ef, 0xe44e, 0x1, 0x0);
        gbc.writeMem(0x5f95, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4578, gbc.sp());
        EXPECT(0x5f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02A8
        gbc.setState(0xa40f, 0x112c, 0x8940, 0x40a8, 0x5529, 0x6731, 0x0, 0x0);
        gbc.writeMem(0xa40f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x112c, gbc.sp());
        EXPECT(0xa411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40f));
        EXPECT(0xf2, gbc.readMem(0xa410));
        // CB F2 02A9
        gbc.setState(0x4e, 0xd2c9, 0xc7e0, 0x8f1c, 0x14a8, 0xb2b3, 0x0, 0x1);
        gbc.writeMem(0x4e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd2c9, gbc.sp());
        EXPECT(0x50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02AA
        gbc.setState(0x4730, 0x39a6, 0x6e90, 0x2f82, 0x9bbf, 0xae0d, 0x0, 0x1);
        gbc.writeMem(0x4730, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x39a6, gbc.sp());
        EXPECT(0x4732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02AB
        gbc.setState(0x8bb8, 0x9574, 0x5b90, 0xff25, 0xf377, 0x1607, 0x0, 0x1);
        gbc.writeMem(0x8bb8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9574, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bb8));
        EXPECT(0xf2, gbc.readMem(0x8bb9));
        // CB F2 02AC
        gbc.setState(0xc60c, 0xd56d, 0xc5e0, 0x444f, 0x2291, 0xfe67, 0x0, 0x0);
        gbc.writeMem(0xc60c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd56d, gbc.sp());
        EXPECT(0xc60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc60c));
        EXPECT(0xf2, gbc.readMem(0xc60d));
        // CB F2 02AE
        gbc.setState(0x3e5a, 0x24ee, 0x1770, 0xeced, 0xbb04, 0x2e23, 0x1, 0x1);
        gbc.writeMem(0x3e5a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x24ee, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02AF
        gbc.setState(0x816b, 0x76e9, 0xcaf0, 0x3256, 0xf2d5, 0x1685, 0x0, 0x1);
        gbc.writeMem(0x816b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x76e9, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816b));
        EXPECT(0xf2, gbc.readMem(0x816c));
        // CB F2 02B0
        gbc.setState(0x1dd8, 0xfb7d, 0xeca0, 0x2908, 0xccea, 0x173d, 0x0, 0x1);
        gbc.writeMem(0x1dd8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfb7d, gbc.sp());
        EXPECT(0x1dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02B1
        gbc.setState(0xa7cb, 0x8fea, 0x7170, 0x2110, 0xb4c5, 0xcdbb, 0x0, 0x1);
        gbc.writeMem(0xa7cb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8fea, gbc.sp());
        EXPECT(0xa7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7cb));
        EXPECT(0xf2, gbc.readMem(0xa7cc));
        // CB F2 02B2
        gbc.setState(0x33ec, 0xb813, 0x4e50, 0xbac, 0x8c3b, 0xa2ad, 0x1, 0x0);
        gbc.writeMem(0x33ec, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xb813, gbc.sp());
        EXPECT(0x33ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02B4
        gbc.setState(0x4015, 0x4fd7, 0x3e20, 0xec20, 0xe3b2, 0xd8fa, 0x1, 0x1);
        gbc.writeMem(0x4015, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4fd7, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02B5
        gbc.setState(0xc8a3, 0x68fa, 0x5770, 0x1bf5, 0xa38c, 0x56ab, 0x1, 0x1);
        gbc.writeMem(0xc8a3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x68fa, gbc.sp());
        EXPECT(0xc8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a3));
        EXPECT(0xf2, gbc.readMem(0xc8a4));
        // CB F2 02B6
        gbc.setState(0x883c, 0x672d, 0x7590, 0xaab2, 0x85a4, 0x47eb, 0x0, 0x1);
        gbc.writeMem(0x883c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x672d, gbc.sp());
        EXPECT(0x883e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x883c));
        EXPECT(0xf2, gbc.readMem(0x883d));
        // CB F2 02B7
        gbc.setState(0x9935, 0x555d, 0xa7c0, 0x8b0f, 0x3cf1, 0x25a7, 0x0, 0x1);
        gbc.writeMem(0x9935, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x9937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9935));
        EXPECT(0xf2, gbc.readMem(0x9936));
        // CB F2 02B8
        gbc.setState(0x1f59, 0x66ae, 0xa970, 0xfa85, 0x3945, 0x30cd, 0x1, 0x0);
        gbc.writeMem(0x1f59, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x66ae, gbc.sp());
        EXPECT(0x1f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02B9
        gbc.setState(0x2ada, 0xf4df, 0xedb0, 0x154c, 0x9279, 0xf538, 0x1, 0x0);
        gbc.writeMem(0x2ada, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf4df, gbc.sp());
        EXPECT(0x2adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02BA
        gbc.setState(0xb3f0, 0xce74, 0xaf70, 0xcca7, 0xcbc2, 0x7c96, 0x0, 0x0);
        gbc.writeMem(0xb3f0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xce74, gbc.sp());
        EXPECT(0xb3f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f0));
        EXPECT(0xf2, gbc.readMem(0xb3f1));
        // CB F2 02BB
        gbc.setState(0xad13, 0xcd76, 0x63c0, 0xbe4c, 0xd6ef, 0x43e9, 0x0, 0x0);
        gbc.writeMem(0xad13, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcd76, gbc.sp());
        EXPECT(0xad15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad13));
        EXPECT(0xf2, gbc.readMem(0xad14));
        // CB F2 02BC
        gbc.setState(0xca69, 0xb7d0, 0xdb60, 0xabc3, 0xb7c1, 0x2d53, 0x0, 0x1);
        gbc.writeMem(0xca69, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb7d0, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca69));
        EXPECT(0xf2, gbc.readMem(0xca6a));
        // CB F2 02BD
        gbc.setState(0x5a9a, 0x8926, 0xb430, 0x3816, 0xc2e8, 0x5472, 0x1, 0x0);
        gbc.writeMem(0x5a9a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0x5a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02BE
        gbc.setState(0xadf7, 0x427f, 0xc790, 0x41cd, 0x4063, 0x1dc2, 0x0, 0x0);
        gbc.writeMem(0xadf7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x427f, gbc.sp());
        EXPECT(0xadf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf7));
        EXPECT(0xf2, gbc.readMem(0xadf8));
        // CB F2 02BF
        gbc.setState(0x5a15, 0x8430, 0xf320, 0x45b7, 0xb125, 0x73e6, 0x1, 0x0);
        gbc.writeMem(0x5a15, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8430, gbc.sp());
        EXPECT(0x5a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02C0
        gbc.setState(0x6e0a, 0x7b87, 0x5a40, 0xc0c3, 0xe331, 0x8445, 0x1, 0x1);
        gbc.writeMem(0x6e0a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7b87, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02C1
        gbc.setState(0xa40b, 0xb026, 0xc980, 0xf2e7, 0xbb6c, 0x935b, 0x1, 0x1);
        gbc.writeMem(0xa40b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb026, gbc.sp());
        EXPECT(0xa40d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa40b));
        EXPECT(0xf2, gbc.readMem(0xa40c));
        // CB F2 02C2
        gbc.setState(0xaab3, 0xbd1f, 0x5990, 0x7b24, 0x38f1, 0x97e3, 0x1, 0x0);
        gbc.writeMem(0xaab3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd1f, gbc.sp());
        EXPECT(0xaab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab3));
        EXPECT(0xf2, gbc.readMem(0xaab4));
        // CB F2 02C3
        gbc.setState(0x987a, 0x12d3, 0x4d00, 0x2fb5, 0xdc9d, 0x656b, 0x0, 0x0);
        gbc.writeMem(0x987a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x987c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987a));
        EXPECT(0xf2, gbc.readMem(0x987b));
        // CB F2 02C4
        gbc.setState(0xc227, 0x9ce2, 0x58c0, 0xb4d2, 0x35aa, 0x460a, 0x0, 0x0);
        gbc.writeMem(0xc227, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9ce2, gbc.sp());
        EXPECT(0xc229, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc227));
        EXPECT(0xf2, gbc.readMem(0xc228));
        // CB F2 02C5
        gbc.setState(0xa94, 0x83e7, 0xa770, 0x1bcf, 0xe0d6, 0x3db9, 0x0, 0x0);
        gbc.writeMem(0xa94, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x83e7, gbc.sp());
        EXPECT(0xa96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02C6
        gbc.setState(0xc4b9, 0xc8e0, 0xa6f0, 0x96a1, 0xbd4a, 0xb73d, 0x0, 0x0);
        gbc.writeMem(0xc4b9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc8e0, gbc.sp());
        EXPECT(0xc4bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b9));
        EXPECT(0xf2, gbc.readMem(0xc4ba));
        // CB F2 02C7
        gbc.setState(0x7d2a, 0x1f6, 0xf2b0, 0xf392, 0x5fc, 0x714a, 0x1, 0x0);
        gbc.writeMem(0x7d2a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1f6, gbc.sp());
        EXPECT(0x7d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02C8
        gbc.setState(0xbc57, 0x85a0, 0xed20, 0x4a11, 0x4ce, 0xdde4, 0x1, 0x1);
        gbc.writeMem(0xbc57, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x85a0, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc57));
        EXPECT(0xf2, gbc.readMem(0xbc58));
        // CB F2 02C9
        gbc.setState(0xafe6, 0x66af, 0x9e50, 0x95f5, 0xf383, 0x56db, 0x0, 0x1);
        gbc.writeMem(0xafe6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x66af, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe6));
        EXPECT(0xf2, gbc.readMem(0xafe7));
        // CB F2 02CA
        gbc.setState(0x4631, 0xe9a7, 0x8c50, 0xc017, 0xb10b, 0x4403, 0x0, 0x1);
        gbc.writeMem(0x4631, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe9a7, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02CB
        gbc.setState(0x37ab, 0x10a6, 0x7c80, 0xa758, 0x9ab0, 0x8a66, 0x0, 0x0);
        gbc.writeMem(0x37ab, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x10a6, gbc.sp());
        EXPECT(0x37ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02CC
        gbc.setState(0x6d73, 0xa461, 0x1060, 0x1d8d, 0xb0ad, 0x6c4f, 0x0, 0x0);
        gbc.writeMem(0x6d73, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa461, gbc.sp());
        EXPECT(0x6d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02CD
        gbc.setState(0x146e, 0x313e, 0xf7d0, 0x6b12, 0xe9e9, 0xaa54, 0x1, 0x0);
        gbc.writeMem(0x146e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x313e, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02CE
        gbc.setState(0xe7fe, 0x9396, 0x72e0, 0xe170, 0xd4b, 0x54a1, 0x0, 0x1);
        gbc.writeMem(0xe7fe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9396, gbc.sp());
        EXPECT(0xe800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7fe));
        EXPECT(0xf2, gbc.readMem(0xe7ff));
        // CB F2 02CF
        gbc.setState(0x8040, 0x7e4a, 0xe290, 0xc356, 0xf0f0, 0x19b4, 0x1, 0x0);
        gbc.writeMem(0x8040, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7e4a, gbc.sp());
        EXPECT(0x8042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8040));
        EXPECT(0xf2, gbc.readMem(0x8041));
        // CB F2 02D0
        gbc.setState(0xe350, 0xee0e, 0x9200, 0x1f48, 0x8f10, 0x64f5, 0x0, 0x0);
        gbc.writeMem(0xe350, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0xe352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe350));
        EXPECT(0xf2, gbc.readMem(0xe351));
        // CB F2 02D2
        gbc.setState(0x91, 0x3389, 0x2200, 0xdf12, 0x7f90, 0x667f, 0x0, 0x1);
        gbc.writeMem(0x91, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3389, gbc.sp());
        EXPECT(0x93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02D3
        gbc.setState(0x84cc, 0x47f1, 0xa540, 0xdb6a, 0x911b, 0xc345, 0x1, 0x1);
        gbc.writeMem(0x84cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x47f1, gbc.sp());
        EXPECT(0x84ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cc));
        EXPECT(0xf2, gbc.readMem(0x84cd));
        // CB F2 02D5
        gbc.setState(0x692b, 0x9354, 0x3a80, 0x2894, 0x5ef0, 0xa5f2, 0x1, 0x1);
        gbc.writeMem(0x692b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9354, gbc.sp());
        EXPECT(0x692d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02D6
        gbc.setState(0x2c10, 0xfd27, 0x3f90, 0x497e, 0x4394, 0xde8, 0x0, 0x0);
        gbc.writeMem(0x2c10, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xfd27, gbc.sp());
        EXPECT(0x2c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02D7
        gbc.setState(0x3204, 0x8742, 0xf2b0, 0xe160, 0x17c3, 0xe18f, 0x0, 0x0);
        gbc.writeMem(0x3204, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8742, gbc.sp());
        EXPECT(0x3206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02D8
        gbc.setState(0x4b82, 0x10cd, 0x9890, 0xb7fb, 0x6b18, 0x465e, 0x0, 0x0);
        gbc.writeMem(0x4b82, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x10cd, gbc.sp());
        EXPECT(0x4b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02D9
        gbc.setState(0x2781, 0x6a2d, 0xbb90, 0x7592, 0x3bdf, 0xa6df, 0x1, 0x1);
        gbc.writeMem(0x2781, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6a2d, gbc.sp());
        EXPECT(0x2783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02DA
        gbc.setState(0xe229, 0xca27, 0x7df0, 0x926f, 0xfc36, 0xcbc1, 0x1, 0x0);
        gbc.writeMem(0xe229, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xca27, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe229));
        EXPECT(0xf2, gbc.readMem(0xe22a));
        // CB F2 02DB
        gbc.setState(0xaec5, 0x2560, 0xb190, 0xcd98, 0x2691, 0x2fd, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2560, gbc.sp());
        EXPECT(0xaec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec5));
        EXPECT(0xf2, gbc.readMem(0xaec6));
        // CB F2 02DC
        gbc.setState(0x263, 0x9322, 0xd30, 0x6b29, 0xfcc3, 0xe2f, 0x1, 0x0);
        gbc.writeMem(0x263, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9322, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02DD
        gbc.setState(0xe88e, 0xc4b4, 0xfe00, 0x645e, 0x935a, 0xc0ba, 0x0, 0x0);
        gbc.writeMem(0xe88e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc4b4, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe88e));
        EXPECT(0xf2, gbc.readMem(0xe88f));
        // CB F2 02DE
        gbc.setState(0xa580, 0x4796, 0x9e80, 0xa601, 0xaf1b, 0x4e35, 0x1, 0x0);
        gbc.writeMem(0xa580, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4796, gbc.sp());
        EXPECT(0xa582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa580));
        EXPECT(0xf2, gbc.readMem(0xa581));
        // CB F2 02DF
        gbc.setState(0x7b43, 0x2159, 0xedc0, 0x7289, 0xfd10, 0x7bc, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2159, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02E0
        gbc.setState(0x75fc, 0xbec6, 0xe90, 0x1778, 0x1655, 0xb5a2, 0x0, 0x0);
        gbc.writeMem(0x75fc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbec6, gbc.sp());
        EXPECT(0x75fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02E1
        gbc.setState(0x725e, 0xd29b, 0x1150, 0x7a7c, 0x2018, 0x18fb, 0x1, 0x0);
        gbc.writeMem(0x725e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd29b, gbc.sp());
        EXPECT(0x7260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02E2
        gbc.setState(0xd6e9, 0xca82, 0x3fa0, 0x2c2, 0x2180, 0xd5e6, 0x1, 0x1);
        gbc.writeMem(0xd6e9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xca82, gbc.sp());
        EXPECT(0xd6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6e9));
        EXPECT(0xf2, gbc.readMem(0xd6ea));
        // CB F2 02E4
        gbc.setState(0xc7a2, 0x612c, 0xb5d0, 0x38d9, 0xaf78, 0x3181, 0x1, 0x0);
        gbc.writeMem(0xc7a2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x612c, gbc.sp());
        EXPECT(0xc7a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a2));
        EXPECT(0xf2, gbc.readMem(0xc7a3));
        // CB F2 02E5
        gbc.setState(0x514b, 0x6ac6, 0x4bc0, 0x1acf, 0xe22, 0xd89d, 0x0, 0x1);
        gbc.writeMem(0x514b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6ac6, gbc.sp());
        EXPECT(0x514d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02E6
        gbc.setState(0x324, 0x7ea, 0x110, 0xb1c4, 0xfd9f, 0xf1a3, 0x1, 0x1);
        gbc.writeMem(0x324, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7ea, gbc.sp());
        EXPECT(0x326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02E7
        gbc.setState(0xa601, 0x6f69, 0x87e0, 0x99aa, 0xe70f, 0xdd1e, 0x1, 0x0);
        gbc.writeMem(0xa601, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6f69, gbc.sp());
        EXPECT(0xa603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa601));
        EXPECT(0xf2, gbc.readMem(0xa602));
        // CB F2 02E8
        gbc.setState(0xd3ca, 0xb54e, 0x5020, 0xb6d2, 0x228f, 0xb8e4, 0x1, 0x0);
        gbc.writeMem(0xd3ca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb54e, gbc.sp());
        EXPECT(0xd3cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ca));
        EXPECT(0xf2, gbc.readMem(0xd3cb));
        // CB F2 02E9
        gbc.setState(0xb818, 0x2729, 0xcef0, 0x2feb, 0x66a, 0xed8f, 0x1, 0x0);
        gbc.writeMem(0xb818, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2729, gbc.sp());
        EXPECT(0xb81a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb818));
        EXPECT(0xf2, gbc.readMem(0xb819));
        // CB F2 02EA
        gbc.setState(0x924e, 0x10ce, 0xa9e0, 0x857e, 0x27b6, 0x2138, 0x1, 0x1);
        gbc.writeMem(0x924e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x10ce, gbc.sp());
        EXPECT(0x9250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x924e));
        EXPECT(0xf2, gbc.readMem(0x924f));
        // CB F2 02EB
        gbc.setState(0x6106, 0x7f8b, 0x7830, 0xa339, 0xaca, 0xa980, 0x1, 0x1);
        gbc.writeMem(0x6106, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7f8b, gbc.sp());
        EXPECT(0x6108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02EC
        gbc.setState(0x7a8, 0xd465, 0xb190, 0x8b7e, 0x53b9, 0xb1c5, 0x0, 0x0);
        gbc.writeMem(0x7a8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0x7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02ED
        gbc.setState(0x2cd3, 0x4f77, 0x63b0, 0xc61f, 0xbbf6, 0xe5e5, 0x1, 0x0);
        gbc.writeMem(0x2cd3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4f77, gbc.sp());
        EXPECT(0x2cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02EE
        gbc.setState(0x85ff, 0x144d, 0xd600, 0x816f, 0x4e75, 0x985b, 0x0, 0x0);
        gbc.writeMem(0x85ff, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x144d, gbc.sp());
        EXPECT(0x8601, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ff));
        EXPECT(0xf2, gbc.readMem(0x8600));
        // CB F2 02EF
        gbc.setState(0x9562, 0x3336, 0x2bc0, 0x9176, 0xea73, 0x7d07, 0x0, 0x0);
        gbc.writeMem(0x9562, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3336, gbc.sp());
        EXPECT(0x9564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9562));
        EXPECT(0xf2, gbc.readMem(0x9563));
        // CB F2 02F0
        gbc.setState(0x7cab, 0x64c1, 0xcfd0, 0x60c5, 0x7f6, 0x836a, 0x0, 0x0);
        gbc.writeMem(0x7cab, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x64c1, gbc.sp());
        EXPECT(0x7cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02F1
        gbc.setState(0x335d, 0x8a45, 0x68a0, 0x84e6, 0xa461, 0x7c1d, 0x0, 0x1);
        gbc.writeMem(0x335d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0x335f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02F3
        gbc.setState(0x1d74, 0x3d1f, 0xb960, 0x42f9, 0xb621, 0x61b1, 0x0, 0x1);
        gbc.writeMem(0x1d74, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3d1f, gbc.sp());
        EXPECT(0x1d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02F4
        gbc.setState(0x3bad, 0x3022, 0xf220, 0x73c6, 0xd79d, 0x59ac, 0x0, 0x1);
        gbc.writeMem(0x3bad, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0x3baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02F5
        gbc.setState(0x9c01, 0xa8da, 0xe3a0, 0x4d99, 0xbfd1, 0xebec, 0x1, 0x1);
        gbc.writeMem(0x9c01, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa8da, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c01));
        EXPECT(0xf2, gbc.readMem(0x9c02));
        // CB F2 02F6
        gbc.setState(0xbdd0, 0x2924, 0x9290, 0x6258, 0xc9de, 0x5743, 0x0, 0x1);
        gbc.writeMem(0xbdd0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2924, gbc.sp());
        EXPECT(0xbdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdd0));
        EXPECT(0xf2, gbc.readMem(0xbdd1));
        // CB F2 02F7
        gbc.setState(0x5de4, 0x590f, 0x5880, 0x4216, 0x7684, 0x5415, 0x0, 0x1);
        gbc.writeMem(0x5de4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x590f, gbc.sp());
        EXPECT(0x5de6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02F8
        gbc.setState(0xd3a0, 0x29b3, 0x67e0, 0x32bc, 0xe0fe, 0x47b2, 0x0, 0x1);
        gbc.writeMem(0xd3a0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x29b3, gbc.sp());
        EXPECT(0xd3a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a0));
        EXPECT(0xf2, gbc.readMem(0xd3a1));
        // CB F2 02F9
        gbc.setState(0x33bb, 0x6b6b, 0xf210, 0x9d58, 0xff1a, 0x8347, 0x1, 0x0);
        gbc.writeMem(0x33bb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6b6b, gbc.sp());
        EXPECT(0x33bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 02FA
        gbc.setState(0x6e8d, 0xec44, 0xc2e0, 0x7d5, 0xe4fc, 0x7ad4, 0x1, 0x0);
        gbc.writeMem(0x6e8d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xec44, gbc.sp());
        EXPECT(0x6e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02FB
        gbc.setState(0x14b, 0x30, 0xbfa0, 0xd252, 0x88de, 0x24af, 0x1, 0x1);
        gbc.writeMem(0x14b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x30, gbc.sp());
        EXPECT(0x14d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 02FC
        gbc.setState(0x9d18, 0x9c96, 0x6ca0, 0xdff6, 0xb926, 0x8332, 0x0, 0x1);
        gbc.writeMem(0x9d18, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0x9d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d18));
        EXPECT(0xf2, gbc.readMem(0x9d19));
        // CB F2 02FD
        gbc.setState(0xcdaf, 0x9bf0, 0xebc0, 0xd4ab, 0xf909, 0x8806, 0x0, 0x0);
        gbc.writeMem(0xcdaf, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9bf0, gbc.sp());
        EXPECT(0xcdb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdaf));
        EXPECT(0xf2, gbc.readMem(0xcdb0));
        // CB F2 02FE
        gbc.setState(0x264d, 0xa868, 0x85e0, 0x7031, 0x4378, 0x493b, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa868, gbc.sp());
        EXPECT(0x264f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0300
        gbc.setState(0x7d04, 0x8784, 0xe690, 0xf689, 0xe08e, 0xd9a3, 0x1, 0x0);
        gbc.writeMem(0x7d04, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8784, gbc.sp());
        EXPECT(0x7d06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0301
        gbc.setState(0x4df5, 0x7d41, 0xd2c0, 0x6038, 0x9eaf, 0xeb0, 0x0, 0x0);
        gbc.writeMem(0x4df5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7d41, gbc.sp());
        EXPECT(0x4df7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0302
        gbc.setState(0xc4de, 0xbde2, 0x9f10, 0xca09, 0x8ec4, 0xb820, 0x0, 0x0);
        gbc.writeMem(0xc4de, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xbde2, gbc.sp());
        EXPECT(0xc4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4de));
        EXPECT(0xf2, gbc.readMem(0xc4df));
        // CB F2 0303
        gbc.setState(0x312d, 0xceb, 0x1b60, 0xc935, 0x1a70, 0x3bd4, 0x1, 0x1);
        gbc.writeMem(0x312d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xceb, gbc.sp());
        EXPECT(0x312f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0304
        gbc.setState(0x9853, 0x86d5, 0x6d90, 0xe826, 0x687d, 0xea11, 0x1, 0x1);
        gbc.writeMem(0x9853, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x86d5, gbc.sp());
        EXPECT(0x9855, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9853));
        EXPECT(0xf2, gbc.readMem(0x9854));
        // CB F2 0305
        gbc.setState(0x322e, 0x61ca, 0x7ab0, 0xa6b0, 0x6acf, 0x532f, 0x1, 0x0);
        gbc.writeMem(0x322e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x61ca, gbc.sp());
        EXPECT(0x3230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0306
        gbc.setState(0x726b, 0xcdb6, 0x4c40, 0xcfb6, 0xb8a6, 0x559f, 0x0, 0x1);
        gbc.writeMem(0x726b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcdb6, gbc.sp());
        EXPECT(0x726d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0307
        gbc.setState(0x904f, 0xafe7, 0xd690, 0x2f53, 0xb9b7, 0x4034, 0x0, 0x1);
        gbc.writeMem(0x904f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xafe7, gbc.sp());
        EXPECT(0x9051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904f));
        EXPECT(0xf2, gbc.readMem(0x9050));
        // CB F2 0308
        gbc.setState(0xad5b, 0x1c30, 0xf790, 0x1e3, 0xdddd, 0x4af9, 0x0, 0x0);
        gbc.writeMem(0xad5b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0xad5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5b));
        EXPECT(0xf2, gbc.readMem(0xad5c));
        // CB F2 0309
        gbc.setState(0xc3f3, 0x5b81, 0xd800, 0x8bf7, 0x8e47, 0x4fa7, 0x0, 0x1);
        gbc.writeMem(0xc3f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5b81, gbc.sp());
        EXPECT(0xc3f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f3));
        EXPECT(0xf2, gbc.readMem(0xc3f4));
        // CB F2 030A
        gbc.setState(0xae73, 0x403a, 0x61f0, 0x3cd7, 0xf980, 0x6faa, 0x1, 0x0);
        gbc.writeMem(0xae73, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x403a, gbc.sp());
        EXPECT(0xae75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae73));
        EXPECT(0xf2, gbc.readMem(0xae74));
        // CB F2 030C
        gbc.setState(0xe042, 0xda1d, 0x65d0, 0x8580, 0x1a35, 0x6502, 0x1, 0x0);
        gbc.writeMem(0xe042, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xda1d, gbc.sp());
        EXPECT(0xe044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe042));
        EXPECT(0xf2, gbc.readMem(0xe043));
        // CB F2 030D
        gbc.setState(0xab37, 0x5c66, 0x1860, 0xd634, 0x5ebe, 0x381e, 0x0, 0x0);
        gbc.writeMem(0xab37, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x5c66, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab37));
        EXPECT(0xf2, gbc.readMem(0xab38));
        // CB F2 030E
        gbc.setState(0x8b25, 0x4e0c, 0x5130, 0x1c16, 0x5d38, 0x335a, 0x1, 0x1);
        gbc.writeMem(0x8b25, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4e0c, gbc.sp());
        EXPECT(0x8b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b25));
        EXPECT(0xf2, gbc.readMem(0x8b26));
        // CB F2 030F
        gbc.setState(0x9d87, 0xebf6, 0xcac0, 0xf15e, 0xd43f, 0x479b, 0x0, 0x1);
        gbc.writeMem(0x9d87, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xebf6, gbc.sp());
        EXPECT(0x9d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d87));
        EXPECT(0xf2, gbc.readMem(0x9d88));
        // CB F2 0310
        gbc.setState(0xaf71, 0x3c49, 0x1030, 0xfb93, 0xbf10, 0x9e9f, 0x1, 0x1);
        gbc.writeMem(0xaf71, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf71));
        EXPECT(0xf2, gbc.readMem(0xaf72));
        // CB F2 0311
        gbc.setState(0xaad3, 0xe37b, 0xb6a0, 0x34ff, 0x1cf6, 0xe615, 0x0, 0x1);
        gbc.writeMem(0xaad3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe37b, gbc.sp());
        EXPECT(0xaad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad3));
        EXPECT(0xf2, gbc.readMem(0xaad4));
        // CB F2 0312
        gbc.setState(0x8b0d, 0x592e, 0xe0b0, 0xe3c0, 0x34ad, 0xd057, 0x0, 0x0);
        gbc.writeMem(0x8b0d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x592e, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0d));
        EXPECT(0xf2, gbc.readMem(0x8b0e));
        // CB F2 0313
        gbc.setState(0x12f7, 0x2678, 0x1290, 0x8de, 0x31f2, 0xd25f, 0x0, 0x0);
        gbc.writeMem(0x12f7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2678, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0314
        gbc.setState(0x4441, 0xa075, 0x1680, 0x84cb, 0xbbfa, 0x418e, 0x1, 0x1);
        gbc.writeMem(0x4441, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa075, gbc.sp());
        EXPECT(0x4443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0315
        gbc.setState(0xada, 0x388b, 0x1d70, 0x6b20, 0x2635, 0xa502, 0x1, 0x0);
        gbc.writeMem(0xada, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0316
        gbc.setState(0x85fd, 0x47c, 0x4720, 0x3571, 0xb7f, 0xb276, 0x0, 0x0);
        gbc.writeMem(0x85fd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x47c, gbc.sp());
        EXPECT(0x85ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85fd));
        EXPECT(0xf2, gbc.readMem(0x85fe));
        // CB F2 0317
        gbc.setState(0x2b0a, 0xb5e0, 0x9e50, 0x100f, 0x59e4, 0x1711, 0x0, 0x1);
        gbc.writeMem(0x2b0a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb5e0, gbc.sp());
        EXPECT(0x2b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0318
        gbc.setState(0x4c8b, 0xf466, 0xfd40, 0x9a70, 0x3905, 0x17c5, 0x1, 0x1);
        gbc.writeMem(0x4c8b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf466, gbc.sp());
        EXPECT(0x4c8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0319
        gbc.setState(0x7c13, 0x4c7e, 0xd460, 0xd967, 0x625c, 0xe51a, 0x1, 0x1);
        gbc.writeMem(0x7c13, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4c7e, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 031A
        gbc.setState(0x5954, 0xc972, 0xc330, 0x4dbd, 0x5299, 0x2782, 0x0, 0x0);
        gbc.writeMem(0x5954, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc972, gbc.sp());
        EXPECT(0x5956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 031B
        gbc.setState(0xecbd, 0x8ce1, 0xdd00, 0x4b69, 0x21c4, 0x1e88, 0x1, 0x1);
        gbc.writeMem(0xecbd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8ce1, gbc.sp());
        EXPECT(0xecbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbd));
        EXPECT(0xf2, gbc.readMem(0xecbe));
        // CB F2 031C
        gbc.setState(0x6822, 0xb4ca, 0xade0, 0x9e16, 0x4abc, 0x2df5, 0x1, 0x1);
        gbc.writeMem(0x6822, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb4ca, gbc.sp());
        EXPECT(0x6824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 031D
        gbc.setState(0x1690, 0xf258, 0xd370, 0xb33a, 0xcf53, 0xb596, 0x1, 0x1);
        gbc.writeMem(0x1690, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf258, gbc.sp());
        EXPECT(0x1692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 031E
        gbc.setState(0x32fb, 0x2e95, 0x8cd0, 0x819f, 0x4644, 0x9aa7, 0x0, 0x0);
        gbc.writeMem(0x32fb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2e95, gbc.sp());
        EXPECT(0x32fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 031F
        gbc.setState(0xeee5, 0x6e35, 0xe710, 0xf25a, 0x9e5c, 0x5027, 0x1, 0x0);
        gbc.writeMem(0xeee5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0xeee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee5));
        EXPECT(0xf2, gbc.readMem(0xeee6));
        // CB F2 0320
        gbc.setState(0x96f2, 0x803, 0x44d0, 0xd9bf, 0xbf4d, 0xe415, 0x0, 0x1);
        gbc.writeMem(0x96f2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x803, gbc.sp());
        EXPECT(0x96f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96f2));
        EXPECT(0xf2, gbc.readMem(0x96f3));
        // CB F2 0321
        gbc.setState(0x1817, 0xa32b, 0xcab0, 0x1783, 0x102f, 0xe275, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa32b, gbc.sp());
        EXPECT(0x1819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0322
        gbc.setState(0xa75f, 0xebdd, 0x3330, 0x55b9, 0x8eb5, 0x87ba, 0x0, 0x0);
        gbc.writeMem(0xa75f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xebdd, gbc.sp());
        EXPECT(0xa761, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa75f));
        EXPECT(0xf2, gbc.readMem(0xa760));
        // CB F2 0323
        gbc.setState(0x63ca, 0x28b4, 0x7030, 0xe771, 0xce58, 0xced7, 0x1, 0x1);
        gbc.writeMem(0x63ca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x28b4, gbc.sp());
        EXPECT(0x63cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0324
        gbc.setState(0x929d, 0x709c, 0x80a0, 0x578, 0xba04, 0x8801, 0x0, 0x0);
        gbc.writeMem(0x929d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x709c, gbc.sp());
        EXPECT(0x929f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x929d));
        EXPECT(0xf2, gbc.readMem(0x929e));
        // CB F2 0325
        gbc.setState(0x3d13, 0xa48f, 0x19f0, 0xe892, 0xb7be, 0x1af3, 0x1, 0x0);
        gbc.writeMem(0x3d13, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa48f, gbc.sp());
        EXPECT(0x3d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0326
        gbc.setState(0x18b4, 0xb192, 0x2ba0, 0x5981, 0x7c16, 0xacfd, 0x1, 0x1);
        gbc.writeMem(0x18b4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb192, gbc.sp());
        EXPECT(0x18b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0327
        gbc.setState(0x63e9, 0x33b7, 0xaf30, 0xf79, 0xd291, 0x3bbf, 0x1, 0x1);
        gbc.writeMem(0x63e9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x33b7, gbc.sp());
        EXPECT(0x63eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0328
        gbc.setState(0xd825, 0xb104, 0x13c0, 0x3961, 0xe311, 0xa850, 0x0, 0x1);
        gbc.writeMem(0xd825, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb104, gbc.sp());
        EXPECT(0xd827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd825));
        EXPECT(0xf2, gbc.readMem(0xd826));
        // CB F2 0329
        gbc.setState(0xe648, 0x8360, 0x8780, 0x4e30, 0x192f, 0xdbab, 0x1, 0x0);
        gbc.writeMem(0xe648, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8360, gbc.sp());
        EXPECT(0xe64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe648));
        EXPECT(0xf2, gbc.readMem(0xe649));
        // CB F2 032A
        gbc.setState(0x5433, 0x751d, 0xfc90, 0x9a9f, 0x60a1, 0x4d79, 0x0, 0x0);
        gbc.writeMem(0x5433, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x751d, gbc.sp());
        EXPECT(0x5435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 032B
        gbc.setState(0x7946, 0xee1f, 0x14d0, 0x8ce8, 0x6efb, 0x4710, 0x1, 0x0);
        gbc.writeMem(0x7946, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xee1f, gbc.sp());
        EXPECT(0x7948, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 032C
        gbc.setState(0x6f9b, 0xefb3, 0x1660, 0x7962, 0x1288, 0xd548, 0x0, 0x1);
        gbc.writeMem(0x6f9b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xefb3, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 032D
        gbc.setState(0x6d99, 0x6400, 0x1180, 0xd41f, 0x163c, 0x40a1, 0x1, 0x0);
        gbc.writeMem(0x6d99, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6400, gbc.sp());
        EXPECT(0x6d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 032E
        gbc.setState(0x555a, 0x2605, 0xa340, 0xa7b6, 0xd6b1, 0x53fb, 0x1, 0x1);
        gbc.writeMem(0x555a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2605, gbc.sp());
        EXPECT(0x555c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 032F
        gbc.setState(0x13d8, 0xec46, 0x4e0, 0x16b, 0xd5d6, 0xedbd, 0x1, 0x0);
        gbc.writeMem(0x13d8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec46, gbc.sp());
        EXPECT(0x13da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0330
        gbc.setState(0x8371, 0xb3fd, 0x6870, 0x499e, 0x97b4, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x8371, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb3fd, gbc.sp());
        EXPECT(0x8373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8371));
        EXPECT(0xf2, gbc.readMem(0x8372));
        // CB F2 0331
        gbc.setState(0xc918, 0xf041, 0x7550, 0x5ea8, 0x2759, 0x722a, 0x0, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf041, gbc.sp());
        EXPECT(0xc91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc918));
        EXPECT(0xf2, gbc.readMem(0xc919));
        // CB F2 0332
        gbc.setState(0xd411, 0x7fe3, 0x1c0, 0x7dc7, 0xdb1a, 0xaf5a, 0x1, 0x0);
        gbc.writeMem(0xd411, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7fe3, gbc.sp());
        EXPECT(0xd413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd411));
        EXPECT(0xf2, gbc.readMem(0xd412));
        // CB F2 0333
        gbc.setState(0x3f4e, 0xfe1c, 0x2b90, 0xc59d, 0xded0, 0xad2d, 0x0, 0x0);
        gbc.writeMem(0x3f4e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe1c, gbc.sp());
        EXPECT(0x3f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0334
        gbc.setState(0xca58, 0x106f, 0x8c30, 0x8141, 0xca44, 0x9058, 0x1, 0x0);
        gbc.writeMem(0xca58, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x106f, gbc.sp());
        EXPECT(0xca5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca58));
        EXPECT(0xf2, gbc.readMem(0xca59));
        // CB F2 0335
        gbc.setState(0xc45b, 0x290b, 0xfdb0, 0xa5b6, 0xcf8f, 0xeed3, 0x0, 0x0);
        gbc.writeMem(0xc45b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x290b, gbc.sp());
        EXPECT(0xc45d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45b));
        EXPECT(0xf2, gbc.readMem(0xc45c));
        // CB F2 0337
        gbc.setState(0x53ae, 0xfa8a, 0xcc00, 0xe6f8, 0x229a, 0xf76f, 0x1, 0x1);
        gbc.writeMem(0x53ae, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xfa8a, gbc.sp());
        EXPECT(0x53b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0338
        gbc.setState(0x6856, 0xcd4b, 0x4be0, 0xcdb7, 0xa8d5, 0x46ee, 0x0, 0x0);
        gbc.writeMem(0x6856, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcd4b, gbc.sp());
        EXPECT(0x6858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0339
        gbc.setState(0xee20, 0x5bcc, 0xad70, 0x7db8, 0x993d, 0xdc4e, 0x1, 0x1);
        gbc.writeMem(0xee20, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5bcc, gbc.sp());
        EXPECT(0xee22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee20));
        EXPECT(0xf2, gbc.readMem(0xee21));
        // CB F2 033A
        gbc.setState(0x78b3, 0x328f, 0xd7e0, 0xaafc, 0x535a, 0x56d1, 0x1, 0x0);
        gbc.writeMem(0x78b3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x328f, gbc.sp());
        EXPECT(0x78b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 033B
        gbc.setState(0x996d, 0x1730, 0xb2a0, 0xed8f, 0xacb1, 0x2b36, 0x1, 0x1);
        gbc.writeMem(0x996d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1730, gbc.sp());
        EXPECT(0x996f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996d));
        EXPECT(0xf2, gbc.readMem(0x996e));
        // CB F2 033C
        gbc.setState(0xb6b3, 0xb4b5, 0xe930, 0xf0d7, 0xe530, 0x7ff4, 0x0, 0x0);
        gbc.writeMem(0xb6b3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0xb6b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b3));
        EXPECT(0xf2, gbc.readMem(0xb6b4));
        // CB F2 033E
        gbc.setState(0x794d, 0x2828, 0xb5b0, 0x1888, 0xc3d8, 0x4c, 0x0, 0x1);
        gbc.writeMem(0x794d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2828, gbc.sp());
        EXPECT(0x794f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 033F
        gbc.setState(0x413e, 0x66e5, 0x3130, 0x9ee8, 0x4856, 0x4150, 0x1, 0x0);
        gbc.writeMem(0x413e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x66e5, gbc.sp());
        EXPECT(0x4140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0340
        gbc.setState(0x3409, 0x2184, 0x59e0, 0x9a6e, 0x6eee, 0x2007, 0x0, 0x0);
        gbc.writeMem(0x3409, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0x340b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0341
        gbc.setState(0xc69, 0x4757, 0x2ea0, 0xb74e, 0x8712, 0x6ac3, 0x0, 0x1);
        gbc.writeMem(0xc69, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4757, gbc.sp());
        EXPECT(0xc6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0342
        gbc.setState(0xe5e, 0xc3b9, 0x52b0, 0xbc9d, 0xd73e, 0x57fb, 0x0, 0x0);
        gbc.writeMem(0xe5e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc3b9, gbc.sp());
        EXPECT(0xe60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0343
        gbc.setState(0x2f5b, 0xa90b, 0x4c30, 0x46c1, 0xd002, 0xbb87, 0x0, 0x0);
        gbc.writeMem(0x2f5b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa90b, gbc.sp());
        EXPECT(0x2f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0344
        gbc.setState(0xca75, 0x7523, 0xdbe0, 0xe77f, 0xaf58, 0x5c4e, 0x0, 0x1);
        gbc.writeMem(0xca75, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7523, gbc.sp());
        EXPECT(0xca77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca75));
        EXPECT(0xf2, gbc.readMem(0xca76));
        // CB F2 0345
        gbc.setState(0xbe8b, 0xabbe, 0xf790, 0x9931, 0xd7e9, 0x3b3a, 0x1, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xabbe, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0xf2, gbc.readMem(0xbe8c));
        // CB F2 0346
        gbc.setState(0x91a, 0xebeb, 0x1800, 0x2253, 0x8fb7, 0x1d78, 0x0, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xebeb, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0348
        gbc.setState(0x1f95, 0x644d, 0x1330, 0xce99, 0x3e91, 0x7a4f, 0x0, 0x1);
        gbc.writeMem(0x1f95, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x644d, gbc.sp());
        EXPECT(0x1f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0349
        gbc.setState(0xd6f, 0x6157, 0x520, 0x6949, 0x4656, 0x3656, 0x1, 0x0);
        gbc.writeMem(0xd6f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6157, gbc.sp());
        EXPECT(0xd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 034A
        gbc.setState(0x47da, 0x3c5a, 0xa190, 0x5ea1, 0x3704, 0xb6ea, 0x1, 0x1);
        gbc.writeMem(0x47da, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3c5a, gbc.sp());
        EXPECT(0x47dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 034B
        gbc.setState(0x619e, 0x9e76, 0xebc0, 0x99c4, 0x285c, 0xe738, 0x0, 0x0);
        gbc.writeMem(0x619e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0x61a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 034C
        gbc.setState(0x5000, 0x7876, 0xa860, 0xe0e4, 0xd4da, 0xd6c, 0x0, 0x1);
        gbc.writeMem(0x5000, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7876, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 034D
        gbc.setState(0x822, 0x61f2, 0xfda0, 0x208c, 0xe9cc, 0xd545, 0x0, 0x0);
        gbc.writeMem(0x822, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x61f2, gbc.sp());
        EXPECT(0x824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 034E
        gbc.setState(0xb07, 0x44a8, 0xd010, 0xcc29, 0x4cb, 0xb0d1, 0x0, 0x0);
        gbc.writeMem(0xb07, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x44a8, gbc.sp());
        EXPECT(0xb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 034F
        gbc.setState(0xef9f, 0x6fb3, 0xae40, 0xf2e2, 0xfa44, 0x4169, 0x0, 0x0);
        gbc.writeMem(0xef9f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0xefa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9f));
        EXPECT(0xf2, gbc.readMem(0xefa0));
        // CB F2 0351
        gbc.setState(0x50d7, 0xfd9a, 0xa330, 0xdd83, 0xe2b6, 0x4964, 0x0, 0x1);
        gbc.writeMem(0x50d7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfd9a, gbc.sp());
        EXPECT(0x50d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0352
        gbc.setState(0x7a8, 0x6283, 0xe2b0, 0x5416, 0x8fc9, 0xc91e, 0x1, 0x0);
        gbc.writeMem(0x7a8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6283, gbc.sp());
        EXPECT(0x7aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0353
        gbc.setState(0xa44e, 0x2ec7, 0xb250, 0xf230, 0xaf83, 0x4628, 0x0, 0x0);
        gbc.writeMem(0xa44e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2ec7, gbc.sp());
        EXPECT(0xa450, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44e));
        EXPECT(0xf2, gbc.readMem(0xa44f));
        // CB F2 0354
        gbc.setState(0xe7bd, 0x8b53, 0xa210, 0xf44a, 0x2a2d, 0xff10, 0x0, 0x1);
        gbc.writeMem(0xe7bd, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b53, gbc.sp());
        EXPECT(0xe7bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bd));
        EXPECT(0xf2, gbc.readMem(0xe7be));
        // CB F2 0355
        gbc.setState(0x8232, 0xb50f, 0x7830, 0xf9be, 0x527f, 0x8a1f, 0x1, 0x0);
        gbc.writeMem(0x8232, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb50f, gbc.sp());
        EXPECT(0x8234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8232));
        EXPECT(0xf2, gbc.readMem(0x8233));
        // CB F2 0356
        gbc.setState(0x5286, 0x479, 0xb1e0, 0xe34c, 0xc30a, 0xa938, 0x1, 0x0);
        gbc.writeMem(0x5286, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x479, gbc.sp());
        EXPECT(0x5288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0357
        gbc.setState(0x483c, 0x95d0, 0xaf70, 0x9dbf, 0x47fa, 0xbb1b, 0x1, 0x0);
        gbc.writeMem(0x483c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x95d0, gbc.sp());
        EXPECT(0x483e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0358
        gbc.setState(0x5e98, 0xb952, 0x3190, 0x5577, 0x4d7c, 0xf797, 0x1, 0x1);
        gbc.writeMem(0x5e98, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb952, gbc.sp());
        EXPECT(0x5e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0359
        gbc.setState(0x3e09, 0x6026, 0x8010, 0xb975, 0x7cb2, 0xbbb9, 0x0, 0x1);
        gbc.writeMem(0x3e09, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6026, gbc.sp());
        EXPECT(0x3e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 035A
        gbc.setState(0xfc2, 0xc3fc, 0xee10, 0xa828, 0xba01, 0xf762, 0x0, 0x1);
        gbc.writeMem(0xfc2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc3fc, gbc.sp());
        EXPECT(0xfc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 035B
        gbc.setState(0x4cec, 0xf17d, 0x74b0, 0xbbf3, 0x36ff, 0xedd4, 0x1, 0x1);
        gbc.writeMem(0x4cec, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf17d, gbc.sp());
        EXPECT(0x4cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 035C
        gbc.setState(0x340d, 0x50e1, 0x9b30, 0x9259, 0x26e3, 0x12e2, 0x0, 0x1);
        gbc.writeMem(0x340d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x50e1, gbc.sp());
        EXPECT(0x340f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 035D
        gbc.setState(0xb75, 0x89ac, 0xbf60, 0x8268, 0x504, 0x987a, 0x0, 0x0);
        gbc.writeMem(0xb75, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x89ac, gbc.sp());
        EXPECT(0xb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 035F
        gbc.setState(0x5429, 0xffd7, 0xc380, 0x367, 0x2a1d, 0xc0c0, 0x1, 0x0);
        gbc.writeMem(0x5429, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0360
        gbc.setState(0xc73a, 0xcd63, 0x9ae0, 0xccbe, 0xa911, 0x7b4c, 0x0, 0x0);
        gbc.writeMem(0xc73a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcd63, gbc.sp());
        EXPECT(0xc73c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc73a));
        EXPECT(0xf2, gbc.readMem(0xc73b));
        // CB F2 0361
        gbc.setState(0x9d5, 0x67e0, 0x23f0, 0xa579, 0xa9ee, 0xa405, 0x0, 0x0);
        gbc.writeMem(0x9d5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x67e0, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0362
        gbc.setState(0x8645, 0xfa16, 0xf3a0, 0xcd0f, 0xfc45, 0xeef2, 0x0, 0x1);
        gbc.writeMem(0x8645, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfa16, gbc.sp());
        EXPECT(0x8647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8645));
        EXPECT(0xf2, gbc.readMem(0x8646));
        // CB F2 0363
        gbc.setState(0x96cc, 0x6092, 0x29c0, 0x5b49, 0xcfce, 0xf359, 0x0, 0x0);
        gbc.writeMem(0x96cc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6092, gbc.sp());
        EXPECT(0x96ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cc));
        EXPECT(0xf2, gbc.readMem(0x96cd));
        // CB F2 0364
        gbc.setState(0xc870, 0x548b, 0x3f50, 0x5149, 0xce54, 0xf09a, 0x0, 0x1);
        gbc.writeMem(0xc870, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc870));
        EXPECT(0xf2, gbc.readMem(0xc871));
        // CB F2 0365
        gbc.setState(0x3ec5, 0x748a, 0xb7a0, 0x5647, 0xe84d, 0xb726, 0x1, 0x1);
        gbc.writeMem(0x3ec5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x748a, gbc.sp());
        EXPECT(0x3ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0366
        gbc.setState(0xfe9, 0xd785, 0x7180, 0xc88a, 0x7ecd, 0xeac, 0x0, 0x0);
        gbc.writeMem(0xfe9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd785, gbc.sp());
        EXPECT(0xfeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0367
        gbc.setState(0x1280, 0x6ef5, 0xd8c0, 0xa08b, 0x6d07, 0xcee8, 0x0, 0x1);
        gbc.writeMem(0x1280, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6ef5, gbc.sp());
        EXPECT(0x1282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0368
        gbc.setState(0xb929, 0x2aac, 0xaac0, 0xd568, 0x85bd, 0x240, 0x1, 0x1);
        gbc.writeMem(0xb929, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2aac, gbc.sp());
        EXPECT(0xb92b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb929));
        EXPECT(0xf2, gbc.readMem(0xb92a));
        // CB F2 0369
        gbc.setState(0xb8b7, 0xb92a, 0xc560, 0xdcd5, 0x5510, 0xcb5d, 0x0, 0x1);
        gbc.writeMem(0xb8b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0xb8b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b7));
        EXPECT(0xf2, gbc.readMem(0xb8b8));
        // CB F2 036A
        gbc.setState(0x35e8, 0x4a59, 0x4960, 0x41c5, 0x70e3, 0x40fa, 0x1, 0x1);
        gbc.writeMem(0x35e8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4a59, gbc.sp());
        EXPECT(0x35ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 036B
        gbc.setState(0xbfb8, 0x122b, 0x9ea0, 0x9099, 0x234d, 0x9999, 0x1, 0x1);
        gbc.writeMem(0xbfb8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xbfba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb8));
        EXPECT(0xf2, gbc.readMem(0xbfb9));
        // CB F2 036C
        gbc.setState(0x4e9, 0x49b, 0x4c20, 0x8e25, 0x6531, 0xbad8, 0x0, 0x1);
        gbc.writeMem(0x4e9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0x4eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 036D
        gbc.setState(0x618f, 0xedfd, 0x65d0, 0xf24d, 0x62b9, 0xf70c, 0x0, 0x0);
        gbc.writeMem(0x618f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xedfd, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 036E
        gbc.setState(0xe85, 0xd270, 0x7220, 0xf164, 0xc560, 0x1e52, 0x0, 0x1);
        gbc.writeMem(0xe85, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0xe87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 036F
        gbc.setState(0x10a2, 0x9d93, 0xc610, 0x7012, 0x8a0a, 0x3eb2, 0x0, 0x1);
        gbc.writeMem(0x10a2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9d93, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0370
        gbc.setState(0x30a8, 0xc3bc, 0xb550, 0x8268, 0x8986, 0x3012, 0x1, 0x1);
        gbc.writeMem(0x30a8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc3bc, gbc.sp());
        EXPECT(0x30aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0371
        gbc.setState(0xcc7e, 0xab5c, 0xbd0, 0x237c, 0x35ad, 0x847, 0x1, 0x0);
        gbc.writeMem(0xcc7e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab5c, gbc.sp());
        EXPECT(0xcc80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7e));
        EXPECT(0xf2, gbc.readMem(0xcc7f));
        // CB F2 0372
        gbc.setState(0x9564, 0x5b7f, 0x7a60, 0x6da5, 0x2b80, 0x4656, 0x1, 0x0);
        gbc.writeMem(0x9564, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5b7f, gbc.sp());
        EXPECT(0x9566, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9564));
        EXPECT(0xf2, gbc.readMem(0x9565));
        // CB F2 0375
        gbc.setState(0xef11, 0xc445, 0x9a40, 0x884e, 0x6740, 0x9fae, 0x0, 0x1);
        gbc.writeMem(0xef11, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc445, gbc.sp());
        EXPECT(0xef13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef11));
        EXPECT(0xf2, gbc.readMem(0xef12));
        // CB F2 0376
        gbc.setState(0x9fc8, 0xd59f, 0x3560, 0xc6cb, 0x356b, 0xb242, 0x0, 0x0);
        gbc.writeMem(0x9fc8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd59f, gbc.sp());
        EXPECT(0x9fca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc8));
        EXPECT(0xf2, gbc.readMem(0x9fc9));
        // CB F2 0377
        gbc.setState(0xc43c, 0x2cde, 0x73b0, 0xda58, 0x6b90, 0xecc, 0x0, 0x0);
        gbc.writeMem(0xc43c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2cde, gbc.sp());
        EXPECT(0xc43e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43c));
        EXPECT(0xf2, gbc.readMem(0xc43d));
        // CB F2 0378
        gbc.setState(0xa905, 0x7af4, 0xa880, 0xa50f, 0x3f18, 0xe186, 0x0, 0x1);
        gbc.writeMem(0xa905, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7af4, gbc.sp());
        EXPECT(0xa907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa905));
        EXPECT(0xf2, gbc.readMem(0xa906));
        // CB F2 0379
        gbc.setState(0x39fb, 0x87a1, 0x8a20, 0x2ca8, 0xe34a, 0x6930, 0x1, 0x0);
        gbc.writeMem(0x39fb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x87a1, gbc.sp());
        EXPECT(0x39fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 037A
        gbc.setState(0x409a, 0x3583, 0xeff0, 0x8768, 0x280e, 0xf7c0, 0x0, 0x1);
        gbc.writeMem(0x409a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3583, gbc.sp());
        EXPECT(0x409c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 037B
        gbc.setState(0x54f, 0x7b7c, 0xa900, 0xc8a7, 0x9160, 0xfa43, 0x1, 0x0);
        gbc.writeMem(0x54f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7b7c, gbc.sp());
        EXPECT(0x551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 037C
        gbc.setState(0x6604, 0xe3c0, 0xa080, 0x54a6, 0x70b2, 0x34f7, 0x1, 0x0);
        gbc.writeMem(0x6604, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe3c0, gbc.sp());
        EXPECT(0x6606, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 037D
        gbc.setState(0x2b6b, 0x59f4, 0x51c0, 0xa534, 0xa769, 0x5c94, 0x1, 0x1);
        gbc.writeMem(0x2b6b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x59f4, gbc.sp());
        EXPECT(0x2b6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 037E
        gbc.setState(0xa9c1, 0xf8a8, 0x5440, 0x9a54, 0xeca0, 0x5acd, 0x0, 0x0);
        gbc.writeMem(0xa9c1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf8a8, gbc.sp());
        EXPECT(0xa9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c1));
        EXPECT(0xf2, gbc.readMem(0xa9c2));
        // CB F2 037F
        gbc.setState(0x4133, 0x77b, 0x6200, 0x325a, 0x5b57, 0x3b65, 0x0, 0x0);
        gbc.writeMem(0x4133, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x4135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0380
        gbc.setState(0x10c1, 0x6d0d, 0x6a00, 0x9bdb, 0xb538, 0x7b9b, 0x0, 0x1);
        gbc.writeMem(0x10c1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6d0d, gbc.sp());
        EXPECT(0x10c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0381
        gbc.setState(0x68c0, 0xacf1, 0x29b0, 0x7af2, 0x3902, 0xe093, 0x0, 0x0);
        gbc.writeMem(0x68c0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xacf1, gbc.sp());
        EXPECT(0x68c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0382
        gbc.setState(0x6a2, 0xc4a9, 0xedd0, 0x8fbd, 0x3788, 0x4737, 0x0, 0x0);
        gbc.writeMem(0x6a2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc4a9, gbc.sp());
        EXPECT(0x6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0383
        gbc.setState(0x43ba, 0xb028, 0x1c50, 0xff32, 0xd22a, 0xacc0, 0x0, 0x0);
        gbc.writeMem(0x43ba, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb028, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0384
        gbc.setState(0x6a6, 0x4b26, 0x8eb0, 0x74b8, 0x21f9, 0x51b8, 0x0, 0x1);
        gbc.writeMem(0x6a6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4b26, gbc.sp());
        EXPECT(0x6a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0385
        gbc.setState(0x5731, 0xc63b, 0x3ae0, 0x282, 0x61bb, 0xc28d, 0x0, 0x0);
        gbc.writeMem(0x5731, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc63b, gbc.sp());
        EXPECT(0x5733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0386
        gbc.setState(0x9d64, 0x1398, 0x9710, 0x51db, 0x1716, 0x5da6, 0x1, 0x0);
        gbc.writeMem(0x9d64, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0x9d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d64));
        EXPECT(0xf2, gbc.readMem(0x9d65));
        // CB F2 0388
        gbc.setState(0x4d35, 0x8835, 0xc580, 0xffcf, 0x32b0, 0x17a5, 0x1, 0x1);
        gbc.writeMem(0x4d35, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8835, gbc.sp());
        EXPECT(0x4d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0389
        gbc.setState(0x856f, 0xfb87, 0xc870, 0x1ba8, 0x7cdd, 0x90ca, 0x1, 0x0);
        gbc.writeMem(0x856f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfb87, gbc.sp());
        EXPECT(0x8571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856f));
        EXPECT(0xf2, gbc.readMem(0x8570));
        // CB F2 038A
        gbc.setState(0x6c46, 0x4189, 0xa5c0, 0x89a6, 0xbb58, 0xa414, 0x0, 0x1);
        gbc.writeMem(0x6c46, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0x6c48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 038B
        gbc.setState(0xb098, 0x535a, 0xf040, 0x9b5d, 0xa8c2, 0x8cf, 0x1, 0x1);
        gbc.writeMem(0xb098, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0xb09a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb098));
        EXPECT(0xf2, gbc.readMem(0xb099));
        // CB F2 038C
        gbc.setState(0x256b, 0x7aa5, 0x1960, 0xdebf, 0x925f, 0x614d, 0x0, 0x0);
        gbc.writeMem(0x256b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7aa5, gbc.sp());
        EXPECT(0x256d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 038D
        gbc.setState(0x8cfe, 0xaea0, 0x22a0, 0x7d7b, 0x5ae3, 0xa021, 0x0, 0x0);
        gbc.writeMem(0x8cfe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaea0, gbc.sp());
        EXPECT(0x8d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cfe));
        EXPECT(0xf2, gbc.readMem(0x8cff));
        // CB F2 038E
        gbc.setState(0x61b7, 0xd433, 0x2630, 0x1307, 0x8b08, 0x18b7, 0x1, 0x0);
        gbc.writeMem(0x61b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd433, gbc.sp());
        EXPECT(0x61b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 038F
        gbc.setState(0x141a, 0x85a, 0x44d0, 0xcce, 0xd3eb, 0x8e2a, 0x0, 0x0);
        gbc.writeMem(0x141a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x85a, gbc.sp());
        EXPECT(0x141c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0391
        gbc.setState(0xeb7f, 0x6ff3, 0xc6d0, 0x22d3, 0x1f68, 0xc774, 0x1, 0x1);
        gbc.writeMem(0xeb7f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6ff3, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7f));
        EXPECT(0xf2, gbc.readMem(0xeb80));
        // CB F2 0392
        gbc.setState(0xf06, 0x2cdb, 0x39a0, 0x846d, 0x484e, 0x3651, 0x1, 0x1);
        gbc.writeMem(0xf06, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2cdb, gbc.sp());
        EXPECT(0xf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0393
        gbc.setState(0xdd1d, 0x422d, 0x61d0, 0xb089, 0x8482, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0xdd1d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x422d, gbc.sp());
        EXPECT(0xdd1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1d));
        EXPECT(0xf2, gbc.readMem(0xdd1e));
        // CB F2 0394
        gbc.setState(0x3176, 0x8836, 0x6a30, 0xd82, 0xfd15, 0xc82d, 0x0, 0x0);
        gbc.writeMem(0x3176, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 0396
        gbc.setState(0x7abc, 0x53ba, 0x6c0, 0xc39d, 0xe76a, 0x7708, 0x0, 0x1);
        gbc.writeMem(0x7abc, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x53ba, gbc.sp());
        EXPECT(0x7abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 0397
        gbc.setState(0xe1c4, 0xfa60, 0xb080, 0x3985, 0xc4b5, 0x9ae4, 0x0, 0x0);
        gbc.writeMem(0xe1c4, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0xe1c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c4));
        EXPECT(0xf2, gbc.readMem(0xe1c5));
        // CB F2 0398
        gbc.setState(0x83ec, 0x4d0b, 0x550, 0xb52b, 0x8a20, 0x6e75, 0x1, 0x0);
        gbc.writeMem(0x83ec, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4d0b, gbc.sp());
        EXPECT(0x83ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ec));
        EXPECT(0xf2, gbc.readMem(0x83ed));
        // CB F2 0399
        gbc.setState(0xb630, 0x8d7f, 0x3a30, 0xe4f6, 0x700a, 0x1ebe, 0x1, 0x1);
        gbc.writeMem(0xb630, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8d7f, gbc.sp());
        EXPECT(0xb632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb630));
        EXPECT(0xf2, gbc.readMem(0xb631));
        // CB F2 039A
        gbc.setState(0xbc9c, 0x35d, 0xb0f0, 0x2e61, 0x11db, 0xb9b0, 0x1, 0x0);
        gbc.writeMem(0xbc9c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x35d, gbc.sp());
        EXPECT(0xbc9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9c));
        EXPECT(0xf2, gbc.readMem(0xbc9d));
        // CB F2 039C
        gbc.setState(0x4261, 0x6ff9, 0xdcb0, 0x71e9, 0x6bf9, 0xe360, 0x0, 0x0);
        gbc.writeMem(0x4261, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x4263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 039D
        gbc.setState(0xca96, 0x6a16, 0x1940, 0xc08d, 0xc19, 0xf5ad, 0x1, 0x1);
        gbc.writeMem(0xca96, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0xca98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca96));
        EXPECT(0xf2, gbc.readMem(0xca97));
        // CB F2 039E
        gbc.setState(0x8528, 0xc8ef, 0x15b0, 0x2083, 0xbc4, 0xb0f8, 0x0, 0x0);
        gbc.writeMem(0x8528, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xc8ef, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8528));
        EXPECT(0xf2, gbc.readMem(0x8529));
        // CB F2 039F
        gbc.setState(0x85f3, 0x394a, 0xf200, 0xa30d, 0xf91e, 0xc97b, 0x0, 0x0);
        gbc.writeMem(0x85f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x394a, gbc.sp());
        EXPECT(0x85f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85f3));
        EXPECT(0xf2, gbc.readMem(0x85f4));
        // CB F2 03A0
        gbc.setState(0x1a0b, 0x6d02, 0xa740, 0x788b, 0xba26, 0xbe15, 0x0, 0x1);
        gbc.writeMem(0x1a0b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6d02, gbc.sp());
        EXPECT(0x1a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A1
        gbc.setState(0xefef, 0xc96d, 0xfc0, 0xe73f, 0x44b6, 0x5528, 0x1, 0x0);
        gbc.writeMem(0xefef, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc96d, gbc.sp());
        EXPECT(0xeff1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefef));
        EXPECT(0xf2, gbc.readMem(0xeff0));
        // CB F2 03A2
        gbc.setState(0x396f, 0x1451, 0xa240, 0x5162, 0xd64c, 0x4e1b, 0x0, 0x1);
        gbc.writeMem(0x396f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1451, gbc.sp());
        EXPECT(0x3971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A3
        gbc.setState(0x6f99, 0x93b3, 0x8b40, 0xe322, 0x9e53, 0xefe, 0x0, 0x0);
        gbc.writeMem(0x6f99, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x93b3, gbc.sp());
        EXPECT(0x6f9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A4
        gbc.setState(0xa71c, 0x80f5, 0x590, 0x6a6b, 0x5b36, 0xfe42, 0x1, 0x1);
        gbc.writeMem(0xa71c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x80f5, gbc.sp());
        EXPECT(0xa71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa71c));
        EXPECT(0xf2, gbc.readMem(0xa71d));
        // CB F2 03A5
        gbc.setState(0x4163, 0x2f63, 0x7330, 0x29a4, 0x9a76, 0xf3d1, 0x0, 0x1);
        gbc.writeMem(0x4163, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2f63, gbc.sp());
        EXPECT(0x4165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03A6
        gbc.setState(0x76a6, 0xf365, 0xd60, 0x1012, 0x1f0d, 0xba9f, 0x0, 0x1);
        gbc.writeMem(0x76a6, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0x76a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A7
        gbc.setState(0x21a1, 0x3ece, 0x3e20, 0x8495, 0x23e2, 0x6469, 0x1, 0x1);
        gbc.writeMem(0x21a1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x21a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A8
        gbc.setState(0x17c, 0xa4fe, 0xe5e0, 0xf7ce, 0x8246, 0x28ba, 0x0, 0x1);
        gbc.writeMem(0x17c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa4fe, gbc.sp());
        EXPECT(0x17e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03A9
        gbc.setState(0xeef9, 0xfc84, 0x95b0, 0x2717, 0x46a, 0xefda, 0x0, 0x1);
        gbc.writeMem(0xeef9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfc84, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef9));
        EXPECT(0xf2, gbc.readMem(0xeefa));
        // CB F2 03AB
        gbc.setState(0xe956, 0x9219, 0xc600, 0x7ebc, 0xa344, 0xbb46, 0x0, 0x0);
        gbc.writeMem(0xe956, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9219, gbc.sp());
        EXPECT(0xe958, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe956));
        EXPECT(0xf2, gbc.readMem(0xe957));
        // CB F2 03AC
        gbc.setState(0xbb68, 0x3d0e, 0x3770, 0xc891, 0xc8c3, 0x7fd6, 0x1, 0x1);
        gbc.writeMem(0xbb68, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0xbb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb68));
        EXPECT(0xf2, gbc.readMem(0xbb69));
        // CB F2 03AD
        gbc.setState(0xdfad, 0x7fc5, 0xdad0, 0xd539, 0xea32, 0x4643, 0x1, 0x0);
        gbc.writeMem(0xdfad, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7fc5, gbc.sp());
        EXPECT(0xdfaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfad));
        EXPECT(0xf2, gbc.readMem(0xdfae));
        // CB F2 03AE
        gbc.setState(0xe8f2, 0x6014, 0x2e20, 0x116b, 0xd4e1, 0xd483, 0x0, 0x0);
        gbc.writeMem(0xe8f2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6014, gbc.sp());
        EXPECT(0xe8f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f2));
        EXPECT(0xf2, gbc.readMem(0xe8f3));
        // CB F2 03AF
        gbc.setState(0x106a, 0xc8f9, 0xa790, 0x4b86, 0x43a6, 0xd2a6, 0x1, 0x0);
        gbc.writeMem(0x106a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc8f9, gbc.sp());
        EXPECT(0x106c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03B0
        gbc.setState(0x53ed, 0x9903, 0xd870, 0x93ac, 0xa659, 0x85e9, 0x0, 0x1);
        gbc.writeMem(0x53ed, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9903, gbc.sp());
        EXPECT(0x53ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03B1
        gbc.setState(0x98aa, 0xa744, 0xe690, 0xd266, 0x22b9, 0x5f47, 0x1, 0x1);
        gbc.writeMem(0x98aa, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa744, gbc.sp());
        EXPECT(0x98ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98aa));
        EXPECT(0xf2, gbc.readMem(0x98ab));
        // CB F2 03B2
        gbc.setState(0x7dfe, 0xafaf, 0xb310, 0x16d8, 0x9bf2, 0xa66f, 0x1, 0x0);
        gbc.writeMem(0x7dfe, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xafaf, gbc.sp());
        EXPECT(0x7e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03B3
        gbc.setState(0x4f93, 0xd38a, 0xb710, 0x130d, 0xcb4, 0x30e9, 0x0, 0x0);
        gbc.writeMem(0x4f93, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd38a, gbc.sp());
        EXPECT(0x4f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03B4
        gbc.setState(0xb8de, 0x20ab, 0xed30, 0xdb2d, 0xe875, 0x4f74, 0x0, 0x0);
        gbc.writeMem(0xb8de, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x20ab, gbc.sp());
        EXPECT(0xb8e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8de));
        EXPECT(0xf2, gbc.readMem(0xb8df));
        // CB F2 03B6
        gbc.setState(0xb2eb, 0x7ad7, 0x9da0, 0xaa9b, 0x2d9e, 0x5674, 0x1, 0x1);
        gbc.writeMem(0xb2eb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7ad7, gbc.sp());
        EXPECT(0xb2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2eb));
        EXPECT(0xf2, gbc.readMem(0xb2ec));
        // CB F2 03B7
        gbc.setState(0xdff1, 0xb923, 0x3500, 0x9a1b, 0x2f78, 0x61e6, 0x1, 0x0);
        gbc.writeMem(0xdff1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb923, gbc.sp());
        EXPECT(0xdff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdff1));
        EXPECT(0xf2, gbc.readMem(0xdff2));
        // CB F2 03B8
        gbc.setState(0x6515, 0x17b, 0x5020, 0xec4f, 0x191b, 0x2f8e, 0x1, 0x0);
        gbc.writeMem(0x6515, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x17b, gbc.sp());
        EXPECT(0x6517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03B9
        gbc.setState(0xc3b7, 0xf269, 0x54b0, 0x19f1, 0x2c1d, 0x72dc, 0x1, 0x0);
        gbc.writeMem(0xc3b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf269, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b7));
        EXPECT(0xf2, gbc.readMem(0xc3b8));
        // CB F2 03BA
        gbc.setState(0x7dca, 0x2b03, 0xd420, 0xf7ff, 0xbe3b, 0xa570, 0x1, 0x1);
        gbc.writeMem(0x7dca, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2b03, gbc.sp());
        EXPECT(0x7dcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03BB
        gbc.setState(0xb82a, 0xfc43, 0x2350, 0x8672, 0xf70f, 0x9364, 0x0, 0x1);
        gbc.writeMem(0xb82a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xfc43, gbc.sp());
        EXPECT(0xb82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82a));
        EXPECT(0xf2, gbc.readMem(0xb82b));
        // CB F2 03BC
        gbc.setState(0x78e5, 0xc83d, 0x5a40, 0x56f4, 0x764f, 0x8855, 0x0, 0x0);
        gbc.writeMem(0x78e5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc83d, gbc.sp());
        EXPECT(0x78e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03BD
        gbc.setState(0x72a1, 0x869c, 0x6ce0, 0xa1b0, 0x9f24, 0x4e5f, 0x1, 0x0);
        gbc.writeMem(0x72a1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x72a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03BE
        gbc.setState(0xb06e, 0x9cd1, 0x4880, 0x3d4c, 0x24e6, 0xd3f1, 0x0, 0x1);
        gbc.writeMem(0xb06e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9cd1, gbc.sp());
        EXPECT(0xb070, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb06e));
        EXPECT(0xf2, gbc.readMem(0xb06f));
        // CB F2 03BF
        gbc.setState(0xbed0, 0xe968, 0xd0a0, 0xc095, 0x92c0, 0x31f4, 0x0, 0x0);
        gbc.writeMem(0xbed0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xe968, gbc.sp());
        EXPECT(0xbed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed0));
        EXPECT(0xf2, gbc.readMem(0xbed1));
        // CB F2 03C0
        gbc.setState(0x4136, 0x4cbc, 0xced0, 0x1195, 0xf350, 0xf553, 0x0, 0x1);
        gbc.writeMem(0x4136, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4cbc, gbc.sp());
        EXPECT(0x4138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03C2
        gbc.setState(0x26f, 0x4285, 0xd820, 0xd75c, 0xe969, 0x4aee, 0x1, 0x1);
        gbc.writeMem(0x26f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4285, gbc.sp());
        EXPECT(0x271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03C3
        gbc.setState(0x7b0c, 0x5b59, 0x5200, 0x97c4, 0xff6c, 0x7c54, 0x1, 0x0);
        gbc.writeMem(0x7b0c, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5b59, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03C4
        gbc.setState(0xdd7b, 0x3914, 0xcf80, 0xfa02, 0x883b, 0x12e4, 0x0, 0x1);
        gbc.writeMem(0xdd7b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3914, gbc.sp());
        EXPECT(0xdd7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd7b));
        EXPECT(0xf2, gbc.readMem(0xdd7c));
        // CB F2 03C5
        gbc.setState(0xccb3, 0xf6a8, 0x11c0, 0xda39, 0x6191, 0x6443, 0x1, 0x1);
        gbc.writeMem(0xccb3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf6a8, gbc.sp());
        EXPECT(0xccb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb3));
        EXPECT(0xf2, gbc.readMem(0xccb4));
        // CB F2 03C6
        gbc.setState(0x6ff2, 0xbc32, 0xb4e0, 0x604b, 0x934c, 0x949, 0x0, 0x1);
        gbc.writeMem(0x6ff2, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xbc32, gbc.sp());
        EXPECT(0x6ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03C7
        gbc.setState(0xc667, 0xbc27, 0x6b0, 0x8ef7, 0xb497, 0xea75, 0x0, 0x1);
        gbc.writeMem(0xc667, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbc27, gbc.sp());
        EXPECT(0xc669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc667));
        EXPECT(0xf2, gbc.readMem(0xc668));
        // CB F2 03C8
        gbc.setState(0x94b7, 0x6d8, 0xeea0, 0x40d, 0x379c, 0xe27a, 0x1, 0x1);
        gbc.writeMem(0x94b7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6d8, gbc.sp());
        EXPECT(0x94b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b7));
        EXPECT(0xf2, gbc.readMem(0x94b8));
        // CB F2 03C9
        gbc.setState(0x11b5, 0x8f50, 0x7150, 0xa54a, 0x9e9c, 0xdb82, 0x1, 0x0);
        gbc.writeMem(0x11b5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03CA
        gbc.setState(0xe01b, 0x90c, 0x35c0, 0x40e9, 0x403f, 0xcb51, 0x0, 0x0);
        gbc.writeMem(0xe01b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x90c, gbc.sp());
        EXPECT(0xe01d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe01b));
        EXPECT(0xf2, gbc.readMem(0xe01c));
        // CB F2 03CC
        gbc.setState(0x3644, 0x8d23, 0xc120, 0x25ae, 0xcd34, 0x68cb, 0x1, 0x1);
        gbc.writeMem(0x3644, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0x3646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03CD
        gbc.setState(0x3e62, 0x4f10, 0xf390, 0xab7c, 0x9a78, 0xf526, 0x1, 0x1);
        gbc.writeMem(0x3e62, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4f10, gbc.sp());
        EXPECT(0x3e64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03CE
        gbc.setState(0x7512, 0xbb82, 0x1e70, 0x5f61, 0x652f, 0x476f, 0x0, 0x1);
        gbc.writeMem(0x7512, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03CF
        gbc.setState(0xe5b3, 0xf0e7, 0x2790, 0xf700, 0xe76b, 0x8824, 0x0, 0x1);
        gbc.writeMem(0xe5b3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf0e7, gbc.sp());
        EXPECT(0xe5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b3));
        EXPECT(0xf2, gbc.readMem(0xe5b4));
        // CB F2 03D0
        gbc.setState(0xc9f9, 0x2ccf, 0xcdf0, 0x43f2, 0xfd34, 0x341c, 0x0, 0x1);
        gbc.writeMem(0xc9f9, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0xc9fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f9));
        EXPECT(0xf2, gbc.readMem(0xc9fa));
        // CB F2 03D1
        gbc.setState(0x193f, 0x2902, 0xa200, 0xb145, 0x5a4f, 0xfa75, 0x1, 0x0);
        gbc.writeMem(0x193f, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2902, gbc.sp());
        EXPECT(0x1941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03D2
        gbc.setState(0xd24, 0x6e2e, 0xe850, 0x6b39, 0x2f6c, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0xd24, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6e2e, gbc.sp());
        EXPECT(0xd26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03D3
        gbc.setState(0x670e, 0x981d, 0x6ce0, 0x7d1f, 0x5321, 0x4ece, 0x1, 0x0);
        gbc.writeMem(0x670e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x981d, gbc.sp());
        EXPECT(0x6710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03D4
        gbc.setState(0x56bb, 0x376b, 0x8e60, 0x51d, 0xb657, 0xda4d, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x376b, gbc.sp());
        EXPECT(0x56bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03D5
        gbc.setState(0x3503, 0x3548, 0x3770, 0x2204, 0x3841, 0xb8ac, 0x1, 0x1);
        gbc.writeMem(0x3503, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3548, gbc.sp());
        EXPECT(0x3505, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03D6
        gbc.setState(0x600d, 0xf4c, 0x5c70, 0xac4b, 0xa217, 0xede0, 0x0, 0x0);
        gbc.writeMem(0x600d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0x600f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03D7
        gbc.setState(0x493, 0x1c6f, 0x3e70, 0xa43a, 0xc711, 0xe437, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1c6f, gbc.sp());
        EXPECT(0x495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03D8
        gbc.setState(0x515a, 0x96f5, 0x5740, 0x6769, 0xe05e, 0xa8f8, 0x1, 0x0);
        gbc.writeMem(0x515a, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x96f5, gbc.sp());
        EXPECT(0x515c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03D9
        gbc.setState(0xd3d, 0x1601, 0x14e0, 0x3ae8, 0x9894, 0x894, 0x1, 0x1);
        gbc.writeMem(0xd3d, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1601, gbc.sp());
        EXPECT(0xd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03DA
        gbc.setState(0x5a22, 0x320b, 0x43b0, 0x1829, 0xd487, 0x90bb, 0x0, 0x0);
        gbc.writeMem(0x5a22, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x320b, gbc.sp());
        EXPECT(0x5a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03DB
        gbc.setState(0xa9c7, 0x37e5, 0xe580, 0xc8b4, 0xb1bb, 0x88db, 0x1, 0x1);
        gbc.writeMem(0xa9c7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x37e5, gbc.sp());
        EXPECT(0xa9c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c7));
        EXPECT(0xf2, gbc.readMem(0xa9c8));
        // CB F2 03DC
        gbc.setState(0x59cb, 0x67b4, 0x2910, 0x46b4, 0x70ac, 0xb304, 0x1, 0x0);
        gbc.writeMem(0x59cb, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x67b4, gbc.sp());
        EXPECT(0x59cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03DD
        gbc.setState(0xc7a7, 0x82c3, 0xbc40, 0xf1e, 0x9aec, 0xad73, 0x1, 0x0);
        gbc.writeMem(0xc7a7, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x82c3, gbc.sp());
        EXPECT(0xc7a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a7));
        EXPECT(0xf2, gbc.readMem(0xc7a8));
        // CB F2 03DE
        gbc.setState(0xda7e, 0xf448, 0xaca0, 0x6ca9, 0x8f0e, 0x25af, 0x0, 0x0);
        gbc.writeMem(0xda7e, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf448, gbc.sp());
        EXPECT(0xda80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda7e));
        EXPECT(0xf2, gbc.readMem(0xda7f));
        // CB F2 03DF
        gbc.setState(0x38f1, 0x48ea, 0x35d0, 0x6804, 0xe091, 0x81dc, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x48ea, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03E0
        gbc.setState(0x94b0, 0x1388, 0xedf0, 0xa9dc, 0x76de, 0x211b, 0x1, 0x1);
        gbc.writeMem(0x94b0, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1388, gbc.sp());
        EXPECT(0x94b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94b0));
        EXPECT(0xf2, gbc.readMem(0x94b1));
        // CB F2 03E1
        gbc.setState(0x4c7b, 0x4566, 0xf4f0, 0x42d2, 0xf788, 0x76e8, 0x1, 0x1);
        gbc.writeMem(0x4c7b, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4566, gbc.sp());
        EXPECT(0x4c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03E2
        gbc.setState(0x5dd8, 0xb801, 0x4360, 0x53b2, 0xf579, 0xdd, 0x1, 0x1);
        gbc.writeMem(0x5dd8, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb801, gbc.sp());
        EXPECT(0x5dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03E3
        gbc.setState(0x4f3, 0x9e1, 0xf8a0, 0x6d53, 0x528c, 0xda5c, 0x1, 0x0);
        gbc.writeMem(0x4f3, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9e1, gbc.sp());
        EXPECT(0x4f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB F2 03E4
        gbc.setState(0xb796, 0x17a0, 0xb210, 0xcefd, 0x7372, 0x507f, 0x0, 0x1);
        gbc.writeMem(0xb796, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x17a0, gbc.sp());
        EXPECT(0xb798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb796));
        EXPECT(0xf2, gbc.readMem(0xb797));
        // CB F2 03E5
        gbc.setState(0x82ed, 0x8f6f, 0xc7a0, 0x99b6, 0x301f, 0x38b4, 0x1, 0x1);
        gbc.writeMem(0x82ed, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x82ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ed));
        EXPECT(0xf2, gbc.readMem(0x82ee));
        // CB F2 03E6
        gbc.setState(0x74f5, 0x2f01, 0xd2d0, 0xacee, 0xf349, 0xbe51, 0x0, 0x0);
        gbc.writeMem(0x74f5, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x2f01, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB F2 03E7
        gbc.setState(0xcbba, 0xe40a, 0x5710, 0x505b, 0xf454, 0x511d, 0x1, 0x0);
        gbc.writeMem(0xcbba, { 0xcb, 0xf2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe40a, gbc.sp());
        EXPECT(0xcbbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbba));
        EXPECT(0xf2, gbc.readMem(0xcbbb));
    }
